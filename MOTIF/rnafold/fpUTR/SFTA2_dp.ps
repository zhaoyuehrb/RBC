%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:27:21 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SFTA2)
} def

/sequence { (\
GGGGUGUAGAAACAGGCCUGUUAAGGAGAGGCCACCGGGACUUCAGUGUCUCCUCCAUCCCAGGAGCGCAGUGGCCACU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 18 0.023185003 ubox
1 19 0.034565921 ubox
1 36 0.011329774 ubox
1 44 0.003472908 ubox
1 56 0.012707862 ubox
1 61 0.995398275 ubox
1 76 0.018746275 ubox
1 79 0.011151572 ubox
2 17 0.023215824 ubox
2 18 0.036584814 ubox
2 19 0.035360567 ubox
2 35 0.011303071 ubox
2 36 0.010497303 ubox
2 43 0.003634352 ubox
2 55 0.012715641 ubox
2 60 0.996148172 ubox
2 61 0.023221180 ubox
2 75 0.018570039 ubox
2 76 0.010945508 ubox
2 78 0.013057303 ubox
2 79 0.005757593 ubox
3 17 0.036545077 ubox
3 18 0.037199142 ubox
3 35 0.010471706 ubox
3 36 0.018763051 ubox
3 42 0.003919369 ubox
3 54 0.012512815 ubox
3 59 0.996127050 ubox
3 60 0.023157898 ubox
3 75 0.010807697 ubox
3 76 0.017823656 ubox
3 78 0.006170680 ubox
3 79 0.022903047 ubox
4 13 0.030889124 ubox
4 17 0.037228814 ubox
4 35 0.018794489 ubox
4 41 0.003963014 ubox
4 53 0.012306183 ubox
4 58 0.995239160 ubox
4 59 0.023027842 ubox
4 69 0.005736815 ubox
4 75 0.017733623 ubox
4 78 0.025079927 ubox
5 12 0.030782325 ubox
5 14 0.054173674 ubox
5 16 0.034736597 ubox
5 34 0.017932997 ubox
5 40 0.003884981 ubox
5 57 0.995628607 ubox
5 68 0.005741033 ubox
5 70 0.012229290 ubox
5 73 0.004931622 ubox
5 74 0.015936387 ubox
5 77 0.024938689 ubox
6 13 0.065714093 ubox
6 33 0.008103809 ubox
6 56 0.992923974 ubox
6 58 0.005226923 ubox
6 67 0.005716590 ubox
6 69 0.012744067 ubox
6 76 0.024106135 ubox
7 12 0.063835118 ubox
7 57 0.005774269 ubox
7 66 0.003835304 ubox
7 68 0.012359184 ubox
7 74 0.003535377 ubox
8 54 0.896567148 ubox
9 52 0.016336646 ubox
9 53 0.912497330 ubox
9 55 0.176024311 ubox
10 51 0.015171340 ubox
10 54 0.168778552 ubox
11 22 0.008570054 ubox
12 21 0.009175235 ubox
12 49 0.008630803 ubox
12 72 0.005148405 ubox
13 20 0.009259341 ubox
13 48 0.008831695 ubox
13 71 0.005206197 ubox
14 19 0.008342481 ubox
14 47 0.007952126 ubox
15 33 0.996456305 ubox
15 36 0.006486998 ubox
16 32 0.997544074 ubox
16 35 0.004462619 ubox
17 26 0.038058635 ubox
17 31 0.997556592 ubox
18 25 0.038254478 ubox
18 28 0.004097216 ubox
18 30 0.997535261 ubox
19 24 0.038050453 ubox
19 25 0.003648206 ubox
19 27 0.007633760 ubox
19 29 0.993414863 ubox
21 27 0.921191528 ubox
21 28 0.077443873 ubox
21 29 0.010905522 ubox
22 26 0.831292483 ubox
22 27 0.077397446 ubox
22 28 0.017602798 ubox
22 29 0.003572498 ubox
24 54 0.005904506 ubox
25 53 0.006354192 ubox
25 79 0.009461913 ubox
26 52 0.006373147 ubox
26 78 0.010494438 ubox
27 51 0.006371352 ubox
27 79 0.038110332 ubox
28 44 0.004684433 ubox
28 50 0.006353961 ubox
28 52 0.005329727 ubox
28 78 0.041551190 ubox
29 43 0.004739405 ubox
29 49 0.006311508 ubox
29 51 0.005689339 ubox
30 36 0.003743458 ubox
30 42 0.004841834 ubox
30 50 0.005696532 ubox
30 76 0.068647245 ubox
31 35 0.003686949 ubox
31 41 0.004848655 ubox
31 47 0.005249516 ubox
31 49 0.005680935 ubox
31 75 0.068750069 ubox
32 39 0.005117249 ubox
32 46 0.005217560 ubox
32 48 0.004058290 ubox
32 74 0.068751413 ubox
33 38 0.005162739 ubox
33 48 0.005806430 ubox
33 73 0.068752700 ubox
34 47 0.008033063 ubox
34 72 0.068672997 ubox
35 46 0.008293757 ubox
35 71 0.068441056 ubox
35 74 0.004577189 ubox
36 68 0.014590106 ubox
36 73 0.004608470 ubox
37 44 0.009865479 ubox
37 50 0.020564588 ubox
37 51 0.009600578 ubox
37 52 0.962568217 ubox
37 53 0.221227706 ubox
37 54 0.013113690 ubox
37 55 0.006676015 ubox
37 67 0.010475946 ubox
37 76 0.012824239 ubox
37 79 0.004081746 ubox
38 43 0.007812240 ubox
38 44 0.004715848 ubox
38 49 0.020506283 ubox
38 50 0.008456353 ubox
38 51 0.971984294 ubox
38 52 0.222693699 ubox
38 53 0.014500245 ubox
38 54 0.003648895 ubox
38 75 0.012795078 ubox
38 76 0.020176909 ubox
38 78 0.004505903 ubox
38 79 0.003413230 ubox
39 49 0.005200391 ubox
39 50 0.998780640 ubox
39 51 0.021475744 ubox
39 52 0.013851965 ubox
39 75 0.020231966 ubox
39 78 0.003725320 ubox
40 47 0.021482369 ubox
40 49 0.998926421 ubox
40 51 0.011735865 ubox
40 72 0.007958699 ubox
41 46 0.021885018 ubox
41 48 0.998620900 ubox
41 71 0.008169358 ubox
41 74 0.015326127 ubox
42 70 0.008050870 ubox
42 73 0.014030851 ubox
43 74 0.020440916 ubox
44 73 0.025038050 ubox
45 72 0.025178089 ubox
46 69 0.018956169 ubox
47 68 0.018976707 ubox
47 70 0.025385559 ubox
48 67 0.018983917 ubox
48 69 0.025450096 ubox
49 68 0.025244405 ubox
50 66 0.029446479 ubox
51 65 0.029613585 ubox
52 64 0.029636816 ubox
53 63 0.029634546 ubox
53 66 0.075764143 ubox
54 62 0.028588196 ubox
54 65 0.077645871 ubox
55 64 0.077850297 ubox
56 63 0.077782401 ubox
62 79 0.853933690 ubox
63 76 0.123207948 ubox
63 78 0.947818461 ubox
63 79 0.078518582 ubox
64 75 0.117526882 ubox
64 78 0.086938193 ubox
65 79 0.031606686 ubox
66 72 0.075929363 ubox
66 75 0.979526934 ubox
66 78 0.034085114 ubox
67 71 0.075716710 ubox
67 73 0.068621640 ubox
67 74 0.979936250 ubox
68 72 0.044441780 ubox
68 75 0.111844309 ubox
69 74 0.112097487 ubox
70 79 0.030360589 ubox
71 78 0.033679798 ubox
72 77 0.031527335 ubox
73 79 0.004164973 ubox
74 78 0.004606691 ubox
1 61 0.9500000 lbox
2 60 0.9500000 lbox
3 59 0.9500000 lbox
4 58 0.9500000 lbox
5 57 0.9500000 lbox
6 56 0.9500000 lbox
8 54 0.9500000 lbox
9 53 0.9500000 lbox
15 33 0.9500000 lbox
16 32 0.9500000 lbox
17 31 0.9500000 lbox
18 30 0.9500000 lbox
19 29 0.9500000 lbox
21 27 0.9500000 lbox
22 26 0.9500000 lbox
37 52 0.9500000 lbox
38 51 0.9500000 lbox
39 50 0.9500000 lbox
40 49 0.9500000 lbox
41 48 0.9500000 lbox
62 79 0.9500000 lbox
63 78 0.9500000 lbox
66 75 0.9500000 lbox
67 74 0.9500000 lbox
showpage
end
%%EOF
