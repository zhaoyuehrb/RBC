%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:09:44 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PLPP6)
} def

/sequence { (\
AGUGCGGAAGCGGAAGAGGCUGCAGGGCCGGGAAGCCUCUGUUUGGUCCGGCCAGGUCCCGGGAUCCGGGCCGCCAGCUGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 21 0.017686882 ubox
1 79 0.225435595 ubox
2 11 0.023445422 ubox
2 20 0.019153942 ubox
2 52 0.009502854 ubox
2 71 0.009243456 ubox
2 74 0.005340362 ubox
2 78 0.238645923 ubox
2 81 0.154842649 ubox
3 10 0.023223512 ubox
3 12 0.160984370 ubox
3 19 0.017913846 ubox
3 24 0.036069463 ubox
3 51 0.009009848 ubox
3 70 0.009241537 ubox
3 73 0.005006529 ubox
3 76 0.047212257 ubox
3 77 0.227074456 ubox
3 80 0.149785304 ubox
3 82 0.511899843 ubox
4 11 0.213538610 ubox
4 20 0.023883058 ubox
4 23 0.040913954 ubox
4 42 0.012438930 ubox
4 52 0.006828271 ubox
4 74 0.248468694 ubox
4 75 0.040215063 ubox
4 78 0.184291548 ubox
4 79 0.022613344 ubox
4 81 0.873747747 ubox
5 10 0.213569085 ubox
5 12 0.052510659 ubox
5 19 0.023915794 ubox
5 22 0.040918418 ubox
5 41 0.013071137 ubox
5 50 0.024021377 ubox
5 51 0.004944076 ubox
5 68 0.009288398 ubox
5 73 0.252370710 ubox
5 77 0.185207941 ubox
5 80 0.874333298 ubox
5 82 0.014159956 ubox
6 11 0.053402309 ubox
6 21 0.030417527 ubox
6 40 0.013127409 ubox
6 49 0.053056113 ubox
6 67 0.009292543 ubox
6 72 0.248807454 ubox
6 75 0.196653142 ubox
6 79 0.870590030 ubox
6 81 0.013936397 ubox
7 20 0.026216761 ubox
7 39 0.013148002 ubox
7 48 0.053143620 ubox
7 66 0.009286288 ubox
7 71 0.247568209 ubox
7 74 0.196618823 ubox
7 78 0.867185953 ubox
8 38 0.012941119 ubox
8 44 0.018340772 ubox
8 47 0.052234125 ubox
8 65 0.008866444 ubox
9 21 0.288642720 ubox
9 43 0.021426483 ubox
9 79 0.024931235 ubox
10 20 0.298783904 ubox
10 23 0.802549689 ubox
10 36 0.013109477 ubox
10 42 0.022813944 ubox
10 47 0.017092688 ubox
10 52 0.004211111 ubox
10 74 0.379780498 ubox
10 78 0.027648446 ubox
10 81 0.234437831 ubox
11 19 0.298906428 ubox
11 22 0.803443577 ubox
11 35 0.013130522 ubox
11 41 0.022972140 ubox
11 45 0.048183431 ubox
11 46 0.018473832 ubox
11 50 0.008394210 ubox
11 61 0.008767479 ubox
11 68 0.054630107 ubox
11 73 0.382125472 ubox
11 77 0.028224386 ubox
11 80 0.234739291 ubox
11 82 0.007323225 ubox
12 21 0.802819129 ubox
12 40 0.019483091 ubox
12 43 0.008189742 ubox
12 44 0.048026936 ubox
12 49 0.020690013 ubox
12 53 0.007013588 ubox
12 60 0.008666504 ubox
12 67 0.055219401 ubox
12 72 0.380932454 ubox
12 75 0.034332860 ubox
12 79 0.233256452 ubox
12 81 0.013417661 ubox
13 20 0.800438933 ubox
13 39 0.018266761 ubox
13 42 0.008495112 ubox
13 43 0.047365442 ubox
13 44 0.017471605 ubox
13 48 0.020692025 ubox
13 52 0.007019118 ubox
13 59 0.008461214 ubox
13 66 0.055218062 ubox
13 71 0.379503173 ubox
13 74 0.034276182 ubox
13 78 0.232810841 ubox
14 38 0.016623708 ubox
14 42 0.043661863 ubox
14 43 0.016810989 ubox
14 47 0.020396567 ubox
14 57 0.005308198 ubox
14 65 0.054153212 ubox
15 21 0.084674599 ubox
15 40 0.103945102 ubox
15 42 0.008123974 ubox
15 79 0.020712637 ubox
16 20 0.085436787 ubox
16 39 0.107106148 ubox
16 48 0.003571783 ubox
16 58 0.006924216 ubox
16 66 0.010945067 ubox
16 78 0.021284435 ubox
17 38 0.107239629 ubox
17 44 0.005072300 ubox
17 47 0.003572351 ubox
17 57 0.006693945 ubox
17 65 0.010923384 ubox
17 79 0.018928983 ubox
18 29 0.024756611 ubox
18 37 0.107455019 ubox
18 43 0.005304995 ubox
18 48 0.019929914 ubox
18 49 0.010666477 ubox
18 53 0.064005908 ubox
18 58 0.039093881 ubox
18 59 0.013237366 ubox
18 60 0.053480515 ubox
18 67 0.010368836 ubox
18 72 0.018292226 ubox
18 75 0.239582791 ubox
18 78 0.014034361 ubox
18 79 0.163321069 ubox
19 28 0.024789260 ubox
19 36 0.107456388 ubox
19 42 0.003856360 ubox
19 47 0.020467043 ubox
19 48 0.010615567 ubox
19 52 0.064068677 ubox
19 57 0.054392558 ubox
19 58 0.015703300 ubox
19 59 0.053384607 ubox
19 66 0.010336082 ubox
19 71 0.018361260 ubox
19 74 0.239927942 ubox
19 78 0.177487065 ubox
19 81 0.049879159 ubox
20 27 0.024787366 ubox
20 35 0.107434393 ubox
20 41 0.003696773 ubox
20 46 0.023111846 ubox
20 51 0.064052060 ubox
20 55 0.025652732 ubox
20 56 0.055108578 ubox
20 62 0.013923098 ubox
20 63 0.006823905 ubox
20 70 0.016910082 ubox
20 73 0.239621272 ubox
20 77 0.178305317 ubox
20 80 0.049801359 ubox
21 25 0.006657262 ubox
21 26 0.024341442 ubox
21 30 0.004097880 ubox
21 34 0.106787351 ubox
21 45 0.021911206 ubox
21 50 0.063284164 ubox
21 54 0.026897113 ubox
21 55 0.048339222 ubox
21 61 0.013876908 ubox
21 62 0.006802120 ubox
21 69 0.004720248 ubox
21 76 0.177810265 ubox
21 82 0.071473908 ubox
22 28 0.035566485 ubox
22 29 0.007020250 ubox
22 42 0.048801567 ubox
22 44 0.003313037 ubox
22 49 0.022528713 ubox
22 52 0.027775733 ubox
22 53 0.017473536 ubox
22 57 0.383159286 ubox
22 60 0.010009855 ubox
22 71 0.020924689 ubox
22 72 0.004006855 ubox
22 74 0.116544146 ubox
22 75 0.138114103 ubox
22 78 0.050493802 ubox
22 81 0.183265453 ubox
23 27 0.035416954 ubox
23 41 0.052433766 ubox
23 51 0.030447205 ubox
23 56 0.402492958 ubox
23 70 0.018713637 ubox
23 73 0.160955655 ubox
23 77 0.050695730 ubox
23 80 0.183435270 ubox
24 40 0.052646303 ubox
24 79 0.183312790 ubox
25 38 0.010574062 ubox
25 39 0.052347235 ubox
25 44 0.003689164 ubox
25 49 0.171085207 ubox
25 53 0.062013425 ubox
25 67 0.006819688 ubox
25 72 0.011722941 ubox
25 75 0.027890623 ubox
25 78 0.182625215 ubox
26 37 0.053028716 ubox
26 38 0.007129445 ubox
26 43 0.004169518 ubox
26 48 0.172308586 ubox
26 49 0.005575203 ubox
26 52 0.043918992 ubox
26 53 0.973928087 ubox
26 66 0.006798980 ubox
26 67 0.003999103 ubox
26 71 0.009260651 ubox
26 72 0.017309604 ubox
26 74 0.015526556 ubox
27 36 0.053231733 ubox
27 37 0.005152427 ubox
27 42 0.004357842 ubox
27 47 0.172276618 ubox
27 48 0.005562367 ubox
27 52 0.976117239 ubox
27 65 0.005755854 ubox
27 66 0.003996960 ubox
27 71 0.017464088 ubox
28 35 0.053320967 ubox
28 41 0.004398595 ubox
28 46 0.172428961 ubox
28 51 0.977109405 ubox
28 62 0.007979062 ubox
28 69 0.008516813 ubox
28 70 0.017563227 ubox
29 41 0.004080072 ubox
29 45 0.172348265 ubox
29 50 0.977074329 ubox
29 61 0.008101711 ubox
29 68 0.008525914 ubox
29 69 0.017550763 ubox
30 37 0.027784667 ubox
30 38 0.018833344 ubox
30 39 0.026678336 ubox
30 40 0.012460566 ubox
30 43 0.005950179 ubox
30 44 0.162464322 ubox
30 48 0.003351180 ubox
30 49 0.974326205 ubox
30 60 0.008214015 ubox
30 67 0.008352113 ubox
31 36 0.027976729 ubox
31 37 0.022383521 ubox
31 38 0.028225323 ubox
31 39 0.014156678 ubox
31 40 0.067793538 ubox
31 42 0.005299861 ubox
31 43 0.140185796 ubox
31 44 0.010477156 ubox
31 47 0.003795191 ubox
31 48 0.971063160 ubox
31 49 0.073563371 ubox
31 59 0.008215113 ubox
31 66 0.008160298 ubox
31 67 0.017637352 ubox
32 36 0.022081937 ubox
32 37 0.029122872 ubox
32 38 0.011639725 ubox
32 39 0.074319476 ubox
32 42 0.115551278 ubox
32 43 0.016089850 ubox
32 44 0.023985843 ubox
32 47 0.496652229 ubox
32 48 0.103509880 ubox
32 58 0.008204149 ubox
32 65 0.006874836 ubox
32 66 0.017731677 ubox
33 38 0.069667858 ubox
33 42 0.018999629 ubox
33 43 0.029689023 ubox
33 44 0.327819784 ubox
33 47 0.085678942 ubox
33 57 0.006417984 ubox
33 65 0.017678641 ubox
34 40 0.125367221 ubox
34 42 0.028672406 ubox
34 43 0.362394543 ubox
34 44 0.036466849 ubox
35 39 0.124437849 ubox
35 42 0.373324067 ubox
35 43 0.029524311 ubox
35 47 0.812516762 ubox
35 57 0.005126134 ubox
36 41 0.373029019 ubox
36 46 0.897838426 ubox
36 56 0.006947458 ubox
36 62 0.016611855 ubox
36 63 0.007980693 ubox
37 45 0.897751156 ubox
37 46 0.036704412 ubox
37 55 0.006944079 ubox
37 61 0.016583374 ubox
37 62 0.007970057 ubox
38 45 0.031222885 ubox
38 46 0.038566409 ubox
38 54 0.005840824 ubox
38 61 0.007462463 ubox
39 45 0.043058021 ubox
39 46 0.018569569 ubox
39 51 0.004059938 ubox
39 77 0.005182320 ubox
40 45 0.017427180 ubox
40 50 0.004085423 ubox
40 61 0.003254314 ubox
40 76 0.005310513 ubox
41 49 0.004174443 ubox
41 52 0.003512089 ubox
41 57 0.019967698 ubox
41 60 0.004107595 ubox
41 71 0.003612560 ubox
41 75 0.005404280 ubox
41 78 0.005868705 ubox
41 81 0.005459307 ubox
42 51 0.003580503 ubox
42 56 0.058890001 ubox
42 70 0.004852945 ubox
42 77 0.005059212 ubox
42 80 0.005315992 ubox
43 55 0.078307323 ubox
43 69 0.005701185 ubox
43 76 0.003903257 ubox
43 77 0.027615784 ubox
44 54 0.087785319 ubox
44 68 0.006054118 ubox
44 73 0.013537605 ubox
44 76 0.035861016 ubox
44 80 0.004466681 ubox
45 53 0.089557019 ubox
45 59 0.006576153 ubox
45 67 0.006244455 ubox
45 72 0.023459342 ubox
45 75 0.037996992 ubox
45 79 0.008616038 ubox
46 52 0.089531033 ubox
46 58 0.006893889 ubox
46 66 0.006219821 ubox
46 71 0.023572919 ubox
46 74 0.037876169 ubox
46 78 0.009050719 ubox
47 51 0.083755022 ubox
47 63 0.004841172 ubox
47 64 0.003542661 ubox
47 70 0.023619131 ubox
47 73 0.022295712 ubox
47 77 0.008944041 ubox
48 56 0.010115484 ubox
48 62 0.007201467 ubox
48 69 0.023683866 ubox
49 55 0.010328170 ubox
49 61 0.007453367 ubox
49 68 0.023685434 ubox
49 73 0.031256191 ubox
49 80 0.008480954 ubox
50 60 0.007668094 ubox
50 67 0.023671555 ubox
50 72 0.039558794 ubox
50 75 0.169082850 ubox
50 79 0.014145274 ubox
51 59 0.007612884 ubox
51 66 0.023444942 ubox
51 71 0.039623291 ubox
51 74 0.169514975 ubox
51 78 0.020936655 ubox
51 81 0.007701074 ubox
52 62 0.010287252 ubox
52 63 0.019800135 ubox
52 70 0.039520479 ubox
52 73 0.168764459 ubox
52 77 0.020974692 ubox
52 80 0.007548156 ubox
53 61 0.010311845 ubox
53 62 0.019888182 ubox
53 68 0.003596681 ubox
53 69 0.039356468 ubox
55 66 0.032768217 ubox
55 67 0.022284295 ubox
55 72 0.733411075 ubox
55 75 0.495086112 ubox
56 65 0.033648638 ubox
56 66 0.022225679 ubox
56 71 0.734662101 ubox
56 74 0.495581310 ubox
57 64 0.039219221 ubox
57 70 0.144793170 ubox
57 73 0.475309993 ubox
58 63 0.039189514 ubox
58 69 0.120405332 ubox
58 70 0.981832399 ubox
59 68 0.089322543 ubox
59 69 0.989595527 ubox
59 70 0.005387926 ubox
60 68 0.992933158 ubox
60 69 0.004717076 ubox
61 67 0.996018291 ubox
62 66 0.979942637 ubox
71 77 0.004666656 ubox
72 82 0.010519487 ubox
73 81 0.034237445 ubox
74 80 0.034208720 ubox
4 81 0.9500000 lbox
5 80 0.9500000 lbox
6 79 0.9500000 lbox
7 78 0.9500000 lbox
10 23 0.9500000 lbox
11 22 0.9500000 lbox
12 21 0.9500000 lbox
13 20 0.9500000 lbox
26 53 0.9500000 lbox
27 52 0.9500000 lbox
28 51 0.9500000 lbox
29 50 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
35 47 0.9500000 lbox
36 46 0.9500000 lbox
37 45 0.9500000 lbox
55 72 0.9500000 lbox
56 71 0.9500000 lbox
58 70 0.9500000 lbox
59 69 0.9500000 lbox
60 68 0.9500000 lbox
61 67 0.9500000 lbox
62 66 0.9500000 lbox
showpage
end
%%EOF
