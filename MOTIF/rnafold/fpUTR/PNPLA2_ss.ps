%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:29:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGCCCCAGUCAGACGCAGGCAGCCCCAAAGCCUGAACAGGCAGGGCCAGACCCAGCUUCUUCGCCUCCGCCAGCGGGGACCCCGAGCUAGAGCCGCAGCGGGACCUGCCCGGCCCCCGGCUCCAGCGAGCGAGCGGCGAGCAGGCGGCUCACAGAGGCCUGGCCGCCCACGGAACCCGGGGCCCGGCGGCCGCCGCCGCG\
) } def
/len { sequence length } bind def

/coor [
[112.31957245 253.22004700]
[110.93554688 238.28404236]
[109.55152130 223.34802246]
[108.16750336 208.41201782]
[106.78347778 193.47599792]
[105.39945221 178.53999329]
[104.01542664 163.60397339]
[102.51643372 148.67906189]
[100.90256500 133.76612854]
[93.92947388 126.55359650]
[90.51091003 118.39595032]
[79.27147675 128.32948303]
[68.03204346 138.26301575]
[71.52168274 151.81182861]
[68.84485626 165.47692871]
[60.58012009 176.60148621]
[48.38675690 183.04769897]
[34.67189407 183.60751343]
[22.11538887 178.22860718]
[10.72431564 187.98788452]
[-0.66675788 197.74714661]
[-12.05783176 207.50642395]
[-23.44890594 217.26570129]
[-21.23709488 232.53369141]
[-27.65168762 246.56423950]
[-40.64581299 254.88027954]
[-56.07308578 254.82815552]
[-69.01072693 246.42453003]
[-75.33037567 232.35095215]
[-73.01546478 217.09825134]
[-62.80466080 205.53352356]
[-47.95620346 201.34701538]
[-33.20817947 205.87463379]
[-21.81710625 196.11535645]
[-10.42603207 186.35607910]
[0.96504140 176.59680176]
[12.35611534 166.83752441]
[8.99913120 151.03372192]
[14.09799194 135.60409546]
[26.35141754 124.78811646]
[42.47886658 121.60774994]
[58.09850693 127.02358246]
[69.33794403 117.09004974]
[80.57737732 107.15651703]
[81.14524841 83.49416351]
[106.43054199 71.29291534]
[132.47822571 90.71932983]
[134.77909851 75.89685059]
[137.07998657 61.07436752]
[139.38085938 46.25188446]
[141.68173218 31.42940140]
[143.98260498 16.60692024]
[130.50431824 23.18990326]
[116.88688660 16.89977646]
[113.16099548 2.36988497]
[122.07115936 -9.69697189]
[137.05409241 -10.41227818]
[147.07321167 0.75060004]
[150.50746155 -13.85097122]
[153.94172668 -28.45254135]
[157.37597656 -43.05411148]
[160.81024170 -57.65568161]
[164.24450684 -72.25725555]
[167.11419678 -86.98019409]
[169.41506958 -101.80267334]
[171.71594238 -116.62515259]
[174.01681519 -131.44763184]
[176.31768799 -146.27012634]
[178.61856079 -161.09260559]
[170.49186707 -179.53636169]
[183.24436951 -194.06689453]
[185.08769226 -208.95320129]
[186.93101501 -223.83950806]
[188.77433777 -238.72581482]
[170.36051941 -253.36593628]
[164.85054016 -276.06216431]
[174.36323547 -297.20742798]
[165.69662476 -309.45037842]
[157.03001404 -321.69332886]
[148.36340332 -333.93627930]
[134.27697754 -343.37072754]
[139.44319153 -359.51837158]
[156.38993835 -359.02416992]
[160.60636902 -342.60290527]
[169.27296448 -330.35995483]
[177.93957520 -318.11700439]
[186.60618591 -305.87402344]
[193.51264954 -308.02536011]
[200.71141052 -308.73623657]
[203.92039490 -323.38894653]
[207.12939453 -338.04168701]
[202.52354431 -353.17761230]
[212.80448914 -363.95498657]
[216.01348877 -378.60769653]
[219.22248840 -393.26043701]
[222.43148804 -407.91314697]
[225.64047241 -422.56588745]
[228.84947205 -437.21859741]
[216.40286255 -450.39706421]
[214.37208557 -468.25183105]
[223.38227844 -483.61764526]
[239.66561890 -490.44183350]
[242.42185974 -505.18643188]
[245.17810059 -519.93103027]
[247.93435669 -534.67565918]
[240.09056091 -548.67041016]
[246.27482605 -563.47363281]
[261.74310303 -567.72949219]
[274.62945557 -558.17321777]
[275.04855347 -542.13568115]
[262.67895508 -531.91937256]
[259.92269897 -517.17480469]
[257.16647339 -502.43020630]
[254.41021729 -487.68560791]
[263.97280884 -480.19665527]
[269.47451782 -469.28713989]
[269.81555176 -457.00137329]
[264.86978149 -445.67108154]
[255.52026367 -437.47274780]
[243.50219727 -434.00961304]
[240.29319763 -419.35687256]
[237.08421326 -404.70416260]
[233.87521362 -390.05142212]
[230.66621399 -375.39871216]
[227.45721436 -360.74597168]
[232.29260254 -346.65811157]
[221.78211975 -334.83270264]
[218.57312012 -320.17996216]
[215.36413574 -305.52725220]
[224.12455750 -299.96566772]
[230.92839050 -292.09744263]
[235.18797302 -282.57989502]
[236.52899170 -272.21374512]
[234.82334900 -261.87570190]
[230.20123291 -252.44432068]
[223.04132080 -244.72537231]
[213.93978882 -239.38298035]
[203.66064453 -236.88249207]
[201.81732178 -221.99618530]
[199.97399902 -207.10987854]
[198.13067627 -192.22357178]
[205.11674500 -184.75717163]
[206.87380981 -174.46130371]
[202.58296204 -164.69824219]
[193.44105530 -158.79173279]
[191.14016724 -143.96923828]
[188.83929443 -129.14675903]
[186.53842163 -114.32427979]
[184.23754883 -99.50180054]
[181.93667603 -84.67931366]
[195.41496277 -91.26229858]
[209.03239441 -84.97217560]
[212.75828552 -70.44228363]
[203.84811401 -58.37542343]
[188.86518860 -57.66011810]
[178.84606934 -68.82299805]
[175.41181946 -54.22142410]
[171.97755432 -39.61985397]
[168.54328918 -25.01828384]
[165.10903931 -10.41671276]
[161.67477417 4.18485832]
[158.80508423 18.90779495]
[156.50421143 33.73027802]
[154.20333862 48.55275726]
[151.90246582 63.37524033]
[149.60159302 78.19772339]
[147.30070496 93.02020264]
[152.39482117 107.12871552]
[163.63426208 117.06224823]
[174.87368774 126.99578094]
[186.11312866 136.92930603]
[194.62083435 140.27015686]
[197.44764709 147.10339355]
[208.53277588 157.20883179]
[219.61791992 167.31427002]
[235.39656067 173.51672363]
[233.80447388 190.39575195]
[217.14434814 193.53845215]
[209.51248169 178.39939880]
[198.42735291 168.29396057]
[187.34220886 158.18853760]
[176.17959595 148.16874695]
[164.94015503 138.23521423]
[153.70072937 128.30168152]
[142.46128845 118.36814880]
[135.79983521 121.81417847]
[122.47694397 128.70623779]
[115.81549835 132.15226746]
[117.42935944 147.06520081]
[121.46591187 155.26571655]
[118.95143890 162.21995544]
[120.33546448 177.15596008]
[121.71949005 192.09197998]
[123.10351562 207.02798462]
[124.48754120 221.96400452]
[125.87156677 236.90000916]
[127.25558472 251.83602905]
[140.21318054 260.59014893]
[144.46247864 275.63934326]
[137.99711609 289.87777710]
[123.86983490 296.58251953]
[108.75109100 292.58779907]
[99.77950287 279.77981567]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 197]
[2 196]
[3 195]
[4 194]
[5 193]
[6 192]
[7 191]
[8 189]
[9 188]
[11 44]
[12 43]
[13 42]
[19 37]
[20 36]
[21 35]
[22 34]
[23 33]
[47 167]
[48 166]
[49 165]
[50 164]
[51 163]
[52 162]
[58 161]
[59 160]
[60 159]
[61 158]
[62 157]
[63 156]
[64 150]
[65 149]
[66 148]
[67 147]
[68 146]
[69 145]
[71 141]
[72 140]
[73 139]
[74 138]
[77 87]
[78 86]
[79 85]
[80 84]
[89 129]
[90 128]
[91 127]
[93 125]
[94 124]
[95 123]
[96 122]
[97 121]
[98 120]
[102 114]
[103 113]
[104 112]
[105 111]
[168 185]
[169 184]
[170 183]
[171 182]
[173 181]
[174 180]
[175 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
