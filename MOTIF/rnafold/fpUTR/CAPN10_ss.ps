%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:45:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCCUGGUUACCAAUGGGAGACUAGCGGGCCGGCGUACUGGCCUGGUCCAGCACCUGCGGGGCCCUCGGGCUUGGAGGGCUGGGCCGGGCGGGGAACGGGCGGGGCGGGCCGGAGGCGGCGGCGGCUGACUCGCCUUCUCUCCGGGGCUGCGACCCCGAGGCAACCGGCUGCAGAUGGGAGCCCGCGGAGCCGAGG\
) } def
/len { sequence length } bind def

/coor [
[87.78175354 534.83941650]
[74.56739807 524.21783447]
[81.11576080 508.57958984]
[81.59409332 493.58721924]
[82.07242584 478.59484863]
[82.43120575 463.59915161]
[82.67040253 448.60104370]
[82.90959930 433.60296631]
[83.14879608 418.60485840]
[80.10854340 411.85894775]
[83.51329803 403.37002563]
[83.99163055 388.37765503]
[75.94335175 379.33734131]
[76.22623444 366.83578491]
[85.23419189 357.59381104]
[85.95154572 342.61096191]
[86.66889191 327.62814331]
[87.38623810 312.64529419]
[75.67253876 303.48413086]
[71.55066681 289.01089478]
[76.80292511 274.71868896]
[89.61183167 266.16076660]
[90.32917786 251.17791748]
[91.04652405 236.19508362]
[91.40530396 221.19937134]
[91.40530396 206.19937134]
[91.40530396 191.19937134]
[91.40530396 176.19937134]
[88.25786591 169.50277710]
[91.52681732 160.96064758]
[91.76601410 145.96255493]
[92.00521088 130.96446228]
[92.24440765 115.96636963]
[84.91769409 102.87747192]
[72.00778198 95.23979187]
[59.09786987 87.60211182]
[40.69056320 87.83859253]
[32.67178726 72.23431396]
[19.64172173 64.80346680]
[3.82093620 64.68817902]
[-3.40189934 51.66205597]
[-16.43196487 44.23121262]
[-29.46203041 36.80037308]
[-42.49209595 29.36953163]
[-55.52215958 21.93869019]
[-68.55222321 14.50784874]
[-81.58229065 7.07700777]
[-94.61235809 -0.35383323]
[-107.64241791 -7.78467417]
[-120.67248535 -15.21551514]
[-133.70254517 -22.64635658]
[-146.73262024 -30.07719803]
[-155.74897766 -31.61321068]
[-159.90985107 -37.73184967]
[-172.81976318 -45.36952972]
[-185.72967529 -53.00720978]
[-201.54661560 -53.37477112]
[-208.56082153 -66.51441956]
[-221.47073364 -74.15209961]
[-234.38064575 -81.78977966]
[-247.29055786 -89.42745972]
[-256.28128052 -91.10705566]
[-260.34405518 -97.29126740]
[-273.13052368 -105.13385010]
[-289.52932739 -105.02853394]
[-297.58535767 -119.31252289]
[-289.01126099 -133.29167175]
[-272.62731934 -132.58543396]
[-265.28796387 -117.92032623]
[-252.50148010 -110.07774353]
[-239.65287781 -102.33737183]
[-226.74296570 -94.69969177]
[-213.83305359 -87.06201172]
[-200.92314148 -79.42433167]
[-186.02960205 -79.60306549]
[-178.09199524 -65.91712189]
[-165.18208313 -58.27944183]
[-152.27217102 -50.64176178]
[-139.30177307 -43.10726166]
[-126.27171326 -35.67642212]
[-113.24164581 -28.24558067]
[-100.21157837 -20.81473923]
[-87.18151855 -13.38389874]
[-74.15145111 -5.95305729]
[-61.12138367 1.47778368]
[-48.09132004 8.90862465]
[-35.06125259 16.33946609]
[-22.03118896 23.77030754]
[-9.00112343 31.20114899]
[4.02894163 38.63198853]
[18.91773033 38.21577454]
[27.07256317 51.77340317]
[40.10263062 59.20424652]
[51.85655594 56.31511688]
[62.77603149 62.40887451]
[66.73554993 74.69219971]
[79.64546204 82.32987976]
[92.55537415 89.96755981]
[96.49562836 85.82614899]
[102.55689240 83.48841095]
[109.82933044 83.95532990]
[122.35921478 75.70899200]
[134.88909912 67.46266174]
[147.41897583 59.21632385]
[159.94886780 50.96998978]
[172.41259766 42.62400818]
[184.80938721 34.17891312]
[187.48660278 14.27710819]
[203.67669678 2.92015028]
[222.70538330 7.04873180]
[234.68411255 -1.97955477]
[246.66285706 -11.00784111]
[258.64157104 -20.03612900]
[270.62033081 -29.06441498]
[282.59906006 -38.09270096]
[294.57778931 -47.12098694]
[299.55484009 -54.79451370]
[306.82028198 -56.19592285]
[318.94146729 -65.03204346]
[325.53524780 -79.41371918]
[340.37771606 -80.65868378]
[352.49890137 -89.49480438]
[364.62008667 -98.33092499]
[376.74127197 -107.16704559]
[388.86245728 -116.00316620]
[392.75738525 -131.56623840]
[407.41275024 -138.09309387]
[421.58618164 -130.57690430]
[424.40505981 -114.78343964]
[413.70697021 -102.82809448]
[397.69857788 -103.88198853]
[385.57739258 -95.04586792]
[373.45620728 -86.20974731]
[361.33502197 -77.37362671]
[349.21383667 -68.53750610]
[343.48706055 -54.78784561]
[327.77758789 -52.91086197]
[315.65640259 -44.07474136]
[303.60607910 -35.14225388]
[291.62734985 -26.11396790]
[279.64859009 -17.08568192]
[267.66986084 -8.05739498]
[255.69113159 0.97089142]
[243.71240234 9.99917793]
[231.73367310 19.02746391]
[233.09806824 29.22143555]
[230.07856750 39.13759613]
[223.15724182 46.96223450]
[213.53605652 51.23514557]
[202.92851257 51.12185669]
[193.25447083 46.57570267]
[180.85768127 55.02079773]
[177.09530640 61.39223099]
[168.19519043 63.49987030]
[155.66531372 71.74620819]
[143.13543701 79.99253845]
[130.60554504 88.23887634]
[118.07566833 96.48521423]
[132.94549561 94.51339722]
[145.29890442 103.02183533]
[148.75778198 117.61759186]
[141.53631592 130.76484680]
[127.36296082 135.67565918]
[113.55545044 129.81454468]
[107.24250031 116.20556641]
[107.00330353 131.20365906]
[106.76410675 146.20175171]
[106.52490997 161.19984436]
[106.40530396 176.19937134]
[106.40530396 191.19937134]
[106.40530396 206.19937134]
[106.40530396 221.19937134]
[109.02934265 225.73840332]
[109.58623505 230.36648560]
[108.38998413 234.27865601]
[106.02936554 236.91242981]
[105.31201172 251.89526367]
[104.59466553 266.87811279]
[116.52737427 276.62060547]
[120.39017487 291.34924316]
[114.90443420 305.36245728]
[102.36907959 313.36264038]
[101.65172577 328.34548950]
[100.93437958 343.32830811]
[100.21703339 358.31115723]
[109.03033447 374.47317505]
[98.98400116 388.85598755]
[98.50566864 403.84835815]
[98.14688873 418.84405518]
[97.90769196 433.84216309]
[97.66849518 448.84024048]
[97.42929840 463.83834839]
[100.42418671 472.48037720]
[97.06479645 479.07318115]
[96.58646393 494.06555176]
[96.10813141 509.05792236]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 196]
[4 195]
[5 194]
[6 192]
[7 191]
[8 190]
[9 189]
[11 188]
[12 187]
[15 185]
[16 184]
[17 183]
[18 182]
[22 178]
[23 177]
[24 176]
[25 172]
[26 171]
[27 170]
[28 169]
[30 168]
[31 167]
[32 166]
[33 165]
[34 98]
[35 97]
[36 96]
[38 93]
[39 92]
[41 90]
[42 89]
[43 88]
[44 87]
[45 86]
[46 85]
[47 84]
[48 83]
[49 82]
[50 81]
[51 80]
[52 79]
[54 78]
[55 77]
[56 76]
[58 74]
[59 73]
[60 72]
[61 71]
[63 70]
[64 69]
[101 158]
[102 157]
[103 156]
[104 155]
[105 154]
[106 152]
[107 151]
[110 145]
[111 144]
[112 143]
[113 142]
[114 141]
[115 140]
[116 139]
[118 138]
[119 137]
[121 135]
[122 134]
[123 133]
[124 132]
[125 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
