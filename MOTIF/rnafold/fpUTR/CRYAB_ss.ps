%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:11:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGAGGCACCAAACGGCCUGGGUGGAUAGAAGGGGGACAAGGAGGCACACCCAGGCCGGCAAAGAGCAGGUAUCAGCACUGCAAGCACCAAGUGUGUCUUGAGCUCAGUGAGUACUGGGUAUGUGUCACAUUGCCAAAUCCCGGAUCACAAGUCUCCAUGAACUGCUGGUGAGCUAGGAUAAUAAAACCCCUGACAUCACCAUUCCAGAAGCUUCACAAGACUGCAUAUAUAAGGGGCUGGCUGUAGCU\
GCAGCUGAAGGAGCUGACCAGCCAGCUGACCCCUCACACUCACCUAGCCACC\
) } def
/len { sequence length } bind def

/coor [
[-62.89688492 224.39874268]
[-69.06078339 226.60226440]
[-75.54363251 227.36654663]
[-82.01483917 226.66081238]
[-88.14620972 224.52903748]
[-93.62864685 221.08729553]
[-98.18768311 216.51753235]
[-111.89501190 222.60926819]
[-125.60234070 228.70100403]
[-139.30966187 234.79272461]
[-148.77833557 247.46769714]
[-163.55102539 245.56593323]
[-177.25834656 251.65765381]
[-190.96568298 257.74938965]
[-204.67300415 263.84112549]
[-203.12602234 285.47668457]
[-212.38882446 305.96798706]
[-230.91822815 320.06881714]
[-254.71154785 323.78451538]
[-278.16189575 315.47534180]
[-289.49813843 325.29824829]
[-300.83438110 335.12115479]
[-312.17062378 344.94406128]
[-323.50686646 354.76696777]
[-334.84310913 364.58987427]
[-346.17935181 374.41281128]
[-357.51559448 384.23571777]
[-368.85183716 394.05862427]
[-380.18807983 403.88153076]
[-391.52432251 413.70443726]
[-384.78439331 427.19607544]
[-381.61224365 441.94015503]
[-382.20727539 457.00988770]
[-386.53210449 471.45797729]
[-394.31484985 484.37615967]
[-405.06628418 494.95242310]
[-418.11056519 502.52194214]
[-432.62771606 506.60885620]
[-447.70520020 506.95629883]
[-462.39520264 503.54238892]
[-475.77429199 496.58175659]
[-487.00146484 486.51196289]
[-495.37100220 473.96594238]
[-500.35675049 459.73242188]
[-501.64529419 444.70611572]
[-499.15563965 429.83154297]
[-493.04431152 416.04379272]
[-483.69543457 404.20953369]
[-471.69674683 395.07269287]
[-457.80242920 389.20761108]
[-442.88595581 386.98297119]
[-427.88491821 388.53863525]
[-413.74234009 393.77679443]
[-401.34722900 402.36819458]
[-390.01098633 392.54528809]
[-378.67474365 382.72238159]
[-367.33850098 372.89947510]
[-356.00225830 363.07656860]
[-344.66601562 353.25363159]
[-333.32977295 343.43072510]
[-321.99353027 333.60781860]
[-310.65728760 323.78491211]
[-299.32104492 313.96200562]
[-287.98480225 304.13909912]
[-290.38955688 297.03506470]
[-304.59759521 301.84457397]
[-316.62414551 310.80908203]
[-328.86618042 302.14120483]
[-324.40536499 287.81985474]
[-309.40710449 287.63653564]
[-295.19906616 282.82702637]
[-297.60382080 275.72299194]
[-312.57574463 274.80557251]
[-327.54766846 273.88815308]
[-342.51959229 272.97073364]
[-357.49597168 272.12966919]
[-372.47647095 271.36499023]
[-386.82385254 279.30764771]
[-400.73464966 270.62307739]
[-399.89865112 254.24523926]
[-385.17587280 247.02226257]
[-371.71182251 256.38449097]
[-356.73132324 257.14916992]
[-349.92617798 254.36639404]
[-341.60217285 257.99880981]
[-326.63024902 258.91622925]
[-311.65832520 259.83364868]
[-296.68640137 260.75106812]
[-291.58895874 250.21577454]
[-284.34603882 241.26031494]
[-275.40270996 234.30119324]
[-265.27947998 229.63685608]
[-254.54257202 227.43556213]
[-243.77217102 227.73039246]
[-233.53129578 230.42178345]
[-224.33630371 235.28710938]
[-216.63087463 241.99644470]
[-210.76473999 250.13378906]
[-197.05740356 244.04206848]
[-183.35008240 237.95033264]
[-169.64276123 231.85859680]
[-161.15452576 219.61935425]
[-145.40139771 221.08540344]
[-131.69407654 214.99366760]
[-117.98674011 208.90194702]
[-104.27941132 202.81021118]
[-98.32427216 180.06207275]
[-77.14608002 169.25010681]
[-54.73690796 177.95962524]
[-41.64573288 170.63697815]
[-28.55455780 163.31433105]
[-24.76399803 148.95581055]
[-11.59199810 141.34312439]
[3.44284344 145.41636658]
[16.53401947 138.09371948]
[29.62519646 130.77107239]
[42.71637344 123.44843292]
[55.80754852 116.12578583]
[68.89872742 108.80314636]
[68.44743347 75.37311554]
[101.45617676 52.29416275]
[95.92861938 38.34976959]
[90.40106201 24.40537453]
[84.87350464 10.46098232]
[79.34594727 -3.48341107]
[65.80390930 -5.89275789]
[55.29563141 -14.59944248]
[50.48778915 -27.25554085]
[52.53193665 -40.52953720]
[60.79074860 -50.98315811]
[55.40570831 -64.98320770]
[43.22990417 -75.08570099]
[45.88228226 -89.74224091]
[40.49724197 -103.74228668]
[29.16768074 -116.35487366]
[38.15103149 -130.73318481]
[54.45426941 -126.08122253]
[54.49729156 -109.12732697]
[59.88233185 -95.12728119]
[71.67295837 -86.02616119]
[69.40575409 -70.36824799]
[74.79079437 -56.36819839]
[90.79794312 -52.62433243]
[101.51257324 -39.93791580]
[102.54568481 -23.19756126]
[93.29034424 -9.01096916]
[98.81790161 4.93342400]
[104.34545898 18.87781715]
[109.87301636 32.82221222]
[115.40057373 46.76660538]
[122.73721313 48.32344818]
[118.09720612 34.05914307]
[128.13053894 22.90870285]
[142.80374146 26.02271080]
[147.44343567 40.28711700]
[137.41047668 51.43713379]
[144.74711609 52.99397659]
[155.46134949 42.49611282]
[166.17558289 31.99824715]
[176.88983154 21.50038338]
[187.60406494 11.00251770]
[186.18751526 -2.36092973]
[192.61775208 -13.93920708]
[204.36117554 -19.63025475]
[217.04972839 -17.56538582]
[227.87048340 -27.95342064]
[238.69123840 -38.34145737]
[249.51199341 -48.72949219]
[260.11859131 -59.33609390]
[270.50662231 -70.15684509]
[280.89465332 -80.97760010]
[284.88250732 -100.77140045]
[303.72811890 -105.22800446]
[313.89324951 -116.25840759]
[324.05841064 -127.28881073]
[334.22357178 -138.31921387]
[344.38870239 -149.34962463]
[354.55386353 -160.38002014]
[353.53332520 -177.86808777]
[365.26428223 -190.41851807]
[382.10437012 -190.57290649]
[392.15649414 -201.70642090]
[402.20858765 -212.83993530]
[412.26071167 -223.97344971]
[406.90847778 -238.31263733]
[408.84457397 -253.49519348]
[417.62408447 -266.03228760]
[431.22955322 -273.04296875]
[446.53454590 -272.91625977]
[460.02206421 -265.68127441]
[468.59280396 -253.00053406]
[470.27725220 -237.78799438]
[464.68835449 -223.53939819]
[453.11035156 -213.52894592]
[438.20385742 -210.05699158]
[423.39422607 -213.92134094]
[413.34210205 -202.78782654]
[403.29000854 -191.65431213]
[393.23788452 -180.52079773]
[395.69000244 -167.90135193]
[390.36090088 -155.98930359]
[378.98477173 -149.20783997]
[365.58425903 -150.21487427]
[355.41909790 -139.18447876]
[345.25396729 -128.15406799]
[335.08880615 -117.12366486]
[324.92367554 -106.09326172]
[314.75851440 -95.06285858]
[316.09231567 -84.99515533]
[311.59420776 -75.64640808]
[302.52008057 -70.17987061]
[291.71542358 -70.58956909]
[281.32739258 -59.76881409]
[270.93936157 -48.94805908]
[270.83517456 -46.19515991]
[269.66226196 -43.31616211]
[267.36688232 -40.70830154]
[264.03646851 -38.78120804]
[259.90002441 -37.90873718]
[249.07926941 -27.52070236]
[238.25851440 -17.13266754]
[227.43775940 -6.74463177]
[227.79867554 10.09230995]
[215.61302185 22.20174408]
[198.10192871 21.71675301]
[187.38769531 32.21461868]
[176.67346191 42.71248245]
[165.95921326 53.21034622]
[155.24497986 63.70821381]
[155.62731934 71.19846344]
[170.06288147 67.12239838]
[182.65287781 58.96811676]
[197.13674927 62.86907196]
[203.92840576 76.24343109]
[198.53280640 90.23941803]
[184.52102661 95.59383392]
[171.16755676 88.76396179]
[156.39198303 86.17895508]
[156.77432251 93.66920471]
[168.50178528 103.02155304]
[180.22926331 112.37390137]
[191.95674133 121.72624969]
[203.68420410 131.07859802]
[219.29774475 133.63359070]
[224.42419434 147.61817932]
[236.15167236 156.97053528]
[247.87913513 166.32287598]
[259.60662842 175.67523193]
[271.33407593 185.02757263]
[283.06155396 194.37991333]
[289.45071411 195.72445679]
[293.60894775 199.50343323]
[294.93029785 204.04461670]
[306.46456909 213.63423157]
[317.99880981 223.22386169]
[329.53308105 232.81349182]
[341.16455078 242.28495789]
[352.89202881 251.63731384]
[364.61950684 260.98965454]
[376.34695435 270.34201050]
[388.07443237 279.69436646]
[404.11343384 279.33416748]
[414.28421021 291.74124146]
[410.78454590 307.39791870]
[396.29916382 314.29376221]
[381.93994141 307.13885498]
[378.72210693 291.42181396]
[366.99462891 282.06948853]
[355.26715088 272.71713257]
[343.53967285 263.36477661]
[331.81219482 254.01243591]
[327.09750366 253.63845825]
[322.55447388 250.33201599]
[319.94345093 244.34774780]
[308.40921021 234.75811768]
[296.87493896 225.16848755]
[285.34066772 215.57887268]
[273.70919800 206.10739136]
[261.98175049 196.75505066]
[250.25427246 187.40269470]
[238.52679443 178.05035400]
[226.79931641 168.69799805]
[215.07185364 159.34565735]
[200.29713440 157.45959473]
[194.33186340 142.80606079]
[182.60438538 133.45372009]
[170.87692261 124.10137177]
[159.14944458 114.74902344]
[147.42196655 105.39667511]
[133.99729919 127.73732758]
[112.41678619 138.05090332]
[90.85408020 134.99909973]
[76.22136688 121.89432526]
[63.13019180 129.21696472]
[50.03901672 136.53961182]
[36.94783783 143.86225891]
[23.85666275 151.18489075]
[10.76548672 158.50753784]
[6.36756802 173.45063782]
[-7.01306009 180.69033813]
[-21.23191452 176.40551758]
[-34.32308960 183.72814941]
[-47.41426468 191.05079651]
[-46.56201172 197.65098572]
[-47.20849609 204.25622559]
[-49.31274414 210.53144836]
[-52.76003647 216.16014099]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 106]
[8 105]
[9 104]
[10 103]
[12 101]
[13 100]
[14 99]
[15 98]
[20 64]
[21 63]
[22 62]
[23 61]
[24 60]
[25 59]
[26 58]
[27 57]
[28 56]
[29 55]
[30 54]
[72 88]
[73 87]
[74 86]
[75 85]
[76 83]
[77 82]
[109 303]
[110 302]
[111 301]
[114 298]
[115 297]
[116 296]
[117 295]
[118 294]
[119 293]
[121 150]
[122 149]
[123 148]
[124 147]
[125 146]
[130 142]
[131 141]
[133 139]
[134 138]
[157 229]
[158 228]
[159 227]
[160 226]
[161 225]
[165 222]
[166 221]
[167 220]
[168 219]
[169 214]
[170 213]
[171 212]
[173 208]
[174 207]
[175 206]
[176 205]
[177 204]
[178 203]
[181 199]
[182 198]
[183 197]
[184 196]
[239 289]
[240 288]
[241 287]
[242 286]
[243 285]
[245 283]
[246 282]
[247 281]
[248 280]
[249 279]
[250 278]
[253 277]
[254 276]
[255 275]
[256 274]
[257 271]
[258 270]
[259 269]
[260 268]
[261 267]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
