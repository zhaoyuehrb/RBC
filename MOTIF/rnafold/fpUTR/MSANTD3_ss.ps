%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:30:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGCGGCGCGCGCGGCGGGGCCUGGCCGGCCGGGGGCGCGCCGCCGCCGCCGCCGCCGCCCGGCGUUCGGGAGCCCGCGGCCCUCCCGGCCGCCCUGCUUGCGAGAGGAGCCCAGGCCGCCCGCCCUCGCGCCUCGCCGGCCCCUCCCCCGGUCGCCGCGGCUGCCGCGCCGCCGCUGCAGGAUAGCUAGCGGCCAGGAGAAAUACAGUGGAAA\
) } def
/len { sequence length } bind def

/coor [
[539.45129395 594.81103516]
[552.99194336 601.27117920]
[543.99877930 589.26605225]
[535.00561523 577.26092529]
[526.01251221 565.25579834]
[517.01934814 553.25067139]
[508.02618408 541.24554443]
[498.94555664 529.30645752]
[489.77795410 517.43395996]
[483.20391846 514.06201172]
[480.56463623 505.32043457]
[471.57150269 493.31527710]
[462.57833862 481.31015015]
[453.58520508 469.30502319]
[444.59204102 457.29989624]
[435.59887695 445.29476929]
[425.75341797 433.97811890]
[415.10812378 423.41030884]
[404.46286011 412.84252930]
[393.81756592 402.27474976]
[383.17230225 391.70697021]
[372.52700806 381.13919067]
[365.56759644 378.65838623]
[361.80480957 370.33834839]
[351.31509399 359.61614990]
[340.82534790 348.89395142]
[323.69400024 345.08233643]
[319.27520752 327.20477295]
[308.62991333 316.63699341]
[297.98464966 306.06921387]
[287.26245117 295.57946777]
[276.46389771 285.16836548]
[265.66534424 274.75726318]
[254.86677551 264.34613037]
[244.06823730 253.93502808]
[233.26968384 243.52391052]
[222.47113037 233.11279297]
[211.67257690 222.70169067]
[197.13990784 219.43812561]
[192.57537842 204.28967285]
[181.77682495 193.87855530]
[167.24415588 190.61499023]
[162.67962646 175.46653748]
[151.88107300 165.05543518]
[141.08251953 154.64431763]
[126.47322083 157.42034912]
[112.86971283 150.98541260]
[105.57853699 137.61784363]
[107.57980347 122.34363556]
[96.78125000 111.93252563]
[83.24640656 105.46662140]
[68.36195374 103.60836792]
[53.47750473 101.75011444]
[38.59305191 99.89186096]
[23.70860100 98.03361511]
[10.21450138 106.71052551]
[-4.93603849 101.43409729]
[-10.12082100 86.25195312]
[-1.36252534 72.81053162]
[14.62023449 71.42094421]
[25.56685257 83.14916229]
[40.45130539 85.00741577]
[55.33575439 86.86566162]
[70.22020721 88.72391510]
[85.10466003 90.58216858]
[92.63627625 77.61009216]
[83.64311981 65.60495758]
[74.64997101 53.59982300]
[65.65681458 41.59469223]
[51.19052505 35.18867874]
[49.75246048 20.36365891]
[40.75930786 8.35852528]
[31.76615524 -3.64660716]
[22.77300262 -15.65174007]
[5.41291809 -17.81907654]
[-4.80609131 -31.60076141]
[-1.95157480 -48.17593384]
[-11.11918068 -60.04838181]
[-20.28678703 -71.92082977]
[-29.45439148 -83.79327393]
[-38.62199783 -95.66572571]
[-47.78960419 -107.53816986]
[-63.45433044 -111.00167847]
[-70.38356781 -125.47113800]
[-63.26180267 -139.84681702]
[-47.55224228 -143.10092163]
[-35.30591583 -132.73718262]
[-35.91715622 -116.70577240]
[-26.74954987 -104.83332825]
[-17.58194542 -92.96088409]
[-8.41433907 -81.08843231]
[0.75326681 -69.21598816]
[9.92087269 -57.34354019]
[22.80334473 -57.50522614]
[33.58829117 -50.10789108]
[38.21247482 -37.66683960]
[34.77813339 -24.64489174]
[43.77128601 -12.63975906]
[52.76443863 -0.63462669]
[61.75759125 11.37050629]
[75.58063507 16.91783142]
[77.66194916 32.60153961]
[86.65509796 44.60667038]
[95.64825439 56.61180496]
[104.64140320 68.61693573]
[111.98336029 75.98837280]
[115.41885376 84.38155365]
[115.16406250 92.18695831]
[112.01500702 98.06481934]
[107.19236755 101.13397217]
[117.99092102 111.54508972]
[133.18183899 108.98731232]
[146.80677795 115.78540802]
[153.73425293 129.14482117]
[151.49363708 143.84576416]
[162.29219055 154.25688171]
[173.09074402 164.66798401]
[188.39578247 168.67622375]
[192.18794250 183.08000183]
[202.98648071 193.49111938]
[218.29153442 197.49935913]
[222.08369446 211.90313721]
[232.88223267 222.31423950]
[243.68078613 232.72535706]
[254.47933960 243.13647461]
[265.27789307 253.54757690]
[276.07644653 263.95870972]
[286.87500000 274.36981201]
[297.67355347 284.78091431]
[306.02084351 288.48278809]
[308.55242920 295.42391968]
[319.19769287 305.99169922]
[329.84298706 316.55950928]
[342.71832275 317.29238892]
[351.36709595 326.31091309]
[351.54757690 338.40423584]
[362.03729248 349.12643433]
[372.52700806 359.84863281]
[383.09481812 370.49389648]
[393.74008179 381.06170654]
[404.38534546 391.62948608]
[415.03063965 402.19726562]
[425.67590332 412.76504517]
[436.32119751 423.33282471]
[433.93081665 408.52450562]
[439.17401123 394.47073364]
[450.67962646 384.84677124]
[465.43875122 382.16943359]
[479.59167480 387.13885498]
[489.43713379 398.45553589]
[492.40045166 413.15991211]
[487.70663452 427.40658569]
[476.58319092 437.46984863]
[461.93908691 440.71798706]
[447.60400391 436.30160522]
[456.59716797 448.30673218]
[465.59033203 460.31185913]
[474.58346558 472.31701660]
[483.57662964 484.32214355]
[492.56979370 496.32727051]
[501.65039062 508.26638794]
[510.81799316 520.13879395]
[518.53735352 525.01660156]
[520.03131104 532.25238037]
[529.02447510 544.25750732]
[538.01763916 556.26263428]
[547.01074219 568.26776123]
[556.00390625 580.27288818]
[564.99707031 592.27807617]
[575.48681641 603.00024414]
[587.29193115 612.25433350]
[599.23107910 621.33496094]
[611.30157471 630.24017334]
[623.37207031 639.14538574]
[635.44262695 648.05059814]
[647.51312256 656.95581055]
[659.58361816 665.86096191]
[671.71887207 674.67779541]
[683.91827393 683.40563965]
[699.46649170 680.57238770]
[712.41650391 689.63183594]
[715.08514404 705.20922852]
[705.88928223 718.06268311]
[690.28460693 720.56652832]
[677.52911377 711.23529053]
[675.19036865 695.60498047]
[662.99102783 686.87713623]
[655.72424316 685.54211426]
[650.67846680 677.93151855]
[638.60791016 669.02630615]
[626.53741455 660.12109375]
[614.46691895 651.21588135]
[602.39636230 642.31066895]
[590.32586670 633.40551758]
[585.55639648 633.21905518]
[580.85266113 630.03643799]
[578.03784180 624.05950928]
[566.23272705 614.80541992]
[572.39379883 628.48168945]
[574.08856201 643.38562012]
[571.15527344 658.09600830]
[563.87371826 671.21008301]
[552.93823242 681.47729492]
[539.39160156 687.91851807]
[524.52569580 689.91961670]
[509.75805664 687.28961182]
[496.49691772 680.27947998]
[486.00689697 669.55755615]
[479.28826904 656.14636230]
[476.98171997 641.32476807]
[479.30725098 626.50616455]
[486.04306030 613.10357666]
[496.54681396 602.39514160]
[509.81692505 595.40197754]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 169]
[3 168]
[4 167]
[5 166]
[6 165]
[7 164]
[8 162]
[9 161]
[11 160]
[12 159]
[13 158]
[14 157]
[15 156]
[16 155]
[17 144]
[18 143]
[19 142]
[20 141]
[21 140]
[22 139]
[24 138]
[25 137]
[26 136]
[28 133]
[29 132]
[30 131]
[31 129]
[32 128]
[33 127]
[34 126]
[35 125]
[36 124]
[37 123]
[38 122]
[40 120]
[41 119]
[43 117]
[44 116]
[45 115]
[49 111]
[50 110]
[51 65]
[52 64]
[53 63]
[54 62]
[55 61]
[66 105]
[67 104]
[68 103]
[69 102]
[71 100]
[72 99]
[73 98]
[74 97]
[77 93]
[78 92]
[79 91]
[80 90]
[81 89]
[82 88]
[170 198]
[171 197]
[172 194]
[173 193]
[174 192]
[175 191]
[176 190]
[177 189]
[178 187]
[179 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
