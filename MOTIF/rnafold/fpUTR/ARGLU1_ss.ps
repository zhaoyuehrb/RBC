%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:08:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAUUGUGGGAAGGGCGGCCGGUGCAGCCGCAGCUGCCAUCUUAGGGGCGCCUGGCGCUACGGGUUUCUCGUUGGAGGCGGCCUUCGUGGCAGCUGUAGACGCCGGGAAAAGGCAUAAAGUCCGUUGGCCGACACCUUUCUUUCCUCCGGCCUCGGUAGAACCGCCAGCCCGCGUCCGAAGGCGGAGGCGAGGGGAACUGGCCGCGUGAGGGGCCUGAGGCGAGCGGUUAGAGCGUCUCCCGGAAGG\
) } def
/len { sequence length } bind def

/coor [
[317.63067627 226.02061462]
[310.04730225 228.54719543]
[302.02313232 228.75415039]
[294.25469971 226.60391235]
[287.42211914 222.26435852]
[282.12948608 216.09588623]
[278.85144043 208.62159729]
[277.89074707 200.48291016]
[263.63668823 195.81153870]
[249.38264465 191.14015198]
[235.12858582 186.46876526]
[220.87452698 181.79737854]
[206.62046814 177.12600708]
[192.36640930 172.45462036]
[173.76339722 177.77943420]
[160.58410645 162.50515747]
[146.21629333 158.19636536]
[131.84846497 153.88757324]
[117.48064423 149.57878113]
[103.11281586 145.26998901]
[88.88863373 150.03157043]
[80.01048279 162.12199402]
[71.13232422 174.21241760]
[66.63102722 190.55789185]
[49.67825317 190.75738525]
[44.79356003 174.52235413]
[59.04190063 165.33425903]
[67.92005157 153.24383545]
[76.79821014 141.15341187]
[70.27773285 127.64476776]
[55.28855896 127.07485962]
[40.29938889 126.50495148]
[25.31022072 125.93504333]
[10.32105064 125.36512756]
[-4.66811848 124.79521942]
[-19.65728760 124.22531128]
[-34.64645767 123.65540314]
[-49.63562775 123.08549500]
[-64.62479401 122.51557922]
[-79.61396790 121.94567108]
[-87.12823486 129.76745605]
[-97.49004364 132.12731934]
[-107.23942566 128.48402405]
[-113.25507355 120.26088715]
[-128.22499084 119.31144714]
[-143.19491577 118.36199951]
[-158.16484070 117.41255951]
[-172.42707825 124.26084137]
[-184.63908386 115.73346710]
[-199.60900879 114.78402710]
[-214.57893372 113.83458710]
[-229.54885864 112.88513947]
[-244.51876831 111.93569946]
[-250.16044617 121.86751556]
[-259.05343628 128.95388794]
[-269.89602661 132.20628357]
[-281.11911011 131.19384766]
[-291.11328125 126.10003662]
[-298.45968628 117.69082642]
[-302.13125610 107.19976807]
[-317.05429077 105.68224335]
[-331.97732544 104.16471863]
[-346.90036011 102.64719391]
[-361.82339478 101.12966919]
[-378.19296265 105.54257202]
[-386.96496582 91.03434753]
[-375.45205688 78.58889008]
[-360.30587769 86.20662689]
[-345.38284302 87.72415161]
[-330.45980835 89.24167633]
[-315.53677368 90.75920105]
[-300.61373901 92.27672577]
[-288.95202637 77.64125824]
[-270.67236328 72.98214722]
[-253.15026855 80.36702728]
[-243.56933594 96.96577454]
[-228.59941101 97.91522217]
[-213.62948608 98.86466217]
[-198.65956116 99.81410217]
[-183.68963623 100.76354980]
[-170.49815369 93.84735107]
[-157.21539307 102.44263458]
[-142.24546814 103.39208221]
[-127.27555084 104.34152222]
[-112.30562592 105.29096222]
[-95.63116455 95.47323608]
[-79.04405975 106.95650482]
[-64.05488586 107.52641296]
[-49.06571579 108.09632111]
[-34.07654953 108.66622925]
[-19.08737755 109.23614502]
[-4.09820890 109.80605316]
[10.89096069 110.37596130]
[25.88013077 110.94586945]
[40.86930084 111.51577759]
[55.85847092 112.08569336]
[70.84764099 112.65560150]
[72.83325958 92.97702026]
[85.16847229 80.70227814]
[80.13749695 66.57112885]
[75.10652161 52.43998718]
[69.63061523 38.47522736]
[63.71527863 24.69086075]
[57.79994202 10.90649414]
[42.77652740 6.56701279]
[34.10025406 -6.44283962]
[35.86778641 -21.98020935]
[47.24455261 -32.70882416]
[62.85879135 -33.56296158]
[75.33793640 -24.13932419]
[78.78971863 -8.88746357]
[71.58430481 4.99115610]
[77.49964905 18.77552414]
[83.41498566 32.55989075]
[91.19890594 19.73762321]
[106.05981445 17.69960785]
[117.00830078 27.95292664]
[115.94815063 42.91541672]
[103.66331482 51.52256012]
[89.23766327 47.40900803]
[94.26864624 61.54015350]
[99.29962158 75.67129517]
[113.67864227 78.09248352]
[124.87760925 88.71959686]
[128.43048096 104.62388611]
[122.20259094 120.60772705]
[107.42160797 130.90217590]
[121.78942871 135.21095276]
[136.15725708 139.51974487]
[150.52507019 143.82853699]
[164.89289856 148.13732910]
[174.12783813 142.44869995]
[184.75038147 142.76139832]
[193.27532959 148.73208618]
[197.03778076 158.20056152]
[211.29183960 162.87194824]
[225.54589844 167.54331970]
[239.79995728 172.21470642]
[254.05401611 176.88609314]
[268.30807495 181.55747986]
[282.56213379 186.22885132]
[301.75216675 174.48022461]
[323.06295776 180.77986145]
[332.54031372 200.57168579]
[347.10794067 204.14721680]
[361.67556763 207.72276306]
[376.26553345 211.20596313]
[390.87728882 214.59669495]
[405.48901367 217.98741150]
[420.10076904 221.37812805]
[432.73867798 210.11891174]
[449.43240356 208.63482666]
[463.57473755 217.31407166]
[469.68685913 232.56147766]
[484.34039307 235.76683044]
[494.71765137 224.53030396]
[509.23010254 220.02639771]
[523.95062256 223.36907959]
[534.94793701 233.56295776]
[539.33660889 247.79689026]
[553.99017334 251.00224304]
[568.64367676 254.20759583]
[583.29718018 257.41296387]
[597.95068359 260.61831665]
[612.60424805 263.82366943]
[625.80822754 255.55979919]
[640.62335205 259.01922607]
[648.42028809 271.65817261]
[663.07385254 274.86355591]
[677.72735596 278.06890869]
[692.40087891 281.18136597]
[707.09381104 284.20086670]
[722.16900635 279.39990234]
[733.07824707 289.54080200]
[747.77117920 292.56027222]
[762.46417236 295.57974243]
[777.15710449 298.59921265]
[786.60705566 288.58370972]
[799.66632080 284.57119751]
[812.89843750 287.50592041]
[822.87628174 296.51834106]
[827.06970215 309.17929077]
[841.72320557 312.38464355]
[856.37670898 315.58999634]
[867.62121582 309.30392456]
[879.74822998 312.25878906]
[886.39886475 322.34478760]
[901.01062012 325.73550415]
[915.62237549 329.12622070]
[930.81433105 324.70867920]
[941.46319580 335.12268066]
[956.07489014 338.51342773]
[970.39556885 331.28161621]
[984.91772461 338.09967041]
[988.50128174 353.73739624]
[978.39721680 366.19882202]
[962.35650635 365.92462158]
[952.68420410 353.12515259]
[938.07244873 349.73443604]
[923.92559814 354.39450073]
[912.23162842 343.73794556]
[897.61987305 340.34722900]
[883.00817871 336.95651245]
[866.50646973 342.95840454]
[853.17138672 330.24353027]
[838.51782227 327.03817749]
[823.86431885 323.83282471]
[811.94445801 335.13583374]
[795.47003174 337.11788940]
[780.92053223 328.79956055]
[774.13763428 313.29217529]
[759.44470215 310.27270508]
[744.75170898 307.25320435]
[730.05877686 304.23373413]
[716.03454590 309.25067139]
[704.07434082 298.89379883]
[689.38140869 295.87432861]
[682.21435547 297.60220337]
[674.52197266 292.72241211]
[659.86846924 289.51705933]
[645.21496582 286.31170654]
[632.85321045 294.54107666]
[617.94677734 291.49914551]
[609.39886475 278.47717285]
[594.74536133 275.27182007]
[580.09185791 272.06646729]
[565.43829346 268.86111450]
[550.78479004 265.65576172]
[536.13128662 262.45040894]
[526.20056152 273.55206299]
[511.95156860 278.22348022]
[497.17987061 275.11495972]
[485.87319946 264.96328735]
[481.13504028 250.42036438]
[466.48150635 247.21499634]
[457.38504028 256.96887207]
[444.55566406 260.99240112]
[431.30676270 258.13455200]
[421.11538696 249.03614807]
[416.71005249 235.98986816]
[402.09829712 232.59915161]
[387.48654175 229.20843506]
[372.87481689 225.81770325]
[365.66629028 227.36347961]
[358.10000610 222.29039001]
[343.53240967 218.71484375]
[328.96478271 215.13929749]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 141]
[9 140]
[10 139]
[11 138]
[12 137]
[13 136]
[14 135]
[16 131]
[17 130]
[18 129]
[19 128]
[20 127]
[21 29]
[22 28]
[23 27]
[30 97]
[31 96]
[32 95]
[33 94]
[34 93]
[35 92]
[36 91]
[37 90]
[38 89]
[39 88]
[40 87]
[44 85]
[45 84]
[46 83]
[47 82]
[49 80]
[50 79]
[51 78]
[52 77]
[53 76]
[60 72]
[61 71]
[62 70]
[63 69]
[64 68]
[99 122]
[100 121]
[101 120]
[102 114]
[103 113]
[104 112]
[144 247]
[145 246]
[146 245]
[147 243]
[148 242]
[149 241]
[150 240]
[154 235]
[155 234]
[160 229]
[161 228]
[162 227]
[163 226]
[164 225]
[165 224]
[168 221]
[169 220]
[170 219]
[171 217]
[172 216]
[174 214]
[175 213]
[176 212]
[177 211]
[182 207]
[183 206]
[184 205]
[187 203]
[188 202]
[189 201]
[191 199]
[192 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
