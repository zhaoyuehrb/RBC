%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:42:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGAAGCUCCUCUCCCUUCCGAACAGCUCCGCGCACCGCCCCGCGACGCAGCCCGGCGCAACUACUUUCUUCUCUCUCCUUUCUUUCUUCCUCUCCUUUUUCCCCUGCUGGGUAGUGGCUGCGGCGGGGUGGGGGAGACUUUGAAUGACCGAGCUCGCGUCCACCUUUCUCUUCAUGUCGACGUCCCUGGAAACGGCCACACGGAUGCC\
) } def
/len { sequence length } bind def

/coor [
[226.74537659 252.30792236]
[221.42721558 249.31425476]
[217.12684631 244.92724609]
[214.20164490 239.47938538]
[212.90357971 233.39237976]
[213.35768127 227.14466858]
[215.55032349 221.23371887]
[205.75799561 209.87104797]
[195.96565247 198.50837708]
[186.17332458 187.14570618]
[176.38099670 175.78303528]
[166.49157715 172.55308533]
[162.09342957 161.70565796]
[150.58689880 152.08276367]
[139.08038330 142.45988464]
[127.57385254 132.83700562]
[116.06732941 123.21412659]
[104.56079865 113.59124756]
[115.78477478 123.54224396]
[120.22128296 137.87113953]
[116.58401489 152.42347717]
[105.92754364 162.97998047]
[91.34158325 166.47993469]
[77.05513000 161.90858459]
[67.21035767 150.59130859]
[64.66162109 135.80943298]
[70.14789581 121.84874725]
[82.07624054 112.75787354]
[69.88893890 121.50257111]
[65.87703705 137.03588867]
[51.17299271 143.45233154]
[37.05649185 135.82974243]
[34.35649872 120.01552582]
[45.14422226 108.14099121]
[61.14424133 109.31526947]
[73.33154297 100.57057190]
[82.50687408 99.47425842]
[91.70013428 99.32220459]
[83.32042694 86.88111877]
[74.94072723 74.44004059]
[66.56102753 61.99895096]
[58.18132401 49.55786514]
[49.80162430 37.11677933]
[41.42192078 24.67569542]
[33.04222107 12.23461056]
[24.66251945 -0.20647463]
[18.90067482 -3.44627476]
[16.06504059 -8.37022114]
[16.22523880 -13.14271736]
[8.21788883 -25.82665825]
[0.21053775 -38.51059723]
[-7.79681301 -51.19453812]
[-15.80416393 -63.87847900]
[-23.81151390 -76.56241608]
[-31.81886482 -89.24636078]
[-35.03466034 -74.59512329]
[-46.83905029 -65.34004974]
[-61.83441162 -65.71307373]
[-73.16403198 -75.54362488]
[-75.64737701 -90.33663177]
[-68.14892578 -103.32790375]
[-54.09738541 -108.57711792]
[-39.91882706 -103.68477631]
[-46.56976700 -117.12966156]
[-53.22070312 -130.57455444]
[-59.87164307 -144.01943970]
[-66.52258301 -157.46432495]
[-73.17352295 -170.90921021]
[-79.82445526 -184.35411072]
[-94.10317993 -179.67448425]
[-108.90256500 -177.07466125]
[-123.92130280 -176.60754395]
[-138.85363770 -178.28266907]
[-153.39556885 -182.06591797]
[-167.25105286 -187.88026428]
[-180.13798523 -195.60733032]
[-191.79400635 -205.08982849]
[-201.98184204 -216.13468933]
[-210.49404907 -228.51705933]
[-217.15734863 -241.98483276]
[-221.83609009 -256.26385498]
[-224.43499756 -271.06338501]
[-224.90118408 -286.08215332]
[-223.22514343 -301.01440430]
[-219.44099426 -315.55609131]
[-213.62579346 -329.41122437]
[-205.89791870 -342.29766846]
[-196.41470337 -353.95312500]
[-185.36921692 -364.14025879]
[-172.98631287 -372.65170288]
[-159.51812744 -379.31417847]
[-145.23881531 -383.99203491]
[-130.43911743 -386.59002686]
[-115.42031860 -387.05526733]
[-100.48818970 -385.37829590]
[-85.94672394 -381.59326172]
[-72.09197235 -375.77719116]
[-59.20599365 -368.04852295]
[-47.55113602 -358.56457520]
[-37.36467361 -347.51846313]
[-28.85399246 -335.13504028]
[-22.19235802 -321.66644287]
[-17.51539230 -307.38684082]
[-14.91831303 -292.58697510]
[-14.45399189 -277.56814575]
[-16.13188362 -262.63613892]
[-19.91782761 -248.09489441]
[-25.73474693 -234.24050903]
[-33.46421432 -221.35501099]
[-42.94887161 -209.70072937]
[-53.99562454 -199.51495361]
[-66.37957001 -191.00505066]
[-59.72863007 -177.56015015]
[-53.07769394 -164.11526489]
[-46.42675400 -150.67037964]
[-39.77581406 -137.22549438]
[-33.12487793 -123.78060150]
[-26.47393799 -110.33571625]
[-19.13492393 -97.25370789]
[-11.12757397 -84.56977081]
[-3.12022352 -71.88582611]
[4.88712692 -59.20188904]
[12.89447784 -46.51794815]
[20.90182877 -33.83400726]
[28.90917969 -21.15006828]
[37.10360336 -8.58617592]
[45.48330688 3.85490918]
[53.86300659 16.29599380]
[62.24271011 28.73707962]
[70.62241364 41.17816544]
[79.00211334 53.61925125]
[87.38181305 66.06033325]
[95.76151276 78.50141907]
[104.14122009 90.94250488]
[114.18367767 102.08471680]
[125.69020844 111.70760345]
[137.19673157 121.33048248]
[148.70326233 130.95336914]
[160.20979309 140.57624817]
[171.71630859 150.19912720]
[168.02853394 135.65951538]
[170.77995300 120.91401672]
[179.46301270 108.68273163]
[192.47596741 101.22196198]
[207.41830444 99.90799713]
[221.53361511 104.98322296]
[232.21806335 115.51141357]
[237.50065613 129.55043030]
[236.40695190 144.51051331]
[229.13868713 157.63195801]
[217.03663635 166.49424744]
[202.33326721 169.46258545]
[187.74366760 165.99070740]
[197.53599548 177.35337830]
[207.32832336 188.71604919]
[217.12065125 200.07872009]
[226.91299438 211.44139099]
[250.64772034 217.12528992]
[254.59848022 240.48887634]
[265.51473999 250.77650452]
[276.43099976 261.06414795]
[287.34725952 271.35177612]
[298.26348877 281.63940430]
[309.17974854 291.92703247]
[332.11956787 295.36184692]
[337.84149170 317.07168579]
[349.48934937 326.52297974]
[361.20690918 335.88775635]
[372.99353027 345.16543579]
[384.78018188 354.44311523]
[396.56680298 363.72079468]
[408.35342407 372.99847412]
[422.59347534 367.41561890]
[437.61685181 369.69497681]
[449.40380859 379.12545776]
[454.85144043 393.09609985]
[452.58993530 407.81857300]
[464.37655640 417.09625244]
[476.16317749 426.37393188]
[492.46276855 428.17825317]
[498.80130005 443.30291748]
[488.65823364 456.18896484]
[472.46789551 453.58035278]
[466.88549805 438.16058350]
[455.09887695 428.88290405]
[443.31225586 419.60522461]
[429.53286743 425.26153564]
[414.67349243 423.24786377]
[402.73828125 414.00573730]
[396.99389648 399.93807983]
[399.07574463 384.78509521]
[387.28912354 375.50741577]
[375.50250244 366.22973633]
[363.71585083 356.95205688]
[351.92922974 347.67437744]
[344.72961426 346.00747681]
[340.03802490 338.17086792]
[328.39016724 328.71954346]
[321.73501587 331.19714355]
[314.56561279 331.21499634]
[307.77035522 328.72375488]
[302.20773315 323.98788452]
[298.59765625 317.55841064]
[297.42861938 310.20910645]
[298.89212036 302.84329224]
[287.97586060 292.55566406]
[277.05960083 282.26803589]
[266.14337158 271.98040771]
[255.22711182 261.69274902]
[244.31085205 251.40512085]
[238.66209412 253.37347412]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 157]
[8 156]
[9 155]
[10 154]
[11 153]
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[28 36]
[29 35]
[38 134]
[39 133]
[40 132]
[41 131]
[42 130]
[43 129]
[44 128]
[45 127]
[46 126]
[49 125]
[50 124]
[51 123]
[52 122]
[53 121]
[54 120]
[55 119]
[63 118]
[64 117]
[65 116]
[66 115]
[67 114]
[68 113]
[69 112]
[159 210]
[160 209]
[161 208]
[162 207]
[163 206]
[164 205]
[166 198]
[167 197]
[168 195]
[169 194]
[170 193]
[171 192]
[172 191]
[177 186]
[178 185]
[179 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
