%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:06:31 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KCTD5)
} def

/sequence { (\
AUUAAAAGCCGGACGCUUCCGGUGGAAGGGAGCUGUUGCGGGGCUUGCUGGGAUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 54 0.102164123 ubox
2 8 0.006084086 ubox
2 13 0.003798227 ubox
2 25 0.024389367 ubox
2 26 0.049778132 ubox
2 27 0.050791728 ubox
2 28 0.008444123 ubox
2 29 0.010888534 ubox
2 30 0.006681913 ubox
2 31 0.009504453 ubox
2 51 0.153197525 ubox
2 52 0.045269201 ubox
2 53 0.119315394 ubox
3 7 0.010832837 ubox
3 12 0.004197256 ubox
3 24 0.036907822 ubox
3 25 0.044592735 ubox
3 26 0.120675437 ubox
3 27 0.023409493 ubox
3 28 0.013025298 ubox
3 29 0.011453388 ubox
3 30 0.010286315 ubox
3 31 0.003327821 ubox
3 42 0.003766996 ubox
3 47 0.084337098 ubox
3 50 0.204623727 ubox
3 51 0.067063942 ubox
3 52 0.120835317 ubox
4 23 0.015628866 ubox
4 46 0.090364883 ubox
4 49 0.199831367 ubox
5 45 0.083750610 ubox
5 46 0.044622131 ubox
6 18 0.018092499 ubox
6 45 0.037616513 ubox
6 46 0.566568233 ubox
7 17 0.023088363 ubox
7 34 0.005487163 ubox
7 45 0.595624349 ubox
7 46 0.018822635 ubox
7 49 0.025895529 ubox
8 16 0.025375456 ubox
8 23 0.727212349 ubox
8 33 0.005607554 ubox
8 39 0.015736843 ubox
8 44 0.599880493 ubox
8 45 0.010551204 ubox
8 48 0.026395198 ubox
9 15 0.025355717 ubox
9 22 0.764443868 ubox
9 25 0.004435249 ubox
9 32 0.005500224 ubox
9 38 0.015696799 ubox
9 41 0.243564781 ubox
9 42 0.087239220 ubox
9 43 0.581887912 ubox
9 47 0.021055364 ubox
9 51 0.049735201 ubox
9 52 0.016206342 ubox
10 21 0.764914942 ubox
10 24 0.004226705 ubox
10 35 0.005016887 ubox
10 38 0.015547402 ubox
10 40 0.279702486 ubox
10 41 0.107253979 ubox
10 42 0.558992284 ubox
10 50 0.049903538 ubox
10 51 0.016090422 ubox
11 20 0.764975486 ubox
11 34 0.006549217 ubox
11 37 0.037922403 ubox
11 39 0.386120227 ubox
11 45 0.007961689 ubox
11 49 0.048927799 ubox
12 18 0.003375222 ubox
12 19 0.764694466 ubox
12 33 0.005377979 ubox
12 36 0.026572132 ubox
12 37 0.527017818 ubox
12 44 0.007707999 ubox
12 48 0.047203636 ubox
13 17 0.021236375 ubox
13 18 0.688637962 ubox
13 36 0.619106930 ubox
13 45 0.003954015 ubox
14 24 0.005416924 ubox
14 35 0.622879963 ubox
14 38 0.063320033 ubox
14 40 0.047914913 ubox
14 47 0.030141535 ubox
15 23 0.005456206 ubox
15 33 0.625773833 ubox
15 34 0.133473163 ubox
15 36 0.005389975 ubox
15 37 0.008934668 ubox
15 39 0.047040394 ubox
15 44 0.025347693 ubox
15 46 0.016606622 ubox
16 22 0.005461144 ubox
16 28 0.024148061 ubox
16 32 0.639569809 ubox
16 35 0.005961349 ubox
16 38 0.046696435 ubox
16 43 0.025439589 ubox
17 21 0.004919933 ubox
17 27 0.024472672 ubox
17 31 0.638532408 ubox
17 32 0.038996969 ubox
17 42 0.019023705 ubox
17 43 0.008541968 ubox
17 53 0.014313704 ubox
18 26 0.024992043 ubox
18 30 0.637301734 ubox
18 31 0.053147048 ubox
18 41 0.010975284 ubox
18 42 0.018055998 ubox
18 43 0.017735119 ubox
18 52 0.018815097 ubox
19 25 0.025196801 ubox
19 29 0.637780036 ubox
19 30 0.063418600 ubox
19 40 0.010775053 ubox
19 41 0.023938843 ubox
19 42 0.020787555 ubox
19 51 0.025391404 ubox
20 24 0.025021459 ubox
20 28 0.637707276 ubox
20 29 0.063479966 ubox
20 35 0.036802787 ubox
20 38 0.006538214 ubox
20 40 0.023986877 ubox
20 41 0.020863185 ubox
20 50 0.025449219 ubox
21 34 0.037620722 ubox
21 37 0.006321452 ubox
21 39 0.022344163 ubox
21 49 0.025271300 ubox
21 55 0.012601706 ubox
22 33 0.037739559 ubox
22 36 0.005869222 ubox
22 39 0.023036715 ubox
22 48 0.025234770 ubox
22 54 0.020115008 ubox
23 32 0.037652839 ubox
23 35 0.005279664 ubox
23 38 0.024517374 ubox
23 47 0.024895985 ubox
23 50 0.007548620 ubox
23 53 0.051621947 ubox
24 34 0.009078134 ubox
24 37 0.022745674 ubox
24 46 0.009975122 ubox
24 49 0.020380017 ubox
24 55 0.034311349 ubox
25 33 0.009302296 ubox
25 36 0.019851480 ubox
25 44 0.003211631 ubox
25 45 0.005835249 ubox
25 48 0.020559802 ubox
25 54 0.025237168 ubox
25 55 0.076589202 ubox
26 46 0.022579176 ubox
26 54 0.077317304 ubox
27 34 0.038120525 ubox
27 45 0.024443649 ubox
27 46 0.011806780 ubox
27 49 0.736620534 ubox
28 33 0.038794371 ubox
28 34 0.004654713 ubox
28 44 0.024667191 ubox
28 45 0.014906898 ubox
28 46 0.005236848 ubox
28 48 0.761030228 ubox
28 49 0.027701680 ubox
29 33 0.004742022 ubox
29 44 0.015021459 ubox
29 45 0.005977833 ubox
29 46 0.003227376 ubox
29 48 0.029776818 ubox
29 49 0.005851175 ubox
30 44 0.006105675 ubox
30 46 0.758160305 ubox
30 48 0.005818482 ubox
30 55 0.004436503 ubox
31 45 0.762920781 ubox
31 46 0.008575986 ubox
31 49 0.019440605 ubox
31 54 0.004050096 ubox
32 39 0.031807437 ubox
32 44 0.763223307 ubox
32 48 0.019927419 ubox
33 38 0.031856135 ubox
33 41 0.014705873 ubox
33 42 0.057079626 ubox
33 43 0.760998743 ubox
33 47 0.019920069 ubox
33 52 0.004422240 ubox
34 40 0.026978144 ubox
34 41 0.079808707 ubox
34 42 0.752890025 ubox
34 51 0.004363140 ubox
35 39 0.045900500 ubox
35 44 0.026457407 ubox
35 54 0.074806182 ubox
36 42 0.008607466 ubox
36 43 0.026386714 ubox
36 53 0.079507036 ubox
37 41 0.017557932 ubox
37 42 0.026459655 ubox
37 52 0.080410028 ubox
38 44 0.016914671 ubox
38 48 0.021622165 ubox
39 43 0.016819630 ubox
39 47 0.021939653 ubox
39 50 0.083980178 ubox
40 46 0.020134683 ubox
40 49 0.084194779 ubox
41 45 0.013090398 ubox
41 48 0.084189080 ubox
41 49 0.008181680 ubox
41 55 0.003262952 ubox
42 48 0.023497739 ubox
42 49 0.030411340 ubox
42 54 0.008347712 ubox
42 55 0.021742042 ubox
43 48 0.031690036 ubox
43 54 0.022367525 ubox
44 51 0.065111436 ubox
44 52 0.050211927 ubox
45 50 0.063760475 ubox
45 51 0.049360331 ubox
45 52 0.012415247 ubox
45 53 0.016838928 ubox
46 50 0.036481596 ubox
46 51 0.015668939 ubox
46 52 0.018992132 ubox
8 23 0.9500000 lbox
9 22 0.9500000 lbox
10 21 0.9500000 lbox
11 20 0.9500000 lbox
12 19 0.9500000 lbox
13 18 0.9500000 lbox
27 49 0.9500000 lbox
28 48 0.9500000 lbox
30 46 0.9500000 lbox
31 45 0.9500000 lbox
32 44 0.9500000 lbox
33 43 0.9500000 lbox
34 42 0.9500000 lbox
showpage
end
%%EOF
