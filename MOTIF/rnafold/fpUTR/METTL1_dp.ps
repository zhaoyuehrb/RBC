%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:09:47 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (METTL1)
} def

/sequence { (\
GGCCUGCGCCUCCACGUGGAUUUGGUAGAGAAACCCCGGACUGGGAUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.578461729 ubox
1 22 0.013067664 ubox
1 23 0.005474702 ubox
1 35 0.093218459 ubox
1 36 0.006507301 ubox
1 37 0.009468453 ubox
1 42 0.003823775 ubox
1 48 0.021913934 ubox
2 9 0.581259068 ubox
2 21 0.018665528 ubox
2 22 0.005623275 ubox
2 26 0.209095212 ubox
2 34 0.104320072 ubox
2 35 0.006880059 ubox
2 36 0.009420824 ubox
2 41 0.004045129 ubox
2 47 0.018682954 ubox
3 8 0.579673986 ubox
3 19 0.043322384 ubox
3 25 0.213132624 ubox
3 39 0.003886232 ubox
3 44 0.006725222 ubox
3 45 0.030477222 ubox
4 18 0.043243885 ubox
4 19 0.101553293 ubox
4 24 0.212660735 ubox
4 25 0.006042010 ubox
4 28 0.588470477 ubox
4 30 0.489416025 ubox
4 38 0.003770104 ubox
4 43 0.006726661 ubox
4 44 0.030459899 ubox
5 16 0.004008779 ubox
5 18 0.103725769 ubox
5 24 0.006042451 ubox
5 27 0.589786501 ubox
5 29 0.490250743 ubox
5 43 0.029845690 ubox
6 15 0.004292075 ubox
6 17 0.112640203 ubox
6 23 0.009903727 ubox
6 26 0.586871280 ubox
6 42 0.020883163 ubox
7 16 0.113463859 ubox
7 18 0.070831437 ubox
7 24 0.062580195 ubox
7 25 0.583258289 ubox
8 15 0.111640542 ubox
8 17 0.071085486 ubox
8 23 0.081154779 ubox
8 26 0.500939470 ubox
9 16 0.071018975 ubox
9 19 0.186512363 ubox
9 25 0.504208674 ubox
9 39 0.029339006 ubox
9 44 0.016065366 ubox
9 45 0.021729894 ubox
10 18 0.186570636 ubox
10 19 0.010453921 ubox
10 24 0.504321231 ubox
10 28 0.031703772 ubox
10 30 0.057484810 ubox
10 38 0.029243698 ubox
10 43 0.016160148 ubox
10 44 0.021808765 ubox
10 45 0.017151700 ubox
11 18 0.009827558 ubox
11 19 0.010493490 ubox
11 20 0.821438843 ubox
11 27 0.042701373 ubox
11 29 0.079882109 ubox
11 31 0.013940114 ubox
11 40 0.030569544 ubox
11 43 0.020637244 ubox
11 44 0.015885432 ubox
11 45 0.331359599 ubox
11 46 0.206324965 ubox
12 18 0.011745478 ubox
12 19 0.839849747 ubox
12 25 0.115080419 ubox
12 28 0.081442180 ubox
12 30 0.014407235 ubox
12 39 0.032962186 ubox
12 43 0.017638053 ubox
12 44 0.399316398 ubox
12 45 0.218679681 ubox
13 18 0.838731073 ubox
13 24 0.116131607 ubox
13 38 0.031580332 ubox
13 43 0.400569578 ubox
13 44 0.216693751 ubox
14 23 0.113110459 ubox
14 26 0.078114333 ubox
14 42 0.388323374 ubox
15 24 0.034166994 ubox
15 25 0.079200741 ubox
15 38 0.235013069 ubox
15 43 0.105108276 ubox
16 23 0.032564076 ubox
16 34 0.019262997 ubox
16 37 0.236266916 ubox
16 41 0.231436524 ubox
16 42 0.080393082 ubox
17 24 0.010704443 ubox
17 27 0.004028053 ubox
17 33 0.019204983 ubox
17 38 0.301731615 ubox
17 40 0.213942101 ubox
17 43 0.032973205 ubox
18 23 0.009747470 ubox
18 26 0.004211834 ubox
18 35 0.195356860 ubox
18 36 0.157166387 ubox
18 37 0.342789044 ubox
18 42 0.058407653 ubox
19 34 0.195852297 ubox
19 35 0.156356025 ubox
19 36 0.342692798 ubox
19 41 0.068195518 ubox
19 48 0.006989363 ubox
20 26 0.006955603 ubox
20 47 0.007558795 ubox
21 25 0.006961733 ubox
21 28 0.010127880 ubox
21 29 0.023431423 ubox
21 30 0.038416824 ubox
21 31 0.081333980 ubox
21 32 0.183602505 ubox
21 33 0.162149396 ubox
21 39 0.015223362 ubox
21 40 0.075853634 ubox
21 46 0.007662247 ubox
22 27 0.013597868 ubox
22 28 0.024393069 ubox
22 29 0.048871069 ubox
22 30 0.085901640 ubox
22 31 0.191581373 ubox
22 32 0.169078256 ubox
22 33 0.087910316 ubox
22 38 0.014595336 ubox
22 39 0.081928447 ubox
22 40 0.004070401 ubox
22 44 0.004412185 ubox
22 45 0.005868504 ubox
23 27 0.019018030 ubox
23 28 0.048894691 ubox
23 29 0.086835579 ubox
23 30 0.189314802 ubox
23 31 0.168434175 ubox
23 32 0.091518503 ubox
23 38 0.081267689 ubox
23 39 0.004651362 ubox
23 43 0.004967869 ubox
23 44 0.004167805 ubox
24 35 0.385360877 ubox
24 36 0.016882667 ubox
24 37 0.080203249 ubox
24 42 0.005665047 ubox
24 48 0.014480816 ubox
25 34 0.391955190 ubox
25 35 0.016425728 ubox
25 36 0.079593693 ubox
25 41 0.005867686 ubox
25 47 0.015233159 ubox
26 33 0.380304235 ubox
26 40 0.005690875 ubox
26 46 0.015167967 ubox
28 48 0.019752576 ubox
29 47 0.019949363 ubox
30 48 0.161744126 ubox
31 47 0.162551180 ubox
34 44 0.040747787 ubox
34 45 0.332935404 ubox
35 43 0.040584824 ubox
35 44 0.333329937 ubox
35 45 0.793811031 ubox
36 43 0.331382061 ubox
36 44 0.799114931 ubox
36 45 0.183358072 ubox
37 43 0.799270768 ubox
37 44 0.183797652 ubox
38 42 0.493430672 ubox
39 48 0.006008785 ubox
40 47 0.005647657 ubox
4 28 0.9500000 lbox
5 27 0.9500000 lbox
6 26 0.9500000 lbox
7 25 0.9500000 lbox
11 20 0.9500000 lbox
12 19 0.9500000 lbox
13 18 0.9500000 lbox
35 45 0.9500000 lbox
36 44 0.9500000 lbox
37 43 0.9500000 lbox
showpage
end
%%EOF
