%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:17:11 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CHEK2)
} def

/sequence { (\
GCAGGUUUAGCGCCACUCUGCUGGCUGAGGCUGCGGAGAGUGUGCGGCUCCAGGUGGGCUCACGCGGUCGUG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.086742846 ubox
1 13 0.003489702 ubox
1 21 0.060772135 ubox
1 25 0.015938515 ubox
1 34 0.980894293 ubox
1 65 0.005143937 ubox
1 68 0.003811794 ubox
1 71 0.013463843 ubox
2 10 0.086770834 ubox
2 12 0.003501596 ubox
2 20 0.060883907 ubox
2 24 0.015814166 ubox
2 27 0.113337651 ubox
2 33 0.982033776 ubox
2 64 0.005133519 ubox
2 67 0.004166857 ubox
2 70 0.013922612 ubox
2 72 0.004337237 ubox
3 19 0.060842205 ubox
3 22 0.003254865 ubox
3 26 0.112305156 ubox
3 32 0.981824507 ubox
3 71 0.003877846 ubox
4 14 0.023966700 ubox
4 17 0.006126482 ubox
4 18 0.059958089 ubox
4 22 0.010900030 ubox
4 25 0.107325923 ubox
4 26 0.051651576 ubox
4 31 0.981833340 ubox
4 32 0.008944507 ubox
4 51 0.004927521 ubox
5 11 0.014107952 ubox
5 13 0.024454304 ubox
5 16 0.053520998 ubox
5 17 0.022626689 ubox
5 21 0.011804754 ubox
5 25 0.063905780 ubox
5 31 0.017490617 ubox
5 50 0.004928522 ubox
5 63 0.004104707 ubox
6 10 0.013217003 ubox
6 12 0.023841377 ubox
6 15 0.053175873 ubox
6 20 0.011714381 ubox
6 24 0.058706324 ubox
6 28 0.004704303 ubox
6 29 0.970092858 ubox
6 30 0.021583584 ubox
6 62 0.004025884 ubox
7 23 0.041999237 ubox
7 24 0.086115390 ubox
7 27 0.004167823 ubox
7 28 0.981074082 ubox
7 29 0.020332864 ubox
8 23 0.116203925 ubox
8 27 0.981293624 ubox
8 28 0.019134823 ubox
8 72 0.007333839 ubox
9 17 0.011590793 ubox
9 22 0.128126488 ubox
9 26 0.968369317 ubox
9 49 0.004222708 ubox
9 60 0.009344602 ubox
9 71 0.008884828 ubox
10 16 0.012252017 ubox
10 21 0.129206431 ubox
10 25 0.926621293 ubox
10 43 0.005636753 ubox
10 45 0.006642518 ubox
10 48 0.004427009 ubox
10 59 0.009975275 ubox
10 71 0.044016623 ubox
11 20 0.129243086 ubox
11 23 0.115170049 ubox
11 24 0.905050437 ubox
11 27 0.019422225 ubox
11 42 0.005971029 ubox
11 44 0.006661078 ubox
11 46 0.005773499 ubox
11 58 0.009970434 ubox
11 70 0.046367692 ubox
12 19 0.098888816 ubox
12 21 0.690394313 ubox
12 22 0.083174950 ubox
12 25 0.341612946 ubox
12 26 0.004381710 ubox
12 41 0.006012402 ubox
12 43 0.006663999 ubox
12 45 0.007274561 ubox
12 68 0.021662192 ubox
12 69 0.045258443 ubox
13 20 0.688180803 ubox
13 24 0.372805832 ubox
13 40 0.006008811 ubox
13 42 0.005965845 ubox
13 44 0.007282355 ubox
13 57 0.010038519 ubox
13 67 0.050423464 ubox
14 20 0.234128664 ubox
14 23 0.405844559 ubox
14 42 0.007996497 ubox
14 56 0.010065110 ubox
14 66 0.050377626 ubox
14 72 0.004755540 ubox
15 19 0.200128730 ubox
15 22 0.366293143 ubox
15 41 0.008508755 ubox
15 55 0.010075823 ubox
15 71 0.005130790 ubox
16 29 0.003832068 ubox
16 38 0.055515981 ubox
16 40 0.008243326 ubox
16 54 0.010046586 ubox
16 70 0.005148551 ubox
17 23 0.005012938 ubox
17 24 0.004456536 ubox
17 28 0.004543060 ubox
17 37 0.056064138 ubox
17 39 0.007880722 ubox
17 53 0.003593661 ubox
18 23 0.028854861 ubox
18 27 0.004611601 ubox
18 36 0.056165847 ubox
18 38 0.007666457 ubox
18 53 0.005307140 ubox
19 35 0.056173528 ubox
19 37 0.007092121 ubox
19 52 0.005268400 ubox
20 34 0.056385289 ubox
20 51 0.005183752 ubox
20 59 0.007004711 ubox
20 68 0.005294168 ubox
21 33 0.055988872 ubox
21 36 0.004937586 ubox
21 53 0.007395413 ubox
21 58 0.006986199 ubox
21 67 0.005605270 ubox
22 33 0.006541000 ubox
22 35 0.004767755 ubox
22 52 0.008132169 ubox
22 57 0.006947156 ubox
22 66 0.005755573 ubox
23 32 0.052756159 ubox
23 34 0.003792185 ubox
23 49 0.004201697 ubox
23 51 0.008189019 ubox
23 65 0.005711736 ubox
24 31 0.056391414 ubox
24 48 0.004375701 ubox
24 50 0.008179222 ubox
24 55 0.006834603 ubox
24 65 0.005971077 ubox
24 71 0.012614096 ubox
25 30 0.056213002 ubox
25 33 0.003485577 ubox
25 47 0.004377200 ubox
25 53 0.005565542 ubox
25 54 0.005930114 ubox
25 64 0.006114071 ubox
25 70 0.013040683 ubox
26 46 0.004367476 ubox
26 52 0.006636145 ubox
26 53 0.004794029 ubox
26 62 0.008675894 ubox
26 70 0.004932057 ubox
26 72 0.025265187 ubox
27 45 0.004249613 ubox
27 51 0.006924198 ubox
27 61 0.008990502 ubox
27 69 0.005498351 ubox
27 71 0.059957646 ubox
28 60 0.009028261 ubox
28 68 0.003670210 ubox
29 49 0.011094787 ubox
29 59 0.009027639 ubox
29 69 0.177500004 ubox
30 41 0.003615067 ubox
30 48 0.011846284 ubox
30 68 0.178583663 ubox
31 40 0.003707372 ubox
31 47 0.012008334 ubox
31 57 0.009022961 ubox
31 67 0.178763481 ubox
32 39 0.003685761 ubox
32 46 0.011999827 ubox
32 56 0.008989164 ubox
32 66 0.178636160 ubox
33 45 0.012008477 ubox
33 55 0.009001824 ubox
33 65 0.178782860 ubox
33 71 0.011563067 ubox
34 44 0.012007216 ubox
34 54 0.009013572 ubox
34 64 0.178787528 ubox
34 70 0.028658642 ubox
34 72 0.010796674 ubox
35 43 0.011435523 ubox
35 51 0.005048778 ubox
35 63 0.178764158 ubox
35 69 0.129151732 ubox
35 71 0.086191944 ubox
36 50 0.005044281 ubox
36 61 0.005941371 ubox
36 68 0.113062203 ubox
36 69 0.913068051 ubox
37 49 0.005007150 ubox
37 60 0.005399496 ubox
37 68 0.910045568 ubox
38 48 0.004939815 ubox
38 50 0.009051085 ubox
38 59 0.004419542 ubox
38 61 0.179451362 ubox
38 69 0.280796852 ubox
39 49 0.009168890 ubox
39 60 0.179670644 ubox
39 68 0.279633259 ubox
40 48 0.009218941 ubox
40 59 0.179731664 ubox
40 63 0.007184348 ubox
40 65 0.945831944 ubox
41 47 0.009184727 ubox
41 58 0.179620627 ubox
41 62 0.007209355 ubox
41 64 0.945962478 ubox
41 66 0.264621944 ubox
42 61 0.007201976 ubox
42 63 0.946438395 ubox
42 65 0.266339995 ubox
43 56 0.175640537 ubox
43 62 0.946216718 ubox
43 64 0.266191775 ubox
43 66 0.004737349 ubox
43 72 0.007842979 ubox
44 55 0.179192930 ubox
44 59 0.005135271 ubox
44 61 0.944714980 ubox
44 63 0.265556705 ubox
44 65 0.006468653 ubox
44 71 0.018690860 ubox
45 54 0.179577877 ubox
45 58 0.005311945 ubox
45 64 0.006507592 ubox
45 70 0.019185999 ubox
46 60 0.938696670 ubox
46 61 0.236052889 ubox
46 63 0.005808517 ubox
46 69 0.019293644 ubox
47 55 0.009205555 ubox
47 59 0.981051025 ubox
47 60 0.062931952 ubox
47 68 0.019161937 ubox
48 54 0.009394306 ubox
48 57 0.008252389 ubox
48 58 0.978321262 ubox
48 67 0.018867539 ubox
49 53 0.008534702 ubox
49 56 0.009815443 ubox
49 57 0.695540766 ubox
49 58 0.096553431 ubox
49 66 0.017651595 ubox
50 56 0.686430055 ubox
50 57 0.693982127 ubox
50 58 0.009096587 ubox
50 66 0.004647403 ubox
50 67 0.005841055 ubox
51 56 0.695670347 ubox
51 57 0.011023540 ubox
51 66 0.006462158 ubox
54 63 0.016627564 ubox
54 65 0.011561050 ubox
55 62 0.016630061 ubox
55 64 0.011564439 ubox
56 61 0.016581235 ubox
56 63 0.011559062 ubox
57 69 0.004300361 ubox
58 68 0.004328266 ubox
59 67 0.004337358 ubox
60 66 0.003871088 ubox
61 72 0.011634625 ubox
62 71 0.014653685 ubox
63 70 0.014932794 ubox
63 72 0.012609584 ubox
64 69 0.013991599 ubox
64 71 0.013556249 ubox
65 70 0.013622587 ubox
66 71 0.006200887 ubox
1 34 0.9500000 lbox
2 33 0.9500000 lbox
3 32 0.9500000 lbox
4 31 0.9500000 lbox
6 29 0.9500000 lbox
7 28 0.9500000 lbox
8 27 0.9500000 lbox
9 26 0.9500000 lbox
10 25 0.9500000 lbox
11 24 0.9500000 lbox
12 21 0.9500000 lbox
13 20 0.9500000 lbox
36 69 0.9500000 lbox
37 68 0.9500000 lbox
40 65 0.9500000 lbox
41 64 0.9500000 lbox
42 63 0.9500000 lbox
43 62 0.9500000 lbox
44 61 0.9500000 lbox
46 60 0.9500000 lbox
47 59 0.9500000 lbox
48 58 0.9500000 lbox
49 57 0.9500000 lbox
50 56 0.9500000 lbox
showpage
end
%%EOF
