%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:36:59 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (VWA3A)
} def

/sequence { (\
GCUGAGUUGCUUGGAGGAGCUUGGAGAAACCAGAAGUGAGAUCCAGGAGAAGUAAGGCCCUGGAGUGCCAGGAGCCCUUCUCCCAAAGAUGGAGAAAUAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.006799752 ubox
1 10 0.161229654 ubox
1 20 0.012353870 ubox
1 37 0.076225503 ubox
1 53 0.086910845 ubox
1 58 0.005261298 ubox
2 6 0.007503995 ubox
2 9 0.161743302 ubox
2 14 0.013305136 ubox
2 19 0.012380402 ubox
2 24 0.196979457 ubox
2 26 0.016259137 ubox
2 33 0.944365098 ubox
2 36 0.077362626 ubox
2 40 0.008873893 ubox
2 46 0.005035909 ubox
2 49 0.005230793 ubox
2 52 0.090087002 ubox
2 56 0.006673407 ubox
2 57 0.005265593 ubox
2 88 0.012586398 ubox
2 92 0.014015422 ubox
2 94 0.037659101 ubox
3 13 0.013326217 ubox
3 18 0.012202580 ubox
3 23 0.197085790 ubox
3 25 0.015586125 ubox
3 32 0.948666416 ubox
3 35 0.073246180 ubox
3 39 0.008437853 ubox
3 45 0.005247313 ubox
3 48 0.005191020 ubox
3 51 0.089112859 ubox
3 54 0.023584938 ubox
3 55 0.010579618 ubox
3 56 0.005211726 ubox
3 85 0.011159037 ubox
3 87 0.012173016 ubox
3 91 0.013463105 ubox
3 93 0.037145671 ubox
3 99 0.004203005 ubox
4 12 0.014730446 ubox
4 22 0.201304272 ubox
4 31 0.949616337 ubox
4 44 0.005113741 ubox
4 53 0.024481479 ubox
4 84 0.012118139 ubox
4 90 0.006548970 ubox
4 98 0.003614918 ubox
5 11 0.015544001 ubox
5 21 0.204541112 ubox
6 10 0.015313193 ubox
6 20 0.205082457 ubox
6 30 0.950777321 ubox
6 42 0.003384474 ubox
6 53 0.003809196 ubox
6 90 0.030910631 ubox
6 98 0.019615512 ubox
7 14 0.004759530 ubox
7 15 0.005957307 ubox
7 19 0.204937714 ubox
7 28 0.056984670 ubox
7 29 0.948888588 ubox
7 33 0.003334165 ubox
7 35 0.003536907 ubox
7 39 0.005423969 ubox
7 41 0.003496453 ubox
7 48 0.011678719 ubox
7 49 0.028712113 ubox
7 50 0.058352746 ubox
7 51 0.012279746 ubox
7 52 0.003742731 ubox
7 55 0.013632292 ubox
7 86 0.009689727 ubox
7 87 0.005678091 ubox
7 88 0.003163894 ubox
7 89 0.031058803 ubox
7 95 0.003897645 ubox
7 96 0.004360173 ubox
7 97 0.020042862 ubox
7 100 0.003397762 ubox
8 13 0.004007930 ubox
8 14 0.006075743 ubox
8 15 0.003211883 ubox
8 18 0.203218897 ubox
8 27 0.062871881 ubox
8 28 0.674438311 ubox
8 32 0.003901418 ubox
8 34 0.003468075 ubox
8 38 0.005806593 ubox
8 40 0.003237095 ubox
8 47 0.005238139 ubox
8 48 0.034070300 ubox
8 49 0.051633488 ubox
8 50 0.014061894 ubox
8 51 0.004035938 ubox
8 54 0.015681116 ubox
8 85 0.010586402 ubox
8 86 0.005458555 ubox
8 87 0.003334106 ubox
8 88 0.029703300 ubox
8 94 0.003727066 ubox
8 95 0.004855166 ubox
8 96 0.016292392 ubox
8 99 0.004479049 ubox
9 20 0.070844035 ubox
9 31 0.003939110 ubox
9 37 0.006332843 ubox
9 53 0.015962486 ubox
9 84 0.010630961 ubox
9 98 0.003835524 ubox
10 16 0.201256632 ubox
10 17 0.030551995 ubox
10 19 0.071057233 ubox
10 24 0.006580204 ubox
10 26 0.948176719 ubox
10 36 0.006378982 ubox
10 46 0.017267662 ubox
10 47 0.116384913 ubox
10 52 0.015678870 ubox
10 88 0.011158239 ubox
10 92 0.005335206 ubox
10 94 0.017889835 ubox
11 15 0.181360809 ubox
11 16 0.028317752 ubox
11 18 0.070925727 ubox
11 23 0.006498499 ubox
11 25 0.951986884 ubox
11 35 0.006221330 ubox
11 45 0.013908489 ubox
11 46 0.133937489 ubox
11 51 0.015003863 ubox
11 86 0.015891397 ubox
11 87 0.011119316 ubox
11 91 0.004921951 ubox
11 93 0.017393412 ubox
12 17 0.069607425 ubox
12 23 0.004531560 ubox
12 24 0.948730909 ubox
12 32 0.004289445 ubox
12 34 0.005592223 ubox
12 45 0.199332523 ubox
12 50 0.011304736 ubox
12 85 0.017089271 ubox
12 86 0.008695129 ubox
12 92 0.012815901 ubox
13 21 0.021339621 ubox
13 22 0.005640927 ubox
13 31 0.004648174 ubox
13 44 0.209422686 ubox
13 83 0.024351328 ubox
13 84 0.015199952 ubox
14 20 0.022368300 ubox
14 21 0.007693860 ubox
14 22 0.948057555 ubox
14 30 0.004636205 ubox
14 43 0.209445471 ubox
14 82 0.025929925 ubox
14 83 0.011440802 ubox
15 21 0.949854979 ubox
15 22 0.010662612 ubox
15 42 0.208643528 ubox
15 81 0.027163669 ubox
16 20 0.929113708 ubox
16 21 0.010455180 ubox
16 31 0.003509460 ubox
16 44 0.015556531 ubox
16 80 0.027170987 ubox
17 30 0.003508235 ubox
17 43 0.015573783 ubox
17 79 0.027125215 ubox
18 42 0.015058853 ubox
18 78 0.027097665 ubox
19 37 0.208669559 ubox
19 77 0.026785453 ubox
20 26 0.003247959 ubox
20 33 0.007347437 ubox
20 36 0.209253877 ubox
20 40 0.009513758 ubox
20 47 0.029932976 ubox
21 32 0.005494467 ubox
21 33 0.080224688 ubox
21 34 0.018884650 ubox
21 35 0.190086407 ubox
21 39 0.009272330 ubox
21 46 0.033649901 ubox
22 27 0.003993485 ubox
22 32 0.181941347 ubox
22 33 0.016543743 ubox
22 34 0.102725912 ubox
22 38 0.007385447 ubox
22 45 0.052616062 ubox
23 31 0.210197927 ubox
23 37 0.005067392 ubox
23 44 0.061092508 ubox
24 30 0.209772291 ubox
24 43 0.061116999 ubox
25 42 0.060839090 ubox
26 43 0.006891726 ubox
27 42 0.006838762 ubox
29 37 0.060849261 ubox
30 36 0.061494737 ubox
30 92 0.058461521 ubox
31 38 0.078699749 ubox
31 91 0.058732586 ubox
32 37 0.075663810 ubox
32 90 0.057856549 ubox
33 43 0.006777905 ubox
34 42 0.007459836 ubox
36 42 0.010279914 ubox
36 90 0.005397062 ubox
36 98 0.494893146 ubox
37 41 0.011952089 ubox
37 45 0.032198015 ubox
37 85 0.054906975 ubox
37 89 0.005798231 ubox
37 91 0.004351875 ubox
37 97 0.504911086 ubox
37 99 0.142204782 ubox
38 44 0.035737475 ubox
38 84 0.055543533 ubox
38 90 0.003540408 ubox
38 98 0.147062825 ubox
41 90 0.125685770 ubox
41 98 0.025734554 ubox
42 89 0.129852865 ubox
42 93 0.911122476 ubox
42 95 0.011417913 ubox
42 97 0.012389944 ubox
43 88 0.130394151 ubox
43 91 0.003600131 ubox
43 92 0.954543699 ubox
43 94 0.009309706 ubox
44 91 0.954718462 ubox
45 90 0.946552913 ubox
46 82 0.004165086 ubox
46 83 0.983840192 ubox
46 84 0.088639245 ubox
47 82 0.990254750 ubox
47 83 0.062915986 ubox
48 81 0.992360168 ubox
49 80 0.992633179 ubox
49 82 0.005060207 ubox
50 79 0.992241835 ubox
50 81 0.003858518 ubox
51 78 0.991559468 ubox
51 79 0.008091447 ubox
51 81 0.004126398 ubox
52 77 0.990123073 ubox
52 78 0.010965406 ubox
52 80 0.005485185 ubox
54 79 0.009545319 ubox
55 78 0.019775132 ubox
56 76 0.998849236 ubox
56 77 0.018952162 ubox
57 75 0.999869278 ubox
57 76 0.013937230 ubox
58 74 0.999856044 ubox
59 72 0.999861171 ubox
60 71 0.999977886 ubox
60 72 0.004304013 ubox
61 70 0.999752700 ubox
62 69 0.999969929 ubox
63 68 0.995488690 ubox
77 94 0.004635904 ubox
78 93 0.004645048 ubox
78 96 0.103626322 ubox
78 97 0.005791108 ubox
79 92 0.004617847 ubox
79 95 0.115878965 ubox
79 96 0.004770778 ubox
80 91 0.004613160 ubox
80 94 0.117454205 ubox
81 89 0.003745412 ubox
81 93 0.117480512 ubox
81 95 0.014109512 ubox
82 88 0.003823177 ubox
82 92 0.114009200 ubox
82 94 0.018978691 ubox
83 91 0.110179417 ubox
83 92 0.095070798 ubox
84 91 0.115136477 ubox
85 90 0.103443233 ubox
89 98 0.033574293 ubox
90 97 0.034580700 ubox
90 99 0.016689151 ubox
91 98 0.018342059 ubox
2 33 0.9500000 lbox
3 32 0.9500000 lbox
4 31 0.9500000 lbox
6 30 0.9500000 lbox
7 29 0.9500000 lbox
8 28 0.9500000 lbox
10 26 0.9500000 lbox
11 25 0.9500000 lbox
12 24 0.9500000 lbox
14 22 0.9500000 lbox
15 21 0.9500000 lbox
16 20 0.9500000 lbox
42 93 0.9500000 lbox
43 92 0.9500000 lbox
44 91 0.9500000 lbox
45 90 0.9500000 lbox
46 83 0.9500000 lbox
47 82 0.9500000 lbox
48 81 0.9500000 lbox
49 80 0.9500000 lbox
50 79 0.9500000 lbox
51 78 0.9500000 lbox
52 77 0.9500000 lbox
56 76 0.9500000 lbox
57 75 0.9500000 lbox
58 74 0.9500000 lbox
59 72 0.9500000 lbox
60 71 0.9500000 lbox
61 70 0.9500000 lbox
62 69 0.9500000 lbox
63 68 0.9500000 lbox
showpage
end
%%EOF
