%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:13:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUGGCUGGCGCGGAUUCCAGCUGCUUUCCAAGUCAGCGGCGCCUAGUGAGAGUCAGGGGGGCCCGGCCCGCGCCCUCCCCGCCCAGCCGCCUCCCCGUCGACGCCCAGGGCUGGGGCGAGCCAGGCUGCCUUUCGAACUUGGGGGGCUUCUCCUCUUGUCUCCCACUGGUGCUCUGGCUGUGAAUCCAUCCAGGGGCCAGG\
) } def
/len { sequence length } bind def

/coor [
[125.97817230 434.03274536]
[118.23574066 419.57635498]
[127.11283112 405.78762817]
[127.34382629 390.78939819]
[127.57481384 375.79116821]
[127.80580139 360.79296875]
[128.03678894 345.79473877]
[128.26779175 330.79650879]
[128.15228271 315.79696655]
[127.69036102 300.80407715]
[117.15807343 293.37548828]
[112.76348877 281.05252075]
[116.32281494 268.26074219]
[126.75200653 259.73217773]
[126.52101898 244.73396301]
[126.29002380 229.73573303]
[126.05903625 214.73751831]
[125.82804871 199.73930359]
[125.59705353 184.74107361]
[125.25058746 169.74507141]
[124.78866577 154.75219727]
[124.32673645 139.75930786]
[123.86480713 124.76641846]
[117.10040283 121.52716827]
[96.80717468 111.80940247]
[84.83691406 120.84892273]
[72.86665344 129.88844299]
[60.89639664 138.92796326]
[51.90023041 153.29824829]
[35.60114670 148.63175964]
[35.57324600 131.67782593]
[51.85688019 126.95770264]
[63.82713699 117.91818237]
[75.79739380 108.87866211]
[87.76765442 99.83914185]
[95.46681213 86.96579742]
[97.76768494 72.14331818]
[100.06855774 57.32083511]
[98.29199982 48.35500717]
[102.52068329 42.28852463]
[105.04954529 27.50323296]
[107.57839966 12.71794033]
[110.10726166 -2.06735182]
[112.63612366 -16.85264397]
[115.16497803 -31.63793755]
[113.52670288 -40.63005829]
[117.84830475 -46.63070297]
[120.60454559 -61.37530136]
[123.36078644 -76.11989594]
[126.11703491 -90.86449432]
[121.04724884 -105.85141754]
[130.99143982 -116.94025421]
[133.74768066 -131.68486023]
[136.50392151 -146.42944336]
[131.43414307 -161.41636658]
[141.37832642 -172.50521851]
[144.13456726 -187.24981689]
[146.89080811 -201.99440002]
[149.64706421 -216.73899841]
[152.40330505 -231.48359680]
[155.15954590 -246.22819519]
[157.91578674 -260.97277832]
[139.22576904 -300.37701416]
[136.24279785 -315.07742310]
[133.25981140 -329.77780151]
[122.93268585 -341.76367188]
[127.98444366 -355.77542114]
[125.00146484 -370.47583008]
[122.01849365 -385.17623901]
[112.61354828 -390.65423584]
[107.87638855 -400.20870972]
[109.15607452 -410.57473755]
[115.78987885 -418.35580444]
[113.26101685 -433.14111328]
[110.73215485 -447.92639160]
[108.20330048 -462.71170044]
[105.67443848 -477.49697876]
[103.14558411 -492.28228760]
[94.78427124 -496.66210938]
[89.45739746 -504.28704834]
[88.25765991 -513.37188721]
[91.32901764 -521.85937500]
[97.86245728 -527.88598633]
[96.01913452 -542.77227783]
[94.17581177 -557.65856934]
[92.33248901 -572.54486084]
[79.80462646 -578.30078125]
[71.82131195 -589.40808105]
[70.38173676 -602.90185547]
[75.75568390 -615.24475098]
[86.44081879 -623.25427246]
[84.82695007 -638.16723633]
[75.64978790 -651.05480957]
[81.97283936 -664.54071045]
[80.35897064 -679.45361328]
[67.89057922 -689.16516113]
[66.02414703 -704.85888672]
[75.86700439 -717.22387695]
[91.57955170 -718.92431641]
[103.83982086 -708.95129395]
[105.37400055 -693.22161865]
[95.27189636 -681.06750488]
[96.88576508 -666.15454102]
[105.94749451 -654.33361816]
[99.73988342 -639.78106689]
[101.35374451 -624.86816406]
[115.84793091 -617.16668701]
[122.96875000 -602.19439697]
[119.73210144 -585.76464844]
[107.21879578 -574.38818359]
[109.06211853 -559.50189209]
[110.90544128 -544.61560059]
[112.74876404 -529.72930908]
[126.57919312 -514.41381836]
[117.93087769 -494.81112671]
[120.45973206 -480.02584839]
[122.98859406 -465.24053955]
[125.51744843 -450.45526123]
[128.04631042 -435.66995239]
[130.57516479 -420.88467407]
[143.98513794 -406.95861816]
[136.71890259 -388.15921021]
[139.70187378 -373.45880127]
[142.68484497 -358.75839233]
[152.79861450 -347.82400513]
[147.96022034 -332.76077271]
[150.94319153 -318.06039429]
[153.92616272 -303.35998535]
[167.24966431 -296.46762085]
[180.57196045 -289.57586670]
[194.29386902 -295.63467407]
[208.01577759 -301.69348145]
[221.73768616 -307.75231934]
[235.45959473 -313.81112671]
[249.18150330 -319.86993408]
[262.90341187 -325.92874146]
[276.62530518 -331.98757935]
[285.86328125 -345.53720093]
[302.19412231 -344.04202271]
[308.81808472 -329.04019165]
[298.92098999 -315.96426392]
[282.68414307 -318.26565552]
[268.96221924 -312.20684814]
[255.24031067 -306.14804077]
[241.51840210 -300.08920288]
[227.79649353 -294.03039551]
[214.07458496 -287.97158813]
[200.35267639 -281.91278076]
[186.63076782 -275.85394287]
[200.79945374 -270.92968750]
[204.99099731 -256.52722168]
[195.67742920 -244.76892090]
[180.69786072 -245.55158997]
[172.66038513 -258.21655273]
[169.90414429 -243.47195435]
[167.14790344 -228.72735596]
[164.39164734 -213.98275757]
[161.63540649 -199.23815918]
[158.87916565 -184.49356079]
[156.12292480 -169.74897766]
[161.38984680 -155.81668091]
[151.24851990 -143.67320251]
[148.49227905 -128.92860413]
[145.73603821 -114.18401337]
[151.00296021 -100.25172424]
[140.86163330 -88.10825348]
[138.10539246 -73.36365509]
[135.34913635 -58.61905670]
[132.59289551 -43.87446213]
[129.95027161 -29.10907745]
[127.42140961 -14.32378578]
[124.89255524 0.46150693]
[122.36369324 15.24679947]
[119.83483887 30.03209114]
[117.30597687 44.81738281]
[114.89103699 59.62171173]
[112.59016418 74.44419098]
[110.28929138 89.26667786]
[138.85769653 124.30449677]
[139.31962585 139.29737854]
[139.78155518 154.29026794]
[140.24346924 169.28315735]
[143.63725281 177.76988220]
[140.59527588 184.51008606]
[140.82626343 199.50830078]
[141.05726624 214.50653076]
[141.28825378 229.50474548]
[141.51924133 244.50297546]
[141.75022888 259.50119019]
[154.52897644 271.44396973]
[154.71575928 288.59597778]
[142.68324280 300.34216309]
[143.14517212 315.33505249]
[145.90092468 319.78128052]
[146.60169983 324.37988281]
[145.53437805 328.32122803]
[143.26600647 331.02749634]
[143.03501892 346.02572632]
[142.80403137 361.02395630]
[142.57302856 376.02218628]
[142.34204102 391.02038574]
[142.11105347 406.01861572]
[150.55931091 420.07418823]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 202]
[4 201]
[5 200]
[6 199]
[7 198]
[8 197]
[9 193]
[10 192]
[14 189]
[15 188]
[16 187]
[17 186]
[18 185]
[19 184]
[20 182]
[21 181]
[22 180]
[23 179]
[25 35]
[26 34]
[27 33]
[28 32]
[36 178]
[37 177]
[38 176]
[40 175]
[41 174]
[42 173]
[43 172]
[44 171]
[45 170]
[47 169]
[48 168]
[49 167]
[50 166]
[52 164]
[53 163]
[54 162]
[56 160]
[57 159]
[58 158]
[59 157]
[60 156]
[61 155]
[62 154]
[63 128]
[64 127]
[65 126]
[67 124]
[68 123]
[69 122]
[73 120]
[74 119]
[75 118]
[76 117]
[77 116]
[78 115]
[83 113]
[84 112]
[85 111]
[86 110]
[91 106]
[92 105]
[94 103]
[95 102]
[130 149]
[131 148]
[132 147]
[133 146]
[134 145]
[135 144]
[136 143]
[137 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
