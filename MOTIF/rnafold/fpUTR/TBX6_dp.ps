%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:05:44 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TBX6)
} def

/sequence { (\
AGCUGUCGGACUCACCGGGGGCCCUAAGCAGCGAGACCUGAGGCCAGACGGAACUACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.007255867 ubox
1 25 0.003757070 ubox
1 55 0.223508784 ubox
2 11 0.008337982 ubox
2 22 0.145004214 ubox
2 29 0.016965207 ubox
2 32 0.158537817 ubox
2 54 0.233946854 ubox
3 9 0.008792446 ubox
3 19 0.003796742 ubox
3 21 0.145434873 ubox
3 28 0.016993324 ubox
3 31 0.158740110 ubox
3 51 0.968096913 ubox
4 8 0.007937522 ubox
4 14 0.007205882 ubox
4 20 0.145269673 ubox
4 27 0.016868032 ubox
4 30 0.158704340 ubox
4 50 0.972130231 ubox
4 58 0.021398216 ubox
5 11 0.005787225 ubox
5 13 0.008119637 ubox
5 29 0.158731596 ubox
5 49 0.974980622 ubox
5 57 0.023116412 ubox
5 60 0.003554273 ubox
6 10 0.005229254 ubox
6 18 0.145188615 ubox
6 28 0.157358760 ubox
6 48 0.974857612 ubox
6 56 0.022764840 ubox
6 59 0.003505596 ubox
7 17 0.147556217 ubox
7 47 0.974151443 ubox
8 16 0.152423538 ubox
8 23 0.060320851 ubox
8 24 0.147371682 ubox
8 25 0.009451165 ubox
8 45 0.955465882 ubox
8 55 0.021737213 ubox
9 15 0.152014971 ubox
9 22 0.060510798 ubox
9 23 0.147011482 ubox
9 24 0.009572625 ubox
9 44 0.941769953 ubox
9 54 0.021975234 ubox
11 18 0.008387121 ubox
11 19 0.032575090 ubox
11 20 0.092740972 ubox
11 21 0.129026328 ubox
11 42 0.952432788 ubox
11 43 0.124444199 ubox
12 17 0.007643636 ubox
12 18 0.032459734 ubox
12 19 0.093091025 ubox
12 20 0.128759445 ubox
12 21 0.004291775 ubox
12 41 0.965787758 ubox
12 42 0.111452188 ubox
12 43 0.013078424 ubox
12 52 0.005091207 ubox
13 17 0.031445641 ubox
13 18 0.092702618 ubox
13 19 0.128282904 ubox
13 20 0.007487246 ubox
13 40 0.964418851 ubox
13 42 0.029099226 ubox
13 51 0.003559687 ubox
14 39 0.885145161 ubox
15 21 0.009392166 ubox
15 43 0.019900568 ubox
15 51 0.047916354 ubox
16 20 0.009676467 ubox
16 33 0.067269690 ubox
16 40 0.126482532 ubox
16 42 0.019898897 ubox
16 50 0.048181395 ubox
17 23 0.006780152 ubox
17 24 0.014350141 ubox
17 25 0.015601863 ubox
17 32 0.067354341 ubox
17 38 0.875016178 ubox
17 39 0.180544840 ubox
17 49 0.048098770 ubox
18 22 0.006699534 ubox
18 23 0.014396718 ubox
18 24 0.017173485 ubox
18 25 0.006873444 ubox
18 37 0.877661166 ubox
18 38 0.222657547 ubox
18 39 0.107150733 ubox
19 23 0.016964521 ubox
19 24 0.007662948 ubox
19 25 0.005022834 ubox
19 37 0.221848428 ubox
19 38 0.150976039 ubox
19 39 0.036664068 ubox
19 45 0.003780301 ubox
20 24 0.005138380 ubox
20 37 0.151350205 ubox
20 38 0.050361353 ubox
20 39 0.004723986 ubox
20 45 0.072141847 ubox
21 29 0.137617048 ubox
21 32 0.917235711 ubox
21 37 0.050259739 ubox
21 38 0.006516497 ubox
21 44 0.072370016 ubox
22 28 0.137604751 ubox
22 31 0.916979220 ubox
22 43 0.068462855 ubox
22 51 0.005503150 ubox
23 42 0.064048607 ubox
23 43 0.096792064 ubox
23 50 0.007588624 ubox
23 51 0.047634530 ubox
24 31 0.170261455 ubox
24 35 0.080665923 ubox
24 42 0.100393811 ubox
24 43 0.010973382 ubox
24 47 0.026249256 ubox
24 50 0.047620023 ubox
24 51 0.010596055 ubox
25 30 0.163266738 ubox
25 34 0.080692006 ubox
25 40 0.017144792 ubox
25 41 0.100974328 ubox
25 42 0.010693893 ubox
25 46 0.025751763 ubox
25 50 0.010279871 ubox
26 39 0.016006854 ubox
27 39 0.042484268 ubox
27 55 0.013907237 ubox
28 38 0.044336961 ubox
28 44 0.061299401 ubox
28 54 0.014439653 ubox
29 40 0.119789980 ubox
29 43 0.061459082 ubox
30 39 0.120245493 ubox
30 55 0.009088203 ubox
31 38 0.119218031 ubox
31 44 0.026211904 ubox
31 54 0.009510512 ubox
32 40 0.061025710 ubox
32 43 0.026287731 ubox
32 50 0.018457088 ubox
33 39 0.053165554 ubox
33 49 0.018915848 ubox
34 55 0.045827298 ubox
35 54 0.047181010 ubox
37 43 0.022667496 ubox
37 51 0.023049186 ubox
38 42 0.022606112 ubox
38 47 0.101705753 ubox
38 50 0.022204233 ubox
38 51 0.063091847 ubox
39 46 0.102592414 ubox
39 50 0.063194223 ubox
39 56 0.010625644 ubox
39 58 0.089101415 ubox
40 45 0.102362895 ubox
40 49 0.063920807 ubox
40 55 0.009909373 ubox
40 57 0.096082892 ubox
41 55 0.112879534 ubox
42 54 0.114352594 ubox
42 55 0.025534702 ubox
43 54 0.026057928 ubox
44 51 0.150349506 ubox
45 50 0.150533676 ubox
46 55 0.015958227 ubox
47 54 0.016682738 ubox
3 51 0.9500000 lbox
4 50 0.9500000 lbox
5 49 0.9500000 lbox
6 48 0.9500000 lbox
7 47 0.9500000 lbox
8 45 0.9500000 lbox
9 44 0.9500000 lbox
11 42 0.9500000 lbox
12 41 0.9500000 lbox
13 40 0.9500000 lbox
14 39 0.9500000 lbox
17 38 0.9500000 lbox
18 37 0.9500000 lbox
21 32 0.9500000 lbox
22 31 0.9500000 lbox
showpage
end
%%EOF
