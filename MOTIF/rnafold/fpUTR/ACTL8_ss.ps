%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:42:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCCUGCUUGCCACGUGCUCACAGAGUAGGCUGCGGCACCACGUGCAGCCGCUCUCGUGCAGGCGUUUGCAGUGUGCAGCUGAGUUCGGCAGCUCACACAGCACCCCUUUCAAGUUGUUUUGCAGUGGGUGCCUCUUGUGAGACACUGUUUCUGAGAGCAGCUUUUGUGGCAUCUUACAGGGCAGAUUUCUGGUCCCACCCACCUCUGCCUCCGCC\
) } def
/len { sequence length } bind def

/coor [
[167.33374023 281.74447632]
[182.31330872 280.96191406]
[195.72088623 287.68835449]
[188.82409668 274.36788940]
[181.92730713 261.04745483]
[175.03053284 247.72698975]
[156.07870483 243.20051575]
[146.42314148 225.92538452]
[152.68728638 206.83071899]
[145.21865845 193.82226562]
[137.75003052 180.81382751]
[130.28138733 167.80538940]
[122.81275177 154.79695129]
[115.34412384 141.78851318]
[107.87548828 128.78007507]
[90.45146179 128.26908875]
[76.28627014 118.11007690]
[62.45944595 123.92548370]
[48.63262177 129.74089050]
[34.89143372 135.75584412]
[21.23876572 141.96911621]
[7.58609629 148.18237305]
[-6.02123928 154.49429321]
[-19.58252907 160.90455627]
[-33.14381790 167.31481934]
[-46.70510864 173.72506714]
[-60.26639938 180.13533020]
[-66.68401337 186.62901306]
[-74.07073212 186.53863525]
[-87.72340393 192.75189209]
[-101.37606812 198.96516418]
[-115.02873993 205.17842102]
[-128.68141174 211.39167786]
[-142.33407593 217.60494995]
[-155.98674011 223.81820679]
[-158.95623779 239.04849243]
[-170.33366394 249.59997559]
[-185.74418640 251.41539001]
[-199.26211548 243.79666138]
[-205.68955994 229.67337036]
[-202.55502319 214.47618103]
[-191.06381226 204.04875183]
[-175.63450623 202.40061951]
[-162.20001221 210.16554260]
[-148.54733276 203.95227051]
[-134.89466858 197.73901367]
[-121.24200439 191.52575684]
[-107.58933258 185.31248474]
[-93.93666077 179.09922791]
[-80.28399658 172.88597107]
[-66.67665863 166.57403564]
[-53.11536789 160.16378784]
[-39.55407715 153.75352478]
[-25.99278831 147.34326172]
[-12.43149853 140.93301392]
[-7.72969246 135.23522949]
[1.37283456 134.52970886]
[15.02550411 128.31643677]
[28.67817307 122.10317993]
[31.16108704 118.02822876]
[36.22812653 115.46738434]
[42.81721878 115.91406250]
[56.64404297 110.09865570]
[70.47087097 104.28325653]
[68.01872253 95.83158112]
[68.11528015 86.39649200]
[71.09668732 76.77386475]
[77.04629517 67.86282349]
[67.77908325 56.06796265]
[58.51187134 44.27309799]
[43.90190506 38.20190048]
[42.12284470 23.41392708]
[32.85563278 11.61906338]
[23.58842087 -0.17579958]
[14.32120991 -11.97066307]
[5.05399895 -23.76552582]
[-2.70492959 -28.57726097]
[-4.26051474 -35.79888535]
[-13.35600185 -47.72667313]
[-22.45148849 -59.65446091]
[-31.54697609 -71.58224487]
[-40.64246368 -83.51003265]
[-56.27042770 -84.05847168]
[-67.85494995 -94.56240845]
[-69.92617798 -110.06221771]
[-61.50614548 -123.23935699]
[-46.57052231 -127.87198639]
[-32.17146301 -121.77272034]
[-25.10775757 -107.82144165]
[-28.71467590 -92.60552216]
[-19.61918831 -80.67773438]
[-10.52370167 -68.74994659]
[-1.42821467 -56.82215881]
[7.66727257 -44.89437485]
[16.84886169 -33.03273773]
[26.11607361 -21.23787308]
[35.38328552 -9.44301033]
[44.65049744 2.35185242]
[53.91770554 14.14671516]
[67.86482239 19.37426376]
[70.30673218 35.00588608]
[79.57394409 46.80075073]
[88.84115601 58.59561539]
[96.30797577 59.30034637]
[93.82998657 44.50643921]
[90.32238007 29.92231560]
[100.15026855 18.59038734]
[115.08390045 19.99986649]
[122.61804199 32.97047806]
[116.44372559 46.64076614]
[111.24160767 60.70980835]
[118.70842743 61.41453934]
[130.01876831 51.56182098]
[141.32911682 41.70910645]
[152.63946533 31.85638809]
[163.94981384 22.00367165]
[175.26016235 12.15095520]
[186.57051086 2.29823828]
[197.88085938 -7.55447865]
[209.19120789 -17.40719604]
[220.50155640 -27.25991249]
[224.91413879 -35.25259399]
[232.04769897 -37.17195129]
[243.49949646 -46.85989761]
[254.95129395 -56.54784393]
[255.80822754 -75.47698212]
[269.98889160 -87.55781555]
[288.17874146 -85.46866608]
[299.34524536 -95.48408508]
[310.51177979 -105.49951172]
[321.67831421 -115.51493073]
[326.78549194 -130.48915100]
[341.42626953 -133.22717285]
[352.59280396 -143.24259949]
[363.75930786 -153.25801086]
[368.33996582 -169.00444031]
[384.32937622 -172.64735413]
[395.27902222 -160.43925476]
[389.92483521 -144.93878174]
[373.77474976 -142.09149170]
[362.60821533 -132.07606506]
[351.44168091 -122.06064606]
[347.13320923 -107.80279541]
[331.69372559 -104.34841156]
[320.52719116 -94.33298492]
[309.36068726 -84.31756592]
[298.19415283 -74.30213928]
[300.05880737 -63.05182266]
[296.22326660 -52.18523788]
[287.53073120 -44.43860245]
[276.06228638 -41.82139206]
[264.63925171 -45.09604263]
[253.18743896 -35.40809631]
[241.73564148 -25.72015190]
[230.35427856 -15.94956398]
[219.04393005 -6.09684753]
[207.73358154 3.75586939]
[196.42323303 13.60858631]
[185.11288452 23.46130371]
[173.80253601 33.31401825]
[162.49218750 43.16673660]
[151.18183899 53.01945496]
[139.87149048 62.87216949]
[128.56114197 72.72488403]
[134.66064453 100.57471466]
[120.88392639 121.31143951]
[128.35255432 134.31988525]
[135.82119751 147.32832336]
[143.28982544 160.33676147]
[150.75846863 173.34519958]
[158.22709656 186.35363770]
[165.69572449 199.36207581]
[176.35592651 199.49179077]
[185.92852783 203.99810791]
[192.71661377 212.00820923]
[195.54772949 222.03495789]
[193.97602844 232.25283813]
[188.35098267 240.83021545]
[195.24775696 254.15066528]
[202.14454651 267.47109985]
[209.04133606 280.79156494]
[216.88343811 293.57833862]
[225.62979126 305.76443481]
[234.37614441 317.95053101]
[243.12251282 330.13665771]
[251.86886597 342.32275391]
[263.74551392 341.92987061]
[274.23074341 347.26239014]
[280.77392578 356.89340210]
[281.84637451 368.36703491]
[277.29690552 378.82403564]
[285.68679810 391.25823975]
[294.07669067 403.69244385]
[309.63693237 406.45913696]
[318.61471558 419.46588135]
[315.68365479 434.99600220]
[302.58273315 443.83575439]
[287.08447266 440.74066162]
[278.38372803 427.54702759]
[281.64248657 412.08233643]
[273.25259399 399.64813232]
[264.86270142 387.21392822]
[246.71200562 384.80838013]
[235.90199280 369.63662720]
[239.68275452 351.06912231]
[230.93640137 338.88299561]
[222.19004822 326.69689941]
[213.44367981 314.51080322]
[204.69732666 302.32467651]
[204.61463928 317.32446289]
[197.12631226 330.32156372]
[184.19111633 337.91635132]
[169.19252014 338.12216187]
[156.05377197 330.88522339]
[148.21160889 318.09851074]
[147.71733093 303.10665894]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 181]
[4 180]
[5 179]
[6 178]
[9 172]
[10 171]
[11 170]
[12 169]
[13 168]
[14 167]
[15 166]
[17 64]
[18 63]
[19 62]
[20 59]
[21 58]
[22 57]
[23 55]
[24 54]
[25 53]
[26 52]
[27 51]
[29 50]
[30 49]
[31 48]
[32 47]
[33 46]
[34 45]
[35 44]
[68 103]
[69 102]
[70 101]
[72 99]
[73 98]
[74 97]
[75 96]
[76 95]
[78 94]
[79 93]
[80 92]
[81 91]
[82 90]
[112 164]
[113 163]
[114 162]
[115 161]
[116 160]
[117 159]
[118 158]
[119 157]
[120 156]
[121 155]
[123 154]
[124 153]
[125 152]
[128 147]
[129 146]
[130 145]
[131 144]
[133 142]
[134 141]
[135 140]
[182 209]
[183 208]
[184 207]
[185 206]
[186 205]
[191 202]
[192 201]
[193 200]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
