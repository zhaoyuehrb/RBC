%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:12:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCGCGCCAGGCGAGUCUCCGCGUCUCCCUCGCGAACUCGGUGAAAGGAAUUGGCGCCGUUCGACACCAGGCGGAUCCGCUCUGCAGCACGAACCCAUCUCCAGCCGCAGCCGCAGCCGCCGCCCGGGCCGAGGAGCAGCCGCAGCAGCCGCCACCAGUGGCCGAGUGAGCGGAGCCGAGUUUGAGGCAGCGCCUAGCGGUGAAUCGGGGCCCUCACC\
) } def
/len { sequence length } bind def

/coor [
[53.55162811 232.04341125]
[50.13893509 246.65003967]
[46.72624207 261.25668335]
[43.31354904 275.86331177]
[39.90085983 290.46990967]
[47.11111832 304.80142212]
[40.27121353 319.31332397]
[24.62813950 322.87335205]
[12.18192005 312.75054932]
[12.48022938 296.71026611]
[25.29423141 287.05722046]
[28.70692444 272.45059204]
[32.11961746 257.84396362]
[35.53231049 243.23735046]
[38.94499969 228.63072205]
[32.37062836 225.02134705]
[25.15166473 238.16998291]
[12.00314236 230.95080566]
[19.22188377 217.80258179]
[12.64751148 214.19320679]
[2.15563679 224.91329956]
[-8.33623791 235.63340759]
[-18.82811356 246.35350037]
[-17.11772728 261.89727783]
[-25.84178543 274.87512207]
[-40.88105392 279.15933228]
[-55.13444901 272.72702026]
[-61.87195587 258.61532593]
[-57.91232681 243.48735046]
[-45.12517929 234.48608398]
[-29.54821396 235.86163330]
[-19.05633926 225.14152527]
[-8.56446362 214.42143250]
[1.92741096 203.70132446]
[4.15703297 191.85340881]
[9.85813713 182.04124451]
[17.97990036 175.16435242]
[27.28480339 171.67367554]
[36.52062607 171.55403137]
[44.58200455 174.36741638]
[52.54295731 161.65429688]
[60.50390625 148.94117737]
[68.46485901 136.22807312]
[76.42580414 123.51495361]
[69.45742798 113.26072693]
[66.72341156 101.16805267]
[68.60280609 88.91343689]
[55.94712067 80.86151123]
[43.29143143 72.80957794]
[28.05013084 76.02523804]
[15.33016777 67.67914581]
[12.35845470 53.12907791]
[-0.29723233 45.07714844]
[-12.95291901 37.02521896]
[-17.28148842 36.99202728]
[-21.00214767 35.71474838]
[-23.79908180 33.53626251]
[-25.49986076 30.86669159]
[-26.08495712 28.13095284]
[-38.25804520 19.36647987]
[-50.43112946 10.60200787]
[-62.60421753 1.83753538]
[-74.77729797 -6.92693710]
[-89.78546143 0.01856279]
[-106.15440369 -1.54511678]
[-119.42370605 -11.09671974]
[-126.02560425 -25.95135307]
[-124.24405670 -42.01456451]
[-136.54161072 -50.60351562]
[-148.83917236 -59.19246674]
[-161.19801331 -67.69299316]
[-173.61750793 -76.10466003]
[-186.03700256 -84.51631927]
[-202.42385864 -85.15122223]
[-209.82701111 -99.78424072]
[-200.63073730 -113.36219025]
[-184.29537964 -111.91722870]
[-177.62535095 -96.93582153]
[-165.20584106 -88.52415466]
[-152.78634644 -80.11248779]
[-145.48988342 -78.96482849]
[-140.25021362 -71.49002075]
[-127.95265961 -62.90107346]
[-115.65510559 -54.31212234]
[-103.69586182 -60.90052414]
[-89.99898529 -61.69852829]
[-77.23303986 -56.49356842]
[-67.90982819 -46.24822235]
[-63.89020157 -32.92271805]
[-66.01283264 -19.10002327]
[-53.83974457 -10.33555031]
[-41.66665649 -1.57107794]
[-29.49357033 7.19339466]
[-17.32048607 15.95786762]
[-4.90098810 24.36953163]
[7.75469875 32.42146301]
[20.41038513 40.47339249]
[34.84898376 37.00029373]
[47.79835510 44.98580933]
[51.34336472 60.15388870]
[63.99905014 68.20581818]
[76.65473938 76.25775146]
[95.21426392 67.04863739]
[115.62673187 70.59760284]
[129.98884583 85.53057098]
[144.61958313 82.22273254]
[159.25030518 78.91489410]
[168.74963379 62.51819229]
[186.90727234 58.34944916]
[202.07756042 68.60298920]
[216.60737610 64.87680817]
[231.13719177 61.15062714]
[245.66700745 57.42444611]
[260.19683838 53.69826889]
[274.69955444 49.86796951]
[289.17440796 45.93374634]
[300.46209717 34.84778976]
[314.77316284 38.97608948]
[329.24804688 35.04186630]
[343.72290039 31.10764503]
[355.01062012 20.02168655]
[369.32165527 24.14998817]
[383.79653931 20.21576691]
[398.27142334 16.28154373]
[412.71768188 12.24360180]
[427.13464355 8.10214710]
[441.55157471 3.96069288]
[455.96853638 -0.18076171]
[470.38546753 -4.32221651]
[484.77233887 -8.56696987]
[499.12841797 -12.91480541]
[501.97537231 -16.17554665]
[505.36941528 -18.16428947]
[508.84469604 -18.86506653]
[511.97778320 -18.41448593]
[514.43371582 -17.07474518]
[529.01550293 -20.59211540]
[536.39361572 -31.16690636]
[548.60681152 -33.79870987]
[558.99627686 -27.61031723]
[573.62695312 -30.91815567]
[588.25769043 -34.22599411]
[602.88842773 -37.53383255]
[616.12268066 -50.34151840]
[632.66558838 -44.47747040]
[647.24737549 -47.99484253]
[661.21997070 -62.53049850]
[679.50915527 -56.24353027]
[693.98400879 -60.17775345]
[708.45886230 -64.11197662]
[722.93371582 -68.04619598]
[737.40863037 -71.98042297]
[746.59600830 -85.13229370]
[762.61523438 -86.00553894]
[773.17779541 -73.93027496]
[770.18096924 -58.16961670]
[755.92364502 -50.81378555]
[741.34283447 -57.50554657]
[726.86798096 -53.57132721]
[712.39306641 -49.63710403]
[697.91821289 -45.70288086]
[683.44335938 -41.76866150]
[679.18811035 -32.48654175]
[670.34204102 -26.96007156]
[659.69512939 -27.21674347]
[650.76477051 -33.41306686]
[636.18298340 -29.89569664]
[629.61114502 -19.74447441]
[617.49615479 -16.69224167]
[606.19628906 -22.90310287]
[591.56555176 -19.59526443]
[576.93481445 -16.28742790]
[562.30407715 -12.97958851]
[550.07208252 -0.39256120]
[532.53289795 -6.01034260]
[517.95111084 -2.49297166]
[503.47622681 1.44125032]
[489.12017822 5.78908539]
[483.63290405 10.73333073]
[474.52691650 10.09473038]
[460.10998535 14.23618507]
[445.69302368 18.37763977]
[431.27609253 22.51909447]
[416.85913086 26.66054916]
[411.30151367 31.52557182]
[402.20562744 30.75641632]
[387.73077393 34.69063568]
[373.25588989 38.62485886]
[363.00354004 49.42941666]
[347.65713501 45.58251572]
[333.18225098 49.51673889]
[318.70739746 53.45096207]
[308.45504761 64.25551605]
[293.10864258 60.40861893]
[278.63375854 64.34284210]
[273.00692749 69.12763977]
[263.92300415 68.22808838]
[249.39318848 71.95426178]
[234.86337280 75.68044281]
[220.33355713 79.40662384]
[205.80374146 83.13280487]
[202.26251221 93.97106171]
[193.84376526 101.83743286]
[182.55815125 104.69496918]
[171.17840576 101.72238159]
[162.55815125 93.54562378]
[147.92741394 96.85346222]
[133.29669189 100.16130066]
[131.59402466 110.51251984]
[126.75540924 119.82028198]
[119.26110840 127.16072845]
[109.85498810 131.80526733]
[99.47068787 133.29287720]
[89.13892365 131.47590637]
[81.17797089 144.18902588]
[73.21701813 156.90213013]
[65.25607300 169.61524963]
[57.29512024 182.32835388]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 15]
[2 14]
[3 13]
[4 12]
[5 11]
[20 34]
[21 33]
[22 32]
[23 31]
[40 218]
[41 217]
[42 216]
[43 215]
[44 214]
[47 102]
[48 101]
[49 100]
[52 97]
[53 96]
[54 95]
[59 94]
[60 93]
[61 92]
[62 91]
[63 90]
[68 84]
[69 83]
[70 82]
[71 80]
[72 79]
[73 78]
[105 208]
[106 207]
[107 206]
[110 201]
[111 200]
[112 199]
[113 198]
[114 197]
[115 195]
[116 194]
[118 192]
[119 191]
[120 190]
[122 188]
[123 187]
[124 186]
[125 184]
[126 183]
[127 182]
[128 181]
[129 180]
[130 178]
[131 177]
[136 176]
[137 175]
[140 173]
[141 172]
[142 171]
[143 170]
[145 167]
[146 166]
[148 162]
[149 161]
[150 160]
[151 159]
[152 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
