%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:57:18 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RASGEF1A)
} def

/sequence { (\
GGUGCUUGCUUGGCUCGCGGGCAGAGGAGCCGCCGCUCGCUGGACGCCGGACCGGGCAGGACGGCGCGGGGAGCCGGCGGCCAGA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.003190998 ubox
1 16 0.004934940 ubox
1 31 0.010746107 ubox
1 34 0.009904155 ubox
1 82 0.078797619 ubox
2 9 0.004144809 ubox
2 15 0.004674791 ubox
2 18 0.003543100 ubox
2 22 0.004499318 ubox
2 30 0.011094552 ubox
2 33 0.009911531 ubox
2 62 0.043537578 ubox
2 81 0.048904971 ubox
3 8 0.003989091 ubox
3 17 0.003459140 ubox
3 19 0.006476763 ubox
3 21 0.003536588 ubox
3 23 0.821588994 ubox
3 29 0.011038004 ubox
3 32 0.009867504 ubox
3 61 0.043452481 ubox
3 80 0.018672179 ubox
3 83 0.023718983 ubox
4 14 0.007276331 ubox
4 18 0.008940655 ubox
4 22 0.912012851 ubox
4 30 0.016600646 ubox
4 31 0.007679089 ubox
4 62 0.014591954 ubox
4 82 0.025880640 ubox
5 13 0.007433391 ubox
5 17 0.008942838 ubox
5 21 0.912192755 ubox
5 24 0.102421789 ubox
5 26 0.240991075 ubox
5 27 0.091508784 ubox
5 29 0.018542383 ubox
5 59 0.015698560 ubox
5 60 0.046518435 ubox
5 84 0.016280215 ubox
6 12 0.007345954 ubox
6 20 0.911191196 ubox
6 23 0.072544093 ubox
6 24 0.276004229 ubox
6 25 0.205270758 ubox
6 26 0.082090980 ubox
6 27 0.005499142 ubox
6 28 0.019034781 ubox
6 29 0.004984546 ubox
6 58 0.011070907 ubox
6 59 0.046622345 ubox
6 83 0.013602245 ubox
7 19 0.909171919 ubox
7 23 0.368684659 ubox
7 24 0.126051393 ubox
7 25 0.032484326 ubox
7 27 0.015560216 ubox
7 28 0.029673698 ubox
7 58 0.047953594 ubox
8 14 0.010832934 ubox
8 18 0.912139631 ubox
8 22 0.404216316 ubox
8 57 0.049275202 ubox
9 13 0.010881026 ubox
9 17 0.911545312 ubox
9 21 0.404414782 ubox
9 24 0.005848831 ubox
9 26 0.037711541 ubox
9 27 0.005529312 ubox
9 56 0.049275743 ubox
10 20 0.403955398 ubox
10 23 0.004620359 ubox
10 24 0.008853902 ubox
10 25 0.037575960 ubox
10 26 0.005422988 ubox
10 55 0.049221519 ubox
10 84 0.007028946 ubox
11 17 0.007574367 ubox
11 19 0.402948203 ubox
11 23 0.011445380 ubox
11 24 0.032572638 ubox
11 25 0.005103803 ubox
11 54 0.049112602 ubox
11 83 0.008682734 ubox
12 16 0.049876122 ubox
12 18 0.403702322 ubox
12 22 0.012389363 ubox
12 31 0.003835660 ubox
12 53 0.049274136 ubox
12 82 0.009132390 ubox
13 22 0.037910408 ubox
13 30 0.003917903 ubox
13 52 0.049264822 ubox
13 81 0.009008055 ubox
14 20 0.012302827 ubox
14 21 0.038103107 ubox
14 26 0.005636145 ubox
14 29 0.003960614 ubox
14 50 0.041629674 ubox
14 80 0.008896101 ubox
15 19 0.011140359 ubox
15 20 0.035025968 ubox
15 25 0.005981472 ubox
15 28 0.004200083 ubox
15 49 0.039673149 ubox
15 50 0.023000400 ubox
15 51 0.008354564 ubox
15 79 0.003204904 ubox
16 20 0.004301005 ubox
16 24 0.006017438 ubox
16 27 0.004219749 ubox
16 49 0.026078651 ubox
16 50 0.008175186 ubox
16 79 0.008261275 ubox
17 47 0.045626213 ubox
17 48 0.018511289 ubox
17 78 0.008305999 ubox
18 46 0.049291047 ubox
18 77 0.008290820 ubox
19 45 0.049274809 ubox
20 31 0.003873935 ubox
20 75 0.008196610 ubox
21 30 0.003977408 ubox
21 74 0.008199059 ubox
22 29 0.004006817 ubox
22 42 0.049286397 ubox
22 73 0.008184434 ubox
23 41 0.049274741 ubox
24 40 0.049237642 ubox
26 38 0.005236744 ubox
26 82 0.198564662 ubox
27 38 0.050787036 ubox
27 81 0.134963726 ubox
28 37 0.051008434 ubox
29 36 0.051070394 ubox
29 65 0.008177596 ubox
29 78 0.008944886 ubox
29 81 0.985764870 ubox
30 35 0.050929564 ubox
30 64 0.008185199 ubox
30 77 0.008947289 ubox
30 80 0.998194107 ubox
31 63 0.008186100 ubox
31 76 0.008947072 ubox
31 79 0.998470269 ubox
32 62 0.008185954 ubox
32 75 0.008750213 ubox
32 78 0.998540708 ubox
33 60 0.008192127 ubox
33 77 0.998554198 ubox
34 59 0.008188594 ubox
34 76 0.998273581 ubox
35 57 0.008170663 ubox
35 74 0.706078261 ubox
35 75 0.705823446 ubox
36 56 0.008197478 ubox
36 73 0.998464777 ubox
37 55 0.008191506 ubox
37 72 0.998438092 ubox
38 54 0.008191537 ubox
38 70 0.005788244 ubox
38 71 0.998290926 ubox
39 53 0.008014166 ubox
40 50 0.009286797 ubox
40 69 0.997531616 ubox
40 70 0.041530985 ubox
40 84 0.016648121 ubox
41 49 0.009373447 ubox
41 68 0.996163609 ubox
41 69 0.040719399 ubox
41 83 0.016759194 ubox
42 48 0.009392542 ubox
42 67 0.963050937 ubox
42 82 0.016808533 ubox
43 47 0.009241103 ubox
43 81 0.016499031 ubox
45 63 0.003166989 ubox
45 66 0.977736172 ubox
45 79 0.016592077 ubox
46 65 0.998473134 ubox
46 78 0.016815310 ubox
47 64 0.998582939 ubox
47 77 0.016815752 ubox
48 63 0.998562525 ubox
48 76 0.016815459 ubox
49 62 0.997687856 ubox
49 75 0.016813456 ubox
50 74 0.016653790 ubox
52 60 0.993334190 ubox
52 69 0.017060999 ubox
52 70 0.003622980 ubox
53 59 0.994601969 ubox
53 68 0.017362334 ubox
54 67 0.017560085 ubox
56 65 0.017578742 ubox
57 64 0.017562236 ubox
62 76 0.004236177 ubox
63 75 0.004338946 ubox
63 82 0.048504239 ubox
64 74 0.004339101 ubox
64 78 0.004997892 ubox
64 81 0.048543038 ubox
65 73 0.004338381 ubox
65 77 0.005100655 ubox
65 79 0.033965160 ubox
65 80 0.035016291 ubox
66 78 0.047765430 ubox
67 76 0.022521696 ubox
67 77 0.043511022 ubox
68 75 0.030069608 ubox
69 74 0.030088521 ubox
69 75 0.038610811 ubox
70 74 0.038005475 ubox
3 23 0.9500000 lbox
4 22 0.9500000 lbox
5 21 0.9500000 lbox
6 20 0.9500000 lbox
7 19 0.9500000 lbox
8 18 0.9500000 lbox
9 17 0.9500000 lbox
29 81 0.9500000 lbox
30 80 0.9500000 lbox
31 79 0.9500000 lbox
32 78 0.9500000 lbox
33 77 0.9500000 lbox
34 76 0.9500000 lbox
35 75 0.9500000 lbox
36 73 0.9500000 lbox
37 72 0.9500000 lbox
38 71 0.9500000 lbox
40 69 0.9500000 lbox
41 68 0.9500000 lbox
42 67 0.9500000 lbox
45 66 0.9500000 lbox
46 65 0.9500000 lbox
47 64 0.9500000 lbox
48 63 0.9500000 lbox
49 62 0.9500000 lbox
52 60 0.9500000 lbox
53 59 0.9500000 lbox
showpage
end
%%EOF
