%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:00:09 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GPR158)
} def

/sequence { (\
UCCAAAUUUAAAAAGUGAUUCCCCCCCCUCCCGUUCCCUCCUCUUCUCUCUGGGAGGCAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 18 0.066337824 ubox
2 17 0.070653216 ubox
2 57 0.003403431 ubox
3 17 0.142142866 ubox
3 56 0.003258008 ubox
4 16 0.134347183 ubox
4 20 0.028956027 ubox
5 19 0.025782274 ubox
5 20 0.359498003 ubox
5 35 0.004331757 ubox
6 16 0.162094512 ubox
6 19 0.398816433 ubox
6 34 0.004767303 ubox
7 13 0.062639249 ubox
7 14 0.072597326 ubox
7 15 0.167394266 ubox
7 18 0.403752223 ubox
7 33 0.004591084 ubox
8 12 0.055956618 ubox
8 13 0.065983711 ubox
8 14 0.164743633 ubox
8 15 0.034704904 ubox
8 17 0.402832808 ubox
8 18 0.098495596 ubox
8 59 0.003820659 ubox
9 13 0.138035530 ubox
9 14 0.039678253 ubox
9 17 0.108120256 ubox
9 59 0.004003584 ubox
10 16 0.105424492 ubox
10 20 0.019158207 ubox
11 19 0.020304254 ubox
11 20 0.038181908 ubox
11 35 0.003623056 ubox
12 19 0.037545493 ubox
12 20 0.029128845 ubox
12 34 0.003861501 ubox
12 35 0.005752468 ubox
13 19 0.029446193 ubox
13 20 0.062653677 ubox
13 34 0.006224616 ubox
13 35 0.005649832 ubox
14 19 0.066296378 ubox
14 20 0.020442098 ubox
14 29 0.014382163 ubox
14 34 0.006151907 ubox
14 35 0.006447681 ubox
14 39 0.008608891 ubox
15 19 0.016293035 ubox
15 28 0.015149014 ubox
15 34 0.007145685 ubox
15 38 0.009144079 ubox
15 58 0.029826177 ubox
16 33 0.012031363 ubox
16 57 0.010531432 ubox
16 59 0.068689838 ubox
17 30 0.022443989 ubox
17 32 0.015561379 ubox
17 35 0.008480625 ubox
17 36 0.026994134 ubox
17 58 0.076365844 ubox
18 29 0.021457389 ubox
18 34 0.009383940 ubox
18 35 0.026659718 ubox
19 33 0.009250549 ubox
19 56 0.006962210 ubox
19 60 0.007989417 ubox
20 55 0.010476509 ubox
20 59 0.010876270 ubox
21 54 0.010533549 ubox
21 57 0.008746035 ubox
22 53 0.010519183 ubox
22 56 0.008623153 ubox
22 57 0.011117324 ubox
23 52 0.010474760 ubox
23 54 0.004655800 ubox
23 56 0.010786210 ubox
23 57 0.019303443 ubox
24 53 0.004652612 ubox
24 54 0.007308179 ubox
24 56 0.019116852 ubox
24 57 0.017800561 ubox
25 52 0.004634822 ubox
25 53 0.007303664 ubox
25 54 0.008440303 ubox
25 56 0.017245097 ubox
25 57 0.014968726 ubox
26 52 0.007271316 ubox
26 53 0.008381910 ubox
26 54 0.022911124 ubox
26 56 0.013267606 ubox
26 57 0.062131087 ubox
27 52 0.008294149 ubox
27 53 0.022950227 ubox
27 56 0.044526945 ubox
27 57 0.953946557 ubox
28 52 0.022968604 ubox
28 56 0.963196371 ubox
28 57 0.003823871 ubox
28 60 0.033268552 ubox
29 55 0.964279195 ubox
29 59 0.033362753 ubox
30 54 0.964424815 ubox
30 57 0.019094741 ubox
31 53 0.964409425 ubox
31 54 0.003986461 ubox
31 56 0.018986754 ubox
31 57 0.033294707 ubox
32 52 0.964040383 ubox
32 53 0.005576916 ubox
32 56 0.033120647 ubox
33 51 0.758710270 ubox
33 58 0.043592129 ubox
34 55 0.006531736 ubox
34 56 0.027741533 ubox
34 57 0.023161977 ubox
34 60 0.064272950 ubox
35 54 0.003856092 ubox
35 55 0.052134109 ubox
35 56 0.008534182 ubox
35 59 0.093748848 ubox
36 53 0.004027898 ubox
36 54 0.054429311 ubox
36 57 0.014338970 ubox
37 52 0.004141183 ubox
37 53 0.054501302 ubox
37 56 0.010747452 ubox
37 57 0.245634930 ubox
38 52 0.054544844 ubox
38 56 0.247869158 ubox
38 60 0.053055363 ubox
39 54 0.004846659 ubox
39 55 0.248036482 ubox
39 59 0.054053420 ubox
40 53 0.008336620 ubox
40 54 0.247405018 ubox
40 57 0.065144773 ubox
41 52 0.010539976 ubox
41 53 0.246672940 ubox
41 54 0.017453933 ubox
41 56 0.065398753 ubox
41 60 0.010297731 ubox
42 52 0.141340469 ubox
42 53 0.024465939 ubox
42 55 0.065378158 ubox
42 57 0.004424223 ubox
42 59 0.010482544 ubox
43 52 0.197124015 ubox
43 53 0.003782772 ubox
43 54 0.065306519 ubox
43 56 0.006214828 ubox
43 57 0.012827361 ubox
44 52 0.006617530 ubox
44 53 0.061409978 ubox
44 55 0.006207963 ubox
44 56 0.012882243 ubox
45 52 0.046941841 ubox
45 53 0.021075621 ubox
45 54 0.006197900 ubox
45 55 0.012990551 ubox
46 52 0.032870644 ubox
46 53 0.006966706 ubox
46 54 0.013047153 ubox
46 56 0.003616637 ubox
47 52 0.006497324 ubox
47 53 0.013017815 ubox
47 55 0.003625348 ubox
48 52 0.012817073 ubox
48 54 0.003625924 ubox
49 53 0.003268483 ubox
27 57 0.9500000 lbox
28 56 0.9500000 lbox
29 55 0.9500000 lbox
30 54 0.9500000 lbox
31 53 0.9500000 lbox
32 52 0.9500000 lbox
33 51 0.9500000 lbox
showpage
end
%%EOF
