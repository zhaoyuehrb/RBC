%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:39:50 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (E2F4)
} def

/sequence { (\
GCGGAAGUGGCGGCGGCGCCGGCCUGGCCUGGCCUGGCUGAGGGGAGGCGGCGGGCGGGCGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.138890638 ubox
1 11 0.729819106 ubox
1 14 0.547153102 ubox
1 17 0.003674670 ubox
1 62 0.048068293 ubox
2 7 0.144350183 ubox
2 9 0.084199187 ubox
2 10 0.728096849 ubox
2 12 0.289904823 ubox
2 13 0.511804006 ubox
2 15 0.140580707 ubox
2 16 0.003574635 ubox
2 26 0.010779859 ubox
2 61 0.048072049 ubox
2 63 0.005282349 ubox
3 8 0.090983608 ubox
3 11 0.350039904 ubox
3 14 0.141725723 ubox
3 24 0.009786537 ubox
3 25 0.010741585 ubox
3 60 0.035953918 ubox
3 62 0.004567958 ubox
4 23 0.009806131 ubox
4 24 0.010678513 ubox
7 14 0.131011782 ubox
7 23 0.005973844 ubox
7 56 0.005206289 ubox
7 60 0.003621473 ubox
7 62 0.007715765 ubox
8 13 0.129686106 ubox
8 15 0.053859481 ubox
8 21 0.039051785 ubox
8 22 0.004264836 ubox
8 55 0.004907386 ubox
8 57 0.010399654 ubox
8 59 0.003914397 ubox
8 61 0.007619067 ubox
9 14 0.075732259 ubox
9 20 0.054224112 ubox
9 24 0.006350263 ubox
9 56 0.009002586 ubox
9 60 0.006794090 ubox
10 17 0.012628628 ubox
10 19 0.054291631 ubox
10 23 0.006381442 ubox
10 56 0.030745087 ubox
10 62 0.054090970 ubox
11 16 0.012835397 ubox
11 18 0.054294773 ubox
11 21 0.007827566 ubox
11 22 0.004523010 ubox
11 55 0.031244378 ubox
11 57 0.007675078 ubox
11 61 0.054151265 ubox
11 63 0.011475529 ubox
12 17 0.054072479 ubox
12 20 0.009434392 ubox
12 56 0.007670874 ubox
12 60 0.046068278 ubox
12 62 0.015224976 ubox
13 19 0.009444618 ubox
13 56 0.003539854 ubox
13 60 0.035858130 ubox
13 62 0.121373404 ubox
14 18 0.009375968 ubox
14 53 0.033187750 ubox
14 55 0.003508927 ubox
14 59 0.045733961 ubox
14 61 0.121588795 ubox
14 63 0.115036212 ubox
15 52 0.033318278 ubox
15 60 0.120843486 ubox
15 62 0.091231880 ubox
16 60 0.006064584 ubox
16 62 0.983486410 ubox
17 50 0.033437418 ubox
17 53 0.004134790 ubox
17 57 0.134098690 ubox
17 59 0.007959403 ubox
17 61 0.988548002 ubox
18 49 0.033463829 ubox
18 52 0.004193587 ubox
18 56 0.134564464 ubox
18 60 0.988728539 ubox
19 48 0.033465123 ubox
19 51 0.004194112 ubox
19 55 0.134566104 ubox
19 58 0.010549606 ubox
19 59 0.988718713 ubox
20 47 0.033444316 ubox
20 50 0.004186241 ubox
20 54 0.134500969 ubox
20 57 0.013340307 ubox
20 58 0.988228898 ubox
21 39 0.003286292 ubox
21 56 0.012843963 ubox
21 62 0.014430197 ubox
22 38 0.003378664 ubox
22 52 0.134521256 ubox
22 56 0.988349520 ubox
22 60 0.046751573 ubox
22 62 0.019280986 ubox
23 37 0.003379439 ubox
23 43 0.022239177 ubox
23 44 0.024350900 ubox
23 45 0.005201662 ubox
23 48 0.004204706 ubox
23 51 0.134495395 ubox
23 54 0.010572949 ubox
23 55 0.988629397 ubox
23 59 0.047474357 ubox
23 61 0.019303680 ubox
24 36 0.003371055 ubox
24 42 0.022388956 ubox
24 43 0.024228489 ubox
24 44 0.005193993 ubox
24 47 0.004206892 ubox
24 50 0.133730388 ubox
24 51 0.005678167 ubox
24 53 0.011730125 ubox
24 54 0.988450439 ubox
24 55 0.016371270 ubox
24 58 0.047443408 ubox
24 59 0.020303908 ubox
25 40 0.008413997 ubox
25 41 0.021200182 ubox
25 42 0.022472215 ubox
25 43 0.005009496 ubox
25 46 0.004070728 ubox
25 50 0.008598911 ubox
25 53 0.976477078 ubox
25 54 0.023027376 ubox
25 57 0.045163103 ubox
25 58 0.020405053 ubox
26 34 0.005198772 ubox
26 39 0.031725147 ubox
26 49 0.020788909 ubox
26 52 0.917068332 ubox
26 56 0.035675989 ubox
26 62 0.005600148 ubox
27 33 0.005668639 ubox
27 38 0.033520846 ubox
27 49 0.926004697 ubox
27 52 0.267548956 ubox
27 56 0.037399999 ubox
27 60 0.015330483 ubox
27 62 0.006856976 ubox
28 32 0.005630124 ubox
28 37 0.033528763 ubox
28 43 0.004019033 ubox
28 48 0.930112117 ubox
28 51 0.356888984 ubox
28 54 0.022178006 ubox
28 55 0.046517416 ubox
28 59 0.015386470 ubox
28 61 0.006865453 ubox
29 36 0.033518036 ubox
29 42 0.004046215 ubox
29 47 0.930018711 ubox
29 48 0.017739082 ubox
29 50 0.354910297 ubox
29 51 0.028526876 ubox
29 53 0.022063784 ubox
29 54 0.046488026 ubox
29 55 0.003959111 ubox
29 58 0.015374729 ubox
29 59 0.006995577 ubox
30 40 0.003432753 ubox
30 41 0.003861877 ubox
30 46 0.901026007 ubox
30 47 0.023063079 ubox
30 50 0.029528355 ubox
30 53 0.044164731 ubox
30 54 0.004418242 ubox
30 57 0.014672670 ubox
30 58 0.007043638 ubox
31 39 0.014546723 ubox
31 49 0.054584282 ubox
31 52 0.034260800 ubox
31 56 0.011778757 ubox
32 38 0.014707046 ubox
32 49 0.351265867 ubox
32 52 0.037276393 ubox
32 56 0.012192807 ubox
33 37 0.014601940 ubox
33 43 0.803365900 ubox
33 44 0.454595695 ubox
33 45 0.117542920 ubox
33 48 0.356816911 ubox
33 51 0.045948572 ubox
33 54 0.007754435 ubox
33 55 0.014998459 ubox
34 42 0.805065140 ubox
34 43 0.454234262 ubox
34 44 0.117656441 ubox
34 45 0.008835805 ubox
34 47 0.356749815 ubox
34 50 0.045342854 ubox
34 51 0.016065049 ubox
34 53 0.007605002 ubox
34 54 0.014985328 ubox
35 41 0.801897601 ubox
35 42 0.446237524 ubox
35 43 0.116580292 ubox
35 44 0.010360414 ubox
35 46 0.348724043 ubox
35 47 0.003821437 ubox
35 50 0.017922644 ubox
35 53 0.014105817 ubox
36 49 0.046999357 ubox
36 52 0.010307416 ubox
37 49 0.014388335 ubox
37 52 0.013389128 ubox
38 44 0.169272343 ubox
38 45 0.165341484 ubox
38 47 0.047248788 ubox
38 48 0.014481976 ubox
38 51 0.016541322 ubox
39 43 0.152771319 ubox
39 44 0.163420158 ubox
39 46 0.047188875 ubox
39 47 0.014234167 ubox
39 50 0.016545126 ubox
40 49 0.016535914 ubox
1 11 0.9500000 lbox
2 10 0.9500000 lbox
16 62 0.9500000 lbox
17 61 0.9500000 lbox
18 60 0.9500000 lbox
19 59 0.9500000 lbox
20 58 0.9500000 lbox
22 56 0.9500000 lbox
23 55 0.9500000 lbox
24 54 0.9500000 lbox
25 53 0.9500000 lbox
26 52 0.9500000 lbox
27 49 0.9500000 lbox
28 48 0.9500000 lbox
29 47 0.9500000 lbox
30 46 0.9500000 lbox
33 43 0.9500000 lbox
34 42 0.9500000 lbox
35 41 0.9500000 lbox
showpage
end
%%EOF
