%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:34:35 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NEPRO)
} def

/sequence { (\
ACCUCCGGUCGCUGGACGUGCUCUCGCGUAGCUCCGCCUUUCGUAAGUCCCCCCGCCUCGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.055616781 ubox
1 19 0.045515607 ubox
1 44 0.021360903 ubox
1 48 0.008981891 ubox
2 8 0.063937636 ubox
2 18 0.048168814 ubox
2 43 0.022541988 ubox
2 47 0.010222450 ubox
3 7 0.063590424 ubox
3 47 0.011993220 ubox
4 16 0.052903566 ubox
4 46 0.011763599 ubox
5 15 0.055132767 ubox
6 14 0.055207427 ubox
6 20 0.003555847 ubox
6 36 0.092960245 ubox
6 43 0.027508610 ubox
6 55 0.171078124 ubox
6 60 0.165644877 ubox
7 13 0.054935307 ubox
7 19 0.003243595 ubox
7 35 0.096989905 ubox
7 38 0.060055134 ubox
7 39 0.003227625 ubox
7 42 0.027882789 ubox
7 50 0.003982845 ubox
7 51 0.004672544 ubox
7 52 0.033146331 ubox
7 53 0.024404283 ubox
7 54 0.177639192 ubox
7 57 0.951232971 ubox
7 58 0.081662704 ubox
7 59 0.160380166 ubox
8 12 0.053775190 ubox
8 17 0.010050350 ubox
8 34 0.096946200 ubox
8 37 0.060157557 ubox
8 38 0.003445592 ubox
8 41 0.026223356 ubox
8 49 0.003974500 ubox
8 50 0.004382064 ubox
8 51 0.033255903 ubox
8 52 0.024973749 ubox
8 53 0.177304681 ubox
8 56 0.952753464 ubox
8 57 0.142965991 ubox
8 58 0.101478730 ubox
8 61 0.012948517 ubox
9 16 0.010245750 ubox
9 36 0.058736746 ubox
9 55 0.690817631 ubox
9 60 0.012881816 ubox
10 15 0.010323338 ubox
10 20 0.003828547 ubox
10 28 0.004999458 ubox
10 36 0.010434224 ubox
10 55 0.663410787 ubox
10 60 0.005533038 ubox
11 19 0.003866010 ubox
11 27 0.005110996 ubox
11 32 0.113568009 ubox
11 35 0.009219794 ubox
11 37 0.033769691 ubox
11 48 0.010045593 ubox
11 54 0.672393998 ubox
11 56 0.092092803 ubox
11 59 0.004999271 ubox
11 61 0.008141082 ubox
12 18 0.003868481 ubox
12 26 0.005105941 ubox
12 31 0.113653607 ubox
12 36 0.033123830 ubox
12 47 0.010214790 ubox
12 55 0.092152237 ubox
12 60 0.008186337 ubox
13 30 0.109633489 ubox
13 36 0.017519034 ubox
13 46 0.009727370 ubox
13 55 0.004334396 ubox
14 24 0.005036018 ubox
14 29 0.063573994 ubox
14 33 0.004083843 ubox
14 34 0.003927314 ubox
14 35 0.040330427 ubox
14 38 0.003870571 ubox
14 50 0.978770727 ubox
14 51 0.140420646 ubox
14 52 0.015208363 ubox
14 53 0.018369374 ubox
14 54 0.009342553 ubox
14 57 0.004098546 ubox
15 23 0.005196805 ubox
15 32 0.004486134 ubox
15 33 0.003489599 ubox
15 34 0.040362909 ubox
15 37 0.003875976 ubox
15 49 0.985501991 ubox
15 50 0.100700563 ubox
15 51 0.013402236 ubox
15 52 0.016846303 ubox
15 53 0.008924603 ubox
15 56 0.004082231 ubox
16 22 0.004950931 ubox
16 29 0.094088762 ubox
16 33 0.039259746 ubox
16 44 0.009369708 ubox
16 48 0.990262635 ubox
17 26 0.039430838 ubox
17 28 0.110124181 ubox
17 36 0.004964717 ubox
17 43 0.010109782 ubox
17 47 0.987447213 ubox
17 55 0.004447345 ubox
17 60 0.003516207 ubox
18 25 0.040473845 ubox
18 27 0.110715077 ubox
18 29 0.005575712 ubox
18 32 0.008798725 ubox
18 35 0.005442545 ubox
18 37 0.004223032 ubox
18 42 0.010790907 ubox
18 44 0.011347488 ubox
18 54 0.004443519 ubox
18 56 0.003783131 ubox
18 59 0.003574787 ubox
19 26 0.110399746 ubox
19 28 0.015166072 ubox
19 30 0.037012222 ubox
19 31 0.006661079 ubox
19 36 0.004203381 ubox
19 43 0.038076702 ubox
19 45 0.862940691 ubox
19 55 0.003789945 ubox
20 25 0.105240995 ubox
20 27 0.020111549 ubox
20 29 0.037154506 ubox
20 32 0.013151112 ubox
20 37 0.005100191 ubox
20 42 0.044018808 ubox
20 44 0.972340667 ubox
20 48 0.016528841 ubox
20 54 0.003615823 ubox
20 56 0.004630026 ubox
20 61 0.004843646 ubox
21 26 0.020127382 ubox
21 28 0.037180927 ubox
21 31 0.013185875 ubox
21 36 0.005107169 ubox
21 43 0.972356451 ubox
21 47 0.017334364 ubox
21 55 0.004630258 ubox
21 60 0.004893077 ubox
22 30 0.012648426 ubox
22 46 0.017503942 ubox
23 47 0.009300741 ubox
24 46 0.010088436 ubox
25 36 0.017159936 ubox
25 43 0.017804184 ubox
26 32 0.008420721 ubox
26 35 0.017070471 ubox
26 37 0.987666485 ubox
26 42 0.017154758 ubox
26 44 0.021344712 ubox
26 56 0.007802541 ubox
26 61 0.049116471 ubox
27 31 0.008410406 ubox
27 36 0.989090449 ubox
27 43 0.021835355 ubox
27 55 0.007817849 ubox
27 60 0.049516586 ubox
28 35 0.970405733 ubox
28 37 0.033513989 ubox
28 42 0.022205106 ubox
28 54 0.007752321 ubox
28 59 0.049565376 ubox
29 36 0.032714497 ubox
30 39 0.016106146 ubox
30 40 0.005082621 ubox
30 41 0.004776734 ubox
30 58 0.006605842 ubox
31 37 0.028433791 ubox
31 38 0.015298984 ubox
31 39 0.003956581 ubox
31 40 0.004380230 ubox
31 44 0.005251224 ubox
31 48 0.014086344 ubox
31 56 0.049303192 ubox
31 57 0.005725097 ubox
31 61 0.004230723 ubox
32 36 0.028868507 ubox
32 43 0.005377598 ubox
32 47 0.014568170 ubox
32 55 0.049357003 ubox
32 60 0.004261892 ubox
33 46 0.014140272 ubox
35 43 0.013394880 ubox
36 42 0.013351090 ubox
36 44 0.014366412 ubox
36 48 0.011933910 ubox
36 54 0.003434558 ubox
36 56 0.009901180 ubox
36 61 0.006820875 ubox
37 43 0.015389270 ubox
37 47 0.010555367 ubox
37 55 0.010055545 ubox
37 60 0.007354555 ubox
38 47 0.066182204 ubox
39 46 0.066923699 ubox
39 47 0.006296632 ubox
40 45 0.063909441 ubox
40 46 0.007757464 ubox
40 47 0.007963833 ubox
41 45 0.006813188 ubox
41 46 0.007201941 ubox
42 55 0.012802185 ubox
42 60 0.021309477 ubox
43 54 0.013194096 ubox
43 56 0.011387993 ubox
43 59 0.022243520 ubox
43 61 0.017212825 ubox
44 55 0.011160297 ubox
44 60 0.016990711 ubox
46 58 0.018442441 ubox
47 56 0.030047335 ubox
47 57 0.017796951 ubox
47 61 0.004573014 ubox
48 55 0.029740686 ubox
48 60 0.004465511 ubox
54 60 0.021425826 ubox
55 59 0.020894515 ubox
55 61 0.035072472 ubox
56 60 0.035482151 ubox
7 57 0.9500000 lbox
8 56 0.9500000 lbox
9 55 0.9500000 lbox
14 50 0.9500000 lbox
15 49 0.9500000 lbox
16 48 0.9500000 lbox
17 47 0.9500000 lbox
19 45 0.9500000 lbox
20 44 0.9500000 lbox
21 43 0.9500000 lbox
26 37 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
showpage
end
%%EOF
