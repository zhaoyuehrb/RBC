%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:00:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGUUUGAAAGCGAGCGCGGGUGUCGAGCUCUGCUGUGACUGCGGAGGAAGCUGCGAGUGAGCCGAGCCUGAGGCGGGGCGGUGUCCGGGUUGGGGAUGCUUUGUGGUGUCUCGCGUUGGGUAACAGGCCUGAGCUUUCGGCGGAGAGCUGUGGAAGUUUAGUUAAAAUUUGUUGUCAAUAAGUUUAACAUUCUGUUCUUCCGCGUGAUGGAUUUUCUUUUGGAGAUUCGAACUGAAGCCUGUACGGAGGAAAU\
GUUGUUUUUAAGGGAAAUGAAUAGAAACAAUCCACUUUGAAGAAGCC\
) } def
/len { sequence length } bind def

/coor [
[-9.74780178 326.51245117]
[-16.49522781 339.90917969]
[-23.24265289 353.30590820]
[-29.99007988 366.70263672]
[-36.73750305 380.09936523]
[-43.48493195 393.49609375]
[-37.65632248 403.79006958]
[-37.49888611 415.49902344]
[-42.93649292 425.73480225]
[-52.52706528 432.02789307]
[-63.84309769 432.92291260]
[-70.86685944 446.17684937]
[-77.89060974 459.43078613]
[-84.84556580 472.72097778]
[-91.73152924 486.04702759]
[-98.61749268 499.37307739]
[-105.50344849 512.69909668]
[-104.96477509 528.51116943]
[-117.68125153 536.26617432]
[-124.56720734 549.59222412]
[-121.08633423 565.25311279]
[-131.27194214 577.64794922]
[-147.31050110 577.26855469]
[-156.89862061 564.40594482]
[-152.68109131 548.92712402]
[-137.89326477 542.70623779]
[-131.00729370 529.38018799]
[-132.03849792 514.52136230]
[-118.82949829 505.81314087]
[-111.94353485 492.48709106]
[-105.05757141 479.16104126]
[-98.17161560 465.83502197]
[-97.89400482 458.48672485]
[-91.14454651 452.40704346]
[-84.12079620 439.15310669]
[-77.09703827 425.89916992]
[-83.49784851 408.71078491]
[-75.11299133 392.03814697]
[-56.88165665 386.74865723]
[-50.13423157 373.35192871]
[-43.38680267 359.95520020]
[-36.63937759 346.55847168]
[-29.89195251 333.16174316]
[-23.14452744 319.76501465]
[-27.19087601 310.44781494]
[-25.42962646 300.22149658]
[-18.20101166 292.47436523]
[-7.69572973 289.90573120]
[-0.67197245 276.65179443]
[-7.37491751 263.37744141]
[-4.94736624 248.52580261]
[5.88655138 237.82629395]
[21.11936951 235.53120422]
[28.14312744 222.27726746]
[22.52795029 206.40103149]
[30.30724907 191.08496094]
[47.08803940 186.06021118]
[53.97399902 172.73416138]
[60.85996246 159.40811157]
[67.74592590 146.08206177]
[74.63188171 132.75601196]
[60.82889175 113.49526978]
[59.83951187 89.81995392]
[46.20680237 83.56301880]
[32.57409668 77.30608368]
[15.02768230 84.55064392]
[-1.92885864 76.75587463]
[-7.65419388 59.33084869]
[-21.41370964 53.35793304]
[-35.17322540 47.38502121]
[-48.93274307 41.41210556]
[-62.69225693 35.43918991]
[-76.45177460 29.46627426]
[-92.19163513 31.06855774]
[-100.78543091 18.90319633]
[-114.54494476 12.93028069]
[-128.30445862 6.95736551]
[-142.06398010 0.98445058]
[-155.82348633 -4.98846436]
[-169.58300781 -10.96138000]
[-183.34252930 -16.93429565]
[-197.30969238 -22.40406799]
[-211.46609497 -27.36349678]
[-225.62251282 -32.32292557]
[-239.77893066 -37.28235245]
[-253.93534851 -42.24177933]
[-268.09176636 -47.20121002]
[-282.24816895 -52.16063690]
[-295.60189819 -44.02355576]
[-311.05401611 -46.42489243]
[-321.30847168 -58.23081207]
[-321.52346802 -73.86691284]
[-311.59747314 -85.95031738]
[-296.21725464 -88.77560425]
[-282.64483643 -81.00875854]
[-277.28875732 -66.31705475]
[-263.13232422 -61.35762405]
[-248.97592163 -56.39819717]
[-234.81950378 -51.43876648]
[-220.66308594 -46.47933960]
[-206.50666809 -41.51990891]
[-192.35025024 -36.56048203]
[-199.26298523 -49.87266159]
[-196.08715820 -64.53260803]
[-184.28500366 -73.79052734]
[-169.29051208 -73.38383484]
[-158.00753784 -63.49978256]
[-155.63102722 -48.68923569]
[-163.25520325 -35.77133942]
[-177.36961365 -30.69381142]
[-163.61009216 -24.72089577]
[-149.85057068 -18.74798012]
[-136.09106445 -12.77506542]
[-122.33154297 -6.80215025]
[-108.57202911 -0.82923532]
[-94.81251526 5.14367962]
[-80.05682373 3.11417365]
[-70.47885895 15.70675850]
[-56.71934509 21.67967224]
[-42.95982742 27.65258789]
[-29.20031166 33.62550354]
[-15.44079494 39.59841919]
[-1.68127882 45.57133484]
[7.71927834 39.20869064]
[19.14037895 38.14074707]
[29.77699661 42.74524307]
[36.96117783 51.99251938]
[38.83103180 63.67337418]
[52.46374130 69.93031311]
[66.09645081 76.18724823]
[72.88879395 59.65513992]
[87.56105804 45.61938858]
[108.90667725 37.67081451]
[134.16357422 38.74308395]
[131.38035583 24.00355530]
[128.59713745 9.26402569]
[125.81392670 -5.47550297]
[123.03070831 -20.21503258]
[120.24749756 -34.95455933]
[117.46427917 -49.69408798]
[106.36748505 -61.76857758]
[111.53341675 -77.33280945]
[127.64779663 -80.37563324]
[138.13352966 -67.76685333]
[132.20381165 -52.47730637]
[134.98703003 -37.73777771]
[137.77023315 -22.99824715]
[140.55345154 -8.25871944]
[143.33666992 6.48080969]
[146.11988831 21.22033882]
[148.90310669 35.95986557]
[163.64263916 38.74308395]
[171.60899353 26.03336334]
[179.57536316 13.32364178]
[187.54173279 0.61392152]
[195.50810242 -12.09579945]
[203.47447205 -24.80551910]
[211.44084167 -37.51523972]
[208.12242126 -52.73450089]
[216.38250732 -65.51048279]
[230.91220093 -68.58029175]
[238.87857056 -81.29000854]
[246.84492493 -93.99972534]
[238.96623230 -111.49949646]
[243.25120544 -130.05145264]
[257.77389526 -142.13009644]
[276.49398804 -142.94964600]
[284.06121826 -155.90097046]
[291.62847900 -168.85231018]
[299.19570923 -181.80363464]
[306.76293945 -194.75495911]
[314.33020020 -207.70628357]
[321.89743042 -220.65760803]
[329.46469116 -233.60893250]
[337.03192139 -246.56025696]
[339.80194092 -263.28637695]
[356.64123535 -265.25485229]
[363.19436646 -249.61859131]
[349.98324585 -238.99301147]
[342.41601562 -226.04168701]
[334.84875488 -213.09036255]
[327.28152466 -200.13903809]
[319.71426392 -187.18771362]
[312.14703369 -174.23638916]
[304.57980347 -161.28506470]
[297.01254272 -148.33374023]
[289.44531250 -135.38241577]
[295.73696899 -126.27084351]
[298.20791626 -115.42487335]
[296.46801758 -104.38613129]
[290.72839355 -94.73816681]
[281.77676392 -87.87921906]
[270.86929321 -84.81967926]
[259.55465698 -86.03336334]
[251.58828735 -73.32363892]
[243.62191772 -60.61392212]
[247.19235229 -46.19908142]
[239.29437256 -33.19613266]
[224.15055847 -29.54887390]
[216.18418884 -16.83915329]
[208.21781921 -4.12943220]
[200.25144958 8.58028889]
[192.28509521 21.29000854]
[184.31872559 33.99972916]
[176.35235596 46.70944977]
[184.58055115 59.25125504]
[199.41134644 57.00463486]
[207.65133667 47.12370682]
[220.01539612 45.53508377]
[229.83377075 52.54774857]
[244.68707275 50.45501709]
[259.54037476 48.36228943]
[274.39367676 46.26955795]
[289.24697876 44.17682648]
[304.10028076 42.08409882]
[318.95355225 39.99136734]
[333.80685425 37.89863586]
[348.66015625 35.80590820]
[361.23907471 25.28435135]
[376.54541016 31.17057800]
[378.83334351 47.40933990]
[365.74923706 57.29559326]
[350.75289917 50.65920639]
[335.89959717 52.75193787]
[321.04629517 54.84466553]
[306.19299316 56.93739700]
[291.33969116 59.03012466]
[276.48638916 61.12285614]
[261.63308716 63.21558762]
[246.77980042 65.30831909]
[231.92649841 67.40104675]
[218.67291260 78.93550110]
[201.65795898 71.83544159]
[186.82716370 74.08205414]
[185.97363281 81.53333282]
[200.87617493 83.24039459]
[212.92864990 92.17000580]
[199.16911316 98.14294434]
[184.26657104 96.43588257]
[183.41304016 103.88715363]
[197.35165405 109.42926025]
[211.29026794 114.97136688]
[225.70280457 108.48641205]
[240.44970703 114.17008972]
[246.78192139 128.65037537]
[240.94265747 143.33636475]
[226.39624023 149.51513672]
[211.77279663 143.52091980]
[205.74816895 128.90998840]
[191.80955505 123.36787415]
[177.87092590 117.82576752]
[173.37493896 123.82877350]
[185.38079834 132.82095337]
[176.38842773 144.82667542]
[164.38293457 135.83477783]
[159.88694763 141.83776855]
[169.12594604 153.65473938]
[178.36495972 165.47171021]
[187.60395813 177.28868103]
[196.84297180 189.10565186]
[206.08198547 200.92262268]
[215.32098389 212.73957825]
[224.55999756 224.55654907]
[233.79899597 236.37351990]
[243.03800964 248.19049072]
[258.08398438 245.38388062]
[272.70742798 249.90205383]
[283.54794312 260.70675659]
[288.11447144 275.31515503]
[285.35769653 290.37033081]
[275.91104126 302.41275024]
[261.94534302 308.67510986]
[246.66975403 307.71838379]
[233.59452820 299.76245117]
[225.72425842 286.63546753]
[224.86746216 271.35397339]
[231.22103882 257.42950439]
[221.98202515 245.61253357]
[212.74302673 233.79556274]
[203.50401306 221.97859192]
[194.26501465 210.16162109]
[185.02600098 198.34465027]
[175.78700256 186.52767944]
[166.54798889 174.71070862]
[157.30897522 162.89375305]
[148.06997681 151.07678223]
[112.72232056 154.31501770]
[87.95793152 139.64198303]
[81.07196808 152.96803284]
[74.18601227 166.29408264]
[67.30004883 179.62011719]
[60.41408539 192.94616699]
[65.94623566 205.19416809]
[63.46610260 218.20501709]
[54.09510422 227.28845215]
[41.39706421 229.30102539]
[34.37330627 242.55496216]
[41.02711487 256.44857788]
[38.25645065 271.42111206]
[27.32992744 281.76882935]
[12.58196449 283.67553711]
[5.55820656 296.92947388]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 44]
[2 43]
[3 42]
[4 41]
[5 40]
[6 39]
[11 36]
[12 35]
[13 34]
[14 32]
[15 31]
[16 30]
[17 29]
[19 27]
[20 26]
[48 302]
[49 301]
[53 297]
[54 296]
[57 292]
[58 291]
[59 290]
[60 289]
[61 288]
[63 130]
[64 129]
[65 128]
[68 123]
[69 122]
[70 121]
[71 120]
[72 119]
[73 118]
[75 116]
[76 115]
[77 114]
[78 113]
[79 112]
[80 111]
[81 110]
[82 102]
[83 101]
[84 100]
[85 99]
[86 98]
[87 97]
[88 96]
[134 151]
[135 150]
[136 149]
[137 148]
[138 147]
[139 146]
[140 145]
[152 205]
[153 204]
[154 203]
[155 202]
[156 201]
[157 200]
[158 199]
[161 196]
[162 195]
[163 194]
[167 187]
[168 186]
[169 185]
[170 184]
[171 183]
[172 182]
[173 181]
[174 180]
[175 179]
[206 234]
[207 233]
[210 231]
[211 230]
[212 229]
[213 228]
[214 227]
[215 226]
[216 225]
[217 224]
[218 223]
[240 251]
[241 250]
[242 249]
[256 286]
[257 285]
[258 284]
[259 283]
[260 282]
[261 281]
[262 280]
[263 279]
[264 278]
[265 277]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
