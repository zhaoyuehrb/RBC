%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:24:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCACUAAAGGUUUGCUUCCGGGCGUUUCUUUUGCUUCCCCUUCCCUCUUUCACGCUUCCUCCCCUCCCCCUCCUCCCUUAUCCCUUCGCUUUCGCUCUUUUCCGUCGAGGCCGACCCCUGAGUUGUGAGUCUGGGGUCUGGUUGGUGAAAAAGAGCCCUUGAAGCUGGAAGACGGGAGAGGACAAAAGC\
) } def
/len { sequence length } bind def

/coor [
[-51.66678238 495.19821167]
[-50.02042007 510.10760498]
[-57.34111023 523.19989014]
[-70.90522766 529.60412598]
[-85.66633606 526.93774414]
[-96.13265228 516.19268799]
[-98.40992737 501.36453247]
[-106.57606506 513.94683838]
[-114.74220276 526.52911377]
[-115.76493835 542.31726074]
[-129.18397522 548.78088379]
[-137.35011292 561.36315918]
[-145.51625061 573.94543457]
[-153.68238831 586.52777100]
[-161.84852600 599.11004639]
[-162.16148376 615.50622559]
[-176.64630127 623.19531250]
[-190.40222168 614.26745605]
[-189.27835083 597.90686035]
[-174.43083191 590.94390869]
[-166.26469421 578.36163330]
[-158.09855652 565.77929688]
[-149.93241882 553.19702148]
[-141.76628113 540.61474609]
[-141.32763672 525.72656250]
[-127.32450104 518.36297607]
[-119.15836334 505.78070068]
[-110.99222565 493.19839478]
[-103.67098236 480.10644531]
[-97.22630310 466.56146240]
[-90.78163147 453.01647949]
[-84.33695984 439.47152710]
[-77.89228821 425.92654419]
[-71.44760895 412.38159180]
[-72.18021393 407.64654541]
[-69.93414307 402.40286255]
[-64.56173706 398.50244141]
[-57.67505264 385.17675781]
[-50.78836441 371.85110474]
[-51.81876755 356.99215698]
[-38.60928726 348.28469849]
[-31.72260475 334.95901489]
[-24.83591843 321.63333130]
[-17.94923401 308.30767822]
[-11.06254864 294.98199463]
[-12.09294987 280.12307739]
[1.11652815 271.41558838]
[8.00321293 258.08990479]
[14.88989830 244.76423645]
[21.77658272 231.43856812]
[28.66326904 218.11289978]
[35.54995346 204.78721619]
[42.43663788 191.46154785]
[42.71503830 184.06329346]
[49.54775238 177.97471619]
[56.65267563 164.76411438]
[63.75760269 151.55351257]
[70.86252594 138.34291077]
[77.96745300 125.13230896]
[69.25327301 113.10362244]
[66.61173248 98.48690033]
[70.56454468 84.16902161]
[80.33100891 72.97784424]
[93.98220062 67.12368011]
[108.82194519 67.76276398]
[115.92686462 54.55216217]
[123.03179169 41.34155655]
[112.68087006 27.65787315]
[109.35479736 10.88205338]
[113.67392731 -5.60879374]
[124.72448730 -18.51639175]
[140.25143433 -25.28096008]
[157.11846924 -24.58877945]
[163.78504944 -38.02591705]
[158.97358704 -52.84103394]
[165.92587280 -66.37323761]
[180.07946777 -70.86891937]
[186.74604797 -84.30606079]
[181.93460083 -99.12117767]
[188.88688660 -112.65337372]
[203.04048157 -117.14905548]
[209.70706177 -130.58619690]
[216.37364197 -144.02333069]
[223.04022217 -157.46047974]
[229.70680237 -170.89761353]
[223.96456909 -183.09252930]
[226.26620483 -196.17614746]
[235.54943848 -205.40464783]
[248.26257324 -207.56353760]
[255.14924622 -220.88920593]
[262.03594971 -234.21487427]
[268.92260742 -247.54055786]
[268.38479614 -263.35260010]
[281.10168457 -271.10696411]
[287.98837280 -284.43261719]
[294.76525879 -297.81448364]
[301.43182373 -311.25161743]
[308.09841919 -324.68875122]
[299.94961548 -334.73181152]
[296.22369385 -347.06777954]
[297.44158936 -359.84948730]
[303.38668823 -371.17700195]
[313.14239502 -379.38000488]
[325.23315430 -383.26412964]
[337.84774780 -382.28466797]
[344.95266724 -395.49526978]
[352.05758667 -408.70587158]
[359.16250610 -421.91647339]
[358.12750244 -438.28292847]
[371.93173218 -447.13592529]
[386.37457275 -439.36828613]
[386.59848022 -422.97067261]
[372.37310791 -414.81152344]
[365.26818848 -401.60092163]
[358.16326904 -388.39031982]
[351.05834961 -375.17971802]
[360.63592529 -360.88894653]
[361.67190552 -343.62765503]
[353.79168701 -328.13537598]
[339.08117676 -318.71145630]
[321.53555298 -318.02218628]
[314.86895752 -304.58505249]
[308.20239258 -291.14791870]
[308.04571533 -283.74606323]
[301.31405640 -277.54592896]
[294.42736816 -264.22027588]
[295.45776367 -249.36134338]
[282.24829102 -240.65386963]
[275.36160278 -227.32818604]
[268.47491455 -214.00251770]
[261.58822632 -200.67684937]
[267.37524414 -184.89421082]
[259.81558228 -169.50282288]
[243.14395142 -164.23103333]
[236.47737122 -150.79389954]
[229.81079102 -137.35675049]
[223.14421082 -123.91961670]
[216.47763062 -110.48247528]
[221.46006775 -96.49280548]
[214.89062500 -82.77066803]
[200.18319702 -77.63947296]
[193.51661682 -64.20233917]
[198.49905396 -50.21266937]
[191.92961121 -36.49053192]
[177.22218323 -31.35933685]
[170.55560303 -17.92219925]
[179.35539246 -8.34210968]
[184.38339233 3.68977904]
[185.01969910 16.74645805]
[181.16667175 29.27133942]
[173.26318359 39.76382065]
[162.23475647 46.95907593]
[149.38516235 49.98050308]
[136.24240112 48.44648361]
[129.13746643 61.65708542]
[122.03254700 74.86769104]
[130.74671936 86.89637756]
[133.38827515 101.51309967]
[129.43545532 115.83097839]
[119.66899109 127.02215576]
[106.01779938 132.87631226]
[91.17805481 132.23722839]
[84.07313538 145.44784546]
[76.96820831 158.65844727]
[69.86328125 171.86904907]
[62.75835419 185.07965088]
[55.76231003 198.34823608]
[48.87562561 211.67390442]
[41.98894119 224.99958801]
[35.10225677 238.32525635]
[28.21557236 251.65092468]
[21.32888603 264.97659302]
[14.44220161 278.30227661]
[14.98002148 294.11434937]
[2.26312447 301.86868286]
[-4.62356043 315.19433594]
[-11.51024532 328.52001953]
[-18.39693069 341.84570312]
[-25.28361511 355.17135620]
[-24.74579620 370.98342896]
[-37.46269226 378.73776245]
[-44.34937668 392.06344604]
[-51.23606110 405.38912964]
[-57.90264511 418.82626343]
[-64.34732056 432.37121582]
[-70.79199219 445.91619873]
[-77.23666382 459.46118164]
[-83.68133545 473.00613403]
[-90.12600708 486.55111694]
[-76.30232239 480.72824097]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 28]
[8 27]
[9 26]
[11 24]
[12 23]
[13 22]
[14 21]
[15 20]
[29 189]
[30 188]
[31 187]
[32 186]
[33 185]
[34 184]
[37 183]
[38 182]
[39 181]
[41 179]
[42 178]
[43 177]
[44 176]
[45 175]
[47 173]
[48 172]
[49 171]
[50 170]
[51 169]
[52 168]
[53 167]
[55 166]
[56 165]
[57 164]
[58 163]
[59 162]
[65 156]
[66 155]
[67 154]
[73 146]
[74 145]
[77 142]
[78 141]
[81 138]
[82 137]
[83 136]
[84 135]
[85 134]
[89 131]
[90 130]
[91 129]
[92 128]
[94 126]
[95 125]
[96 123]
[97 122]
[98 121]
[105 116]
[106 115]
[107 114]
[108 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
