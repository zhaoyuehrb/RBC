%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:51:32 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CSTF2)
} def

/sequence { (\
UGUGCUCCGUACGGAAGUGUGCUUUGGCGCACCGGAAGCCGACUCAACAGAGCU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 13 0.102431341 ubox
1 31 0.112523997 ubox
1 34 0.004944474 ubox
1 41 0.494823617 ubox
1 46 0.012337760 ubox
1 49 0.045602614 ubox
2 8 0.003475575 ubox
2 12 0.136157628 ubox
2 20 0.008058576 ubox
2 22 0.007733204 ubox
2 30 0.132076602 ubox
2 32 0.148607627 ubox
2 33 0.005030816 ubox
2 39 0.060073624 ubox
2 40 0.648870117 ubox
2 43 0.068396837 ubox
2 45 0.013368492 ubox
2 48 0.050596322 ubox
2 53 0.026638236 ubox
3 11 0.136283024 ubox
3 19 0.016668296 ubox
3 21 0.007684104 ubox
3 29 0.132058394 ubox
3 31 0.149324085 ubox
3 38 0.060481271 ubox
3 41 0.050859634 ubox
3 42 0.065032769 ubox
3 46 0.008251821 ubox
3 47 0.049407785 ubox
3 49 0.007536497 ubox
3 52 0.018801315 ubox
4 10 0.136213992 ubox
4 18 0.032644361 ubox
4 20 0.007792946 ubox
4 28 0.132141712 ubox
4 30 0.149567949 ubox
4 39 0.745730806 ubox
4 40 0.049294554 ubox
4 45 0.010487281 ubox
4 48 0.008329549 ubox
4 53 0.596569245 ubox
5 9 0.135407234 ubox
5 14 0.004838911 ubox
5 17 0.033874118 ubox
5 19 0.007827339 ubox
5 27 0.132057759 ubox
5 29 0.149509867 ubox
5 38 0.747734901 ubox
5 50 0.011678037 ubox
5 52 0.597417971 ubox
6 13 0.004497434 ubox
6 15 0.124792784 ubox
6 16 0.024567988 ubox
6 26 0.122489636 ubox
6 27 0.018040307 ubox
6 36 0.533580186 ubox
6 37 0.528342255 ubox
6 42 0.010653829 ubox
6 49 0.009225642 ubox
6 51 0.595994072 ubox
7 13 0.003722032 ubox
7 14 0.136990767 ubox
7 26 0.038044519 ubox
7 27 0.148338347 ubox
7 35 0.751517826 ubox
7 41 0.011249518 ubox
7 50 0.594685094 ubox
8 13 0.138941898 ubox
8 21 0.006653092 ubox
8 26 0.148291171 ubox
8 34 0.751384094 ubox
8 41 0.021115515 ubox
9 20 0.006742493 ubox
9 22 0.201822959 ubox
9 25 0.030506896 ubox
9 32 0.006967695 ubox
9 33 0.748447082 ubox
9 39 0.014565468 ubox
9 40 0.020413381 ubox
9 43 0.119388939 ubox
9 48 0.559610495 ubox
10 19 0.013892381 ubox
10 21 0.203793416 ubox
10 31 0.008256310 ubox
10 38 0.015048703 ubox
10 42 0.121214710 ubox
10 47 0.543772754 ubox
11 18 0.031326088 ubox
11 20 0.203905650 ubox
12 17 0.035123633 ubox
12 19 0.203943812 ubox
12 21 0.006526144 ubox
12 29 0.005335554 ubox
12 34 0.065329835 ubox
12 41 0.282229189 ubox
13 18 0.180774243 ubox
13 20 0.006177946 ubox
13 23 0.004143245 ubox
13 28 0.005297571 ubox
13 33 0.074927976 ubox
13 40 0.284474106 ubox
13 44 0.239090312 ubox
13 45 0.110862423 ubox
13 54 0.011402379 ubox
14 22 0.004268909 ubox
14 25 0.006991073 ubox
14 32 0.065862728 ubox
14 39 0.284354730 ubox
14 43 0.243632880 ubox
14 44 0.082782445 ubox
14 45 0.335862695 ubox
14 53 0.014071459 ubox
15 24 0.008121161 ubox
15 44 0.264183481 ubox
16 23 0.008311894 ubox
16 44 0.225894288 ubox
17 22 0.008285644 ubox
17 30 0.011998561 ubox
17 32 0.920840119 ubox
17 43 0.305014386 ubox
18 29 0.012008892 ubox
18 31 0.924814613 ubox
18 34 0.012614772 ubox
18 41 0.083842474 ubox
18 42 0.299962776 ubox
18 49 0.007393584 ubox
19 28 0.012036450 ubox
19 30 0.926017409 ubox
19 32 0.039620194 ubox
19 33 0.008935918 ubox
19 39 0.004200956 ubox
19 40 0.112929410 ubox
19 43 0.005217308 ubox
19 48 0.008121778 ubox
20 27 0.011944433 ubox
20 29 0.925666287 ubox
20 31 0.040776671 ubox
20 38 0.004265784 ubox
20 41 0.011970629 ubox
20 42 0.004844744 ubox
20 46 0.008737105 ubox
20 47 0.006933471 ubox
21 28 0.926000899 ubox
21 30 0.040850923 ubox
21 39 0.311656445 ubox
21 40 0.009655788 ubox
21 45 0.010228692 ubox
21 53 0.032705564 ubox
22 27 0.925326819 ubox
22 29 0.040807818 ubox
22 38 0.311868984 ubox
22 52 0.032764324 ubox
23 36 0.125931909 ubox
23 37 0.284728068 ubox
23 51 0.032754079 ubox
24 35 0.178359671 ubox
24 36 0.253209964 ubox
24 42 0.042614070 ubox
24 50 0.032604853 ubox
25 34 0.250393989 ubox
25 35 0.180722531 ubox
25 41 0.046532650 ubox
25 49 0.032501745 ubox
26 33 0.307465676 ubox
26 40 0.048508725 ubox
26 48 0.032435769 ubox
27 32 0.306091412 ubox
27 39 0.048529530 ubox
28 34 0.023126550 ubox
28 38 0.048517251 ubox
29 33 0.021946196 ubox
33 41 0.488760827 ubox
34 40 0.493680763 ubox
34 44 0.007673456 ubox
34 45 0.014212177 ubox
35 39 0.485729968 ubox
35 43 0.009805587 ubox
35 44 0.013372546 ubox
35 45 0.039784837 ubox
36 44 0.035093946 ubox
37 44 0.027345063 ubox
37 54 0.029238548 ubox
38 43 0.033137189 ubox
38 53 0.032455059 ubox
39 52 0.031278002 ubox
43 50 0.044992151 ubox
43 52 0.757054963 ubox
44 49 0.041786614 ubox
44 51 0.762488382 ubox
45 50 0.761903750 ubox
1 41 0.9500000 lbox
2 40 0.9500000 lbox
4 39 0.9500000 lbox
5 38 0.9500000 lbox
6 37 0.9500000 lbox
7 35 0.9500000 lbox
8 34 0.9500000 lbox
9 33 0.9500000 lbox
17 32 0.9500000 lbox
18 31 0.9500000 lbox
19 30 0.9500000 lbox
20 29 0.9500000 lbox
21 28 0.9500000 lbox
22 27 0.9500000 lbox
43 52 0.9500000 lbox
44 51 0.9500000 lbox
45 50 0.9500000 lbox
showpage
end
%%EOF
