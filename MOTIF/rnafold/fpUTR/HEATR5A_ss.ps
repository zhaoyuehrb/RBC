%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:03:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGCCUCGCUGUCGCCGCCGCCGGCAAUUCCAGACUCUGCUAGGGUUAGCAGAGCAGCCGGUAACGUUGCUGGACCGGGACGCACGCUCAGCUGAGGAGGACCCCCAAAGAUUUUUAUUGUUAGGUAUAUUGACCAAAGUUUAACGAGAAGAACUGUGAUCAGCUGGGAGGAUUGCUGCAAGGA\
) } def
/len { sequence length } bind def

/coor [
[101.69305420 222.63311768]
[85.90904999 221.83264160]
[75.37623596 210.04978943]
[76.34354401 194.27513123]
[88.23708344 183.86749268]
[88.99681854 168.88673401]
[89.75656128 153.90599060]
[82.67381287 140.80316162]
[91.10015106 127.41259766]
[91.85988617 112.43184662]
[83.66467285 101.35588837]
[87.84387207 86.82913971]
[72.84600830 86.57579803]
[57.84815216 86.32245636]
[49.19297028 89.31161499]
[42.59969711 85.93605042]
[27.60825348 85.42943573]
[12.61681080 84.92282104]
[3.89025402 95.19972229]
[-8.97588634 98.51890564]
[-21.22065163 93.88388824]
[-28.44564819 83.19950867]
[-43.42639542 82.43976593]
[-58.40714264 81.68003082]
[-73.38789368 80.92029572]
[-88.36863708 80.16055298]
[-103.34938812 79.40081787]
[-118.33013153 78.64108276]
[-133.31088257 77.88134003]
[-151.72827148 88.80873871]
[-168.60391235 76.94705963]
[-183.60391235 76.94705963]
[-193.80056763 91.91804504]
[-210.78840637 97.73640442]
[-227.72370911 92.25707245]
[-237.90257263 77.84684753]
[-252.89402771 78.35346222]
[-267.88546753 78.86007690]
[-282.87689209 79.36668396]
[-297.86834717 79.87329865]
[-312.85980225 80.37991333]
[-327.85122681 80.88652039]
[-342.84268188 81.39313507]
[-356.46591187 90.52216339]
[-371.06216431 83.04674530]
[-371.61602783 66.65695190]
[-357.55776978 58.21319962]
[-343.34927368 66.40169525]
[-328.35784912 65.89508057]
[-313.36639404 65.38846588]
[-298.37496948 64.88185883]
[-283.38351440 64.37524414]
[-268.39208984 63.86863327]
[-253.40063477 63.36202240]
[-238.40919495 62.85540771]
[-233.16200256 51.88094330]
[-223.68527222 44.13970947]
[-211.74421692 41.15309143]
[-199.59716797 43.54936218]
[-189.56851196 50.93269348]
[-183.60391235 61.94705582]
[-168.60391235 61.94705582]
[-163.40789795 54.70062637]
[-155.33161926 50.60682678]
[-146.13973999 50.70257187]
[-137.90728760 55.09329605]
[-132.55114746 62.90059662]
[-117.57039642 63.66033173]
[-102.58964539 64.42006683]
[-87.60890198 65.17980957]
[-72.62815094 65.93954468]
[-57.64740753 66.69927979]
[-42.66666031 67.45902252]
[-27.68591118 68.21875763]
[-15.71159935 56.42370224]
[1.42614186 56.93801880]
[13.12342262 69.93138123]
[28.11486435 70.43799591]
[43.10630798 70.94460297]
[58.10149384 71.32460022]
[73.09935760 71.57794189]
[88.09721375 71.83128357]
[102.92424011 69.55986786]
[117.15844727 64.82833099]
[131.39265442 60.09680557]
[139.39810181 41.69091034]
[158.05975342 35.17319870]
[175.24588013 44.30742264]
[189.22216797 38.86101532]
[203.19845581 33.41460800]
[217.17474365 27.96819878]
[231.15103149 22.52178955]
[245.12731934 17.07538223]
[259.10360718 11.62897491]
[273.07989502 6.18256664]
[287.05618286 0.73615885]
[297.20559692 -10.30872631]
[301.45367432 -24.69461441]
[293.68157959 -38.45579910]
[297.99694824 -53.65952301]
[311.83953857 -61.28568649]
[326.99679565 -56.80982590]
[334.47616577 -42.88738632]
[329.84030151 -27.77830505]
[315.83956909 -20.44653320]
[311.59149170 -6.06064415]
[321.83380127 4.89813519]
[336.47366333 1.63093197]
[348.25720215 -8.92646313]
[362.36419678 -4.14710522]
[377.00405884 -7.41430855]
[384.71810913 -12.34790325]
[391.91870117 -10.61085415]
[406.61166382 -13.63033199]
[421.30459595 -16.64981079]
[435.99755859 -19.66928673]
[450.69049072 -22.68876457]
[462.65066528 -33.04563522]
[476.67492676 -28.02869987]
[491.36788940 -31.04817772]
[506.06082153 -34.06765747]
[520.75378418 -37.08713531]
[535.44671631 -40.10661316]
[550.13964844 -43.12609100]
[564.66082764 -46.88587952]
[578.97290039 -51.37632370]
[593.28503418 -55.86677170]
[600.37927246 -69.98934174]
[615.40789795 -74.87973022]
[629.45465088 -67.63655090]
[634.18591309 -52.55706024]
[626.79461670 -38.58764648]
[611.66595459 -34.01612091]
[597.77545166 -41.55468369]
[583.46337891 -37.06423569]
[569.15130615 -32.57378769]
[581.83355713 -24.56379890]
[585.28973389 -9.96740818]
[577.54602051 2.87916327]
[563.02490234 6.63904428]
[550.01959229 -0.83508933]
[545.95770264 -15.27464771]
[553.15917969 -28.43313980]
[538.46618652 -25.41366196]
[523.77325439 -22.39418411]
[509.08029175 -19.37470818]
[494.38735962 -16.35523033]
[479.69439697 -13.33575153]
[468.78515625 -3.19485331]
[453.70999146 -7.99581623]
[439.01702881 -4.97633839]
[424.32406616 -1.95686078]
[409.63113403 1.06261706]
[394.93817139 4.08209467]
[380.27127075 7.22554731]
[365.63140869 10.49275112]
[354.89498901 20.81645393]
[339.74087524 16.27078819]
[325.10101318 19.53799057]
[305.68801880 24.24073792]
[292.50259399 14.71244717]
[278.52630615 20.15885544]
[264.55001831 25.60526276]
[250.57373047 31.05167198]
[236.59744263 36.49807739]
[222.62115479 41.94448853]
[208.64486694 47.39089584]
[194.66857910 52.83730316]
[180.69229126 58.28371048]
[179.24081421 68.48350525]
[173.63308716 77.22244263]
[164.82952881 82.87921906]
[154.39044189 84.37129974]
[144.19955444 81.36145020]
[136.12417603 74.33100891]
[121.88997650 79.06253815]
[107.65576935 83.79406738]
[116.38868713 99.69631195]
[106.84063721 113.19158173]
[106.08090210 128.17233276]
[113.10929871 142.34667969]
[104.73730469 154.66572571]
[103.97756958 169.64646912]
[103.21783447 184.62722778]
[113.99742889 196.18472290]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 184]
[6 183]
[7 182]
[9 180]
[10 179]
[12 82]
[13 81]
[14 80]
[16 79]
[17 78]
[18 77]
[22 74]
[23 73]
[24 72]
[25 71]
[26 70]
[27 69]
[28 68]
[29 67]
[31 62]
[32 61]
[36 55]
[37 54]
[38 53]
[39 52]
[40 51]
[41 50]
[42 49]
[43 48]
[83 177]
[84 176]
[85 175]
[88 169]
[89 168]
[90 167]
[91 166]
[92 165]
[93 164]
[94 163]
[95 162]
[96 161]
[97 106]
[98 105]
[107 159]
[108 158]
[110 156]
[111 155]
[113 154]
[114 153]
[115 152]
[116 151]
[117 150]
[119 148]
[120 147]
[121 146]
[122 145]
[123 144]
[124 143]
[125 136]
[126 135]
[127 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
