%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:27:06 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (UCP1)
} def

/sequence { (\
AGAGCAAGGGAAAGGAACUUCCUCCACCUUCGGGGCUGGAGCCCUUUUCCUCUGCAUCUCCAGUCUCUGAGUGAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 53 0.011410310 ubox
1 59 0.740202528 ubox
1 66 0.013225460 ubox
1 68 0.022698671 ubox
2 24 0.037402893 ubox
2 30 0.005072207 ubox
2 31 0.010032016 ubox
2 52 0.012099213 ubox
2 58 0.857899214 ubox
2 60 0.095296898 ubox
2 65 0.015712830 ubox
2 67 0.024018885 ubox
3 23 0.037352085 ubox
3 29 0.006595757 ubox
3 30 0.009411623 ubox
3 51 0.010312925 ubox
3 53 0.018475613 ubox
3 57 0.855686038 ubox
3 59 0.094850120 ubox
3 64 0.015607459 ubox
3 66 0.023912078 ubox
4 22 0.037066281 ubox
4 28 0.007039251 ubox
4 29 0.005340878 ubox
4 50 0.006492911 ubox
4 52 0.018870503 ubox
4 55 0.990725935 ubox
4 58 0.046835970 ubox
4 65 0.015276382 ubox
4 72 0.006512858 ubox
5 54 0.993394913 ubox
5 63 0.005411162 ubox
5 71 0.006831643 ubox
5 73 0.005961200 ubox
6 20 0.031879790 ubox
6 30 0.030343537 ubox
6 46 0.004126647 ubox
6 53 0.978797674 ubox
6 72 0.005238041 ubox
7 19 0.034328220 ubox
7 20 0.012201660 ubox
7 23 0.022829414 ubox
7 29 0.048165803 ubox
7 30 0.009203087 ubox
7 45 0.004273123 ubox
7 51 0.898551967 ubox
7 53 0.059253939 ubox
8 18 0.034206063 ubox
8 19 0.013775070 ubox
8 22 0.024188361 ubox
8 23 0.058588340 ubox
8 24 0.014752195 ubox
8 25 0.010525013 ubox
8 28 0.052453370 ubox
8 29 0.015997440 ubox
8 44 0.004296360 ubox
8 50 0.911666044 ubox
8 51 0.382797066 ubox
8 52 0.080600356 ubox
9 18 0.014287203 ubox
9 21 0.024051631 ubox
9 22 0.063951786 ubox
9 23 0.005608445 ubox
9 24 0.010531067 ubox
9 25 0.018950254 ubox
9 27 0.052410289 ubox
9 28 0.017602102 ubox
9 43 0.004296185 ubox
9 49 0.911694483 ubox
9 50 0.398299399 ubox
9 51 0.012247291 ubox
10 20 0.023515615 ubox
10 21 0.064097903 ubox
10 22 0.005625678 ubox
10 23 0.005498440 ubox
10 24 0.019308114 ubox
10 27 0.017611733 ubox
10 42 0.004281257 ubox
10 48 0.910900221 ubox
10 49 0.398395293 ubox
10 50 0.009824758 ubox
11 19 0.022663564 ubox
11 20 0.063294719 ubox
11 23 0.014868105 ubox
11 46 0.003619329 ubox
11 47 0.913578753 ubox
11 48 0.392211021 ubox
12 19 0.057308368 ubox
12 20 0.011249175 ubox
12 45 0.004186283 ubox
12 46 0.915730544 ubox
12 47 0.385204239 ubox
13 19 0.015253066 ubox
13 23 0.057583371 ubox
13 29 0.003461224 ubox
13 45 0.919047011 ubox
13 46 0.377856087 ubox
13 51 0.003388863 ubox
14 18 0.017856311 ubox
14 22 0.062350133 ubox
14 25 0.031363198 ubox
14 28 0.003827985 ubox
14 43 0.064212378 ubox
14 44 0.920499843 ubox
14 45 0.370132869 ubox
14 50 0.003690533 ubox
15 21 0.063097877 ubox
15 24 0.031412560 ubox
15 27 0.003810406 ubox
15 42 0.085295116 ubox
15 43 0.917652352 ubox
15 44 0.369935970 ubox
15 49 0.003710198 ubox
16 20 0.055616819 ubox
16 23 0.030138848 ubox
16 48 0.003685692 ubox
17 47 0.003404618 ubox
18 39 0.102704228 ubox
18 41 0.683716245 ubox
19 38 0.101759225 ubox
19 39 0.011860399 ubox
19 40 0.668734106 ubox
19 41 0.463713980 ubox
20 35 0.007858296 ubox
20 38 0.013429493 ubox
20 39 0.651570530 ubox
20 40 0.505175360 ubox
21 34 0.010285528 ubox
21 35 0.074634380 ubox
21 38 0.634843816 ubox
21 39 0.526524734 ubox
22 33 0.010434904 ubox
22 34 0.076773705 ubox
22 35 0.564324335 ubox
22 38 0.524341060 ubox
22 39 0.006230353 ubox
22 41 0.518515232 ubox
23 32 0.010124841 ubox
23 33 0.050019148 ubox
23 34 0.575971847 ubox
23 35 0.081248503 ubox
23 38 0.006819109 ubox
23 40 0.521694470 ubox
23 74 0.005524805 ubox
23 75 0.004545097 ubox
24 32 0.049577475 ubox
24 33 0.580122435 ubox
24 34 0.094606648 ubox
24 35 0.544285529 ubox
24 38 0.004122536 ubox
24 39 0.522696754 ubox
24 73 0.006406154 ubox
25 32 0.579705963 ubox
25 33 0.094257392 ubox
25 34 0.543718246 ubox
25 38 0.522727542 ubox
25 73 0.074815786 ubox
26 37 0.517712961 ubox
26 72 0.075059635 ubox
27 33 0.528610855 ubox
27 34 0.275522539 ubox
27 35 0.505311264 ubox
27 71 0.064776412 ubox
28 32 0.525260058 ubox
28 33 0.277366933 ubox
28 34 0.504800993 ubox
28 35 0.069878840 ubox
28 71 0.042453527 ubox
28 76 0.006578643 ubox
29 33 0.454776828 ubox
29 34 0.064717167 ubox
29 70 0.054480185 ubox
29 71 0.026358645 ubox
29 75 0.006819575 ubox
30 69 0.051563797 ubox
30 70 0.069798818 ubox
30 74 0.006949055 ubox
31 69 0.076897915 ubox
31 73 0.007028028 ubox
32 45 0.031288926 ubox
32 67 0.068647286 ubox
32 68 0.071213032 ubox
33 44 0.034000206 ubox
33 66 0.069169510 ubox
33 67 0.071035257 ubox
34 43 0.034394333 ubox
34 65 0.088854191 ubox
34 66 0.044034978 ubox
35 42 0.034668551 ubox
35 64 0.089042428 ubox
35 65 0.043677002 ubox
36 41 0.034584891 ubox
36 63 0.099204860 ubox
37 62 0.099186420 ubox
38 61 0.099208047 ubox
39 60 0.099202043 ubox
40 59 0.099017992 ubox
41 55 0.023982341 ubox
41 58 0.094833127 ubox
42 54 0.026947142 ubox
52 63 0.011442552 ubox
52 76 0.023479930 ubox
53 62 0.011815672 ubox
53 75 0.021796257 ubox
54 61 0.011799609 ubox
54 72 0.003717475 ubox
55 71 0.003801287 ubox
55 73 0.047584841 ubox
56 64 0.005258252 ubox
56 72 0.067771715 ubox
57 63 0.005410132 ubox
57 70 0.026786732 ubox
57 71 0.022370305 ubox
57 74 0.062810955 ubox
58 69 0.028543990 ubox
58 71 0.243917837 ubox
58 73 0.065620954 ubox
58 76 0.206812779 ubox
59 70 0.250696820 ubox
59 74 0.108902182 ubox
59 75 0.216573437 ubox
60 69 0.214045463 ubox
60 73 0.098013183 ubox
61 69 0.384233717 ubox
61 73 0.816207168 ubox
62 68 0.406719908 ubox
62 72 0.819910260 ubox
63 67 0.398148638 ubox
63 72 0.008623800 ubox
64 70 0.816850131 ubox
64 71 0.012330726 ubox
64 74 0.101431634 ubox
65 69 0.812193593 ubox
65 71 0.032076043 ubox
65 73 0.108373111 ubox
65 76 0.044926840 ubox
66 70 0.029218267 ubox
66 74 0.154581465 ubox
66 75 0.036242361 ubox
67 73 0.164596551 ubox
67 76 0.068038408 ubox
68 75 0.069759072 ubox
1 59 0.9500000 lbox
2 58 0.9500000 lbox
3 57 0.9500000 lbox
4 55 0.9500000 lbox
5 54 0.9500000 lbox
6 53 0.9500000 lbox
7 51 0.9500000 lbox
8 50 0.9500000 lbox
9 49 0.9500000 lbox
10 48 0.9500000 lbox
11 47 0.9500000 lbox
12 46 0.9500000 lbox
13 45 0.9500000 lbox
14 44 0.9500000 lbox
15 43 0.9500000 lbox
18 41 0.9500000 lbox
19 40 0.9500000 lbox
20 39 0.9500000 lbox
21 38 0.9500000 lbox
22 35 0.9500000 lbox
23 34 0.9500000 lbox
24 33 0.9500000 lbox
25 32 0.9500000 lbox
61 73 0.9500000 lbox
62 72 0.9500000 lbox
64 70 0.9500000 lbox
65 69 0.9500000 lbox
showpage
end
%%EOF
