%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:39:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACACACCUGGGGAAUUGCUGGCCUGACUUCUGACCCCUGACUCCUCAUACCCUUCCUCCAGAGCAUGACAUUUGACCACCAACUGAAACCUGACCUCUGACCCCAGACCACUGGCCCUUCCCCCGCCCUGUGGUGACUUCAUAAAGGUUACUAGCUUCUCCCCUGGCCUUGAGACCCACACG\
) } def
/len { sequence length } bind def

/coor [
[91.57515717 398.28768921]
[89.95623779 383.29336548]
[92.11793518 368.36761475]
[97.92436218 354.44869995]
[107.01052094 342.41156006]
[118.80525208 333.01287842]
[132.56712341 326.84344482]
[130.01846313 312.06155396]
[120.23117065 300.83398438]
[125.51116943 285.91983032]
[122.96251678 271.13793945]
[120.41386414 256.35604858]
[117.86520386 241.57415771]
[115.31655121 226.79226685]
[101.89501190 220.38909912]
[94.73278809 207.15405273]
[96.76090240 192.06298828]
[107.40929413 180.93115234]
[104.86064148 166.14926147]
[102.31198120 151.36737061]
[99.76332855 136.58547974]
[97.21467590 121.80358124]
[96.09979248 136.76210022]
[85.24203491 147.11145020]
[70.24728394 147.50823975]
[58.85736084 137.74761963]
[56.95291519 122.86901093]
[65.51721191 110.55426788]
[80.13051605 107.16181183]
[65.13269806 106.90571594]
[50.13488388 106.64962006]
[35.13706970 106.39352417]
[20.13925743 106.13742828]
[16.54334641 120.76675415]
[9.78179359 134.22889709]
[0.19375861 145.84858704]
[-11.73982811 155.04299927]
[-25.42038345 161.35093689]
[-40.16169357 164.45600891]
[-55.22434616 164.20246887]
[-69.85279846 160.60301208]
[-83.31330109 153.83819580]
[-94.93067169 144.24734497]
[-104.12219238 132.31152344]
[-110.42681885 118.62944794]
[-113.52832031 103.88738251]
[-113.27111816 88.82479095]
[-109.66811371 74.19721222]
[-102.90003967 60.73834991]
[-93.30637360 49.12330246]
[-81.36833191 39.93467331]
[-67.68472290 33.63336182]
[-52.94190979 30.53543472]
[-37.87938309 30.79628563]
[-23.25267601 34.40283203]
[-9.79545784 41.17416763]
[1.81726503 50.77064514]
[11.00300121 62.71091461]
[17.30099869 76.39604950]
[20.39535332 91.13961792]
[35.39316559 91.39571381]
[50.39097977 91.65180969]
[65.38879395 91.90790558]
[80.38661194 92.16399384]
[84.33805084 85.78935242]
[69.77067566 82.21282959]
[68.67076874 67.25320435]
[82.55839539 61.58453369]
[92.24093628 73.04006195]
[96.19238281 66.66542053]
[89.29140472 53.34713745]
[76.07259369 44.65383148]
[77.08705139 29.79381371]
[70.18608093 16.47553444]
[63.28510284 3.15725708]
[48.49026871 -3.04696703]
[44.25530243 -18.52096558]
[53.82891083 -31.39441109]
[69.86703491 -31.79189682]
[80.06660461 -19.40850830]
[76.60337830 -3.74371862]
[83.50435638 9.57456017]
[90.40533447 22.89283752]
[103.13053894 30.63353348]
[102.60968018 46.44616318]
[109.51065826 59.76444244]
[116.74954987 61.72619247]
[116.00732422 46.74456787]
[130.02639771 41.40926743]
[139.43255615 53.09362411]
[131.22732544 65.64968872]
[138.46621704 67.61144257]
[151.14758301 59.60000610]
[163.82893372 51.58856964]
[176.51029968 43.57713318]
[189.19166565 35.56569672]
[201.87301636 27.55426025]
[210.40559387 9.30793381]
[229.72793579 9.31845093]
[242.12837219 0.87872958]
[254.52882385 -7.56099176]
[252.35325623 -20.31747055]
[255.16189575 -32.90174484]
[262.50149536 -43.44585800]
[273.24905396 -50.39846420]
[285.78338623 -52.75302887]
[298.22970581 -50.19343185]
[308.74002075 -43.13589478]
[321.42138672 -51.14733124]
[334.10275269 -59.15876770]
[346.78408813 -67.17020416]
[359.46545410 -75.18164062]
[367.63540649 -91.67185974]
[385.17419434 -91.71324921]
[397.71691895 -99.94002533]
[410.25967407 -108.16680145]
[410.01318359 -123.59219360]
[418.16482544 -136.69006348]
[432.11343384 -143.28092957]
[447.40808105 -141.26167297]
[459.16827393 -131.27662659]
[463.64141846 -116.51198578]
[459.40008545 -101.67908478]
[447.79772949 -91.51106262]
[432.53659058 -89.25248718]
[418.48645020 -95.62406921]
[405.94372559 -87.39729309]
[393.40097046 -79.17051697]
[390.62619019 -67.38114929]
[380.22332764 -60.42800140]
[367.47689819 -62.50028229]
[354.79553223 -54.48884583]
[342.11416626 -46.47740936]
[329.43283081 -38.46597290]
[316.75146484 -30.45453644]
[318.06878662 -13.30729675]
[310.49401855 2.23141122]
[296.02667236 11.85460663]
[278.59030151 12.84449768]
[262.96853638 4.83945560]
[250.56809998 13.27917671]
[238.16764832 21.71889877]
[237.16360474 31.91700745]
[230.56361389 40.04130173]
[220.36802673 43.24528122]
[209.88446045 40.23561859]
[197.20309448 48.24705505]
[184.52174377 56.25849152]
[171.84037781 64.26992798]
[159.15901184 72.28136444]
[146.47766113 80.29280090]
[111.99656677 119.25492859]
[114.54521942 134.03681946]
[117.09387970 148.81871033]
[119.64253235 163.60060120]
[122.19118500 178.38249207]
[135.95257568 185.30566406]
[142.91728210 198.84620667]
[140.60073853 213.71556091]
[130.09843445 224.24360657]
[132.64709473 239.02549744]
[135.19575500 253.80738831]
[137.74441528 268.58929443]
[140.29306030 283.37118530]
[150.26264954 295.65603638]
[144.80035400 309.51290894]
[147.34901428 324.29479980]
[162.38229370 325.49942017]
[176.64343262 330.40563965]
[189.23594666 338.70498657]
[199.36828613 349.87576294]
[206.40348816 363.21582031]
[209.89935303 377.88653564]
[209.63609314 392.96569824]
[205.63027954 407.50546265]
[198.13369751 420.59179688]
[187.61761475 431.40209961]
[174.74307251 439.25683594]
[160.31938171 443.66226196]
[145.25320435 444.34140015]
[130.49163818 441.25161743]
[116.96258545 434.58709717]
[105.51651001 424.76681519]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 167]
[8 166]
[10 164]
[11 163]
[12 162]
[13 161]
[14 160]
[18 156]
[19 155]
[20 154]
[21 153]
[22 152]
[29 64]
[30 63]
[31 62]
[32 61]
[33 60]
[70 86]
[71 85]
[73 83]
[74 82]
[75 81]
[92 151]
[93 150]
[94 149]
[95 148]
[96 147]
[97 146]
[99 142]
[100 141]
[101 140]
[108 135]
[109 134]
[110 133]
[111 132]
[112 131]
[114 128]
[115 127]
[116 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
