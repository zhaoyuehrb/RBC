%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:05:34 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KDELC2)
} def

/sequence { (\
GGUCCGCGGCGCUGCCGGCCCCUCCUCGCCGCCGCGGAGCUGGACCGCAGUUGUGCCCCGCCGACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 41 0.016904380 ubox
1 46 0.225074370 ubox
1 57 0.004519549 ubox
1 59 0.009614110 ubox
1 62 0.042838256 ubox
1 66 0.960745536 ubox
2 40 0.019011450 ubox
2 45 0.225244793 ubox
2 56 0.004533561 ubox
2 58 0.009603380 ubox
2 61 0.042732229 ubox
2 65 0.972172046 ubox
3 38 0.040642032 ubox
3 39 0.009942885 ubox
3 44 0.225184840 ubox
3 55 0.004081788 ubox
3 60 0.033402889 ubox
3 64 0.972072717 ubox
4 37 0.046781419 ubox
4 43 0.225167617 ubox
4 63 0.970041706 ubox
5 36 0.047405190 ubox
5 42 0.223722090 ubox
5 55 0.007706483 ubox
5 60 0.260040009 ubox
5 63 0.030572555 ubox
6 32 0.004192440 ubox
6 35 0.047667683 ubox
6 40 0.199811213 ubox
6 41 0.061394118 ubox
6 54 0.007785253 ubox
6 56 0.022921949 ubox
6 59 0.266084918 ubox
6 61 0.933714599 ubox
6 62 0.031403087 ubox
7 31 0.004212483 ubox
7 34 0.047672804 ubox
7 39 0.204374131 ubox
7 42 0.023832166 ubox
7 53 0.007793795 ubox
7 55 0.023007471 ubox
7 60 0.933053088 ubox
7 63 0.012771629 ubox
8 16 0.004626812 ubox
8 30 0.004231305 ubox
8 33 0.047848465 ubox
8 41 0.077775926 ubox
8 52 0.006902647 ubox
8 54 0.021976149 ubox
8 57 0.638471286 ubox
8 58 0.124358584 ubox
8 59 0.720399291 ubox
8 62 0.020443567 ubox
9 15 0.005918032 ubox
9 29 0.004233069 ubox
9 32 0.047863407 ubox
9 35 0.004759973 ubox
9 40 0.093365656 ubox
9 51 0.003408920 ubox
9 54 0.134283995 ubox
9 56 0.703936469 ubox
9 57 0.129231678 ubox
9 58 0.643610649 ubox
9 61 0.020465919 ubox
10 14 0.006186438 ubox
10 28 0.004233031 ubox
10 31 0.047607334 ubox
10 34 0.005239771 ubox
10 36 0.208080467 ubox
10 39 0.093264844 ubox
10 50 0.003330351 ubox
10 53 0.407663399 ubox
10 55 0.758356194 ubox
10 60 0.020461341 ubox
11 27 0.004027851 ubox
11 29 0.008173586 ubox
11 30 0.044840981 ubox
11 32 0.009215326 ubox
11 33 0.008155060 ubox
11 35 0.208670862 ubox
11 51 0.683631765 ubox
11 52 0.289984046 ubox
11 54 0.538166019 ubox
11 56 0.300882471 ubox
11 59 0.017237668 ubox
12 28 0.011460727 ubox
12 31 0.009005993 ubox
12 34 0.208129614 ubox
12 37 0.095392951 ubox
12 50 0.789301015 ubox
12 53 0.491695734 ubox
12 55 0.275602773 ubox
13 28 0.021849498 ubox
13 34 0.016812387 ubox
13 36 0.098067372 ubox
13 49 0.875939002 ubox
13 53 0.025714713 ubox
13 55 0.008652583 ubox
14 27 0.023128872 ubox
14 29 0.037399477 ubox
14 32 0.199123088 ubox
14 33 0.076023275 ubox
14 35 0.100724602 ubox
14 48 0.877983592 ubox
14 51 0.375563972 ubox
14 52 0.019878826 ubox
14 54 0.068095321 ubox
14 56 0.004426160 ubox
15 28 0.036375308 ubox
15 31 0.140968420 ubox
15 34 0.098813260 ubox
15 43 0.018187488 ubox
15 47 0.622312561 ubox
15 50 0.384837091 ubox
15 53 0.070488963 ubox
15 55 0.004423273 ubox
16 28 0.010898580 ubox
16 31 0.193654327 ubox
16 34 0.017690142 ubox
16 42 0.021291232 ubox
16 47 0.737243569 ubox
16 53 0.003442740 ubox
17 23 0.004329126 ubox
17 24 0.013369196 ubox
17 25 0.033313028 ubox
17 26 0.023213977 ubox
17 27 0.014197573 ubox
17 30 0.241136949 ubox
17 33 0.025209640 ubox
17 41 0.021300608 ubox
17 46 0.966277382 ubox
18 22 0.004785411 ubox
18 23 0.009420521 ubox
18 24 0.033126968 ubox
18 25 0.024236028 ubox
18 26 0.011197051 ubox
18 29 0.241246657 ubox
18 32 0.025218087 ubox
18 40 0.021315620 ubox
18 45 0.966089780 ubox
18 48 0.027045798 ubox
19 28 0.241152397 ubox
19 31 0.025180012 ubox
19 39 0.019239199 ubox
19 43 0.816156851 ubox
19 47 0.027016603 ubox
20 37 0.003697130 ubox
20 42 0.814662586 ubox
20 43 0.512521943 ubox
21 36 0.003459962 ubox
21 37 0.006178416 ubox
21 42 0.510898282 ubox
21 43 0.088008793 ubox
22 36 0.005809724 ubox
22 39 0.954210070 ubox
22 42 0.089547639 ubox
22 43 0.004106655 ubox
23 38 0.959595775 ubox
23 42 0.003924451 ubox
23 44 0.014972670 ubox
24 37 0.958502592 ubox
24 43 0.015126497 ubox
25 36 0.948423516 ubox
25 37 0.046500583 ubox
25 39 0.110021037 ubox
25 42 0.015086490 ubox
26 36 0.010854043 ubox
26 37 0.076505405 ubox
26 38 0.104443985 ubox
27 34 0.900815851 ubox
27 36 0.178472725 ubox
27 37 0.075382047 ubox
28 33 0.858221042 ubox
28 35 0.337960043 ubox
29 34 0.338093283 ubox
29 37 0.015639980 ubox
30 36 0.016641114 ubox
31 35 0.015927449 ubox
31 51 0.006620427 ubox
32 50 0.009864805 ubox
34 48 0.033922207 ubox
34 54 0.005596763 ubox
34 56 0.058977511 ubox
34 61 0.003638931 ubox
35 47 0.033970386 ubox
35 53 0.005835878 ubox
35 55 0.059384768 ubox
35 60 0.003668087 ubox
36 46 0.034018313 ubox
36 52 0.004353601 ubox
36 54 0.062764168 ubox
36 57 0.005741128 ubox
36 59 0.003798187 ubox
37 45 0.033942098 ubox
37 56 0.006182476 ubox
37 57 0.004223367 ubox
37 58 0.003838734 ubox
38 52 0.080102216 ubox
39 48 0.009728685 ubox
39 51 0.083225461 ubox
39 56 0.007870681 ubox
39 61 0.033676720 ubox
40 47 0.009727076 ubox
40 50 0.083553389 ubox
40 55 0.007874036 ubox
40 60 0.033326741 ubox
41 49 0.083574069 ubox
41 60 0.011885511 ubox
41 63 0.010677771 ubox
42 48 0.083572492 ubox
42 57 0.004445122 ubox
42 58 0.021890415 ubox
42 59 0.032913519 ubox
42 62 0.016697557 ubox
43 52 0.007800454 ubox
43 56 0.004450240 ubox
43 57 0.021894586 ubox
43 58 0.032920241 ubox
43 61 0.016701554 ubox
44 51 0.008337646 ubox
45 50 0.008359186 ubox
46 55 0.028369843 ubox
47 54 0.029401241 ubox
47 56 0.081049123 ubox
47 61 0.009509344 ubox
48 53 0.029601573 ubox
48 55 0.081200904 ubox
48 60 0.009542477 ubox
49 54 0.077916651 ubox
50 56 0.006141859 ubox
50 65 0.211332843 ubox
51 55 0.005870200 ubox
51 64 0.211970238 ubox
52 63 0.211947663 ubox
53 61 0.024458856 ubox
53 62 0.210885686 ubox
53 65 0.004029554 ubox
54 60 0.032971232 ubox
54 64 0.003873543 ubox
55 59 0.031574872 ubox
55 61 0.206067858 ubox
56 60 0.204593504 ubox
1 66 0.9500000 lbox
2 65 0.9500000 lbox
3 64 0.9500000 lbox
4 63 0.9500000 lbox
6 61 0.9500000 lbox
7 60 0.9500000 lbox
8 57 0.9500000 lbox
9 56 0.9500000 lbox
10 55 0.9500000 lbox
11 51 0.9500000 lbox
12 50 0.9500000 lbox
13 49 0.9500000 lbox
14 48 0.9500000 lbox
15 47 0.9500000 lbox
17 46 0.9500000 lbox
18 45 0.9500000 lbox
19 43 0.9500000 lbox
20 42 0.9500000 lbox
22 39 0.9500000 lbox
23 38 0.9500000 lbox
24 37 0.9500000 lbox
25 36 0.9500000 lbox
27 34 0.9500000 lbox
28 33 0.9500000 lbox
showpage
end
%%EOF
