%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:52:43 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ASPG)
} def

/sequence { (\
GGCCUCCUCCGCGCAGUCCCUGAGUCCCGCAGGCCCUGCGUCCCCGCUGCACACCCCCGUCCACUCCCGUGGUCCCCGGUCCGGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.291317597 ubox
1 8 0.045103135 ubox
1 9 0.055179659 ubox
1 10 0.651392443 ubox
1 27 0.003995837 ubox
1 35 0.033844066 ubox
1 42 0.018017906 ubox
1 43 0.216189393 ubox
1 44 0.106041848 ubox
1 45 0.202324178 ubox
1 48 0.077557055 ubox
1 81 0.030306955 ubox
1 82 0.029100162 ubox
2 6 0.287116693 ubox
2 7 0.053171212 ubox
2 8 0.045272876 ubox
2 9 0.645319878 ubox
2 12 0.036564344 ubox
2 26 0.004004789 ubox
2 34 0.034024188 ubox
2 41 0.011792412 ubox
2 42 0.217032717 ubox
2 43 0.106206267 ubox
2 44 0.201829788 ubox
2 47 0.082231807 ubox
2 50 0.092171978 ubox
2 80 0.030857465 ubox
2 81 0.028657712 ubox
2 85 0.103083866 ubox
3 11 0.037642123 ubox
3 33 0.034091775 ubox
3 40 0.010893956 ubox
3 46 0.082171655 ubox
3 49 0.092147159 ubox
3 79 0.040199457 ubox
3 84 0.104265381 ubox
4 24 0.004029345 ubox
4 32 0.034086514 ubox
4 78 0.040134966 ubox
4 79 0.003521942 ubox
4 83 0.104120561 ubox
5 23 0.004070160 ubox
5 31 0.033016414 ubox
6 22 0.004051340 ubox
6 79 0.022995982 ubox
6 84 0.009227360 ubox
7 78 0.022972222 ubox
7 83 0.009337759 ubox
9 72 0.004584761 ubox
9 78 0.003251277 ubox
9 79 0.041967436 ubox
9 84 0.015205446 ubox
10 40 0.004939892 ubox
10 46 0.013934061 ubox
10 71 0.004553894 ubox
10 78 0.041966236 ubox
10 83 0.015382813 ubox
11 25 0.029894624 ubox
11 30 0.013116185 ubox
11 39 0.004088297 ubox
11 41 0.958527031 ubox
11 45 0.022843281 ubox
11 47 0.003725552 ubox
11 70 0.003882815 ubox
11 77 0.030846327 ubox
11 82 0.011263638 ubox
12 24 0.030463818 ubox
12 29 0.013118915 ubox
12 38 0.003847047 ubox
12 40 0.997099305 ubox
12 46 0.003470154 ubox
12 69 0.003827348 ubox
13 28 0.013020035 ubox
13 39 0.999303456 ubox
13 50 0.011454542 ubox
14 22 0.032796145 ubox
14 38 0.999318338 ubox
14 49 0.011473950 ubox
15 21 0.032801687 ubox
15 37 0.999020932 ubox
15 48 0.011468335 ubox
16 20 0.032085917 ubox
16 34 0.004255507 ubox
16 36 0.998208318 ubox
16 47 0.011463337 ubox
17 23 0.008002879 ubox
17 46 0.011242444 ubox
18 22 0.007976759 ubox
18 33 0.023916431 ubox
19 32 0.017780293 ubox
19 33 0.998566733 ubox
20 32 0.999151615 ubox
21 29 0.011860821 ubox
21 31 0.998717678 ubox
22 28 0.023512082 ubox
22 30 0.996349736 ubox
22 42 0.010701849 ubox
23 41 0.010651565 ubox
24 30 0.041435596 ubox
25 29 0.046729276 ubox
28 40 0.012541697 ubox
29 39 0.012637193 ubox
30 38 0.012637749 ubox
31 37 0.012606539 ubox
32 36 0.012330241 ubox
37 51 0.008445010 ubox
38 47 0.017828093 ubox
38 50 0.009523533 ubox
39 46 0.017923262 ubox
39 49 0.009522051 ubox
40 45 0.018333107 ubox
40 47 0.008351585 ubox
40 48 0.006236083 ubox
40 50 0.003515030 ubox
41 46 0.007983201 ubox
41 49 0.003493530 ubox
42 84 0.021700530 ubox
43 72 0.004015885 ubox
43 83 0.021925828 ubox
43 84 0.014824852 ubox
44 71 0.003944003 ubox
44 72 0.018918081 ubox
44 79 0.016489828 ubox
44 83 0.014709279 ubox
44 84 0.057977441 ubox
45 59 0.011210679 ubox
45 69 0.004823262 ubox
45 71 0.019038894 ubox
45 78 0.016593565 ubox
45 83 0.058533182 ubox
46 58 0.011177292 ubox
46 60 0.011040117 ubox
46 68 0.004786847 ubox
46 70 0.019056502 ubox
46 73 0.004695219 ubox
46 77 0.016410283 ubox
46 80 0.030299150 ubox
46 82 0.057096743 ubox
46 85 0.972177533 ubox
47 59 0.011520941 ubox
47 69 0.019051587 ubox
47 72 0.005033118 ubox
47 79 0.034062693 ubox
47 84 0.979330184 ubox
48 59 0.006972005 ubox
48 63 0.016733034 ubox
48 71 0.004971017 ubox
48 78 0.034072955 ubox
48 83 0.978458182 ubox
49 58 0.010312778 ubox
49 60 0.025404039 ubox
49 62 0.016972739 ubox
49 70 0.004983455 ubox
49 73 0.007175250 ubox
49 77 0.033724137 ubox
49 80 0.011150299 ubox
49 82 0.975618196 ubox
49 85 0.081420075 ubox
50 59 0.026753713 ubox
50 69 0.004989135 ubox
50 71 0.003960310 ubox
50 72 0.007318506 ubox
50 79 0.010919221 ubox
50 84 0.082298089 ubox
51 60 0.029681547 ubox
51 70 0.004033551 ubox
51 80 0.167463763 ubox
52 59 0.031235426 ubox
52 69 0.004030933 ubox
52 71 0.009528557 ubox
52 79 0.159029498 ubox
53 60 0.016716659 ubox
53 70 0.009560490 ubox
53 73 0.025386880 ubox
53 80 0.961805370 ubox
54 59 0.017765277 ubox
54 69 0.009474337 ubox
54 72 0.025549237 ubox
54 79 0.973212853 ubox
54 84 0.089345150 ubox
55 71 0.025077038 ubox
55 72 0.015292721 ubox
55 78 0.971579204 ubox
55 79 0.072013874 ubox
55 83 0.089688120 ubox
55 84 0.030845615 ubox
56 71 0.015935758 ubox
56 72 0.024414111 ubox
56 78 0.079154144 ubox
56 79 0.031711154 ubox
56 83 0.031148847 ubox
57 71 0.024454818 ubox
57 72 0.005249315 ubox
57 78 0.032350297 ubox
57 79 0.119650309 ubox
57 84 0.008526210 ubox
58 69 0.037854162 ubox
58 71 0.005207267 ubox
58 78 0.121428607 ubox
58 83 0.008608894 ubox
59 68 0.037840700 ubox
59 70 0.004136549 ubox
59 73 0.107681070 ubox
59 77 0.119853160 ubox
59 82 0.008486500 ubox
60 72 0.004341823 ubox
61 71 0.003385537 ubox
61 72 0.998204557 ubox
61 79 0.004387463 ubox
62 71 0.998892588 ubox
62 78 0.004372711 ubox
63 70 0.998074197 ubox
63 73 0.007050200 ubox
64 69 0.995931126 ubox
64 72 0.007229743 ubox
65 71 0.006693738 ubox
66 72 0.004147360 ubox
67 71 0.004125170 ubox
71 77 0.003189896 ubox
72 76 0.003217404 ubox
75 84 0.005572593 ubox
76 83 0.005565804 ubox
76 84 0.016844330 ubox
77 83 0.017018042 ubox
78 82 0.015967318 ubox
1 10 0.9500000 lbox
2 9 0.9500000 lbox
11 41 0.9500000 lbox
12 40 0.9500000 lbox
13 39 0.9500000 lbox
14 38 0.9500000 lbox
15 37 0.9500000 lbox
16 36 0.9500000 lbox
19 33 0.9500000 lbox
20 32 0.9500000 lbox
21 31 0.9500000 lbox
22 30 0.9500000 lbox
46 85 0.9500000 lbox
47 84 0.9500000 lbox
48 83 0.9500000 lbox
49 82 0.9500000 lbox
53 80 0.9500000 lbox
54 79 0.9500000 lbox
55 78 0.9500000 lbox
61 72 0.9500000 lbox
62 71 0.9500000 lbox
63 70 0.9500000 lbox
64 69 0.9500000 lbox
showpage
end
%%EOF
