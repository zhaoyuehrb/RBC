%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:51:39 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CLPSL1)
} def

/sequence { (\
UUACAUGGUGUUCCCACAGCUGGGAGGACACCCACAUGGUCGGCGUGCAGGAUAUUUCGCUGGACCCUAGAAAAGCCACCACGACCUGUGGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 39 0.004492120 ubox
2 7 0.020183998 ubox
2 10 0.009218188 ubox
2 38 0.005946738 ubox
3 9 0.010624540 ubox
3 11 0.010978854 ubox
3 37 0.005947549 ubox
3 40 0.005221038 ubox
4 8 0.010873266 ubox
4 10 0.012968812 ubox
4 38 0.037733057 ubox
4 39 0.004763755 ubox
5 9 0.010526899 ubox
5 37 0.037833822 ubox
6 30 0.135215995 ubox
6 34 0.009579040 ubox
6 36 0.036935619 ubox
7 29 0.119806069 ubox
7 32 0.058396582 ubox
7 33 0.009087022 ubox
7 35 0.021185548 ubox
7 94 0.022270276 ubox
8 29 0.985301082 ubox
8 31 0.078347384 ubox
8 32 0.006686014 ubox
8 93 0.015707920 ubox
9 28 0.990930587 ubox
9 30 0.089206112 ubox
9 92 0.003538998 ubox
10 29 0.092345783 ubox
11 25 0.004336815 ubox
11 26 0.985280544 ubox
11 27 0.008183366 ubox
11 28 0.085419827 ubox
12 25 0.997814413 ubox
12 26 0.005469153 ubox
12 27 0.051161675 ubox
13 24 0.999491413 ubox
13 26 0.031079754 ubox
13 92 0.003472559 ubox
14 23 0.999600271 ubox
14 24 0.027667798 ubox
14 91 0.003549234 ubox
15 22 0.999362593 ubox
15 23 0.027352556 ubox
15 90 0.003550035 ubox
16 21 0.851424985 ubox
16 89 0.003549750 ubox
17 88 0.003550357 ubox
18 87 0.003538798 ubox
19 86 0.003476120 ubox
22 33 0.003510170 ubox
23 32 0.003511271 ubox
24 31 0.003497890 ubox
26 94 0.016254264 ubox
27 93 0.016596406 ubox
30 40 0.006469831 ubox
31 39 0.006903294 ubox
31 91 0.006680899 ubox
31 92 0.992240063 ubox
32 38 0.006868852 ubox
32 39 0.004913931 ubox
32 90 0.004766251 ubox
32 91 0.997908282 ubox
32 92 0.004255762 ubox
33 38 0.005730074 ubox
33 90 0.998801467 ubox
33 91 0.004282552 ubox
34 89 0.998618005 ubox
35 88 0.998752382 ubox
35 90 0.003756233 ubox
36 87 0.977261591 ubox
36 89 0.003821677 ubox
37 78 0.012857919 ubox
37 81 0.186307542 ubox
37 83 0.005302643 ubox
37 88 0.003667945 ubox
38 66 0.006922803 ubox
38 77 0.013451688 ubox
38 80 0.187256367 ubox
38 86 0.980627556 ubox
39 65 0.007008951 ubox
39 76 0.013454599 ubox
39 79 0.187265259 ubox
39 82 0.004747804 ubox
39 85 0.980902375 ubox
39 93 0.003263846 ubox
40 64 0.006500278 ubox
40 71 0.009505851 ubox
40 75 0.012113658 ubox
40 78 0.186237155 ubox
40 81 0.004924905 ubox
40 84 0.980693168 ubox
40 92 0.003185749 ubox
41 62 0.005459495 ubox
41 63 0.004878755 ubox
41 70 0.012646881 ubox
41 83 0.978147517 ubox
42 61 0.011770485 ubox
42 66 0.009687309 ubox
42 67 0.359046848 ubox
42 68 0.098083800 ubox
42 77 0.572462836 ubox
42 80 0.044108365 ubox
42 82 0.715767144 ubox
42 86 0.016678250 ubox
42 94 0.044794314 ubox
43 60 0.049973808 ubox
43 65 0.009681451 ubox
43 66 0.406181862 ubox
43 67 0.211833174 ubox
43 76 0.629207160 ubox
43 79 0.047998022 ubox
43 85 0.016696192 ubox
43 93 0.045124912 ubox
44 59 0.050197868 ubox
44 75 0.628896062 ubox
44 83 0.069987227 ubox
44 92 0.045124390 ubox
45 53 0.005017525 ubox
45 55 0.003450910 ubox
45 58 0.049791285 ubox
45 60 0.019420928 ubox
45 65 0.851604251 ubox
45 76 0.011292735 ubox
45 79 0.481303289 ubox
45 82 0.122767988 ubox
46 52 0.005785419 ubox
46 54 0.005266404 ubox
46 59 0.019481811 ubox
46 64 0.850695037 ubox
46 75 0.010209176 ubox
46 78 0.481266600 ubox
46 81 0.146052308 ubox
46 90 0.043449314 ubox
47 53 0.004989453 ubox
47 58 0.019414036 ubox
47 60 0.025630876 ubox
47 76 0.199247470 ubox
47 77 0.423646000 ubox
47 80 0.146376513 ubox
47 89 0.044950287 ubox
48 59 0.028182557 ubox
48 62 0.905040658 ubox
48 75 0.276206708 ubox
48 88 0.045046641 ubox
49 56 0.023078770 ubox
49 57 0.015565741 ubox
49 61 0.905986156 ubox
49 68 0.144477016 ubox
49 87 0.045037238 ubox
50 55 0.024140397 ubox
50 56 0.016189172 ubox
50 57 0.012397106 ubox
50 58 0.085215450 ubox
50 60 0.904696712 ubox
50 61 0.011430297 ubox
50 66 0.025542656 ubox
50 67 0.146206783 ubox
50 68 0.007389516 ubox
50 77 0.193837701 ubox
50 80 0.018705503 ubox
50 86 0.045047685 ubox
51 55 0.011345763 ubox
51 56 0.012690101 ubox
51 57 0.083289253 ubox
51 58 0.901172720 ubox
51 60 0.015385366 ubox
51 65 0.026691032 ubox
51 66 0.145733032 ubox
51 67 0.007628002 ubox
51 76 0.204970904 ubox
51 79 0.019115998 ubox
51 85 0.045032179 ubox
52 56 0.072242743 ubox
52 57 0.882098390 ubox
53 62 0.031255513 ubox
53 69 0.042906548 ubox
54 61 0.029531047 ubox
54 68 0.041355103 ubox
55 63 0.019204401 ubox
55 64 0.048768069 ubox
55 70 0.006323595 ubox
55 71 0.010517648 ubox
55 72 0.028577590 ubox
55 73 0.109551249 ubox
55 74 0.061218627 ubox
55 75 0.158962669 ubox
56 62 0.021592976 ubox
56 63 0.047915574 ubox
56 64 0.032641942 ubox
56 69 0.006926430 ubox
56 70 0.008581357 ubox
56 71 0.029200914 ubox
56 72 0.132428097 ubox
56 73 0.060096818 ubox
56 74 0.206673745 ubox
56 75 0.008252426 ubox
57 62 0.035268830 ubox
57 63 0.033665222 ubox
57 64 0.099185148 ubox
57 69 0.005437299 ubox
57 70 0.012672459 ubox
57 71 0.134350358 ubox
57 72 0.056205592 ubox
57 73 0.210830988 ubox
57 74 0.007310544 ubox
57 84 0.044281164 ubox
58 62 0.033032080 ubox
58 63 0.101562679 ubox
58 70 0.130537070 ubox
58 83 0.044547932 ubox
59 76 0.152677458 ubox
59 82 0.044506694 ubox
60 70 0.319317342 ubox
60 75 0.152828259 ubox
61 69 0.323020502 ubox
61 74 0.151843662 ubox
61 78 0.032401646 ubox
61 81 0.059026651 ubox
62 68 0.323788300 ubox
62 77 0.037725194 ubox
62 80 0.063384918 ubox
63 67 0.317278836 ubox
63 76 0.041402852 ubox
63 79 0.063330332 ubox
67 75 0.181856499 ubox
68 74 0.184532535 ubox
75 93 0.010922905 ubox
76 91 0.003986559 ubox
76 92 0.010791978 ubox
77 90 0.004405494 ubox
77 91 0.007803122 ubox
78 89 0.004725019 ubox
79 88 0.004697921 ubox
79 91 0.013470833 ubox
80 90 0.015394732 ubox
81 89 0.015436955 ubox
82 88 0.015437087 ubox
83 87 0.009534536 ubox
8 29 0.9500000 lbox
9 28 0.9500000 lbox
11 26 0.9500000 lbox
12 25 0.9500000 lbox
13 24 0.9500000 lbox
14 23 0.9500000 lbox
15 22 0.9500000 lbox
16 21 0.9500000 lbox
31 92 0.9500000 lbox
32 91 0.9500000 lbox
33 90 0.9500000 lbox
34 89 0.9500000 lbox
35 88 0.9500000 lbox
36 87 0.9500000 lbox
38 86 0.9500000 lbox
39 85 0.9500000 lbox
40 84 0.9500000 lbox
41 83 0.9500000 lbox
42 77 0.9500000 lbox
43 76 0.9500000 lbox
44 75 0.9500000 lbox
45 65 0.9500000 lbox
46 64 0.9500000 lbox
48 62 0.9500000 lbox
49 61 0.9500000 lbox
50 60 0.9500000 lbox
51 58 0.9500000 lbox
52 57 0.9500000 lbox
showpage
end
%%EOF
