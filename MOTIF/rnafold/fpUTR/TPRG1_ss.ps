%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:51:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUGGUGAAGUGAGAUUCAGACUGAGUGGGGUCACAGCACAGGGCACUGUCUUGCCUGGCUUUAUCUGAGCCAAUCACACCUCUCCUGGCCACUAUCUGUGGUCUAGCCCCCUUUGUGCAGAAAGAGAAAGAAGAGCCUUGAGGACCAGCCUAGUCAGGCUGAAGAA\
) } def
/len { sequence length } bind def

/coor [
[69.38044739 122.05443573]
[65.94668579 116.25812531]
[63.59835434 109.94359589]
[62.41030884 103.31211853]
[47.50462723 101.63265228]
[32.92492294 107.77616882]
[21.14398193 98.66251373]
[6.23829842 96.98304749]
[-8.34140396 103.12657166]
[-20.12234688 94.01291656]
[-35.02803040 92.33345032]
[-49.93371201 90.65398407]
[-64.51341248 96.79750824]
[-76.29435730 87.68385315]
[-91.20004272 86.00438690]
[-106.10572815 84.32492065]
[-121.06378174 83.20396423]
[-136.05329895 82.64309692]
[-151.04280090 82.08222961]
[-166.03231812 81.52136230]
[-181.02182007 80.96049500]
[-192.55451965 91.43115234]
[-207.74803162 90.64881897]
[-217.65911865 79.58962250]
[-232.64863586 79.02875519]
[-247.63815308 78.46788788]
[-262.62765503 77.90702057]
[-276.70748901 85.12290192]
[-289.13653564 76.91513062]
[-304.12606812 76.35426331]
[-319.11557007 75.79339600]
[-334.10507202 75.23252106]
[-341.67694092 83.11407471]
[-352.12704468 85.45597076]
[-361.92697144 81.71633148]
[-367.90383911 73.36579895]
[-382.86190796 72.24485016]
[-391.69564819 74.73154449]
[-398.08831787 70.96051788]
[-413.02279663 69.56006622]
[-427.95727539 68.15960693]
[-442.89178467 66.75915527]
[-457.56362915 74.08503723]
[-471.09289551 64.81729126]
[-469.56179810 48.48977280]
[-454.54544067 41.89883804]
[-441.49130249 51.82467270]
[-426.55682373 53.22512817]
[-411.62234497 54.62558365]
[-396.68786621 56.02603531]
[-381.74093628 57.28679276]
[-366.78289795 58.40774536]
[-350.06509399 48.73987579]
[-333.54421997 60.24301529]
[-318.55471802 60.80388260]
[-303.56518555 61.36474991]
[-288.57568359 61.92561722]
[-275.56799316 54.66961670]
[-262.06680298 62.91751099]
[-247.07728577 63.47837830]
[-232.08776855 64.03924561]
[-217.09825134 64.60011292]
[-206.38842773 54.31250000]
[-191.17893982 54.66777039]
[-180.46095276 65.97098541]
[-165.47145081 66.53185272]
[-150.48193359 67.09272003]
[-135.49243164 67.65358734]
[-120.50291443 68.21445465]
[-118.34384155 66.36508942]
[-115.30707550 65.27799225]
[-111.68608856 65.29752350]
[-107.89540863 66.65295410]
[-104.42625427 69.41923523]
[-89.52057648 71.09870148]
[-74.61489105 72.77816772]
[-61.10134506 66.51452637]
[-48.25424576 75.74829865]
[-33.34856415 77.42776489]
[-18.44288063 79.10723877]
[-4.92933178 72.84358978]
[7.91776514 82.07736969]
[22.82344818 83.75683594]
[36.33699799 77.49318695]
[49.18409348 86.72696686]
[64.08977509 88.40643311]
[82.59867859 61.54846191]
[118.54404449 57.16559219]
[125.05229950 43.65105820]
[131.56056213 30.13652611]
[138.06881714 16.62199211]
[144.57707214 3.10745978]
[151.08532715 -10.40707302]
[147.16514587 -25.96380043]
[156.99794006 -38.64038086]
[173.04083252 -38.71242523]
[182.98709106 -26.12466812]
[179.20678711 -10.53335953]
[164.59985352 -3.89881706]
[158.09159851 9.61571598]
[151.58334351 23.13024902]
[145.07508850 36.64478302]
[138.56683350 50.15931320]
[132.05857849 63.67384720]
[135.86914062 70.13368988]
[143.24745178 57.07381058]
[158.24679565 56.93378067]
[165.86764526 69.85363770]
[158.48905945 82.91336060]
[143.49028015 83.05338287]
[147.30084229 89.51322937]
[162.27723694 90.35428619]
[177.25364685 91.19534302]
[192.23004150 92.03639984]
[202.07077026 80.18454742]
[216.83078003 76.44351196]
[230.79823303 82.04479980]
[238.69462585 94.64579010]
[253.67102051 95.48684692]
[259.62316895 81.54598999]
[269.98669434 70.48374176]
[283.51013184 63.63593292]
[298.56045532 61.82946396]
[313.32028198 65.28247833]
[326.00729370 73.57801056]
[335.08944702 85.71432495]
[339.47006226 100.22591400]
[338.62011719 115.36042786]
[332.64227295 129.29029846]
[322.25839233 140.33341980]
[308.72235107 147.15629578]
[293.66873169 148.93502808]
[278.91528320 145.45481873]
[266.24359131 137.13592529]
[257.18380737 124.98288727]
[252.82997131 110.46324921]
[237.85356140 109.62219238]
[228.59596252 121.25984192]
[214.08920288 125.26204681]
[199.84085083 119.89193726]
[191.38899231 107.01280212]
[176.41258240 106.17174530]
[161.43618774 105.33068848]
[146.45977783 104.48963165]
[141.00421143 115.09925079]
[133.38832092 123.30195618]
[124.45330811 128.74005127]
[131.70909119 141.86840820]
[138.96487427 154.99674988]
[146.22065735 168.12510681]
[153.47644043 181.25346375]
[160.73222351 194.38180542]
[175.05010986 202.37745667]
[175.01403809 218.77656555]
[160.66111755 226.70913696]
[146.75640869 218.01483154]
[147.60386658 201.63758850]
[140.34808350 188.50924683]
[133.09230042 175.38088989]
[125.83652496 162.25253296]
[118.58074188 149.12419128]
[111.32495880 135.99583435]
[104.74362183 137.43598938]
[98.01109314 137.68287659]
[91.34195709 136.72863770]
[84.94879150 134.60369873]
[79.03537750 131.37577820]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 86]
[5 85]
[7 83]
[8 82]
[10 80]
[11 79]
[12 78]
[14 76]
[15 75]
[16 74]
[17 69]
[18 68]
[19 67]
[20 66]
[21 65]
[24 62]
[25 61]
[26 60]
[27 59]
[29 57]
[30 56]
[31 55]
[32 54]
[36 52]
[37 51]
[39 50]
[40 49]
[41 48]
[42 47]
[88 104]
[89 103]
[90 102]
[91 101]
[92 100]
[93 99]
[111 144]
[112 143]
[113 142]
[114 141]
[118 137]
[119 136]
[147 162]
[148 161]
[149 160]
[150 159]
[151 158]
[152 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
