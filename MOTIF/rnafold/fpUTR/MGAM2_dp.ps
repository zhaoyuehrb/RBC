%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:14:14 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MGAM2)
} def

/sequence { (\
AGUGCUCCCUAUGAAUUGCUGAGGGAGAGAUACAGCAUAGAAAAAAACAAGGUGAUGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 31 0.250112315 ubox
2 33 0.601401246 ubox
2 36 0.022013486 ubox
2 38 0.099641935 ubox
2 48 0.007763955 ubox
2 58 0.038936881 ubox
3 30 0.255708781 ubox
3 32 0.598203047 ubox
3 34 0.068429414 ubox
3 35 0.016761691 ubox
3 37 0.102265342 ubox
3 47 0.007308650 ubox
3 49 0.004633478 ubox
3 57 0.038416221 ubox
3 59 0.116260967 ubox
4 31 0.584327648 ubox
4 33 0.076237201 ubox
4 36 0.103109083 ubox
4 48 0.005137278 ubox
4 53 0.003656708 ubox
4 56 0.033228540 ubox
4 58 0.198364624 ubox
5 27 0.951056722 ubox
5 29 0.197021021 ubox
5 35 0.095422406 ubox
5 52 0.003653014 ubox
5 57 0.198315649 ubox
6 26 0.958219794 ubox
6 28 0.190096138 ubox
6 34 0.058794063 ubox
6 51 0.003347165 ubox
6 55 0.197965353 ubox
7 25 0.961377330 ubox
7 27 0.186048953 ubox
7 52 0.004285891 ubox
7 54 0.200708708 ubox
8 24 0.961798058 ubox
8 25 0.183476106 ubox
8 51 0.004331247 ubox
8 52 0.200527790 ubox
9 23 0.961741476 ubox
9 24 0.183316580 ubox
9 25 0.012757901 ubox
9 40 0.012369411 ubox
9 51 0.200504148 ubox
9 52 0.023463215 ubox
10 18 0.043946652 ubox
10 21 0.175788381 ubox
10 22 0.924603836 ubox
10 23 0.179370206 ubox
10 24 0.012449343 ubox
10 32 0.003758428 ubox
10 39 0.013925186 ubox
10 50 0.195750946 ubox
10 51 0.023062654 ubox
11 17 0.083425277 ubox
11 20 0.280782987 ubox
11 31 0.003807829 ubox
11 38 0.016081217 ubox
12 18 0.088534871 ubox
12 21 0.324113197 ubox
12 30 0.003746517 ubox
12 34 0.005214916 ubox
12 37 0.013722883 ubox
12 39 0.009819965 ubox
12 49 0.153102909 ubox
13 17 0.060382316 ubox
13 20 0.349187362 ubox
13 33 0.005768915 ubox
13 36 0.012508584 ubox
13 38 0.010136400 ubox
13 48 0.154646833 ubox
15 31 0.007131333 ubox
15 38 0.022617107 ubox
16 22 0.014202949 ubox
16 23 0.005137968 ubox
16 30 0.007790746 ubox
16 37 0.016875762 ubox
16 40 0.009884935 ubox
16 41 0.014019508 ubox
16 42 0.016697132 ubox
16 43 0.021302725 ubox
16 44 0.026214974 ubox
16 45 0.039920100 ubox
16 46 0.018394393 ubox
16 47 0.013202553 ubox
17 21 0.017426408 ubox
17 22 0.015978928 ubox
17 29 0.006711288 ubox
17 32 0.005338455 ubox
17 37 0.195530617 ubox
17 39 0.004573437 ubox
17 40 0.009093907 ubox
17 41 0.008898797 ubox
17 42 0.011363715 ubox
17 43 0.014079096 ubox
17 44 0.020542686 ubox
17 45 0.009692388 ubox
17 46 0.007529254 ubox
18 31 0.005611918 ubox
18 36 0.201988941 ubox
19 27 0.008988505 ubox
19 29 0.010349454 ubox
19 35 0.202022983 ubox
19 40 0.004027747 ubox
20 26 0.009007478 ubox
20 28 0.010322327 ubox
20 34 0.201917673 ubox
20 39 0.003965110 ubox
21 33 0.201308667 ubox
21 38 0.003360841 ubox
30 38 0.010241290 ubox
30 53 0.004827621 ubox
30 56 0.016116381 ubox
31 37 0.010244685 ubox
31 39 0.008164020 ubox
31 52 0.004822061 ubox
31 54 0.021331668 ubox
31 55 0.015215832 ubox
31 57 0.016602155 ubox
32 38 0.008282528 ubox
32 53 0.026484792 ubox
32 56 0.018660935 ubox
33 52 0.026910101 ubox
33 54 0.026907637 ubox
33 57 0.120949960 ubox
34 53 0.025533060 ubox
34 56 0.114273311 ubox
35 53 0.030554318 ubox
35 58 0.923503569 ubox
36 52 0.032911887 ubox
36 54 0.143966473 ubox
36 57 0.924597454 ubox
37 53 0.144853195 ubox
37 56 0.916242592 ubox
38 52 0.142902632 ubox
38 54 0.213780364 ubox
38 55 0.860881906 ubox
38 57 0.005735078 ubox
39 53 0.296444794 ubox
39 56 0.009950227 ubox
47 53 0.071152170 ubox
48 52 0.074965864 ubox
48 54 0.130871523 ubox
48 57 0.061750685 ubox
49 53 0.106214023 ubox
49 56 0.056726114 ubox
52 58 0.065392437 ubox
53 57 0.061219973 ubox
53 59 0.008464330 ubox
54 58 0.013872182 ubox
5 27 0.9500000 lbox
6 26 0.9500000 lbox
7 25 0.9500000 lbox
8 24 0.9500000 lbox
9 23 0.9500000 lbox
10 22 0.9500000 lbox
35 58 0.9500000 lbox
36 57 0.9500000 lbox
37 56 0.9500000 lbox
38 55 0.9500000 lbox
showpage
end
%%EOF
