%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:19:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAGAGCUUGGCGAUACAGAAAUUUCUGCUGGUGUUGGGGCGGGUGCGGGAACUGAAGACGGGCGAGUGCGAGCCGGGGGCGGGUGCUGGGGAAGGGUAAGCGGGAAGCGAGGGCGAGGGGUAGGGGCUGGGGAAGGGCGAGCGGGAGGCGCGGGCUCUCUCUAGCAGGGGGCUGCAGCC\
) } def
/len { sequence length } bind def

/coor [
[373.21105957 272.59609985]
[361.90762329 272.50436401]
[351.41232300 268.16970825]
[343.26501465 260.18646240]
[338.67654419 249.68730164]
[338.34902954 238.18254089]
[324.68493652 231.99441528]
[311.02087402 225.80627441]
[297.35678101 219.61814880]
[278.32485962 222.94503784]
[266.78396606 206.43869019]
[252.91334534 200.72851562]
[241.61332703 205.09257507]
[230.00074768 200.42747498]
[224.51882935 188.73275757]
[210.74942017 182.78269958]
[196.97999573 176.83265686]
[188.77073669 183.07211304]
[178.63011169 185.34489441]
[168.38475037 183.17262268]
[159.90901184 176.88381958]
[154.78202820 167.56632996]
[153.99374390 156.87951660]
[140.55267334 150.22088623]
[127.11159515 143.56224060]
[113.67052460 136.90359497]
[100.22944641 130.24494934]
[85.67012787 126.63577271]
[70.67520905 126.24529266]
[55.68029404 125.85480499]
[41.68338013 133.23023987]
[29.16184044 125.16423035]
[14.16692352 124.77375031]
[0.17000763 132.14916992]
[-12.35153103 124.08317566]
[-27.34644699 123.69268799]
[-41.34336472 131.06811523]
[-53.86490250 123.00212097]
[-68.85981750 122.61163330]
[-75.37593079 136.37608337]
[-86.93143463 146.29527283]
[-101.52426147 150.65063477]
[-116.62612915 148.68757629]
[-129.62052917 140.74621582]
[-138.25613403 128.20243835]
[-141.03672791 113.22951508]
[-137.48060608 98.42162323]
[-128.20384216 86.34429932]
[-114.81372833 79.09001923]
[-99.63015747 77.91563416]
[-85.28379059 83.02460480]
[-74.26021576 93.53177643]
[-68.46932983 107.61671448]
[-53.47441483 108.00720215]
[-40.55003738 100.60384369]
[-26.95596123 108.69777679]
[-11.96104527 109.08825684]
[0.96333331 101.68490601]
[14.55740833 109.77883148]
[29.55232430 110.16931915]
[42.47670364 102.76596069]
[56.07077789 110.85988617]
[71.06569672 111.25037384]
[86.06061554 111.64086151]
[83.62831116 101.07350922]
[87.62303162 92.15675354]
[80.84799194 78.77397156]
[74.07295227 65.39118958]
[67.29791260 52.00840378]
[60.52287674 38.62562180]
[45.77442551 33.61354446]
[39.09421539 19.94498634]
[43.96335602 5.91547966]
[37.18831635 -7.46730280]
[30.41328049 -20.85008430]
[17.86477470 -32.25058365]
[25.34596634 -47.46466064]
[42.03646851 -44.48751068]
[43.79606247 -27.62512207]
[50.57109833 -14.24234104]
[57.34613800 -0.85955846]
[71.53563690 3.52150607]
[78.59712982 16.99703789]
[73.90566254 31.85058403]
[80.68069458 45.23336792]
[87.45573425 58.61614990]
[94.23077393 71.99893188]
[101.00581360 85.38171387]
[116.19686127 97.38346863]
[106.88809204 116.80387878]
[120.32916260 123.46252441]
[133.77023315 130.12117004]
[147.21131897 136.77980042]
[160.65238953 143.43844604]
[179.28805542 135.99635315]
[197.13302612 144.48843384]
[202.93005371 163.06323242]
[216.69946289 169.01327515]
[230.46888733 174.96333313]
[248.69171143 172.40371704]
[258.62353516 186.85789490]
[272.49414062 192.56806946]
[282.30722046 187.79820251]
[292.90554810 189.20280457]
[300.80535889 196.07571411]
[303.54492188 205.95407104]
[317.20901489 212.14219666]
[330.87307739 218.33033752]
[344.53717041 224.51847839]
[360.72070312 214.35319519]
[379.61492920 215.95059204]
[393.63903809 228.48918152]
[397.27487183 246.79396057]
[411.24249268 252.26252747]
[425.21014404 257.73110962]
[436.24862671 249.45080566]
[449.83026123 247.72673035]
[462.38717651 252.90380859]
[470.67404175 263.52810669]
[472.60653687 276.75329590]
[486.47714233 282.46347046]
[500.34774780 288.17364502]
[513.32617188 277.94967651]
[529.59539795 275.67102051]
[544.70965576 281.86489868]
[554.58697510 294.75631714]
[556.61120605 310.77551270]
[570.57885742 316.24407959]
[584.54650879 321.71264648]
[598.51409912 327.18121338]
[612.48175049 332.64978027]
[626.44940186 338.11837769]
[640.41699219 343.58694458]
[654.38464355 349.05551147]
[663.54406738 349.27359009]
[668.54589844 354.74209595]
[682.41650391 360.45227051]
[696.28710938 366.16244507]
[710.15771484 371.87261963]
[724.59991455 366.03649902]
[738.58538818 372.02499390]
[744.06024170 385.82940674]
[757.93084717 391.53958130]
[771.80145264 397.24975586]
[787.10351562 392.43023682]
[800.33117676 401.50811768]
[801.33740234 417.51959229]
[789.35021973 428.18203735]
[773.56524658 425.31613159]
[766.09130859 411.12036133]
[752.22070312 405.41018677]
[738.35003662 399.70001221]
[724.74322510 405.64898682]
[710.59515381 400.05566406]
[704.44757080 385.74322510]
[690.57696533 380.03308105]
[676.70635986 374.32290649]
[662.83569336 368.61273193]
[648.91607666 363.02313232]
[634.94842529 357.55456543]
[620.98083496 352.08599854]
[607.01318359 346.61743164]
[593.04553223 341.14886475]
[579.07794189 335.68026733]
[565.11029053 330.21170044]
[551.14263916 324.74313354]
[541.04486084 333.95965576]
[527.89636230 337.93988037]
[514.25134277 335.85095215]
[502.78634644 328.04486084]
[495.77502441 316.00057983]
[494.63757324 302.04425049]
[480.76696777 296.33407593]
[466.89636230 290.62393188]
[453.21463013 299.67282104]
[436.66900635 298.78448486]
[423.77902222 288.11093140]
[419.74154663 271.69873047]
[405.77392578 266.23016357]
[391.80630493 260.76159668]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 109]
[7 108]
[8 107]
[9 106]
[11 102]
[12 101]
[15 99]
[16 98]
[17 97]
[23 94]
[24 93]
[25 92]
[26 91]
[27 90]
[28 64]
[29 63]
[30 62]
[32 60]
[33 59]
[35 57]
[36 56]
[38 54]
[39 53]
[66 88]
[67 87]
[68 86]
[69 85]
[70 84]
[73 81]
[74 80]
[75 79]
[113 180]
[114 179]
[115 178]
[120 174]
[121 173]
[122 172]
[127 166]
[128 165]
[129 164]
[130 163]
[131 162]
[132 161]
[133 160]
[134 159]
[136 158]
[137 157]
[138 156]
[139 155]
[142 152]
[143 151]
[144 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
