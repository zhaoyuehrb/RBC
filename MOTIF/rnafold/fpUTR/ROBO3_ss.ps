%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:23:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGGCACGAAGAGGCACCGACCGUACCCAGGCGCACCGGCAGGAGAGCGGCACCGUGGCUGCCGCAGCGCGCAGAGGCUGUGGAGGGGCUUACGGCUCCCAGCCCACGGGUCUCAGACCCAGGGGCUGGGCCCCCAGCCCCCAGUCCCGAUCCCAGCUGGGUCGAGCC\
) } def
/len { sequence length } bind def

/coor [
[77.57126617 269.70828247]
[79.90453339 284.72909546]
[76.30711365 299.49822998]
[67.32760620 311.76348877]
[54.33531189 319.65454102]
[39.31145859 321.96804810]
[24.54707909 318.35119629]
[12.29363155 309.35556030]
[4.41967869 296.35290527]
[2.12594151 281.32601929]
[5.76219797 266.56640625]
[14.77394485 254.32479858]
[27.78695679 246.46795654]
[42.81684494 244.19400024]
[46.38587189 229.62478638]
[49.95489883 215.05555725]
[43.94620514 204.52857971]
[46.82898331 192.34246826]
[57.58489990 185.17761230]
[61.42253876 170.67683411]
[65.26018524 156.17605591]
[69.09782410 141.67527771]
[72.93546295 127.17450714]
[69.00386810 141.65008545]
[57.61794281 151.41537476]
[42.71236420 153.09574890]
[29.43807983 146.11051941]
[22.38232231 132.87359619]
[23.98336220 117.95928192]
[33.68792725 106.52156830]
[48.14238739 102.51300049]
[62.35196304 107.31904602]
[48.17420578 102.42095947]
[33.99644852 97.52288055]
[19.81869316 92.62480164]
[5.73834944 99.28675842]
[-8.57013798 94.11743927]
[-14.83452511 80.65293121]
[-29.01228333 75.75485229]
[-43.19004059 70.85677338]
[-57.36779785 65.95868683]
[-71.54555511 61.06060791]
[-85.72331238 56.16252899]
[-95.23731995 63.36905289]
[-106.93190002 65.05251312]
[-117.86761475 60.90721512]
[-125.35240173 52.07793427]
[-127.60415649 40.84666061]
[-141.59124756 35.42803574]
[-155.57832336 30.00941086]
[-171.69157410 33.05821609]
[-182.18199158 20.45333099]
[-176.25793457 5.16158056]
[-160.01356506 2.91380763]
[-150.15969849 16.02232742]
[-136.17262268 21.44095230]
[-122.18553162 26.85957718]
[-105.95207214 18.46014023]
[-88.42080688 24.66246605]
[-80.82523346 41.98477173]
[-66.64747620 46.88285065]
[-52.46971512 51.78093338]
[-38.29195786 56.67901230]
[-24.11420250 61.57709503]
[-9.93644428 66.47517395]
[3.30337977 59.74890900]
[17.75141716 64.51428986]
[24.71677208 78.44704437]
[38.89453125 83.34512329]
[53.07228851 88.24320221]
[67.25004578 93.14128876]
[73.23368073 82.16718292]
[82.52581024 74.55773163]
[93.53137970 71.14878845]
[104.52360535 72.09445190]
[113.91293335 76.89311981]
[120.47690582 84.51204681]
[134.56172180 79.35281372]
[148.64656067 74.19358063]
[162.73138428 69.03434753]
[176.81620789 63.87511063]
[183.83128357 57.96224594]
[191.20925903 58.75330734]
[205.38700867 53.85522461]
[219.56477356 48.95714569]
[233.64959717 43.79791260]
[247.63667297 38.37928772]
[261.62374878 32.96066284]
[275.61083984 27.54203606]
[289.59793091 22.12341118]
[303.58502197 16.70478630]
[307.65313721 1.84691107]
[319.55093384 -7.65549707]
[334.58489990 -8.32208920]
[346.98019409 -0.10660122]
[360.96728516 -5.52522612]
[374.95437622 -10.94385147]
[388.94146729 -16.36247635]
[402.66336060 -22.42129135]
[416.09082031 -29.10736656]
[429.51824951 -35.79344177]
[442.94570923 -42.47951889]
[456.37316895 -49.16559219]
[469.80059814 -55.85166931]
[483.22805786 -62.53774261]
[496.65551758 -69.22381592]
[501.76535034 -83.93868256]
[515.47796631 -90.52803802]
[529.47485352 -85.56589508]
[542.90228271 -92.25197601]
[556.32971191 -98.93804932]
[569.75720215 -105.62412262]
[583.18463135 -112.31019592]
[594.66815186 -124.78276825]
[609.83221436 -117.20077515]
[606.74438477 -100.53039551]
[589.87072754 -98.88275146]
[576.44323730 -92.19667053]
[563.01580811 -85.51059723]
[549.58837891 -78.82452393]
[536.16088867 -72.13845062]
[531.68579102 -57.97833633]
[518.16369629 -51.00642776]
[503.34158325 -55.79636765]
[489.91412354 -49.11029434]
[476.48669434 -42.42421722]
[463.05923462 -35.73814392]
[449.63177490 -29.05206871]
[436.20434570 -22.36599350]
[422.77688599 -15.67991734]
[409.34942627 -8.99384212]
[422.41574097 -1.62689745]
[424.98992920 13.15056896]
[415.18429565 24.50174904]
[400.18960571 24.10244751]
[391.00198364 12.24548340]
[394.36007690 -2.37539268]
[380.37298584 3.04323220]
[366.38592529 8.46185684]
[352.39883423 13.88048267]
[348.77331543 28.30246925]
[337.21401978 37.93815613]
[322.01971436 38.93128967]
[309.00363159 30.69186974]
[295.01654053 36.11049652]
[281.02947998 41.52912140]
[267.04238892 46.94774628]
[253.05529785 52.36637115]
[239.06822205 57.78499603]
[236.34175110 61.74956512]
[231.07865906 64.02143097]
[224.46284485 63.13490295]
[210.28509521 68.03298187]
[196.10733032 72.93106079]
[181.97543335 77.95993805]
[167.89060974 83.11917114]
[153.80578613 88.27840424]
[139.72096252 93.43763733]
[125.63613892 98.59687042]
[117.18646240 124.05953217]
[87.43624115 131.01214600]
[83.59860229 145.51292419]
[79.76095581 160.01370239]
[75.92331696 174.51448059]
[72.08567810 189.01525879]
[77.32845306 206.64837646]
[64.52411652 218.62458801]
[60.95508957 233.19380188]
[57.38605881 247.76301575]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 169]
[15 168]
[16 167]
[19 165]
[20 164]
[21 163]
[22 162]
[23 161]
[32 71]
[33 70]
[34 69]
[35 68]
[38 65]
[39 64]
[40 63]
[41 62]
[42 61]
[43 60]
[48 57]
[49 56]
[50 55]
[77 159]
[78 158]
[79 157]
[80 156]
[81 155]
[83 154]
[84 153]
[85 152]
[86 149]
[87 148]
[88 147]
[89 146]
[90 145]
[91 144]
[95 140]
[96 139]
[97 138]
[98 137]
[99 131]
[100 130]
[101 129]
[102 128]
[103 127]
[104 126]
[105 125]
[106 124]
[109 121]
[110 120]
[111 119]
[112 118]
[113 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
