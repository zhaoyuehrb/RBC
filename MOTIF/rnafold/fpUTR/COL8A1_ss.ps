%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:07:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCACAGCCCUUCCCCGAUCCUCUCCGUGGGAGCCAGCGAGCCUCUCUCCCUGAUCUUACGUGCUCAAGGGAGCUCACACGUUCACCAACUCACCCUUGAAGUCAUCUCAAGAACAAAAGACAACUGAAAGAAGCUGUUGUGAAGGCAGAGCAGCAUCUGCUGAAGAGACAGAAACCAGCCCCAGAGGUGUCACAGGAAGGCACCAGCAAGGACAUUGGUCUUUGAUUUGAUUCAGCAGUCCUGUCAAGUAUAAA\
UGUG\
) } def
/len { sequence length } bind def

/coor [
[264.82171631 416.13043213]
[251.52566528 405.61132812]
[257.95297241 389.92294312]
[258.31542969 374.92730713]
[258.67788696 359.93170166]
[259.04034424 344.93606567]
[254.66439819 330.58856201]
[245.99488831 318.34765625]
[237.32537842 306.10675049]
[230.91459656 302.47589111]
[228.62612915 293.66516113]
[220.10514832 281.32040405]
[211.58418274 268.97564697]
[203.06320190 256.63088989]
[186.39407349 254.29801941]
[176.38467407 240.34761047]
[179.63932800 223.14476013]
[170.96981812 210.90385437]
[162.30030823 198.66296387]
[153.55700684 186.47465515]
[144.74023438 174.33940125]
[135.92344666 162.20414734]
[127.10667419 150.06889343]
[118.28989410 137.93363953]
[91.16133881 141.17474365]
[67.75299835 127.08527374]
[54.73251343 134.53289795]
[41.71203232 141.98051453]
[28.69154930 149.42813110]
[15.67106533 156.87574768]
[2.65058208 164.32336426]
[-10.36990070 171.77098083]
[-14.49484062 183.97059631]
[-25.46772194 189.91107178]
[-37.16230011 186.89466858]
[-50.27182007 194.18441772]
[-63.38134003 201.47416687]
[-71.68205261 214.94297791]
[-86.56547546 214.36605835]
[-99.67500305 221.65580750]
[-112.78452301 228.94557190]
[-118.55086517 243.91650391]
[-133.89360046 248.60479736]
[-147.04307556 239.41401672]
[-147.91215515 223.39451599]
[-135.83415222 212.83509827]
[-120.07427216 215.83604431]
[-106.96475220 208.54629517]
[-93.85523224 201.25654602]
[-86.49220276 188.30914307]
[-70.67108917 188.36463928]
[-57.56157303 181.07489014]
[-44.45204926 173.78514099]
[-36.23932648 158.26179504]
[-17.81752014 158.75050354]
[-4.79703617 151.30288696]
[8.22344685 143.85527039]
[21.24393082 136.40763855]
[34.26441193 128.96002197]
[47.28489685 121.51240540]
[60.30538177 114.06478882]
[57.25329590 107.50698090]
[55.31212616 100.32011414]
[54.60654449 92.69694519]
[55.22706985 84.85420227]
[41.54856873 78.69800568]
[27.87007332 72.54181671]
[14.19157505 66.38562775]
[0.51307726 60.22943115]
[-13.16542053 54.07324219]
[-26.84391785 47.91704941]
[-36.37828445 59.61141586]
[-48.61507034 68.43884277]
[-62.71994781 73.79747009]
[-77.73122406 75.32192230]
[-92.62541199 72.90826416]
[-106.38698578 66.72106934]
[-118.07767487 57.18218994]
[-126.90037537 44.94199753]
[-132.25355530 30.83504868]
[-133.77220154 15.82318401]
[-131.35279846 0.92993438]
[-125.16029358 -12.82925415]
[-115.61689758 -24.51625633]
[-103.37330627 -33.33423233]
[-89.26428986 -38.68196106]
[-74.25183868 -40.19482040]
[-59.35952377 -37.76966476]
[-45.60272980 -31.57184601]
[-33.91941452 -22.02393723]
[-25.10616302 -9.77693558]
[-19.76388550 4.33414030]
[-18.25682068 19.34717369]
[-20.68772697 34.23855209]
[-7.00922823 40.39474106]
[6.66926956 46.55093384]
[20.34776688 52.70712662]
[34.02626419 58.86331940]
[47.70476151 65.01950836]
[61.38325882 71.17570496]
[72.11724091 60.69803238]
[66.29337311 46.87477112]
[60.46950150 33.05151367]
[46.10709381 27.02167130]
[40.39777756 12.91995621]
[46.23482132 -0.73524553]
[40.41094971 -14.55850601]
[34.58707809 -28.38176727]
[19.33796692 -30.21483231]
[7.05801201 -39.43970490]
[1.05046189 -53.57493973]
[2.93131685 -68.81823730]
[12.19463634 -81.06921387]
[26.34863472 -87.03242493]
[41.58595657 -85.10379791]
[53.80783844 -75.80212402]
[59.72665787 -61.62950516]
[57.75027847 -46.39830399]
[48.41033936 -34.20563889]
[54.23421097 -20.38237762]
[60.05808258 -6.55911636]
[73.90696716 -1.19778442]
[80.01012421 12.73800373]
[74.29276276 27.22764015]
[80.11663055 41.05090332]
[85.94050598 54.87416077]
[91.47174835 53.47169876]
[97.13620758 52.74516678]
[102.85154724 52.70625305]
[108.53451538 53.35663223]
[113.68373871 39.26814270]
[118.83295441 25.17965317]
[116.30317688 9.56200981]
[127.93933868 0.26421314]
[133.08856201 -13.82427597]
[138.23777771 -27.91276550]
[143.38699341 -42.00125504]
[148.53622437 -56.08974075]
[153.68544006 -70.17823029]
[151.15565491 -85.79587555]
[162.79182434 -95.09367371]
[167.94104004 -109.18215942]
[164.58358765 -125.23394012]
[176.98484802 -135.96430969]
[192.38746643 -130.33477783]
[194.94654846 -114.13654327]
[182.02952576 -104.03293610]
[176.88031006 -89.94445038]
[179.77839661 -75.33451080]
[167.77392578 -65.02900696]
[162.62471008 -50.94052124]
[157.47549438 -36.85203171]
[152.32626343 -22.76354408]
[147.17704773 -8.67505455]
[142.02783203 5.41343451]
[144.92591858 20.02337456]
[132.92144775 30.32887459]
[127.77222443 44.41736221]
[122.62300110 58.50585175]
[134.48643494 67.68512726]
[146.83119202 59.16415787]
[159.17594910 50.64318848]
[171.52070618 42.12221527]
[168.67384338 27.16176033]
[172.16438293 12.33826637]
[181.38757324 0.21999316]
[194.74545288 -7.09349442]
[209.92367554 -8.33509064]
[224.29251099 -3.28968096]
[235.36250305 7.16858625]
[241.21568298 21.22775269]
[240.83795166 36.45198441]
[234.29476929 50.20359039]
[222.71977234 60.10002136]
[208.11840820 64.42665863]
[193.02043152 62.43389130]
[180.04167175 54.46697617]
[167.69691467 62.98794556]
[155.35215759 71.50891876]
[143.00740051 80.02989197]
[145.67098999 93.78833008]
[144.16197205 107.32437897]
[138.84823608 119.43602753]
[130.42514038 129.11686707]
[139.24192810 141.25212097]
[148.05870056 153.38737488]
[156.87548828 165.52262878]
[165.69226074 177.65788269]
[173.24395752 182.74096680]
[174.54121399 189.99345398]
[183.21072388 202.23434448]
[191.88023376 214.47525024]
[205.31161499 215.19493103]
[215.73014832 223.39141846]
[219.47940063 235.90359497]
[215.40797424 248.10992432]
[223.92893982 260.45468140]
[232.44990540 272.79943848]
[240.97088623 285.14419556]
[249.56628418 297.43725586]
[258.23577881 309.67816162]
[266.90530396 321.91903687]
[271.06271362 312.82574463]
[278.89926147 304.98577881]
[289.98611450 299.54620361]
[303.57727051 297.51055908]
[318.65496826 299.65740967]
[333.99484253 306.47225952]
[347.01531982 313.91989136]
[360.03579712 321.36749268]
[373.05627441 328.81512451]
[386.07675171 336.26272583]
[399.09725952 343.71035767]
[412.11773682 351.15795898]
[428.50564575 350.55087280]
[436.99499512 364.58166504]
[428.85269165 378.81665039]
[412.45483398 378.61209106]
[404.67010498 364.17846680]
[391.64962769 356.73083496]
[378.62915039 349.28320312]
[365.60867310 341.83560181]
[352.58816528 334.38796997]
[339.56768799 326.94036865]
[326.54721069 319.49273682]
[316.00488281 330.16323853]
[323.60928345 343.09277344]
[331.21368408 356.02230835]
[338.81808472 368.95187378]
[346.42248535 381.88140869]
[354.02688599 394.81094360]
[359.53964233 398.37054443]
[362.06997681 403.41619873]
[361.65447998 408.14608765]
[368.94421387 421.25561523]
[376.23397827 434.36511230]
[391.20489502 440.13146973]
[395.89321899 455.47421265]
[386.70242310 468.62368774]
[370.68292236 469.49276733]
[360.12350464 457.41476440]
[363.12445068 441.65487671]
[355.83468628 428.54534912]
[348.54495239 415.43582153]
[341.09732056 402.41534424]
[333.49291992 389.48580933]
[325.88851929 376.55627441]
[318.28414917 363.62670898]
[310.67974854 350.69717407]
[303.07534790 337.76763916]
[295.81549072 339.65036011]
[299.58093262 354.17004395]
[295.58209229 368.62719727]
[285.06124878 357.93548584]
[281.29580688 343.41580200]
[274.03594971 345.29852295]
[273.67349243 360.29415894]
[273.31103516 375.28976440]
[272.94857788 390.28536987]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 259]
[4 258]
[5 257]
[6 256]
[7 202]
[8 201]
[9 200]
[11 199]
[12 198]
[13 197]
[14 196]
[17 192]
[18 191]
[19 190]
[20 188]
[21 187]
[22 186]
[23 185]
[24 184]
[26 61]
[27 60]
[28 59]
[29 58]
[30 57]
[31 56]
[32 55]
[35 53]
[36 52]
[37 51]
[39 49]
[40 48]
[41 47]
[65 100]
[66 99]
[67 98]
[68 97]
[69 96]
[70 95]
[71 94]
[101 126]
[102 125]
[103 124]
[106 121]
[107 120]
[108 119]
[130 159]
[131 158]
[132 157]
[134 155]
[135 154]
[136 153]
[137 152]
[138 151]
[139 150]
[141 148]
[142 147]
[160 180]
[161 179]
[162 178]
[163 177]
[208 225]
[209 224]
[210 223]
[211 222]
[212 221]
[213 220]
[214 219]
[226 250]
[227 249]
[228 248]
[229 247]
[230 246]
[231 245]
[234 244]
[235 243]
[236 242]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
