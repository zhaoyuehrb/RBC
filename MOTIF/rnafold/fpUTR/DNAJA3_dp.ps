%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:14:00 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DNAJA3)
} def

/sequence { (\
CGCCUCUACGCGCGCCCGCCGUUCCCGCGAGGCCCACCUAGAGCCGGGCGGCGCAGGCGCAGAGUCCCCGGGCCAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.009816744 ubox
1 12 0.008855565 ubox
1 59 0.031104351 ubox
1 70 0.048721615 ubox
2 9 0.010289529 ubox
2 11 0.053865894 ubox
2 58 0.033127084 ubox
2 60 0.004015771 ubox
2 65 0.027696281 ubox
2 69 0.048908013 ubox
2 73 0.985959156 ubox
3 10 0.053829632 ubox
3 57 0.033130233 ubox
3 59 0.004017608 ubox
3 64 0.020804310 ubox
3 71 0.036673061 ubox
3 72 0.987701910 ubox
4 43 0.005672682 ubox
4 56 0.033116438 ubox
4 62 0.005539493 ubox
4 64 0.133944991 ubox
4 70 0.040538233 ubox
4 71 0.986314196 ubox
4 72 0.015864882 ubox
5 42 0.005827754 ubox
5 55 0.032705774 ubox
5 57 0.003703589 ubox
5 61 0.005570412 ubox
5 63 0.159448823 ubox
5 70 0.946031470 ubox
5 71 0.019290230 ubox
5 72 0.005462158 ubox
6 41 0.005842613 ubox
6 56 0.004387235 ubox
6 62 0.171721395 ubox
6 64 0.298902452 ubox
6 70 0.126484115 ubox
6 71 0.009256619 ubox
7 40 0.005823724 ubox
7 55 0.004593934 ubox
7 61 0.167223324 ubox
7 63 0.296989896 ubox
7 70 0.013186276 ubox
8 39 0.005585085 ubox
8 65 0.737432284 ubox
9 53 0.028397325 ubox
9 59 0.026548542 ubox
9 64 0.756876298 ubox
9 70 0.015764904 ubox
10 52 0.028472561 ubox
10 54 0.018439255 ubox
10 58 0.026575997 ubox
10 60 0.249711123 ubox
10 65 0.493594777 ubox
10 69 0.017343974 ubox
10 73 0.004296733 ubox
11 51 0.028451633 ubox
11 53 0.018448364 ubox
11 57 0.026521305 ubox
11 59 0.249925312 ubox
11 64 0.502592222 ubox
11 72 0.004299388 ubox
12 52 0.018421170 ubox
12 54 0.017443698 ubox
12 58 0.249605299 ubox
12 60 0.965985075 ubox
13 50 0.031217872 ubox
13 51 0.013048965 ubox
13 53 0.017518703 ubox
13 57 0.249479019 ubox
13 59 0.967199223 ubox
14 33 0.006027616 ubox
14 49 0.033908125 ubox
14 52 0.017512439 ubox
14 54 0.025440417 ubox
14 58 0.967314795 ubox
14 73 0.005764273 ubox
15 32 0.006037099 ubox
15 48 0.033924852 ubox
15 51 0.015147569 ubox
15 53 0.023948871 ubox
15 57 0.967326164 ubox
15 72 0.005783358 ubox
16 31 0.006040681 ubox
16 47 0.033924566 ubox
16 50 0.012326223 ubox
16 51 0.016629885 ubox
16 56 0.962441701 ubox
16 57 0.005607684 ubox
16 71 0.005783163 ubox
17 29 0.007703956 ubox
17 46 0.033915358 ubox
17 50 0.018812495 ubox
17 53 0.976807525 ubox
17 56 0.007117872 ubox
17 59 0.003764321 ubox
17 70 0.005721791 ubox
18 28 0.008013959 ubox
18 44 0.005368684 ubox
18 45 0.032463785 ubox
18 49 0.020758293 ubox
18 52 0.997920975 ubox
18 54 0.047411948 ubox
18 58 0.004241470 ubox
18 69 0.004006943 ubox
19 27 0.007459378 ubox
19 43 0.007573850 ubox
19 47 0.007853504 ubox
19 48 0.020315996 ubox
19 51 0.997971534 ubox
19 53 0.035990648 ubox
19 57 0.004290737 ubox
20 27 0.003235668 ubox
20 29 0.009856833 ubox
20 46 0.008615324 ubox
20 47 0.019246905 ubox
20 50 0.997965263 ubox
20 53 0.031379428 ubox
20 56 0.004291318 ubox
21 26 0.004395636 ubox
21 28 0.010429352 ubox
21 44 0.035366254 ubox
21 45 0.007349465 ubox
21 49 0.991535483 ubox
21 52 0.043647371 ubox
21 54 0.005704861 ubox
22 27 0.009850379 ubox
22 43 0.036009928 ubox
22 48 0.646298454 ubox
22 51 0.038347130 ubox
22 53 0.005719223 ubox
23 30 0.004379897 ubox
23 42 0.036024157 ubox
23 46 0.003620527 ubox
23 47 0.308884532 ubox
23 48 0.537270872 ubox
23 50 0.035186387 ubox
24 29 0.004598211 ubox
24 41 0.035858503 ubox
24 46 0.301550007 ubox
24 47 0.762423028 ubox
24 48 0.531874346 ubox
25 32 0.021277429 ubox
25 46 0.763871891 ubox
25 47 0.564590411 ubox
25 48 0.008623750 ubox
25 51 0.027363715 ubox
26 31 0.021378757 ubox
26 46 0.565614344 ubox
26 47 0.009002411 ubox
26 50 0.028413803 ubox
27 44 0.887808412 ubox
27 45 0.434040252 ubox
27 49 0.028668143 ubox
27 54 0.003924081 ubox
28 43 0.956461180 ubox
28 46 0.007209089 ubox
28 48 0.028683582 ubox
28 53 0.003931262 ubox
29 45 0.006765502 ubox
29 52 0.003935211 ubox
30 39 0.933632854 ubox
31 38 0.984734182 ubox
31 39 0.079122093 ubox
31 45 0.089273645 ubox
32 37 0.978798435 ubox
32 38 0.081256205 ubox
32 44 0.093320628 ubox
32 49 0.008226629 ubox
33 43 0.093167462 ubox
33 48 0.008829184 ubox
34 47 0.008904449 ubox
35 46 0.008899157 ubox
44 71 0.005901432 ubox
45 70 0.006039531 ubox
46 69 0.006197390 ubox
47 68 0.006196286 ubox
48 67 0.006191210 ubox
50 66 0.006131938 ubox
51 65 0.006109520 ubox
52 64 0.006111304 ubox
53 60 0.005162801 ubox
54 59 0.005159688 ubox
56 66 0.006283624 ubox
57 65 0.006434839 ubox
58 64 0.006930082 ubox
59 73 0.003520546 ubox
60 72 0.003583138 ubox
64 73 0.062035023 ubox
65 71 0.007326819 ubox
65 72 0.061509534 ubox
66 70 0.011359665 ubox
66 71 0.061428085 ubox
66 72 0.035967060 ubox
67 71 0.036164103 ubox
2 73 0.9500000 lbox
3 72 0.9500000 lbox
4 71 0.9500000 lbox
5 70 0.9500000 lbox
8 65 0.9500000 lbox
9 64 0.9500000 lbox
12 60 0.9500000 lbox
13 59 0.9500000 lbox
14 58 0.9500000 lbox
15 57 0.9500000 lbox
16 56 0.9500000 lbox
17 53 0.9500000 lbox
18 52 0.9500000 lbox
19 51 0.9500000 lbox
20 50 0.9500000 lbox
21 49 0.9500000 lbox
22 48 0.9500000 lbox
24 47 0.9500000 lbox
25 46 0.9500000 lbox
27 44 0.9500000 lbox
28 43 0.9500000 lbox
30 39 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
showpage
end
%%EOF
