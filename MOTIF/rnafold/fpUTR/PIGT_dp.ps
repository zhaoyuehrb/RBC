%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:57:39 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PIGT)
} def

/sequence { (\
AGCGGAAGUCACUUCUCACACGCCUUUCUUAUUGGAUACCGGCUUUUCAUGGGGCCGAGCGCCGCUGGGUAGGCGGAAGUAGCCGCAGGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 9 0.011083420 ubox
2 86 0.998107849 ubox
2 90 0.023661804 ubox
3 8 0.011486871 ubox
3 85 0.999137596 ubox
3 89 0.023828485 ubox
4 16 0.017206040 ubox
4 17 0.006529871 ubox
4 84 0.999048824 ubox
5 15 0.021906427 ubox
5 83 0.983673239 ubox
6 14 0.023993155 ubox
7 13 0.024382454 ubox
7 16 0.015205294 ubox
8 12 0.023917226 ubox
8 15 0.016161844 ubox
8 19 0.012319421 ubox
8 80 0.122586673 ubox
8 83 0.174869445 ubox
9 18 0.012168699 ubox
9 77 0.015872424 ubox
9 79 0.007975527 ubox
9 82 0.278439707 ubox
10 76 0.015992566 ubox
11 80 0.965520552 ubox
12 76 0.005645884 ubox
12 79 0.997651979 ubox
12 82 0.037165703 ubox
13 77 0.005930034 ubox
13 78 0.997206631 ubox
13 81 0.035080679 ubox
13 82 0.005573973 ubox
14 76 0.007515416 ubox
14 77 0.996388829 ubox
14 78 0.005149316 ubox
14 81 0.005627827 ubox
15 75 0.006080023 ubox
15 76 0.995986215 ubox
15 79 0.039170347 ubox
15 82 0.018500111 ubox
16 75 0.457661349 ubox
16 76 0.019085831 ubox
16 77 0.041231388 ubox
16 78 0.037208078 ubox
16 81 0.018175334 ubox
17 75 0.115851825 ubox
17 76 0.046505117 ubox
18 80 0.018126812 ubox
19 79 0.018479584 ubox
21 75 0.879845757 ubox
22 60 0.003314340 ubox
22 70 0.003869322 ubox
22 74 0.999755979 ubox
22 90 0.006849215 ubox
23 35 0.009780691 ubox
23 59 0.003270246 ubox
23 69 0.003943866 ubox
23 73 0.999755293 ubox
23 89 0.006900333 ubox
24 34 0.009812239 ubox
24 35 0.003593766 ubox
24 68 0.003940453 ubox
24 72 0.999595650 ubox
24 73 0.012247508 ubox
24 88 0.006899529 ubox
25 34 0.003627697 ubox
25 67 0.003673896 ubox
25 71 0.983285240 ubox
25 72 0.017087957 ubox
25 87 0.006438087 ubox
26 36 0.025767457 ubox
26 69 0.065951646 ubox
26 71 0.090235365 ubox
27 35 0.027753408 ubox
27 36 0.042915052 ubox
27 68 0.070487008 ubox
27 69 0.429907465 ubox
27 71 0.020720619 ubox
28 34 0.028640001 ubox
28 35 0.045922740 ubox
28 53 0.005829162 ubox
28 67 0.070694907 ubox
28 68 0.476343558 ubox
28 69 0.870562062 ubox
29 34 0.044750810 ubox
29 52 0.005837790 ubox
29 67 0.440011073 ubox
29 68 0.870856522 ubox
29 69 0.007574679 ubox
30 38 0.004370881 ubox
30 51 0.005830578 ubox
30 67 0.881705476 ubox
30 68 0.008691553 ubox
31 37 0.004631859 ubox
31 50 0.005722311 ubox
31 66 0.884237001 ubox
32 36 0.004139627 ubox
32 49 0.004496278 ubox
33 49 0.003845594 ubox
33 61 0.005226751 ubox
33 64 0.942900805 ubox
34 40 0.005505609 ubox
34 48 0.005183043 ubox
34 60 0.006025904 ubox
34 63 0.997445868 ubox
34 66 0.004262267 ubox
35 39 0.005675943 ubox
35 47 0.005135338 ubox
35 62 0.997148053 ubox
35 65 0.004361296 ubox
36 46 0.005046587 ubox
38 70 0.003438440 ubox
39 52 0.008064325 ubox
39 53 0.003254054 ubox
39 68 0.010303354 ubox
39 69 0.003191415 ubox
40 51 0.008087863 ubox
40 52 0.003238685 ubox
40 57 0.992547188 ubox
40 67 0.010425479 ubox
41 50 0.007894355 ubox
41 56 0.999831633 ubox
41 66 0.010498938 ubox
42 55 0.999873123 ubox
42 65 0.010533540 ubox
43 52 0.003297322 ubox
43 53 0.026094698 ubox
43 54 0.999515267 ubox
43 64 0.010444703 ubox
44 51 0.006702640 ubox
44 52 0.036662065 ubox
44 53 0.997093746 ubox
45 51 0.043384118 ubox
45 52 0.964382787 ubox
45 53 0.022291965 ubox
46 51 0.885254815 ubox
46 52 0.029840310 ubox
46 53 0.005350820 ubox
47 51 0.027815941 ubox
47 52 0.011569542 ubox
47 53 0.007062983 ubox
48 52 0.013116034 ubox
48 53 0.005846572 ubox
51 63 0.010311054 ubox
52 62 0.010316047 ubox
54 60 0.010382282 ubox
54 70 0.010715835 ubox
55 59 0.010307925 ubox
55 69 0.011011383 ubox
56 68 0.011022931 ubox
58 66 0.024774053 ubox
59 65 0.025473281 ubox
59 70 0.008196963 ubox
60 64 0.025291500 ubox
60 69 0.008358622 ubox
60 75 0.013552147 ubox
61 70 0.051452920 ubox
61 74 0.014960283 ubox
62 68 0.007541561 ubox
62 69 0.053064845 ubox
62 73 0.014966348 ubox
62 76 0.004424724 ubox
63 67 0.007508613 ubox
63 68 0.053062757 ubox
63 72 0.014965238 ubox
63 75 0.004975907 ubox
64 74 0.005138001 ubox
65 73 0.005135742 ubox
66 72 0.005073225 ubox
73 86 0.006167737 ubox
74 85 0.006184335 ubox
75 84 0.006592813 ubox
76 83 0.006809608 ubox
82 90 0.026357843 ubox
83 89 0.026589946 ubox
84 88 0.026406567 ubox
2 86 0.9500000 lbox
3 85 0.9500000 lbox
4 84 0.9500000 lbox
5 83 0.9500000 lbox
11 80 0.9500000 lbox
12 79 0.9500000 lbox
13 78 0.9500000 lbox
14 77 0.9500000 lbox
15 76 0.9500000 lbox
21 75 0.9500000 lbox
22 74 0.9500000 lbox
23 73 0.9500000 lbox
24 72 0.9500000 lbox
25 71 0.9500000 lbox
28 69 0.9500000 lbox
29 68 0.9500000 lbox
30 67 0.9500000 lbox
31 66 0.9500000 lbox
33 64 0.9500000 lbox
34 63 0.9500000 lbox
35 62 0.9500000 lbox
40 57 0.9500000 lbox
41 56 0.9500000 lbox
42 55 0.9500000 lbox
43 54 0.9500000 lbox
44 53 0.9500000 lbox
45 52 0.9500000 lbox
46 51 0.9500000 lbox
showpage
end
%%EOF
