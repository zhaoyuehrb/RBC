%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:17:51 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (HCN2)
} def

/sequence { (\
GGCCGGCGGCGGCGGCGGCGGCUCCGCUCCGCACUGCCCGGCGCCGCCUCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 48 0.092037940 ubox
1 49 0.006303156 ubox
1 50 0.026654448 ubox
1 53 0.846945399 ubox
2 10 0.025475138 ubox
2 13 0.017128380 ubox
2 42 0.011443813 ubox
2 47 0.092195604 ubox
2 48 0.008270606 ubox
2 49 0.022026253 ubox
2 52 0.857017196 ubox
3 9 0.025497375 ubox
3 12 0.017146321 ubox
3 41 0.011483728 ubox
3 46 0.065206289 ubox
3 51 0.851532437 ubox
4 8 0.025312359 ubox
4 11 0.017152001 ubox
4 40 0.011516839 ubox
4 46 0.072074547 ubox
4 51 0.088805528 ubox
5 10 0.017090392 ubox
5 38 0.006851277 ubox
5 39 0.009444236 ubox
5 45 0.097209782 ubox
5 48 0.849658447 ubox
5 49 0.034249840 ubox
5 50 0.119192687 ubox
5 53 0.495633685 ubox
6 37 0.009511354 ubox
6 38 0.006697503 ubox
6 44 0.097234689 ubox
6 47 0.851410774 ubox
6 48 0.025230066 ubox
6 49 0.116024035 ubox
6 52 0.499268041 ubox
7 36 0.011571151 ubox
7 43 0.097233027 ubox
7 46 0.851776446 ubox
7 51 0.499265832 ubox
8 35 0.011467578 ubox
8 38 0.003741159 ubox
8 42 0.097132096 ubox
8 45 0.851774172 ubox
8 48 0.126281709 ubox
8 50 0.497582911 ubox
8 53 0.012024003 ubox
9 34 0.011283116 ubox
9 37 0.004378832 ubox
9 44 0.851788552 ubox
9 47 0.127813869 ubox
9 48 0.006291340 ubox
9 49 0.489193423 ubox
9 52 0.012112410 ubox
10 36 0.004563263 ubox
10 40 0.096955945 ubox
10 43 0.851771513 ubox
10 46 0.127977748 ubox
10 51 0.012086160 ubox
11 35 0.004308490 ubox
11 38 0.069007293 ubox
11 39 0.079768154 ubox
11 42 0.850404109 ubox
11 45 0.127979051 ubox
11 48 0.497351217 ubox
11 50 0.008576784 ubox
11 53 0.023702861 ubox
12 32 0.022844736 ubox
12 34 0.003769595 ubox
12 37 0.090624182 ubox
12 38 0.056996626 ubox
12 42 0.018395582 ubox
12 44 0.127981336 ubox
12 47 0.497536566 ubox
12 49 0.007318265 ubox
12 52 0.023880083 ubox
13 31 0.023408221 ubox
13 36 0.106155680 ubox
13 40 0.848413121 ubox
13 41 0.025130616 ubox
13 43 0.127979065 ubox
13 46 0.497532867 ubox
13 51 0.023882089 ubox
14 28 0.003952366 ubox
14 30 0.023502034 ubox
14 35 0.101773222 ubox
14 38 0.480935498 ubox
14 39 0.700996313 ubox
14 42 0.127826438 ubox
14 45 0.497531445 ubox
14 48 0.009024726 ubox
14 50 0.023876107 ubox
14 53 0.016202249 ubox
15 27 0.005902882 ubox
15 29 0.023465406 ubox
15 32 0.075311076 ubox
15 34 0.092949830 ubox
15 37 0.678155642 ubox
15 38 0.506860486 ubox
15 44 0.497539995 ubox
15 47 0.009054593 ubox
15 49 0.023482817 ubox
15 52 0.016320961 ubox
16 26 0.006715665 ubox
16 31 0.092908725 ubox
16 36 0.829309804 ubox
16 40 0.127559410 ubox
16 41 0.003887531 ubox
16 43 0.497532298 ubox
16 46 0.009057389 ubox
16 51 0.016264686 ubox
17 25 0.006981012 ubox
17 28 0.052574312 ubox
17 29 0.011242876 ubox
17 30 0.093459932 ubox
17 35 0.746060955 ubox
17 38 0.089522487 ubox
17 39 0.107520336 ubox
17 42 0.497324551 ubox
17 45 0.009057684 ubox
17 48 0.027977735 ubox
17 50 0.007592976 ubox
18 24 0.006931192 ubox
18 27 0.061788559 ubox
18 29 0.092162687 ubox
18 32 0.636752754 ubox
18 34 0.555256109 ubox
18 37 0.125852013 ubox
18 38 0.076691657 ubox
18 42 0.009314254 ubox
18 44 0.009057872 ubox
18 47 0.028860420 ubox
19 26 0.064670453 ubox
19 31 0.688873999 ubox
19 36 0.143288742 ubox
19 40 0.496645733 ubox
19 41 0.012596502 ubox
19 43 0.009043923 ubox
19 46 0.028958376 ubox
20 25 0.063898227 ubox
20 28 0.106189197 ubox
20 29 0.030696584 ubox
20 30 0.688944102 ubox
20 35 0.138342803 ubox
20 38 0.241494163 ubox
20 39 0.435967230 ubox
20 42 0.006568715 ubox
20 45 0.028958991 ubox
21 27 0.139755808 ubox
21 28 0.014466004 ubox
21 29 0.679698593 ubox
21 32 0.490387668 ubox
21 34 0.128658070 ubox
21 37 0.340503622 ubox
21 38 0.365063939 ubox
21 42 0.006192946 ubox
21 44 0.028959235 ubox
22 26 0.158252596 ubox
22 31 0.491036401 ubox
22 36 0.415258892 ubox
22 41 0.008711361 ubox
22 43 0.028915759 ubox
23 40 0.008473984 ubox
24 41 0.028721286 ubox
25 31 0.106597695 ubox
25 36 0.035709790 ubox
25 40 0.028656654 ubox
26 30 0.101284964 ubox
26 32 0.400935904 ubox
26 35 0.031817391 ubox
26 37 0.259769397 ubox
26 39 0.019971086 ubox
26 42 0.003886945 ubox
27 31 0.398520442 ubox
27 36 0.260053561 ubox
27 41 0.003884071 ubox
28 40 0.003765163 ubox
30 36 0.007771579 ubox
31 35 0.005241746 ubox
31 37 0.026397143 ubox
32 36 0.026261888 ubox
34 41 0.007680103 ubox
35 40 0.007229664 ubox
36 42 0.004095095 ubox
37 41 0.004240485 ubox
43 52 0.008315000 ubox
44 51 0.008238207 ubox
46 52 0.003551387 ubox
47 51 0.003534982 ubox
1 53 0.9500000 lbox
2 52 0.9500000 lbox
3 51 0.9500000 lbox
5 48 0.9500000 lbox
6 47 0.9500000 lbox
7 46 0.9500000 lbox
8 45 0.9500000 lbox
9 44 0.9500000 lbox
10 43 0.9500000 lbox
11 42 0.9500000 lbox
13 40 0.9500000 lbox
14 39 0.9500000 lbox
15 38 0.9500000 lbox
16 36 0.9500000 lbox
17 35 0.9500000 lbox
18 34 0.9500000 lbox
21 32 0.9500000 lbox
22 31 0.9500000 lbox
showpage
end
%%EOF
