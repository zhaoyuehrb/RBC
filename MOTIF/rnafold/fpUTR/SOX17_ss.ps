%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:58:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGUGUCACUAGGCCGGCUGGGGGCCCUGGGUACGCUGUAGACCAGACCGCGACAGGCCAGAACACGGGCGGCGGCUUCGGGCCGGGAGACCCGCGCAGCCCUCGGGGCAUCUCAGUGCCUCACUCCCCACCCCCUCCCCCGGGUCGGGGGAGGCGGCGCGUCCGGCGGAGGGUUGAGGGGAGCGGGGCAGGCCUGGAGCGCC\
) } def
/len { sequence length } bind def

/coor [
[91.59629059 314.15701294]
[77.39547729 306.69265747]
[74.51891327 290.90960693]
[85.17324829 278.91522217]
[85.63292694 263.92227173]
[86.09259796 248.92932129]
[86.55226898 233.93637085]
[78.49468994 224.91006470]
[78.75785828 212.41242981]
[87.74610901 203.15747070]
[88.43547821 188.17330933]
[89.12485504 173.18916321]
[89.81423187 158.20501709]
[90.50360870 143.22087097]
[91.19298553 128.23670959]
[91.88235474 113.25256348]
[82.75139618 98.30594635]
[93.37515259 82.06220245]
[80.30882263 74.69530487]
[67.24250031 67.32840729]
[54.17617416 59.96151733]
[41.10984802 52.59462357]
[28.04352188 45.22772980]
[14.97719574 37.86083603]
[1.85480595 30.59427643]
[-11.32287788 23.42848015]
[-24.50056076 16.26268196]
[-37.67824554 9.09688473]
[-50.85593033 1.93108749]
[-64.03361511 -5.23470974]
[-77.21129608 -12.40050697]
[-90.38897705 -19.56630516]
[-100.63022614 -15.88444901]
[-110.99317932 -18.39759827]
[-118.11051941 -26.04053879]
[-119.80699158 -36.12289047]
[-132.75889587 -43.68915176]
[-145.71078491 -51.25541306]
[-158.66268921 -58.82167053]
[-152.71185303 -45.05259323]
[-154.34182739 -30.14141846]
[-163.12684631 -17.98315239]
[-176.77214050 -11.75370693]
[-191.71336365 -13.08030128]
[-204.04765320 -21.61640930]
[-210.55313110 -35.13228226]
[-209.53047180 -50.09737778]
[-201.24679565 -62.60260773]
[-187.86593628 -69.38143158]
[-172.88581848 -68.66396332]
[-184.53094482 -78.11865234]
[-196.17607117 -87.57333374]
[-207.82119751 -97.02802277]
[-213.16680908 -91.64776611]
[-221.28529358 -88.45285797]
[-231.18229675 -88.66986847]
[-241.37384033 -93.06267548]
[-253.70854187 -101.59819794]
[-266.04324341 -110.13371277]
[-278.37796021 -118.66922760]
[-294.12881470 -120.15951538]
[-300.19183350 -133.76426697]
[-312.52651978 -142.29977417]
[-324.86123657 -150.83529663]
[-340.21554565 -148.21168518]
[-352.60308838 -157.04362488]
[-355.00967407 -171.69776917]
[-367.34439087 -180.23329163]
[-383.32202148 -178.78623962]
[-394.31076050 -190.47502136]
[-391.88092041 -206.33300781]
[-377.89651489 -214.19529724]
[-363.08514404 -208.03062439]
[-358.80886841 -192.56799316]
[-346.47415161 -184.03248596]
[-331.91198730 -186.94439697]
[-319.28125000 -178.46386719]
[-316.32571411 -163.16999817]
[-303.99102783 -154.63449097]
[-291.65631104 -146.09896851]
[-276.78771973 -145.21919250]
[-269.84243774 -131.00393677]
[-257.50772095 -122.46841431]
[-245.17301941 -113.93289948]
[-232.83831787 -105.39738464]
[-221.19319153 -114.85206604]
[-227.01298523 -128.67704773]
[-240.40026855 -138.14872742]
[-238.62196350 -154.45117188]
[-223.50744629 -160.81381226]
[-210.60522461 -150.69132996]
[-213.18801880 -134.49684143]
[-207.36820984 -120.67186737]
[-198.36650085 -108.67314148]
[-186.72138977 -99.21846008]
[-175.07626343 -89.76377106]
[-163.43113708 -80.30908966]
[-151.09643555 -71.77357483]
[-138.14453125 -64.20731354]
[-125.19262695 -56.64105225]
[-112.24073029 -49.07479095]
[-92.95248413 -50.39556122]
[-83.22318268 -32.74398804]
[-70.04550171 -25.57819176]
[-56.86781693 -18.41239357]
[-43.69013214 -11.24659634]
[-30.51244736 -4.08079910]
[-17.33476448 3.08499813]
[-4.15708065 10.25079536]
[9.02060318 17.41659355]
[16.40210533 17.85046959]
[22.34408951 24.79450989]
[35.41041565 32.16140366]
[48.47674179 39.52829742]
[61.54306793 46.89519119]
[74.60939026 54.26208496]
[87.67572021 61.62897873]
[100.74204254 68.99587250]
[115.20584869 72.97059631]
[130.20188904 73.31537628]
[145.19792175 73.66014862]
[160.19395447 74.00492859]
[175.19000244 74.34970856]
[189.16436768 66.93165588]
[201.71043396 74.95944977]
[216.70646667 75.30422974]
[231.70249939 75.64900970]
[246.69854736 75.99378204]
[261.69458008 76.33856201]
[276.69061279 76.68334198]
[291.69061279 76.68334198]
[306.68664551 76.33856201]
[321.68267822 75.99378204]
[336.67874146 75.64900970]
[351.52005005 73.47292328]
[365.98385620 69.49819946]
[380.44766235 65.52347565]
[394.91143799 61.54875565]
[409.37524414 57.57403183]
[423.83905029 53.59930801]
[438.30285645 49.62458801]
[452.76666260 45.64986420]
[467.23046875 41.67514038]
[480.90124512 31.64786148]
[494.32110596 42.00854492]
[488.08029175 57.77207184]
[471.20520020 56.13894653]
[456.74139404 60.11366653]
[442.27758789 64.08838654]
[427.81378174 68.06311035]
[413.34997559 72.03783417]
[398.88616943 76.01255798]
[384.42236328 79.98728180]
[369.95855713 83.96200562]
[355.49478149 87.93672180]
[355.32238770 95.43474579]
[368.13708496 103.23108673]
[354.97760010 110.43077850]
[354.80520630 117.92880249]
[369.07104492 122.56405640]
[383.33691406 127.19931030]
[398.22662354 121.22637939]
[412.10836792 129.26856995]
[414.33325195 145.15660095]
[403.19451904 156.70252991]
[387.23687744 155.04931641]
[378.70166016 141.46516418]
[364.43579102 136.82989502]
[350.16995239 132.19464111]
[337.34396362 118.57216644]
[333.24450684 103.36261749]
[337.02349854 90.64504242]
[322.02746582 90.98982239]
[307.03143311 91.33460236]
[292.03540039 91.67938232]
[289.34677124 93.96745300]
[285.41467285 95.06444550]
[280.81213379 94.39939117]
[276.34582520 91.67938232]
[261.34979248 91.33460236]
[246.35375977 90.98982239]
[231.35772705 90.64504242]
[216.36169434 90.30026245]
[201.36564636 89.95548248]
[188.46389771 97.39820099]
[174.84521484 89.34574890]
[159.84918213 89.00096893]
[144.85314941 88.65618896]
[129.85710144 88.31140900]
[114.86106873 87.96662903]
[116.92788696 103.71897125]
[106.86650848 113.94194031]
[106.17713165 128.92608643]
[105.48775482 143.91023254]
[104.79838562 158.89439392]
[104.10900879 173.87854004]
[103.41963196 188.86268616]
[102.73025513 203.84684753]
[111.57267761 219.99652100]
[101.54522705 234.39604187]
[101.08554840 249.38899231]
[100.62587738 264.38195801]
[100.16620636 279.37490845]
[110.06575012 291.99942017]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 203]
[5 202]
[6 201]
[7 200]
[10 198]
[11 197]
[12 196]
[13 195]
[14 194]
[15 193]
[16 192]
[18 118]
[19 117]
[20 116]
[21 115]
[22 114]
[23 113]
[24 112]
[25 110]
[26 109]
[27 108]
[28 107]
[29 106]
[30 105]
[31 104]
[32 103]
[36 101]
[37 100]
[38 99]
[39 98]
[50 97]
[51 96]
[52 95]
[53 94]
[57 85]
[58 84]
[59 83]
[60 82]
[62 80]
[63 79]
[64 78]
[67 75]
[68 74]
[86 93]
[87 92]
[119 190]
[120 189]
[121 188]
[122 187]
[123 186]
[125 184]
[126 183]
[127 182]
[128 181]
[129 180]
[130 179]
[131 175]
[132 174]
[133 173]
[134 172]
[135 155]
[136 154]
[137 153]
[138 152]
[139 151]
[140 150]
[141 149]
[142 148]
[143 147]
[159 169]
[160 168]
[161 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
