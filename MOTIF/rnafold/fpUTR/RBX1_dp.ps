%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:51:57 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RBX1)
} def

/sequence { (\
GUGCGCUGCUGCGCAGGCGCGGUGGUCGGACGACAGACCGUGUGUUUCCAAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 14 0.111920966 ubox
1 18 0.014207800 ubox
1 20 0.060050762 ubox
1 31 0.045356539 ubox
1 45 0.003659663 ubox
2 13 0.111893806 ubox
2 15 0.880088587 ubox
2 17 0.011438811 ubox
2 19 0.060123746 ubox
2 21 0.023099632 ubox
2 30 0.045283870 ubox
2 44 0.005177522 ubox
2 50 0.004026817 ubox
3 12 0.111996094 ubox
3 14 0.989243653 ubox
3 18 0.061182143 ubox
3 20 0.034959697 ubox
3 27 0.009212679 ubox
3 43 0.007904893 ubox
3 45 0.005356708 ubox
4 11 0.111941626 ubox
4 13 0.989461503 ubox
4 17 0.061204544 ubox
4 19 0.035015099 ubox
4 24 0.011343950 ubox
4 28 0.045660414 ubox
4 42 0.008083331 ubox
4 44 0.005631395 ubox
5 10 0.075885721 ubox
5 12 0.989458069 ubox
5 18 0.034994031 ubox
5 23 0.012408939 ubox
5 26 0.023558858 ubox
5 27 0.044977584 ubox
5 41 0.008022963 ubox
5 43 0.004838813 ubox
6 11 0.988933845 ubox
6 16 0.068577870 ubox
6 17 0.027341906 ubox
6 22 0.012575965 ubox
6 25 0.051114871 ubox
6 40 0.008012586 ubox
6 42 0.004781838 ubox
7 15 0.072072981 ubox
7 16 0.016237214 ubox
7 21 0.012582158 ubox
7 24 0.050932713 ubox
8 14 0.073188632 ubox
8 20 0.012601337 ubox
8 23 0.051859214 ubox
9 13 0.072666074 ubox
9 19 0.012317807 ubox
9 22 0.052031920 ubox
10 21 0.051991672 ubox
11 18 0.012610348 ubox
11 20 0.052028063 ubox
12 17 0.012612702 ubox
12 19 0.052026192 ubox
13 18 0.050679219 ubox
14 44 0.004376271 ubox
15 43 0.004548980 ubox
15 46 0.057862032 ubox
15 47 0.149221889 ubox
16 27 0.007564920 ubox
16 45 0.073517333 ubox
16 46 0.266003591 ubox
16 47 0.031754616 ubox
16 48 0.067235301 ubox
16 49 0.199980532 ubox
17 26 0.007612961 ubox
17 43 0.898855228 ubox
17 45 0.301146014 ubox
17 46 0.015764656 ubox
17 47 0.030571544 ubox
17 48 0.189439036 ubox
18 25 0.007616028 ubox
18 42 0.944511642 ubox
18 44 0.309745318 ubox
19 41 0.945983018 ubox
19 43 0.307149683 ubox
19 45 0.042121299 ubox
20 40 0.946598313 ubox
20 42 0.306679000 ubox
20 44 0.042819489 ubox
21 39 0.946952406 ubox
21 41 0.273594334 ubox
21 43 0.041468264 ubox
21 49 0.040470989 ubox
22 38 0.946877909 ubox
22 41 0.068042354 ubox
22 48 0.040498902 ubox
23 32 0.003766435 ubox
23 33 0.003722197 ubox
23 35 0.019853395 ubox
23 37 0.937075646 ubox
23 40 0.150298753 ubox
23 50 0.030371838 ubox
24 31 0.008155113 ubox
24 34 0.023249483 ubox
24 39 0.312570659 ubox
24 46 0.024190421 ubox
24 47 0.006707656 ubox
24 49 0.033788258 ubox
25 31 0.004942754 ubox
25 34 0.944157454 ubox
25 38 0.312863699 ubox
25 45 0.025572121 ubox
25 46 0.006760168 ubox
25 48 0.033744309 ubox
26 30 0.004487101 ubox
26 33 0.945447140 ubox
26 37 0.313082367 ubox
27 32 0.944083747 ubox
27 36 0.313289967 ubox
27 40 0.003997057 ubox
27 44 0.047873431 ubox
28 39 0.004077696 ubox
28 43 0.047962369 ubox
28 47 0.010312973 ubox
28 48 0.004534099 ubox
28 49 0.026506052 ubox
29 38 0.004074740 ubox
29 46 0.013889592 ubox
29 47 0.004699583 ubox
29 48 0.026577486 ubox
30 41 0.048411985 ubox
30 43 0.003186767 ubox
30 45 0.014458610 ubox
30 46 0.005406162 ubox
30 47 0.025784938 ubox
31 40 0.048480979 ubox
31 42 0.003244325 ubox
31 44 0.014882397 ubox
32 39 0.048125449 ubox
32 43 0.009444841 ubox
32 46 0.038359931 ubox
32 48 0.006489639 ubox
33 41 0.007937755 ubox
33 43 0.027248796 ubox
33 45 0.040456995 ubox
33 47 0.005845650 ubox
34 40 0.008202787 ubox
34 42 0.029020830 ubox
34 44 0.040757058 ubox
35 41 0.028484718 ubox
35 43 0.040042812 ubox
35 47 0.009031225 ubox
36 46 0.011590855 ubox
37 43 0.004203870 ubox
37 45 0.011882504 ubox
38 42 0.004648514 ubox
38 44 0.011890363 ubox
41 50 0.009067379 ubox
42 49 0.010819184 ubox
43 50 0.039191410 ubox
44 49 0.083682157 ubox
45 51 0.024337510 ubox
45 52 0.021478397 ubox
46 50 0.023368315 ubox
46 51 0.025573231 ubox
46 52 0.015179771 ubox
47 51 0.017431813 ubox
2 15 0.9500000 lbox
3 14 0.9500000 lbox
4 13 0.9500000 lbox
5 12 0.9500000 lbox
6 11 0.9500000 lbox
17 43 0.9500000 lbox
18 42 0.9500000 lbox
19 41 0.9500000 lbox
20 40 0.9500000 lbox
21 39 0.9500000 lbox
22 38 0.9500000 lbox
23 37 0.9500000 lbox
25 34 0.9500000 lbox
26 33 0.9500000 lbox
27 32 0.9500000 lbox
showpage
end
%%EOF
