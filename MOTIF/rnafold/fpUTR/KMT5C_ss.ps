%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:53:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGCAGAUGGGAGGUGCGGCGACAGUGUUUGACGAGAGCCGAAGGAGGCUGUGGGAGGUGUUGGCGGCGGCGGCGCGGGCGCCUGAGGAGGAGGAGGAGAAGCGGAUGAGAUCGUGGGGCUCACCAGCGUCCCCCAUGGCUUCUGAGUAGCGUGGGAGUGGAGUCAGCACCAAGCCAGGCUCCCCGCGCCUGCCUUGCCCUCACCUGCUCCUGCUCUCUGCCAGAGGCAGCAUGGUCCGCAGGGCACC\
) } def
/len { sequence length } bind def

/coor [
[116.88935852 199.12133789]
[119.38587189 214.14424133]
[115.54990387 228.88212585]
[106.04605865 240.78157043]
[92.52094269 247.78092957]
[77.31785583 248.66752625]
[63.07082748 243.28773499]
[52.24824142 232.57365417]
[46.72517776 218.38156128]
[47.45853806 203.17030334]
[54.32126236 189.57534790]
[66.12434387 179.95208740]
[80.82283020 175.96781921]
[83.08519745 161.13941956]
[85.34755707 146.31100464]
[87.60992432 131.48258972]
[89.87229156 116.65418243]
[82.95684814 113.75131226]
[69.12596893 107.94555664]
[62.21052933 105.04267883]
[53.21104050 117.04306030]
[44.21154785 129.04344177]
[46.69510651 144.65136719]
[37.34727478 157.39474487]
[21.71396065 159.71315002]
[9.07012844 150.23110962]
[6.91713953 134.57415771]
[16.53232574 122.03128052]
[32.21116638 120.04394531]
[41.21065903 108.04356384]
[50.21014786 96.04318237]
[45.37717056 90.30799866]
[33.90680695 99.97396088]
[19.14020348 102.60976410]
[24.24085045 88.50359344]
[35.71121597 78.83763885]
[30.87823868 73.10245514]
[17.52605247 79.93759155]
[4.17386627 86.77272797]
[-9.17831993 93.60787201]
[-13.79453564 108.72296143]
[-27.78573036 116.07292938]
[-42.85117340 111.29717255]
[-50.05281067 97.22904968]
[-45.11803055 82.21493530]
[-30.97455597 75.16244507]
[-16.01345825 80.25568390]
[-2.66127253 73.42054749]
[10.69091320 66.58540344]
[24.04310036 59.75026703]
[75.85569000 41.82283020]
[111.70082855 61.73444366]
[114.21726227 90.60557556]
[116.66653442 75.80689240]
[111.28643036 60.92855072]
[120.99805450 49.63547134]
[123.44731903 34.83678436]
[125.89658356 20.03809929]
[128.34585571 5.23941422]
[130.79512024 -9.55927086]
[121.86464691 -22.32188988]
[124.55936432 -37.29497147]
[136.78161621 -45.73015976]
[139.23088074 -60.52884293]
[141.68014526 -75.32752991]
[144.12940979 -90.12621307]
[146.57867432 -104.92489624]
[144.89463806 -113.87691498]
[149.15333557 -119.89435577]
[151.78910828 -134.66096497]
[154.42489624 -149.42756653]
[156.96746826 -164.21051025]
[159.41673279 -179.00918579]
[161.86599731 -193.80787659]
[164.31526184 -208.60656738]
[166.76452637 -223.40524292]
[169.21380615 -238.20393372]
[171.66307068 -253.00262451]
[174.11233521 -267.80130005]
[167.24008179 -284.89736938]
[178.92701721 -298.00277710]
[181.18939209 -312.83120728]
[183.45175171 -327.65960693]
[185.71411133 -342.48800659]
[187.97648621 -357.31643677]
[159.44186401 -387.07464600]
[155.88040161 -401.64572144]
[152.31895447 -416.21679688]
[148.75749207 -430.78784180]
[145.19602966 -445.35891724]
[128.63008118 -454.58999634]
[124.17407990 -472.69378662]
[134.21224976 -488.02362061]
[130.28428650 -502.50018311]
[125.02935791 -509.94064331]
[126.39930725 -517.18420410]
[122.65429688 -531.70916748]
[117.49366760 -539.21533203]
[118.95490265 -546.44104004]
[115.39344025 -561.01208496]
[104.60080719 -572.58056641]
[109.09501648 -586.78100586]
[105.53355408 -601.35205078]
[101.88024902 -615.90039062]
[98.13523865 -630.42535400]
[92.97460938 -637.93151855]
[94.43583679 -645.15722656]
[90.87438202 -659.72827148]
[87.31291962 -674.29931641]
[83.75146484 -688.87042236]
[78.68594360 -696.44110107]
[80.23822021 -703.64776611]
[76.86088562 -718.26263428]
[65.28461456 -729.87817383]
[69.81653595 -745.63873291]
[85.79460144 -749.33105469]
[96.78193665 -737.15692139]
[91.47572327 -721.63995361]
[94.85306549 -707.02508545]
[98.32253265 -692.43188477]
[101.88398743 -677.86077881]
[105.44544983 -663.28973389]
[109.00690460 -648.71862793]
[112.66020966 -634.17034912]
[116.40522003 -619.64538574]
[121.10680389 -613.96722412]
[120.10462189 -604.91351318]
[123.66608429 -590.34246826]
[134.20397949 -579.81616211]
[129.96450806 -564.57354736]
[133.52597046 -550.00250244]
[137.17927551 -535.45416260]
[140.92428589 -520.92919922]
[144.76084900 -506.42816162]
[148.68881226 -491.95156860]
[159.55513000 -488.57089233]
[167.53091431 -480.28646851]
[170.55923462 -469.06854248]
[167.77931213 -457.66323853]
[159.76710510 -448.92037964]
[163.32855225 -434.34930420]
[166.89001465 -419.77822876]
[170.45147705 -405.20718384]
[174.01293945 -390.63610840]
[181.03326416 -387.99700928]
[181.71452332 -402.98153687]
[196.17622375 -406.96389771]
[204.43244934 -394.44052124]
[195.07394409 -382.71878052]
[202.09426880 -380.07968140]
[214.37249756 -388.69622803]
[221.22401428 -402.95693970]
[236.08650208 -403.93460083]
[248.36473083 -412.55114746]
[260.64294434 -421.16772461]
[261.02703857 -436.56765747]
[270.29711914 -448.64736938]
[284.73190308 -452.90194702]
[298.73638916 -447.90075684]
[311.01461792 -456.51733398]
[317.43518066 -471.60733032]
[333.74432373 -473.32312012]
[343.16461182 -459.89962769]
[336.00524902 -445.14578247]
[319.63119507 -444.23910522]
[307.35296631 -435.62252808]
[307.29397583 -420.75195312]
[298.38449097 -408.62408447]
[283.87240601 -404.01403809]
[269.25952148 -408.88949585]
[256.98129272 -400.27291870]
[244.70306396 -391.65637207]
[238.72976685 -378.01199341]
[222.98905945 -376.41799927]
[210.71083069 -367.80145264]
[202.80488586 -355.05404663]
[200.54252625 -340.22564697]
[198.28016663 -325.39724731]
[196.01779175 -310.56881714]
[193.75543213 -295.74041748]
[200.66069031 -285.82742310]
[198.91415405 -273.46878052]
[188.91102600 -265.35205078]
[186.46174622 -250.55334473]
[184.01248169 -235.75466919]
[181.56321716 -220.95597839]
[179.11395264 -206.15728760]
[176.66468811 -191.35861206]
[174.21542358 -176.55992126]
[171.76614380 -161.76124573]
[173.76966858 -154.66674805]
[169.19149780 -146.79177856]
[166.55570984 -132.02517700]
[163.91993713 -117.25857544]
[161.37736511 -102.47563171]
[158.92810059 -87.67694855]
[156.47883606 -72.87826538]
[154.02955627 -58.07957840]
[151.58029175 -43.28089142]
[160.43310547 -31.35766220]
[158.16000366 -16.31480026]
[145.59381104 -7.11000395]
[143.14454651 7.68868160]
[140.69526672 22.48736763]
[138.24600220 37.28605270]
[135.79673767 52.08473969]
[141.35203552 65.90457916]
[131.46522522 78.25615692]
[129.01594543 93.05484009]
[132.02346802 107.75024414]
[140.08961487 120.39688110]
[148.15576172 133.04351807]
[156.22189331 145.69013977]
[164.28804016 158.33677673]
[182.57922363 166.84822083]
[182.53178406 186.19856262]
[190.91444397 198.63764954]
[199.53100586 210.91587830]
[208.37838745 223.02885437]
[217.22575378 235.14181519]
[226.07313538 247.25479126]
[234.92050171 259.36776733]
[249.14541626 268.59207153]
[244.21945190 284.81460571]
[227.26724243 284.57199097]
[222.80752563 268.21511841]
[213.96015930 256.10217285]
[205.11279297 243.98919678]
[196.26541138 231.87622070]
[187.41804504 219.76325989]
[184.03442383 218.85801697]
[180.91543579 216.28324890]
[178.83462524 212.17839050]
[178.47535706 207.02030945]
[170.09269714 194.58122253]
[159.95762634 193.54460144]
[151.88810730 186.97250366]
[148.68901062 176.83905029]
[151.64140320 166.40292358]
[143.57527161 153.75628662]
[135.50912476 141.10964966]
[127.44297791 128.46302795]
[119.37683868 115.81639099]
[104.70069885 118.91654968]
[102.43833160 133.74496460]
[100.17597198 148.57336426]
[97.91360474 163.40177917]
[95.65123749 178.23017883]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 248]
[14 247]
[15 246]
[16 245]
[17 244]
[20 31]
[21 30]
[22 29]
[37 50]
[38 49]
[39 48]
[40 47]
[53 209]
[54 208]
[56 206]
[57 205]
[58 204]
[59 203]
[60 202]
[63 199]
[64 198]
[65 197]
[66 196]
[67 195]
[69 194]
[70 193]
[71 192]
[72 190]
[73 189]
[74 188]
[75 187]
[76 186]
[77 185]
[78 184]
[79 183]
[81 180]
[82 179]
[83 178]
[84 177]
[85 176]
[86 144]
[87 143]
[88 142]
[89 141]
[90 140]
[93 135]
[94 134]
[96 133]
[97 132]
[99 131]
[100 130]
[102 128]
[103 127]
[104 125]
[105 124]
[107 123]
[108 122]
[109 121]
[110 120]
[112 119]
[113 118]
[150 175]
[151 174]
[153 172]
[154 171]
[155 170]
[159 166]
[160 165]
[210 243]
[211 242]
[212 241]
[213 240]
[214 239]
[216 235]
[217 234]
[218 230]
[219 229]
[220 228]
[221 227]
[222 226]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
