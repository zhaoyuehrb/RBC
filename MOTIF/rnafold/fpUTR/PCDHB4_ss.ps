%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:05:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUUGUGAAUAAUGAGCCCUAAAAAGCUCGCGCGUAUUCUUCUGUGUCGCUAGACGCAAUCAAAAACACACGGAAGAAGCGUUACAAGCAGUGCAGGUUUACCAACGGCUUGGGGCAGCGAUAUACUAAACAAAUUUAAUAUUAAAAGCAACUGUGUGACGAUUCCUCCAAGCAAGAAAUUGGAAUUGAAUGUCUCAAGUCUCGUUGCGGUUGCUGAGGGGAUUGGAUAUAGGGACCUGGACUCCAAC\
) } def
/len { sequence length } bind def

/coor [
[96.63133240 215.51361084]
[83.34546661 204.98165894]
[89.78793335 189.29946899]
[90.16488647 174.30421448]
[90.54183960 159.30894470]
[90.91878510 144.31369019]
[87.95258331 137.56524658]
[91.39587402 129.13269043]
[91.96121979 114.14334106]
[84.79973602 111.91552734]
[80.34411621 126.23849487]
[69.32396698 136.41476440]
[66.02114868 121.78287506]
[70.47676849 107.45990753]
[63.31528854 105.23209381]
[55.27788544 117.89701080]
[47.24048233 130.56193542]
[39.20307922 143.22685242]
[45.04029083 157.60414124]
[41.27925873 172.65852356]
[29.36618042 182.60127258]
[13.88187408 183.60919189]
[0.78037453 175.29472351]
[-4.90052605 160.85494995]
[-0.97640455 145.84226990]
[11.04383373 136.02934265]
[26.53816223 135.18945312]
[34.57556534 122.52452850]
[42.61296463 109.85961151]
[50.65036774 97.19469452]
[42.53355026 84.58052063]
[27.67662811 86.64737701]
[12.81970596 88.71423340]
[-2.03721499 90.78108978]
[-6.11576414 93.95740509]
[-10.55983543 95.14971161]
[-14.55856609 94.54810333]
[-17.49188232 92.63488770]
[-32.41614914 94.14031219]
[-47.34041214 95.64573669]
[-62.26467896 97.15116119]
[-77.18894196 98.65659332]
[-92.11321259 100.16201782]
[-107.03747559 101.66744232]
[-121.96173859 103.17286682]
[-136.88600159 104.67829132]
[-151.81027222 106.18371582]
[-166.73454285 107.68914795]
[-169.50059509 122.53924561]
[-176.33959961 136.00790405]
[-186.69714355 147.00326538]
[-199.73358154 154.63400269]
[-214.39210510 158.28149414]
[-229.48442078 157.65008545]
[-243.78706360 152.79095459]
[-256.14056396 144.09800720]
[-265.54351807 132.27592468]
[-271.23361206 118.28310394]
[-272.74963379 103.25385284]
[-269.96865845 88.40653229]
[-263.11611938 74.94475555]
[-252.74754333 63.95980072]
[-239.70344543 56.34217072]
[-225.04127502 52.70939636]
[-209.94960022 53.35596466]
[-195.65184021 58.22946930]
[-183.30706787 66.93482971]
[-173.91601562 78.76634216]
[-168.23995972 92.76487732]
[-153.31568909 91.25945282]
[-138.39143372 89.75402832]
[-123.46716309 88.24860382]
[-108.54290009 86.74317932]
[-93.61863708 85.23775482]
[-78.69436646 83.73232269]
[-63.77010345 82.22689819]
[-48.84584045 80.72147369]
[-33.92157364 79.21604919]
[-18.99730873 77.71062469]
[-4.10406923 75.92416382]
[10.75285244 73.85730743]
[25.60977364 71.79045868]
[40.46669388 69.72360229]
[43.30142593 54.99389267]
[51.82665253 42.65207672]
[64.59938812 34.78713608]
[79.45770264 32.73030472]
[93.88665771 36.82971954]
[105.44399261 46.39151382]
[112.17350769 59.79724503]
[112.93614960 74.77784729]
[107.60188293 88.79917908]
[120.74648285 81.57286835]
[129.11218262 68.14434052]
[143.99266052 68.79317474]
[157.13725281 61.56687164]
[170.28186035 54.34056854]
[183.42645264 47.11426163]
[196.57106018 39.88795853]
[209.71565247 32.66165161]
[222.86026001 25.43534660]
[230.33465576 -0.16313811]
[260.68426514 -4.28801107]
[267.41003418 -17.69563293]
[274.13577271 -31.10325432]
[280.86151123 -44.51087570]
[272.98583984 -64.03373718]
[282.00265503 -82.72901917]
[301.61737061 -88.55165100]
[307.66094971 -102.28026581]
[313.70455933 -116.00888062]
[319.74816895 -129.73750305]
[325.79174805 -143.46612549]
[331.83535767 -157.19473267]
[337.87893677 -170.92335510]
[343.92254639 -184.65197754]
[342.40121460 -200.39987183]
[354.61062622 -208.93098450]
[360.65420532 -222.65959167]
[366.61145020 -236.42591858]
[372.48205566 -250.22940063]
[370.76296997 -265.95693970]
[382.86419678 -274.64080811]
[388.73480225 -288.44427490]
[394.60540771 -302.24774170]
[400.47601318 -316.05123901]
[406.34661865 -329.85470581]
[394.07513428 -338.58541870]
[383.96777344 -349.75033569]
[376.49722290 -362.82720947]
[372.01290894 -377.20443726]
[370.72454834 -392.20959473]
[372.69244385 -407.14080811]
[377.82452393 -421.29977417]
[385.88073730 -434.02420044]
[396.48431396 -444.71896362]
[409.13931274 -452.88388062]
[423.25378418 -458.13702393]
[438.16760254 -460.23269653]
[453.18322754 -459.07290649]
[467.59835815 -454.71185303]
[480.73873901 -447.35357666]
[491.98977661 -437.34219360]
[500.82525635 -425.14593506]
[506.83193970 -411.33529663]
[509.72885132 -396.55618286]
[509.38052368 -381.49987793]
[505.80322266 -366.87054443]
[499.16427612 -353.35247803]
[489.77423096 -341.57788086]
[478.07220459 -332.09753418]
[464.60559082 -325.35479736]
[450.00424194 -321.66510010]
[434.95101929 -321.20095825]
[420.15008545 -323.98410034]
[414.27947998 -310.18063354]
[408.40887451 -296.37713623]
[402.53826904 -282.57366943]
[396.66766357 -268.77020264]
[398.80664062 -254.02996826]
[386.28552246 -244.35879517]
[380.41491699 -230.55531311]
[380.68856812 -223.18884277]
[374.38284302 -216.61599731]
[368.33923340 -202.88739014]
[370.29284668 -188.12145996]
[357.65115356 -178.60838318]
[351.60757446 -164.87976074]
[345.56396484 -151.15113831]
[339.52038574 -137.42251587]
[333.47677612 -123.69390869]
[327.43316650 -109.96528625]
[321.38958740 -96.23667145]
[315.34597778 -82.50804901]
[321.22000122 -75.30001831]
[324.09631348 -66.39694214]
[323.54296875 -56.99927902]
[319.59356689 -48.39022446]
[312.74826050 -41.76051712]
[303.91073608 -38.04376221]
[294.26913452 -37.78512573]
[287.54339600 -24.37750626]
[280.81765747 -10.96988392]
[274.09188843 2.43773699]
[283.51229858 -9.23514748]
[298.32824707 -11.57765865]
[310.89025879 -3.38035440]
[314.71252441 11.12448025]
[307.82162476 24.44796562]
[293.77529907 29.71115875]
[279.82424927 24.19527054]
[292.28317261 32.54840469]
[304.74212646 40.90153885]
[317.20104980 49.25467300]
[329.66000366 57.60780716]
[342.11892700 65.96094513]
[348.63839722 66.77895355]
[353.10958862 70.23505402]
[354.78237915 74.68382263]
[367.02746582 83.34741974]
[379.27255249 92.01100922]
[391.51763916 100.67459869]
[403.76272583 109.33818817]
[416.00781250 118.00177765]
[431.74230957 119.65612030]
[437.66320801 133.32330322]
[449.90829468 141.98689270]
[462.20758057 150.57337952]
[474.56057739 159.08241272]
[490.94192505 159.84611511]
[498.22982788 174.53688049]
[488.92709351 188.04211426]
[472.60360718 186.46878052]
[466.05154419 171.43539429]
[453.69854736 162.92636108]
[446.42581177 161.72334290]
[441.24472046 154.23197937]
[428.99963379 145.56838989]
[414.14099121 144.53373718]
[407.34423828 130.24687195]
[395.09915161 121.58327484]
[382.85406494 112.91968536]
[370.60897827 104.25609589]
[358.36386108 95.59250641]
[346.11877441 86.92891693]
[333.76580811 78.41988373]
[321.30685425 70.06674957]
[308.84793091 61.71361160]
[296.38897705 53.36047745]
[283.93005371 45.00734329]
[271.47109985 36.65420914]
[257.50097656 46.51904297]
[241.82972717 46.64235687]
[230.08656311 38.57994843]
[216.94195557 45.80625153]
[203.79736328 53.03255844]
[190.65275574 60.25886154]
[177.50816345 67.48516846]
[164.36355591 74.71147156]
[151.21896362 81.93777466]
[143.79344177 94.84943390]
[127.97278595 94.71746826]
[114.82818604 101.94377899]
[106.95056152 114.70869446]
[106.38521576 129.69804382]
[105.91405487 144.69062805]
[105.53710175 159.68589783]
[105.16014862 174.68116760]
[104.78319550 189.67642212]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 249]
[4 248]
[5 247]
[6 246]
[8 245]
[9 244]
[15 30]
[16 29]
[17 28]
[18 27]
[31 83]
[32 82]
[33 81]
[34 80]
[38 79]
[39 78]
[40 77]
[41 76]
[42 75]
[43 74]
[44 73]
[45 72]
[46 71]
[47 70]
[48 69]
[92 243]
[93 242]
[95 240]
[96 239]
[97 238]
[98 237]
[99 236]
[100 235]
[101 234]
[103 184]
[104 183]
[105 182]
[106 181]
[109 174]
[110 173]
[111 172]
[112 171]
[113 170]
[114 169]
[115 168]
[116 167]
[118 165]
[119 164]
[120 162]
[121 161]
[123 159]
[124 158]
[125 157]
[126 156]
[127 155]
[191 231]
[192 230]
[193 229]
[194 228]
[195 227]
[196 226]
[199 225]
[200 224]
[201 223]
[202 222]
[203 221]
[204 220]
[206 218]
[207 217]
[208 215]
[209 214]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
