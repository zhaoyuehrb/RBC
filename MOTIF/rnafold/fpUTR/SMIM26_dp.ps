%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:40:59 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SMIM26)
} def

/sequence { (\
ACCGGAAGUCCCGCCUCUGCCGUGGGCCUGCGAGAAUCGAGGCACUCGCUGGCGUACCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.015754386 ubox
1 23 0.023904344 ubox
1 55 0.030912109 ubox
2 8 0.018073621 ubox
2 22 0.021638739 ubox
2 25 0.029220521 ubox
2 52 0.019539487 ubox
2 54 0.032498620 ubox
3 13 0.663418873 ubox
3 19 0.469594703 ubox
3 22 0.167060832 ubox
3 24 0.027173971 ubox
3 51 0.019628968 ubox
3 54 0.008311148 ubox
4 10 0.017432672 ubox
4 11 0.197942950 ubox
4 12 0.694541783 ubox
4 15 0.166059909 ubox
4 16 0.013333094 ubox
4 17 0.014781537 ubox
4 18 0.487467232 ubox
4 21 0.413273149 ubox
4 23 0.014288659 ubox
4 28 0.008219582 ubox
4 50 0.018824058 ubox
4 53 0.005285806 ubox
4 58 0.044558426 ubox
4 59 0.056036718 ubox
5 9 0.011451039 ubox
5 10 0.200725115 ubox
5 11 0.692789838 ubox
5 14 0.166154534 ubox
5 15 0.014915891 ubox
5 16 0.011694708 ubox
5 17 0.490450337 ubox
5 20 0.412190289 ubox
5 27 0.008197322 ubox
5 49 0.017803546 ubox
5 57 0.044224854 ubox
5 58 0.056225716 ubox
6 16 0.468108151 ubox
7 16 0.135684323 ubox
7 18 0.362702822 ubox
7 29 0.017591894 ubox
7 46 0.013282098 ubox
8 14 0.437440323 ubox
8 15 0.181048433 ubox
8 17 0.408218365 ubox
8 20 0.008324721 ubox
8 27 0.008669062 ubox
8 28 0.018477519 ubox
8 45 0.013723241 ubox
8 53 0.006731813 ubox
8 55 0.012588566 ubox
8 57 0.059729615 ubox
9 13 0.409890116 ubox
9 19 0.008089688 ubox
9 26 0.005254190 ubox
9 44 0.013030447 ubox
9 52 0.004648795 ubox
9 56 0.058794669 ubox
10 25 0.020849300 ubox
10 26 0.029652134 ubox
10 42 0.005129369 ubox
10 51 0.004412056 ubox
10 52 0.005360667 ubox
11 24 0.020635825 ubox
11 25 0.075438555 ubox
11 41 0.005129237 ubox
11 51 0.005377621 ubox
12 19 0.014473144 ubox
12 22 0.019473895 ubox
12 24 0.075846653 ubox
12 39 0.005173223 ubox
12 54 0.153014650 ubox
13 18 0.010428487 ubox
13 20 0.140106876 ubox
13 21 0.019644584 ubox
13 23 0.075759923 ubox
13 27 0.003747169 ubox
13 38 0.005163181 ubox
13 43 0.004704325 ubox
13 49 0.005946800 ubox
13 53 0.158647044 ubox
13 55 0.019800466 ubox
14 19 0.142314877 ubox
14 22 0.075751935 ubox
14 25 0.050787251 ubox
14 26 0.004142770 ubox
14 42 0.004708772 ubox
14 48 0.005941527 ubox
14 52 0.158696800 ubox
14 54 0.023581223 ubox
15 24 0.050925435 ubox
15 25 0.005621815 ubox
15 41 0.004708653 ubox
15 51 0.158374523 ubox
15 52 0.004581295 ubox
16 24 0.003745957 ubox
16 25 0.006814645 ubox
16 33 0.003163577 ubox
16 35 0.004117374 ubox
16 40 0.004695847 ubox
16 51 0.004931541 ubox
16 52 0.004581672 ubox
17 24 0.009070855 ubox
17 25 0.005065465 ubox
17 34 0.004154991 ubox
17 39 0.004653797 ubox
17 51 0.007479556 ubox
18 24 0.004957423 ubox
18 33 0.003957064 ubox
18 44 0.006917571 ubox
18 48 0.017469299 ubox
18 54 0.403980039 ubox
18 56 0.009513079 ubox
19 27 0.007633524 ubox
19 43 0.007158505 ubox
19 47 0.018323190 ubox
19 49 0.147693653 ubox
19 50 0.013776330 ubox
19 53 0.537271149 ubox
19 55 0.005246657 ubox
20 26 0.007671439 ubox
20 42 0.007160080 ubox
20 48 0.127118377 ubox
20 52 0.537728109 ubox
20 54 0.004922276 ubox
21 25 0.007712512 ubox
21 32 0.003950371 ubox
21 41 0.007159145 ubox
21 48 0.089403322 ubox
21 51 0.537431184 ubox
21 54 0.004706564 ubox
22 31 0.003997745 ubox
22 45 0.023605244 ubox
22 47 0.117076185 ubox
22 49 0.531392219 ubox
22 50 0.079977289 ubox
22 53 0.004950744 ubox
22 57 0.800955777 ubox
23 30 0.003930095 ubox
23 39 0.007020104 ubox
23 44 0.022472660 ubox
23 48 0.531443953 ubox
23 52 0.004922042 ubox
23 56 0.813440585 ubox
24 38 0.007114366 ubox
24 43 0.010465867 ubox
24 46 0.146860485 ubox
24 47 0.529587332 ubox
24 55 0.813707958 ubox
24 58 0.040237120 ubox
24 59 0.027936551 ubox
25 37 0.006917181 ubox
25 45 0.461487184 ubox
25 46 0.259565133 ubox
25 47 0.016824837 ubox
25 50 0.004756921 ubox
25 57 0.040345812 ubox
25 58 0.028242341 ubox
26 43 0.546497596 ubox
26 45 0.123323829 ubox
26 49 0.004728584 ubox
26 53 0.826750965 ubox
26 57 0.023581571 ubox
27 42 0.560048616 ubox
27 48 0.004709233 ubox
27 52 0.827140187 ubox
27 54 0.003414331 ubox
28 34 0.006134069 ubox
28 41 0.560170649 ubox
28 42 0.019539051 ubox
28 51 0.824866018 ubox
28 52 0.004948494 ubox
29 33 0.005542335 ubox
29 39 0.006173693 ubox
29 40 0.557983545 ubox
29 41 0.018097682 ubox
29 44 0.021100961 ubox
29 51 0.005448369 ubox
29 54 0.019767972 ubox
29 56 0.003691822 ubox
30 38 0.012244383 ubox
30 43 0.022722131 ubox
30 49 0.825341314 ubox
30 50 0.003656690 ubox
30 53 0.025623308 ubox
30 55 0.004674300 ubox
31 39 0.554344931 ubox
31 42 0.022676816 ubox
31 48 0.827279253 ubox
31 52 0.025633287 ubox
31 54 0.004728156 ubox
32 38 0.556012760 ubox
32 47 0.827263906 ubox
32 53 0.004719178 ubox
33 37 0.483751218 ubox
33 46 0.826886565 ubox
33 50 0.025551693 ubox
34 45 0.823291818 ubox
34 49 0.025585469 ubox
38 48 0.026172101 ubox
39 47 0.026491391 ubox
40 46 0.026523708 ubox
41 45 0.026051612 ubox
51 58 0.008323478 ubox
52 57 0.008310935 ubox
3 13 0.9500000 lbox
4 12 0.9500000 lbox
5 11 0.9500000 lbox
22 57 0.9500000 lbox
23 56 0.9500000 lbox
24 55 0.9500000 lbox
26 53 0.9500000 lbox
27 52 0.9500000 lbox
28 51 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
32 47 0.9500000 lbox
33 46 0.9500000 lbox
34 45 0.9500000 lbox
showpage
end
%%EOF
