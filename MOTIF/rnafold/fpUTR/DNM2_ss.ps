%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:14:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUCGCUCGGGUCGGGUGUCGCCUGAGAACCGGAUGAGGCGGCGACCGUGAGGCCGAGCCGGGAGCGGGCGUCUUGCCGAGGCCCGGGCGGGCGGGGAGCAACGGCUACAGACGCCGCGGGGCCAGGUCGUUGAGGGUCGGCGGCGGGCGAGGAGCGCAGGGCGCUCGGGCCGGGGGCCGCCGGCGCC\
) } def
/len { sequence length } bind def

/coor [
[100.26702881 142.25840759]
[85.36520386 139.64425659]
[72.33917236 131.94874573]
[62.85853577 120.15826416]
[58.13845444 105.78401184]
[43.15113449 105.16738129]
[28.16381454 104.55075073]
[13.17649364 103.93412018]
[-1.81082618 103.31748962]
[-16.79814720 102.70085907]
[-31.78546715 102.08422852]
[-46.77278519 101.46759796]
[-61.76010513 100.85096741]
[-76.74742889 100.23433685]
[-91.73474884 99.61770630]
[-107.83380890 108.54026031]
[-122.28543091 98.59725952]
[-137.28086853 98.22721100]
[-152.27630615 97.85717010]
[-167.27172852 97.48712158]
[-184.50102234 107.93056488]
[-200.56510925 97.18572998]
[-215.56460571 97.30908966]
[-230.56408691 97.43244934]
[-245.56358337 97.55580902]
[-260.56307983 97.67916870]
[-275.56256104 97.80252838]
[-282.72204590 109.59227753]
[-294.67947388 116.24818420]
[-308.25564575 116.12314606]
[-319.90112305 109.35692596]
[-326.62414551 97.81160736]
[-341.62365723 97.68824768]
[-356.62313843 97.56488800]
[-371.62261963 97.44152832]
[-378.97506714 109.11193085]
[-391.04031372 115.57026672]
[-404.61260986 115.22195435]
[-416.14523315 108.26510620]
[-422.67745972 96.61077881]
[-437.67288208 96.24073029]
[-452.66833496 95.87068939]
[-464.06683350 106.48727417]
[-479.26904297 105.89838409]
[-489.32009888 94.96622467]
[-504.31555176 94.59617615]
[-518.44885254 102.91374969]
[-532.58343506 94.59839630]
[-532.17889404 78.20423889]
[-517.65130615 70.59618378]
[-503.94549561 79.60074615]
[-488.95007324 79.97078705]
[-478.37200928 69.54769897]
[-463.15924072 69.70936584]
[-452.29827881 80.87525177]
[-437.30285645 81.24530029]
[-422.30740356 81.61534119]
[-412.76403809 68.26822662]
[-396.98947144 63.18267441]
[-381.13272095 68.54895020]
[-371.49926758 82.44203949]
[-356.49978638 82.56539917]
[-341.50027466 82.68875885]
[-326.50079346 82.81211853]
[-317.17822266 69.30983734]
[-301.48944092 63.96552277]
[-285.54660034 69.07027435]
[-275.68594360 82.80303192]
[-260.68643188 82.67967224]
[-245.68695068 82.55631256]
[-230.68745422 82.43295288]
[-215.68795776 82.30959320]
[-200.68846130 82.18623352]
[-194.19158936 74.27238464]
[-184.19882202 71.18495178]
[-173.94810486 74.17761230]
[-166.90168762 82.49168396]
[-151.90625000 82.86173248]
[-136.91081238 83.23178101]
[-121.91538239 83.60182190]
[-112.93025208 75.48687744]
[-100.42353058 75.68279266]
[-91.11811829 84.63038635]
[-76.13079834 85.24701691]
[-61.14347458 85.86364746]
[-46.15615463 86.48027802]
[-31.16883469 87.09690857]
[-16.18151474 87.71353912]
[-1.19419515 88.33016968]
[13.79312515 88.94680023]
[28.78044510 89.56343079]
[43.76776505 90.18006134]
[58.75508499 90.79669189]
[61.65722656 82.23274231]
[66.31486511 74.48225403]
[72.51475525 67.90007782]
[79.97303772 62.78757477]
[88.34824371 59.37881851]
[97.25691986 57.82987595]
[106.29118347 58.21166611]
[115.03741455 60.50671005]
[123.09516144 64.60992432]
[133.39210510 53.70245743]
[143.68905640 42.79498672]
[153.98600769 31.88751984]
[164.28294373 20.98005104]
[174.57989502 10.07258129]
[184.87684631 -0.83488709]
[195.17379761 -11.74235535]
[192.08845520 -20.98115540]
[192.58671570 -30.65071869]
[196.55752563 -39.41782761]
[203.41390991 -46.08916855]
[212.17947388 -49.77373886]
[221.62721252 -50.00168991]
[230.45133972 -46.78386307]
[241.44311523 -56.99076080]
[252.43490601 -67.19765472]
[256.74276733 -83.02088165]
[272.66683960 -86.93956757]
[283.82577515 -74.92251587]
[278.74026489 -59.33182907]
[262.64178467 -56.20587540]
[251.65000916 -45.99897766]
[240.65823364 -35.79208374]
[241.64753723 -15.39032173]
[227.07821655 -0.65941411]
[206.08126831 -1.44540834]
[195.78431702 9.46205997]
[185.48736572 20.36952972]
[175.19041443 31.27699852]
[164.89347839 42.18446732]
[154.59652710 53.09193420]
[144.29957581 63.99940491]
[134.00262451 74.90687561]
[142.14353943 96.87496948]
[137.33180237 119.80353546]
[149.12490845 129.07298279]
[160.99385071 138.24513245]
[172.93782043 147.31935120]
[184.88179016 156.39358521]
[196.82575989 165.46780396]
[208.76972961 174.54203796]
[220.71369934 183.61625671]
[232.65766907 192.69049072]
[244.60163879 201.76470947]
[256.54562378 210.83894348]
[277.92016602 212.20693970]
[285.15246582 231.52755737]
[297.52947998 240.00160217]
[309.90649414 248.47566223]
[322.78265381 244.48886108]
[335.41784668 248.59129333]
[343.26263428 259.06997681]
[343.62884521 271.95989990]
[355.86480713 280.63638306]
[368.10076904 289.31286621]
[380.33673096 297.98934937]
[392.57269287 306.66580200]
[404.80865479 315.34228516]
[421.22650146 319.57196045]
[421.70706177 336.51910400]
[405.55523682 341.67230225]
[396.13217163 327.57824707]
[383.89620972 318.90176392]
[371.66024780 310.22531128]
[359.42428589 301.54882812]
[347.18832397 292.87234497]
[334.95236206 284.19586182]
[318.51730347 287.72702026]
[304.32952881 278.09625244]
[301.43246460 260.85266113]
[289.05545044 252.37861633]
[276.67843628 243.90457153]
[268.30532837 246.94607544]
[259.33651733 245.76589966]
[251.80941772 240.50410461]
[247.49269104 232.24223328]
[247.47138977 222.78291321]
[235.52742004 213.70867920]
[223.58345032 204.63446045]
[211.63948059 195.56022644]
[199.69551086 186.48600769]
[187.75154114 177.41177368]
[175.80757141 168.33755493]
[163.86360168 159.26332092]
[151.91963196 150.18910217]
[144.67927551 148.64346313]
[139.85546875 140.86608887]
[128.06236267 131.59663391]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 93]
[6 92]
[7 91]
[8 90]
[9 89]
[10 88]
[11 87]
[12 86]
[13 85]
[14 84]
[15 83]
[17 80]
[18 79]
[19 78]
[20 77]
[22 73]
[23 72]
[24 71]
[25 70]
[26 69]
[27 68]
[32 64]
[33 63]
[34 62]
[35 61]
[40 57]
[41 56]
[42 55]
[45 52]
[46 51]
[102 135]
[103 134]
[104 133]
[105 132]
[106 131]
[107 130]
[108 129]
[109 128]
[116 125]
[117 124]
[118 123]
[137 190]
[138 189]
[139 187]
[140 186]
[141 185]
[142 184]
[143 183]
[144 182]
[145 181]
[146 180]
[147 179]
[149 174]
[150 173]
[151 172]
[155 169]
[156 168]
[157 167]
[158 166]
[159 165]
[160 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
