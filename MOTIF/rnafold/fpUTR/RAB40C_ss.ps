%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:02:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCCCGGGGCCACCCCGCCGCUCCCUCCGAGGGUUCUGCGGAAGCAGGCGGCACAGCCUGCGAGGGGCUUUCGUUUCCCGGACUCAGCCGCAUCGCCUCGGCUCGGGCGCGCCUGCAUCCUGCCGCCCGUCCGCGCGUUGAAGGGGCGGAUACAAACAACGUGGACUUCCGAGCCCCUGAUUGGCGAGCGUGCGGCCGGCGCGGGGCGCAGGCGGCGCGGCC\
) } def
/len { sequence length } bind def

/coor [
[127.69779205 178.47534180]
[128.96395874 193.42181396]
[120.42410278 205.75350952]
[105.98738098 209.82550049]
[92.26232910 203.77383423]
[85.53146362 190.36692810]
[80.95654297 204.65223694]
[76.38162231 218.93754578]
[71.80670166 233.22286987]
[72.73410034 250.15142822]
[56.72384262 255.72888184]
[46.93228149 241.88830566]
[57.52138901 228.64794922]
[62.09630966 214.36262512]
[66.67122650 200.07731628]
[71.24615479 185.79200745]
[75.11142731 171.29856873]
[78.25765228 156.63224792]
[81.40388489 141.96591187]
[84.55011749 127.29958344]
[87.69634247 112.63325500]
[88.66330719 109.52863312]
[90.10446930 106.75981140]
[91.96093750 104.38812256]
[77.46749878 100.52284241]
[58.25034332 106.62963104]
[45.18003082 92.37310028]
[30.58345604 88.91767120]
[15.98688030 85.46223450]
[1.39030528 82.00680542]
[-13.20627022 78.55137634]
[-27.80284500 75.09594727]
[-37.55400085 84.83089447]
[-50.73681641 88.44990540]
[-63.88180923 85.11135101]
[-73.58395386 75.79032898]
[-77.38466644 62.99706268]
[-91.93111420 59.33634949]
[-106.47756195 55.67563248]
[-121.02400970 52.01491928]
[-135.57046509 48.35420609]
[-150.40158081 66.55297089]
[-175.88601685 71.15671539]
[-200.36102295 56.90695190]
[-215.29817200 58.27859879]
[-230.23533630 59.65024567]
[-245.17248535 61.02189255]
[-260.10964966 62.39353943]
[-275.04678345 63.76519012]
[-284.95941162 76.07434082]
[-300.68133545 77.68584442]
[-312.88500977 67.64363098]
[-314.33020020 51.90555573]
[-304.15951538 39.80874634]
[-288.40704346 38.53002548]
[-276.41842651 48.82803345]
[-261.48129272 47.45638657]
[-246.54412842 46.08473969]
[-231.60697937 44.71309280]
[-216.66981506 43.34144592]
[-201.73266602 41.96979523]
[-200.41874695 34.58578491]
[-197.79090881 19.81776428]
[-196.47698975 12.43375492]
[-210.02409363 5.99357748]
[-223.57119751 -0.44659981]
[-237.11830139 -6.88677692]
[-250.68048096 0.65291905]
[-266.08013916 -1.25240195]
[-277.39578247 -11.87010479]
[-280.27633667 -27.11746788]
[-273.61416626 -41.13156509]
[-259.97097778 -48.52369690]
[-244.59291077 -46.45143127]
[-233.39311218 -35.71159744]
[-230.67813110 -20.43388367]
[-217.13102722 -13.99370670]
[-203.58390808 -7.55352974]
[-190.03680420 -1.11335266]
[-180.34500122 -5.27312517]
[-170.21412659 -6.85571480]
[-160.29888916 -5.90398264]
[-151.20567322 -2.62013245]
[-143.45542908 2.65536380]
[-137.45401001 9.47303009]
[-133.47138977 17.30954552]
[-131.63105774 25.60617638]
[-131.90974426 33.80775452]
[-117.36329651 37.46847153]
[-102.81684875 41.12918472]
[-88.27040100 44.78990173]
[-73.72395325 48.45061493]
[-61.46496201 37.52696991]
[-44.94471741 36.05118561]
[-30.66006851 44.80263519]
[-24.34741402 60.49937439]
[-9.75083923 63.95480347]
[4.84573555 67.41023254]
[19.44231033 70.86566162]
[34.03888702 74.32109070]
[48.63545990 77.77651978]
[56.80359268 71.65473938]
[67.21137238 71.02150726]
[76.44213867 76.32628632]
[81.33277130 86.02941132]
[95.82621002 89.89468384]
[110.80798340 90.63399506]
[125.61155701 88.21445465]
[133.56777954 83.74536896]
[140.64059448 85.86663818]
[155.47677612 83.65588379]
[170.31297302 81.44512939]
[185.14915466 79.23437500]
[199.98535156 77.02362061]
[214.82154846 74.81286621]
[229.65773010 72.60211182]
[242.16685486 62.91538239]
[255.89547729 68.69239807]
[270.73168945 66.48164368]
[285.56787109 64.27088928]
[300.40405273 62.06013107]
[315.24023438 59.84937668]
[330.07644653 57.63862228]
[338.09481812 53.28205872]
[345.13705444 55.50275421]
[360.00292969 53.50122070]
[368.08187866 49.25805283]
[375.09213257 51.57773209]
[389.98471069 49.78582001]
[402.76174927 40.45534515]
[416.32220459 46.61682892]
[431.21478271 44.82491684]
[446.10736084 43.03300476]
[460.99993896 41.24109268]
[475.89251709 39.44917679]
[490.78512573 37.65726471]
[505.67770386 35.86535263]
[520.57025146 34.07344055]
[535.46289062 32.28152847]
[547.84753418 13.50806808]
[569.80065918 10.11696625]
[586.84228516 23.92959785]
[601.53039551 20.88675499]
[616.21850586 17.84391022]
[630.90661621 14.80106640]
[645.59478760 11.75822258]
[660.28289795 8.71537781]
[674.92669678 5.46591854]
[689.52325439 2.01048851]
[704.11987305 -1.44494164]
[705.58398438 -16.51594353]
[711.86456299 -30.29392433]
[722.28039551 -41.28435135]
[735.70159912 -48.29506683]
[750.67236328 -50.56559753]
[765.56872559 -47.84965897]
[778.77490234 -40.44184875]
[788.85833740 -29.14571762]
[794.72534180 -15.18658066]
[795.73937988 -0.07862274]
[791.79052734 14.53935909]
[783.30712891 27.08171463]
[771.20941162 36.18794250]
[756.80957031 40.87026978]
[741.66967773 40.62078857]
[727.43194580 35.46656418]
[715.64080811 25.96668816]
[707.57525635 13.15163326]
[692.97869873 16.60706329]
[678.38214111 20.06249428]
[675.15979004 23.57672691]
[669.69873047 25.10935593]
[663.32574463 23.40350533]
[648.63763428 26.44635010]
[633.94946289 29.48919487]
[619.26135254 32.53203964]
[604.57324219 35.57488251]
[589.88507080 38.61772537]
[588.20288086 46.41215515]
[584.29742432 53.40280151]
[578.49328613 58.96829605]
[571.28472900 62.60735703]
[563.29370117 63.98392487]
[555.21612549 62.95810318]
[547.76141357 59.60009384]
[541.58990479 54.18577194]
[537.25476074 47.17411423]
[522.36218262 48.96602631]
[507.46960449 50.75793839]
[492.57702637 52.54985046]
[477.68444824 54.34176254]
[462.79187012 56.13367462]
[447.89926147 57.92558670]
[433.00668335 59.71749878]
[418.11410522 61.50941086]
[406.40228271 70.71171570]
[391.77664185 64.67840576]
[376.88403320 66.47031403]
[362.00445557 68.36708069]
[347.13858032 70.36861420]
[332.28720093 72.47481537]
[317.45098877 74.68556976]
[302.61480713 76.89632416]
[287.77862549 79.10707855]
[272.94244385 81.31783295]
[258.10623169 83.52858734]
[246.65830994 93.05718231]
[231.86848450 87.43830109]
[217.03230286 89.64905548]
[202.19610596 91.85980988]
[187.35992432 94.07056427]
[172.52372742 96.28131866]
[157.68753052 98.49207306]
[142.85134888 100.70282745]
[128.03109741 103.01803589]
[113.22751617 105.43756866]
[102.36267090 115.77948761]
[99.21644592 130.44581604]
[96.07021332 145.11215210]
[92.92398071 159.77847290]
[89.77775574 174.44480896]
[102.28920746 166.17053223]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 16]
[7 15]
[8 14]
[9 13]
[17 221]
[18 220]
[19 219]
[20 218]
[21 217]
[24 106]
[25 105]
[27 101]
[28 100]
[29 99]
[30 98]
[31 97]
[32 96]
[37 92]
[38 91]
[39 90]
[40 89]
[41 88]
[44 61]
[45 60]
[46 59]
[47 58]
[48 57]
[49 56]
[64 79]
[65 78]
[66 77]
[67 76]
[107 216]
[108 215]
[110 214]
[111 213]
[112 212]
[113 211]
[114 210]
[115 209]
[116 208]
[118 206]
[119 205]
[120 204]
[121 203]
[122 202]
[123 201]
[125 200]
[126 199]
[128 198]
[129 197]
[131 195]
[132 194]
[133 193]
[134 192]
[135 191]
[136 190]
[137 189]
[138 188]
[139 187]
[142 178]
[143 177]
[144 176]
[145 175]
[146 174]
[147 173]
[148 170]
[149 169]
[150 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
