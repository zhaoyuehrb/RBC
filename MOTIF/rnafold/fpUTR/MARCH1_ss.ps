%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:26:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGUGUUCCUGCGGCCAGCGGGACUGAGAGCUGGGACUUAAGACGCCAGGAGGGUCCUGCGCUCACGGGAAAUGUACCCCAAAAGAACUCUGAGAGAAUAUACUCAACUGUCCUGCUGUGAUUAAACAAGACUGCUGUAUUUUAAUUUCAGAAAUUGAAAAGGGAUAAGAGGAAGGAGAAA\
) } def
/len { sequence length } bind def

/coor [
[207.57734680 428.19567871]
[210.62548828 413.39025879]
[217.90364075 400.14187622]
[228.76464844 389.62854004]
[242.24272156 382.78509521]
[239.68028259 368.00558472]
[237.11782837 353.22610474]
[234.55538940 338.44659424]
[231.99293518 323.66708374]
[229.43049622 308.88757324]
[226.86804199 294.10806274]
[221.57676697 280.07229614]
[213.74478149 267.27932739]
[205.91279602 254.48637390]
[198.08079529 241.69340515]
[190.24880981 228.90045166]
[180.83905029 217.21897888]
[170.00730896 206.84242249]
[159.17555237 196.46585083]
[148.34381104 186.08927917]
[137.51205444 175.71270752]
[126.68031311 165.33613586]
[115.84856415 154.95956421]
[105.01681519 144.58299255]
[94.18506622 134.20642090]
[80.29020691 128.55551147]
[65.29075623 128.42675781]
[50.29130936 128.29800415]
[35.29186249 128.16925049]
[21.42578697 135.78781128]
[8.76539612 127.94155121]
[-6.23405075 127.81279755]
[-14.86712933 130.87448120]
[-21.48930740 127.55088043]
[-36.48433304 127.16466522]
[-51.47936249 126.77844238]
[-66.47438812 126.39222717]
[-81.46941376 126.00600433]
[-96.46443939 125.61978912]
[-111.45947266 125.23356628]
[-118.38790131 138.83355713]
[-130.53620911 148.07374573]
[-145.49235535 151.11950684]
[-160.28677368 147.36610413]
[-171.98200989 137.55874634]
[-178.25598145 123.64472961]
[-177.86299133 108.38667297]
[-170.88105774 94.81407928]
[-158.69645691 85.62179565]
[-143.72843933 82.63495636]
[-128.94891357 86.44660187]
[-117.29238892 96.29992676]
[-111.07324982 110.23854065]
[-96.07822418 110.62476349]
[-81.08319855 111.01097870]
[-66.08817291 111.39720154]
[-51.09314346 111.78341675]
[-36.09811401 112.16963959]
[-21.10308838 112.55585480]
[-6.10529852 112.81334686]
[8.89414883 112.94210052]
[21.68736458 105.31433105]
[35.42061615 113.16979980]
[50.42006302 113.29855347]
[65.41950989 113.42730713]
[80.41896057 113.55605316]
[70.72990417 102.22869110]
[68.63388824 84.71080017]
[60.36736298 72.19422913]
[52.10083771 59.67765427]
[36.59379196 59.11984253]
[24.39698410 49.52726364]
[20.20034027 34.58846283]
[25.61754990 20.04771233]
[38.56558990 11.49622631]
[54.06567001 12.22222710]
[66.15769958 21.94655228]
[70.19203949 36.93000031]
[64.61740875 51.41112900]
[72.88393402 63.92770004]
[81.15045929 76.44427490]
[88.56111908 75.29009247]
[86.25276184 60.46877670]
[83.94439697 45.64745712]
[81.63603973 30.82613945]
[79.32792664 16.00478172]
[94.14932251 13.69691563]
[96.45735931 28.51778030]
[98.76571655 43.33909988]
[101.07407379 58.16041565]
[103.38243866 72.98173523]
[110.79309845 71.82755280]
[114.86160278 57.38985443]
[118.93011475 42.95215225]
[122.99861908 28.51445007]
[113.28410339 16.41454315]
[112.57067108 0.91387641]
[121.13265228 -12.02722454]
[135.67779541 -17.43264389]
[150.61318970 -13.22388649]
[160.19587708 -1.01930654]
[160.74110413 14.48818684]
[152.03924561 27.33564568]
[137.43632507 32.58295822]
[133.36781311 47.02066040]
[129.29930115 61.45836258]
[125.23079681 75.89606476]
[131.29737854 92.75756836]
[127.97563934 108.89208221]
[117.68698120 119.84803772]
[104.56163788 123.37467194]
[115.39338684 133.75125122]
[126.22513580 144.12780762]
[137.05688477 154.50437927]
[147.88862610 164.88095093]
[158.72038269 175.25752258]
[169.55212402 185.63409424]
[180.38388062 196.01066589]
[191.21562195 206.38723755]
[187.26376343 191.91717529]
[188.72256470 176.98828125]
[195.40084839 163.55696106]
[206.42346191 153.38334656]
[220.34588623 147.80068970]
[235.34362793 147.54058838]
[249.45126343 152.63710022]
[260.82000732 162.42237854]
[267.96005249 175.61404419]
[269.93563843 190.48336792]
[266.48791504 205.08177185]
[258.06869507 217.49613953]
[245.78129578 226.09960938]
[231.23594666 229.76472473]
[216.33880615 228.01113892]
[203.04177856 221.06845093]
[210.87376404 233.86141968]
[218.70574951 246.65438843]
[226.53775024 259.44735718]
[234.36973572 272.24032593]
[245.31790161 266.65713501]
[260.54330444 269.28646851]
[273.90255737 276.10778809]
[287.26181030 282.92910767]
[300.62106323 289.75045776]
[313.98031616 296.57177734]
[327.33953857 303.39309692]
[340.69879150 310.21441650]
[354.05804443 317.03573608]
[367.41729736 323.85708618]
[384.27349854 325.67504883]
[387.19284058 342.37573242]
[371.95294189 349.80422974]
[360.59597778 337.21633911]
[347.23672485 330.39498901]
[333.87747192 323.57366943]
[320.51821899 316.75234985]
[307.15896606 309.93103027]
[293.79971313 303.10968018]
[280.44049072 296.28836060]
[267.08123779 289.46704102]
[253.72198486 282.64572144]
[241.64755249 291.54562378]
[244.21000671 306.32513428]
[246.77244568 321.10461426]
[249.33489990 335.88412476]
[251.89733887 350.66363525]
[254.45979309 365.44314575]
[257.02224731 380.22265625]
[272.01742554 382.12945557]
[285.78369141 388.37295532]
[297.09695435 398.39801025]
[304.95123291 411.31317139]
[308.64816284 425.97006226]
[307.85897827 441.06536865]
[302.65386963 455.25686646]
[293.49566650 467.28262329]
[281.19873047 476.07333374]
[266.85647583 480.84732056]
[251.74420166 481.18008423]
[237.20570374 477.04208374]
[224.53370667 468.80117798]
[214.85502625 457.19024658]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 168]
[6 167]
[7 166]
[8 165]
[9 164]
[10 163]
[11 162]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 119]
[18 118]
[19 117]
[20 116]
[21 115]
[22 114]
[23 113]
[24 112]
[25 111]
[26 66]
[27 65]
[28 64]
[29 63]
[31 61]
[32 60]
[34 59]
[35 58]
[36 57]
[37 56]
[38 55]
[39 54]
[40 53]
[68 81]
[69 80]
[70 79]
[92 107]
[93 106]
[94 105]
[95 104]
[141 161]
[142 160]
[143 159]
[144 158]
[145 157]
[146 156]
[147 155]
[148 154]
[149 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
