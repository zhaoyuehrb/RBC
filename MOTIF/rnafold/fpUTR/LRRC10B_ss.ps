%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:10:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGGCGCGCGGCGGCGGUGCCCCAAGUGGGUGCCUCCUCCCGGCCCCGCACGGCCCCCCUCCCGGCGCGGGGGAAGGCCGGGGCGGGGGGCCCGGGGGCCGGCGCGGCUCCGGCACCGUCGGGGCGGCUGGGGGGCGGCCGGGGCGGGGCGAUGCCUGGCGGUGGCAGUGGCGGCGGCCCCGGCCGGGGCCCGUGACC\
) } def
/len { sequence length } bind def

/coor [
[323.97692871 578.20098877]
[327.77377319 567.99621582]
[320.75482178 554.73974609]
[307.96139526 547.11230469]
[308.34185791 531.29571533]
[301.32290649 518.03918457]
[295.40939331 513.59490967]
[294.29968262 504.51892090]
[287.48980713 491.15380859]
[280.67996216 477.78872681]
[267.98388672 475.55859375]
[258.75466919 466.28277588]
[256.52297974 453.19189453]
[262.32507324 441.03070068]
[255.72598267 427.56030273]
[249.12690735 414.08987427]
[242.52781677 400.61947632]
[229.98028564 392.59396362]
[230.85734558 376.79708862]
[224.25827026 363.32669067]
[217.65917969 349.85626221]
[211.06008911 336.38586426]
[204.46099854 322.91543579]
[197.86190796 309.44503784]
[181.61225891 307.14456177]
[169.81532288 295.49740601]
[167.25659180 278.95010376]
[175.13952637 263.98977661]
[168.32966614 250.62469482]
[161.51980591 237.25959778]
[148.84776306 229.43217468]
[149.47660828 213.62347412]
[142.66674805 200.25837708]
[135.85688782 186.89328003]
[129.04702759 173.52818298]
[122.23717499 160.16307068]
[115.42731476 146.79797363]
[108.61745453 133.43287659]
[101.80760193 120.06778717]
[84.27508545 112.59803009]
[80.80982971 93.85828400]
[69.25212860 84.29692078]
[57.69443130 74.73556519]
[46.13673401 65.17420197]
[34.57903290 55.61284256]
[23.02133560 46.05148315]
[11.46363735 36.49012375]
[-0.09406172 26.92876244]
[-11.49619198 30.33196068]
[-23.00666428 27.83001328]
[-31.78661919 20.15849304]
[-35.72803497 9.31307888]
[-33.95921707 -1.96857595]
[-45.21088028 -11.88825417]
[-56.46254730 -21.80793190]
[-67.71421051 -31.72760963]
[-78.96588135 -41.64728928]
[-90.21754456 -51.56696701]
[-101.46921539 -61.48664474]
[-112.72087860 -71.40631866]
[-124.05010223 -81.23732758]
[-135.45619202 -90.97904205]
[-146.86228943 -100.72076416]
[-158.26837158 -110.46248627]
[-169.67446899 -120.20420837]
[-181.08055115 -129.94592285]
[-192.48664856 -139.68765259]
[-206.93759155 -134.48518372]
[-222.05085754 -137.22097778]
[-233.76106262 -147.15911865]
[-238.91821289 -161.62631226]
[-236.13505554 -176.73092651]
[-226.16024780 -188.40992737]
[-211.67697144 -193.52169800]
[-196.58114624 -190.69120789]
[-184.93348694 -180.67984009]
[-179.86712646 -166.18061829]
[-182.74491882 -151.09373474]
[-171.33883667 -141.35202026]
[-159.93273926 -131.61029053]
[-148.52665710 -121.86857605]
[-137.12055969 -112.12685394]
[-125.71447754 -102.38513184]
[-114.30838776 -92.64341736]
[-107.17407990 -90.68812561]
[-102.80120087 -82.65798950]
[-91.54953766 -72.73831177]
[-80.29786682 -62.81863022]
[-69.04620361 -52.89895248]
[-57.79453659 -42.97927475]
[-46.54286957 -33.05959702]
[-35.29120255 -23.13991928]
[-24.03953743 -13.22024155]
[-5.87896252 -15.47255516]
[8.41156292 -3.53756309]
[9.46729851 15.37106419]
[21.02499771 24.93242455]
[32.58269501 34.49378204]
[44.14039230 44.05514526]
[55.69809341 53.61650467]
[67.25579071 63.17786407]
[78.81349182 72.73921967]
[90.37118530 82.30058289]
[96.53579712 80.15100098]
[103.06410217 80.08531189]
[110.69972229 67.17418671]
[111.06475830 51.35718918]
[124.20328522 44.34090042]
[131.83891296 31.42976761]
[139.47453308 18.51863861]
[147.11015320 5.60750723]
[154.74577332 -7.30362320]
[162.38139343 -20.21475410]
[170.01701355 -33.12588501]
[177.65263367 -46.03701401]
[180.51107788 -62.74825668]
[197.36053467 -64.62766266]
[203.83088684 -48.95696259]
[190.56376648 -38.40139389]
[182.92814636 -25.49026299]
[175.29252625 -12.57913208]
[167.65690613 0.33199823]
[160.02128601 13.24312878]
[152.38566589 26.15425873]
[144.75004578 39.06538773]
[137.11442566 51.97652054]
[137.29553223 66.87002563]
[123.61085510 74.80980682]
[115.97522736 87.72093964]
[120.13908386 100.63289642]
[115.17269897 113.25792694]
[121.98255157 126.62302399]
[128.79241943 139.98812866]
[135.60226440 153.35322571]
[142.41212463 166.71832275]
[149.22198486 180.08341980]
[156.03184509 193.44851685]
[162.84170532 206.81361389]
[176.00083923 215.59700012]
[174.88490295 230.44973755]
[181.69476318 243.81483459]
[188.50462341 257.17993164]
[202.24630737 258.31854248]
[213.54003906 266.03915405]
[219.49440002 278.23550415]
[218.64926147 291.67291260]
[211.33232117 302.84594727]
[217.93141174 316.31634521]
[224.53050232 329.78677368]
[231.12959290 343.25717163]
[237.72868347 356.72760010]
[244.32775879 370.19799805]
[257.34732056 379.18701172]
[255.99822998 394.02038574]
[262.59732056 407.49078369]
[269.19641113 420.96121216]
[275.79550171 434.43161011]
[292.44345093 439.79031372]
[299.92181396 455.22555542]
[294.04504395 470.97885132]
[300.85491943 484.34396362]
[307.66476440 497.70904541]
[314.57937622 511.02026367]
[321.59832764 524.27673340]
[334.89379883 532.85235596]
[334.01132202 547.72076416]
[341.03027344 560.97729492]
[358.57235718 570.89709473]
[357.04785156 590.16784668]
[364.47973633 603.19732666]
[378.03802490 611.35107422]
[377.62298584 626.23992920]
[385.05487061 639.26940918]
[392.48675537 652.29888916]
[399.91864014 665.32830811]
[405.43685913 668.99603271]
[407.89822388 674.13092041]
[407.37194824 678.88586426]
[414.39089966 692.14233398]
[421.40985107 705.39886475]
[428.42880249 718.65533447]
[435.44775391 731.91180420]
[449.61978149 740.16320801]
[449.28933716 756.55902100]
[434.79632568 764.23266602]
[421.04992676 755.29016113]
[422.19125366 738.93072510]
[415.17230225 725.67425537]
[408.15335083 712.41778564]
[401.13442993 699.16131592]
[394.11547852 685.90478516]
[386.88916016 672.76019287]
[379.45727539 659.73071289]
[372.02539062 646.70129395]
[364.59353638 633.67181396]
[351.56683350 626.45001221]
[351.45028687 610.62921143]
[344.01840210 597.59973145]
[333.94921875 595.79748535]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 167]
[3 166]
[5 164]
[6 163]
[8 162]
[9 161]
[10 160]
[14 157]
[15 156]
[16 155]
[17 154]
[19 152]
[20 151]
[21 150]
[22 149]
[23 148]
[24 147]
[28 142]
[29 141]
[30 140]
[32 138]
[33 137]
[34 136]
[35 135]
[36 134]
[37 133]
[38 132]
[39 131]
[41 103]
[42 102]
[43 101]
[44 100]
[45 99]
[46 98]
[47 97]
[48 96]
[53 93]
[54 92]
[55 91]
[56 90]
[57 89]
[58 88]
[59 87]
[60 86]
[61 84]
[62 83]
[63 82]
[64 81]
[65 80]
[66 79]
[67 78]
[105 129]
[106 128]
[108 126]
[109 125]
[110 124]
[111 123]
[112 122]
[113 121]
[114 120]
[115 119]
[169 198]
[170 197]
[172 195]
[173 194]
[174 193]
[175 192]
[178 191]
[179 190]
[180 189]
[181 188]
[182 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
