%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:02:20 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (EIF4A2)
} def

/sequence { (\
GCUGUCUUUUCAGUCGGGCGCUGAGUGGUUUUUCGGAUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 14 0.223734595 ubox
1 19 0.302733034 ubox
1 21 0.092738702 ubox
1 26 0.009582382 ubox
1 29 0.036915629 ubox
2 13 0.248362521 ubox
2 17 0.226595983 ubox
2 18 0.261207608 ubox
2 20 0.098351711 ubox
2 25 0.009936584 ubox
2 28 0.040341904 ubox
2 36 0.823989113 ubox
3 12 0.248920808 ubox
3 16 0.273797275 ubox
3 17 0.207087077 ubox
3 20 0.178944440 ubox
3 24 0.007768336 ubox
3 27 0.039380757 ubox
3 35 0.826786002 ubox
4 11 0.248875877 ubox
4 14 0.011432205 ubox
4 15 0.314469260 ubox
4 19 0.261969532 ubox
4 26 0.034473399 ubox
4 29 0.027990927 ubox
4 34 0.825317085 ubox
4 38 0.123833248 ubox
5 13 0.009797900 ubox
5 17 0.008842676 ubox
5 18 0.261846013 ubox
5 25 0.007851307 ubox
5 28 0.047640698 ubox
5 36 0.011517729 ubox
5 37 0.131106819 ubox
6 13 0.327145830 ubox
6 16 0.015311667 ubox
6 17 0.262026549 ubox
6 18 0.009375552 ubox
6 25 0.020503803 ubox
6 27 0.055688905 ubox
6 28 0.164039082 ubox
6 35 0.014650278 ubox
6 36 0.132412694 ubox
7 12 0.299295347 ubox
7 13 0.025498838 ubox
7 16 0.258188191 ubox
7 17 0.009339460 ubox
7 24 0.013614373 ubox
7 25 0.004542456 ubox
7 27 0.164679084 ubox
7 28 0.017306222 ubox
7 35 0.127206081 ubox
7 37 0.006248591 ubox
8 12 0.024298832 ubox
8 16 0.011542222 ubox
8 23 0.006518235 ubox
8 25 0.011049435 ubox
8 27 0.017510980 ubox
8 28 0.017303869 ubox
8 35 0.004086996 ubox
8 36 0.006696848 ubox
8 37 0.004132059 ubox
9 16 0.004796030 ubox
9 18 0.006481837 ubox
9 24 0.009364876 ubox
9 25 0.192211598 ubox
9 27 0.010428263 ubox
9 28 0.025982744 ubox
9 35 0.006711759 ubox
9 36 0.004387979 ubox
9 37 0.004583723 ubox
10 17 0.009502193 ubox
10 18 0.003504184 ubox
10 24 0.207739016 ubox
10 27 0.005542293 ubox
10 28 0.804880545 ubox
10 36 0.004797406 ubox
10 37 0.005200148 ubox
11 16 0.013604613 ubox
11 17 0.004748202 ubox
11 23 0.209518970 ubox
11 27 0.838410543 ubox
11 35 0.004704871 ubox
11 36 0.005524832 ubox
12 22 0.209528847 ubox
12 26 0.837051790 ubox
13 19 0.008035531 ubox
13 21 0.209536438 ubox
13 38 0.016954551 ubox
14 18 0.007708197 ubox
14 20 0.204108434 ubox
14 24 0.836785181 ubox
14 36 0.037713794 ubox
14 37 0.023659844 ubox
15 23 0.839146915 ubox
15 27 0.003718181 ubox
15 35 0.079568576 ubox
15 36 0.028778237 ubox
16 22 0.832755763 ubox
16 30 0.021161882 ubox
16 31 0.021944211 ubox
16 33 0.005470254 ubox
16 34 0.080135906 ubox
16 39 0.033305106 ubox
17 21 0.814926120 ubox
17 29 0.028511453 ubox
17 30 0.031712953 ubox
17 31 0.003920985 ubox
17 32 0.013216682 ubox
17 33 0.074259621 ubox
17 34 0.027934906 ubox
17 38 0.031133445 ubox
17 39 0.025668836 ubox
18 26 0.014916237 ubox
18 29 0.043489874 ubox
18 30 0.004958121 ubox
18 31 0.017678351 ubox
18 32 0.060987483 ubox
18 33 0.026352454 ubox
18 38 0.025838157 ubox
19 25 0.015495490 ubox
19 27 0.040418287 ubox
19 28 0.043947363 ubox
19 35 0.010748838 ubox
20 26 0.041138263 ubox
20 29 0.073407635 ubox
20 34 0.010839783 ubox
21 25 0.041006727 ubox
21 28 0.074685592 ubox
21 36 0.478403553 ubox
22 27 0.069884947 ubox
22 35 0.484298239 ubox
23 30 0.006187290 ubox
23 31 0.006408815 ubox
23 32 0.011221287 ubox
23 33 0.006429163 ubox
23 34 0.487847586 ubox
23 39 0.013623501 ubox
24 29 0.006452830 ubox
24 30 0.006620405 ubox
24 31 0.012353452 ubox
24 32 0.018565605 ubox
24 33 0.486686988 ubox
24 38 0.013689809 ubox
25 29 0.005342051 ubox
25 30 0.016047512 ubox
25 31 0.024310320 ubox
25 32 0.455159520 ubox
25 38 0.004729378 ubox
26 35 0.033120324 ubox
26 37 0.004903600 ubox
27 34 0.044940455 ubox
27 39 0.044942714 ubox
28 32 0.003567153 ubox
28 33 0.040083350 ubox
28 38 0.050162050 ubox
29 36 0.005790434 ubox
29 37 0.051245159 ubox
30 35 0.005921615 ubox
30 36 0.050593283 ubox
30 37 0.010384965 ubox
31 35 0.037335173 ubox
31 36 0.010503538 ubox
31 37 0.007054498 ubox
32 36 0.006890171 ubox
2 36 0.9500000 lbox
3 35 0.9500000 lbox
4 34 0.9500000 lbox
10 28 0.9500000 lbox
11 27 0.9500000 lbox
12 26 0.9500000 lbox
14 24 0.9500000 lbox
15 23 0.9500000 lbox
16 22 0.9500000 lbox
17 21 0.9500000 lbox
showpage
end
%%EOF
