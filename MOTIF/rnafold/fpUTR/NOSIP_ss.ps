%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:22:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCCGGUGUCGGGGCACAGUUGAAGAAGCGACCGAGGGACUGGGAGUCGUUAGUGAGAGUUUCACUCUUGUUGCCUAGGCUGGAGUGCAAUGGUGCGAUCUUGGCUCAUCACGACCUUCGCCUCCCAGGUUCAAGUGAUUGUCCCAUUUCAGCCUCCCGAGUAGCUGGGAUUACAGG\
) } def
/len { sequence length } bind def

/coor [
[104.80171967 309.24639893]
[116.89557648 299.66818237]
[115.31892395 284.75128174]
[113.74226379 269.83438110]
[112.16561127 254.91746521]
[110.58895874 240.00056458]
[109.01230621 225.08364868]
[107.43565369 210.16674805]
[94.93490601 195.43695068]
[103.32662201 177.12918091]
[101.22743225 162.27679443]
[99.12825012 147.42440796]
[97.02906799 132.57202148]
[94.92988586 117.71962738]
[89.65148163 131.76022339]
[89.88922119 146.75834656]
[84.20034790 160.63771057]
[73.50460052 171.15440369]
[59.53118134 176.60816956]
[44.53921509 176.11729431]
[30.95248985 169.76113892]
[20.96760368 158.56729126]
[16.19883919 144.34552002]
[17.41717529 129.39508057]
[24.42564011 116.13304901]
[36.09115601 106.70353699]
[50.52773285 102.63103485]
[65.40267944 104.57440186]
[79.95287323 100.92858887]
[65.43598175 97.15235901]
[50.91909027 93.37612915]
[36.40219879 89.59990692]
[21.88530922 85.82367706]
[12.76230526 86.69165802]
[7.14792776 81.85169220]
[-7.30045462 77.82128143]
[-21.74883652 73.79086304]
[-36.19721985 69.76044464]
[-50.64559937 65.73002625]
[-57.17943192 67.01239014]
[-62.56067276 65.07410431]
[-65.52559662 61.29632187]
[-79.82363892 56.76132965]
[-94.12167358 52.22634125]
[-108.41970825 47.69134903]
[-122.71774292 43.15636063]
[-138.21134949 46.35932922]
[-148.00376892 35.13624573]
[-162.30180359 30.60125351]
[-174.71066284 39.91790771]
[-190.22631836 40.12783813]
[-202.88269043 31.15031815]
[-207.81314087 16.43739128]
[-203.12182617 1.64647710]
[-190.61264038 -7.53501654]
[-175.09561157 -7.57661772]
[-162.53738403 1.53766990]
[-157.76681519 16.30321693]
[-143.46878052 20.83820724]
[-128.99787903 17.31086540]
[-118.18275452 28.85832214]
[-103.88471985 33.39331436]
[-89.58668518 37.92830276]
[-75.28864288 42.46329498]
[-60.99060822 46.99828339]
[-46.61518478 51.28164673]
[-32.16680145 55.31206512]
[-17.71842003 59.34247971]
[-3.27003813 63.37289810]
[11.17834377 67.40331268]
[25.66153717 71.30678558]
[40.17842865 75.08301544]
[54.69532013 78.85924530]
[69.21221161 82.63546753]
[83.72909546 86.41169739]
[93.16619110 82.94328308]
[101.75139618 84.54806519]
[107.25738525 89.54504395]
[119.59062958 81.00740814]
[131.92387390 72.46977997]
[144.25711060 63.93215179]
[156.59036255 55.39452362]
[168.92359924 46.85689163]
[181.25685120 38.31926346]
[193.59008789 29.78163338]
[205.92332458 21.24400330]
[218.25657654 12.70637417]
[230.58981323 4.16874456]
[232.32623291 0.11688954]
[235.00302124 -2.85720229]
[238.16003418 -4.58924532]
[241.33128357 -5.08340836]
[244.10124207 -4.49929523]
[257.00299072 -12.15077305]
[262.80911255 -19.24101067]
[270.19897461 -19.82103539]
[283.23300171 -27.24490929]
[296.26702881 -34.66878510]
[309.30108643 -42.09265900]
[322.33511353 -49.51653290]
[335.36914062 -56.94041061]
[333.49023438 -78.95186615]
[347.76690674 -98.97351837]
[374.02078247 -105.67149353]
[384.10330200 -116.77747345]
[387.56869507 -125.26119995]
[394.46154785 -127.98789978]
[404.73742676 -138.91522217]
[405.68392944 -154.93032837]
[418.87768555 -164.05744934]
[434.19757080 -159.29502869]
[439.89147949 -144.29640198]
[431.59155273 -130.56721497]
[415.66473389 -128.63934326]
[405.38885498 -117.71202087]
[395.20925903 -106.69494629]
[385.12673950 -95.58897400]
[389.12097168 -89.24104309]
[404.11010742 -89.81161499]
[397.10940552 -76.54518127]
[401.10363770 -70.19725800]
[415.47906494 -74.48062134]
[429.85446167 -78.76398468]
[444.22988892 -83.04734802]
[457.68292236 -93.36490631]
[471.32147217 -83.29380798]
[465.41946411 -67.40032959]
[448.51327515 -68.67192078]
[434.13784790 -64.38855743]
[419.76242065 -60.10519409]
[405.38699341 -55.82183075]
[399.30789185 -44.75949860]
[390.47662354 -36.43700027]
[379.95230103 -31.44686317]
[368.88500977 -30.00802994]
[358.39279175 -31.96870041]
[349.44921875 -36.84746933]
[342.79302979 -43.90637589]
[329.75897217 -36.48249817]
[316.72494507 -29.05862427]
[303.69091797 -21.63474846]
[290.65689087 -14.21087456]
[277.62283325 -6.78699923]
[264.65444946 0.75096703]
[251.75271606 8.40244484]
[239.12744141 16.50198746]
[226.79420471 25.03961754]
[214.46095276 33.57724762]
[202.12771606 42.11487579]
[189.79447937 50.65250397]
[177.46122742 59.19013596]
[165.12799072 67.72776794]
[152.79473877 76.26539612]
[140.46150208 84.80302429]
[128.12826538 93.34065247]
[115.79501343 101.87828064]
[109.78227234 115.62044525]
[111.88146210 130.47282410]
[113.98064423 145.32522583]
[116.07982635 160.17761230]
[118.17900848 175.02999878]
[127.26309204 181.07862854]
[131.41796875 190.93211365]
[129.48823547 201.22651672]
[122.35256195 208.59008789]
[123.92921448 223.50700378]
[125.50586700 238.42390442]
[127.08251953 253.34082031]
[128.65917969 268.25772095]
[130.23582458 283.17462158]
[131.81248474 298.09155273]
[145.64149475 304.92980957]
[153.55853271 318.17080688]
[153.03730774 333.58938599]
[144.24414062 346.26547241]
[129.98490906 352.15423584]
[114.80965424 349.37658691]
[103.56077576 338.81884766]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 171]
[3 170]
[4 169]
[5 168]
[6 167]
[7 166]
[8 165]
[10 161]
[11 160]
[12 159]
[13 158]
[14 157]
[29 75]
[30 74]
[31 73]
[32 72]
[33 71]
[35 70]
[36 69]
[37 68]
[38 67]
[39 66]
[42 65]
[43 64]
[44 63]
[45 62]
[46 61]
[48 59]
[49 58]
[78 156]
[79 155]
[80 154]
[81 153]
[82 152]
[83 151]
[84 150]
[85 149]
[86 148]
[87 147]
[88 146]
[93 145]
[94 144]
[96 143]
[97 142]
[98 141]
[99 140]
[100 139]
[101 138]
[104 117]
[105 116]
[107 115]
[108 114]
[121 131]
[122 130]
[123 129]
[124 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
