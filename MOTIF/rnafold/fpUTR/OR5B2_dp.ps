%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:52:27 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR5B2)
} def

/sequence { (\
UUGCUUUAUUUCUCAUUGCUACAGGUCAUCUUAAGUUUCUCAGAUAAUACUG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 24 0.021852669 ubox
1 25 0.003599698 ubox
1 34 0.004816454 ubox
1 35 0.003448547 ubox
1 43 0.038405896 ubox
1 44 0.008485700 ubox
1 47 0.015259019 ubox
2 8 0.017151923 ubox
2 15 0.028294113 ubox
2 18 0.003508138 ubox
2 21 0.052298900 ubox
2 23 0.028412600 ubox
2 24 0.004827314 ubox
2 28 0.029889587 ubox
2 33 0.005492170 ubox
2 34 0.004398701 ubox
2 42 0.047373068 ubox
2 43 0.009065495 ubox
2 46 0.017845495 ubox
2 49 0.051281698 ubox
2 52 0.023451330 ubox
3 7 0.015712961 ubox
3 14 0.031168301 ubox
3 17 0.003824198 ubox
3 19 0.457281761 ubox
3 20 0.013695846 ubox
3 22 0.028513686 ubox
3 26 0.048276281 ubox
3 27 0.033373004 ubox
3 32 0.004712782 ubox
3 36 0.111792274 ubox
3 41 0.048510193 ubox
3 45 0.017593587 ubox
3 48 0.052245414 ubox
3 51 0.035312403 ubox
4 18 0.458035710 ubox
4 24 0.015353024 ubox
4 25 0.060068285 ubox
4 35 0.117565186 ubox
4 43 0.016693165 ubox
5 23 0.014953001 ubox
5 24 0.059265820 ubox
5 25 0.005610374 ubox
5 34 0.115035641 ubox
5 35 0.023413266 ubox
5 42 0.016093566 ubox
5 44 0.005676811 ubox
5 47 0.032570560 ubox
6 23 0.052080219 ubox
6 24 0.006616217 ubox
6 33 0.109216891 ubox
6 34 0.036761393 ubox
6 43 0.005848928 ubox
6 44 0.003590252 ubox
6 46 0.027452647 ubox
6 47 0.428565381 ubox
7 18 0.049452144 ubox
7 21 0.026343102 ubox
7 23 0.006616756 ubox
7 33 0.043980558 ubox
7 42 0.005372377 ubox
7 43 0.003533766 ubox
7 46 0.492160145 ubox
7 49 0.373136260 ubox
7 52 0.006428730 ubox
8 16 0.051728801 ubox
8 17 0.062218082 ubox
8 20 0.025856994 ubox
8 26 0.007551752 ubox
8 29 0.026496891 ubox
8 32 0.048680574 ubox
8 36 0.052494224 ubox
8 45 0.496836789 ubox
8 48 0.398330599 ubox
8 51 0.006663956 ubox
9 15 0.051940905 ubox
9 25 0.007902203 ubox
9 28 0.027286255 ubox
9 34 0.008833618 ubox
9 35 0.053807728 ubox
9 43 0.006895088 ubox
9 44 0.489167698 ubox
9 47 0.399397199 ubox
10 24 0.007799444 ubox
10 33 0.009910442 ubox
10 34 0.053557435 ubox
10 35 0.005595389 ubox
10 42 0.008774846 ubox
10 43 0.481588687 ubox
10 44 0.035863378 ubox
10 46 0.368630354 ubox
10 47 0.022954860 ubox
11 23 0.006969047 ubox
11 25 0.038031164 ubox
11 33 0.050072490 ubox
11 34 0.006211400 ubox
11 42 0.426911281 ubox
11 43 0.037632288 ubox
11 44 0.469632177 ubox
11 46 0.020989705 ubox
12 24 0.043404519 ubox
12 25 0.036021425 ubox
12 35 0.016298478 ubox
12 43 0.490290027 ubox
13 23 0.041299447 ubox
13 24 0.032408754 ubox
13 25 0.026377434 ubox
13 34 0.015773911 ubox
13 42 0.473252008 ubox
13 44 0.060123718 ubox
14 24 0.032553510 ubox
14 43 0.061886417 ubox
14 52 0.006038324 ubox
15 26 0.036014237 ubox
15 29 0.046896845 ubox
15 36 0.018084455 ubox
15 45 0.016450218 ubox
15 48 0.033313768 ubox
15 51 0.005529851 ubox
16 24 0.081819030 ubox
16 25 0.037220997 ubox
16 28 0.048093178 ubox
16 34 0.010967288 ubox
16 35 0.018606078 ubox
16 43 0.013863700 ubox
16 44 0.017059591 ubox
16 47 0.035282714 ubox
17 23 0.087589530 ubox
17 24 0.035812966 ubox
17 28 0.051282139 ubox
17 33 0.011736832 ubox
17 34 0.018139711 ubox
17 42 0.022829413 ubox
17 43 0.016831980 ubox
17 46 0.035983434 ubox
18 22 0.087106510 ubox
18 26 0.084229798 ubox
18 27 0.054607601 ubox
18 32 0.010659432 ubox
18 36 0.700960813 ubox
18 41 0.023923020 ubox
18 45 0.034702185 ubox
19 25 0.099758163 ubox
19 35 0.707675282 ubox
19 43 0.035901967 ubox
20 24 0.089921555 ubox
20 33 0.081089176 ubox
20 34 0.686622081 ubox
20 42 0.035046545 ubox
20 46 0.003817514 ubox
20 49 0.006949778 ubox
20 52 0.007726122 ubox
21 32 0.106490016 ubox
21 36 0.062400620 ubox
21 45 0.003416238 ubox
21 48 0.006766597 ubox
21 51 0.007819546 ubox
22 35 0.064089828 ubox
22 52 0.607243723 ubox
23 31 0.542101545 ubox
23 32 0.395836776 ubox
23 37 0.004223842 ubox
23 38 0.004733097 ubox
23 40 0.047124541 ubox
23 51 0.613746297 ubox
24 30 0.551978170 ubox
24 31 0.442665801 ubox
24 32 0.026759730 ubox
24 36 0.004622062 ubox
24 37 0.005325482 ubox
24 38 0.004428340 ubox
24 39 0.049473465 ubox
24 40 0.026826329 ubox
24 41 0.010255819 ubox
24 50 0.610827915 ubox
24 51 0.118620605 ubox
25 29 0.357692012 ubox
25 30 0.445898891 ubox
25 31 0.022175225 ubox
25 36 0.004757223 ubox
25 37 0.005341287 ubox
25 38 0.046440808 ubox
25 39 0.028622680 ubox
25 40 0.006970811 ubox
25 45 0.067415962 ubox
25 48 0.356073536 ubox
25 50 0.135515593 ubox
26 35 0.005394551 ubox
26 44 0.068571922 ubox
26 47 0.385050073 ubox
26 49 0.140800750 ubox
27 43 0.068776595 ubox
27 52 0.005521159 ubox
28 36 0.026682741 ubox
28 45 0.600262712 ubox
28 48 0.011515407 ubox
28 51 0.005150840 ubox
29 35 0.026410119 ubox
29 44 0.631486020 ubox
29 47 0.009418587 ubox
30 43 0.632503575 ubox
31 42 0.601593809 ubox
31 43 0.023794891 ubox
31 44 0.013561960 ubox
31 47 0.010752514 ubox
32 42 0.074300827 ubox
32 43 0.013800053 ubox
32 46 0.012051207 ubox
32 49 0.006359194 ubox
32 52 0.005267351 ubox
33 45 0.011102910 ubox
33 48 0.006384053 ubox
33 51 0.005074107 ubox
34 40 0.336551991 ubox
34 51 0.070287587 ubox
35 39 0.339437560 ubox
35 45 0.035523832 ubox
35 48 0.035891372 ubox
35 50 0.072593589 ubox
36 43 0.005622393 ubox
36 44 0.036778754 ubox
36 47 0.037298172 ubox
36 49 0.071232777 ubox
37 42 0.007033623 ubox
37 43 0.036685856 ubox
37 44 0.013052256 ubox
37 46 0.038596164 ubox
37 47 0.014187455 ubox
38 42 0.028207352 ubox
38 43 0.012737394 ubox
38 44 0.029852329 ubox
38 46 0.013977860 ubox
39 43 0.031284062 ubox
41 52 0.202193591 ubox
42 51 0.206716082 ubox
43 50 0.206152554 ubox
45 52 0.011703588 ubox
46 51 0.013143256 ubox
22 52 0.9500000 lbox
23 51 0.9500000 lbox
24 50 0.9500000 lbox
28 45 0.9500000 lbox
29 44 0.9500000 lbox
30 43 0.9500000 lbox
31 42 0.9500000 lbox
showpage
end
%%EOF
