%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:08:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUGGACUGCGUCGCGCUCGGGGGCCGCGCCGGGUAGCGUUUCUUUUUAGUGCCUGAGGCAGCUCUGGCUCGGAGAGCCUUUUGCUAGCCCCACGGGGACCUCUGUGCACGGAUGGACCCGCCCGGACCUGGCGGGAAGCGGCCUGGCAGGCGGCGGCCCCGGCGGCAUCAGCAGAGACAGGACGGGGCCGACGCCGCGGGCCCCUGAGGCGUGCGUGCCCACCGGGCCCGGCGGCGGCACC\
) } def
/len { sequence length } bind def

/coor [
[128.27568054 412.76293945]
[113.31590271 411.66519165]
[100.53780365 403.80899048]
[92.80576324 390.95535278]
[91.85301208 375.98565674]
[97.89311981 362.25549316]
[109.57212830 352.84268188]
[124.27203369 349.85723877]
[138.69764709 353.96838379]
[149.61483765 364.25378418]
[146.16950989 349.65481567]
[142.72419739 335.05584717]
[138.13909912 329.28054810]
[139.32978821 320.24676514]
[136.07272339 305.60464478]
[132.81565857 290.96252441]
[128.30528259 285.12869263]
[129.61219788 276.11096191]
[126.54390717 261.42813110]
[123.47563171 246.74528503]
[120.40734863 232.06245422]
[117.33906555 217.37962341]
[114.27078247 202.69679260]
[111.20250702 188.01394653]
[108.13422394 173.33111572]
[105.06594086 158.64828491]
[101.99766541 143.96543884]
[98.83492279 129.30267334]
[95.57785034 114.66055298]
[88.02217102 101.70247650]
[76.88362122 91.65595245]
[65.74506378 81.60943604]
[54.60651016 71.56291199]
[43.46796036 61.51638412]
[32.32940674 51.46986008]
[21.19085312 41.42333603]
[14.84974384 39.68138504]
[10.91650391 35.61770630]
[9.89910889 30.97186852]
[-0.97707462 20.64188004]
[-11.85325813 10.31189251]
[-22.72944069 -0.01809459]
[-33.60562515 -10.34808159]
[-44.48180771 -20.67807007]
[-55.35799026 -31.00805664]
[-66.23417664 -41.33804321]
[-81.56880188 -45.23159790]
[-85.46866608 -59.60659027]
[-96.34484863 -69.93657684]
[-107.22103119 -80.26656342]
[-118.09721375 -90.59654999]
[-133.67231750 -90.36414337]
[-144.55516052 -100.99515533]
[-144.68074036 -115.84506226]
[-155.55691528 -126.17504883]
[-168.26512146 -134.14384460]
[-182.30087280 -139.43513489]
[-197.94326782 -137.06324768]
[-207.12304688 -148.79273987]
[-221.15879822 -154.08403015]
[-235.19454956 -159.37530518]
[-249.26406860 -164.57612610]
[-263.36679077 -169.68624878]
[-277.46951294 -174.79638672]
[-291.35952759 -165.12594604]
[-308.11004639 -165.64321899]
[-321.11611938 -175.94575500]
[-325.36764526 -191.81182861]
[-339.53497314 -196.73995972]
[-353.70230103 -201.66810608]
[-367.86965942 -206.59623718]
[-382.03698730 -211.52436829]
[-398.98336792 -211.01750183]
[-404.16165161 -227.16128540]
[-390.08227539 -236.60624695]
[-377.10885620 -225.69171143]
[-362.94152832 -220.76358032]
[-348.77416992 -215.83543396]
[-334.60684204 -210.90730286]
[-320.43951416 -205.97917175]
[-310.24472046 -214.58058167]
[-297.02603149 -217.04655457]
[-284.21115112 -212.62902832]
[-275.17687988 -202.37905884]
[-272.35937500 -188.89909363]
[-258.25665283 -183.78897095]
[-244.15394592 -178.67883301]
[-236.81077576 -179.35356140]
[-229.90325928 -173.41105652]
[-215.86750793 -168.11978149]
[-201.83175659 -162.82849121]
[-187.19329834 -165.57884216]
[-177.00958252 -153.47088623]
[-162.97383118 -148.17959595]
[-152.29916382 -158.71769714]
[-157.40930176 -172.82041931]
[-162.51943970 -186.92312622]
[-167.62956238 -201.02584839]
[-178.94799805 -207.18092346]
[-182.92082214 -219.01512146]
[-177.93847656 -230.02282715]
[-182.86662292 -244.19015503]
[-187.88584900 -258.32546997]
[-192.99598694 -272.42819214]
[-198.10612488 -286.53091431]
[-203.21624756 -300.63363647]
[-216.10519409 -310.77301025]
[-213.50120544 -326.96408081]
[-198.08303833 -332.55087280]
[-185.71159363 -321.78616333]
[-189.11354065 -305.74374390]
[-184.00340271 -291.64105225]
[-178.89326477 -277.53833008]
[-173.78314209 -263.43560791]
[-168.56105042 -258.22918701]
[-168.69927979 -249.11830139]
[-163.77114868 -234.95095825]
[-149.89070129 -224.19790649]
[-153.52685547 -206.13597107]
[-148.41671753 -192.03326416]
[-143.30659485 -177.93054199]
[-138.19645691 -163.82783508]
[-136.66323853 -155.32257080]
[-137.70727539 -147.59986877]
[-140.79527283 -141.35369873]
[-145.22692871 -137.05123901]
[-134.35075378 -126.72124481]
[-119.51406097 -127.36029053]
[-108.33691406 -117.03914642]
[-107.76722717 -101.47273254]
[-96.89104462 -91.14274597]
[-86.01486206 -80.81275940]
[-75.13867188 -70.48277283]
[-60.58198547 -67.32808685]
[-55.90418625 -52.21422577]
[-45.02800369 -41.88423920]
[-34.15182114 -31.55425262]
[-23.27563667 -21.22426605]
[-12.39945316 -10.89427757]
[-1.52327037 -0.56429034]
[9.35291290 9.76569748]
[20.22909546 20.09568405]
[31.23737717 30.28478432]
[42.37593079 40.33130646]
[53.51448059 50.37783051]
[64.65303802 60.42435455]
[75.79158783 70.47087860]
[86.93013763 80.51740265]
[98.06869507 90.56392670]
[104.21955109 84.92021942]
[114.74344635 84.09632111]
[129.34240723 80.65100861]
[143.94137573 77.20568848]
[158.54034424 73.76037598]
[170.19439697 63.06020355]
[184.35856628 67.66734314]
[198.95753479 64.22203064]
[213.55648804 60.77671051]
[228.15545654 57.33139420]
[242.75442505 53.88608170]
[257.35339355 50.44076538]
[271.95236206 46.99544907]
[286.55133057 43.55013275]
[289.02966309 27.65370369]
[297.40225220 13.96068764]
[310.35995483 4.55535507]
[325.89840698 0.85597181]
[341.62802124 3.40099549]
[355.14154053 11.77092361]
[364.38232422 24.65710640]
[378.93569946 21.02411461]
[390.34661865 9.24602222]
[406.18414307 13.50099564]
[410.15600586 29.41188240]
[398.17630005 40.61092758]
[382.56869507 35.57751083]
[368.01528931 39.21050262]
[366.47781372 53.14824677]
[360.26519775 65.75243378]
[350.10427856 75.50222778]
[337.19982910 81.21348572]
[323.09140015 82.18254089]
[309.46984863 78.27284241]
[297.97467041 69.93377686]
[289.99664307 58.14909744]
[275.39767456 61.59441376]
[260.79870605 65.03972626]
[246.19973755 68.48504639]
[231.60076904 71.93035889]
[217.00181580 75.37567902]
[202.40284729 78.82099152]
[187.80387878 82.26631165]
[177.19404602 92.72004700]
[161.98565674 88.35933685]
[147.38668823 91.80465698]
[132.78773499 95.24996948]
[118.18876648 98.69528961]
[110.21997070 111.40348053]
[113.47703552 126.04560089]
[118.38500977 133.72277832]
[116.68049622 140.89717102]
[119.74877930 155.58000183]
[122.81706238 170.26283264]
[125.88533783 184.94566345]
[128.95362854 199.62850952]
[132.02189636 214.31134033]
[135.09017944 228.99417114]
[138.15846252 243.67701721]
[141.22674561 258.35983276]
[144.29502869 273.04269409]
[147.45776367 287.70547485]
[150.71482849 302.34756470]
[153.97190857 316.98968506]
[157.32316589 331.61053467]
[160.76847839 346.20950317]
[164.21379089 360.80847168]
[168.68344116 375.12707520]
[174.15498352 389.09353638]
[179.62654114 403.05999756]
[185.09809875 417.02645874]
[190.56964111 430.99291992]
[202.04280090 436.85452271]
[206.31901550 448.58251953]
[201.62174988 459.71484375]
[206.91304016 473.75061035]
[212.20431519 487.78634644]
[227.01803589 492.79513550]
[235.10220337 506.18096924]
[232.63973999 521.62341309]
[220.79333496 531.83111572]
[205.15649414 531.98425293]
[193.11247253 522.01049805]
[190.34806824 506.61920166]
[198.16856384 493.07763672]
[192.87728882 479.04187012]
[187.58599854 465.00613403]
[173.43330383 454.61404419]
[176.60317993 436.46447754]
[171.13163757 422.49801636]
[165.66007996 408.53155518]
[160.18852234 394.56509399]
[154.71696472 380.59860229]
[151.58923340 395.26889038]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 216]
[11 215]
[12 214]
[14 213]
[15 212]
[16 211]
[18 210]
[19 209]
[20 208]
[21 207]
[22 206]
[23 205]
[24 204]
[25 203]
[26 202]
[27 201]
[28 199]
[29 198]
[30 149]
[31 148]
[32 147]
[33 146]
[34 145]
[35 144]
[36 143]
[39 142]
[40 141]
[41 140]
[42 139]
[43 138]
[44 137]
[45 136]
[46 135]
[48 133]
[49 132]
[50 131]
[51 130]
[54 127]
[55 126]
[56 94]
[57 93]
[59 91]
[60 90]
[61 89]
[62 87]
[63 86]
[64 85]
[68 80]
[69 79]
[70 78]
[71 77]
[72 76]
[95 122]
[96 121]
[97 120]
[98 119]
[101 117]
[102 116]
[103 114]
[104 113]
[105 112]
[106 111]
[151 197]
[152 196]
[153 195]
[154 194]
[156 192]
[157 191]
[158 190]
[159 189]
[160 188]
[161 187]
[162 186]
[163 185]
[170 177]
[171 176]
[217 242]
[218 241]
[219 240]
[220 239]
[221 238]
[224 236]
[225 235]
[226 234]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
