%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:53:55 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PRSS36)
} def

/sequence { (\
GACAGAGCCCUGCAGGGAGCAGACCUUCACUUGGCUCUGCCUCCGCUGACUCUAGCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 43 0.356321988 ubox
1 52 0.011300822 ubox
2 42 0.340791958 ubox
2 51 0.010608405 ubox
3 12 0.127399796 ubox
3 39 0.958901707 ubox
4 11 0.127923842 ubox
4 38 0.963520146 ubox
4 53 0.166235688 ubox
5 10 0.127445236 ubox
5 37 0.964154758 ubox
5 43 0.017571551 ubox
5 52 0.174595932 ubox
6 36 0.964027739 ubox
6 42 0.017596527 ubox
6 47 0.004967860 ubox
6 51 0.174571996 ubox
6 53 0.012246302 ubox
7 13 0.023037986 ubox
7 35 0.964163506 ubox
7 41 0.017402257 ubox
7 46 0.005065695 ubox
7 50 0.173606184 ubox
7 52 0.012580566 ubox
7 56 0.054535736 ubox
7 58 0.126945701 ubox
8 12 0.023164213 ubox
8 16 0.004556642 ubox
8 17 0.029023645 ubox
8 34 0.963679209 ubox
8 45 0.005068844 ubox
8 55 0.054497578 ubox
8 57 0.127121586 ubox
9 15 0.005219866 ubox
9 16 0.029549242 ubox
9 17 0.005205681 ubox
9 33 0.962287761 ubox
9 34 0.030439753 ubox
10 15 0.029649643 ubox
10 16 0.005412233 ubox
10 22 0.245335144 ubox
10 33 0.042953350 ubox
10 55 0.126231475 ubox
11 15 0.004907565 ubox
11 21 0.245756001 ubox
11 29 0.886902173 ubox
11 48 0.011039158 ubox
11 54 0.125834237 ubox
12 20 0.245865012 ubox
12 28 0.896601916 ubox
12 32 0.029846611 ubox
12 40 0.004147924 ubox
12 46 0.146755267 ubox
12 53 0.123382142 ubox
12 56 0.004171084 ubox
12 58 0.013867683 ubox
13 19 0.245709225 ubox
13 33 0.022659265 ubox
13 39 0.004164986 ubox
13 45 0.146529007 ubox
13 48 0.192480576 ubox
13 55 0.003864148 ubox
13 57 0.014178660 ubox
14 26 0.721779286 ubox
14 27 0.543706708 ubox
14 31 0.082302375 ubox
14 32 0.045620978 ubox
14 38 0.004129547 ubox
14 42 0.004704779 ubox
14 47 0.192886323 ubox
14 51 0.008083199 ubox
15 25 0.736352126 ubox
15 26 0.556057970 ubox
15 27 0.016493400 ubox
15 28 0.009388933 ubox
15 30 0.085471976 ubox
15 31 0.046444350 ubox
15 37 0.004099257 ubox
15 41 0.005026508 ubox
15 43 0.121446404 ubox
15 44 0.094807241 ubox
15 46 0.192632523 ubox
15 50 0.008099633 ubox
15 59 0.003509653 ubox
16 24 0.735994623 ubox
16 25 0.557778170 ubox
16 26 0.017354368 ubox
16 27 0.007963383 ubox
16 28 0.112119792 ubox
16 30 0.046352585 ubox
16 36 0.004067525 ubox
16 40 0.004909349 ubox
16 42 0.121904852 ubox
16 43 0.094740518 ubox
16 44 0.212614379 ubox
16 58 0.003252448 ubox
17 24 0.555937045 ubox
17 25 0.017609097 ubox
17 26 0.006855458 ubox
17 27 0.112701474 ubox
17 28 0.049712531 ubox
17 32 0.003481728 ubox
17 35 0.004054783 ubox
17 41 0.125528300 ubox
17 42 0.084737379 ubox
17 43 0.213384257 ubox
18 26 0.113053356 ubox
18 27 0.049320606 ubox
18 31 0.003566600 ubox
18 38 0.004805450 ubox
18 42 0.213142508 ubox
19 25 0.112518592 ubox
19 26 0.039578772 ubox
19 30 0.003562719 ubox
19 37 0.004818958 ubox
19 40 0.218094832 ubox
19 41 0.150764755 ubox
20 33 0.003822837 ubox
20 39 0.265163315 ubox
21 32 0.003825331 ubox
21 36 0.004963765 ubox
21 38 0.265118186 ubox
22 28 0.008447360 ubox
22 31 0.003699940 ubox
22 35 0.005147763 ubox
22 37 0.265171632 ubox
23 27 0.008341244 ubox
23 31 0.004423410 ubox
23 36 0.263961478 ubox
24 34 0.251480709 ubox
25 33 0.251517933 ubox
25 34 0.083166870 ubox
26 33 0.081922936 ubox
27 34 0.009140591 ubox
28 33 0.010462635 ubox
39 58 0.012430177 ubox
40 57 0.014652456 ubox
42 49 0.003535184 ubox
43 48 0.003802816 ubox
44 57 0.931815589 ubox
45 56 0.969478057 ubox
45 58 0.015824228 ubox
46 55 0.969557149 ubox
46 57 0.015733870 ubox
47 54 0.962266948 ubox
48 53 0.879791120 ubox
48 56 0.007016704 ubox
3 39 0.9500000 lbox
4 38 0.9500000 lbox
5 37 0.9500000 lbox
6 36 0.9500000 lbox
7 35 0.9500000 lbox
8 34 0.9500000 lbox
9 33 0.9500000 lbox
11 29 0.9500000 lbox
12 28 0.9500000 lbox
14 26 0.9500000 lbox
15 25 0.9500000 lbox
16 24 0.9500000 lbox
44 57 0.9500000 lbox
45 56 0.9500000 lbox
46 55 0.9500000 lbox
47 54 0.9500000 lbox
48 53 0.9500000 lbox
showpage
end
%%EOF
