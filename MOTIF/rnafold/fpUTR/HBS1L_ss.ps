%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:39:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGAGGCGGACAGUGACCCUGAGGCAUUGCCGUCGCGCGGUGCACAGCUAAGACGUCGCGCUUGCGCAGGCGCUCGGCGCAGAGGCCUGCGGGAAGCCAAGAUGGCGCAUAGGGGUUCUCCAGGCUGCAGUUGGCGCCUUAUCAGUAUCUAAGCGGAGUGUUUUGGAAGGAGUUAAGGGGCUGUGGCAAACGCCCUCUCCGCCGUC\
) } def
/len { sequence length } bind def

/coor [
[70.12622070 215.05360413]
[66.49932098 223.06524658]
[60.49645233 229.43264771]
[52.78921127 233.48460388]
[44.22664642 234.80659485]
[35.74176025 233.28314209]
[27.03531265 245.49778748]
[18.32886887 257.71243286]
[9.62242317 269.92709351]
[0.91597813 282.14175415]
[-1.51762998 290.94851685]
[-8.01535034 294.47381592]
[-16.90528297 306.55557251]
[-25.79521561 318.63732910]
[-34.68515015 330.71911621]
[-43.57508087 342.80087280]
[-46.14142227 351.56988525]
[-52.69164658 354.99661255]
[-61.76303864 366.94274902]
[-63.28374863 383.27124023]
[-78.29593658 389.87170410]
[-91.35634613 379.95416260]
[-89.02955627 363.72091675]
[-73.70915985 357.87133789]
[-64.63776398 345.92523193]
[-55.65684891 333.91094971]
[-46.76691437 321.82916260]
[-37.87698364 309.74740601]
[-28.98705101 297.66564941]
[-20.09711647 285.58386230]
[-11.29867744 273.43530273]
[-2.59223247 261.22067261]
[6.11421251 249.00599670]
[14.82065773 236.79135132]
[23.52710342 224.57669067]
[18.07582855 204.04621887]
[29.73471260 185.95077515]
[51.24331665 182.33493042]
[59.00338364 169.49821472]
[66.76345062 156.66149902]
[74.52352142 143.82478333]
[82.28358459 130.98805237]
[73.26343536 122.33860016]
[67.96650696 111.35333252]
[66.87223053 99.50951385]
[69.90991974 88.32164764]
[76.49351501 79.14791870]
[85.62061310 73.02546692]
[96.02025604 70.55442047]
[97.82830811 55.66379166]
[99.63635254 40.77315903]
[101.44440460 25.88252449]
[103.25245667 10.99189186]
[105.06050873 -3.89874172]
[106.86855316 -18.78937531]
[108.67660522 -33.68000793]
[110.37215424 -48.58386993]
[111.95510101 -63.50011063]
[109.74844360 -72.36647034]
[113.67625427 -78.62908173]
[115.48430634 -93.51971436]
[117.29235840 -108.41034698]
[119.10041046 -123.30097961]
[120.90845490 -138.19160461]
[122.71650696 -153.08224487]
[113.98464203 -171.24966431]
[126.25562286 -186.19148254]
[127.61310577 -201.12992859]
[128.40568542 -216.10897827]
[128.63223267 -231.10726929]
[128.85877991 -246.10554504]
[129.08532715 -261.10385132]
[129.31187439 -276.10214233]
[129.53842163 -291.10043335]
[126.53842926 -299.73068237]
[129.88336182 -306.32305908]
[130.33641052 -321.31622314]
[130.78945923 -336.30938721]
[131.24250793 -351.30255127]
[131.58230591 -366.29867554]
[131.80885315 -381.29696655]
[132.03540039 -396.29525757]
[129.49000549 -400.85781860]
[128.99987793 -405.47827148]
[130.24253845 -409.36355591]
[132.62731934 -411.96371460]
[133.53300476 -426.93634033]
[134.43867493 -441.90896606]
[135.34434509 -456.88159180]
[136.25003052 -471.85424805]
[133.64402771 -480.61154175]
[137.28413391 -487.04562378]
[138.41584778 -502.00286865]
[139.54756165 -516.96014404]
[140.67926025 -531.91735840]
[141.81097412 -546.87463379]
[135.13691711 -561.21923828]
[143.81239319 -573.32647705]
[144.94410706 -588.28369141]
[135.04734802 -597.42187500]
[132.26205444 -610.40222168]
[137.38613892 -622.43811035]
[148.34236145 -629.22235107]
[149.69984436 -644.16076660]
[151.05732727 -659.09924316]
[146.46922302 -675.42053223]
[160.88258362 -684.34753418]
[173.45072937 -672.96868896]
[165.99577332 -657.74176025]
[164.63829041 -642.80328369]
[163.28080750 -627.86486816]
[174.58979797 -615.41857910]
[173.37518311 -598.30706787]
[159.90135193 -587.15197754]
[158.76965332 -572.19476318]
[165.52465820 -558.91998291]
[156.76821899 -545.74291992]
[155.63652039 -530.78564453]
[154.50480652 -515.82843018]
[153.37309265 -500.87118530]
[152.24137878 -485.91390991]
[151.22265625 -470.94854736]
[150.31698608 -455.97592163]
[149.41130066 -441.00329590]
[148.50563049 -426.03067017]
[147.59996033 -411.05801392]
[147.03369141 -396.06872559]
[146.80714417 -381.07043457]
[146.58059692 -366.07214355]
[149.62348938 -359.33502197]
[146.23565674 -350.84948730]
[145.78260803 -335.85632324]
[145.32957458 -320.86318970]
[144.87652588 -305.87002563]
[144.53671265 -290.87387085]
[144.31016541 -275.87557983]
[144.08361816 -260.87728882]
[143.85707092 -245.87899780]
[143.63052368 -230.88070679]
[143.40397644 -215.88243103]
[155.83058167 -224.28358459]
[170.19227600 -219.95443726]
[175.90573120 -206.08517456]
[168.76062012 -192.89625549]
[154.02226257 -190.10679626]
[142.55154419 -199.77244568]
[141.19406128 -184.83399963]
[148.41722107 -177.60229492]
[150.51017761 -167.37348938]
[146.54499817 -157.47804260]
[137.60714722 -151.27420044]
[135.79908752 -136.38356018]
[133.99104309 -121.49292755]
[132.18298340 -106.60229492]
[130.37493896 -91.71166229]
[128.56689453 -76.82102966]
[126.87134552 -61.91716385]
[125.28839874 -47.00092316]
[127.70910645 -40.01607513]
[123.56723785 -31.87195778]
[121.75918579 -16.98132515]
[119.95114136 -2.09069133]
[118.14308929 12.79994202]
[116.33503723 27.69057465]
[114.52698517 42.58120728]
[112.71894073 57.47183990]
[110.91088867 72.36247253]
[127.95593262 85.03965759]
[132.94610596 107.09346008]
[121.75235748 128.30134583]
[131.18041992 139.96803284]
[140.60848999 151.63471985]
[150.03654480 163.30140686]
[154.14683533 164.71762085]
[157.27671814 167.12675476]
[159.23432922 170.09822083]
[159.98753357 173.18334961]
[159.65591431 175.96914673]
[168.36235046 188.18380737]
[177.06880188 200.39845276]
[185.77525330 212.61311340]
[194.48168945 224.82777405]
[202.01287842 230.00105286]
[203.22575378 237.29330444]
[211.74671936 249.63806152]
[227.20429993 253.93257141]
[233.35150146 268.75119019]
[225.47273254 282.72631836]
[209.61189270 285.13745117]
[197.93608093 274.13497925]
[199.40196228 258.15902710]
[190.88098145 245.81427002]
[182.26702881 233.53421021]
[173.56059265 221.31954956]
[164.85414124 209.10490417]
[156.14770508 196.89024353]
[147.44125366 184.67558289]
[138.36985779 172.72946167]
[128.94180298 161.06277466]
[119.51373291 149.39608765]
[110.08567047 137.72940063]
[95.12030792 138.74812317]
[87.36023712 151.58483887]
[79.60017395 164.42156982]
[71.84010315 177.25828552]
[64.08003998 190.09500122]
[68.87657928 197.62117004]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 35]
[7 34]
[8 33]
[9 32]
[10 31]
[12 30]
[13 29]
[14 28]
[15 27]
[16 26]
[18 25]
[19 24]
[38 206]
[39 205]
[40 204]
[41 203]
[42 202]
[49 167]
[50 166]
[51 165]
[52 164]
[53 163]
[54 162]
[55 161]
[56 160]
[57 158]
[58 157]
[60 156]
[61 155]
[62 154]
[63 153]
[64 152]
[65 151]
[67 147]
[68 146]
[69 140]
[70 139]
[71 138]
[72 137]
[73 136]
[74 135]
[76 134]
[77 133]
[78 132]
[79 131]
[80 129]
[81 128]
[82 127]
[86 126]
[87 125]
[88 124]
[89 123]
[90 122]
[92 121]
[93 120]
[94 119]
[95 118]
[96 117]
[98 115]
[99 114]
[103 111]
[104 110]
[105 109]
[170 201]
[171 200]
[172 199]
[173 198]
[178 197]
[179 196]
[180 195]
[181 194]
[182 193]
[184 192]
[185 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
