%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:22:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCAGUUUCCCCAGCGGUCACCUUUGAAAAGGGAAAAAUGUCUGAAAAUAGACAAAGCUGAAUAUAAACAUCAUUUAAUUCCCCCCACACAGACAGCCUCCGCUCCUGUGAGGGCGUGGGGAAAACGGAGUGGGAGAAGGGGGCUAGCGAGGAGGAAGAGGCGGGAGGUGCGGCAGGGGCACAGGUGACGCUCCUCCCGCCUGCCUAGCAGAGCUCCAGGCGCACAUCCGCAGUCAGCCACCUCGCGCGCGCCUC\
CAGGAGCAAGG\
) } def
/len { sequence length } bind def

/coor [
[153.37191772 176.31962585]
[150.54702759 161.58802795]
[152.78860474 146.75646973]
[159.84085083 133.51765442]
[170.89886475 123.38255310]
[184.70306396 117.50728607]
[169.79667664 115.83408356]
[154.89028931 114.16088104]
[139.98390198 112.48767853]
[125.07750702 110.81447601]
[110.17111969 109.14127350]
[95.86758423 113.65887451]
[84.62642670 123.59046173]
[73.38526917 133.52204895]
[62.14411545 143.45362854]
[67.72424316 158.97657776]
[61.60417938 177.19308472]
[43.31972122 189.35452271]
[34.70403290 201.63334656]
[32.34910965 210.42289734]
[25.91403008 214.00517273]
[17.15446281 226.18179321]
[8.39489651 238.35839844]
[-0.36467001 250.53501892]
[-1.46279645 266.89736938]
[-16.29935265 273.88366699]
[-29.61176109 264.30703735]
[-27.70535851 248.01908875]
[-12.54128647 241.77545166]
[-3.78171992 229.59883118]
[4.97784662 217.42222595]
[13.73741341 205.24560547]
[22.42519188 193.01766968]
[31.04088211 180.73883057]
[26.10824203 175.08912659]
[14.80869961 184.95423889]
[4.94376612 173.65454102]
[16.24295807 163.78973389]
[11.31031704 158.14004517]
[-2.01853657 165.02056885]
[-15.34739017 171.90110779]
[-28.67624474 178.78163147]
[-42.00509644 185.66215515]
[-55.33395004 192.54267883]
[-63.73245239 206.62803650]
[-80.12393951 206.12687683]
[-87.64625549 191.55476379]
[-78.56108856 177.90222168]
[-62.21447754 179.21383667]
[-48.88562393 172.33329773]
[-35.55677032 165.45277405]
[-22.22791862 158.57225037]
[-8.89906406 151.69172668]
[4.42978954 144.81118774]
[18.85198402 128.41943359]
[37.60438156 124.75012207]
[52.21252823 132.21247864]
[63.45368195 122.28089142]
[74.69483948 112.34930420]
[85.93598938 102.41771698]
[71.30949402 105.74420929]
[56.68299484 109.07070160]
[42.05649948 112.39718628]
[29.37528610 120.40885925]
[14.56791019 122.80502319]
[0.00713656 119.20170593]
[-11.97378063 110.17632294]
[-19.45499039 97.17510986]
[-21.23768425 82.28141785]
[-17.03620338 67.88185120]
[-7.52379894 56.28382492]
[5.77523661 49.34584045]
[20.72983551 48.17965317]
[34.94363403 52.97213364]
[46.13805771 62.95408630]
[60.02106476 68.63405609]
[73.90407562 74.31401825]
[87.78708649 79.99398804]
[78.32672119 68.35347748]
[68.86635590 56.71297073]
[59.40599060 45.07246017]
[49.94562531 33.43194962]
[40.14698792 22.07471657]
[30.01855659 11.01058865]
[19.89012718 -0.05353795]
[9.76169682 -11.11766529]
[-0.36673325 -22.18179131]
[-10.49516296 -33.24591827]
[-10.81375313 -18.24930191]
[-20.62249184 -6.90079451]
[-35.41495514 -4.41423321]
[-48.39505386 -11.93201923]
[-53.59934235 -26.00025940]
[-48.63682175 -40.15559006]
[-35.78741455 -47.89463425]
[-20.95525932 -45.66224289]
[-30.13909912 -57.52213669]
[-39.32294083 -69.38203430]
[-48.50678253 -81.24192810]
[-63.07358932 -87.41595459]
[-64.74836731 -102.21610260]
[-73.93221283 -114.07599640]
[-83.11605072 -125.93589020]
[-98.49102020 -131.64047241]
[-100.97106171 -147.85101318]
[-88.00492096 -157.89147949]
[-72.93105316 -151.43312073]
[-71.25615692 -135.11973572]
[-62.07231522 -123.25983429]
[-52.88847733 -111.39994049]
[-38.97855759 -106.07421112]
[-36.64688873 -90.42576599]
[-27.46304703 -78.56587219]
[-18.27920723 -66.70597839]
[-9.09536552 -54.84608459]
[0.56896365 -43.37434769]
[10.69739342 -32.31022263]
[20.82582283 -21.24609566]
[30.95425415 -10.18196774]
[41.08268356 0.88215899]
[51.21111298 11.94628620]
[54.27788925 -2.73686385]
[67.61481476 -9.60173988]
[81.34654999 -3.56524229]
[85.30544281 10.90290260]
[76.56011963 23.08975220]
[61.58613586 23.97158241]
[71.04650116 35.61209488]
[80.50686646 47.25260544]
[89.96723175 58.89311600]
[99.42759705 70.53362274]
[111.84432220 94.23488617]
[126.75070953 95.90808868]
[141.65710449 97.58129120]
[156.56349182 99.25449371]
[171.46987915 100.92769623]
[186.37626648 102.60089874]
[197.11810303 98.31686401]
[206.22679138 103.06811523]
[221.19538879 102.09807587]
[236.16398621 101.12803650]
[251.13259888 100.15799713]
[266.10119629 99.18795776]
[281.06979370 98.21791840]
[293.05349731 83.51058197]
[311.66452026 82.28991699]
[325.00021362 94.86653137]
[339.94186401 93.54454041]
[354.88348389 92.22255707]
[369.82510376 90.90056610]
[384.76675415 89.57858276]
[399.70837402 88.25659180]
[412.77294922 79.33316040]
[426.13259888 85.91866302]
[441.07421875 84.59667206]
[451.20385742 72.76332855]
[466.37564087 71.63549042]
[477.59451294 81.36547852]
[492.53613281 80.04349518]
[507.38159180 69.12228394]
[522.98791504 77.17940521]
[537.91296387 75.68170166]
[552.83801270 74.18400574]
[567.76306152 72.68630219]
[582.68811035 71.18860626]
[591.42297363 61.72874069]
[603.86175537 60.77165985]
[613.31359863 68.28644562]
[628.25518799 66.96445465]
[643.19683838 65.64247131]
[658.13848877 64.32048035]
[671.59631348 36.70028687]
[685.64068604 31.43202591]
[695.84423828 19.34077835]
[710.47821045 22.11512566]
[724.52258301 16.84686279]
[738.56701660 11.57860184]
[752.61145020 6.31033945]
[766.65582275 1.04207802]
[780.70025635 -4.22618389]
[783.85076904 -19.32843018]
[794.68231201 -30.31392479]
[809.73858643 -33.67723465]
[824.21520996 -28.34514236]
[833.49267578 -16.01909828]
[834.61065674 -0.63229591]
[827.21240234 12.90538883]
[813.65863037 20.27413177]
[798.27429199 19.12259293]
[785.96850586 9.81822491]
[771.92407227 15.08648682]
[757.87969971 20.35474777]
[743.83526611 25.62301064]
[729.79089355 30.89127159]
[715.74645996 36.15953445]
[706.54748535 47.87396240]
[690.90899658 45.47643661]
[676.86456299 50.74469757]
[677.83459473 65.71329498]
[692.44152832 69.12480927]
[707.04840088 72.53633118]
[721.65533447 75.94784546]
[736.26220703 79.35935974]
[745.11676025 73.11656189]
[755.72583008 72.76533508]
[764.59960938 78.18077850]
[768.95068359 87.38029480]
[783.47326660 91.13456726]
[797.99584961 94.88884735]
[814.84411621 92.99924469]
[821.32397461 108.66603088]
[808.06323242 119.22962189]
[794.24157715 109.41143036]
[779.71899414 105.65715027]
[765.19641113 101.90287781]
[746.96136475 108.39340973]
[732.85070801 93.96626282]
[718.24377441 90.55474091]
[703.63690186 87.14322662]
[689.02996826 83.73171234]
[674.42309570 80.32019806]
[659.46044922 79.26211548]
[644.51879883 80.58409882]
[629.57720947 81.90608978]
[614.63555908 83.22807312]
[600.81286621 94.06356812]
[584.18579102 86.11364746]
[569.26074219 87.61135101]
[554.33569336 89.10904694]
[539.41064453 90.60674286]
[524.48565674 92.10444641]
[516.60717773 101.25537109]
[504.20910645 102.64310455]
[493.85812378 94.98512268]
[478.91650391 96.30711365]
[469.58029175 107.85574341]
[454.44619751 109.40927887]
[442.39620972 99.53830719]
[427.45458984 100.86029816]
[415.45874023 109.68917084]
[401.03036499 103.19822693]
[386.08874512 104.52021027]
[371.14709473 105.84220123]
[356.20547485 107.16418457]
[341.26385498 108.48617554]
[326.32220459 109.80815887]
[321.09027100 119.90202332]
[311.54507446 126.29598236]
[299.98129272 127.31425476]
[289.24652100 122.59046936]
[282.03982544 113.18652344]
[267.07122803 114.15656281]
[252.10263062 115.12660217]
[237.13403320 116.09664154]
[222.16543579 117.06668091]
[207.19682312 118.03672028]
[220.70727539 124.55347443]
[231.27680969 135.19700623]
[237.69914246 148.75257874]
[239.24131775 163.67309570]
[235.72727966 178.25567627]
[227.55813599 190.83601379]
[215.66618347 199.97831726]
[201.40869141 204.63917542]
[186.41282654 204.28663635]
[172.39009094 198.96095276]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 137]
[7 136]
[8 135]
[9 134]
[10 133]
[11 132]
[12 60]
[13 59]
[14 58]
[15 57]
[18 34]
[19 33]
[21 32]
[22 31]
[23 30]
[24 29]
[39 54]
[40 53]
[41 52]
[42 51]
[43 50]
[44 49]
[78 131]
[79 130]
[80 129]
[81 128]
[82 127]
[83 121]
[84 120]
[85 119]
[86 118]
[87 117]
[88 116]
[96 115]
[97 114]
[98 113]
[99 112]
[101 110]
[102 109]
[103 108]
[139 256]
[140 255]
[141 254]
[142 253]
[143 252]
[144 251]
[147 246]
[148 245]
[149 244]
[150 243]
[151 242]
[152 241]
[154 239]
[155 238]
[158 235]
[159 234]
[161 231]
[162 230]
[163 229]
[164 228]
[165 227]
[168 225]
[169 224]
[170 223]
[171 222]
[172 198]
[173 197]
[175 195]
[176 194]
[177 193]
[178 192]
[179 191]
[180 190]
[199 221]
[200 220]
[201 219]
[202 218]
[203 217]
[207 215]
[208 214]
[209 213]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
