%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:59:59 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NDUFV3)
} def

/sequence { (\
GGCUGUUCAGGCGCGGGUGCGCGCGCAGCUGCUGUGGCCCUGCUUGGUGCGCCCGCUGUCACCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.017274232 ubox
1 30 0.003445738 ubox
1 60 0.005534043 ubox
1 63 0.032206938 ubox
1 66 0.982872861 ubox
2 7 0.012258962 ubox
2 12 0.051203745 ubox
2 29 0.003651206 ubox
2 59 0.004538095 ubox
2 62 0.031999263 ubox
2 65 0.994566161 ubox
3 10 0.003687874 ubox
3 11 0.051245891 ubox
3 28 0.003652182 ubox
3 58 0.004522663 ubox
3 64 0.993621721 ubox
4 9 0.006451993 ubox
4 10 0.050635362 ubox
4 27 0.003651313 ubox
4 61 0.038055717 ubox
4 64 0.026682748 ubox
5 12 0.010035509 ubox
5 26 0.003651162 ubox
5 60 0.037642440 ubox
5 62 0.971445119 ubox
5 63 0.121381844 ubox
5 65 0.034473179 ubox
6 11 0.009566802 ubox
6 25 0.003630046 ubox
6 61 0.961618632 ubox
6 64 0.034050792 ubox
8 58 0.126913842 ubox
9 57 0.125471032 ubox
10 56 0.058689280 ubox
10 57 0.042303692 ubox
10 60 0.982289906 ubox
10 63 0.009986358 ubox
10 66 0.018010461 ubox
11 24 0.003608550 ubox
11 56 0.036427575 ubox
11 59 0.986264731 ubox
11 62 0.009734792 ubox
11 65 0.018174169 ubox
12 23 0.003610104 ubox
12 55 0.035134199 ubox
12 58 0.986192116 ubox
12 64 0.018161474 ubox
13 22 0.003610423 ubox
13 54 0.016457280 ubox
13 56 0.975479288 ubox
13 57 0.206562835 ubox
13 63 0.007320484 ubox
14 21 0.003610404 ubox
14 55 0.999286009 ubox
15 20 0.003594287 ubox
15 53 0.006820464 ubox
15 54 0.999787874 ubox
16 52 0.005034085 ubox
16 53 0.999900038 ubox
16 54 0.008828907 ubox
17 52 0.999709683 ubox
17 53 0.010701627 ubox
18 51 0.999152003 ubox
19 50 0.999429749 ubox
19 52 0.022722199 ubox
20 49 0.999413587 ubox
20 51 0.029280510 ubox
21 35 0.003232019 ubox
21 38 0.039331607 ubox
21 43 0.005373646 ubox
21 48 0.993329030 ubox
21 50 0.032376664 ubox
22 34 0.003283119 ubox
22 36 0.005876221 ubox
22 37 0.039484475 ubox
22 42 0.005418969 ubox
22 46 0.272139425 ubox
22 47 0.959728069 ubox
22 49 0.032630891 ubox
23 32 0.008812178 ubox
23 35 0.008211291 ubox
23 38 0.031616294 ubox
23 41 0.004747932 ubox
23 43 0.115663050 ubox
23 45 0.366720450 ubox
23 48 0.035208613 ubox
24 31 0.008826718 ubox
24 34 0.008327187 ubox
24 36 0.058087625 ubox
24 37 0.023448549 ubox
24 42 0.115690042 ubox
24 46 0.343842581 ubox
24 47 0.035807939 ubox
25 30 0.005984530 ubox
25 32 0.010886423 ubox
25 35 0.063994408 ubox
25 38 0.035123366 ubox
25 41 0.103372673 ubox
25 43 0.962566638 ubox
25 45 0.205220101 ubox
26 31 0.011017088 ubox
26 34 0.064740019 ubox
26 36 0.006091158 ubox
26 37 0.035200512 ubox
26 42 0.965674872 ubox
26 46 0.022700253 ubox
27 33 0.064589385 ubox
27 35 0.005612140 ubox
27 41 0.960102308 ubox
27 44 0.218859807 ubox
27 45 0.016534858 ubox
28 32 0.063176845 ubox
28 35 0.040829030 ubox
28 38 0.284355201 ubox
28 40 0.925686248 ubox
28 43 0.221741369 ubox
28 44 0.004290609 ubox
29 34 0.055096525 ubox
29 37 0.311970871 ubox
29 42 0.221656344 ubox
30 36 0.304850009 ubox
31 35 0.141833924 ubox
31 38 0.931996436 ubox
31 41 0.003347183 ubox
31 43 0.006150456 ubox
31 65 0.003510772 ubox
32 37 0.930113591 ubox
32 42 0.006178631 ubox
32 64 0.003519876 ubox
34 43 0.003550113 ubox
34 62 0.003530662 ubox
35 42 0.003496439 ubox
35 61 0.003537102 ubox
36 44 0.016125102 ubox
36 60 0.003536507 ubox
37 43 0.034228943 ubox
37 48 0.010189181 ubox
37 59 0.003525724 ubox
38 42 0.034044581 ubox
38 47 0.010867276 ubox
38 58 0.003520305 ubox
39 46 0.013059273 ubox
39 47 0.038770675 ubox
40 46 0.042176611 ubox
40 47 0.003939530 ubox
41 46 0.004129883 ubox
42 56 0.003258284 ubox
43 55 0.003247019 ubox
57 64 0.004549785 ubox
58 63 0.007148943 ubox
58 65 0.009003196 ubox
59 64 0.008525920 ubox
1 66 0.9500000 lbox
2 65 0.9500000 lbox
3 64 0.9500000 lbox
5 62 0.9500000 lbox
6 61 0.9500000 lbox
10 60 0.9500000 lbox
11 59 0.9500000 lbox
12 58 0.9500000 lbox
13 56 0.9500000 lbox
14 55 0.9500000 lbox
15 54 0.9500000 lbox
16 53 0.9500000 lbox
17 52 0.9500000 lbox
18 51 0.9500000 lbox
19 50 0.9500000 lbox
20 49 0.9500000 lbox
21 48 0.9500000 lbox
22 47 0.9500000 lbox
25 43 0.9500000 lbox
26 42 0.9500000 lbox
27 41 0.9500000 lbox
28 40 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
showpage
end
%%EOF
