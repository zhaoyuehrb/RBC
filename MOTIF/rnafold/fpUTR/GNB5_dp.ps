%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:50:44 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GNB5)
} def

/sequence { (\
UCACCUCUCACCAUCUGCUCUGUGGCUCCCAGUGCUGACUCUGGAAGCUUUAUCUUGGGUAAAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 25 0.007561913 ubox
1 58 0.005164947 ubox
2 17 0.006174736 ubox
2 22 0.004359037 ubox
2 24 0.075252842 ubox
2 34 0.004678040 ubox
2 57 0.006553685 ubox
3 16 0.006066814 ubox
3 21 0.004033954 ubox
3 23 0.075722918 ubox
3 33 0.004741265 ubox
3 56 0.005993090 ubox
3 60 0.130606036 ubox
4 22 0.075523469 ubox
4 25 0.003729568 ubox
4 32 0.004702950 ubox
4 58 0.027503154 ubox
4 59 0.137081020 ubox
5 24 0.005110206 ubox
5 47 0.007055111 ubox
5 57 0.027655465 ubox
5 58 0.136595459 ubox
5 59 0.023628902 ubox
5 65 0.080155251 ubox
6 45 0.008886363 ubox
6 46 0.006824620 ubox
6 57 0.121030564 ubox
6 58 0.023576650 ubox
6 59 0.006691815 ubox
6 64 0.079340527 ubox
7 24 0.012060726 ubox
7 37 0.003914278 ubox
7 44 0.009600501 ubox
7 47 0.008713210 ubox
7 57 0.048083945 ubox
7 58 0.008442522 ubox
7 59 0.042210556 ubox
7 65 0.069419314 ubox
8 25 0.010915068 ubox
8 38 0.003250021 ubox
8 43 0.005330572 ubox
8 44 0.007937714 ubox
8 45 0.003771623 ubox
8 46 0.008405928 ubox
8 57 0.006677665 ubox
8 58 0.042264347 ubox
8 59 0.004967402 ubox
8 64 0.069885937 ubox
9 17 0.070643283 ubox
9 22 0.016361748 ubox
9 24 0.097347970 ubox
9 34 0.006127438 ubox
9 37 0.004424027 ubox
9 43 0.012055204 ubox
9 44 0.003924895 ubox
9 57 0.044072086 ubox
9 58 0.003827629 ubox
10 16 0.065860465 ubox
10 21 0.015075741 ubox
10 23 0.098429451 ubox
10 33 0.006186377 ubox
10 36 0.004381892 ubox
10 42 0.011766550 ubox
10 56 0.042119395 ubox
10 60 0.198592211 ubox
11 22 0.095164638 ubox
11 25 0.040249375 ubox
11 32 0.006173005 ubox
11 44 0.021109471 ubox
11 58 0.169497508 ubox
11 59 0.206884710 ubox
12 22 0.035467866 ubox
12 24 0.056610221 ubox
12 34 0.003953357 ubox
12 37 0.003692635 ubox
12 43 0.021203680 ubox
12 57 0.171041516 ubox
12 58 0.205383627 ubox
13 21 0.040884542 ubox
13 23 0.056618470 ubox
13 33 0.003930639 ubox
13 36 0.003649758 ubox
13 42 0.020965469 ubox
13 53 0.020031345 ubox
13 56 0.169102976 ubox
13 60 0.274609601 ubox
14 22 0.054923500 ubox
14 32 0.003175918 ubox
14 38 0.025280129 ubox
14 52 0.018367509 ubox
14 58 0.021573775 ubox
14 59 0.284333427 ubox
15 24 0.021931745 ubox
15 25 0.005897315 ubox
15 37 0.027063372 ubox
15 57 0.065506740 ubox
15 58 0.292670798 ubox
15 59 0.035940163 ubox
15 65 0.057986408 ubox
16 22 0.004724310 ubox
16 24 0.012740436 ubox
16 52 0.011430539 ubox
16 57 0.286891400 ubox
16 58 0.036050561 ubox
16 61 0.828938606 ubox
16 64 0.050786914 ubox
17 21 0.005007388 ubox
17 23 0.032077762 ubox
17 26 0.018577923 ubox
17 35 0.029941119 ubox
17 48 0.014512397 ubox
17 51 0.010494394 ubox
17 56 0.198746046 ubox
17 60 0.887266754 ubox
18 22 0.032778568 ubox
18 25 0.018647401 ubox
18 34 0.029971528 ubox
18 47 0.014517407 ubox
18 58 0.016761956 ubox
18 59 0.890970999 ubox
18 65 0.003454000 ubox
19 24 0.016740745 ubox
19 45 0.009078129 ubox
19 46 0.011227530 ubox
19 57 0.016932228 ubox
19 58 0.888617445 ubox
19 59 0.013053722 ubox
19 64 0.003354989 ubox
20 24 0.005015893 ubox
20 32 0.028877979 ubox
20 44 0.012804427 ubox
20 57 0.886138188 ubox
20 58 0.055917012 ubox
20 59 0.008303706 ubox
20 65 0.004667581 ubox
21 31 0.028656406 ubox
21 43 0.012607088 ubox
21 52 0.539900971 ubox
21 57 0.053657774 ubox
21 58 0.008303734 ubox
21 64 0.004694189 ubox
22 30 0.028334574 ubox
22 39 0.010658589 ubox
22 42 0.006191394 ubox
22 48 0.006029351 ubox
22 51 0.547284736 ubox
22 53 0.356275586 ubox
22 56 0.031415045 ubox
23 31 0.008824019 ubox
23 37 0.006590091 ubox
23 38 0.009806407 ubox
23 47 0.005791827 ubox
23 52 0.353182209 ubox
24 30 0.009797711 ubox
24 36 0.011921305 ubox
24 40 0.003767353 ubox
24 49 0.953726844 ubox
24 50 0.061089162 ubox
24 51 0.178483913 ubox
24 54 0.036773226 ubox
24 55 0.007847760 ubox
24 56 0.003368716 ubox
25 29 0.009873088 ubox
25 35 0.012545993 ubox
25 39 0.003842198 ubox
25 48 0.997826360 ubox
25 49 0.009466647 ubox
25 50 0.017504600 ubox
25 53 0.005286885 ubox
25 54 0.003819383 ubox
26 34 0.012548376 ubox
26 47 0.998712068 ubox
27 38 0.004523143 ubox
27 45 0.095884060 ubox
27 46 0.972365156 ubox
28 37 0.004541648 ubox
28 44 0.124280584 ubox
28 59 0.007429311 ubox
29 43 0.111994510 ubox
29 44 0.989974038 ubox
29 58 0.007494271 ubox
30 37 0.003624420 ubox
30 43 0.993030700 ubox
30 57 0.007494997 ubox
31 36 0.003284682 ubox
31 40 0.114369611 ubox
31 42 0.991832970 ubox
31 56 0.006890007 ubox
32 39 0.135360490 ubox
32 41 0.989503549 ubox
32 54 0.003400849 ubox
32 55 0.004643064 ubox
33 38 0.146135130 ubox
34 48 0.007233753 ubox
35 47 0.007256596 ubox
36 46 0.007218385 ubox
38 60 0.016227769 ubox
39 59 0.017753448 ubox
40 58 0.017745125 ubox
41 57 0.017756839 ubox
43 55 0.016728803 ubox
44 54 0.017732271 ubox
45 53 0.017109618 ubox
45 56 0.015574083 ubox
46 55 0.016532728 ubox
47 54 0.016435511 ubox
47 60 0.019174979 ubox
48 59 0.020033436 ubox
48 65 0.010897425 ubox
49 57 0.003630748 ubox
49 58 0.020121980 ubox
49 62 0.003437993 ubox
49 63 0.099577281 ubox
49 64 0.012608274 ubox
50 57 0.019865921 ubox
50 58 0.004239464 ubox
50 61 0.003217694 ubox
50 62 0.123301304 ubox
50 63 0.011513105 ubox
51 57 0.006522769 ubox
51 61 0.128449186 ubox
51 62 0.008588814 ubox
52 56 0.007137487 ubox
52 60 0.129200232 ubox
53 59 0.128971105 ubox
54 58 0.124539712 ubox
54 65 0.037412058 ubox
55 62 0.003401991 ubox
55 63 0.007504676 ubox
55 64 0.038520324 ubox
56 61 0.003361907 ubox
56 62 0.008350775 ubox
56 63 0.038327018 ubox
56 64 0.003532396 ubox
16 61 0.9500000 lbox
17 60 0.9500000 lbox
18 59 0.9500000 lbox
19 58 0.9500000 lbox
20 57 0.9500000 lbox
24 49 0.9500000 lbox
25 48 0.9500000 lbox
26 47 0.9500000 lbox
27 46 0.9500000 lbox
29 44 0.9500000 lbox
30 43 0.9500000 lbox
31 42 0.9500000 lbox
32 41 0.9500000 lbox
showpage
end
%%EOF
