%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:55:43 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NVL)
} def

/sequence { (\
CUACGAGGCCCCCGGUUGACUAGGAGCUGGCGGUCCGAGCUGUGGCUUGGAAGACCGACGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.068945747 ubox
1 8 0.042689294 ubox
1 23 0.108733373 ubox
1 24 0.015456024 ubox
1 30 0.018750641 ubox
1 33 0.004634612 ubox
1 39 0.494279005 ubox
1 45 0.037263776 ubox
1 50 0.005618576 ubox
1 53 0.035675861 ubox
2 6 0.062479649 ubox
2 7 0.042179603 ubox
2 22 0.108993354 ubox
2 23 0.014446729 ubox
2 29 0.019003479 ubox
2 32 0.004324831 ubox
2 38 0.504652875 ubox
2 42 0.027889480 ubox
2 44 0.080902825 ubox
2 49 0.004853600 ubox
2 52 0.034627207 ubox
3 16 0.004369431 ubox
3 21 0.105171642 ubox
3 28 0.009955707 ubox
3 41 0.030061104 ubox
3 43 0.085406432 ubox
3 48 0.004140693 ubox
4 14 0.005959815 ubox
4 15 0.004770544 ubox
4 18 0.011511407 ubox
4 29 0.028610757 ubox
4 32 0.031597010 ubox
4 33 0.004357212 ubox
4 37 0.753495969 ubox
4 42 0.083875508 ubox
4 44 0.017715438 ubox
4 57 0.098990975 ubox
4 60 0.284900590 ubox
4 62 0.068233473 ubox
5 13 0.006032583 ubox
5 17 0.009748034 ubox
5 28 0.013424445 ubox
5 31 0.033410461 ubox
5 35 0.006067623 ubox
5 36 0.763224361 ubox
5 41 0.060356574 ubox
5 43 0.014827597 ubox
5 56 0.099270379 ubox
5 59 0.288241147 ubox
5 61 0.069944758 ubox
6 16 0.006710714 ubox
6 17 0.004798254 ubox
6 21 0.006427827 ubox
6 28 0.018174316 ubox
6 34 0.005455981 ubox
6 41 0.013822882 ubox
7 13 0.010272639 ubox
7 16 0.003729088 ubox
7 17 0.108365763 ubox
7 20 0.006621188 ubox
7 27 0.015430709 ubox
7 28 0.132260789 ubox
7 35 0.781712700 ubox
7 36 0.108054509 ubox
7 40 0.012638790 ubox
7 41 0.019827343 ubox
7 56 0.306287611 ubox
8 12 0.010328645 ubox
8 16 0.112490231 ubox
8 27 0.149483708 ubox
8 31 0.026040827 ubox
8 34 0.823548030 ubox
8 35 0.107982900 ubox
8 40 0.021263901 ubox
8 46 0.003302523 ubox
8 55 0.303868060 ubox
8 61 0.225509143 ubox
9 15 0.112852976 ubox
9 24 0.005750463 ubox
9 26 0.149893229 ubox
9 30 0.025973482 ubox
9 33 0.879156187 ubox
9 39 0.021330857 ubox
9 45 0.003389341 ubox
9 60 0.225175013 ubox
10 14 0.112034090 ubox
10 23 0.005764209 ubox
10 24 0.038306688 ubox
10 29 0.025005687 ubox
10 30 0.007037533 ubox
10 32 0.877870721 ubox
10 33 0.307989942 ubox
10 44 0.003339130 ubox
11 23 0.037803289 ubox
11 24 0.145779906 ubox
11 29 0.006948918 ubox
11 30 0.059996406 ubox
11 32 0.312084434 ubox
11 33 0.004573796 ubox
12 23 0.145810101 ubox
12 24 0.027973636 ubox
12 29 0.042925124 ubox
12 30 0.967200856 ubox
12 32 0.003309567 ubox
13 23 0.028472621 ubox
13 29 0.969294487 ubox
13 37 0.010645361 ubox
13 57 0.144583699 ubox
14 21 0.143805978 ubox
14 28 0.969777516 ubox
14 36 0.010671570 ubox
14 56 0.145963640 ubox
15 20 0.145543459 ubox
15 27 0.970526359 ubox
15 35 0.010668802 ubox
15 55 0.145968578 ubox
16 23 0.004112939 ubox
16 24 0.006671231 ubox
16 25 0.072393491 ubox
16 26 0.966706304 ubox
16 33 0.010343032 ubox
16 54 0.145808664 ubox
17 22 0.010896746 ubox
17 23 0.022758828 ubox
17 24 0.086173816 ubox
17 25 0.954340707 ubox
17 32 0.013381299 ubox
17 52 0.003367321 ubox
17 53 0.144867712 ubox
18 31 0.019721139 ubox
20 26 0.008338988 ubox
20 30 0.027070873 ubox
20 50 0.135104355 ubox
20 53 0.004588249 ubox
21 25 0.008776990 ubox
21 29 0.027143261 ubox
21 49 0.132216512 ubox
21 52 0.004538066 ubox
22 28 0.027119262 ubox
22 47 0.003628720 ubox
22 48 0.100836862 ubox
23 27 0.026534122 ubox
23 46 0.004852921 ubox
23 47 0.075894131 ubox
23 48 0.006588786 ubox
24 46 0.070544410 ubox
24 47 0.005770838 ubox
24 48 0.097829455 ubox
25 41 0.035932927 ubox
25 47 0.120316727 ubox
26 40 0.036307010 ubox
26 43 0.031770761 ubox
26 46 0.125661345 ubox
26 61 0.108725578 ubox
27 39 0.036308118 ubox
27 42 0.031824163 ubox
27 45 0.126495424 ubox
27 60 0.106996326 ubox
28 37 0.017118935 ubox
28 38 0.031822939 ubox
28 42 0.022077083 ubox
28 44 0.102459095 ubox
28 57 0.046050290 ubox
28 60 0.042913228 ubox
28 62 0.005263908 ubox
29 36 0.034794498 ubox
29 41 0.052126264 ubox
29 43 0.068150559 ubox
29 56 0.071968644 ubox
29 59 0.123381783 ubox
29 61 0.018345820 ubox
30 35 0.034276082 ubox
30 40 0.054930384 ubox
30 43 0.106593807 ubox
30 55 0.071916672 ubox
30 61 0.031603028 ubox
31 37 0.003973408 ubox
31 39 0.054923614 ubox
31 42 0.128136446 ubox
31 57 0.311239430 ubox
31 60 0.030201699 ubox
32 36 0.004024855 ubox
32 41 0.128303557 ubox
32 56 0.318446516 ubox
32 59 0.020062420 ubox
33 40 0.128346507 ubox
33 55 0.318585555 ubox
33 59 0.004010103 ubox
34 39 0.122200363 ubox
34 51 0.460044238 ubox
34 54 0.229986349 ubox
34 58 0.003369152 ubox
35 50 0.579245075 ubox
35 53 0.135317337 ubox
36 42 0.008379132 ubox
36 44 0.013473241 ubox
36 49 0.605587191 ubox
36 57 0.004979476 ubox
36 62 0.007050055 ubox
37 41 0.005445605 ubox
37 43 0.011422663 ubox
37 48 0.606317258 ubox
37 56 0.004974953 ubox
37 61 0.007707220 ubox
38 47 0.608998965 ubox
39 46 0.610227722 ubox
39 61 0.282675165 ubox
40 45 0.608259476 ubox
40 50 0.004251076 ubox
40 53 0.005874975 ubox
40 60 0.278566205 ubox
41 49 0.004230011 ubox
41 52 0.005853997 ubox
41 60 0.087282866 ubox
41 62 0.178077796 ubox
42 48 0.003754230 ubox
42 55 0.003478908 ubox
42 59 0.252332860 ubox
42 61 0.320909920 ubox
43 54 0.003523276 ubox
43 57 0.208226273 ubox
43 58 0.204436096 ubox
43 60 0.320814797 ubox
43 62 0.085060897 ubox
44 56 0.302276228 ubox
44 59 0.314127617 ubox
44 61 0.141656470 ubox
45 55 0.302499151 ubox
45 61 0.620356164 ubox
46 53 0.277447681 ubox
46 60 0.621774528 ubox
47 52 0.256699558 ubox
47 53 0.034769839 ubox
47 54 0.092399859 ubox
47 58 0.696000691 ubox
48 52 0.029705376 ubox
48 53 0.090609691 ubox
48 57 0.712501482 ubox
48 60 0.004277450 ubox
49 56 0.719282658 ubox
49 59 0.007234087 ubox
49 61 0.003724557 ubox
50 55 0.714911744 ubox
56 62 0.043700787 ubox
57 61 0.044215495 ubox
4 37 0.9500000 lbox
5 36 0.9500000 lbox
7 35 0.9500000 lbox
8 34 0.9500000 lbox
9 33 0.9500000 lbox
10 32 0.9500000 lbox
12 30 0.9500000 lbox
13 29 0.9500000 lbox
14 28 0.9500000 lbox
15 27 0.9500000 lbox
16 26 0.9500000 lbox
17 25 0.9500000 lbox
45 61 0.9500000 lbox
46 60 0.9500000 lbox
47 58 0.9500000 lbox
48 57 0.9500000 lbox
49 56 0.9500000 lbox
50 55 0.9500000 lbox
showpage
end
%%EOF
