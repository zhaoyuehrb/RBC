%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:25:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCAGUUGCGGGUUGCAGGAGUUCAGGAAAGGAGGUGGGACUAGAGUCAACCUGGAAUAGCUCUACAGUAACAAUGGCAGCCUUUUUGUUGCUGGGACAUCCAUACAGGCAACUUAGCUGGUGAAAGGACUCUGGAUUGGUUGGCAGUCUGCUUUUUUUUUUCCAAGGUGAUCACUUUACUGUAGAAGAA\
) } def
/len { sequence length } bind def

/coor [
[-155.39242554 319.22048950]
[-161.41259766 305.48156738]
[-157.32542419 291.04861450]
[-170.43678284 298.33508301]
[-178.74087524 311.80178833]
[-193.62416077 311.22113037]
[-206.73551941 318.50756836]
[-219.84686279 325.79403687]
[-228.15097046 339.26074219]
[-243.03425598 338.68008423]
[-256.14559937 345.96655273]
[-269.25695801 353.25299072]
[-282.36831665 360.53945923]
[-295.47967529 367.82589722]
[-308.59103394 375.11233521]
[-321.70239258 382.39880371]
[-321.79986572 398.92544556]
[-330.16647339 413.06924438]
[-344.43966675 421.02206421]
[-360.68185425 420.69824219]
[-374.46655273 412.28060913]
[-387.45693970 419.78060913]
[-400.44729614 427.28060913]
[-413.43768311 434.78060913]
[-426.42807007 442.28060913]
[-424.79425049 457.42163086]
[-429.46627808 471.91619873]
[-439.63467407 483.25302124]
[-453.53771973 489.46792603]
[-468.76663208 489.48416138]
[-482.68289185 483.29888916]
[-492.87545776 471.98379517]
[-497.57833862 457.49920654]
[-495.97680664 442.35473633]
[-488.34829712 429.17425537]
[-476.01449585 420.24130249]
[-461.11233521 417.10360718]
[-446.22366333 420.30480957]
[-433.92807007 429.29025269]
[-420.93768311 421.79025269]
[-407.94729614 414.29025269]
[-394.95693970 406.79025269]
[-381.96655273 399.29025269]
[-382.86581421 385.65414429]
[-377.77450562 372.90097046]
[-367.63427734 363.54342651]
[-354.38751221 359.45162964]
[-340.60540771 361.47955322]
[-328.98883057 369.28744507]
[-315.87747192 362.00100708]
[-302.76611328 354.71453857]
[-289.65475464 347.42810059]
[-276.54342651 340.14163208]
[-263.43206787 332.85519409]
[-250.32070923 325.56872559]
[-242.95440674 312.62319946]
[-227.13331604 312.68267822]
[-214.02195740 305.39624023]
[-200.91061401 298.10977173]
[-193.54432678 285.16424561]
[-177.72322083 285.22372437]
[-164.61187744 277.93725586]
[-151.93907166 269.91229248]
[-139.74636841 261.17514038]
[-127.55366516 252.43797302]
[-115.36096954 243.70080566]
[-103.16826630 234.96363831]
[-90.97556305 226.22647095]
[-78.78286743 217.48930359]
[-66.59016418 208.75213623]
[-54.39746475 200.01496887]
[-42.20476532 191.27781677]
[-41.90275955 178.38676453]
[-34.11080170 167.86941528]
[-21.49688530 163.70373535]
[-8.60133076 167.62533569]
[3.73269248 159.08883667]
[16.06671524 150.55233765]
[18.47213173 135.89799500]
[30.85898018 127.06507111]
[46.21348572 129.68745422]
[58.54750824 121.15094757]
[70.88153076 112.61444855]
[83.21555328 104.07794189]
[68.28565979 105.52647400]
[55.59304047 97.53289032]
[50.44934464 83.44238281]
[55.00713348 69.15159607]
[67.35904694 60.64099503]
[82.33599854 61.47212601]
[93.67038727 71.29718018]
[96.61878967 86.00577545]
[101.20733643 71.72483063]
[105.79588318 57.44389343]
[110.38442230 43.16295242]
[114.97296906 28.88201332]
[119.56151581 14.60107231]
[110.61333466 4.10478830]
[108.04453278 -9.33646965]
[112.42169952 -22.18770790]
[122.49884796 -31.12281036]
[135.56974792 -33.88531494]
[140.39132690 -48.08926392]
[134.61381531 -63.05588913]
[142.83702087 -76.83116913]
[158.75280762 -78.84790039]
[170.15194702 -67.55900574]
[168.29000854 -51.62436676]
[154.59529114 -43.26767349]
[149.77369690 -29.06372070]
[159.67082214 -15.97622776]
[159.82427979 0.59756362]
[149.97579956 14.13473129]
[133.84245300 19.18961716]
[129.25390625 33.47055817]
[124.66536713 47.75149918]
[120.07682037 62.03244019]
[115.48827362 76.31337738]
[110.89972687 90.59432220]
[119.93348694 102.56892395]
[134.92546082 102.07814026]
[149.91741943 101.58735657]
[163.45704651 93.40266418]
[176.43066406 100.71939850]
[191.42263794 100.22861481]
[206.41461182 99.73783112]
[221.40657043 99.24703979]
[236.39854431 98.75625610]
[251.39051819 98.26547241]
[266.38247681 97.77468109]
[275.13305664 85.09660339]
[289.50302124 80.06098938]
[303.91229248 84.40116119]
[312.89535522 96.25200653]
[327.88732910 95.76122284]
[342.87930298 95.27043915]
[357.87124634 94.77964783]
[372.86322021 94.28886414]
[387.85519409 93.79808044]
[402.84716797 93.30728912]
[414.81939697 82.62808228]
[430.60836792 85.47188568]
[438.10217285 99.65718079]
[431.55218506 114.30221558]
[415.98300171 118.17258453]
[403.33795166 108.29926300]
[388.34597778 108.79004669]
[373.35400391 109.28083038]
[358.36203003 109.77162170]
[343.37008667 110.26240540]
[328.37811279 110.75318909]
[313.38613892 111.24398041]
[305.19738770 123.65696716]
[291.10284424 128.93026733]
[276.43429565 124.84526825]
[266.87326050 112.76665497]
[251.88130188 113.25743866]
[236.88932800 113.74822235]
[221.89735413 114.23901367]
[206.90539551 114.72979736]
[191.91342163 115.22058105]
[176.92144775 115.71137238]
[164.45414734 123.86095428]
[150.40821838 116.57932281]
[135.41624451 117.07010651]
[120.42427063 117.56089783]
[91.75205994 116.41196442]
[79.41803741 124.94847107]
[67.08401489 133.48497009]
[54.74998856 142.02146912]
[51.79566574 157.31558228]
[39.16560745 165.79710388]
[24.60321808 162.88635254]
[12.26919460 171.42286682]
[-0.06482855 179.95936584]
[-2.87505507 197.21777344]
[-17.01471138 206.91976929]
[-33.46760178 203.47050476]
[-45.66030121 212.20767212]
[-57.85300064 220.94483948]
[-70.04570007 229.68200684]
[-82.23840332 238.41917419]
[-94.43109894 247.15634155]
[-106.62380219 255.89350891]
[-118.81650543 264.63067627]
[-131.00920105 273.36782837]
[-143.20190430 282.10501099]
[-128.40763855 284.58084106]
[-118.56150055 295.89691162]
[-118.15477753 310.89141846]
[-127.37300873 322.72457886]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 62]
[4 61]
[6 59]
[7 58]
[8 57]
[10 55]
[11 54]
[12 53]
[13 52]
[14 51]
[15 50]
[16 49]
[21 43]
[22 42]
[23 41]
[24 40]
[25 39]
[63 187]
[64 186]
[65 185]
[66 184]
[67 183]
[68 182]
[69 181]
[70 180]
[71 179]
[72 178]
[76 175]
[77 174]
[78 173]
[81 170]
[82 169]
[83 168]
[84 167]
[92 119]
[93 118]
[94 117]
[95 116]
[96 115]
[97 114]
[102 110]
[103 109]
[120 166]
[121 165]
[122 164]
[124 162]
[125 161]
[126 160]
[127 159]
[128 158]
[129 157]
[130 156]
[134 152]
[135 151]
[136 150]
[137 149]
[138 148]
[139 147]
[140 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
