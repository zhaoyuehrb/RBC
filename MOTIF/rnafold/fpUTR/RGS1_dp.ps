%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:13:45 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RGS1)
} def

/sequence { (\
GCCUGUCUGCAUUCUACUAUAUAAAGCAGCAGAGACGUUGACUAGCGCAUAUUUGCUAAGAGCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.032169012 ubox
1 27 0.005734597 ubox
1 30 0.018067460 ubox
1 38 0.062366537 ubox
1 46 0.192913669 ubox
1 48 0.149623948 ubox
1 56 0.018593155 ubox
1 63 0.299197362 ubox
2 9 0.032104403 ubox
2 26 0.005459917 ubox
2 29 0.013036839 ubox
2 37 0.068239052 ubox
2 45 0.192313303 ubox
2 47 0.149161593 ubox
2 55 0.018527760 ubox
2 62 0.298658348 ubox
3 29 0.014935755 ubox
3 32 0.950985461 ubox
3 34 0.040944744 ubox
3 45 0.142254789 ubox
3 60 0.101228725 ubox
3 62 0.009762138 ubox
4 11 0.005070996 ubox
4 23 0.003879542 ubox
4 28 0.019653014 ubox
4 31 0.954024281 ubox
4 33 0.034237559 ubox
4 37 0.032194166 ubox
4 44 0.140253132 ubox
4 58 0.004416567 ubox
4 59 0.096885414 ubox
4 61 0.012326911 ubox
4 64 0.011695727 ubox
5 10 0.006479839 ubox
5 17 0.003889881 ubox
5 22 0.004251252 ubox
5 27 0.020751639 ubox
5 30 0.954912667 ubox
5 36 0.065357617 ubox
5 42 0.238868131 ubox
5 43 0.041218500 ubox
5 48 0.003195846 ubox
5 57 0.005039407 ubox
5 63 0.013149222 ubox
5 65 0.006119575 ubox
6 16 0.003678989 ubox
6 21 0.004201502 ubox
6 26 0.009220533 ubox
6 29 0.138260891 ubox
6 33 0.133579787 ubox
6 35 0.060676156 ubox
6 41 0.240466827 ubox
6 61 0.015573086 ubox
6 62 0.009070245 ubox
6 64 0.004652760 ubox
7 26 0.021755731 ubox
7 29 0.945771382 ubox
7 32 0.143310111 ubox
7 34 0.056570007 ubox
7 40 0.239916894 ubox
7 60 0.016541313 ubox
7 62 0.004201391 ubox
8 19 0.004062350 ubox
8 23 0.004020549 ubox
8 25 0.021881942 ubox
8 28 0.955602365 ubox
8 31 0.145927388 ubox
8 33 0.047584614 ubox
8 37 0.015206577 ubox
8 49 0.004548839 ubox
8 59 0.015827834 ubox
8 61 0.004083464 ubox
8 64 0.025949415 ubox
9 18 0.004199375 ubox
9 22 0.004242060 ubox
9 27 0.956599796 ubox
9 30 0.148505735 ubox
9 36 0.018562829 ubox
9 38 0.222880886 ubox
9 39 0.005374632 ubox
9 48 0.004846879 ubox
9 56 0.014752719 ubox
9 63 0.029430703 ubox
10 26 0.955747124 ubox
10 29 0.148072038 ubox
10 37 0.229448550 ubox
10 47 0.004843932 ubox
10 55 0.014763522 ubox
10 62 0.029302614 ubox
11 20 0.103562394 ubox
11 22 0.179889545 ubox
11 38 0.007551773 ubox
11 54 0.014372416 ubox
12 19 0.102735227 ubox
12 21 0.183096659 ubox
12 24 0.426821025 ubox
12 25 0.237733344 ubox
12 26 0.016847365 ubox
12 29 0.008135133 ubox
12 32 0.010041398 ubox
12 33 0.012994033 ubox
12 34 0.191047088 ubox
12 35 0.062263778 ubox
12 37 0.007394399 ubox
12 59 0.003231978 ubox
12 60 0.007175824 ubox
12 61 0.006143619 ubox
12 62 0.008419890 ubox
13 23 0.405861596 ubox
13 24 0.224862222 ubox
13 25 0.041984928 ubox
13 28 0.016942569 ubox
13 31 0.011068930 ubox
13 32 0.010538289 ubox
13 33 0.217360623 ubox
13 34 0.037826315 ubox
13 35 0.084313502 ubox
13 59 0.006341297 ubox
13 60 0.004848800 ubox
13 61 0.023190730 ubox
14 26 0.068926067 ubox
14 29 0.041454375 ubox
14 32 0.220869778 ubox
14 34 0.087421982 ubox
14 45 0.003672446 ubox
14 60 0.024426058 ubox
15 21 0.346328385 ubox
15 23 0.140966227 ubox
15 25 0.069782121 ubox
15 28 0.044299489 ubox
15 31 0.215571878 ubox
15 33 0.086638090 ubox
15 44 0.003671972 ubox
15 58 0.003430743 ubox
15 59 0.023463425 ubox
16 20 0.314606078 ubox
16 22 0.140230958 ubox
16 57 0.003311851 ubox
17 26 0.069373023 ubox
17 29 0.209012859 ubox
17 32 0.075135253 ubox
17 45 0.003612088 ubox
18 25 0.070129833 ubox
18 28 0.201930717 ubox
18 31 0.072646894 ubox
18 44 0.003618530 ubox
19 52 0.004605854 ubox
20 51 0.005034205 ubox
21 50 0.005059450 ubox
22 44 0.004663714 ubox
22 49 0.004803986 ubox
23 43 0.003470538 ubox
25 43 0.023640684 ubox
25 57 0.004525570 ubox
26 42 0.027441556 ubox
26 46 0.009340336 ubox
26 48 0.003604903 ubox
26 56 0.004739807 ubox
26 63 0.026554014 ubox
27 40 0.040369149 ubox
27 45 0.009337565 ubox
27 47 0.003596871 ubox
27 55 0.004738928 ubox
27 62 0.026570135 ubox
28 39 0.040780205 ubox
28 43 0.009266516 ubox
28 54 0.004681473 ubox
28 57 0.042204160 ubox
29 38 0.041410816 ubox
29 42 0.009467661 ubox
29 46 0.005001664 ubox
29 53 0.004091136 ubox
29 56 0.046032831 ubox
30 37 0.041569018 ubox
30 40 0.014467200 ubox
30 45 0.005056029 ubox
30 55 0.046365354 ubox
31 39 0.014369888 ubox
31 43 0.003852833 ubox
31 54 0.046341739 ubox
32 38 0.012508488 ubox
32 39 0.008062824 ubox
32 42 0.004514335 ubox
32 53 0.046370185 ubox
33 38 0.022799226 ubox
33 39 0.023707751 ubox
33 43 0.047814177 ubox
33 52 0.047879111 ubox
33 53 0.006854909 ubox
33 54 0.017881784 ubox
33 57 0.005507863 ubox
34 38 0.017534958 ubox
34 42 0.054022100 ubox
34 52 0.006985203 ubox
34 53 0.023069163 ubox
34 54 0.004635475 ubox
34 56 0.005522968 ubox
35 52 0.023341720 ubox
35 53 0.005925901 ubox
36 47 0.285357731 ubox
36 55 0.003382444 ubox
37 46 0.320158037 ubox
37 48 0.030232285 ubox
37 50 0.006749772 ubox
37 52 0.004387720 ubox
37 56 0.004439055 ubox
37 63 0.706124689 ubox
37 65 0.218405964 ubox
38 45 0.317046107 ubox
38 47 0.028691450 ubox
38 49 0.006422395 ubox
38 51 0.004502749 ubox
38 55 0.004341201 ubox
38 59 0.010867143 ubox
38 60 0.017767886 ubox
38 61 0.056153747 ubox
38 62 0.704755926 ubox
38 64 0.186628043 ubox
39 44 0.263987416 ubox
39 47 0.013598778 ubox
39 49 0.014035896 ubox
39 58 0.009353325 ubox
39 59 0.022749991 ubox
39 60 0.061640813 ubox
39 61 0.658865485 ubox
39 64 0.220958975 ubox
40 46 0.026267593 ubox
40 48 0.015533008 ubox
40 53 0.003569674 ubox
40 57 0.006954767 ubox
40 63 0.265846833 ubox
41 52 0.003645877 ubox
41 53 0.003412461 ubox
42 60 0.377989180 ubox
42 62 0.198167975 ubox
43 51 0.009200816 ubox
43 58 0.780897252 ubox
43 59 0.272430405 ubox
43 61 0.183778639 ubox
44 50 0.009581605 ubox
44 57 0.872338607 ubox
45 56 0.875769753 ubox
45 63 0.075090524 ubox
46 55 0.875564155 ubox
46 62 0.075146576 ubox
47 54 0.666728491 ubox
47 56 0.320967249 ubox
47 63 0.025749505 ubox
48 55 0.323318403 ubox
48 62 0.025838110 ubox
49 54 0.313254554 ubox
50 58 0.009297770 ubox
51 57 0.009295470 ubox
52 59 0.013076053 ubox
52 60 0.005019872 ubox
52 61 0.023226556 ubox
52 62 0.006209969 ubox
53 58 0.012976092 ubox
53 59 0.005722303 ubox
53 60 0.024590933 ubox
53 61 0.010485437 ubox
53 62 0.004874590 ubox
54 58 0.004933361 ubox
54 59 0.024392334 ubox
54 60 0.010717787 ubox
54 61 0.007571713 ubox
54 64 0.305736095 ubox
55 63 0.345429447 ubox
56 62 0.345424141 ubox
57 61 0.311220087 ubox
3 32 0.9500000 lbox
4 31 0.9500000 lbox
5 30 0.9500000 lbox
7 29 0.9500000 lbox
8 28 0.9500000 lbox
9 27 0.9500000 lbox
10 26 0.9500000 lbox
37 63 0.9500000 lbox
38 62 0.9500000 lbox
39 61 0.9500000 lbox
43 58 0.9500000 lbox
44 57 0.9500000 lbox
45 56 0.9500000 lbox
46 55 0.9500000 lbox
47 54 0.9500000 lbox
showpage
end
%%EOF
