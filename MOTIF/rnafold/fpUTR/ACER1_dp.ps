%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:49:43 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ACER1)
} def

/sequence { (\
CCUCAUCAGGGCCCAGCCUUCCCAAGCUCGCCUUCUCUCUGCCGGGCGCAGCCGGCUGGUGGUGGCCACUGAGACAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 73 0.195473662 ubox
2 78 0.153181973 ubox
3 72 0.185906413 ubox
3 74 0.767840353 ubox
3 77 0.146406604 ubox
4 71 0.179522013 ubox
4 73 0.828329925 ubox
5 70 0.163563566 ubox
6 72 0.963339030 ubox
6 74 0.010844264 ubox
7 71 0.983441804 ubox
7 73 0.009275207 ubox
8 20 0.007526003 ubox
8 34 0.014162714 ubox
8 70 0.985249449 ubox
9 19 0.009103219 ubox
9 33 0.017725606 ubox
9 67 0.009787969 ubox
9 69 0.985814662 ubox
10 18 0.009795899 ubox
10 32 0.018533292 ubox
10 66 0.007598586 ubox
10 67 0.998825665 ubox
11 17 0.009806502 ubox
11 31 0.018577626 ubox
11 63 0.003449116 ubox
11 66 0.999717911 ubox
12 16 0.009738821 ubox
12 30 0.018561115 ubox
12 62 0.004437127 ubox
12 65 0.996753848 ubox
13 59 0.105594714 ubox
13 61 0.004584145 ubox
13 62 0.141877727 ubox
13 64 0.976281179 ubox
13 65 0.076031755 ubox
14 58 0.149321895 ubox
14 61 0.200332306 ubox
14 64 0.107353288 ubox
15 28 0.030379618 ubox
15 57 0.149399794 ubox
15 60 0.162883747 ubox
15 63 0.122040073 ubox
16 27 0.032805664 ubox
16 56 0.149485129 ubox
16 60 0.952063360 ubox
16 63 0.175810144 ubox
17 26 0.032165616 ubox
17 55 0.149309072 ubox
17 59 0.969840482 ubox
17 62 0.187382264 ubox
18 26 0.007151383 ubox
18 54 0.148828005 ubox
18 58 0.969696721 ubox
18 59 0.018614094 ubox
18 61 0.187145365 ubox
18 62 0.008134012 ubox
19 25 0.014663628 ubox
19 58 0.021675130 ubox
19 59 0.027446965 ubox
19 61 0.008659549 ubox
20 24 0.013030433 ubox
20 25 0.006888168 ubox
20 55 0.014401218 ubox
20 58 0.025007162 ubox
20 59 0.082903732 ubox
21 54 0.014780520 ubox
21 55 0.951169118 ubox
21 58 0.093871634 ubox
21 59 0.072817423 ubox
21 61 0.004308462 ubox
22 54 0.950060154 ubox
22 55 0.215767643 ubox
22 58 0.070973902 ubox
22 59 0.123431102 ubox
23 54 0.220891560 ubox
23 58 0.124030380 ubox
24 34 0.011037316 ubox
24 57 0.103608153 ubox
25 33 0.014489966 ubox
25 36 0.009357659 ubox
25 38 0.004149622 ubox
25 40 0.004824607 ubox
25 57 0.073647718 ubox
26 32 0.014759519 ubox
26 35 0.009878948 ubox
26 37 0.004345081 ubox
26 39 0.004916796 ubox
26 47 0.030429950 ubox
26 49 0.007014701 ubox
26 52 0.992531574 ubox
26 56 0.098771729 ubox
26 63 0.009045490 ubox
26 66 0.005287545 ubox
27 46 0.030439459 ubox
27 48 0.006402396 ubox
27 51 0.993057290 ubox
27 55 0.098665751 ubox
27 62 0.009129608 ubox
27 65 0.005267255 ubox
27 73 0.003451165 ubox
28 45 0.030414506 ubox
28 50 0.989255161 ubox
28 54 0.094744769 ubox
28 62 0.007441002 ubox
28 72 0.003467024 ubox
29 44 0.030424279 ubox
29 48 0.995964221 ubox
29 54 0.023580546 ubox
29 61 0.018429525 ubox
29 64 0.011254824 ubox
29 71 0.003466276 ubox
30 42 0.017657663 ubox
30 43 0.024601987 ubox
30 47 0.996770831 ubox
30 49 0.034523067 ubox
30 52 0.030858329 ubox
30 53 0.023288312 ubox
30 56 0.004466683 ubox
30 60 0.019214340 ubox
30 63 0.018991430 ubox
30 66 0.008025637 ubox
31 41 0.024764673 ubox
31 45 0.020857480 ubox
31 46 0.996524075 ubox
31 48 0.034511478 ubox
31 51 0.030135400 ubox
31 55 0.004469524 ubox
31 59 0.019229627 ubox
31 62 0.019358055 ubox
31 65 0.008061726 ubox
32 44 0.029388720 ubox
32 45 0.995781943 ubox
32 46 0.013987597 ubox
32 51 0.021961268 ubox
32 54 0.004460340 ubox
32 58 0.019077769 ubox
32 61 0.019293224 ubox
32 64 0.008077319 ubox
33 44 0.938305636 ubox
33 45 0.014054243 ubox
33 46 0.016596271 ubox
33 50 0.022483417 ubox
34 44 0.047805233 ubox
34 45 0.025180411 ubox
34 46 0.004787785 ubox
34 59 0.006557980 ubox
34 62 0.007190451 ubox
34 74 0.004910870 ubox
35 44 0.117372514 ubox
35 45 0.010039448 ubox
35 46 0.038601841 ubox
35 55 0.008217768 ubox
35 58 0.007228232 ubox
35 59 0.009302278 ubox
35 61 0.008914900 ubox
35 62 0.006538612 ubox
35 73 0.006001224 ubox
36 44 0.015320157 ubox
36 45 0.039883915 ubox
36 46 0.005961872 ubox
36 54 0.008086775 ubox
36 58 0.006753835 ubox
36 59 0.007480297 ubox
36 61 0.006339676 ubox
36 62 0.004645032 ubox
36 72 0.006004424 ubox
36 74 0.008708648 ubox
37 44 0.075980398 ubox
37 45 0.008761441 ubox
37 46 0.023459625 ubox
37 58 0.009489685 ubox
37 59 0.011898400 ubox
37 61 0.006020983 ubox
37 71 0.005986476 ubox
37 73 0.009365118 ubox
38 44 0.011606366 ubox
38 45 0.023906083 ubox
38 58 0.010536200 ubox
38 59 0.010705016 ubox
38 72 0.009364747 ubox
39 44 0.037373045 ubox
39 45 0.003713671 ubox
39 51 0.013907029 ubox
39 58 0.014958876 ubox
39 59 0.006195659 ubox
39 62 0.006887345 ubox
39 71 0.009335658 ubox
40 44 0.005291070 ubox
40 50 0.016363122 ubox
40 58 0.005862682 ubox
40 61 0.006936281 ubox
41 49 0.016487033 ubox
41 56 0.050652255 ubox
41 60 0.007699641 ubox
42 48 0.016466981 ubox
42 55 0.050751109 ubox
42 59 0.007734483 ubox
43 54 0.050782582 ubox
43 58 0.007735383 ubox
44 53 0.050428283 ubox
44 57 0.007722089 ubox
45 52 0.050030894 ubox
45 53 0.006905757 ubox
45 56 0.007716323 ubox
46 52 0.009204354 ubox
47 51 0.010946044 ubox
47 54 0.007704382 ubox
48 53 0.007396327 ubox
57 68 0.009364574 ubox
58 67 0.010565115 ubox
58 70 0.012415157 ubox
59 66 0.010568501 ubox
59 69 0.015072443 ubox
60 65 0.010445096 ubox
60 68 0.015133392 ubox
61 67 0.015157782 ubox
62 66 0.014913019 ubox
69 78 0.003199546 ubox
70 77 0.003232892 ubox
3 74 0.9500000 lbox
4 73 0.9500000 lbox
6 72 0.9500000 lbox
7 71 0.9500000 lbox
8 70 0.9500000 lbox
9 69 0.9500000 lbox
10 67 0.9500000 lbox
11 66 0.9500000 lbox
12 65 0.9500000 lbox
13 64 0.9500000 lbox
16 60 0.9500000 lbox
17 59 0.9500000 lbox
18 58 0.9500000 lbox
21 55 0.9500000 lbox
22 54 0.9500000 lbox
26 52 0.9500000 lbox
27 51 0.9500000 lbox
28 50 0.9500000 lbox
29 48 0.9500000 lbox
30 47 0.9500000 lbox
31 46 0.9500000 lbox
32 45 0.9500000 lbox
33 44 0.9500000 lbox
showpage
end
%%EOF
