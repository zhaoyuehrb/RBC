%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:16:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCGCCCCGCCCCCGCUCGCCCCGCCCCUGGAUUUGCUCCCUCAAAGCGGAGGUGAGGCCGGACUGAGGCUCUUACAGUGGUCCCUGCUGGCCCUUGGUGACGGGUCGCGUCAGUUCCGACCCGGACCCGUACGCUGCUGCGCUGACGUGGCUCCUGGAAGCAGGGCUGGCGUAGGGCCGCC\
) } def
/len { sequence length } bind def

/coor [
[-179.28578186 218.13348389]
[-194.70046997 222.23693848]
[-210.47215271 220.12083435]
[-224.19343567 212.13798523]
[-233.78137207 199.53440857]
[-248.22512817 203.58135986]
[-262.66888428 207.62831116]
[-273.86981201 218.80192566]
[-288.21261597 214.78532410]
[-302.65637207 218.83227539]
[-310.43734741 232.32650757]
[-325.14303589 236.22494507]
[-337.95974731 228.72381592]
[-352.40353394 232.77076721]
[-363.60443115 243.94439697]
[-377.94726562 239.92779541]
[-392.39102173 243.97474670]
[-406.79971313 248.14485168]
[-421.17227173 252.43780518]
[-435.54483032 256.73077393]
[-449.91738892 261.02374268]
[-464.28994751 265.31668091]
[-478.62533569 269.73217773]
[-492.92248535 274.26989746]
[-507.21966553 278.80761719]
[-521.51684570 283.34533691]
[-524.89227295 299.52017212]
[-535.89581299 311.72048950]
[-551.45880127 316.68499756]
[-567.31146240 313.15084839]
[-579.15435791 302.17346191]
[-593.37200928 306.95462036]
[-597.88690186 321.80032349]
[-610.28594971 331.13003540]
[-625.80139160 331.35632324]
[-638.46722412 322.39218140]
[-643.41314697 307.68444824]
[-638.73742676 292.88858032]
[-626.23791504 283.69390869]
[-610.72094727 283.63595581]
[-598.15313721 292.73699951]
[-583.93554688 287.95584106]
[-582.11737061 274.40744019]
[-574.59881592 262.91174316]
[-562.80169678 255.74714661]
[-549.00250244 254.36291504]
[-535.89276123 259.08645630]
[-526.05456543 269.04818726]
[-511.75738525 264.51046753]
[-497.46020508 259.97274780]
[-483.16305542 255.43501282]
[-477.72573853 250.40272522]
[-468.58288574 250.94413757]
[-454.21032715 246.65116882]
[-439.83776855 242.35821533]
[-425.46520996 238.06524658]
[-411.09265137 233.77229309]
[-405.57025146 228.83355713]
[-396.43795776 229.53097534]
[-381.99420166 225.48402405]
[-371.82638550 214.59986877]
[-356.45046997 218.32701111]
[-342.00671387 214.28005981]
[-334.95330811 201.21157837]
[-320.36291504 196.90164185]
[-306.70333862 204.38851929]
[-292.25958252 200.34156799]
[-282.09176636 189.45741272]
[-266.71585083 193.18453979]
[-252.27207947 189.13758850]
[-237.82832336 185.09063721]
[-236.68395996 171.09167480]
[-230.81391907 158.29855347]
[-220.90585327 148.25894165]
[-208.13725281 142.19505310]
[-194.03556824 140.85487366]
[-180.29544067 144.41995239]
[-168.57504272 152.48117065]
[-160.29605103 164.08547974]
[-145.78530884 160.28572083]
[-131.27455139 156.48596191]
[-116.76380920 152.68620300]
[-102.25305939 148.88642883]
[-87.74230957 145.08666992]
[-73.23156738 141.28691101]
[-61.45027161 128.29415894]
[-43.73454666 133.27696228]
[-29.29078674 129.23001099]
[-14.84702778 125.18305969]
[-0.40326813 121.13610840]
[14.04049110 117.08915710]
[28.48425102 113.04220581]
[42.92800903 108.99525452]
[57.37176895 104.94830322]
[71.81552887 100.90135193]
[86.25928497 96.85440063]
[87.41871643 82.05698395]
[103.63945007 70.49096680]
[115.11180878 60.82736588]
[126.58415985 51.16377258]
[138.05651855 41.50017548]
[149.44595337 31.73899460]
[160.75164795 21.88093948]
[172.05734253 12.02288437]
[183.36303711 2.16482949]
[194.66873169 -7.69322586]
[205.97442627 -17.55128098]
[217.28012085 -27.40933609]
[218.14686584 -44.86983490]
[231.11038208 -56.08954239]
[247.84263611 -54.50553131]
[258.97836304 -64.55516815]
[270.11410522 -74.60481262]
[270.67288208 -90.39922333]
[282.29309082 -101.11116791]
[298.08071899 -100.38545227]
[308.66921997 -88.65261841]
[307.77661133 -72.87355804]
[295.93249512 -62.40970230]
[280.16375732 -63.46907043]
[269.02801514 -53.41942978]
[257.89227295 -43.36978912]
[259.03744507 -30.52162933]
[252.46900940 -19.19449234]
[240.39521790 -13.64383888]
[227.13818359 -16.10364151]
[215.83248901 -6.24558544]
[204.52679443 3.61246967]
[193.22109985 13.47052479]
[181.91540527 23.32858086]
[170.60971069 33.18663406]
[159.30401611 43.04468918]
[156.32173157 49.82659149]
[147.72010803 52.97253036]
[136.24775696 62.63612747]
[124.77540588 72.29972076]
[113.30304718 81.96331787]
[116.60517883 96.59533691]
[131.11593628 100.39509583]
[145.62667847 104.19486237]
[160.13742065 107.99462128]
[174.64817810 111.79438782]
[189.15892029 115.59414673]
[204.82324219 110.74017334]
[216.67364502 122.07595062]
[212.51945496 137.94021606]
[196.63414001 142.01315308]
[185.35916138 130.10488892]
[170.84840393 126.30513000]
[156.33766174 122.50537109]
[141.82691956 118.70560455]
[127.31616974 114.90584564]
[112.80541992 111.10607910]
[124.97869873 119.87028503]
[131.43539429 133.40953064]
[130.58340454 148.38531494]
[122.63282013 161.10491943]
[109.54409027 168.43193054]
[94.54463196 168.55969238]
[81.33300781 161.45666504]
[73.16693115 148.87432861]
[72.05998993 133.91522217]
[78.28513336 120.26797485]
[90.30623627 111.29816437]
[75.86248016 115.34511566]
[61.41872025 119.39206696]
[46.97496033 123.43901825]
[32.53120041 127.48596954]
[18.08744240 131.53291321]
[3.64368343 135.57986450]
[-10.80007553 139.62681580]
[-25.24383545 143.67376709]
[-39.68759537 147.72071838]
[-46.68896484 158.57182312]
[-58.82053375 161.63629150]
[-69.43180084 155.79765320]
[-83.94255066 159.59742737]
[-98.45330048 163.39718628]
[-112.96404266 167.19694519]
[-127.47479248 170.99670410]
[-141.98553467 174.79647827]
[-156.49629211 178.59623718]
[-158.57901001 194.52770996]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 71]
[6 70]
[7 69]
[9 67]
[10 66]
[13 63]
[14 62]
[16 60]
[17 59]
[18 57]
[19 56]
[20 55]
[21 54]
[22 53]
[23 51]
[24 50]
[25 49]
[26 48]
[31 42]
[32 41]
[79 182]
[80 181]
[81 180]
[82 179]
[83 178]
[84 177]
[85 176]
[87 173]
[88 172]
[89 171]
[90 170]
[91 169]
[92 168]
[93 167]
[94 166]
[95 165]
[96 164]
[98 137]
[99 136]
[100 135]
[101 134]
[102 132]
[103 131]
[104 130]
[105 129]
[106 128]
[107 127]
[108 126]
[111 122]
[112 121]
[113 120]
[138 153]
[139 152]
[140 151]
[141 150]
[142 149]
[143 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
