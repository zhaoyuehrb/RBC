%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:20:44 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MED14OS)
} def

/sequence { (\
AGCUGCACUGGGGCCAUGGCGGCGCAGGACCGGGCUUGGCGCAACGGCACACG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.033021104 ubox
1 36 0.213962603 ubox
1 37 0.012347022 ubox
2 8 0.035883782 ubox
2 14 0.100768207 ubox
2 20 0.028775384 ubox
2 23 0.199484872 ubox
2 25 0.004807620 ubox
2 35 0.246214920 ubox
2 36 0.007836792 ubox
2 40 0.211447065 ubox
2 42 0.064426767 ubox
2 48 0.753592747 ubox
3 11 0.043608614 ubox
3 12 0.093269827 ubox
3 13 0.100744631 ubox
3 19 0.028819448 ubox
3 22 0.199877100 ubox
3 24 0.004603881 ubox
3 27 0.232028990 ubox
3 28 0.011754028 ubox
3 33 0.092721950 ubox
3 34 0.238514794 ubox
3 39 0.211694991 ubox
3 41 0.064135310 ubox
3 47 0.754266129 ubox
4 10 0.042748514 ubox
4 11 0.092805812 ubox
4 12 0.099856817 ubox
4 16 0.008229608 ubox
4 18 0.028211868 ubox
4 21 0.200510679 ubox
4 26 0.233093525 ubox
4 27 0.005792989 ubox
4 32 0.111345808 ubox
4 33 0.227414011 ubox
4 38 0.198212654 ubox
4 41 0.010699047 ubox
4 43 0.303263970 ubox
4 46 0.711550438 ubox
4 49 0.192157720 ubox
4 51 0.065108886 ubox
4 53 0.015623161 ubox
5 9 0.020145719 ubox
5 14 0.043178766 ubox
5 15 0.006889314 ubox
5 17 0.005972886 ubox
5 20 0.201681076 ubox
5 23 0.003532586 ubox
5 25 0.233386474 ubox
5 31 0.126701017 ubox
5 35 0.254711108 ubox
5 37 0.065203368 ubox
5 40 0.033847687 ubox
5 42 0.398494903 ubox
5 45 0.664525600 ubox
5 48 0.216803439 ubox
5 50 0.073316978 ubox
5 52 0.027908932 ubox
6 13 0.043866655 ubox
6 18 0.022695943 ubox
6 19 0.200866208 ubox
6 22 0.003535103 ubox
6 24 0.233336436 ubox
6 34 0.255353457 ubox
6 38 0.057266670 ubox
6 39 0.032648427 ubox
6 41 0.405028451 ubox
6 47 0.216018724 ubox
7 17 0.028425135 ubox
7 37 0.054207354 ubox
8 19 0.011118613 ubox
8 22 0.225229758 ubox
8 27 0.259608487 ubox
8 28 0.061341662 ubox
8 33 0.266487684 ubox
8 34 0.094256024 ubox
8 39 0.396880661 ubox
8 47 0.092930064 ubox
9 16 0.193758447 ubox
9 18 0.012404147 ubox
9 21 0.224991713 ubox
9 26 0.259965189 ubox
9 27 0.060151346 ubox
9 32 0.266705713 ubox
9 33 0.094971591 ubox
9 38 0.364763803 ubox
9 41 0.044330640 ubox
9 43 0.622014018 ubox
9 46 0.098726143 ubox
9 49 0.004288762 ubox
9 51 0.149238539 ubox
9 53 0.060369773 ubox
10 15 0.197529786 ubox
10 17 0.012950729 ubox
10 20 0.221153323 ubox
10 23 0.004343042 ubox
10 25 0.259753636 ubox
10 31 0.265999222 ubox
10 36 0.004624898 ubox
10 37 0.307842390 ubox
10 40 0.044057047 ubox
10 42 0.629404806 ubox
10 45 0.101907666 ubox
10 50 0.168177104 ubox
10 52 0.109378010 ubox
11 30 0.265109389 ubox
11 31 0.098879567 ubox
11 35 0.005285615 ubox
11 36 0.277159589 ubox
11 37 0.230815231 ubox
12 30 0.100173470 ubox
12 31 0.020529355 ubox
12 35 0.238616879 ubox
12 36 0.302824610 ubox
12 37 0.007357439 ubox
13 20 0.058088234 ubox
13 23 0.279246933 ubox
13 25 0.004446167 ubox
13 30 0.021793662 ubox
13 35 0.337898045 ubox
13 40 0.695150206 ubox
13 42 0.019437940 ubox
13 48 0.284671698 ubox
14 19 0.059153000 ubox
14 22 0.279448475 ubox
14 24 0.004372878 ubox
14 28 0.276694182 ubox
14 33 0.191369968 ubox
14 34 0.366342994 ubox
14 39 0.695548543 ubox
14 41 0.018299748 ubox
14 47 0.285008497 ubox
15 21 0.279301277 ubox
15 27 0.277224004 ubox
15 32 0.186977075 ubox
15 33 0.365949146 ubox
15 38 0.695534231 ubox
15 46 0.284495215 ubox
16 37 0.664343987 ubox
17 24 0.045954817 ubox
17 26 0.263856399 ubox
17 32 0.273397443 ubox
17 43 0.025049532 ubox
17 46 0.009123923 ubox
17 49 0.093709723 ubox
17 51 0.013989853 ubox
18 23 0.050451356 ubox
18 25 0.263593789 ubox
18 31 0.332124013 ubox
18 36 0.510733318 ubox
18 37 0.004734268 ubox
18 40 0.008008946 ubox
18 42 0.019606942 ubox
18 45 0.049227767 ubox
18 48 0.107673381 ubox
18 50 0.015994848 ubox
19 25 0.120807837 ubox
19 30 0.331017585 ubox
19 35 0.546604198 ubox
19 36 0.005689192 ubox
19 40 0.010234104 ubox
19 42 0.273937246 ubox
19 48 0.019060713 ubox
20 24 0.124774749 ubox
20 32 0.475930295 ubox
20 34 0.538949319 ubox
20 38 0.008229932 ubox
20 39 0.010159048 ubox
20 41 0.274228356 ubox
20 46 0.108298909 ubox
20 47 0.016351740 ubox
21 31 0.521245752 ubox
21 36 0.071165127 ubox
21 37 0.007352167 ubox
21 40 0.224793309 ubox
21 45 0.106512993 ubox
22 30 0.520441047 ubox
22 35 0.072132394 ubox
22 36 0.006653619 ubox
22 40 0.158438525 ubox
22 42 0.146449091 ubox
23 32 0.459488450 ubox
23 34 0.072103951 ubox
23 38 0.151979537 ubox
23 39 0.222735466 ubox
23 41 0.147071343 ubox
24 31 0.446869887 ubox
24 35 0.089687372 ubox
24 37 0.128070783 ubox
24 40 0.150513444 ubox
24 42 0.012190160 ubox
24 48 0.022412115 ubox
24 52 0.020124552 ubox
25 34 0.090431767 ubox
25 38 0.259391013 ubox
25 39 0.114587471 ubox
25 41 0.012013869 ubox
25 47 0.020648503 ubox
26 36 0.129681295 ubox
26 37 0.278395833 ubox
27 35 0.131273014 ubox
27 36 0.285497892 ubox
27 37 0.009832377 ubox
28 35 0.285118349 ubox
28 36 0.010231293 ubox
28 37 0.012175844 ubox
29 36 0.011584614 ubox
30 39 0.044583735 ubox
30 47 0.285655343 ubox
31 38 0.045215165 ubox
31 41 0.016630508 ubox
31 46 0.287295521 ubox
31 53 0.026393997 ubox
32 37 0.034459876 ubox
32 40 0.016909788 ubox
32 45 0.286742917 ubox
32 52 0.028132519 ubox
34 40 0.029897432 ubox
34 42 0.286416145 ubox
34 48 0.051766872 ubox
35 39 0.029781508 ubox
35 41 0.286559428 ubox
35 47 0.051641949 ubox
36 44 0.015478279 ubox
36 46 0.037814167 ubox
36 47 0.013999215 ubox
37 43 0.019218537 ubox
37 46 0.039838666 ubox
37 49 0.133928366 ubox
37 51 0.201631992 ubox
37 53 0.010273655 ubox
38 42 0.019431243 ubox
38 45 0.054866207 ubox
38 48 0.150205275 ubox
38 50 0.227262788 ubox
38 52 0.017234512 ubox
39 48 0.280982394 ubox
40 46 0.150431423 ubox
40 47 0.281299732 ubox
40 53 0.004330457 ubox
41 45 0.141526847 ubox
41 48 0.098695065 ubox
41 52 0.007809259 ubox
42 47 0.097438321 ubox
45 53 0.175965631 ubox
46 52 0.184632155 ubox
2 48 0.9500000 lbox
3 47 0.9500000 lbox
4 46 0.9500000 lbox
5 45 0.9500000 lbox
9 43 0.9500000 lbox
10 42 0.9500000 lbox
13 40 0.9500000 lbox
14 39 0.9500000 lbox
15 38 0.9500000 lbox
16 37 0.9500000 lbox
20 32 0.9500000 lbox
21 31 0.9500000 lbox
22 30 0.9500000 lbox
showpage
end
%%EOF
