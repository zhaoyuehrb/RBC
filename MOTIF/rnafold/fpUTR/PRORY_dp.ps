%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:54:59 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PRORY)
} def

/sequence { (\
ACAGGAGGACAAGGACUCAGGGGUCUGCUGGUCCAUCUCUGCACCUUGAAACAGCAGCUGGGGCACCAGAAGUAACCCUUACAGCCAACACCAUGUG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 96 0.594506033 ubox
2 41 0.030896373 ubox
2 48 0.003163110 ubox
2 95 0.629485604 ubox
2 97 0.319130519 ubox
3 17 0.007654184 ubox
3 38 0.016614442 ubox
3 40 0.031058217 ubox
3 46 0.003812402 ubox
3 79 0.008319233 ubox
3 80 0.003521929 ubox
3 94 0.622616227 ubox
3 96 0.320665793 ubox
4 16 0.008189936 ubox
4 18 0.021373185 ubox
4 37 0.018088669 ubox
4 38 0.017293609 ubox
4 39 0.030880947 ubox
4 40 0.003246636 ubox
4 45 0.004431248 ubox
4 78 0.008871554 ubox
4 79 0.003414235 ubox
4 86 0.026556332 ubox
4 92 0.303187124 ubox
5 16 0.003267254 ubox
5 17 0.009634299 ubox
5 18 0.383177311 ubox
5 36 0.017746410 ubox
5 37 0.034902591 ubox
5 38 0.008053332 ubox
5 39 0.004107192 ubox
5 44 0.004423366 ubox
5 77 0.008774947 ubox
5 78 0.003204637 ubox
5 80 0.010707346 ubox
5 85 0.020227617 ubox
5 91 0.300149452 ubox
6 17 0.385032581 ubox
6 36 0.034941458 ubox
6 38 0.004567617 ubox
6 79 0.011787881 ubox
7 16 0.385311301 ubox
7 17 0.007457114 ubox
7 18 0.012408739 ubox
7 34 0.045234816 ubox
7 37 0.004331299 ubox
7 38 0.007908862 ubox
7 40 0.004472697 ubox
7 77 0.003197749 ubox
7 78 0.011845298 ubox
7 86 0.027813614 ubox
7 92 0.806101621 ubox
8 16 0.009083440 ubox
8 17 0.011705565 ubox
8 18 0.012166469 ubox
8 33 0.045297647 ubox
8 36 0.003703476 ubox
8 37 0.008782644 ubox
8 39 0.004649102 ubox
8 76 0.003221000 ubox
8 77 0.011806964 ubox
8 85 0.027813768 ubox
8 91 0.806281871 ubox
9 17 0.011706425 ubox
9 32 0.045263744 ubox
9 36 0.008810516 ubox
9 38 0.004590532 ubox
9 73 0.004358451 ubox
9 96 0.048715956 ubox
10 30 0.007571983 ubox
10 31 0.044610257 ubox
10 48 0.007483852 ubox
10 72 0.004418173 ubox
10 95 0.050009095 ubox
10 97 0.005324327 ubox
11 29 0.010250452 ubox
11 47 0.007514649 ubox
11 80 0.005732792 ubox
11 94 0.049057142 ubox
11 96 0.004241252 ubox
12 29 0.010343007 ubox
12 46 0.007522261 ubox
12 79 0.005953227 ubox
13 26 0.044093437 ubox
13 28 0.010156691 ubox
13 34 0.017124781 ubox
13 45 0.007526200 ubox
13 78 0.005915276 ubox
13 80 0.003997547 ubox
13 86 0.915135561 ubox
13 92 0.039288099 ubox
14 25 0.045534942 ubox
14 33 0.017143791 ubox
14 44 0.007510431 ubox
14 77 0.005819405 ubox
14 80 0.007212803 ubox
14 85 0.916427325 ubox
14 91 0.039141063 ubox
15 24 0.045562458 ubox
15 32 0.017141839 ubox
15 79 0.004518862 ubox
16 23 0.045529281 ubox
16 31 0.017042663 ubox
16 84 0.724306851 ubox
17 22 0.041852294 ubox
17 30 0.007467578 ubox
17 49 0.004586261 ubox
17 83 0.703997389 ubox
18 22 0.005126102 ubox
18 27 0.007732839 ubox
18 30 0.015176716 ubox
18 41 0.007455930 ubox
18 48 0.004835095 ubox
19 26 0.007784311 ubox
19 29 0.015336896 ubox
19 40 0.007486690 ubox
19 47 0.004824900 ubox
19 79 0.381941213 ubox
19 80 0.805566215 ubox
20 25 0.007753287 ubox
20 28 0.015290366 ubox
20 39 0.007487766 ubox
20 46 0.004802267 ubox
20 77 0.009327393 ubox
20 78 0.391792593 ubox
20 79 0.907687199 ubox
20 80 0.051332580 ubox
20 86 0.003505447 ubox
20 92 0.003542363 ubox
21 38 0.007375802 ubox
21 45 0.004785099 ubox
21 76 0.009649326 ubox
21 77 0.391327893 ubox
21 78 0.918336251 ubox
21 79 0.020663561 ubox
21 91 0.003425453 ubox
22 37 0.007253086 ubox
22 44 0.004760285 ubox
22 76 0.390627327 ubox
22 77 0.918603751 ubox
22 78 0.020114793 ubox
22 86 0.003798710 ubox
23 36 0.007027871 ubox
23 73 0.023512679 ubox
23 76 0.918672722 ubox
23 77 0.019403505 ubox
23 85 0.003806224 ubox
24 35 0.006429421 ubox
24 70 0.149911855 ubox
24 72 0.005383859 ubox
24 75 0.855279597 ubox
25 57 0.067879666 ubox
25 69 0.194382820 ubox
25 72 0.905035356 ubox
26 43 0.005011942 ubox
26 56 0.069008868 ubox
26 68 0.194407186 ubox
26 71 0.809033482 ubox
26 74 0.117393555 ubox
27 42 0.005217539 ubox
27 55 0.069279070 ubox
27 67 0.194138201 ubox
27 73 0.119995272 ubox
28 41 0.005207871 ubox
28 54 0.069279527 ubox
28 69 0.965137638 ubox
28 72 0.107722157 ubox
29 53 0.069209824 ubox
29 65 0.192245677 ubox
29 68 0.973571133 ubox
29 71 0.076599969 ubox
30 37 0.003436314 ubox
30 38 0.005001620 ubox
30 39 0.003877285 ubox
30 45 0.017151974 ubox
30 52 0.067605490 ubox
30 64 0.194437863 ubox
30 67 0.976771401 ubox
31 37 0.005775648 ubox
31 44 0.018798748 ubox
31 52 0.006019469 ubox
31 64 0.053010885 ubox
31 66 0.975566509 ubox
32 43 0.018436177 ubox
32 49 0.021041202 ubox
32 51 0.008168596 ubox
32 62 0.218897940 ubox
32 63 0.081020839 ubox
32 65 0.963452344 ubox
33 48 0.019963160 ubox
33 61 0.288698934 ubox
33 62 0.139474093 ubox
33 63 0.932597918 ubox
34 41 0.019660868 ubox
34 48 0.050558440 ubox
34 60 0.289298850 ubox
34 61 0.140691669 ubox
34 62 0.931341223 ubox
35 40 0.017132688 ubox
35 47 0.050357384 ubox
35 59 0.286744099 ubox
36 49 0.018273377 ubox
36 61 0.577640949 ubox
36 62 0.068825566 ubox
36 63 0.090853398 ubox
37 48 0.018604073 ubox
37 57 0.113003295 ubox
37 60 0.639004495 ubox
37 61 0.120783597 ubox
37 62 0.094637834 ubox
37 63 0.016489812 ubox
38 49 0.013166790 ubox
38 56 0.111681278 ubox
38 60 0.112600513 ubox
38 61 0.097100417 ubox
38 62 0.016582731 ubox
39 48 0.013613681 ubox
39 54 0.111777086 ubox
39 57 0.981822777 ubox
39 60 0.093960189 ubox
39 61 0.018708591 ubox
40 53 0.111773762 ubox
40 56 0.984498546 ubox
40 60 0.017462365 ubox
40 65 0.009841498 ubox
41 52 0.111455585 ubox
41 55 0.985103126 ubox
41 58 0.102816089 ubox
41 64 0.014309639 ubox
42 48 0.036665843 ubox
42 54 0.983943209 ubox
42 57 0.102967498 ubox
42 63 0.014250673 ubox
42 97 0.013712573 ubox
43 47 0.031267588 ubox
43 96 0.013966303 ubox
44 61 0.007830511 ubox
44 62 0.012459652 ubox
44 95 0.013962272 ubox
45 54 0.095136982 ubox
45 57 0.003532122 ubox
45 60 0.007850934 ubox
45 61 0.012470776 ubox
46 53 0.097670444 ubox
46 54 0.026877909 ubox
46 57 0.009539431 ubox
46 60 0.011683033 ubox
47 53 0.156918900 ubox
47 56 0.024270217 ubox
47 87 0.003448087 ubox
47 93 0.010372457 ubox
48 52 0.157481218 ubox
48 55 0.024721600 ubox
48 86 0.003528539 ubox
48 92 0.010459527 ubox
51 96 0.005348222 ubox
52 60 0.005762158 ubox
52 95 0.005514553 ubox
53 59 0.005871797 ubox
53 94 0.005424893 ubox
54 58 0.005748486 ubox
54 73 0.018562409 ubox
54 85 0.013929835 ubox
54 96 0.004499023 ubox
55 72 0.018995180 ubox
55 84 0.013934402 ubox
55 95 0.004906600 ubox
56 94 0.004798059 ubox
57 85 0.022146454 ubox
58 69 0.081044877 ubox
58 84 0.022410654 ubox
59 68 0.081397618 ubox
59 83 0.022315036 ubox
59 93 0.004858606 ubox
60 67 0.081481419 ubox
60 78 0.018759849 ubox
60 79 0.010594734 ubox
60 82 0.018003308 ubox
60 92 0.005098740 ubox
61 66 0.081428047 ubox
61 77 0.019794413 ubox
61 78 0.019304953 ubox
61 79 0.005039453 ubox
61 91 0.005095657 ubox
62 76 0.019799799 ubox
62 77 0.019314797 ubox
62 78 0.005424725 ubox
62 86 0.006884459 ubox
63 76 0.019257309 ubox
63 77 0.005403549 ubox
63 85 0.006897010 ubox
64 72 0.003421720 ubox
64 84 0.006890569 ubox
65 73 0.024006018 ubox
66 72 0.024232599 ubox
68 79 0.003885131 ubox
69 78 0.004025681 ubox
70 80 0.009937221 ubox
71 79 0.010492415 ubox
72 78 0.010522000 ubox
72 82 0.026844821 ubox
73 81 0.026866489 ubox
74 80 0.026578072 ubox
75 79 0.020264652 ubox
79 88 0.003301294 ubox
80 87 0.006371701 ubox
80 97 0.119846042 ubox
81 96 0.184485108 ubox
82 95 0.189979922 ubox
82 97 0.027581868 ubox
83 94 0.186432931 ubox
83 96 0.026319517 ubox
84 96 0.023092660 ubox
85 95 0.023419568 ubox
86 95 0.055593176 ubox
86 97 0.045444696 ubox
87 94 0.051988960 ubox
87 96 0.037579737 ubox
88 96 0.183894530 ubox
89 95 0.191485505 ubox
89 97 0.206257896 ubox
90 94 0.155234170 ubox
90 96 0.208269322 ubox
91 95 0.206477504 ubox
7 92 0.9500000 lbox
8 91 0.9500000 lbox
13 86 0.9500000 lbox
14 85 0.9500000 lbox
16 84 0.9500000 lbox
17 83 0.9500000 lbox
19 80 0.9500000 lbox
20 79 0.9500000 lbox
21 78 0.9500000 lbox
22 77 0.9500000 lbox
23 76 0.9500000 lbox
24 75 0.9500000 lbox
25 72 0.9500000 lbox
26 71 0.9500000 lbox
28 69 0.9500000 lbox
29 68 0.9500000 lbox
30 67 0.9500000 lbox
31 66 0.9500000 lbox
32 65 0.9500000 lbox
33 63 0.9500000 lbox
34 62 0.9500000 lbox
39 57 0.9500000 lbox
40 56 0.9500000 lbox
41 55 0.9500000 lbox
42 54 0.9500000 lbox
showpage
end
%%EOF
