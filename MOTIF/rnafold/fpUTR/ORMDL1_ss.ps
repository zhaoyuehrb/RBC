%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:22:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUUCCGCAAGCUGCGCAGCGCCGGGCCUGAGGGCGUGUAUCCGCGGCCGUAGCAGCCGGGCUGGUCCUGCUGCGAGCCGGCGGCCCGGAGUGGGGCGGCGGCAUGUACCUUCCACAUUGAGUAUUCAGAAAGAAGUGAUCUGAACUCUGACCAUUCUUUAUGGAUACAUUAAGUCAAAUAUAAGAGUCUGACUACUUGACACACUGGCUCGAGCAAAC\
) } def
/len { sequence length } bind def

/coor [
[84.20844269 281.34329224]
[76.65917969 268.38250732]
[71.84179688 282.58786011]
[67.02441406 296.79324341]
[72.02129364 308.67895508]
[67.72183228 320.40841675]
[56.94130707 325.88522339]
[51.92247772 340.02069092]
[46.90365219 354.15615845]
[41.88482666 368.29162598]
[42.28309250 385.24087524]
[26.10645676 390.31561279]
[16.75191689 376.17599487]
[27.74936104 363.27279663]
[32.76818848 349.13732910]
[37.78701401 335.00186157]
[42.80583954 320.86639404]
[38.69942093 303.80139160]
[52.81903458 291.97586060]
[57.63641739 277.77047729]
[62.45380402 263.56512451]
[66.66118622 249.16726685]
[70.25092316 234.60313416]
[73.73705292 220.01387024]
[77.11940002 205.40017700]
[80.50173950 190.78649902]
[83.88408661 176.17282104]
[87.26643372 161.55912781]
[90.64878082 146.94544983]
[62.65298080 122.62094116]
[62.13213730 88.90637970]
[48.80108643 82.03010559]
[35.47003174 75.15383911]
[22.13898277 68.27757263]
[8.75939465 61.49622726]
[-4.66805506 54.81015015]
[-18.09550476 48.12407684]
[-31.52295303 41.43799973]
[-44.95040131 34.75192642]
[-50.14569092 35.07336807]
[-54.51096725 33.52859879]
[-57.47533798 30.74456787]
[-58.79861832 27.48382187]
[-71.92881012 20.23137093]
[-85.05900574 12.97892094]
[-98.18919373 5.72646999]
[-114.01008606 5.82694864]
[-121.40989685 -7.09946156]
[-134.54008484 -14.35191250]
[-147.67027283 -21.60436249]
[-163.49116516 -21.50388336]
[-170.89097595 -34.43029404]
[-184.02116394 -41.68274307]
[-194.57637024 -36.23152161]
[-206.33207703 -36.54566956]
[-216.37429810 -42.43170547]
[-222.26953125 -52.32933044]
[-222.65415955 -63.72329330]
[-235.57287598 -71.34606171]
[-248.49159241 -78.96883392]
[-261.41030884 -86.59159851]
[-274.32904053 -94.21437073]
[-287.24777222 -101.83714294]
[-300.16647339 -109.45991516]
[-313.08520508 -117.08267975]
[-319.66989136 -117.52626038]
[-324.34442139 -120.74195099]
[-326.25842285 -125.11022949]
[-338.95523071 -133.09715271]
[-354.75625610 -133.89595032]
[-361.40948486 -147.22201538]
[-374.10629272 -155.20893860]
[-386.80310059 -163.19587708]
[-403.42965698 -166.51165771]
[-404.84613037 -183.40632629]
[-389.00384521 -189.44436646]
[-378.81619263 -175.89268494]
[-366.11938477 -167.90574646]
[-353.42257690 -159.91882324]
[-338.52969360 -159.69129944]
[-330.96829224 -145.79397583]
[-318.27148438 -137.80703735]
[-305.46243286 -130.00140381]
[-292.54370117 -122.37863159]
[-279.62500000 -114.75586700]
[-266.70626831 -107.13309479]
[-253.78755188 -99.51032257]
[-240.86882019 -91.88755798]
[-227.95010376 -84.26478577]
[-215.03138733 -76.64201355]
[-197.60552979 -82.26778412]
[-181.32574463 -73.20761871]
[-176.76872253 -54.81293869]
[-163.63851929 -47.56048584]
[-148.75680542 -48.17971039]
[-140.41783142 -34.73455429]
[-127.28763580 -27.48210526]
[-114.15744019 -20.22965431]
[-99.27571869 -20.84887695]
[-90.93674469 -7.40372276]
[-77.80655670 -0.15127218]
[-64.67636108 7.10117817]
[-51.54616928 14.35362911]
[-38.26432800 21.32447624]
[-24.83687782 28.01055145]
[-11.40942860 34.69662857]
[2.01802039 41.38270187]
[15.44546986 48.06877899]
[22.82868004 48.23633194]
[29.01525116 54.94651794]
[42.34630203 61.82278824]
[55.67735291 68.69905853]
[69.00840759 75.57532501]
[73.65019989 70.62770844]
[79.07087708 66.54831696]
[85.11019897 63.45772934]
[91.58966064 61.44731140]
[98.31772614 60.57648468]
[105.09551239 60.87099075]
[111.72268677 62.32212448]
[118.00334167 64.88699341]
[123.75183105 68.48977661]
[128.79823303 73.02397919]
[141.49504089 65.03705597]
[154.19184875 57.05012512]
[166.88865662 49.06319427]
[179.58546448 41.07626724]
[192.28227234 33.08934021]
[204.97908020 25.10241127]
[212.54048157 11.20507717]
[227.43334961 10.97755814]
[240.13015747 2.99063015]
[252.82696533 -4.99629831]
[265.52377319 -12.98322678]
[278.22058105 -20.97015381]
[290.91738892 -28.95708275]
[296.50985718 -36.16990280]
[303.85195923 -36.96581650]
[316.66101074 -44.77145386]
[324.41918945 -58.55989838]
[339.31378174 -58.57569504]
[352.12283325 -66.38133240]
[353.24450684 -81.85781097]
[363.27450562 -93.69751740]
[378.35610962 -97.34783936]
[392.69012451 -91.40515137]
[400.76483154 -78.15454865]
[399.47534180 -62.69114304]
[389.31750488 -50.96093750]
[374.19717407 -47.47443771]
[359.92846680 -53.57227325]
[347.11941528 -45.76663589]
[340.27743530 -32.53649902]
[324.46664429 -31.96239281]
[311.65759277 -24.15675545]
[298.90432739 -16.26027298]
[286.20751953 -8.27334499]
[273.51071167 -0.28641665]
[260.81390381 7.70051146]
[248.11708069 15.68743992]
[235.42027283 23.67436790]
[228.76704407 37.00042343]
[212.96601868 37.79922104]
[200.26921082 45.78614807]
[187.57240295 53.77307892]
[174.87557983 61.76000595]
[162.17877197 69.74693298]
[149.48196411 77.73386383]
[136.78515625 85.72078705]
[140.45080566 92.49537659]
[142.82247925 100.14543152]
[143.70156860 108.41515350]
[142.94143677 117.00545502]
[140.45668030 125.58471680]
[153.37539673 133.20748901]
[166.29412842 140.83026123]
[179.21284485 148.45303345]
[192.13156128 156.07579041]
[207.94891357 156.42509460]
[214.97827148 169.55664062]
[227.89700317 177.17941284]
[243.13635254 172.99160767]
[256.83190918 180.87875366]
[260.85836792 196.16152954]
[252.82687378 209.77294922]
[237.50238037 213.63758850]
[223.97663879 205.46263123]
[220.27423096 190.09812927]
[207.35551453 182.47535706]
[192.46218872 182.67129517]
[184.50878906 168.99452209]
[171.59007263 161.37174988]
[158.67135620 153.74897766]
[145.75262451 146.12620544]
[132.83390808 138.50343323]
[125.94104767 141.45953369]
[133.62373352 154.34269714]
[141.30644226 167.22587585]
[154.17202759 174.93798828]
[158.58520508 189.27409363]
[152.28405762 202.88641357]
[138.49815369 208.79815674]
[124.29325867 203.97933960]
[116.94990540 190.89976501]
[120.23109436 176.26429749]
[116.19320679 161.81800842]
[112.15531921 147.37170410]
[105.26245880 150.32778931]
[101.88011932 164.94148254]
[98.49777222 179.55516052]
[95.11542511 194.16883850]
[91.73307800 208.78253174]
[88.35073853 223.39620972]
[89.46432495 232.45492554]
[84.81504822 238.19287109]
[81.22531891 252.75700378]
[94.56655884 245.90052795]
[108.88820648 250.36039734]
[115.97785950 263.57919312]
[111.77013397 277.97695923]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 21]
[3 20]
[4 19]
[7 17]
[8 16]
[9 15]
[10 14]
[22 216]
[23 215]
[24 213]
[25 212]
[26 211]
[27 210]
[28 209]
[29 208]
[31 113]
[32 112]
[33 111]
[34 110]
[35 108]
[36 107]
[37 106]
[38 105]
[39 104]
[43 103]
[44 102]
[45 101]
[46 100]
[48 98]
[49 97]
[50 96]
[52 94]
[53 93]
[58 90]
[59 89]
[60 88]
[61 87]
[62 86]
[63 85]
[64 84]
[65 83]
[68 82]
[69 81]
[71 79]
[72 78]
[73 77]
[123 169]
[124 168]
[125 167]
[126 166]
[127 165]
[128 164]
[129 163]
[131 161]
[132 160]
[133 159]
[134 158]
[135 157]
[136 156]
[138 155]
[139 154]
[141 152]
[142 151]
[174 195]
[175 194]
[176 193]
[177 192]
[178 191]
[180 189]
[181 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
