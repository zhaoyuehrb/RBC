%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:22:44 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DMGDH)
} def

/sequence { (\
AGGCUGCCCGCUGGCCUCGGAGCAGGCGCCUGCGCCCUCGGCCUCGGCCUAGUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 17 0.038398513 ubox
1 31 0.185938212 ubox
1 38 0.009589649 ubox
1 44 0.012428453 ubox
1 50 0.391149112 ubox
2 8 0.006701165 ubox
2 9 0.012969083 ubox
2 12 0.007655757 ubox
2 16 0.044137687 ubox
2 30 0.196901637 ubox
2 36 0.042308873 ubox
2 37 0.010853155 ubox
2 43 0.014285995 ubox
2 49 0.414190075 ubox
2 50 0.029062397 ubox
2 54 0.843498369 ubox
3 7 0.006701126 ubox
3 8 0.012828922 ubox
3 11 0.008294343 ubox
3 15 0.044155005 ubox
3 23 0.003220667 ubox
3 29 0.196954860 ubox
3 33 0.004245161 ubox
3 35 0.042461347 ubox
3 36 0.010637748 ubox
3 42 0.014294728 ubox
3 48 0.413953173 ubox
3 49 0.029766395 ubox
3 53 0.879406325 ubox
4 10 0.008306969 ubox
4 14 0.044143753 ubox
4 22 0.003224342 ubox
4 25 0.007448505 ubox
4 28 0.192502193 ubox
4 32 0.004258123 ubox
4 34 0.041670487 ubox
4 41 0.014293740 ubox
4 47 0.398439033 ubox
4 52 0.882277504 ubox
5 13 0.043429545 ubox
5 24 0.011955142 ubox
5 28 0.044365598 ubox
5 34 0.012589909 ubox
5 40 0.014251181 ubox
5 46 0.378515790 ubox
5 51 0.864634941 ubox
6 12 0.029589536 ubox
6 15 0.011382292 ubox
6 23 0.013141551 ubox
6 27 0.197643193 ubox
6 29 0.003856894 ubox
6 33 0.039734057 ubox
6 39 0.014019179 ubox
6 42 0.045798985 ubox
6 45 0.363500467 ubox
6 48 0.422035964 ubox
6 50 0.732196173 ubox
6 53 0.009568497 ubox
7 14 0.011599039 ubox
7 22 0.013149655 ubox
7 26 0.197684014 ubox
7 28 0.003857023 ubox
7 32 0.039728085 ubox
7 41 0.045670797 ubox
7 47 0.378094955 ubox
7 52 0.010040725 ubox
8 13 0.011670638 ubox
8 20 0.013553884 ubox
8 25 0.197543355 ubox
8 26 0.006583479 ubox
8 40 0.043482879 ubox
8 41 0.177723549 ubox
8 46 0.321669866 ubox
8 47 0.790697613 ubox
9 19 0.013601829 ubox
9 25 0.007903695 ubox
9 28 0.035356906 ubox
9 34 0.041521422 ubox
9 40 0.178355964 ubox
9 46 0.825198418 ubox
10 18 0.013250392 ubox
10 23 0.197625832 ubox
10 27 0.035460241 ubox
10 29 0.018006881 ubox
10 33 0.042521832 ubox
10 39 0.178307542 ubox
10 42 0.120550491 ubox
10 45 0.848875373 ubox
10 48 0.163851153 ubox
10 53 0.012421371 ubox
11 20 0.009382987 ubox
11 22 0.197765039 ubox
11 26 0.035392800 ubox
11 28 0.017927972 ubox
11 32 0.042442148 ubox
11 41 0.120751166 ubox
11 47 0.163909932 ubox
11 52 0.012955742 ubox
12 19 0.011832891 ubox
12 21 0.197286652 ubox
12 24 0.003352220 ubox
12 25 0.032732141 ubox
12 40 0.120600415 ubox
12 46 0.152884764 ubox
12 51 0.012694645 ubox
13 18 0.017959907 ubox
13 23 0.003177266 ubox
13 30 0.041264611 ubox
13 36 0.178521238 ubox
13 37 0.017671897 ubox
13 38 0.011007506 ubox
13 39 0.119319266 ubox
13 43 0.951058822 ubox
13 44 0.010245673 ubox
13 45 0.049369142 ubox
13 49 0.015200150 ubox
14 23 0.036246901 ubox
14 27 0.021640994 ubox
14 29 0.041281363 ubox
14 35 0.178823477 ubox
14 36 0.015330283 ubox
14 37 0.039150077 ubox
14 38 0.103268558 ubox
14 42 0.952775078 ubox
14 43 0.016008568 ubox
14 44 0.008129617 ubox
14 48 0.015327952 ubox
15 22 0.036277180 ubox
15 26 0.022028747 ubox
15 28 0.041180431 ubox
15 34 0.178708676 ubox
15 41 0.952871633 ubox
15 47 0.015441398 ubox
16 22 0.003660428 ubox
16 25 0.022235530 ubox
16 26 0.017204302 ubox
16 40 0.951396031 ubox
16 41 0.011442786 ubox
16 46 0.015391924 ubox
17 21 0.004466179 ubox
17 24 0.021025971 ubox
17 25 0.011487584 ubox
17 26 0.035807610 ubox
17 40 0.014176125 ubox
17 41 0.005124020 ubox
18 25 0.039128924 ubox
18 32 0.159252174 ubox
18 34 0.011067723 ubox
18 40 0.014900052 ubox
19 30 0.015750861 ubox
19 31 0.160689380 ubox
19 33 0.013467562 ubox
19 36 0.654203858 ubox
19 37 0.651607006 ubox
19 38 0.034458304 ubox
19 39 0.024160780 ubox
19 43 0.013229366 ubox
19 44 0.004471429 ubox
20 29 0.015661780 ubox
20 30 0.160902709 ubox
20 35 0.659083087 ubox
20 36 0.646615767 ubox
20 37 0.035626511 ubox
20 38 0.013172487 ubox
20 39 0.253139541 ubox
20 42 0.013160412 ubox
20 43 0.004686700 ubox
21 31 0.013268159 ubox
21 38 0.254033453 ubox
22 29 0.161077409 ubox
22 30 0.009949416 ubox
22 33 0.926783345 ubox
22 35 0.063414408 ubox
22 37 0.251219042 ubox
22 42 0.005681881 ubox
23 28 0.161112871 ubox
23 32 0.927827850 ubox
23 34 0.062795332 ubox
23 41 0.005988496 ubox
24 31 0.927076118 ubox
24 38 0.011661543 ubox
25 30 0.923035489 ubox
25 31 0.016990605 ubox
25 36 0.254889726 ubox
25 37 0.011654860 ubox
26 30 0.022314886 ubox
26 33 0.059023854 ubox
26 35 0.256524917 ubox
26 36 0.010755542 ubox
27 32 0.059186237 ubox
27 34 0.256556326 ubox
28 33 0.249919975 ubox
28 35 0.010987532 ubox
28 42 0.004369044 ubox
28 48 0.004907471 ubox
29 34 0.010966346 ubox
29 41 0.004373201 ubox
29 47 0.004926794 ubox
30 40 0.004360394 ubox
30 46 0.004932356 ubox
32 39 0.006891401 ubox
32 48 0.005422295 ubox
32 53 0.013891867 ubox
33 47 0.005422771 ubox
33 52 0.014329478 ubox
34 39 0.006157473 ubox
34 42 0.014451470 ubox
34 48 0.009519374 ubox
34 53 0.022858522 ubox
35 41 0.014568198 ubox
35 47 0.009469726 ubox
35 52 0.023130271 ubox
36 40 0.014465421 ubox
36 46 0.009348647 ubox
37 52 0.168936068 ubox
38 51 0.167654725 ubox
40 45 0.003663359 ubox
40 49 0.206527673 ubox
41 48 0.206793352 ubox
42 47 0.206775886 ubox
46 54 0.006915486 ubox
47 53 0.007169998 ubox
48 52 0.007236780 ubox
2 54 0.9500000 lbox
3 53 0.9500000 lbox
4 52 0.9500000 lbox
5 51 0.9500000 lbox
6 50 0.9500000 lbox
8 47 0.9500000 lbox
9 46 0.9500000 lbox
10 45 0.9500000 lbox
13 43 0.9500000 lbox
14 42 0.9500000 lbox
15 41 0.9500000 lbox
16 40 0.9500000 lbox
19 37 0.9500000 lbox
20 36 0.9500000 lbox
22 33 0.9500000 lbox
23 32 0.9500000 lbox
24 31 0.9500000 lbox
25 30 0.9500000 lbox
showpage
end
%%EOF
