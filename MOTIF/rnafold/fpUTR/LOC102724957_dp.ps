%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:03:27 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (LOC102724957)
} def

/sequence { (\
AUAGGAGUUCAUUUUGUGAAGCUGUCACGAGUUUUCCAGUAGACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.005410224 ubox
1 12 0.004333329 ubox
1 17 0.030683618 ubox
1 25 0.012174708 ubox
1 40 0.193360618 ubox
2 7 0.005805000 ubox
2 11 0.005046201 ubox
2 16 0.032030346 ubox
2 18 0.003609376 ubox
2 24 0.013550148 ubox
2 39 0.181875395 ubox
2 41 0.078587771 ubox
3 13 0.003596660 ubox
3 15 0.033090597 ubox
3 17 0.006119325 ubox
3 23 0.015323488 ubox
3 35 0.004782631 ubox
3 40 0.076200825 ubox
4 10 0.019850894 ubox
4 12 0.004346434 ubox
4 13 0.004397549 ubox
4 14 0.034302579 ubox
4 15 0.004279372 ubox
4 22 0.015340276 ubox
4 23 0.012282516 ubox
4 26 0.019561060 ubox
4 34 0.005875550 ubox
4 35 0.007708642 ubox
4 36 0.025768779 ubox
4 37 0.975843027 ubox
4 45 0.044423930 ubox
5 9 0.012928126 ubox
5 12 0.003389023 ubox
5 13 0.035939646 ubox
5 14 0.007881704 ubox
5 15 0.007858295 ubox
5 22 0.013334184 ubox
5 25 0.017831840 ubox
5 26 0.004581100 ubox
5 33 0.006293902 ubox
5 34 0.009433051 ubox
5 35 0.025929007 ubox
5 36 0.977036537 ubox
5 44 0.044204441 ubox
6 12 0.035835031 ubox
6 13 0.008730984 ubox
6 14 0.008535523 ubox
6 15 0.003459730 ubox
6 23 0.051162162 ubox
6 25 0.003708339 ubox
6 32 0.006488882 ubox
6 33 0.010996566 ubox
6 34 0.031595903 ubox
6 35 0.974497634 ubox
7 12 0.006802571 ubox
7 13 0.009193966 ubox
7 14 0.004333189 ubox
7 22 0.052570568 ubox
7 32 0.017974242 ubox
7 33 0.032480541 ubox
7 34 0.933585738 ubox
7 44 0.125394445 ubox
8 20 0.047044047 ubox
8 21 0.042947897 ubox
8 30 0.005103405 ubox
8 31 0.043353823 ubox
8 42 0.006008721 ubox
8 43 0.123085534 ubox
9 19 0.062534613 ubox
9 20 0.030302472 ubox
9 29 0.004090082 ubox
9 30 0.047340274 ubox
9 41 0.006141772 ubox
9 42 0.115972350 ubox
9 43 0.069003740 ubox
10 16 0.004361725 ubox
10 18 0.070794671 ubox
10 29 0.046680481 ubox
10 42 0.076936167 ubox
11 15 0.003666868 ubox
11 17 0.069815192 ubox
11 32 0.348439032 ubox
11 40 0.070188280 ubox
12 16 0.064620948 ubox
12 30 0.057038762 ubox
12 31 0.310479043 ubox
12 39 0.063235471 ubox
12 42 0.014889205 ubox
12 43 0.016217323 ubox
13 29 0.043982521 ubox
13 30 0.253741123 ubox
13 31 0.881907784 ubox
13 38 0.031891650 ubox
13 39 0.012525751 ubox
13 41 0.023398311 ubox
13 42 0.017442879 ubox
13 43 0.010004182 ubox
14 29 0.177919365 ubox
14 30 0.938533785 ubox
14 31 0.014931729 ubox
14 38 0.010954315 ubox
14 39 0.138610941 ubox
14 41 0.013009270 ubox
14 42 0.010562394 ubox
15 27 0.007273208 ubox
15 29 0.960053200 ubox
15 30 0.014240797 ubox
15 38 0.164817198 ubox
15 41 0.009724511 ubox
16 22 0.003673772 ubox
16 26 0.007371374 ubox
16 28 0.981295811 ubox
16 37 0.169596239 ubox
16 40 0.009048579 ubox
16 44 0.003195536 ubox
17 21 0.003441640 ubox
17 27 0.981235402 ubox
17 38 0.010087292 ubox
17 39 0.003323551 ubox
17 43 0.003179596 ubox
18 26 0.981333074 ubox
18 34 0.004062628 ubox
18 35 0.156995295 ubox
18 36 0.063069395 ubox
18 37 0.009777738 ubox
19 25 0.940954076 ubox
19 33 0.003518189 ubox
19 34 0.167818829 ubox
19 35 0.054851749 ubox
20 33 0.172643261 ubox
20 34 0.044130114 ubox
21 32 0.178082910 ubox
21 33 0.031139580 ubox
21 40 0.015018461 ubox
22 31 0.181096451 ubox
22 39 0.015363962 ubox
23 29 0.008085742 ubox
23 30 0.179807954 ubox
23 38 0.015362651 ubox
24 28 0.015547767 ubox
24 37 0.015325010 ubox
24 44 0.048716432 ubox
25 43 0.048951158 ubox
26 42 0.048995534 ubox
27 40 0.047473678 ubox
28 39 0.047674630 ubox
29 36 0.020170953 ubox
30 35 0.018971716 ubox
31 44 0.075874049 ubox
32 43 0.076333016 ubox
33 42 0.076294934 ubox
33 43 0.004352410 ubox
34 41 0.072758636 ubox
34 42 0.004897976 ubox
34 43 0.003513216 ubox
35 41 0.004577745 ubox
35 42 0.003656334 ubox
35 43 0.012402064 ubox
36 42 0.013632276 ubox
4 37 0.9500000 lbox
5 36 0.9500000 lbox
6 35 0.9500000 lbox
7 34 0.9500000 lbox
13 31 0.9500000 lbox
14 30 0.9500000 lbox
15 29 0.9500000 lbox
16 28 0.9500000 lbox
17 27 0.9500000 lbox
18 26 0.9500000 lbox
19 25 0.9500000 lbox
showpage
end
%%EOF
