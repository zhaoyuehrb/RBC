%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:57:26 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SERPIND1)
} def

/sequence { (\
AUGACCUUGGCUGCUUUCAUCUCUGAAGCGCCACUUCUCAGAAACACAGAGCUUUAGCUCCGCCAAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 40 0.616088468 ubox
2 46 0.022962893 ubox
2 48 0.018382203 ubox
2 62 0.030471884 ubox
2 65 0.063104685 ubox
3 8 0.004773684 ubox
3 36 0.048765500 ubox
3 37 0.257379414 ubox
3 39 0.683710274 ubox
3 45 0.026137373 ubox
3 47 0.020153887 ubox
3 60 0.009988915 ubox
3 61 0.042613857 ubox
3 64 0.069794095 ubox
4 35 0.054425155 ubox
4 36 0.251099286 ubox
4 38 0.670737768 ubox
4 59 0.009772045 ubox
6 41 0.081590353 ubox
6 49 0.003671052 ubox
6 57 0.009938725 ubox
7 40 0.081315938 ubox
7 41 0.006942917 ubox
7 42 0.006960913 ubox
7 43 0.006615709 ubox
7 44 0.004592637 ubox
7 48 0.004892238 ubox
7 56 0.009740993 ubox
7 66 0.423246591 ubox
7 67 0.013823122 ubox
8 33 0.829945273 ubox
8 40 0.003954574 ubox
8 41 0.004500808 ubox
8 42 0.003675476 ubox
8 62 0.004558677 ubox
8 65 0.469624054 ubox
8 66 0.013887150 ubox
9 32 0.878133205 ubox
9 35 0.004806789 ubox
9 53 0.009964953 ubox
9 59 0.020494645 ubox
9 60 0.004610426 ubox
9 61 0.005421129 ubox
9 64 0.477345917 ubox
10 31 0.878264876 ubox
10 34 0.004925829 ubox
10 52 0.010288323 ubox
10 58 0.022743260 ubox
10 60 0.004991783 ubox
10 63 0.477337520 ubox
11 30 0.858514077 ubox
11 51 0.010290965 ubox
11 57 0.022939612 ubox
11 62 0.476593532 ubox
12 19 0.062883064 ubox
12 30 0.301593229 ubox
12 33 0.025306429 ubox
12 46 0.044161601 ubox
12 48 0.055940146 ubox
12 50 0.010233291 ubox
12 56 0.023077432 ubox
12 62 0.011201721 ubox
13 18 0.068674329 ubox
13 29 0.935271922 ubox
13 31 0.108825037 ubox
13 32 0.021048814 ubox
13 45 0.049760160 ubox
13 47 0.060274075 ubox
13 52 0.046447172 ubox
13 55 0.003459926 ubox
13 58 0.142729561 ubox
13 61 0.050619464 ubox
14 28 0.933110196 ubox
14 30 0.110757125 ubox
14 49 0.009486587 ubox
14 51 0.046652559 ubox
14 57 0.142702284 ubox
15 26 0.026758610 ubox
15 27 0.795414390 ubox
15 28 0.138169817 ubox
15 43 0.014597112 ubox
15 44 0.054163489 ubox
15 48 0.012058654 ubox
15 50 0.046624755 ubox
15 56 0.140039151 ubox
16 25 0.037618585 ubox
16 26 0.629245714 ubox
16 27 0.499994025 ubox
16 28 0.006180666 ubox
16 42 0.007556878 ubox
16 43 0.056950875 ubox
16 44 0.046204107 ubox
16 48 0.008579453 ubox
16 49 0.046218184 ubox
16 50 0.003315286 ubox
16 51 0.018627134 ubox
16 56 0.010731892 ubox
17 25 0.391231143 ubox
17 26 0.697382471 ubox
17 27 0.005498873 ubox
17 41 0.004305411 ubox
17 42 0.049552717 ubox
17 43 0.044211469 ubox
17 48 0.041588053 ubox
17 49 0.003237030 ubox
17 50 0.019146217 ubox
18 25 0.848788652 ubox
18 41 0.047804081 ubox
18 49 0.019184466 ubox
19 24 0.741880695 ubox
20 26 0.017999548 ubox
20 42 0.218660106 ubox
20 50 0.051909609 ubox
21 25 0.019585918 ubox
21 41 0.232906789 ubox
21 49 0.052121987 ubox
21 51 0.128145407 ubox
22 40 0.230779543 ubox
22 42 0.174010610 ubox
22 48 0.033555772 ubox
22 50 0.128570814 ubox
23 41 0.184682519 ubox
23 49 0.128578275 ubox
23 57 0.015118904 ubox
24 33 0.003444757 ubox
24 40 0.183719754 ubox
24 46 0.007439511 ubox
24 48 0.128150524 ubox
24 56 0.017766777 ubox
25 32 0.003883041 ubox
25 37 0.253745821 ubox
25 39 0.176997165 ubox
25 45 0.006582443 ubox
25 47 0.111232679 ubox
25 55 0.023341235 ubox
26 35 0.004037332 ubox
26 36 0.261428216 ubox
26 38 0.156517021 ubox
26 54 0.023448184 ubox
27 35 0.276557991 ubox
27 36 0.041602801 ubox
27 38 0.063517051 ubox
27 53 0.023547920 ubox
28 34 0.277468479 ubox
28 35 0.034765459 ubox
28 37 0.089181888 ubox
28 52 0.023598629 ubox
29 51 0.023558192 ubox
30 52 0.003535122 ubox
30 58 0.025673350 ubox
30 61 0.003615418 ubox
31 51 0.003509802 ubox
31 57 0.025704403 ubox
34 41 0.126989323 ubox
34 49 0.004766717 ubox
34 51 0.005614426 ubox
34 57 0.004641700 ubox
35 40 0.116714540 ubox
35 41 0.019775031 ubox
35 42 0.043229006 ubox
35 43 0.203858372 ubox
35 44 0.031099743 ubox
35 48 0.007097493 ubox
35 50 0.004924219 ubox
35 51 0.009305410 ubox
35 56 0.004489459 ubox
36 40 0.018127671 ubox
36 41 0.042172005 ubox
36 42 0.226060706 ubox
36 43 0.032526460 ubox
36 48 0.005720076 ubox
36 49 0.003843752 ubox
36 50 0.015274879 ubox
37 41 0.226579468 ubox
37 49 0.017154423 ubox
37 51 0.032450049 ubox
38 48 0.017805093 ubox
38 50 0.033162294 ubox
39 49 0.033404694 ubox
41 60 0.003908040 ubox
42 55 0.003365363 ubox
42 59 0.003344138 ubox
43 54 0.003779577 ubox
44 53 0.003746383 ubox
48 59 0.005989074 ubox
49 58 0.006339447 ubox
49 60 0.983983704 ubox
50 59 0.986634764 ubox
51 58 0.987115255 ubox
51 63 0.016838717 ubox
52 57 0.983916191 ubox
52 62 0.016878672 ubox
53 67 0.008044389 ubox
54 66 0.011377916 ubox
55 65 0.011263735 ubox
57 63 0.019075682 ubox
58 62 0.018970422 ubox
2 40 0.9500000 lbox
3 39 0.9500000 lbox
4 38 0.9500000 lbox
8 33 0.9500000 lbox
9 32 0.9500000 lbox
10 31 0.9500000 lbox
11 30 0.9500000 lbox
13 29 0.9500000 lbox
14 28 0.9500000 lbox
15 27 0.9500000 lbox
16 26 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
49 60 0.9500000 lbox
50 59 0.9500000 lbox
51 58 0.9500000 lbox
52 57 0.9500000 lbox
showpage
end
%%EOF
