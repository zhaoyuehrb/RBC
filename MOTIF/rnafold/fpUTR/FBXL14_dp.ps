%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:01:45 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FBXL14)
} def

/sequence { (\
GGCGGCGGCUGGGGAGAAGCGCUCUCGUCGCCUGCCCGAGGCCGGAGCGGCGGGGCCCGCGCCUCCUCCCCCCAGCGCCGCGGAGGGGGGAGGAGGAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.047569852 ubox
1 23 0.012308123 ubox
1 26 0.005266631 ubox
1 29 0.009981327 ubox
1 32 0.295196494 ubox
1 33 0.007485729 ubox
1 36 0.585110297 ubox
1 37 0.049244146 ubox
1 43 0.087928081 ubox
1 57 0.199791776 ubox
1 58 0.105766895 ubox
1 63 0.093053761 ubox
2 9 0.051606140 ubox
2 22 0.016293244 ubox
2 25 0.004989369 ubox
2 28 0.010368415 ubox
2 31 0.295727646 ubox
2 32 0.004261113 ubox
2 35 0.592528492 ubox
2 36 0.037779582 ubox
2 42 0.088059142 ubox
2 48 0.172183297 ubox
2 56 0.201236668 ubox
2 57 0.103223384 ubox
2 60 0.605560247 ubox
2 62 0.113113530 ubox
3 8 0.051611191 ubox
3 11 0.003340476 ubox
3 21 0.016295959 ubox
3 27 0.010400162 ubox
3 30 0.295732861 ubox
3 34 0.593213667 ubox
3 38 0.011824978 ubox
3 41 0.087910549 ubox
3 44 0.018479285 ubox
3 47 0.172307905 ubox
3 49 0.009356632 ubox
3 55 0.201860841 ubox
3 59 0.606016711 ubox
3 61 0.125519775 ubox
4 10 0.003401677 ubox
4 20 0.012091388 ubox
4 23 0.066394058 ubox
4 26 0.009993828 ubox
4 29 0.295693342 ubox
4 32 0.699441757 ubox
4 33 0.137792114 ubox
4 36 0.091843446 ubox
4 37 0.012895582 ubox
4 43 0.018807639 ubox
4 48 0.008045978 ubox
4 57 0.086497719 ubox
4 58 0.566947626 ubox
4 60 0.109576984 ubox
4 63 0.009610103 ubox
5 9 0.003350716 ubox
5 20 0.107805408 ubox
5 22 0.078230652 ubox
5 25 0.007885538 ubox
5 28 0.295598637 ubox
5 31 0.709927481 ubox
5 32 0.097279432 ubox
5 35 0.092630055 ubox
5 36 0.009628567 ubox
5 42 0.018807990 ubox
5 56 0.121440184 ubox
5 57 0.533151282 ubox
5 60 0.113650780 ubox
5 62 0.011143860 ubox
6 19 0.113427528 ubox
6 21 0.080265051 ubox
6 27 0.295672945 ubox
6 30 0.717450834 ubox
6 34 0.094481816 ubox
6 38 0.023308291 ubox
6 41 0.018773263 ubox
6 44 0.173530447 ubox
6 55 0.148197658 ubox
6 59 0.124386279 ubox
6 61 0.012118339 ubox
7 20 0.061328262 ubox
7 23 0.032295322 ubox
7 24 0.004065521 ubox
7 26 0.285592294 ubox
7 29 0.717477751 ubox
7 32 0.374652065 ubox
7 33 0.062560570 ubox
7 36 0.018389547 ubox
7 37 0.019592836 ubox
7 43 0.173794481 ubox
7 57 0.145335544 ubox
7 58 0.112904291 ubox
7 60 0.010232386 ubox
7 63 0.004254379 ubox
8 20 0.401274974 ubox
8 22 0.040268414 ubox
8 24 0.014593642 ubox
8 25 0.212986968 ubox
8 28 0.716263783 ubox
8 31 0.375400210 ubox
8 32 0.061480880 ubox
8 35 0.022394602 ubox
8 36 0.014907364 ubox
8 42 0.173788495 ubox
8 56 0.180401524 ubox
8 57 0.080567135 ubox
8 60 0.012953766 ubox
8 62 0.004933322 ubox
9 16 0.121991857 ubox
9 19 0.406198187 ubox
9 21 0.039741398 ubox
9 27 0.713181946 ubox
9 30 0.367854000 ubox
9 34 0.025699753 ubox
9 40 0.047740479 ubox
9 41 0.167336739 ubox
9 53 0.013520128 ubox
9 54 0.012673846 ubox
9 55 0.187494000 ubox
9 59 0.014068806 ubox
9 61 0.005364745 ubox
10 15 0.121016428 ubox
10 18 0.404649074 ubox
10 21 0.027082595 ubox
10 27 0.016822696 ubox
10 30 0.095676375 ubox
10 34 0.005571987 ubox
10 38 0.071167355 ubox
10 39 0.064349706 ubox
10 40 0.136448211 ubox
10 52 0.010926428 ubox
10 53 0.012640267 ubox
10 54 0.177650128 ubox
10 59 0.008984462 ubox
10 61 0.010426787 ubox
11 20 0.046791489 ubox
11 23 0.022975035 ubox
11 24 0.256099341 ubox
11 25 0.260674757 ubox
11 26 0.194066431 ubox
11 29 0.363926796 ubox
11 32 0.025472486 ubox
11 33 0.007945952 ubox
11 37 0.152747512 ubox
11 51 0.005065845 ubox
11 58 0.022741645 ubox
11 60 0.029426059 ubox
12 22 0.024104567 ubox
12 23 0.259758297 ubox
12 24 0.269801060 ubox
12 25 0.171551443 ubox
12 26 0.649773818 ubox
12 28 0.361655834 ubox
12 29 0.010705437 ubox
12 31 0.025527183 ubox
12 32 0.008138057 ubox
12 36 0.153135881 ubox
12 37 0.083715616 ubox
12 57 0.022760706 ubox
12 58 0.021062691 ubox
13 22 0.261692985 ubox
13 23 0.267805448 ubox
13 24 0.147650048 ubox
13 25 0.680816480 ubox
13 26 0.020687265 ubox
13 28 0.010166950 ubox
13 29 0.003957596 ubox
13 31 0.008129182 ubox
13 35 0.153120622 ubox
13 36 0.083773848 ubox
13 37 0.009115013 ubox
13 56 0.022218912 ubox
13 57 0.021123995 ubox
13 58 0.027683856 ubox
14 22 0.268608213 ubox
14 23 0.111426607 ubox
14 24 0.690776020 ubox
14 25 0.003248745 ubox
14 26 0.373782167 ubox
14 29 0.025902923 ubox
14 35 0.083718892 ubox
14 36 0.009079825 ubox
14 56 0.020567644 ubox
14 57 0.027672041 ubox
15 23 0.696220020 ubox
15 25 0.373889929 ubox
15 28 0.025657882 ubox
15 33 0.161642223 ubox
16 22 0.695745783 ubox
16 24 0.373945084 ubox
16 26 0.010422117 ubox
16 32 0.160342358 ubox
17 23 0.362636055 ubox
17 25 0.009690014 ubox
18 25 0.023348095 ubox
18 33 0.015495685 ubox
19 24 0.023130603 ubox
19 28 0.032084716 ubox
19 31 0.169733919 ubox
19 32 0.014600891 ubox
19 51 0.021762451 ubox
19 56 0.007954074 ubox
19 60 0.028313041 ubox
19 62 0.011450264 ubox
20 27 0.032877378 ubox
20 30 0.170542679 ubox
20 49 0.024168539 ubox
20 50 0.015416997 ubox
20 55 0.007919411 ubox
20 59 0.028309866 ubox
20 61 0.014978803 ubox
21 26 0.030795530 ubox
21 28 0.033377742 ubox
21 29 0.166577432 ubox
21 31 0.016549704 ubox
21 48 0.028959610 ubox
21 56 0.402442346 ubox
21 58 0.023556985 ubox
21 60 0.015752381 ubox
22 27 0.153800813 ubox
22 30 0.016544634 ubox
22 47 0.028987520 ubox
22 54 0.004337941 ubox
22 55 0.402172441 ubox
22 59 0.015742239 ubox
23 46 0.028981367 ubox
23 54 0.287210122 ubox
23 55 0.067684325 ubox
24 45 0.028863066 ubox
24 53 0.285726395 ubox
24 54 0.316510795 ubox
24 55 0.004051156 ubox
25 44 0.009204208 ubox
25 52 0.047621395 ubox
25 53 0.318535551 ubox
25 54 0.003705015 ubox
26 44 0.027343472 ubox
26 52 0.426194052 ubox
26 53 0.003619611 ubox
26 54 0.005870632 ubox
27 43 0.027130354 ubox
27 51 0.430312967 ubox
27 56 0.007028751 ubox
28 50 0.430183350 ubox
28 53 0.142155196 ubox
28 54 0.004298279 ubox
28 55 0.006485857 ubox
29 49 0.430279878 ubox
29 52 0.182908300 ubox
29 53 0.008097956 ubox
29 54 0.004182271 ubox
29 61 0.012648787 ubox
30 42 0.029206535 ubox
30 48 0.430238405 ubox
30 51 0.186794174 ubox
30 56 0.004952322 ubox
30 60 0.017764120 ubox
31 41 0.029423454 ubox
31 45 0.036641298 ubox
31 47 0.428370312 ubox
31 50 0.184313894 ubox
31 54 0.014772056 ubox
31 55 0.004772656 ubox
31 59 0.017764178 ubox
32 40 0.029464428 ubox
32 44 0.053429926 ubox
32 45 0.422730814 ubox
32 47 0.016408549 ubox
32 49 0.181703464 ubox
32 50 0.032560844 ubox
32 53 0.015136622 ubox
32 54 0.004233186 ubox
33 39 0.029375470 ubox
33 44 0.418675351 ubox
33 46 0.021986220 ubox
33 49 0.203522687 ubox
33 52 0.015496153 ubox
33 53 0.003370511 ubox
33 59 0.014100587 ubox
33 61 0.014343986 ubox
33 98 0.005247038 ubox
34 42 0.308265511 ubox
34 43 0.297898298 ubox
34 48 0.309180800 ubox
34 51 0.015707097 ubox
34 56 0.520042311 ubox
34 58 0.007569163 ubox
34 60 0.017077890 ubox
34 62 0.013659857 ubox
35 41 0.426447705 ubox
35 45 0.013883896 ubox
35 47 0.309286824 ubox
35 50 0.015472774 ubox
35 53 0.004825985 ubox
35 54 0.225013659 ubox
35 55 0.521198723 ubox
35 59 0.016114518 ubox
35 61 0.019429270 ubox
36 40 0.423369480 ubox
36 44 0.012276700 ubox
36 45 0.321688997 ubox
36 49 0.013608384 ubox
36 50 0.003218722 ubox
36 52 0.004793773 ubox
36 53 0.227394598 ubox
36 54 0.520729404 ubox
36 55 0.014429785 ubox
36 96 0.010074900 ubox
37 44 0.327823250 ubox
37 49 0.013995656 ubox
37 52 0.229063616 ubox
37 53 0.518621351 ubox
37 54 0.020390240 ubox
37 59 0.461965433 ubox
37 61 0.132693904 ubox
37 95 0.012829939 ubox
38 43 0.323506688 ubox
38 48 0.013816213 ubox
38 51 0.209089921 ubox
38 58 0.479141185 ubox
38 60 0.136626287 ubox
38 65 0.089410796 ubox
39 64 0.126305712 ubox
40 57 0.508311687 ubox
40 58 0.075013955 ubox
40 63 0.162005684 ubox
41 48 0.213128211 ubox
41 51 0.528700884 ubox
41 56 0.509765362 ubox
41 57 0.065414324 ubox
41 60 0.160607354 ubox
41 62 0.181665193 ubox
42 47 0.212486882 ubox
42 50 0.531693582 ubox
42 53 0.073564311 ubox
42 54 0.033350762 ubox
42 55 0.507850000 ubox
42 59 0.113763019 ubox
42 61 0.194583773 ubox
42 96 0.004307545 ubox
43 49 0.531775607 ubox
43 52 0.091089756 ubox
43 53 0.041227658 ubox
43 54 0.504251436 ubox
43 59 0.239584361 ubox
43 61 0.004651474 ubox
43 95 0.004290525 ubox
44 48 0.497527027 ubox
44 51 0.141342472 ubox
44 57 0.005129543 ubox
44 58 0.267189942 ubox
44 60 0.003903179 ubox
44 63 0.011226800 ubox
45 56 0.004462524 ubox
45 57 0.267178773 ubox
45 62 0.013265450 ubox
47 56 0.267656802 ubox
47 60 0.130966883 ubox
47 62 0.025624191 ubox
48 55 0.267642814 ubox
48 59 0.131130947 ubox
48 61 0.033659216 ubox
49 57 0.053358089 ubox
49 58 0.123676314 ubox
49 60 0.025902742 ubox
49 63 0.005048139 ubox
50 56 0.069353551 ubox
50 57 0.114909287 ubox
50 60 0.311756621 ubox
50 62 0.006335312 ubox
51 55 0.081476816 ubox
51 59 0.313154762 ubox
51 61 0.007255781 ubox
52 58 0.313965034 ubox
52 60 0.009154554 ubox
53 57 0.308898932 ubox
53 64 0.003349242 ubox
54 63 0.004980058 ubox
55 62 0.006613636 ubox
56 61 0.007764599 ubox
62 96 0.972911388 ubox
63 95 0.982136619 ubox
63 96 0.006857349 ubox
64 94 0.990900241 ubox
64 95 0.004164114 ubox
64 97 0.003660174 ubox
65 93 0.995949290 ubox
65 96 0.004414450 ubox
66 92 0.999932346 ubox
66 93 0.004565044 ubox
66 95 0.004922225 ubox
67 91 0.999829427 ubox
67 94 0.004618540 ubox
68 90 0.999976635 ubox
68 93 0.004421653 ubox
69 89 0.999977529 ubox
69 92 0.004297306 ubox
70 88 0.999976277 ubox
70 90 0.004143918 ubox
71 86 0.003354773 ubox
71 87 0.999974578 ubox
71 89 0.004142445 ubox
72 83 0.003717952 ubox
72 85 0.003679592 ubox
72 86 0.999966412 ubox
72 88 0.004140469 ubox
73 82 0.004843012 ubox
73 85 0.999519262 ubox
73 87 0.004129198 ubox
75 81 0.247722707 ubox
76 80 0.246033828 ubox
76 82 0.960060650 ubox
77 81 0.898337284 ubox
78 86 0.003581157 ubox
79 85 0.003718874 ubox
1 36 0.9500000 lbox
2 35 0.9500000 lbox
3 34 0.9500000 lbox
4 32 0.9500000 lbox
5 31 0.9500000 lbox
6 30 0.9500000 lbox
7 29 0.9500000 lbox
8 28 0.9500000 lbox
9 27 0.9500000 lbox
12 26 0.9500000 lbox
13 25 0.9500000 lbox
14 24 0.9500000 lbox
15 23 0.9500000 lbox
16 22 0.9500000 lbox
37 59 0.9500000 lbox
38 58 0.9500000 lbox
40 57 0.9500000 lbox
41 56 0.9500000 lbox
42 55 0.9500000 lbox
43 54 0.9500000 lbox
62 96 0.9500000 lbox
63 95 0.9500000 lbox
64 94 0.9500000 lbox
65 93 0.9500000 lbox
66 92 0.9500000 lbox
67 91 0.9500000 lbox
68 90 0.9500000 lbox
69 89 0.9500000 lbox
70 88 0.9500000 lbox
71 87 0.9500000 lbox
72 86 0.9500000 lbox
73 85 0.9500000 lbox
76 82 0.9500000 lbox
77 81 0.9500000 lbox
showpage
end
%%EOF
