%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:10:20 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OLIG1)
} def

/sequence { (\
AUCGUUUCCCCGCGCGCAGGUCCGCGGGGAGGGGCGGCCUGCCGACCGGCCCACCCCAGGGCGUUCCUGAAGGGCGUCCUCGGCCGCCCCCACCGCCUCCCAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 30 0.003635597 ubox
3 14 0.005512301 ubox
3 16 0.004722941 ubox
3 31 0.007312063 ubox
3 95 0.114595473 ubox
4 13 0.005803812 ubox
4 15 0.004959724 ubox
4 93 0.079969192 ubox
4 94 0.116655457 ubox
4 96 0.097646355 ubox
5 12 0.005600215 ubox
5 14 0.004917691 ubox
5 30 0.008060232 ubox
5 31 0.005945295 ubox
5 32 0.009476819 ubox
5 92 0.076541815 ubox
5 95 0.093784192 ubox
5 103 0.007688530 ubox
6 30 0.044625494 ubox
6 31 0.106848792 ubox
6 102 0.009854525 ubox
6 103 0.004685959 ubox
7 29 0.010438325 ubox
7 30 0.951204773 ubox
8 28 0.009727673 ubox
8 29 0.999459359 ubox
9 27 0.008648309 ubox
9 28 0.999700770 ubox
9 29 0.014321096 ubox
10 26 0.007372501 ubox
10 27 0.999732250 ubox
10 28 0.014475335 ubox
10 29 0.008631294 ubox
11 24 0.005804784 ubox
11 26 0.999716093 ubox
11 27 0.014588271 ubox
11 28 0.008662994 ubox
12 23 0.005983874 ubox
12 25 0.999615208 ubox
13 24 0.999383707 ubox
13 26 0.019200731 ubox
14 21 0.246136843 ubox
14 23 0.959845566 ubox
14 25 0.024362265 ubox
15 20 0.425295667 ubox
15 24 0.025270718 ubox
16 23 0.028423393 ubox
16 25 0.003318960 ubox
17 24 0.003439338 ubox
19 100 0.004007158 ubox
19 101 0.007657946 ubox
20 99 0.004021147 ubox
20 100 0.007649997 ubox
24 96 0.009175621 ubox
25 95 0.009193861 ubox
26 94 0.008958339 ubox
27 93 0.008710112 ubox
27 94 0.006417990 ubox
27 101 0.006127051 ubox
28 93 0.007206009 ubox
28 94 0.005479553 ubox
28 100 0.006832054 ubox
29 93 0.006412094 ubox
29 99 0.007469282 ubox
30 98 0.008119535 ubox
31 57 0.007399615 ubox
31 89 0.005446122 ubox
31 90 0.982325342 ubox
31 91 0.135132181 ubox
31 94 0.009696969 ubox
31 97 0.005720718 ubox
31 99 0.015007456 ubox
31 100 0.008098582 ubox
31 101 0.005453801 ubox
32 56 0.007429745 ubox
32 88 0.004488674 ubox
32 89 0.992541543 ubox
32 90 0.117456794 ubox
32 91 0.018029965 ubox
32 93 0.008266568 ubox
32 96 0.004166669 ubox
32 98 0.015555109 ubox
32 99 0.008052210 ubox
32 100 0.005129164 ubox
32 101 0.007028217 ubox
33 55 0.007430037 ubox
33 87 0.003182830 ubox
33 88 0.994962611 ubox
33 89 0.095923676 ubox
33 90 0.018076387 ubox
33 91 0.006798218 ubox
33 97 0.017679242 ubox
33 99 0.004451341 ubox
33 100 0.007045389 ubox
34 54 0.007423905 ubox
34 87 0.997278713 ubox
34 88 0.067842289 ubox
34 89 0.018039354 ubox
34 90 0.006791525 ubox
34 96 0.017788957 ubox
34 98 0.003549157 ubox
34 99 0.007041053 ubox
35 86 0.999572275 ubox
35 95 0.017812230 ubox
36 51 0.009170331 ubox
36 52 0.005078549 ubox
36 85 0.999543324 ubox
36 88 0.020539764 ubox
36 94 0.016273462 ubox
36 97 0.007884679 ubox
37 50 0.009995950 ubox
37 51 0.004534850 ubox
37 84 0.999214311 ubox
37 87 0.020889879 ubox
37 93 0.015856187 ubox
37 96 0.007887549 ubox
38 49 0.010515463 ubox
38 83 0.995983282 ubox
38 86 0.021101181 ubox
38 95 0.007874154 ubox
39 48 0.010533517 ubox
39 82 0.990599375 ubox
39 83 0.071320337 ubox
40 48 0.006627349 ubox
40 53 0.036694699 ubox
40 58 0.004159626 ubox
40 76 0.041673038 ubox
40 82 0.100640689 ubox
40 92 0.009993169 ubox
41 47 0.012177367 ubox
41 50 0.765399316 ubox
41 52 0.019412352 ubox
41 57 0.003657903 ubox
41 62 0.003641496 ubox
41 75 0.042606940 ubox
41 77 0.005280047 ubox
41 81 0.431938431 ubox
41 84 0.034436391 ubox
41 91 0.010663181 ubox
42 49 0.768205498 ubox
42 61 0.003652482 ubox
42 74 0.042536787 ubox
42 76 0.005373326 ubox
42 83 0.041983738 ubox
43 48 0.767151770 ubox
43 60 0.003645612 ubox
43 72 0.003708155 ubox
43 73 0.042386893 ubox
43 76 0.003958097 ubox
43 82 0.049383925 ubox
44 65 0.015832110 ubox
44 66 0.024042521 ubox
44 75 0.003328266 ubox
44 78 0.625395459 ubox
44 81 0.072991527 ubox
45 64 0.016433024 ubox
45 65 0.023280833 ubox
45 77 0.625836266 ubox
45 80 0.071419779 ubox
46 63 0.016326413 ubox
46 76 0.607489088 ubox
47 63 0.020914478 ubox
47 69 0.021691775 ubox
47 76 0.128238495 ubox
47 86 0.013860072 ubox
48 55 0.046219552 ubox
48 56 0.030790858 ubox
48 57 0.053975954 ubox
48 62 0.015306074 ubox
48 66 0.004667341 ubox
48 67 0.009308108 ubox
48 68 0.020813347 ubox
48 75 0.130425096 ubox
48 78 0.018633421 ubox
48 79 0.009043109 ubox
48 85 0.014047073 ubox
49 54 0.046083849 ubox
49 55 0.030684294 ubox
49 56 0.053609268 ubox
49 62 0.051971512 ubox
49 66 0.006538199 ubox
49 67 0.009980833 ubox
49 75 0.616028530 ubox
49 77 0.018273979 ubox
49 78 0.008645279 ubox
49 84 0.014048067 ubox
50 60 0.003793532 ubox
50 61 0.055387353 ubox
50 73 0.042899671 ubox
50 74 0.630616558 ubox
50 76 0.019283077 ubox
50 83 0.013911119 ubox
51 59 0.004499353 ubox
51 60 0.056925051 ubox
51 72 0.042714315 ubox
51 73 0.630570502 ubox
51 74 0.013282184 ubox
51 82 0.013775869 ubox
52 59 0.057192659 ubox
52 72 0.629623265 ubox
52 73 0.014431950 ubox
53 64 0.005567295 ubox
53 77 0.009519850 ubox
54 60 0.004488309 ubox
54 61 0.007250082 ubox
54 63 0.005611185 ubox
54 73 0.010829998 ubox
54 74 0.051938603 ubox
54 76 0.010054872 ubox
54 83 0.007797579 ubox
55 59 0.004804106 ubox
55 60 0.007389479 ubox
55 61 0.005608536 ubox
55 72 0.012818684 ubox
55 73 0.052255772 ubox
55 74 0.010834010 ubox
55 82 0.012618873 ubox
55 83 0.023356362 ubox
56 60 0.005575845 ubox
56 72 0.052099667 ubox
56 73 0.010850349 ubox
56 82 0.048473261 ubox
56 83 0.015480892 ubox
57 69 0.632128853 ubox
57 72 0.009833402 ubox
57 82 0.032159903 ubox
58 68 0.634097079 ubox
58 80 0.720223078 ubox
59 66 0.003889495 ubox
59 67 0.634297031 ubox
59 68 0.026190409 ubox
59 79 0.769630813 ubox
59 80 0.022256920 ubox
59 81 0.007984127 ubox
59 89 0.005107328 ubox
59 98 0.004623455 ubox
60 65 0.003946652 ubox
60 66 0.633668180 ubox
60 67 0.028538759 ubox
60 78 0.769873606 ubox
60 79 0.024620949 ubox
60 88 0.005125748 ubox
60 97 0.005022716 ubox
61 65 0.410469753 ubox
61 66 0.030035488 ubox
61 77 0.769760446 ubox
61 78 0.024617795 ubox
61 87 0.005132145 ubox
61 96 0.005035296 ubox
62 76 0.770421593 ubox
62 86 0.005137731 ubox
62 95 0.005043416 ubox
63 75 0.770689195 ubox
63 85 0.005120334 ubox
63 94 0.004976779 ubox
64 73 0.006772127 ubox
64 74 0.704622941 ubox
65 71 0.003510549 ubox
65 72 0.008142479 ubox
65 73 0.633101503 ubox
65 74 0.303764596 ubox
66 72 0.629519359 ubox
66 73 0.431232553 ubox
66 74 0.058477212 ubox
67 72 0.431147713 ubox
67 73 0.061977294 ubox
67 74 0.008365651 ubox
67 83 0.004911131 ubox
68 72 0.056039980 ubox
68 73 0.009559190 ubox
68 82 0.004977024 ubox
68 92 0.003978223 ubox
69 81 0.012081997 ubox
69 91 0.004162308 ubox
70 80 0.008632187 ubox
71 80 0.023363579 ubox
72 79 0.026005741 ubox
72 80 0.007713000 ubox
72 81 0.007535726 ubox
72 89 0.006652816 ubox
73 78 0.025924475 ubox
73 79 0.008597994 ubox
73 80 0.007120661 ubox
73 88 0.006671748 ubox
74 78 0.008491352 ubox
74 79 0.007065184 ubox
74 87 0.006678082 ubox
75 82 0.004396556 ubox
75 86 0.006682456 ubox
76 81 0.015637221 ubox
76 85 0.005944687 ubox
77 83 0.004258241 ubox
78 82 0.004134967 ubox
82 97 0.003349887 ubox
83 96 0.003354878 ubox
84 95 0.003177118 ubox
97 103 0.064726553 ubox
98 102 0.059631980 ubox
7 30 0.9500000 lbox
8 29 0.9500000 lbox
9 28 0.9500000 lbox
10 27 0.9500000 lbox
11 26 0.9500000 lbox
12 25 0.9500000 lbox
13 24 0.9500000 lbox
14 23 0.9500000 lbox
31 90 0.9500000 lbox
32 89 0.9500000 lbox
33 88 0.9500000 lbox
34 87 0.9500000 lbox
35 86 0.9500000 lbox
36 85 0.9500000 lbox
37 84 0.9500000 lbox
38 83 0.9500000 lbox
39 82 0.9500000 lbox
41 50 0.9500000 lbox
42 49 0.9500000 lbox
43 48 0.9500000 lbox
58 80 0.9500000 lbox
59 79 0.9500000 lbox
60 78 0.9500000 lbox
61 77 0.9500000 lbox
62 76 0.9500000 lbox
63 75 0.9500000 lbox
64 74 0.9500000 lbox
65 73 0.9500000 lbox
66 72 0.9500000 lbox
showpage
end
%%EOF
