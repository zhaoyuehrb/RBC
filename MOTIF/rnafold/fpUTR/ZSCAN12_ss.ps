%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:07:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUUCCGGCCUUUGUGGGUCACUUUUGAUGGGUUCCGGGUCCCAAAAGGGUUCGAGGCCUCUUGCCUUCGCUCCGUAGGAGGGAGUUCUCUUCUGGCCCUGGGGGCCGCAGGACUGUCCAGGAAUACAGUUUCCAGGUGAGAUCUUACUUGAAACACCGGUAGUUCUAGCACAGCUAAA\
) } def
/len { sequence length } bind def

/coor [
[126.36029053 227.35572815]
[122.47800446 212.86683655]
[118.59572601 198.37796021]
[107.82800293 188.08691406]
[111.72991180 172.75440979]
[107.84762573 158.26551819]
[103.96533966 143.77664185]
[100.08306122 129.28775024]
[81.19533539 122.45359802]
[71.15228271 105.05851746]
[74.67759705 85.28419495]
[64.07099152 74.67759705]
[53.46438980 64.07099152]
[38.23509598 59.78389359]
[34.70665359 45.31325531]
[24.10005188 34.70665359]
[13.49345112 24.10005188]
[2.88684893 13.49345112]
[-5.41887045 9.62335587]
[-7.81028509 2.60796785]
[-18.23016167 -8.18212891]
[-33.38231277 -12.73436165]
[-36.65767288 -27.26437569]
[-47.07754898 -38.05447388]
[-57.49742126 -48.84457016]
[-67.91729736 -59.63466644]
[-78.33717346 -70.42476654]
[-86.57408905 -74.43922424]
[-88.84270477 -81.49527740]
[-99.07267761 -92.46558380]
[-109.30265045 -103.43589020]
[-124.37304688 -108.25186920]
[-127.39432526 -122.83683777]
[-137.62429810 -133.80714417]
[-147.85427856 -144.77745056]
[-158.08425903 -155.74775696]
[-168.31422424 -166.71806335]
[-178.54420471 -177.68836975]
[-188.77418518 -188.65866089]
[-201.63150024 -189.89343262]
[-209.92665100 -199.26481628]
[-209.61137390 -211.37481689]
[-219.64834595 -222.52198792]
[-229.68530273 -233.66915894]
[-244.66935730 -238.74742126]
[-247.43562317 -253.38288879]
[-257.47259521 -264.53005981]
[-267.50955200 -275.67724609]
[-277.54650879 -286.82440186]
[-287.58346558 -297.97158813]
[-299.99822998 -293.35952759]
[-313.20959473 -293.24984741]
[-325.63888550 -297.63391113]
[-335.80841064 -305.96737671]
[-342.51693726 -317.23776245]
[-344.98165894 -330.08740234]
[-342.92953491 -342.97692871]
[-336.62719727 -354.36987305]
[-346.26901245 -365.86053467]
[-355.91082764 -377.35119629]
[-365.55264282 -388.84185791]
[-375.19445801 -400.33251953]
[-384.83627319 -411.82318115]
[-394.47808838 -423.31387329]
[-404.11990356 -434.80453491]
[-419.40979004 -432.74957275]
[-433.37374878 -439.30789185]
[-441.55593872 -452.38668823]
[-441.34542847 -467.81262207]
[-432.80941772 -480.66329956]
[-418.67172241 -486.83813477]
[-403.44360352 -484.36676025]
[-391.98428345 -474.03775024]
[-387.95043945 -459.14709473]
[-392.62924194 -444.44635010]
[-382.98742676 -432.95568848]
[-373.34561157 -421.46499634]
[-363.70379639 -409.97433472]
[-354.06198120 -398.48367310]
[-344.42016602 -386.99301147]
[-334.77835083 -375.50234985]
[-325.13653564 -364.01168823]
[-308.91604614 -368.65481567]
[-292.24084473 -365.74493408]
[-278.46200562 -355.81787109]
[-270.36987305 -340.82452393]
[-269.62908936 -323.74768066]
[-276.43627930 -308.00854492]
[-266.39932251 -296.86135864]
[-256.36236572 -285.71420288]
[-246.32540894 -274.56701660]
[-236.28845215 -263.41986084]
[-222.02230835 -259.13891602]
[-218.53813171 -243.70611572]
[-208.50115967 -232.55894470]
[-198.46420288 -221.41177368]
[-181.51429749 -216.91189575]
[-177.80387878 -198.88864136]
[-167.57389832 -187.91833496]
[-157.34391785 -176.94802856]
[-147.11395264 -165.97772217]
[-136.88397217 -155.00741577]
[-126.65399933 -144.03710938]
[-116.42401886 -133.06680298]
[-102.08533478 -129.03549194]
[-98.33234406 -113.66586304]
[-88.10237122 -102.69555664]
[-77.87239838 -91.72525787]
[-67.54708099 -80.84464264]
[-57.12720108 -70.05454254]
[-46.70732498 -59.26444626]
[-36.28744888 -48.47434998]
[-25.86757469 -37.68424988]
[-11.46072102 -33.90379715]
[-7.44006395 -18.60200500]
[2.97981167 -7.81190777]
[13.49345112 2.88684893]
[24.10005188 13.49345112]
[34.70665359 24.10005188]
[45.31325531 34.70665359]
[59.78389359 38.23509598]
[64.07099152 53.46438980]
[74.67759705 64.07099152]
[85.28419495 74.67759705]
[96.78739166 70.88886261]
[108.83993530 72.07805634]
[119.38087463 78.04183197]
[126.60773468 87.76039886]
[129.28474426 99.57190704]
[143.83917236 103.20072937]
[158.39361572 106.82955933]
[172.94804382 110.45838928]
[187.50248718 114.08721924]
[196.61511230 113.12677765]
[202.27815247 117.90846252]
[216.76704407 121.79074860]
[231.25593567 125.67303467]
[245.74481201 129.55532837]
[260.23370361 133.43760681]
[274.72259521 137.31990051]
[290.41427612 132.55514526]
[302.19998169 143.95819092]
[297.95556641 159.79855347]
[282.04733276 163.78102112]
[270.84030151 151.80877686]
[256.35140991 147.92649841]
[241.86253357 144.04420471]
[227.37364197 140.16192627]
[212.88475037 136.27963257]
[198.39587402 132.39735413]
[183.87365723 128.64164734]
[169.31921387 125.01282501]
[154.76478577 121.38399506]
[140.21034241 117.75516510]
[125.65590668 114.12634277]
[120.88958740 120.52813721]
[114.57194519 125.40546417]
[118.45423126 139.89434814]
[122.33651733 154.38323975]
[126.21880341 168.87213135]
[137.26420593 180.19950867]
[133.08460999 194.49566650]
[136.96688843 208.98455811]
[140.84918213 223.47344971]
[156.14863586 231.92790222]
[160.52743530 248.50181580]
[151.75241089 262.83404541]
[155.88697815 277.25296021]
[160.02153015 291.67190552]
[164.15609741 306.09082031]
[174.33406067 319.64978027]
[164.12254333 333.18347168]
[148.29090881 327.11752319]
[149.73716736 310.22537231]
[145.60260010 295.80645752]
[141.46804810 281.38754272]
[137.33348083 266.96859741]
[125.28682709 262.35052490]
[117.99807739 251.46998596]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 164]
[2 163]
[3 162]
[5 160]
[6 159]
[7 158]
[8 157]
[11 124]
[12 123]
[13 122]
[15 120]
[16 119]
[17 118]
[18 117]
[20 116]
[21 115]
[23 113]
[24 112]
[25 111]
[26 110]
[27 109]
[29 108]
[30 107]
[31 106]
[33 104]
[34 103]
[35 102]
[36 101]
[37 100]
[38 99]
[39 98]
[42 96]
[43 95]
[44 94]
[46 92]
[47 91]
[48 90]
[49 89]
[50 88]
[58 82]
[59 81]
[60 80]
[61 79]
[62 78]
[63 77]
[64 76]
[65 75]
[129 155]
[130 154]
[131 153]
[132 152]
[133 151]
[135 150]
[136 149]
[137 148]
[138 147]
[139 146]
[140 145]
[167 177]
[168 176]
[169 175]
[170 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
