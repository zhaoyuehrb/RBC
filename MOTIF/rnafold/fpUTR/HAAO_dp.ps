%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:12:32 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (HAAO)
} def

/sequence { (\
AAAAAGGCGGCUGGGCGGAGCUGCGGGCCUCCGACGGCGGGAGGACAGCGCUGCGAGGAGGCGCCCGGGACAGUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
5 12 0.010042607 ubox
6 11 0.010369618 ubox
6 65 0.694547640 ubox
6 66 0.071162510 ubox
6 75 0.217959226 ubox
7 16 0.019345957 ubox
7 24 0.645770413 ubox
7 64 0.697566440 ubox
7 65 0.047185330 ubox
7 74 0.226859391 ubox
8 15 0.019362856 ubox
8 17 0.006282160 ubox
8 23 0.649283352 ubox
8 63 0.698945530 ubox
8 73 0.227525702 ubox
9 16 0.006307154 ubox
9 22 0.648967940 ubox
9 62 0.697370377 ubox
9 75 0.175200324 ubox
10 16 0.003362237 ubox
10 21 0.649475026 ubox
10 62 0.047557722 ubox
10 74 0.181568490 ubox
11 15 0.003428710 ubox
11 20 0.649472135 ubox
11 58 0.019122823 ubox
11 60 0.695417889 ubox
11 61 0.064848342 ubox
11 68 0.234669540 ubox
11 69 0.012486939 ubox
11 73 0.182081897 ubox
12 17 0.003360713 ubox
12 19 0.645446913 ubox
12 57 0.021475639 ubox
12 59 0.691220792 ubox
12 60 0.064272258 ubox
12 67 0.234867096 ubox
12 68 0.008987377 ubox
12 72 0.182013641 ubox
13 66 0.235335163 ubox
13 71 0.181790393 ubox
14 22 0.011827925 ubox
14 65 0.235353074 ubox
14 75 0.018315985 ubox
15 21 0.012595861 ubox
15 24 0.013209604 ubox
15 54 0.231409633 ubox
15 64 0.235284131 ubox
15 74 0.019377497 ubox
16 20 0.012587681 ubox
16 23 0.013425639 ubox
16 25 0.021266106 ubox
16 53 0.231456893 ubox
16 55 0.658549594 ubox
16 63 0.234041835 ubox
16 67 0.173764485 ubox
16 73 0.019474874 ubox
17 22 0.011742203 ubox
17 24 0.074249086 ubox
17 52 0.230964249 ubox
17 54 0.659920329 ubox
17 62 0.196057928 ubox
17 66 0.174107199 ubox
18 51 0.230644894 ubox
18 65 0.173961085 ubox
18 75 0.003854818 ubox
19 52 0.660013782 ubox
19 74 0.003356765 ubox
20 28 0.013605178 ubox
20 49 0.229980866 ubox
20 51 0.662360715 ubox
20 54 0.159774943 ubox
20 62 0.005658900 ubox
20 64 0.168752776 ubox
20 74 0.014794084 ubox
21 27 0.016782337 ubox
21 48 0.230440785 ubox
21 50 0.647442617 ubox
21 53 0.159453029 ubox
21 57 0.088265518 ubox
21 58 0.046587507 ubox
21 60 0.006087572 ubox
21 61 0.006052796 ubox
21 63 0.168583029 ubox
21 68 0.054746360 ubox
21 69 0.005901879 ubox
21 73 0.015675793 ubox
22 26 0.015826784 ubox
22 47 0.230171982 ubox
22 50 0.141275069 ubox
22 55 0.048488646 ubox
22 56 0.077594281 ubox
22 57 0.040947540 ubox
22 59 0.005823777 ubox
22 60 0.005507487 ubox
22 63 0.006671076 ubox
22 67 0.054815800 ubox
22 68 0.005730098 ubox
22 72 0.015684582 ubox
23 46 0.226528132 ubox
23 49 0.662550180 ubox
23 51 0.162570911 ubox
23 54 0.094505785 ubox
23 62 0.025170594 ubox
23 64 0.039491357 ubox
23 66 0.055165397 ubox
23 71 0.015685925 ubox
24 48 0.662686010 ubox
24 50 0.162948573 ubox
24 53 0.094613027 ubox
24 55 0.006934844 ubox
24 61 0.024686944 ubox
24 63 0.039443034 ubox
24 67 0.066162394 ubox
25 49 0.162808125 ubox
25 52 0.094419942 ubox
25 54 0.006902257 ubox
25 62 0.016376945 ubox
25 65 0.600027181 ubox
25 66 0.234112203 ubox
26 51 0.094196142 ubox
26 52 0.005688393 ubox
26 64 0.602014619 ubox
26 65 0.230597549 ubox
26 66 0.009621926 ubox
27 38 0.004183109 ubox
27 49 0.090300565 ubox
27 51 0.006919002 ubox
27 62 0.657565320 ubox
27 64 0.187989114 ubox
27 65 0.006704508 ubox
28 37 0.004186542 ubox
28 40 0.005723257 ubox
28 41 0.008214335 ubox
28 44 0.723380679 ubox
28 48 0.067129048 ubox
28 50 0.005869852 ubox
28 58 0.025976303 ubox
28 61 0.670982944 ubox
28 63 0.141915099 ubox
29 36 0.004182301 ubox
29 39 0.005738463 ubox
29 40 0.008142713 ubox
29 43 0.726764323 ubox
29 44 0.006439334 ubox
29 48 0.003519732 ubox
29 57 0.026378016 ubox
29 58 0.004546859 ubox
29 60 0.684286519 ubox
29 61 0.044668131 ubox
30 39 0.007913480 ubox
30 41 0.061942537 ubox
30 42 0.723985223 ubox
30 43 0.004073255 ubox
30 45 0.011553023 ubox
30 56 0.026345021 ubox
30 57 0.004406196 ubox
30 58 0.011969346 ubox
30 59 0.685537137 ubox
30 60 0.020285940 ubox
31 37 0.009304056 ubox
31 40 0.142716634 ubox
31 41 0.712691773 ubox
31 44 0.011841676 ubox
31 55 0.020264877 ubox
31 57 0.026984727 ubox
31 58 0.685455186 ubox
32 36 0.009261606 ubox
32 39 0.191693130 ubox
32 40 0.701017209 ubox
32 43 0.011836747 ubox
32 55 0.084917666 ubox
32 57 0.680602915 ubox
33 38 0.226154791 ubox
33 54 0.184039903 ubox
35 53 0.667293207 ubox
35 55 0.063225182 ubox
36 52 0.674402274 ubox
36 54 0.049512556 ubox
37 49 0.004445097 ubox
37 51 0.676293636 ubox
37 54 0.113031857 ubox
38 48 0.004515993 ubox
38 50 0.676294958 ubox
38 53 0.118285121 ubox
39 49 0.674714785 ubox
39 52 0.118129587 ubox
40 51 0.118083114 ubox
41 51 0.004122699 ubox
43 51 0.003370915 ubox
48 64 0.006852442 ubox
49 63 0.007400495 ubox
50 62 0.009632795 ubox
51 58 0.003399554 ubox
51 60 0.006800473 ubox
51 61 0.009758078 ubox
52 57 0.003388951 ubox
52 59 0.006973731 ubox
52 60 0.009602104 ubox
53 62 0.048084899 ubox
53 64 0.006407605 ubox
54 61 0.050038660 ubox
54 63 0.006451310 ubox
55 62 0.009675658 ubox
63 74 0.019572112 ubox
64 73 0.020405909 ubox
67 75 0.102072034 ubox
68 74 0.100725850 ubox
68 75 0.059714341 ubox
69 74 0.046456255 ubox
69 75 0.064437554 ubox
70 74 0.056886225 ubox
6 65 0.9500000 lbox
7 64 0.9500000 lbox
8 63 0.9500000 lbox
9 62 0.9500000 lbox
11 60 0.9500000 lbox
12 59 0.9500000 lbox
16 55 0.9500000 lbox
17 54 0.9500000 lbox
19 52 0.9500000 lbox
20 51 0.9500000 lbox
21 50 0.9500000 lbox
23 49 0.9500000 lbox
24 48 0.9500000 lbox
28 44 0.9500000 lbox
29 43 0.9500000 lbox
30 42 0.9500000 lbox
31 41 0.9500000 lbox
32 40 0.9500000 lbox
showpage
end
%%EOF
