%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:03:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGGUGGCCGGAUUUCCCAGUUGGGGCCCAGCCUUUUAAAGCCAUCGCUCCUUCUUUCUGGCCGGAUGUGUGCUGAGACCCAGAGUCACCCAGGGGUCUCCGUCACGUGCCAGGAGUAGGCAGAAGUGGGCUGUGACAGAUCAGGAAACAGAGCUCAGUGCAGCCCACUAAAUUGCUCAGGGCCCUACAGCUAACAAGCGGCAGAGGCAGGAUCUGCACUCAGGAGCUGCUUGGAG\
) } def
/len { sequence length } bind def

/coor [
[229.63008118 428.22528076]
[222.29672241 429.79751587]
[219.54048157 444.54211426]
[216.78424072 459.28671265]
[214.02799988 474.03131104]
[217.06095886 490.71176147]
[201.87197876 498.24380493]
[190.42958069 485.73348999]
[199.28340149 471.27505493]
[202.03964233 456.53045654]
[204.79588318 441.78585815]
[207.55212402 427.04129028]
[200.19995117 419.51733398]
[195.16691589 410.65798950]
[192.64048767 401.12835693]
[192.62751770 391.59963989]
[194.96354675 382.70242310]
[199.33384705 374.98477173]
[205.30409241 368.87878418]
[212.35791016 364.67663574]
[207.49728394 350.48599243]
[202.63664246 336.29534912]
[197.77601624 322.10470581]
[192.91537476 307.91406250]
[187.86785889 293.78881836]
[182.63432312 279.73144531]
[177.40078735 265.67404175]
[172.16726685 251.61665344]
[166.93373108 237.55926514]
[161.70021057 223.50187683]
[156.28158569 209.51480103]
[150.67880249 195.60046387]
[145.07603455 181.68611145]
[131.31436157 176.10470581]
[125.43413544 162.07339478]
[131.38174438 147.67674255]
[125.77896881 133.76240540]
[120.17619324 119.84806061]
[105.47610474 128.74699402]
[87.75476074 127.63392639]
[73.38488770 116.25630188]
[59.39780426 121.67492676]
[45.41072083 127.09355164]
[35.55685043 140.20207214]
[19.31247902 137.95429993]
[13.38842487 122.66254425]
[23.87884331 110.05766296]
[39.99209595 113.10646820]
[53.97917938 107.68784332]
[67.96626282 102.26921844]
[70.43003845 87.47293854]
[58.95352554 77.81428528]
[47.47701263 68.15562439]
[34.59508514 68.48351288]
[25.23729706 60.21790314]
[24.05177498 48.19120789]
[12.70375252 38.38190842]
[1.35572994 28.57260895]
[-9.99229336 18.76330757]
[-21.34031677 8.95400810]
[-32.68833923 -0.85529280]
[-44.03636169 -10.66459370]
[-55.38438416 -20.47389412]
[-60.47506332 -21.44882965]
[-64.30857849 -24.01381874]
[-66.49109650 -27.42847443]
[-66.97754669 -30.90318871]
[-77.92832947 -41.15406418]
[-88.87910461 -51.40493774]
[-99.82988739 -61.65581131]
[-110.78067017 -71.90668488]
[-119.16771698 -75.47749329]
[-121.80720520 -82.36586761]
[-132.62171936 -92.76039886]
[-147.93290710 -96.74513245]
[-151.74716187 -111.14307404]
[-162.56167603 -121.53760529]
[-173.37620544 -131.93212891]
[-184.19071960 -142.32666016]
[-195.00523376 -152.72117615]
[-205.81976318 -163.11570740]
[-216.63427734 -173.51023865]
[-230.92019653 -168.13665771]
[-246.12210083 -169.50219727]
[-259.22164917 -177.33573914]
[-267.61791992 -190.08193970]
[-269.64382935 -205.21000671]
[-264.89712524 -219.71626282]
[-254.32026672 -230.72048950]
[-240.01329041 -236.03776550]
[-224.81687927 -234.61236572]
[-211.74827576 -226.72729492]
[-203.40226746 -213.94813538]
[-201.43595886 -198.81221008]
[-206.23974609 -184.32475281]
[-195.42523193 -173.93022156]
[-184.61071777 -163.53570557]
[-173.79618835 -153.14117432]
[-162.98167419 -142.74664307]
[-152.16716003 -132.35212708]
[-141.35263062 -121.95759583]
[-126.81497955 -118.71634674]
[-122.22720337 -103.57491302]
[-111.41268158 -93.18038940]
[-100.52979279 -82.85746765]
[-89.57901001 -72.60659027]
[-78.62823486 -62.35571671]
[-67.67745209 -52.10484314]
[-56.72667313 -41.85396957]
[-45.57508469 -31.82191658]
[-34.22706223 -22.01261711]
[-22.87903786 -12.20331573]
[-11.53101540 -2.39401531]
[-0.18299250 7.41528511]
[11.16503048 17.22458649]
[22.51305389 27.03388596]
[33.86107635 36.84318542]
[51.25629425 39.21979523]
[57.13566971 56.67911148]
[68.61218262 66.33776855]
[80.08869934 75.99642944]
[90.40872192 70.93135834]
[101.65309906 70.01235962]
[112.24851990 73.21112823]
[120.76939392 79.93395233]
[126.12950897 89.12467194]
[136.52403259 78.31015015]
[146.91856384 67.49562836]
[157.31309509 56.68111420]
[167.70761108 45.86659241]
[178.10214233 35.05207443]
[188.49667358 24.23755455]
[198.89118958 13.42303562]
[209.28572083 2.60851645]
[219.68025208 -8.20600224]
[223.36145020 -16.54518890]
[230.28407288 -19.09352493]
[240.82043457 -29.76989746]
[245.00692749 -45.02715302]
[259.45394897 -48.65102386]
[269.99032593 -59.32740021]
[280.38485718 -70.14192200]
[290.63574219 -81.09269714]
[287.57183838 -96.30428314]
[294.06484985 -110.39756012]
[307.61804199 -117.95337677]
[323.01995850 -116.06637573]
[334.34823608 -105.46213531]
[337.24691772 -90.21820831]
[330.60140991 -76.19619751]
[316.96704102 -68.78784943]
[301.58651733 -70.84182739]
[291.33563232 -59.89104462]
[290.59313965 -55.19017410]
[286.90136719 -50.90007782]
[280.66668701 -48.79103088]
[270.13034058 -38.11465836]
[266.69747925 -23.62104797]
[251.49681091 -19.23353004]
[240.96043396 -8.55715656]
[230.49476624 2.18852353]
[220.10023499 13.00304317]
[209.70571899 23.81756210]
[199.31118774 34.63208008]
[188.91665649 45.44660187]
[178.52214050 56.26111984]
[168.12760925 67.07563782]
[157.73307800 77.89015961]
[147.33856201 88.70467377]
[136.94403076 99.51919556]
[134.09053040 114.24527740]
[139.69331360 128.15962219]
[145.29608154 142.07395935]
[159.56054688 148.33198547]
[165.04434204 162.52291870]
[158.99037170 176.08334351]
[164.59313965 189.99768066]
[170.19592285 203.91201782]
[175.13458252 208.26275635]
[176.88583374 213.64488220]
[175.75759888 218.26835632]
[180.99111938 232.32574463]
[186.22465515 246.38313293]
[191.45817566 260.44052124]
[196.69171143 274.49789429]
[201.92524719 288.55529785]
[206.74732971 293.03488159]
[208.35591125 298.46136475]
[207.10601807 303.05343628]
[211.96664429 317.24407959]
[216.82728577 331.43472290]
[221.68791199 345.62536621]
[226.54855347 359.81597900]
[250.92633057 363.62402344]
[267.39202881 385.33001709]
[263.94888306 414.94998169]
[272.50741577 427.26873779]
[281.06594849 439.58749390]
[289.62448120 451.90621948]
[298.18301392 464.22497559]
[306.74154663 476.54373169]
[315.30007935 488.86245728]
[323.85861206 501.18121338]
[343.76550293 509.14559937]
[344.54031372 529.77960205]
[353.57983398 541.74981689]
[362.61935425 553.72009277]
[371.73767090 565.63043213]
[380.93441772 577.48034668]
[390.13113403 589.33026123]
[399.32788086 601.18011475]
[413.81567383 609.98583984]
[409.36471558 626.34509277]
[392.41262817 626.59680176]
[387.47796631 610.37689209]
[378.28125000 598.52697754]
[369.08450317 586.67706299]
[359.88778687 574.82714844]
[353.31597900 571.47631836]
[350.64907837 562.75964355]
[341.60955811 550.78936768]
[332.57003784 538.81909180]
[323.72613525 539.04241943]
[315.64315796 535.12066650]
[310.18035889 527.81591797]
[308.65789795 518.68310547]
[311.53988647 509.73974609]
[302.98135376 497.42098999]
[294.42282104 485.10226440]
[285.86425781 472.78350830]
[277.30572510 460.46475220]
[268.74719238 448.14602661]
[260.18865967 435.82727051]
[251.63012695 423.50854492]
[244.29678345 425.08078003]
[251.81947327 438.05804443]
[241.80186462 449.22259521]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 12]
[3 11]
[4 10]
[5 9]
[20 193]
[21 192]
[22 191]
[23 190]
[24 189]
[25 186]
[26 185]
[27 184]
[28 183]
[29 182]
[30 181]
[31 178]
[32 177]
[33 176]
[36 173]
[37 172]
[38 171]
[41 50]
[42 49]
[43 48]
[51 121]
[52 120]
[53 119]
[56 117]
[57 116]
[58 115]
[59 114]
[60 113]
[61 112]
[62 111]
[63 110]
[67 109]
[68 108]
[69 107]
[70 106]
[71 105]
[73 104]
[74 103]
[76 101]
[77 100]
[78 99]
[79 98]
[80 97]
[81 96]
[82 95]
[126 170]
[127 169]
[128 168]
[129 167]
[130 166]
[131 165]
[132 164]
[133 163]
[134 162]
[135 161]
[137 160]
[138 159]
[140 157]
[141 156]
[142 153]
[143 152]
[196 234]
[197 233]
[198 232]
[199 231]
[200 230]
[201 229]
[202 228]
[203 227]
[205 222]
[206 221]
[207 220]
[208 218]
[209 217]
[210 216]
[211 215]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
