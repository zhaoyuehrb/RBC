%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:44:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGACCCGCCCCCUUCAGCUUGGGAAAGCGAAAGCGUGGCAGGGGCCGGACCUGGGAGCGGAGGAGGCGGGUCUCCAUAGAAACCUCCACCUGUUUCCGGCCGGGCUGUGAGAGAUUAGGGGCUGCUGCGGGGGCCAAUCUCAGCCAGCUCGCCUCUUCCCAGCGGCCUCUGCGGGAGCGGUGGGUGUUGUACACAAUCAUC\
) } def
/len { sequence length } bind def

/coor [
[417.66439819 -12.79512882]
[411.38269043 -21.55676079]
[397.53564453 -15.78971195]
[383.68856812 -10.02266312]
[369.84152222 -4.25561333]
[355.99444580 1.51143551]
[342.14736938 7.27848482]
[328.30032349 13.04553413]
[314.45324707 18.81258202]
[300.60620117 24.57963181]
[291.83193970 36.61547852]
[276.11770630 34.77863693]
[262.27066040 40.54568481]
[248.42358398 46.31273651]
[234.57652283 52.07978439]
[220.72946167 57.84683228]
[215.76020813 63.32403946]
[206.62321472 63.59415054]
[192.68856812 69.14622498]
[178.75390625 74.69829559]
[164.81925964 80.25036621]
[150.97219849 86.01741791]
[137.21603394 91.99806213]
[123.45988464 97.97870636]
[125.12237549 110.29993439]
[119.97060394 123.39145660]
[107.88841248 133.44419861]
[90.84973907 136.84782410]
[78.43440247 145.26562500]
[71.77178192 160.25033569]
[55.43713379 161.70338440]
[46.23414612 148.12998962]
[53.63006210 133.49330139]
[70.01660156 132.85029602]
[82.43193054 124.43248749]
[79.33552551 117.60150909]
[70.04631805 97.10857391]
[55.53269577 100.89734650]
[41.01907730 104.68612671]
[26.50545692 108.47489929]
[15.22146130 120.37462616]
[-0.66076338 116.28965759]
[-4.80294466 100.42225647]
[7.05603790 89.09545135]
[22.71668053 93.96128082]
[37.23030090 90.17250824]
[51.74391937 86.38372803]
[66.25753784 82.59494781]
[85.55036926 70.15357208]
[105.43347168 72.17196655]
[117.47924042 84.22254944]
[131.23539734 78.24190521]
[144.99156189 72.26126099]
[149.23138428 67.17477417]
[154.59854126 65.28206635]
[159.26719666 66.31571960]
[173.20184326 60.76364517]
[187.13648987 55.21157455]
[201.07113647 49.65950012]
[214.96241760 43.99977112]
[228.80947876 38.23272324]
[242.65653992 32.46567154]
[256.50360107 26.69862366]
[270.35067749 20.93157387]
[280.11535645 8.48323059]
[294.83914185 10.73256969]
[308.68621826 4.96552038]
[322.53326416 -0.80152893]
[336.38034058 -6.56857824]
[350.22738647 -12.33562756]
[364.07446289 -18.10267639]
[377.92150879 -23.86972618]
[391.76858521 -29.63677406]
[405.61563110 -35.40382385]
[403.87057495 -55.03614426]
[408.85131836 -74.08442688]
[419.95913696 -90.31506348]
[435.87771606 -101.82981110]
[454.72909546 -107.28778076]
[474.29531860 -106.06157684]
[492.27917480 -98.30939484]
[506.57412720 -84.95474243]
[519.60302734 -92.38763428]
[532.63189697 -99.82051849]
[540.78460693 -113.37942505]
[555.67346191 -112.96555328]
[568.70239258 -120.39844513]
[581.73126221 -127.83132935]
[594.76019287 -135.26422119]
[607.78906250 -142.69711304]
[620.81799316 -150.12998962]
[626.72595215 -157.10517883]
[634.10650635 -157.57531738]
[647.24890137 -164.80567932]
[660.39123535 -172.03605652]
[673.53356934 -179.26643372]
[686.67596436 -186.49681091]
[699.81829834 -193.72717285]
[712.96069336 -200.95755005]
[715.01702881 -216.22442627]
[725.54565430 -227.22450256]
[740.35748291 -229.88424683]
[753.73510742 -223.38992310]
[766.87750244 -230.62030029]
[780.01983643 -237.85066223]
[793.16223145 -245.08103943]
[806.30456543 -252.31141663]
[819.44696045 -259.54177856]
[832.58929443 -266.77215576]
[833.29113770 -280.54162598]
[840.64807129 -292.07385254]
[852.64746094 -298.41281128]
[866.10351562 -297.99655151]
[877.50329590 -291.04083252]
[890.75598145 -298.06698608]
[894.58996582 -303.46597290]
[899.79473877 -305.76791382]
[904.52929688 -305.09826660]
[917.99310303 -311.71090698]
[931.45684814 -318.32351685]
[944.92059326 -324.93615723]
[958.38439941 -331.54879761]
[971.84814453 -338.16143799]
[981.74157715 -353.68859863]
[999.19000244 -351.83792114]
[1012.54980469 -358.65811157]
[1025.90966797 -365.47830200]
[1039.21630859 -372.40167236]
[1052.46899414 -379.42782593]
[1061.03735352 -392.72793579]
[1075.90625000 -391.85348511]
[1089.15893555 -398.87960815]
[1102.41162109 -405.90573120]
[1106.81042480 -421.08554077]
[1120.69458008 -428.63562012]
[1135.82702637 -424.07666016]
[1143.22998047 -410.11337280]
[1138.51123047 -395.02996826]
[1124.47045898 -387.77514648]
[1109.43774414 -392.65307617]
[1096.18505859 -385.62692261]
[1082.93237305 -378.60079956]
[1075.31188965 -365.80325317]
[1059.49511719 -366.17514038]
[1046.24243164 -359.14901733]
[1041.80236816 -353.23464966]
[1032.72985840 -352.11849976]
[1019.36999512 -345.29827881]
[1006.01019287 -338.47808838]
[1001.98156738 -327.06781006]
[990.90173340 -321.27795410]
[978.46081543 -324.69766235]
[964.99700928 -318.08502197]
[951.53326416 -311.47238159]
[938.06945801 -304.85977173]
[924.60571289 -298.24713135]
[911.14196777 -291.63449097]
[897.78210449 -284.81430054]
[884.52941895 -277.78817749]
[882.74871826 -261.47222900]
[871.48254395 -249.30928040]
[855.02380371 -246.22532654]
[839.81964111 -253.62979126]
[826.67730713 -246.39942932]
[813.53497314 -239.16905212]
[800.39257812 -231.93867493]
[787.25024414 -224.70831299]
[774.10784912 -217.47793579]
[760.96551514 -210.24755859]
[759.28985596 -195.47155762]
[749.11450195 -184.38438416]
[734.18713379 -181.37968445]
[720.19104004 -187.81518555]
[707.04870605 -180.58480835]
[693.90631104 -173.35444641]
[680.76397705 -166.12406921]
[667.62158203 -158.89369202]
[654.47924805 -151.66331482]
[641.33685303 -144.43295288]
[628.25085449 -137.10110474]
[615.22198486 -129.66821289]
[602.19305420 -122.23532104]
[589.16418457 -114.80243683]
[576.13525391 -107.36954498]
[563.10638428 -99.93665314]
[555.88555908 -86.90940094]
[540.06481934 -86.79161835]
[527.03588867 -79.35873413]
[514.00701904 -71.92584229]
[517.12268066 -61.69516754]
[518.27539062 -51.05710602]
[517.42254639 -40.38505173]
[514.59197998 -30.05397415]
[509.88104248 -20.42727280]
[503.45321655 -11.84398556]
[495.53256226 -4.60684490]
[486.39578247 1.02839458]
[476.36267090 4.86199474]
[465.78479004 6.75731468]
[455.03329468 6.64567804]
[444.48580933 4.52886009]
[434.51315308 0.47910151]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 74]
[3 73]
[4 72]
[5 71]
[6 70]
[7 69]
[8 68]
[9 67]
[10 66]
[12 64]
[13 63]
[14 62]
[15 61]
[16 60]
[18 59]
[19 58]
[20 57]
[21 56]
[22 53]
[23 52]
[24 51]
[28 35]
[29 34]
[37 48]
[38 47]
[39 46]
[40 45]
[82 189]
[83 188]
[84 187]
[86 185]
[87 184]
[88 183]
[89 182]
[90 181]
[91 180]
[93 179]
[94 178]
[95 177]
[96 176]
[97 175]
[98 174]
[99 173]
[103 169]
[104 168]
[105 167]
[106 166]
[107 165]
[108 164]
[109 163]
[114 159]
[115 158]
[118 157]
[119 156]
[120 155]
[121 154]
[122 153]
[123 152]
[125 149]
[126 148]
[127 147]
[128 145]
[129 144]
[131 142]
[132 141]
[133 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
