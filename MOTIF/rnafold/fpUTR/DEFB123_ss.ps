%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:56:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUUGUUGGCUGUCCUCUCCCUGCUGACCUAAAUGACAAAGGGAGGGGUGUCCAGUCAGAGUGUGAGGGCUGUACCCGUGGGCAGCUGAGGGAGUGCGAGCCACAGGCCAGGCACUCUCCUUCUCCCAUUAGCUCAGCCGUGGCAUCGGACUUGCAGCUUCAUUUUGGGCUGCCUUAGCC\
) } def
/len { sequence length } bind def

/coor [
[110.82592773 217.79872131]
[104.33872986 231.89466858]
[90.78864288 239.45606995]
[75.38596344 237.57540894]
[64.05332184 226.97584534]
[61.14835739 211.73312378]
[67.78808594 197.70837402]
[81.41940308 190.29440308]
[83.23739624 175.40498352]
[85.05538177 160.51554871]
[86.87337494 145.62612915]
[88.69136810 130.73670959]
[81.53950500 127.05255127]
[75.50154114 121.73605347]
[62.29965973 128.85717773]
[49.09778595 135.97830200]
[35.89590836 143.09942627]
[22.69403076 150.22056580]
[9.49215508 157.34169006]
[-3.70972180 164.46281433]
[-16.91159821 171.58393860]
[-30.11347580 178.70506287]
[-27.62074471 193.64042664]
[-30.11503983 208.57553101]
[-37.32580185 221.89031982]
[-48.47085953 232.14051819]
[-62.34127808 238.21424866]
[-77.43250275 239.45268250]
[-92.10754395 235.72148132]
[-104.77456665 227.42538452]
[-114.05954742 215.46429443]
[-118.95532227 201.13565063]
[-118.93083191 185.99371338]
[-113.98873901 171.68096924]
[-104.66510773 159.74998474]
[-91.97131348 151.49490356]
[-77.28427887 147.81118774]
[-62.19714355 149.09843445]
[-48.34644318 155.21701050]
[-37.23460388 165.50318909]
[-24.03272629 158.38206482]
[-10.83084869 151.26094055]
[2.37102747 144.13981628]
[15.57290459 137.01867676]
[28.77478027 129.89755249]
[41.97665787 122.77642822]
[55.17853546 115.65530396]
[68.38040924 108.53417206]
[67.34332275 97.51567078]
[70.03527832 86.78085327]
[76.14888000 77.55551910]
[84.98603058 70.89310455]
[95.53761292 67.55438995]
[106.59875488 67.92061615]
[112.90523529 54.31075287]
[119.21172333 40.70089340]
[125.51820374 27.09103584]
[124.30000305 11.31679916]
[136.67120361 3.02205062]
[142.97767639 -10.58780861]
[143.75144958 -19.71710968]
[149.51353455 -24.37768745]
[156.05528259 -37.87604141]
[162.59703064 -51.37439728]
[155.44705200 -65.01931763]
[157.67654419 -80.08194733]
[168.22322083 -90.81655121]
[182.89292908 -93.25329590]
[189.43467712 -106.75165558]
[195.97642517 -120.25000763]
[202.51815796 -133.74836731]
[209.05990601 -147.24671936]
[199.66166687 -159.22312927]
[196.40856934 -174.03204346]
[199.89352417 -188.72474670]
[209.37321472 -200.39935303]
[222.92581177 -206.77404785]
[237.84040833 -206.63290405]
[244.38215637 -220.13127136]
[250.92390442 -233.62962341]
[257.46563721 -247.12797546]
[264.00738525 -260.62631226]
[264.93948364 -269.74081421]
[270.78161621 -274.30068970]
[277.55664062 -287.68347168]
[277.57525635 -294.33850098]
[280.52478027 -299.23590088]
[284.80615234 -301.40704346]
[292.04156494 -314.54663086]
[299.27700806 -327.68621826]
[306.51242065 -340.82577515]
[313.63354492 -354.02764893]
[320.63983154 -367.29083252]
[327.64614868 -380.55401611]
[334.65243530 -393.81719971]
[341.65872192 -407.08038330]
[348.66500854 -420.34356689]
[343.19689941 -436.94680786]
[351.25793457 -452.07641602]
[367.43875122 -456.61636353]
[374.21380615 -469.99914551]
[380.98883057 -483.38192749]
[382.74844360 -500.24432373]
[399.43893433 -503.22146606]
[406.92013550 -488.00738525]
[394.37161255 -476.60690308]
[387.59658813 -463.22412109]
[380.82153320 -449.84133911]
[386.51242065 -438.26345825]
[384.45678711 -425.33016968]
[375.18505859 -415.80810547]
[361.92819214 -413.33728027]
[354.92190552 -400.07409668]
[347.91558838 -386.81091309]
[340.90930176 -373.54772949]
[333.90301514 -360.28454590]
[326.89672852 -347.02136230]
[326.55166626 -339.61840820]
[319.65200806 -333.59036255]
[312.41656494 -320.45077515]
[305.18115234 -307.31118774]
[297.94570923 -294.17160034]
[290.93942261 -280.90844727]
[284.16439819 -267.52566528]
[277.50573730 -254.08457947]
[270.96401978 -240.58622742]
[264.42227173 -227.08787537]
[257.88052368 -213.58952332]
[251.33876038 -200.09117126]
[260.69070435 -188.47192383]
[264.08438110 -173.88452148]
[260.79446411 -159.21014404]
[251.42127991 -147.37107849]
[237.78190613 -140.74879456]
[222.55825806 -140.70497131]
[216.01652527 -127.20661163]
[209.47477722 -113.70825958]
[202.93302917 -100.20990753]
[196.39128113 -86.71155548]
[203.56806946 -73.68727875]
[201.67709351 -58.75783539]
[191.23564148 -47.67498779]
[176.09538269 -44.83264923]
[169.55363464 -31.33429718]
[163.01190186 -17.83594322]
[156.58753967 -4.28132534]
[150.28105164 9.32853413]
[151.95033264 24.12930298]
[139.12806702 33.39751816]
[132.82157898 47.00737762]
[126.51509857 60.61723709]
[120.20861053 74.22709656]
[132.62777710 97.16129303]
[124.35591125 121.89566040]
[132.91804504 134.21191406]
[141.48017883 146.52815247]
[150.04229736 158.84440613]
[158.60443115 171.16064453]
[167.16656494 183.47689819]
[175.72868347 195.79315186]
[191.32592773 198.34301758]
[200.48384094 211.22354126]
[197.76921082 226.79295349]
[184.79257202 235.81417847]
[169.25273132 232.93508911]
[160.36921692 219.86380005]
[163.41244507 204.35527039]
[154.85031128 192.03903198]
[146.28817749 179.72277832]
[137.72605896 167.40653992]
[129.16392517 155.09028625]
[120.60179901 142.77403259]
[112.03966522 130.45779419]
[109.28603363 131.40701294]
[106.45895386 132.10783386]
[103.58078766 132.55470276]
[101.76279449 147.44412231]
[99.94480896 162.33354187]
[98.12681580 177.22297668]
[96.30883026 192.11239624]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 180]
[9 179]
[10 178]
[11 177]
[12 176]
[14 48]
[15 47]
[16 46]
[17 45]
[18 44]
[19 43]
[20 42]
[21 41]
[22 40]
[54 152]
[55 151]
[56 150]
[57 149]
[59 147]
[60 146]
[62 145]
[63 144]
[64 143]
[68 139]
[69 138]
[70 137]
[71 136]
[72 135]
[78 129]
[79 128]
[80 127]
[81 126]
[82 125]
[84 124]
[85 123]
[88 122]
[89 121]
[90 120]
[91 119]
[92 117]
[93 116]
[94 115]
[95 114]
[96 113]
[97 112]
[100 108]
[101 107]
[102 106]
[154 173]
[155 172]
[156 171]
[157 170]
[158 169]
[159 168]
[160 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
