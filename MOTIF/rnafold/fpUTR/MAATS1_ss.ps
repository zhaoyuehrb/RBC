%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:43:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUACCAUAGCGACGUGCACGCAGUAGCCAGGCCUGACCCGCUGGUCCCUUGCUGGCGGGAGGAAAGAGGCGGCACCAUGAGCCACGCAGUAACCAUCGAGGAGCCCCAGGCCCAGCCGCAGGUGUCUCAAACUCGGUACCGGGAGAGGUCGCGGGCUGGGAGCCACAUCUCCUCCAAUCGAGCGU\
) } def
/len { sequence length } bind def

/coor [
[203.16610718 110.10271454]
[188.17086792 109.72475433]
[173.17562866 109.34679413]
[158.18038940 108.96883392]
[143.18516541 108.59087372]
[137.66293335 122.80931854]
[127.62099457 134.29055786]
[114.26442719 141.65678406]
[99.19607544 144.02403259]
[84.22418976 141.10821533]
[76.54306793 153.99232483]
[68.86194611 166.87643433]
[74.17459869 181.58390808]
[68.74204254 196.24751282]
[55.12936020 203.94354248]
[39.76404572 201.03817749]
[29.90113258 188.90322876]
[30.19758415 173.26844788]
[40.51342773 161.51611328]
[55.97783279 159.19531250]
[63.65895844 146.31120300]
[71.34008026 133.42709351]
[64.62414551 127.74900818]
[59.05051422 120.71286774]
[54.89480209 112.55213165]
[52.38417816 103.55624390]
[51.68601608 94.06044769]
[36.72886276 92.92752838]
[21.77170563 91.79460907]
[10.47256756 105.95304871]
[-6.90729094 110.47075653]
[-23.38035965 103.72586060]
[-32.43985748 88.58595276]
[-47.42663193 87.95613861]
[-62.41340256 87.32632446]
[-68.47063446 90.05921173]
[-74.14242554 89.40554047]
[-77.89058685 86.41522217]
[-92.84774017 85.28230286]
[-107.80489349 84.14938354]
[-122.76204681 83.01646423]
[-137.71920776 81.88355255]
[-152.67636108 80.75063324]
[-167.63351440 79.61771393]
[-182.59066772 78.48479462]
[-197.54782104 77.35188293]
[-210.60443115 86.67414093]
[-225.99343872 82.14000702]
[-231.90969849 67.22768402]
[-223.81477356 53.37662888]
[-207.91839600 51.21218109]
[-196.41491699 62.39472580]
[-181.45774841 63.52764130]
[-166.50059509 64.66056061]
[-151.54344177 65.79347992]
[-136.58628845 66.92639160]
[-121.62913513 68.05931091]
[-106.67197418 69.19223022]
[-91.71482086 70.32514954]
[-76.75766754 71.45806122]
[-61.78358841 72.33955383]
[-46.79681778 72.96936798]
[-31.81004524 73.59918213]
[-25.74773788 63.05435562]
[-15.71335220 56.05299759]
[-3.58170629 53.97825623]
[8.34834385 57.28569794]
[17.78952217 65.40504456]
[22.90462303 76.83745575]
[37.86177826 77.97037506]
[52.81893539 79.10329437]
[60.82226181 66.41681671]
[53.35866547 53.40548325]
[45.89506912 40.39415359]
[30.47183228 37.81388474]
[20.35487556 25.88990784]
[20.32111740 10.25236130]
[30.38649559 -1.71518445]
[45.79844666 -4.36202049]
[59.27992249 3.56160879]
[64.46537781 18.31440735]
[58.90639877 32.93055725]
[66.36999512 45.94188690]
[73.83359528 58.95321655]
[88.82446289 53.41851044]
[104.54534149 53.09077072]
[119.26709747 57.83933258]
[131.42465210 66.98423004]
[139.78323364 79.38812256]
[143.56312561 93.59564209]
[158.55834961 93.97359467]
[173.55358887 94.35155487]
[188.54882812 94.72951508]
[203.54406738 95.10747528]
[213.44073486 75.99354553]
[231.55699158 64.50398254]
[252.92295837 63.70534897]
[271.72006226 73.74295807]
[282.86569214 91.82093048]
[297.77636719 90.18618774]
[312.68701172 88.55144501]
[327.59765625 86.91670227]
[342.50833130 85.28195953]
[357.41897583 83.64721680]
[362.38479614 70.55825043]
[372.46069336 60.93498230]
[385.63809204 56.61684799]
[399.32394409 58.39350128]
[410.85089111 65.86111450]
[417.99722290 77.51236725]
[432.93322754 76.12834167]
[447.86923218 74.74431610]
[462.77987671 73.10957336]
[477.66098022 71.22457123]
[492.54205322 69.33956909]
[507.42315674 67.45457458]
[522.30426025 65.56957245]
[537.18530273 63.68457794]
[541.93780518 55.49783325]
[549.81469727 50.50041580]
[558.97143555 49.71213150]
[567.33203125 53.18423462]
[573.05926514 60.01628113]
[588.01641846 58.88336563]
[602.97363281 57.75044632]
[617.92071533 56.49193192]
[632.85675049 55.10790634]
[647.79272461 53.72388077]
[662.72875977 52.33985519]
[669.19952393 43.56430817]
[679.22961426 39.88550949]
[689.41192627 42.29515839]
[696.42797852 49.75909042]
[711.40203857 48.87760162]
[726.37609863 47.99611282]
[741.35015869 47.11462021]
[754.74078369 37.64764404]
[769.51947021 44.75557709]
[770.48321533 61.12638092]
[756.64056396 69.91918182]
[742.23168945 62.08869934]
[727.25762939 62.97018814]
[712.28350830 63.85167694]
[697.30944824 64.73316956]
[682.00531006 76.53163147]
[664.11279297 67.27587128]
[649.17675781 68.65989685]
[634.24072266 70.04392242]
[619.30474854 71.42794800]
[612.92120361 75.18358612]
[604.10650635 72.70760345]
[589.14935303 73.84052277]
[574.19219971 74.97343445]
[558.25915527 88.07482910]
[539.07031250 78.56566620]
[524.18927002 80.45066071]
[509.30816650 82.33566284]
[494.42706299 84.22065735]
[479.54598999 86.10565948]
[464.66488647 87.99066162]
[461.07214355 91.16600800]
[455.44049072 92.10459137]
[449.25326538 89.68032837]
[434.31726074 91.06435394]
[419.38122559 92.44837952]
[412.99530029 107.28152466]
[399.92864990 116.93059540]
[383.68658447 118.68953705]
[368.68588257 111.98493958]
[359.05371094 98.55786896]
[344.14306641 100.19261169]
[329.23242188 101.82735443]
[314.32174683 103.46209717]
[299.41110229 105.09683990]
[284.50045776 106.73158264]
[282.85321045 115.65808105]
[279.26220703 124.00760651]
[273.90155029 131.36203003]
[267.03414917 137.35182190]
[258.99874878 141.67457581]
[250.19329834 144.11029053]
[241.05513000 144.53256226]
[232.03936768 142.91510010]
[223.59617615 139.33338928]
[216.14831543 133.96109009]
[210.06996155 127.06162262]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 94]
[2 93]
[3 92]
[4 91]
[5 90]
[10 22]
[11 21]
[12 20]
[27 71]
[28 70]
[29 69]
[33 63]
[34 62]
[35 61]
[38 60]
[39 59]
[40 58]
[41 57]
[42 56]
[43 55]
[44 54]
[45 53]
[46 52]
[72 84]
[73 83]
[74 82]
[99 175]
[100 174]
[101 173]
[102 172]
[103 171]
[104 170]
[110 165]
[111 164]
[112 163]
[113 160]
[114 159]
[115 158]
[116 157]
[117 156]
[118 155]
[123 153]
[124 152]
[125 151]
[126 149]
[127 148]
[128 147]
[129 146]
[133 144]
[134 143]
[135 142]
[136 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
