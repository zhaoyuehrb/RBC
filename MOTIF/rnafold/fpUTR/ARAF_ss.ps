%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:01:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUGACAGACGUGACCCUGACCCAAUAAGGGUGGAAGGCUGAGUCCCGCAGAGCCAAUAACGAGAGUCCGAGAGGCGACGGAGGCGGACUCUGUGAGGAAACAAGAAGAGAGGCCCAAGAUGGAGACGGCGGCGGCUGUAGCGGCGUGACAGGAGCCCCAUGGCACCUGCCCAGCCCCACCUCAGCCCAUCUUGACAAAAUCUAAGGCUCC\
) } def
/len { sequence length } bind def

/coor [
[167.73146057 107.50000000]
[152.73146057 107.50000000]
[137.73146057 107.50000000]
[122.73146820 107.50000000]
[110.13397980 121.68576050]
[91.17044830 122.24878693]
[81.54756927 133.75531006]
[71.92469025 145.26184082]
[78.75993347 160.02751160]
[78.47252655 176.23777771]
[71.17075348 190.64805603]
[58.36178589 200.39614868]
[42.64088440 203.57078552]
[27.16561127 199.58609009]
[17.71429443 211.23394775]
[8.26297665 222.88180542]
[-1.18834138 234.52966309]
[-10.63965893 246.17752075]
[-5.71946287 260.79925537]
[-9.50759411 275.75430298]
[-20.79527473 286.27056885]
[-35.98064423 288.99234009]
[-50.21810913 283.05111694]
[-58.96454620 270.34274292]
[-59.42899704 254.92236328]
[-51.46325684 241.71060181]
[-37.60916901 234.92327881]
[-22.28751755 236.72621155]
[-12.83619976 225.07835388]
[-3.38488173 213.43048096]
[6.06643581 201.78262329]
[15.51775360 190.13476562]
[8.99442005 177.89126587]
[7.62582731 164.04252625]
[11.65144730 150.67605591]
[20.49514198 139.81933594]
[32.84736252 133.13226318]
[46.85899734 131.65344238]
[60.41815948 135.63896179]
[70.04103851 124.13243103]
[79.66392517 112.62590790]
[77.08943939 106.93367004]
[76.07557678 100.76911926]
[76.69139862 94.55217743]
[63.89019775 86.73365784]
[51.08899689 78.91514587]
[38.23021317 71.19168854]
[25.31455994 63.56372070]
[12.39890575 55.93575668]
[-0.51674849 48.30778885]
[-13.43240261 40.67982101]
[-26.34805679 33.05185318]
[-39.26371002 25.42388725]
[-52.23552704 17.89182663]
[-65.26280212 10.45608616]
[-77.84481049 19.02663803]
[-92.83916473 21.27527618]
[-107.26387024 16.80896759]
[-118.27372742 6.56474209]
[-123.72146606 -7.38630009]
[-122.57645416 -22.25756073]
[-135.60372925 -29.69330215]
[-148.10090637 -24.67109299]
[-161.02026367 -27.71878624]
[-169.69700623 -37.50574875]
[-171.13116455 -50.31048203]
[-184.04682922 -57.93844986]
[-196.96247864 -65.56641388]
[-212.79502869 -62.97603989]
[-224.59454346 -73.84576416]
[-223.30946350 -89.83726501]
[-209.92556763 -98.68323517]
[-194.70985413 -93.59780121]
[-189.33451843 -78.48207092]
[-176.41885376 -70.85410309]
[-163.50320435 -63.22613525]
[-147.40983582 -68.11018372]
[-132.46952820 -59.67724609]
[-128.16798401 -42.72057343]
[-115.14070892 -35.28483200]
[-102.91818237 -43.83323669]
[-88.13538361 -46.23703384]
[-73.71580505 -41.96657944]
[-62.53470230 -31.81752968]
[-56.84578323 -17.76323700]
[-57.82705688 -2.57118344]
[-44.79978943 4.86455774]
[-37.43295288 5.45019913]
[-31.63574409 12.50823402]
[-18.72009087 20.13619995]
[-5.80443573 27.76416779]
[7.11121845 35.39213562]
[20.02687263 43.02009964]
[32.94252777 50.64806747]
[45.85818100 58.27603531]
[53.21553040 58.97077560]
[58.90751266 66.11393738]
[71.70871735 73.93245697]
[84.50991821 81.75097656]
[98.75975037 76.09536743]
[113.51836395 80.24592590]
[122.73146820 92.50000000]
[137.73146057 92.50000000]
[152.73146057 92.50000000]
[167.73146057 92.50000000]
[172.75282288 82.19610596]
[181.21820068 74.54441833]
[191.87911987 70.62178040]
[203.18247986 70.95887756]
[213.49668884 75.46873474]
[221.34722900 83.46486664]
[225.62747192 93.76542664]
[240.61265564 94.43205261]
[255.59782410 95.09867859]
[270.58300781 95.76530457]
[285.57272339 95.20973206]
[300.46743774 93.43563080]
[315.36215210 91.66153717]
[330.25686646 89.88743591]
[345.15158081 88.11334229]
[360.04629517 86.33924103]
[374.94100952 84.56513977]
[389.83572388 82.79104614]
[405.41833496 70.00177765]
[422.84182739 78.38784027]
[437.67742920 76.17314148]
[445.70223999 71.81128693]
[452.74911499 74.03723907]
[467.61590576 72.04261780]
[480.26464844 62.53895950]
[493.90777588 68.51514435]
[508.77456665 66.52053070]
[516.86309814 62.27806473]
[523.87622070 64.60820007]
[538.77093506 62.83409882]
[553.66564941 61.06000137]
[568.56036377 59.28590393]
[583.45507812 57.51180649]
[592.03100586 47.87832260]
[604.47283936 46.70693970]
[614.06005859 54.08259201]
[628.97943115 52.52940369]
[643.89880371 50.97621536]
[658.81817627 49.42302704]
[667.02886963 45.42211914]
[673.96984863 47.95904541]
[688.91064453 46.62710953]
[703.85137939 45.29516983]
[716.90997314 36.36303329]
[730.27404785 42.93964386]
[745.21478271 41.60770416]
[760.14526367 40.16510010]
[775.06463623 38.61191177]
[788.01647949 28.55302620]
[803.09948730 34.98997116]
[804.79754639 51.30096817]
[791.36383057 60.70666122]
[776.61779785 53.53128052]
[761.69842529 55.08447266]
[755.37158203 58.90335846]
[746.54669189 56.54845047]
[731.60595703 57.88039017]
[719.61602783 66.71725464]
[705.18328857 60.23591995]
[690.24255371 61.56785583]
[675.30181885 62.89979553]
[660.37133789 64.34239960]
[645.45196533 65.89558411]
[630.53259277 67.44877625]
[615.61322021 69.00196075]
[601.98083496 80.05351257]
[585.22918701 72.40652466]
[570.33447266 74.18061829]
[555.43975830 75.95471954]
[540.54504395 77.72881317]
[525.65032959 79.50291443]
[510.76916504 81.38732147]
[495.90237427 83.38193512]
[484.31698608 92.74292755]
[469.61050415 86.90940857]
[454.74371338 88.90402985]
[439.89212036 91.00874329]
[425.05651855 93.22344208]
[419.74108887 101.94927216]
[410.30209351 106.40282440]
[399.75280762 104.89544678]
[391.60983276 97.68576050]
[376.71511841 99.45986176]
[361.82040405 101.23395538]
[346.92568970 103.00805664]
[332.03097534 104.78215027]
[317.13626099 106.55625153]
[302.24151611 108.33034515]
[287.34680176 110.10444641]
[300.65197754 117.03064728]
[309.28958130 129.29408264]
[311.32965088 144.15470886]
[306.31640625 158.29216003]
[295.36996460 168.54765320]
[280.93609619 172.62977600]
[266.23983765 169.62643433]
[254.56481934 160.20870972]
[248.51960754 146.48078918]
[249.45492554 131.50997925]
[257.16177368 118.64125061]
[269.91638184 110.75048828]
[254.93119812 110.08386230]
[239.94602966 109.41722870]
[224.96084595 108.75060272]
[214.17898560 124.01733398]
[196.23069763 129.74594116]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 105]
[2 104]
[3 103]
[4 102]
[6 41]
[7 40]
[8 39]
[14 32]
[15 31]
[16 30]
[17 29]
[18 28]
[44 99]
[45 98]
[46 97]
[47 95]
[48 94]
[49 93]
[50 92]
[51 91]
[52 90]
[53 89]
[54 87]
[55 86]
[61 80]
[62 79]
[66 76]
[67 75]
[68 74]
[112 209]
[113 208]
[114 207]
[115 206]
[116 194]
[117 193]
[118 192]
[119 191]
[120 190]
[121 189]
[122 188]
[123 187]
[125 183]
[126 182]
[128 181]
[129 180]
[131 178]
[132 177]
[134 176]
[135 175]
[136 174]
[137 173]
[138 172]
[141 170]
[142 169]
[143 168]
[144 167]
[146 166]
[147 165]
[148 164]
[150 162]
[151 161]
[152 159]
[153 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
