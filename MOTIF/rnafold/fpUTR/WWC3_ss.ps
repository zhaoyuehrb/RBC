%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:32:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCCGCUGCCCGCCGGCUGGGAGGAGGCGCGAGACUACGACGGUCGCGUCUUUUACAUUGACCACAACACGCGCCAGACGUCGUGGAUCGACCCCCGCGACCGGAUAACAAAGCCAUUGACCUUUGCCGAUUGUGUUGGGGACGAACUUCCUUUAGGAUGGGAAACCGUAUAUGAUAAACAAAUUGGAGUUUAUUAC\
) } def
/len { sequence length } bind def

/coor [
[179.99887085 412.53097534]
[186.34317017 400.64306641]
[180.35771179 386.88900757]
[174.37225342 373.13494873]
[159.46430969 372.66732788]
[146.18313599 365.74487305]
[137.18775940 353.69314575]
[134.30528259 338.87048340]
[138.15998840 324.20663452]
[148.03913879 312.62374878]
[142.05368042 298.86965942]
[136.06822205 285.11560059]
[130.08276367 271.36154175]
[123.98892975 257.65515137]
[117.78709412 243.99729919]
[102.94981384 242.68548584]
[90.67967224 234.06576538]
[84.32953644 220.37117004]
[85.69567871 205.23741150]
[94.51093292 192.73786926]
[88.30909729 179.08000183]
[82.10725403 165.42214966]
[75.90541840 151.76428223]
[69.70358276 138.10641479]
[55.90269852 132.22970581]
[41.75847244 137.22378540]
[27.61424637 142.21786499]
[13.47001839 147.21194458]
[-0.67420942 152.20602417]
[-14.81843662 157.20010376]
[-28.96266365 162.19418335]
[-43.10689163 167.18826294]
[-57.25111771 172.18234253]
[-59.38290405 187.33866882]
[-68.32341003 199.76147461]
[-82.01818085 206.59606934]
[-97.32025909 206.27194214]
[-110.71333313 198.86355591]
[-119.11978149 186.07331848]
[-120.60784912 170.84031677]
[-114.83560181 156.66499329]
[-103.12946320 146.80473328]
[-88.17940521 143.52534485]
[-73.42084503 147.58042908]
[-62.24519730 158.03811646]
[-48.10097122 153.04403687]
[-33.95674515 148.04995728]
[-19.81251717 143.05587769]
[-5.66828918 138.06179810]
[8.47593880 133.06771851]
[22.62016678 128.07363892]
[36.76439285 123.07956696]
[50.90861893 118.08548737]
[52.89737320 110.85396576]
[38.09035873 108.45558167]
[23.28334045 106.05719757]
[8.47632408 103.65880585]
[-6.33069229 101.26042175]
[-21.22252083 103.05859375]
[-33.03954697 93.81965637]
[-34.88733292 78.93389893]
[-25.68782806 67.08615875]
[-10.80831432 65.18877411]
[1.07023680 74.34911346]
[15.02139759 79.85956573]
[28.97255898 85.37002563]
[42.92372131 90.88047791]
[56.87488174 96.39093018]
[58.86363602 89.15940857]
[49.26219177 77.63498688]
[39.66074753 66.11057281]
[30.05930519 54.58614731]
[20.36719322 43.13787460]
[10.58502007 31.76645851]
[-5.24084282 29.13556099]
[-12.92501259 15.05248260]
[-6.57285309 0.32055756]
[8.94280338 -3.75914264]
[21.71967316 5.94297886]
[21.95643425 21.98428535]
[31.73860931 33.35569763]
[38.49058914 36.37924957]
[41.58372498 44.98470306]
[51.18516922 56.50912476]
[60.78661346 68.03354645]
[70.38805389 79.55796814]
[82.99332428 72.97598267]
[95.64653778 72.46459198]
[105.85016632 76.90454102]
[113.92352295 64.26251221]
[121.99687958 51.62048340]
[122.90345001 35.82527161]
[136.27458191 29.26310349]
[144.34794617 16.62107468]
[152.42129517 3.97904611]
[160.49465942 -8.66298199]
[168.36744690 -21.43088341]
[176.03768921 -34.32147598]
[183.70793152 -47.21206665]
[191.37817383 -60.10265732]
[199.04841614 -72.99324799]
[199.45590210 -88.80920410]
[212.61322021 -95.79021454]
[220.28346252 -108.68080139]
[227.95370483 -121.57139587]
[227.85392761 -125.93459320]
[229.03437805 -129.71881104]
[231.15420532 -132.59155273]
[233.79937744 -134.36587524]
[236.53678894 -135.01161194]
[245.00521851 -147.39247131]
[253.47364807 -159.77333069]
[261.94207764 -172.15419006]
[270.41049194 -184.53506470]
[265.07144165 -199.10469055]
[269.34823608 -214.02073669]
[281.59640503 -223.54768372]
[297.10620117 -224.02221680]
[309.91384888 -215.26187134]
[315.09454346 -200.63517761]
[310.65618896 -185.76640320]
[298.30541992 -176.37287903]
[282.79135132 -176.06663513]
[274.32293701 -163.68577576]
[265.85452271 -151.30490112]
[257.38607788 -138.92404175]
[248.91766357 -126.54318237]
[240.84429932 -113.90115356]
[233.17405701 -101.01055908]
[225.50381470 -88.11997223]
[225.64494324 -73.22603607]
[211.93901062 -65.32300568]
[204.26876831 -52.43241501]
[196.59852600 -39.54182053]
[188.92828369 -26.65122986]
[181.25804138 -13.76063919]
[181.54719543 -8.98459053]
[178.83239746 -3.97786355]
[173.13668823 -0.58962357]
[165.06332397 12.05240440]
[156.98997498 24.69443321]
[148.91661072 37.33646011]
[148.58750916 52.22742844]
[134.63891602 59.69384003]
[126.56555176 72.33586884]
[118.49219513 84.97789764]
[123.16483307 118.91091156]
[83.36144257 131.90458679]
[89.56327820 145.56243896]
[95.76512146 159.22030640]
[101.96695709 172.87817383]
[108.16879272 186.53602600]
[123.38137817 188.12487793]
[135.67500305 197.05593872]
[141.80691528 210.84962463]
[140.22180176 225.76081848]
[131.44496155 237.79545593]
[137.64678955 251.45332336]
[144.05061340 257.98114014]
[143.83683777 265.37609863]
[149.82229614 279.13015747]
[155.80775452 292.88421631]
[161.79321289 306.63827515]
[177.00238037 307.30331421]
[190.36015320 314.47668457]
[199.24241638 326.68838501]
[201.93074036 341.48480225]
[197.94462585 355.92156982]
[188.12631226 367.14947510]
[194.11177063 380.90353394]
[200.09722900 394.65759277]
[216.48652649 400.76058960]
[223.26231384 416.51644897]
[216.68286133 431.98904419]
[222.88470459 445.64691162]
[229.08654785 459.30477905]
[235.28837585 472.96264648]
[241.49021912 486.62051392]
[247.69204712 500.27835083]
[253.89389038 513.93621826]
[260.09573364 527.59411621]
[275.32351685 530.57629395]
[285.86547852 541.96258545]
[287.66799927 557.37457275]
[280.03796387 570.88616943]
[265.90930176 577.30175781]
[250.71475220 574.15454102]
[240.29693604 562.65460205]
[238.66171265 547.22393799]
[246.43786621 533.79589844]
[240.23602295 520.13806152]
[234.03419495 506.48019409]
[227.83235168 492.82232666]
[221.63052368 479.16445923]
[215.42868042 465.50662231]
[209.22683716 451.84875488]
[203.02500916 438.19088745]
[190.44163513 435.39175415]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 171]
[3 170]
[4 169]
[10 163]
[11 162]
[12 161]
[13 160]
[14 158]
[15 157]
[20 152]
[21 151]
[22 150]
[23 149]
[24 148]
[25 53]
[26 52]
[27 51]
[28 50]
[29 49]
[30 48]
[31 47]
[32 46]
[33 45]
[69 86]
[70 85]
[71 84]
[72 83]
[73 81]
[74 80]
[89 146]
[90 145]
[91 144]
[93 142]
[94 141]
[95 140]
[96 139]
[97 136]
[98 135]
[99 134]
[100 133]
[101 132]
[103 130]
[104 129]
[105 128]
[110 127]
[111 126]
[112 125]
[113 124]
[114 123]
[174 197]
[175 196]
[176 195]
[177 194]
[178 193]
[179 192]
[180 191]
[181 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
