%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:56:41 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PTPN18)
} def

/sequence { (\
GAGGCAAGGGCGGGGACUCAGUCACCGGCCUCCGCCUCCCGCGGCGUCCACACUCGCCGCGCGCGCGGCGGCCGGGCUGGACCUUGCUGGCCCGCGGCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 38 0.995375999 ubox
2 37 0.999046795 ubox
3 36 0.999646482 ubox
3 39 0.003931955 ubox
3 92 0.014347480 ubox
3 101 0.018726893 ubox
4 35 0.999652027 ubox
4 38 0.003935748 ubox
4 91 0.014409359 ubox
4 98 0.007088593 ubox
4 100 0.018885951 ubox
5 34 0.998415765 ubox
5 90 0.014397494 ubox
5 97 0.007093685 ubox
5 99 0.018864238 ubox
7 31 0.488885140 ubox
8 30 0.503576008 ubox
8 31 0.830002905 ubox
8 32 0.110113017 ubox
8 33 0.016798054 ubox
8 37 0.005530526 ubox
8 93 0.010187674 ubox
9 29 0.503007753 ubox
9 30 0.863225633 ubox
9 31 0.014057761 ubox
9 32 0.012417409 ubox
9 36 0.005735960 ubox
9 88 0.021268357 ubox
9 92 0.010186192 ubox
10 29 0.863765046 ubox
10 30 0.010807722 ubox
10 31 0.003269512 ubox
10 35 0.005747738 ubox
10 87 0.022403471 ubox
10 91 0.010087626 ubox
10 95 0.005710802 ubox
11 27 0.510816609 ubox
11 28 0.858884394 ubox
11 34 0.005757807 ubox
11 86 0.022511928 ubox
11 90 0.009555583 ubox
11 94 0.005712069 ubox
12 26 0.518682202 ubox
12 33 0.005754199 ubox
12 85 0.022857587 ubox
12 88 0.004206611 ubox
12 93 0.005694792 ubox
13 25 0.516138890 ubox
13 26 0.854003522 ubox
13 32 0.005748757 ubox
13 84 0.022941744 ubox
13 87 0.004435396 ubox
13 88 0.007374170 ubox
13 92 0.005683900 ubox
14 23 0.067295789 ubox
14 25 0.853945347 ubox
14 26 0.004816579 ubox
14 31 0.005055315 ubox
14 83 0.023077399 ubox
14 87 0.007146411 ubox
14 91 0.005607451 ubox
15 22 0.052304710 ubox
15 23 0.981741911 ubox
15 25 0.004929397 ubox
15 30 0.005044643 ubox
15 82 0.023067495 ubox
15 85 0.005083625 ubox
16 22 0.990562971 ubox
16 84 0.005213306 ubox
17 21 0.980928837 ubox
17 28 0.005371128 ubox
17 80 0.017241782 ubox
18 27 0.005145911 ubox
18 80 0.016764776 ubox
19 79 0.024969068 ubox
20 78 0.025162390 ubox
21 77 0.025165234 ubox
22 76 0.024243222 ubox
23 75 0.008110392 ubox
25 75 0.023870715 ubox
26 74 0.025235432 ubox
27 73 0.025298421 ubox
28 72 0.025299240 ubox
29 71 0.025299061 ubox
30 70 0.025288958 ubox
32 68 0.025290220 ubox
33 67 0.025312869 ubox
34 66 0.025312835 ubox
35 65 0.025281926 ubox
40 61 0.959379189 ubox
41 60 0.999474596 ubox
41 62 0.004941673 ubox
41 100 0.004611771 ubox
42 59 0.999560528 ubox
42 61 0.004585940 ubox
42 99 0.004620225 ubox
43 58 0.999599824 ubox
43 98 0.004611540 ubox
43 101 0.026687020 ubox
44 57 0.999619084 ubox
44 100 0.026882967 ubox
45 56 0.999599526 ubox
45 96 0.004604287 ubox
45 99 0.026883491 ubox
46 53 0.026283444 ubox
46 55 0.997567616 ubox
46 95 0.004453609 ubox
46 98 0.026872060 ubox
47 52 0.030647301 ubox
47 97 0.023421088 ubox
48 96 0.023148355 ubox
48 97 0.013134378 ubox
49 96 0.013203800 ubox
53 71 0.005183660 ubox
54 71 0.012488281 ubox
55 70 0.027095913 ubox
56 69 0.027333283 ubox
57 68 0.027334178 ubox
58 67 0.027333745 ubox
59 66 0.027332843 ubox
59 100 0.007862868 ubox
60 65 0.027293734 ubox
60 99 0.008269993 ubox
61 98 0.013636754 ubox
61 100 0.099389914 ubox
62 96 0.009625683 ubox
62 97 0.013537738 ubox
62 99 0.102204194 ubox
63 95 0.010042095 ubox
63 98 0.102121283 ubox
63 100 0.989584625 ubox
64 94 0.010045151 ubox
64 96 0.060805179 ubox
64 97 0.083250191 ubox
64 99 0.991555711 ubox
65 72 0.003712365 ubox
65 93 0.010040307 ubox
65 95 0.084783791 ubox
65 98 0.991626010 ubox
65 100 0.060920875 ubox
66 71 0.003720150 ubox
66 94 0.084914315 ubox
66 96 0.058388414 ubox
66 97 0.991145480 ubox
66 99 0.061017906 ubox
67 92 0.018518904 ubox
67 93 0.082735352 ubox
67 95 0.056983408 ubox
67 98 0.056958959 ubox
67 101 0.026197771 ubox
68 91 0.024149738 ubox
68 92 0.062553617 ubox
68 95 0.991141872 ubox
68 98 0.023469506 ubox
68 100 0.026391143 ubox
69 89 0.035931902 ubox
69 90 0.021470676 ubox
69 94 0.991244521 ubox
69 96 0.054095584 ubox
69 97 0.032157765 ubox
69 99 0.026367108 ubox
70 88 0.041564030 ubox
70 92 0.575199147 ubox
70 93 0.808785384 ubox
70 95 0.049048069 ubox
70 98 0.022323615 ubox
71 87 0.042806166 ubox
71 91 0.811662205 ubox
71 92 0.573077436 ubox
71 95 0.045085139 ubox
71 98 0.014189116 ubox
72 86 0.042754682 ubox
72 90 0.991865571 ubox
72 94 0.035181495 ubox
72 97 0.019843341 ubox
73 86 0.003228723 ubox
73 89 0.990327699 ubox
73 94 0.067390193 ubox
73 96 0.018211025 ubox
74 83 0.038606202 ubox
74 84 0.061924979 ubox
74 85 0.007671147 ubox
74 88 0.824728316 ubox
74 93 0.096813350 ubox
74 95 0.008451647 ubox
75 82 0.038969071 ubox
75 83 0.068193879 ubox
75 84 0.011268243 ubox
75 87 0.628079884 ubox
75 88 0.539304817 ubox
75 92 0.100908766 ubox
75 93 0.003263848 ubox
76 82 0.069657818 ubox
76 83 0.022233638 ubox
76 84 0.007473502 ubox
76 87 0.766281936 ubox
76 91 0.104566258 ubox
77 86 0.934230763 ubox
77 90 0.104625034 ubox
78 86 0.015432855 ubox
78 89 0.104207583 ubox
79 85 0.046958898 ubox
79 88 0.104177706 ubox
80 84 0.037919479 ubox
80 87 0.104209129 ubox
82 90 0.005272539 ubox
83 89 0.005316930 ubox
90 98 0.016881669 ubox
91 97 0.016911794 ubox
92 96 0.016789333 ubox
94 100 0.006303919 ubox
95 99 0.006270612 ubox
1 38 0.9500000 lbox
2 37 0.9500000 lbox
3 36 0.9500000 lbox
4 35 0.9500000 lbox
5 34 0.9500000 lbox
8 31 0.9500000 lbox
9 30 0.9500000 lbox
10 29 0.9500000 lbox
11 28 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 23 0.9500000 lbox
16 22 0.9500000 lbox
17 21 0.9500000 lbox
40 61 0.9500000 lbox
41 60 0.9500000 lbox
42 59 0.9500000 lbox
43 58 0.9500000 lbox
44 57 0.9500000 lbox
45 56 0.9500000 lbox
46 55 0.9500000 lbox
63 100 0.9500000 lbox
64 99 0.9500000 lbox
65 98 0.9500000 lbox
66 97 0.9500000 lbox
68 95 0.9500000 lbox
69 94 0.9500000 lbox
70 93 0.9500000 lbox
71 92 0.9500000 lbox
72 90 0.9500000 lbox
73 89 0.9500000 lbox
74 88 0.9500000 lbox
76 87 0.9500000 lbox
77 86 0.9500000 lbox
showpage
end
%%EOF
