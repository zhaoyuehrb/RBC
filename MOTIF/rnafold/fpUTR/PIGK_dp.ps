%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:16:18 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PIGK)
} def

/sequence { (\
ACUGCCUCCGCCCCUUCAGGUGCGGGAAGUCUGAAGCCGGUAAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 30 0.452919650 ubox
1 41 0.309930261 ubox
2 25 0.021344501 ubox
2 26 0.005512181 ubox
2 29 0.520848662 ubox
2 36 0.038376267 ubox
2 40 0.328153280 ubox
3 10 0.003717735 ubox
3 24 0.021410487 ubox
3 28 0.487899173 ubox
3 33 0.008410484 ubox
3 35 0.038306765 ubox
3 39 0.327335555 ubox
3 42 0.563906236 ubox
4 9 0.011145915 ubox
4 11 0.026723624 ubox
4 21 0.004374508 ubox
4 23 0.021499735 ubox
4 30 0.162168222 ubox
4 32 0.005013013 ubox
4 37 0.111997445 ubox
4 38 0.305836053 ubox
4 41 0.602610579 ubox
5 10 0.026874946 ubox
5 20 0.004655563 ubox
5 22 0.021180359 ubox
5 25 0.022548678 ubox
5 26 0.402688277 ubox
5 29 0.173145846 ubox
5 36 0.151986400 ubox
5 40 0.604599704 ubox
6 19 0.004671455 ubox
6 24 0.022561893 ubox
6 25 0.398857905 ubox
6 26 0.264617707 ubox
6 29 0.093760261 ubox
6 36 0.260783289 ubox
6 39 0.603523106 ubox
6 40 0.007566387 ubox
7 18 0.004454229 ubox
7 24 0.376305949 ubox
7 25 0.097013686 ubox
7 26 0.695415189 ubox
7 27 0.150206447 ubox
7 28 0.075618322 ubox
7 34 0.039011502 ubox
7 35 0.221155985 ubox
7 39 0.006565295 ubox
7 40 0.005115341 ubox
8 20 0.017254416 ubox
8 24 0.125653607 ubox
8 25 0.844175761 ubox
8 26 0.127805140 ubox
8 33 0.027785577 ubox
8 39 0.007013301 ubox
8 40 0.237301446 ubox
9 19 0.017263540 ubox
9 22 0.402332898 ubox
9 24 0.853287865 ubox
9 25 0.090820518 ubox
9 33 0.010705815 ubox
9 39 0.240090754 ubox
10 21 0.403960378 ubox
10 23 0.859347083 ubox
10 30 0.009509578 ubox
10 32 0.009151052 ubox
10 37 0.088093019 ubox
10 38 0.242476583 ubox
10 41 0.158183738 ubox
11 20 0.403956284 ubox
11 22 0.858865483 ubox
11 26 0.005299163 ubox
11 29 0.009690047 ubox
11 36 0.079386812 ubox
11 40 0.163058010 ubox
12 19 0.402967543 ubox
12 20 0.606486149 ubox
12 25 0.005309959 ubox
12 26 0.011585347 ubox
12 39 0.162700077 ubox
12 40 0.037517713 ubox
13 19 0.605111983 ubox
13 20 0.607265955 ubox
13 24 0.005267604 ubox
13 25 0.011630468 ubox
13 26 0.004305966 ubox
13 39 0.037982498 ubox
13 40 0.004849263 ubox
14 19 0.606664179 ubox
14 20 0.022344712 ubox
14 24 0.011622219 ubox
14 25 0.004314263 ubox
14 29 0.012540945 ubox
14 36 0.300600890 ubox
14 39 0.004525711 ubox
15 19 0.020556108 ubox
15 24 0.004247354 ubox
15 28 0.012597337 ubox
15 35 0.310766155 ubox
16 27 0.012604634 ubox
16 34 0.311558653 ubox
17 26 0.012599361 ubox
17 33 0.311715751 ubox
18 32 0.311329282 ubox
19 31 0.309275598 ubox
19 32 0.013022207 ubox
19 38 0.012680834 ubox
20 30 0.195213522 ubox
20 31 0.026222872 ubox
20 37 0.012698695 ubox
21 29 0.122759745 ubox
21 36 0.012663201 ubox
22 30 0.209491684 ubox
22 41 0.004237896 ubox
23 29 0.236738928 ubox
23 33 0.021699791 ubox
23 39 0.012205164 ubox
23 40 0.004694382 ubox
24 31 0.005265917 ubox
24 32 0.022151888 ubox
24 38 0.018583349 ubox
25 30 0.006668024 ubox
25 31 0.023079828 ubox
25 32 0.017449922 ubox
25 37 0.018837619 ubox
25 38 0.039214141 ubox
26 30 0.017011572 ubox
26 31 0.067854746 ubox
26 37 0.045527169 ubox
29 37 0.259917208 ubox
29 41 0.077477511 ubox
29 45 0.053125185 ubox
30 36 0.254685834 ubox
30 40 0.031035152 ubox
30 44 0.053413066 ubox
31 39 0.050242419 ubox
31 40 0.485407114 ubox
32 39 0.490350884 ubox
32 42 0.017391353 ubox
33 38 0.512006111 ubox
33 41 0.017570241 ubox
3 42 0.9500000 lbox
4 41 0.9500000 lbox
5 40 0.9500000 lbox
6 39 0.9500000 lbox
7 26 0.9500000 lbox
8 25 0.9500000 lbox
9 24 0.9500000 lbox
10 23 0.9500000 lbox
11 22 0.9500000 lbox
12 20 0.9500000 lbox
13 19 0.9500000 lbox
showpage
end
%%EOF
