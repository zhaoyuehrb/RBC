%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:23:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUUCCGGGUCAGGUGACCGCGCGCGGUCACGUGACCCGGCCCGAGUGCGGGCGGUGGAAGGCGGAAGUAGGAGAGGAGUUCGGCGCCGCUUCUGUGGCCACGGCAGAUGAAACAGAAAGGCUAAAGAGGGCUGGAGUCAGGGGACUUCUCUUCCACCAGCUUCACGGUGAUGAU\
) } def
/len { sequence length } bind def

/coor [
[169.14125061 89.04632568]
[176.36105347 75.89662933]
[162.64706421 81.97334290]
[148.93307495 88.05006409]
[135.21908569 94.12677765]
[121.50509644 100.20349884]
[107.79110718 106.28022003]
[95.21830750 114.46096039]
[84.10683441 124.53742981]
[72.99536133 134.61389160]
[61.88388443 144.69036865]
[50.77241135 154.76683044]
[39.66093826 164.84329224]
[34.63589859 179.84527588]
[20.01034164 182.66348267]
[8.89886856 192.73995972]
[-2.21260405 202.81642151]
[-13.32407665 212.89288330]
[-24.43554878 222.96934509]
[-35.54702377 233.04582214]
[-46.65849686 243.12228394]
[-51.15279388 258.89355469]
[-67.12199402 262.62405396]
[-78.13835907 250.47615051]
[-72.86919403 234.94656372]
[-56.73496246 232.01081848]
[-45.62348938 221.93434143]
[-34.51201630 211.85787964]
[-23.40054321 201.78141785]
[-12.28907013 191.70494080]
[-1.17759752 181.62847900]
[9.93387508 171.55201721]
[14.16414833 157.27076721]
[29.58447456 153.73182678]
[40.69594574 143.65534973]
[51.80741882 133.57888794]
[62.91889191 123.50242615]
[74.03036499 113.42595673]
[85.14183807 103.34948730]
[82.84954834 96.20838165]
[75.97267151 74.78506470]
[61.07238388 73.05836487]
[46.17209625 71.33166504]
[31.27181244 69.60495758]
[16.37152672 67.87825775]
[1.54297614 74.88155365]
[-11.78038311 65.32015991]
[-9.89262009 49.03002930]
[5.26429558 42.76904678]
[18.09823036 52.97797394]
[32.99851608 54.70467377]
[47.89879990 56.43137741]
[62.79908371 58.15807724]
[77.69937134 59.88478088]
[88.43856812 65.55861664]
[96.25594330 73.50016022]
[100.74179077 82.82004547]
[101.71438599 92.56623077]
[115.42837524 86.48950958]
[129.14236450 80.41278839]
[142.85635376 74.33607483]
[156.57034302 68.25935364]
[170.28433228 62.18263626]
[183.40577698 54.91437531]
[195.83140564 46.51177216]
[208.18197632 37.99922943]
[220.45652771 29.37741852]
[232.73106384 20.75560760]
[245.00559998 12.13379574]
[257.28015137 3.51198506]
[265.13244629 -17.45919228]
[286.72918701 -18.70835876]
[298.36120605 -28.17916679]
[309.99322510 -37.64997482]
[321.62524414 -47.12078476]
[333.25726318 -56.59159088]
[344.88928223 -66.06240082]
[356.52127075 -75.53321075]
[368.15328979 -85.00401306]
[379.78530884 -94.47482300]
[391.41732788 -103.94563293]
[403.04934692 -113.41644287]
[414.68136597 -122.88724518]
[426.05712891 -132.66435242]
[437.16860962 -142.74081421]
[448.28009033 -152.81727600]
[453.30511475 -167.81927490]
[467.93069458 -170.63748169]
[479.04214478 -180.71394348]
[490.06378174 -190.88862610]
[500.99465942 -201.16070557]
[511.92553711 -211.43280029]
[522.76483154 -221.80148315]
[533.51165771 -232.26596069]
[544.25854492 -242.73042297]
[548.74798584 -257.90130615]
[563.26428223 -261.23681641]
[574.01116943 -271.70129395]
[584.75799561 -282.16574097]
[595.50482178 -292.63021851]
[606.25170898 -303.09469604]
[599.35296631 -316.54455566]
[596.72674561 -331.43060303]
[598.60662842 -346.42919922]
[604.82537842 -360.20663452]
[614.83007812 -371.53790283]
[627.73114014 -379.41537476]
[642.38134766 -383.13858032]
[657.47802734 -382.37652588]
[671.67889404 -377.19689941]
[683.72106934 -368.06033325]
[692.53381348 -355.77917480]
[697.33355713 -341.44552612]
[697.69348145 -326.33389282]
[693.58160400 -311.78796387]
[685.36346436 -299.10119629]
[673.76989746 -289.40167236]
[659.83178711 -283.55187988]
[644.78845215 -282.07196045]
[629.97760010 -285.09350586]
[616.71618652 -292.34783936]
[605.96929932 -281.88339233]
[595.22247314 -271.41891479]
[584.47564697 -260.95443726]
[573.72875977 -250.48995972]
[570.00799561 -236.06756592]
[554.72302246 -231.98358154]
[543.97613525 -221.51910400]
[533.22930908 -211.05462646]
[530.62243652 -204.11381531]
[522.19763184 -200.50190735]
[511.26675415 -190.22982788]
[500.33584595 -179.95773315]
[497.60620117 -173.06428528]
[489.11862183 -169.60246277]
[478.00714111 -159.52600098]
[473.77688599 -145.24475098]
[458.35653687 -141.70581055]
[447.24508667 -131.62934875]
[436.13360596 -121.55287933]
[435.60617065 -118.03677368]
[433.33041382 -114.60675812]
[429.36810303 -112.09047699]
[424.15216064 -111.25523376]
[412.52014160 -101.78442383]
[400.88815308 -92.31361389]
[389.25613403 -82.84281158]
[377.62411499 -73.37200165]
[365.99209595 -63.90119171]
[354.36007690 -54.43038177]
[342.72805786 -44.95957565]
[331.09603882 -35.48876572]
[319.46401978 -26.01795959]
[307.83200073 -16.54715157]
[296.19998169 -7.07634306]
[297.09216309 0.81975287]
[294.74603271 8.51036644]
[289.47631836 14.70742226]
[282.09371948 18.34217072]
[273.78060913 18.74910164]
[265.90194702 15.78652668]
[253.62742615 24.40833855]
[241.35287476 33.03014755]
[229.07833862 41.65195847]
[216.80378723 50.27376938]
[213.12608337 56.71156311]
[204.23400879 58.93740082]
[191.80838013 67.34000397]
[206.78405762 68.19397736]
[219.39054871 76.32270813]
[226.34823608 89.61145020]
[225.84701538 104.60307312]
[218.01730347 117.39743042]
[204.89602661 124.66600037]
[189.89675903 124.51782990]
[176.92164612 116.99146271]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 63]
[3 62]
[4 61]
[5 60]
[6 59]
[7 58]
[8 39]
[9 38]
[10 37]
[11 36]
[12 35]
[13 34]
[15 32]
[16 31]
[17 30]
[18 29]
[19 28]
[20 27]
[21 26]
[41 54]
[42 53]
[43 52]
[44 51]
[45 50]
[64 168]
[65 167]
[66 165]
[67 164]
[68 163]
[69 162]
[70 161]
[72 155]
[73 154]
[74 153]
[75 152]
[76 151]
[77 150]
[78 149]
[79 148]
[80 147]
[81 146]
[82 145]
[83 144]
[84 140]
[85 139]
[86 138]
[88 136]
[89 135]
[90 133]
[91 132]
[92 131]
[93 129]
[94 128]
[95 127]
[97 125]
[98 124]
[99 123]
[100 122]
[101 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
