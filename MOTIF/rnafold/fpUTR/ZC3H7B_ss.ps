%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:27:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGAGGAGGAAGAGCUGCAGGGAGACAGUGCCUCCAGCGGGUGCUGCCGCGAGCGGCCAGCCGAGGGGCUGGAAAUGAAAGUAAAGCGCUCCAGAGCCACAUGGACGGAGCUGCCGGGGCGGCGGCGCCGGGAGCAGGAUGCGGCCGCCCGUAAUUAAAUAGCAUUUACUCUUAUUAUUACUAAUAAUAAUAACGUAAUCAUACCUCUAGUCAUAGCAUACCAUUUAUCGGGCUCGGCGCAGGCCCGCGGGGAG\
CGCAGCCCGGCGGAGAGACUG\
) } def
/len { sequence length } bind def

/coor [
[87.06203461 760.35821533]
[76.30825043 762.16162109]
[74.27307892 777.02294922]
[82.78886414 790.61926270]
[77.33258820 805.70599365]
[62.08984375 810.70977783]
[48.75355530 801.79223633]
[47.55418396 785.79406738]
[59.41178131 774.98773193]
[61.44695282 760.12646484]
[45.03656006 750.36804199]
[34.55939484 734.34753418]
[32.18524933 715.30303955]
[38.44084549 697.10668945]
[52.09377670 683.47766113]
[70.39503479 677.22186279]
[71.58464050 662.26910400]
[72.77424622 647.31634521]
[73.96385193 632.36358643]
[67.26028442 619.06280518]
[76.06766510 605.91967773]
[77.25727081 590.96691895]
[78.44687653 576.01422119]
[69.98133087 570.32702637]
[64.58084106 561.58093262]
[63.26769638 551.30493164]
[66.34271240 541.32788086]
[73.31966400 533.45343018]
[83.00085449 529.13372803]
[84.69843292 514.23010254]
[86.39601135 499.32644653]
[88.09358978 484.42282104]
[89.70662689 469.50979614]
[91.23506927 454.58786011]
[92.76351166 439.66595459]
[94.29196167 424.74401855]
[91.85685730 417.79693604]
[95.92328644 409.66186523]
[97.62087250 394.75823975]
[99.31845093 379.85461426]
[101.01602936 364.95095825]
[102.71360779 350.04733276]
[104.41118622 335.14370728]
[102.05503082 328.16946411]
[106.21346283 320.08102417]
[108.07995605 305.19760132]
[109.94644928 290.31417847]
[111.81294250 275.43075562]
[102.49894714 263.86422729]
[104.17981720 248.74372864]
[116.37502289 239.05276489]
[118.24152374 224.16934204]
[120.10801697 209.28593445]
[121.97451019 194.40251160]
[123.84101105 179.51908875]
[78.27046204 166.66258240]
[54.42934418 134.59298706]
[55.72894287 101.90103149]
[40.78317261 103.17541504]
[25.83740616 104.44979095]
[10.89163971 105.72417450]
[-4.05412722 106.99855042]
[-18.99989510 108.27292633]
[-32.13729858 118.08825684]
[-47.09752655 111.37084198]
[-48.49077606 95.03098297]
[-34.88379288 85.87773132]
[-20.27427483 93.32716370]
[-5.32850695 92.05278015]
[9.61725998 90.77840424]
[24.56302834 89.50402069]
[39.50879288 88.22964478]
[54.45456314 86.95526886]
[58.69618225 80.76990509]
[43.73516083 81.85061646]
[33.56207657 70.82752991]
[35.83730316 56.00109100]
[48.84758377 48.53566742]
[62.79612350 54.05275726]
[67.17942047 68.39918518]
[71.42103577 62.21382523]
[67.22473145 47.81274796]
[63.02843475 33.41167068]
[58.83213425 19.01059151]
[54.63583374 4.60951376]
[50.43952942 -9.79156494]
[46.16163254 -24.16861534]
[41.80227661 -38.52117538]
[33.60180283 -51.08112335]
[22.21506882 -60.84546280]
[10.82833767 -70.60980225]
[-0.55839437 -80.37413788]
[-11.94512653 -90.13848114]
[-23.34936333 -86.94745636]
[-34.76503754 -89.61257935]
[-43.39936066 -97.36362457]
[-47.19706726 -108.20088959]
[-45.32895660 -119.41007996]
[-56.49129105 -129.43017578]
[-72.64017487 -132.28421021]
[-77.98788452 -147.78692627]
[-67.03315735 -159.99044800]
[-51.04527664 -156.34083557]
[-46.47120285 -140.59251404]
[-35.30886459 -130.57241821]
[-17.09114838 -132.63357544]
[-2.93463874 -120.48522186]
[-2.18078661 -101.52521515]
[9.20594597 -91.76087189]
[20.59267807 -81.99653625]
[31.97941017 -72.23219299]
[43.36614227 -62.46785355]
[50.03122711 -65.90684509]
[39.37076187 -76.45930481]
[46.11265564 -89.85881805]
[60.93967819 -87.58738708]
[63.36139297 -72.78482056]
[70.02648163 -76.22381592]
[68.66736603 -91.16210938]
[67.30825806 -106.10041046]
[65.94914246 -121.03871155]
[64.59002686 -135.97702026]
[63.23091888 -150.91531372]
[61.87180710 -165.85360718]
[52.91593170 -178.89596558]
[59.46821976 -192.27194214]
[58.10910797 -207.21023560]
[56.74999619 -222.14854431]
[55.30619431 -237.07890320]
[53.77775192 -252.00082397]
[40.73608780 -260.62921143]
[36.34140015 -275.63656616]
[42.66872787 -289.93688965]
[56.73049545 -296.77798462]
[71.88716888 -292.92971802]
[80.98223114 -280.20910645]
[79.72127533 -264.62243652]
[68.69967651 -253.52926636]
[70.22811890 -238.60734558]
[74.02104950 -232.29818726]
[71.68829346 -223.50765991]
[73.04740906 -208.56935120]
[74.40652466 -193.63105774]
[83.26518250 -181.65719604]
[76.81010437 -167.21272278]
[78.16921997 -152.27442932]
[79.52832794 -137.33612061]
[80.88744354 -122.39782715]
[82.24655151 -107.45952606]
[83.60566711 -92.52122498]
[84.96478271 -77.58292389]
[90.93384552 -91.34410858]
[105.87302399 -89.99464417]
[118.99876404 -82.73414612]
[128.08093262 -70.79621124]
[131.57638550 -56.20916748]
[128.89125061 -41.45145798]
[120.48174286 -29.03050232]
[107.77668762 -21.05670547]
[92.93474579 -18.88486290]
[78.47767639 -22.88398743]
[66.86151886 -32.37496567]
[56.15483856 -42.88053513]
[60.51419449 -28.52797318]
[65.44575500 -23.06250572]
[64.84060669 -13.98786545]
[69.03691101 0.41321263]
[73.23320770 14.81429100]
[77.42951202 29.21537018]
[81.62581635 43.61644745]
[85.82211304 58.01752472]
[108.41250610 36.89426422]
[146.23780823 31.05260086]
[159.02519226 23.21149635]
[171.81256104 15.37039089]
[184.59994507 7.52928686]
[197.38732910 -0.31181785]
[210.17471313 -8.15292263]
[222.96208191 -15.99402714]
[235.74946594 -23.83513069]
[248.53684998 -31.67623520]
[255.87791443 -46.34050751]
[272.26193237 -47.04486084]
[280.83441162 -33.06471634]
[272.77673340 -18.78165245]
[256.37796021 -18.88885689]
[243.59057617 -11.04775143]
[230.80319214 -3.20664716]
[218.01580811 4.63445759]
[205.22843933 12.47556210]
[192.44105530 20.31666565]
[179.65367126 28.15777016]
[166.86628723 35.99887466]
[154.07891846 43.83998108]
[156.70170593 50.86642838]
[164.57008362 71.94577026]
[179.36770630 69.49009705]
[194.16532898 67.03442383]
[206.48292542 56.20812988]
[221.92877197 61.71793365]
[224.61351013 77.89582825]
[211.77529907 88.09938049]
[196.62100220 81.83205414]
[181.82337952 84.28771973]
[167.02575684 86.74339294]
[167.23837280 94.24037933]
[167.66362000 109.23435211]
[167.87625122 116.73133087]
[182.78927612 118.34436798]
[197.70228577 119.95740509]
[212.47700500 112.84125519]
[225.87287903 122.30077362]
[224.10939026 138.60482788]
[209.00065613 144.98120117]
[196.08924866 134.87042236]
[181.17623901 133.25738525]
[166.26321411 131.64434814]
[164.24685669 138.86822510]
[178.69454956 142.90115356]
[174.66139221 157.34877014]
[160.21415710 153.31596375]
[158.19779968 160.53984070]
[171.79042053 166.88339233]
[185.88760376 160.11557007]
[201.02404785 164.04267883]
[210.05278015 176.81044006]
[208.71072388 192.39033508]
[197.63154602 203.42597961]
[182.04649353 204.70671082]
[169.31436157 195.62779236]
[165.44686890 180.47601318]
[151.85424805 174.13246155]
[138.72442627 181.38558960]
[136.85792542 196.26899719]
[134.99143982 211.15242004]
[133.12493896 226.03584290]
[131.25845337 240.91926575]
[140.68299866 253.32150269]
[138.57809448 268.38882446]
[126.69636536 277.29727173]
[124.82987213 292.18066406]
[122.96337891 307.06408691]
[121.09687805 321.94750977]
[119.31481171 336.84127808]
[117.61723328 351.74490356]
[115.91965485 366.64855957]
[114.22207642 381.55218506]
[112.52449799 396.45581055]
[110.82691956 411.35943604]
[109.21388245 426.27246094]
[107.68544006 441.19439697]
[106.15699768 456.11630249]
[104.62855530 471.03823853]
[106.86145782 479.85467529]
[102.99722290 486.12039185]
[101.29964447 501.02401733]
[99.60206604 515.92767334]
[97.90448761 530.83129883]
[111.21974945 545.92462158]
[109.11172485 565.63244629]
[93.39963531 577.20379639]
[92.21002960 592.15655518]
[91.02042389 607.10931396]
[97.63890076 621.47961426]
[88.91661072 633.55322266]
[87.72700500 648.50592041]
[86.53739929 663.45867920]
[85.34779358 678.41143799]
[95.57734680 682.61285400]
[104.38017273 689.28100586]
[111.17577362 697.96612549]
[115.51855469 708.08599854]
[117.12703705 718.96453857]
[115.90211487 729.87738037]
[111.93309784 740.09973145]
[105.49124908 748.95489502]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 10]
[3 9]
[16 268]
[17 267]
[18 266]
[19 265]
[21 263]
[22 262]
[23 261]
[29 258]
[30 257]
[31 256]
[32 255]
[33 253]
[34 252]
[35 251]
[36 250]
[38 249]
[39 248]
[40 247]
[41 246]
[42 245]
[43 244]
[45 243]
[46 242]
[47 241]
[48 240]
[51 237]
[52 236]
[53 235]
[54 234]
[55 233]
[58 73]
[59 72]
[60 71]
[61 70]
[62 69]
[63 68]
[81 171]
[82 170]
[83 169]
[84 168]
[85 167]
[86 166]
[87 164]
[88 163]
[89 112]
[90 111]
[91 110]
[92 109]
[93 108]
[98 105]
[99 104]
[118 151]
[119 150]
[120 149]
[121 148]
[122 147]
[123 146]
[124 145]
[126 143]
[127 142]
[128 141]
[129 139]
[130 138]
[173 194]
[174 193]
[175 192]
[176 191]
[177 190]
[178 189]
[179 188]
[180 187]
[181 186]
[196 205]
[197 204]
[198 203]
[208 217]
[209 216]
[210 215]
[222 232]
[223 231]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
