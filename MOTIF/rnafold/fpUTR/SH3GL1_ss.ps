%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:55:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAGCGUGCGGUUGCCAUGUAAUAUCCUGGCCGCGCGGGCGCGCGAGCGGCUGAGGCGGCGCCGGGGCGGGCGCGGAGCUGGCAAGCGGGUGGCGGAGGCGGCGCCGACGGGGACUGCUGAGGCGCGCAGAGGGUCGGCGGCGCCCGGGAGCCUGUCGCUGGCGCGGUCCGGGCGGGAGGCUCGGCGGCGGGCGGCAGC\
) } def
/len { sequence length } bind def

/coor [
[142.92250061 294.18399048]
[143.75730896 309.42425537]
[137.88900757 323.51416016]
[126.48275757 333.65618896]
[111.80328369 337.83657837]
[96.76519012 335.22531128]
[84.35431671 326.34091187]
[77.03484344 312.94732666]
[76.26005554 297.70388794]
[82.18379211 283.63717651]
[93.62989044 273.54016113]
[108.32571411 269.41763306]
[110.89195251 254.63876343]
[113.45818329 239.85990906]
[116.02441406 225.08106995]
[118.59064484 210.30221558]
[121.15688324 195.52336121]
[112.03937531 207.43432617]
[97.80462646 212.16423035]
[83.37178040 208.07855225]
[73.72841644 196.58917236]
[72.20702362 181.66653442]
[79.33335876 168.46746826]
[92.64474487 161.55320740]
[107.54114532 163.31314087]
[118.87495422 173.13937378]
[113.37924957 159.18240356]
[107.88355255 145.22541809]
[102.38784790 131.26843262]
[96.89215088 117.31145477]
[83.96077728 109.71016693]
[69.09295654 111.69711304]
[54.22513580 113.68405914]
[39.35731888 115.67100525]
[24.48949814 117.65794373]
[10.17230797 129.23214722]
[-5.78151226 121.92996216]
[-20.61646080 124.14903259]
[-35.45140839 126.36811066]
[-47.95508957 136.06184387]
[-61.68696213 130.29252625]
[-76.52191162 132.51161194]
[-91.35685730 134.73068237]
[-103.84576416 145.35891724]
[-119.20166016 139.60317993]
[-121.62771606 123.38447571]
[-108.62821960 113.38722229]
[-93.57593536 119.89572906]
[-78.74098206 117.67665863]
[-63.90603638 115.45758057]
[-52.46345139 105.92256927]
[-37.67048264 111.53315735]
[-22.83553505 109.31408691]
[-8.00058556 107.09501648]
[-0.55263937 97.55680847]
[11.79431820 95.59061432]
[22.50255394 102.79013062]
[37.37037277 100.80318451]
[52.23819351 98.81623840]
[67.10601044 96.82929230]
[81.97383118 94.84235382]
[87.03084564 80.71979523]
[92.08742523 66.59849548]
[81.86030579 55.62552643]
[71.63318634 44.65255737]
[54.14609146 44.36007309]
[42.50711060 31.76165199]
[43.55601501 14.98023415]
[33.15864944 4.16844559]
[18.01601410 -0.41535404]
[14.77094364 -14.95216179]
[4.37357664 -25.76395035]
[-6.02378988 -36.57573700]
[-21.97113800 -38.32549286]
[-30.42401123 -51.96105194]
[-24.89808846 -67.02238464]
[-9.63238525 -71.95572662]
[3.66255832 -62.97663498]
[4.78799820 -46.97310638]
[15.18536472 -36.16131592]
[25.58273125 -25.34952927]
[39.98167419 -21.53906059]
[43.97043610 -6.22892094]
[54.36780167 4.58286715]
[67.16388702 3.03018999]
[78.68867493 9.22579384]
[84.62589264 21.10380936]
[82.60616302 34.42544174]
[92.83327484 45.39841080]
[103.06039429 56.37137985]
[110.55673218 56.13697052]
[106.84231567 41.60414124]
[101.12621307 27.73597145]
[109.27475739 15.14227390]
[124.26742554 14.67337322]
[133.18701172 26.73325920]
[128.34857178 40.93164444]
[125.54940033 55.66815186]
[133.04573059 55.43374252]
[142.56730652 43.84323502]
[152.08886719 32.25272751]
[161.61042786 20.66222191]
[164.39175415 5.08740902]
[178.44926453 0.16445167]
[187.97082520 -11.42605591]
[197.49238586 -23.01656342]
[207.01394653 -34.60707092]
[216.53552246 -46.19757843]
[226.05708313 -57.78808594]
[235.57864380 -69.37859344]
[230.85838318 -80.96385193]
[231.51118469 -93.38446045]
[237.35165405 -104.28378296]
[247.21600342 -111.62003326]
[259.19338989 -114.04862976]
[270.99594116 -111.16835785]
[280.87509155 -122.45561218]
[290.75427246 -133.74285889]
[300.63342285 -145.03012085]
[297.06289673 -160.13081360]
[303.08126831 -174.43321228]
[316.37435913 -182.43777466]
[331.83074951 -181.06655884]
[343.50708008 -170.84684753]
[346.91360474 -155.70831299]
[340.74041748 -141.47203064]
[327.36126709 -133.61215210]
[311.92068481 -135.15095520]
[302.04153442 -123.86370087]
[292.16235352 -112.57644653]
[282.28320312 -101.28919220]
[286.99603271 -84.27637482]
[280.50149536 -67.69200134]
[265.22171021 -58.23833847]
[247.16914368 -59.85703278]
[237.64758301 -48.26652527]
[228.12602234 -36.67601776]
[218.60446167 -25.08551025]
[209.08290100 -13.49500179]
[199.56134033 -1.90449429]
[190.03977966 9.68601322]
[187.93949890 24.43179512]
[173.20092773 30.18378258]
[163.67936707 41.77429199]
[154.15780640 53.36479950]
[144.63624573 64.95530701]
[110.84912872 111.81575775]
[116.34482574 125.77273560]
[121.84053040 139.72972107]
[127.33622742 153.68669128]
[132.83192444 167.64367676]
[159.62956238 181.40684509]
[171.14530945 191.01869202]
[182.66104126 200.63053894]
[194.17678833 210.24238586]
[205.69253540 219.85424805]
[217.20828247 229.46609497]
[228.72402954 239.07794189]
[240.23976135 248.68978882]
[251.75550842 258.30163574]
[263.27127075 267.91348267]
[274.78698730 277.52532959]
[286.30273438 287.13717651]
[294.90380859 290.23733521]
[297.92184448 296.99035645]
[309.28594971 306.78100586]
[322.18820190 306.60537720]
[331.45272827 315.00073242]
[332.47595215 327.05902100]
[343.68563843 337.02609253]
[354.89535522 346.99316406]
[370.93063354 347.49258423]
[380.42221069 360.42660522]
[376.08898926 375.87338257]
[361.25503540 381.98345947]
[347.29968262 374.06970215]
[344.92828369 358.20288086]
[333.71856689 348.23580933]
[322.50888062 338.26873779]
[305.15786743 335.66308594]
[299.49530029 318.14514160]
[288.13116455 308.35446167]
[276.69088745 298.65292358]
[265.17514038 289.04107666]
[253.65940857 279.42922974]
[242.14366150 269.81738281]
[230.62791443 260.20553589]
[219.11216736 250.59368896]
[207.59643555 240.98184204]
[196.08068848 231.36997986]
[184.56494141 221.75813293]
[173.04919434 212.14628601]
[161.53344727 202.53443909]
[150.01771545 192.92259216]
[135.93572998 198.08959961]
[133.36949158 212.86843872]
[130.80326843 227.64729309]
[128.23703003 242.42614746]
[125.67079926 257.20498657]
[123.10456848 271.98385620]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 200]
[13 199]
[14 198]
[15 197]
[16 196]
[17 195]
[26 151]
[27 150]
[28 149]
[29 148]
[30 147]
[31 61]
[32 60]
[33 59]
[34 58]
[35 57]
[37 54]
[38 53]
[39 52]
[41 50]
[42 49]
[43 48]
[63 90]
[64 89]
[65 88]
[68 84]
[69 83]
[71 81]
[72 80]
[73 79]
[99 146]
[100 145]
[101 144]
[102 143]
[104 141]
[105 140]
[106 139]
[107 138]
[108 137]
[109 136]
[110 135]
[116 131]
[117 130]
[118 129]
[119 128]
[152 194]
[153 193]
[154 192]
[155 191]
[156 190]
[157 189]
[158 188]
[159 187]
[160 186]
[161 185]
[162 184]
[163 183]
[165 182]
[166 181]
[169 179]
[170 178]
[171 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
