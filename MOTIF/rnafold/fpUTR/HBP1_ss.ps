%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:42:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGACGGGUUUGGUAAGUAGGAAAGUUUCGGUUGAGGAGUAAGAGCUGCCGCGGGAGCAGUAACCCGCGCGGGGGAGGCCGACGUCGGUCGGAGAGGGGGUACGAGAGCUGCUGGUGGUGUUGUCGUGGCCGGAGCGGCCCGCGCCUGGGCUGCCGGCACUUCGCGGCAGUCAGAGCACCAUAAC\
) } def
/len { sequence length } bind def

/coor [
[258.89663696 340.77136230]
[249.75689697 328.87747192]
[240.61714172 316.98355103]
[231.47738647 305.08966064]
[224.89501953 301.69448853]
[222.28601074 292.91830444]
[213.34736633 280.87252808]
[204.40870667 268.82675171]
[195.47006226 256.78100586]
[186.53140259 244.73522949]
[177.59275818 232.68946838]
[178.90615845 247.63185120]
[174.48400879 261.96517944]
[164.98017883 273.57022095]
[151.79981995 280.73110962]
[136.89172363 282.38906860]
[122.46012878 278.29895020]
[110.63881683 269.06549072]
[103.17562103 256.05392456]
[101.17401123 241.18807983]
[104.92993927 226.66592407]
[113.88807678 214.63462830]
[126.72390747 206.87309265]
[141.53959656 204.52890015]
[156.14457703 207.94862366]
[168.37776184 216.62492371]
[162.49232483 202.82775879]
[156.60687256 189.03060913]
[150.72143555 175.23344421]
[144.83599854 161.43629456]
[138.95054626 147.63912964]
[133.06510925 133.84197998]
[127.17966461 120.04482269]
[125.72991943 134.97459412]
[126.48411560 149.95562744]
[122.33036804 164.36903381]
[113.71930695 176.65112305]
[101.58514404 185.46940613]
[87.24430847 189.86718750]
[72.25263977 189.36737061]
[58.23657227 184.02416992]
[46.71670532 174.41725159]
[38.94282150 161.58889771]
[35.75831223 146.93083191]
[37.50866318 132.03330994]
[44.00364304 118.51301575]
[58.98112488 117.69141388]
[45.44324875 111.23184967]
[31.90537453 104.77229309]
[18.36750031 98.31272888]
[9.25364685 97.43729401]
[4.65784836 91.62924957]
[-8.76960087 84.94317627]
[-22.19705009 78.25710297]
[-35.62450027 71.57102966]
[-49.05194855 64.88494873]
[-62.74932098 72.17614746]
[-78.11168671 69.99040222]
[-89.23188782 59.16817856]
[-91.83399963 43.87083817]
[-84.91744232 29.98052216]
[-71.14178467 22.83834076]
[-55.80403519 25.19060898]
[-44.80188370 36.13283157]
[-42.36587524 51.45750046]
[-28.93842506 58.14357758]
[-15.51097488 64.82965088]
[-2.08352566 71.51572418]
[11.34392357 78.20180511]
[24.82706070 84.77485657]
[38.36493683 91.23441315]
[51.90281296 97.69397736]
[65.44068909 104.15354156]
[71.27059937 99.43526459]
[61.83406067 87.77543640]
[52.39770126 76.11545563]
[64.05782318 66.67927551]
[73.49389648 78.33889771]
[82.93043518 89.99872589]
[88.76035309 85.28045654]
[85.26479340 70.69343567]
[81.76924133 56.10641861]
[78.27368927 41.51940155]
[74.77813721 26.93238258]
[63.10820007 15.41089439]
[67.51237488 -0.38579145]
[83.46002197 -4.20739889]
[94.54556274 7.87741470]
[89.36515045 23.43682861]
[92.86071014 38.02384567]
[96.35626221 52.61086655]
[99.85181427 67.19788361]
[103.34736633 81.78490448]
[110.61048889 83.65496063]
[114.35060120 69.12872314]
[118.09070587 54.60248184]
[121.83106232 40.07630539]
[136.35717773 43.81689835]
[132.61694336 58.34259415]
[128.87683105 72.86882782]
[125.13672638 87.39506531]
[132.39984131 89.26512146]
[142.50527954 78.17999268]
[152.61071777 67.09485626]
[162.71614075 56.00972366]
[172.82157898 44.92458725]
[176.40077209 29.51355171]
[190.69300842 25.32056999]
[200.79844666 14.23543644]
[210.90386963 3.15030289]
[214.38278198 -5.31881237]
[221.27339172 -8.03435040]
[231.56362915 -18.94815636]
[241.85385132 -29.86196327]
[248.32049561 -45.53419495]
[265.17041016 -43.65876770]
[268.03277588 -26.94820023]
[252.76765442 -19.57173347]
[242.47743225 -8.65792751]
[232.18719482 2.25587940]
[221.98901367 13.25573730]
[211.88357544 24.34087181]
[201.77813721 35.42600632]
[198.92176819 50.04415894]
[183.90672302 55.03002167]
[173.80128479 66.11515808]
[163.69584656 77.20028687]
[153.59040833 88.28542328]
[143.48497009 99.37055969]
[140.97682190 114.15937805]
[146.86225891 127.95653534]
[152.74771118 141.75369263]
[158.63314819 155.55084229]
[164.51860046 169.34800720]
[170.40403748 183.14517212]
[176.28947449 196.94232178]
[182.17492676 210.73948669]
[189.63851929 223.75080872]
[198.57717896 235.79656982]
[207.51582336 247.84234619]
[216.45448303 259.88812256]
[225.39312744 271.93386841]
[234.33177185 283.97964478]
[243.37129211 295.94989014]
[252.51104736 307.84381104]
[261.65078735 319.73770142]
[270.79055786 331.63162231]
[278.46447754 334.00570679]
[283.19082642 339.46514893]
[284.15490723 345.80584717]
[295.49114990 355.62875366]
[306.82739258 365.45166016]
[318.16363525 375.27456665]
[329.49987793 385.09747314]
[340.83612061 394.92037964]
[352.17236328 404.74328613]
[363.50860596 414.56622314]
[378.59133911 410.92062378]
[392.92349243 416.86779785]
[400.99407959 430.12091064]
[399.69973755 445.58392334]
[389.53820801 457.31094360]
[374.41680908 460.79272461]
[360.15002441 454.69039917]
[352.22369385 441.35049438]
[353.68569946 425.90246582]
[342.34945679 416.07955933]
[331.01321411 406.25662231]
[319.67697144 396.43371582]
[308.34072876 386.61080933]
[297.00448608 376.78790283]
[285.66824341 366.96499634]
[274.33200073 357.14208984]
[278.45007324 371.56570435]
[276.91650391 386.48712158]
[269.95071411 399.77160645]
[258.54919434 409.51867676]
[244.34309387 414.33392334]
[229.36474609 413.52847290]
[215.75695801 407.21752930]
[205.46647644 396.30395508]
[199.96548462 382.34906006]
[200.04095459 367.34924316]
[205.68209839 353.45040894]
[216.08186340 342.64093018]
[229.75247192 336.46722412]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 147]
[2 146]
[3 145]
[4 144]
[6 143]
[7 142]
[8 141]
[9 140]
[10 139]
[11 138]
[26 137]
[27 136]
[28 135]
[29 134]
[30 133]
[31 132]
[32 131]
[33 130]
[47 73]
[48 72]
[49 71]
[50 70]
[52 69]
[53 68]
[54 67]
[55 66]
[56 65]
[80 93]
[81 92]
[82 91]
[83 90]
[84 89]
[102 129]
[103 128]
[104 127]
[105 126]
[106 125]
[108 123]
[109 122]
[110 121]
[112 120]
[113 119]
[114 118]
[150 173]
[151 172]
[152 171]
[153 170]
[154 169]
[155 168]
[156 167]
[157 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
