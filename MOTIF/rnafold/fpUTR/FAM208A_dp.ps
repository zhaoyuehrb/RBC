%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:43:26 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FAM208A)
} def

/sequence { (\
GGCUGAGAGCAGCUCGGCGGCGAGACUGGCCCGCCGCCCCUUCCCCCCACACCCGUCGACCUUGUGGGCAGAAGCUUCCCAGAGCUCCUUAGGCCGGCGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 14 0.010872036 ubox
1 15 0.007192764 ubox
1 95 0.997781647 ubox
2 13 0.014427491 ubox
2 18 0.016071824 ubox
2 94 0.998519994 ubox
2 98 0.042072622 ubox
3 12 0.014461800 ubox
3 17 0.016086289 ubox
3 92 0.184789386 ubox
3 93 0.981581038 ubox
3 97 0.042105349 ubox
4 11 0.014456381 ubox
4 16 0.016075883 ubox
4 91 0.259858093 ubox
4 92 0.958443950 ubox
4 96 0.042023180 ubox
5 10 0.014416474 ubox
5 15 0.017142734 ubox
5 90 0.267783706 ubox
5 95 0.041453378 ubox
6 14 0.017143416 ubox
6 89 0.277356698 ubox
6 90 0.076490183 ubox
7 13 0.017099037 ubox
7 15 0.003880134 ubox
7 87 0.049240160 ubox
7 88 0.274865780 ubox
7 89 0.063869952 ubox
7 90 0.916842415 ubox
8 14 0.003982915 ubox
8 86 0.060783282 ubox
8 89 0.952137451 ubox
8 90 0.008982793 ubox
9 13 0.003909462 ubox
9 85 0.059053379 ubox
9 88 0.955268638 ubox
9 89 0.006614402 ubox
9 94 0.005540936 ubox
10 84 0.058439618 ubox
10 93 0.005542728 ubox
11 76 0.013721017 ubox
11 86 0.976455896 ubox
12 75 0.013903245 ubox
12 85 0.997940984 ubox
13 74 0.013574169 ubox
13 82 0.015985275 ubox
13 84 0.997987092 ubox
14 73 0.010838193 ubox
14 81 0.015008585 ubox
14 83 0.997729585 ubox
15 36 0.011965445 ubox
15 71 0.004247129 ubox
15 82 0.996137341 ubox
16 35 0.048641327 ubox
16 38 0.994219884 ubox
16 39 0.064456936 ubox
16 78 0.005140067 ubox
16 79 0.007961958 ubox
16 80 0.025002308 ubox
17 34 0.048697829 ubox
17 37 0.997534305 ubox
17 38 0.045692451 ubox
17 78 0.003465113 ubox
17 79 0.011959959 ubox
18 33 0.048692403 ubox
18 36 0.998648804 ubox
19 31 0.032127624 ubox
19 32 0.040018316 ubox
19 35 0.998645372 ubox
20 30 0.042489430 ubox
20 31 0.028836892 ubox
20 34 0.998661308 ubox
21 28 0.005488036 ubox
21 29 0.050675330 ubox
21 33 0.998634897 ubox
22 27 0.005730122 ubox
22 32 0.991375027 ubox
32 99 0.015396466 ubox
33 98 0.015975995 ubox
34 97 0.015977629 ubox
35 96 0.015974861 ubox
36 75 0.013240754 ubox
36 94 0.009011974 ubox
36 95 0.013174568 ubox
37 74 0.011882149 ubox
37 93 0.012721426 ubox
38 92 0.012675333 ubox
38 93 0.008501245 ubox
39 92 0.008467982 ubox
39 93 0.005279399 ubox
40 71 0.008898906 ubox
40 74 0.984214800 ubox
40 92 0.005369000 ubox
41 70 0.008508588 ubox
41 71 0.003645429 ubox
41 72 0.006482660 ubox
41 73 0.995484469 ubox
41 74 0.006460139 ubox
41 91 0.004956021 ubox
42 70 0.004522752 ubox
42 71 0.005610805 ubox
42 72 0.998421198 ubox
42 73 0.006067018 ubox
43 71 0.998436868 ubox
44 68 0.005841852 ubox
45 67 0.005574407 ubox
45 68 0.028739266 ubox
46 66 0.005264521 ubox
46 67 0.023853688 ubox
46 68 0.998946320 ubox
47 66 0.017552772 ubox
47 67 0.999596902 ubox
47 68 0.003708921 ubox
48 64 0.007441846 ubox
48 66 0.999724499 ubox
48 67 0.003661386 ubox
49 56 0.003510439 ubox
49 63 0.006676137 ubox
49 65 0.999605280 ubox
50 55 0.004440438 ubox
50 64 0.999518428 ubox
50 66 0.004147508 ubox
51 63 0.913257244 ubox
51 65 0.005489797 ubox
52 64 0.006434465 ubox
52 68 0.003889379 ubox
53 67 0.003967889 ubox
54 64 0.010457652 ubox
54 66 0.003973785 ubox
54 99 0.010836856 ubox
55 63 0.021088147 ubox
55 65 0.003782868 ubox
55 98 0.011239026 ubox
56 97 0.011236443 ubox
57 64 0.006575859 ubox
57 96 0.011240563 ubox
58 63 0.009133133 ubox
58 95 0.011218219 ubox
60 93 0.011152805 ubox
61 92 0.011162708 ubox
62 91 0.010605662 ubox
65 81 0.004735441 ubox
66 80 0.005165588 ubox
66 88 0.003821800 ubox
66 89 0.009454954 ubox
67 79 0.005193617 ubox
67 87 0.003815165 ubox
67 88 0.009769446 ubox
68 75 0.010008379 ubox
68 78 0.005188070 ubox
68 87 0.009748018 ubox
69 74 0.011240730 ubox
70 76 0.006373045 ubox
70 89 0.008223120 ubox
71 75 0.006512049 ubox
71 78 0.015784924 ubox
71 87 0.004054475 ubox
71 88 0.008751759 ubox
72 77 0.014837110 ubox
73 86 0.018655458 ubox
74 85 0.021142357 ubox
75 82 0.030578191 ubox
75 84 0.021612004 ubox
76 81 0.045436247 ubox
76 82 0.004128717 ubox
76 83 0.022195835 ubox
77 81 0.026117525 ubox
77 82 0.020635409 ubox
77 83 0.014281319 ubox
78 82 0.015755932 ubox
83 89 0.003326288 ubox
84 88 0.003266562 ubox
84 100 0.007070231 ubox
85 99 0.007078602 ubox
87 97 0.007084337 ubox
88 96 0.007083417 ubox
93 100 0.021000828 ubox
94 99 0.020962167 ubox
95 101 0.004949106 ubox
96 100 0.042417414 ubox
1 95 0.9500000 lbox
2 94 0.9500000 lbox
3 93 0.9500000 lbox
4 92 0.9500000 lbox
7 90 0.9500000 lbox
8 89 0.9500000 lbox
9 88 0.9500000 lbox
11 86 0.9500000 lbox
12 85 0.9500000 lbox
13 84 0.9500000 lbox
14 83 0.9500000 lbox
15 82 0.9500000 lbox
16 38 0.9500000 lbox
17 37 0.9500000 lbox
18 36 0.9500000 lbox
19 35 0.9500000 lbox
20 34 0.9500000 lbox
21 33 0.9500000 lbox
22 32 0.9500000 lbox
40 74 0.9500000 lbox
41 73 0.9500000 lbox
42 72 0.9500000 lbox
43 71 0.9500000 lbox
46 68 0.9500000 lbox
47 67 0.9500000 lbox
48 66 0.9500000 lbox
49 65 0.9500000 lbox
50 64 0.9500000 lbox
51 63 0.9500000 lbox
showpage
end
%%EOF
