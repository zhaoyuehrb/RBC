%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:41:42 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SYCE1)
} def

/sequence { (\
GCAUUGCGCAGGCGCGCUGCCUGGAGUCCUGCCCCCAGCGGCGGUUGCUCCAAUCACCACUGGAGGCUCCCUCCCGAGGCACCCUCGCUGGCGAGCUGAGAGGAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.015359289 ubox
1 9 0.013484404 ubox
1 13 0.007014862 ubox
1 15 0.034467752 ubox
1 17 0.103018304 ubox
1 20 0.029538278 ubox
1 32 0.010000341 ubox
1 80 0.006260576 ubox
1 92 0.003713943 ubox
1 96 0.074743564 ubox
2 6 0.015376907 ubox
2 8 0.013491928 ubox
2 12 0.007012975 ubox
2 14 0.034200534 ubox
2 16 0.102798474 ubox
2 19 0.030875289 ubox
2 31 0.010041274 ubox
2 79 0.006157510 ubox
2 91 0.003695937 ubox
2 95 0.074759854 ubox
2 98 0.029147992 ubox
3 18 0.033418840 ubox
3 30 0.009891294 ubox
3 97 0.028372634 ubox
4 11 0.003277849 ubox
4 12 0.007937043 ubox
4 77 0.003894398 ubox
4 94 0.073068444 ubox
4 95 0.010461448 ubox
4 102 0.004197092 ubox
4 104 0.016226794 ubox
4 105 0.031648709 ubox
5 11 0.007676710 ubox
5 14 0.083695119 ubox
5 16 0.065709718 ubox
5 76 0.004050775 ubox
5 81 0.005095752 ubox
5 93 0.073427167 ubox
5 94 0.013314108 ubox
5 101 0.005099120 ubox
5 103 0.007758933 ubox
5 104 0.039541748 ubox
6 13 0.099398422 ubox
6 15 0.103844633 ubox
6 17 0.983685994 ubox
6 18 0.004891994 ubox
6 27 0.009954373 ubox
6 75 0.003775416 ubox
6 80 0.004435850 ubox
6 88 0.003622500 ubox
6 92 0.073611014 ubox
6 96 0.006028745 ubox
7 12 0.099402957 ubox
7 14 0.103896632 ubox
7 16 0.985365536 ubox
7 26 0.010098254 ubox
7 79 0.004428979 ubox
7 87 0.003629031 ubox
7 91 0.073534918 ubox
7 93 0.041286508 ubox
7 95 0.005543679 ubox
8 13 0.101212117 ubox
8 15 0.985440117 ubox
8 17 0.015686328 ubox
8 20 0.007269463 ubox
8 86 0.003608424 ubox
8 88 0.004380341 ubox
8 92 0.042100107 ubox
8 96 0.003595935 ubox
9 14 0.984029740 ubox
9 16 0.015691908 ubox
9 19 0.007318240 ubox
9 23 0.013849820 ubox
9 87 0.004368362 ubox
9 90 0.068761802 ubox
9 91 0.041844933 ubox
9 95 0.003604649 ubox
10 18 0.007812580 ubox
10 22 0.016164070 ubox
10 85 0.004946442 ubox
10 89 0.064157734 ubox
11 17 0.008035072 ubox
11 21 0.016651987 ubox
11 84 0.004960914 ubox
11 88 0.047351597 ubox
11 89 0.051113094 ubox
11 97 0.003376451 ubox
12 20 0.016774030 ubox
12 83 0.004938032 ubox
12 88 0.069298479 ubox
12 92 0.003684199 ubox
12 96 0.003823855 ubox
13 19 0.016768073 ubox
13 87 0.081603684 ubox
13 91 0.003667276 ubox
13 95 0.004021394 ubox
14 18 0.010346786 ubox
14 86 0.081165224 ubox
14 88 0.004380131 ubox
15 87 0.004763654 ubox
15 93 0.004036717 ubox
16 80 0.004892697 ubox
16 86 0.004753039 ubox
16 88 0.003294134 ubox
16 92 0.004050239 ubox
16 96 0.004445291 ubox
17 79 0.004897806 ubox
17 87 0.003300648 ubox
17 91 0.004043012 ubox
17 95 0.004460350 ubox
18 56 0.004358957 ubox
18 78 0.004876766 ubox
18 81 0.885913534 ubox
18 90 0.003393272 ubox
18 93 0.004687725 ubox
18 94 0.003878083 ubox
19 55 0.004916859 ubox
19 80 0.999036444 ubox
19 92 0.006795240 ubox
20 79 0.999300295 ubox
20 91 0.006799951 ubox
20 103 0.003164518 ubox
21 78 0.999269964 ubox
21 79 0.004120251 ubox
21 90 0.006789408 ubox
21 102 0.003390022 ubox
22 52 0.023374149 ubox
22 76 0.153773040 ubox
22 77 0.917864173 ubox
22 78 0.004558819 ubox
22 101 0.003263994 ubox
23 51 0.027252136 ubox
23 70 0.017972587 ubox
23 74 0.961032336 ubox
23 75 0.261909927 ubox
24 50 0.027270035 ubox
24 69 0.018075569 ubox
24 73 0.979429233 ubox
24 74 0.197947382 ubox
25 49 0.027266177 ubox
25 68 0.018133242 ubox
25 72 0.994140895 ubox
26 48 0.027265891 ubox
26 67 0.016964534 ubox
26 71 0.991165746 ubox
27 47 0.026792811 ubox
27 66 0.004364311 ubox
27 104 0.005375905 ubox
28 44 0.005860212 ubox
28 65 0.003629326 ubox
28 66 0.016426476 ubox
28 103 0.005868414 ubox
29 43 0.005796305 ubox
29 44 0.026273003 ubox
29 65 0.016522700 ubox
29 102 0.005869544 ubox
30 43 0.026358189 ubox
30 64 0.016451256 ubox
30 101 0.005716875 ubox
31 42 0.027037840 ubox
31 45 0.003855336 ubox
31 67 0.998828619 ubox
32 41 0.027021220 ubox
32 44 0.003881818 ubox
32 66 0.998544916 ubox
33 40 0.026957400 ubox
33 43 0.003879800 ubox
33 65 0.997048343 ubox
33 66 0.041562484 ubox
33 103 0.004363097 ubox
34 41 0.003491913 ubox
34 63 0.055069249 ubox
34 65 0.056897021 ubox
34 102 0.004362449 ubox
35 40 0.003486022 ubox
35 62 0.039087742 ubox
35 63 0.997348788 ubox
36 62 0.998845388 ubox
37 61 0.999357762 ubox
38 60 0.999366858 ubox
40 58 0.999364472 ubox
41 57 0.999479844 ubox
43 51 0.006963949 ubox
43 55 0.998508145 ubox
44 50 0.007079022 ubox
44 54 0.998791411 ubox
45 53 0.998825486 ubox
46 52 0.996977291 ubox
47 51 0.981405684 ubox
57 79 0.006649688 ubox
57 103 0.014512104 ubox
58 78 0.006684017 ubox
58 102 0.014520073 ubox
60 100 0.013347990 ubox
60 102 0.016436993 ubox
60 103 0.006156332 ubox
61 99 0.012727117 ubox
61 101 0.016506136 ubox
61 102 0.006137712 ubox
62 74 0.014148588 ubox
63 73 0.014306318 ubox
64 72 0.014410965 ubox
65 71 0.014413138 ubox
65 97 0.024578209 ubox
66 70 0.014180483 ubox
66 96 0.025701442 ubox
67 95 0.025816359 ubox
68 94 0.025887723 ubox
68 104 0.003717165 ubox
69 93 0.025881706 ubox
69 103 0.003876044 ubox
70 91 0.022624372 ubox
70 102 0.003847882 ubox
70 103 0.003332530 ubox
71 90 0.022595492 ubox
71 91 0.011909647 ubox
71 100 0.003853382 ubox
71 102 0.003415021 ubox
72 90 0.011721511 ubox
72 99 0.003852060 ubox
72 101 0.003446480 ubox
73 91 0.003582443 ubox
73 98 0.003827106 ubox
73 100 0.003437171 ubox
74 90 0.003747020 ubox
75 87 0.028648322 ubox
76 86 0.030080219 ubox
77 85 0.030082232 ubox
78 84 0.030084881 ubox
79 83 0.029599050 ubox
82 103 0.886522784 ubox
83 102 0.890306817 ubox
83 103 0.426138527 ubox
84 95 0.014844051 ubox
84 100 0.899067069 ubox
84 102 0.427170142 ubox
85 94 0.015257480 ubox
85 99 0.899501403 ubox
85 101 0.426619780 ubox
86 93 0.015326174 ubox
86 98 0.899209396 ubox
86 100 0.425780480 ubox
87 92 0.014997576 ubox
87 96 0.973999199 ubox
87 97 0.189207842 ubox
88 95 0.992483080 ubox
89 94 0.982559619 ubox
89 98 0.043623127 ubox
89 99 0.004241222 ubox
90 97 0.061318894 ubox
91 96 0.062132352 ubox
96 102 0.004590123 ubox
96 103 0.010349385 ubox
97 101 0.004263403 ubox
97 102 0.010433053 ubox
6 17 0.9500000 lbox
7 16 0.9500000 lbox
8 15 0.9500000 lbox
9 14 0.9500000 lbox
18 81 0.9500000 lbox
19 80 0.9500000 lbox
20 79 0.9500000 lbox
21 78 0.9500000 lbox
22 77 0.9500000 lbox
23 74 0.9500000 lbox
24 73 0.9500000 lbox
25 72 0.9500000 lbox
26 71 0.9500000 lbox
31 67 0.9500000 lbox
32 66 0.9500000 lbox
33 65 0.9500000 lbox
35 63 0.9500000 lbox
36 62 0.9500000 lbox
37 61 0.9500000 lbox
38 60 0.9500000 lbox
40 58 0.9500000 lbox
41 57 0.9500000 lbox
43 55 0.9500000 lbox
44 54 0.9500000 lbox
45 53 0.9500000 lbox
46 52 0.9500000 lbox
47 51 0.9500000 lbox
82 103 0.9500000 lbox
83 102 0.9500000 lbox
84 100 0.9500000 lbox
85 99 0.9500000 lbox
86 98 0.9500000 lbox
87 96 0.9500000 lbox
88 95 0.9500000 lbox
89 94 0.9500000 lbox
showpage
end
%%EOF
