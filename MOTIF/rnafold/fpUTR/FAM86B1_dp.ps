%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:52:52 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FAM86B1)
} def

/sequence { (\
GCUUCCUCCAGGUCUCCCGGCAACGGCUGCGGCCUCGCCCACGUU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 13 0.242267011 ubox
1 21 0.138217497 ubox
1 27 0.229539761 ubox
1 30 0.197383713 ubox
1 33 0.013672821 ubox
1 38 0.109351190 ubox
1 44 0.132156174 ubox
2 11 0.106977510 ubox
2 12 0.264894660 ubox
2 20 0.137523341 ubox
2 26 0.229938131 ubox
2 29 0.197498194 ubox
2 32 0.013640920 ubox
2 37 0.109552860 ubox
2 43 0.144290743 ubox
3 10 0.102264058 ubox
3 11 0.262868137 ubox
3 12 0.013749367 ubox
3 19 0.131658654 ubox
3 23 0.017422196 ubox
3 25 0.221497415 ubox
3 31 0.012806344 ubox
4 10 0.233479761 ubox
4 11 0.017815884 ubox
4 12 0.037034857 ubox
4 19 0.008118201 ubox
4 20 0.003934573 ubox
4 22 0.024748112 ubox
4 25 0.008468918 ubox
4 26 0.013255333 ubox
5 11 0.049619890 ubox
5 12 0.259087962 ubox
5 19 0.007623492 ubox
5 20 0.031348279 ubox
5 25 0.015029882 ubox
5 26 0.194679283 ubox
5 32 0.021365321 ubox
6 11 0.260727900 ubox
6 12 0.048196626 ubox
6 19 0.032161575 ubox
6 20 0.014936769 ubox
6 25 0.194395832 ubox
6 26 0.015343977 ubox
6 31 0.021495322 ubox
6 32 0.020468287 ubox
7 11 0.043813271 ubox
7 19 0.014658648 ubox
7 20 0.013964185 ubox
7 25 0.014945103 ubox
7 26 0.010609097 ubox
7 31 0.019737081 ubox
7 32 0.016223364 ubox
8 19 0.017888328 ubox
8 20 0.325270784 ubox
8 25 0.015006499 ubox
8 26 0.025578984 ubox
8 31 0.019214171 ubox
8 32 0.010362274 ubox
9 19 0.326860113 ubox
9 25 0.025880900 ubox
9 29 0.047656557 ubox
9 31 0.010363287 ubox
10 28 0.048291088 ubox
10 35 0.496071807 ubox
10 45 0.010950750 ubox
11 17 0.294543105 ubox
11 18 0.503736393 ubox
11 27 0.048184149 ubox
11 28 0.016287070 ubox
11 34 0.528861764 ubox
11 35 0.009214174 ubox
11 36 0.007986961 ubox
11 39 0.092114796 ubox
11 40 0.030738699 ubox
11 44 0.012962548 ubox
11 45 0.007266743 ubox
12 16 0.290372971 ubox
12 17 0.500501768 ubox
12 21 0.187164802 ubox
12 24 0.005130638 ubox
12 27 0.018149156 ubox
12 30 0.031200812 ubox
12 33 0.529019779 ubox
12 34 0.010008500 ubox
12 35 0.006211079 ubox
12 38 0.092534229 ubox
12 39 0.026855720 ubox
12 42 0.061665958 ubox
12 44 0.008708654 ubox
13 20 0.187042692 ubox
13 23 0.004878365 ubox
13 26 0.013254416 ubox
13 29 0.030569370 ubox
13 32 0.523039909 ubox
13 37 0.090994146 ubox
13 41 0.060156570 ubox
13 43 0.007988061 ubox
14 19 0.185777220 ubox
14 20 0.010345391 ubox
14 25 0.012444305 ubox
14 31 0.518581383 ubox
14 32 0.046634082 ubox
15 19 0.009461817 ubox
15 31 0.036914073 ubox
15 32 0.015081956 ubox
16 26 0.021133349 ubox
16 31 0.043281031 ubox
16 32 0.102112168 ubox
17 25 0.016466605 ubox
17 26 0.423980387 ubox
17 31 0.104341407 ubox
17 32 0.041062704 ubox
18 25 0.425353316 ubox
18 29 0.342306422 ubox
18 31 0.041334099 ubox
18 37 0.017839733 ubox
18 43 0.045745430 ubox
19 24 0.424725703 ubox
19 28 0.343408209 ubox
19 30 0.031233798 ubox
19 34 0.025576002 ubox
19 36 0.019061051 ubox
19 39 0.712549290 ubox
19 40 0.102617025 ubox
19 42 0.024429289 ubox
19 45 0.005182245 ubox
20 27 0.343819069 ubox
20 30 0.049218799 ubox
20 33 0.025617503 ubox
20 35 0.018539595 ubox
20 38 0.715945037 ubox
20 39 0.092138441 ubox
20 44 0.007066380 ubox
21 26 0.339081754 ubox
21 29 0.056133636 ubox
21 32 0.025516742 ubox
21 37 0.716187220 ubox
21 43 0.007623678 ubox
22 28 0.053465821 ubox
22 45 0.204767628 ubox
23 44 0.246133347 ubox
24 31 0.026333887 ubox
24 37 0.014869278 ubox
24 43 0.250810130 ubox
25 30 0.026819131 ubox
25 34 0.730695516 ubox
25 35 0.012839164 ubox
25 36 0.007794813 ubox
25 39 0.016988723 ubox
25 40 0.031858875 ubox
25 42 0.249657374 ubox
25 45 0.037897076 ubox
26 33 0.732255515 ubox
26 34 0.009511223 ubox
26 38 0.017240062 ubox
26 39 0.032194311 ubox
26 44 0.054921957 ubox
27 32 0.732197801 ubox
27 37 0.017176951 ubox
27 43 0.065674970 ubox
28 41 0.204892329 ubox
28 43 0.037550758 ubox
29 36 0.006185214 ubox
29 38 0.252416997 ubox
29 40 0.226801171 ubox
29 42 0.049229032 ubox
29 44 0.038249555 ubox
30 37 0.252867761 ubox
30 43 0.040384010 ubox
31 36 0.249433442 ubox
31 39 0.320833933 ubox
31 40 0.054332548 ubox
31 42 0.032592254 ubox
31 45 0.004173734 ubox
32 38 0.321962596 ubox
32 39 0.050554390 ubox
32 44 0.005738633 ubox
33 37 0.320197271 ubox
33 43 0.005865114 ubox
36 43 0.157798780 ubox
37 42 0.159402580 ubox
37 44 0.102716941 ubox
38 43 0.106883246 ubox
11 18 0.9500000 lbox
12 17 0.9500000 lbox
19 39 0.9500000 lbox
20 38 0.9500000 lbox
21 37 0.9500000 lbox
25 34 0.9500000 lbox
26 33 0.9500000 lbox
27 32 0.9500000 lbox
showpage
end
%%EOF
