%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:14:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCCGCCCUCGGGUCCUAACGGGAGGCGCCCGCGGGGCUGUCCGCGGUCGCGCCGGGCUCCGCCUGCAGUGUGGCCCGUCCGGACAGUCCCUCACCCCGGCCUGCGCUGCUGCGUGGACUCGGGCCUCAGGAAUUCCGCUGCGGCCCAAGGCUUGCCGUUUGACGAGGAGCAGUCGCGGUAGGCGGUGGGCAAGGCUGCCCUGGGCGGAGGCCGAGGCGCGGCUCGGACUCCAGC\
) } def
/len { sequence length } bind def

/coor [
[-186.90074158 684.27490234]
[-194.48667908 697.21533203]
[-202.07260132 710.15570068]
[-209.65853882 723.09606934]
[-217.24447632 736.03649902]
[-224.83039856 748.97686768]
[-232.41633606 761.91723633]
[-232.29481506 766.21746826]
[-233.42478943 769.96173096]
[-235.48069763 772.82684326]
[-238.06579590 774.62750244]
[-240.76286316 775.32714844]
[-249.02394104 787.84729004]
[-257.28503418 800.36749268]
[-265.54611206 812.88763428]
[-273.72402954 825.46228027]
[-281.81842041 838.09088135]
[-289.91284180 850.71942139]
[-286.29037476 866.10296631]
[-294.67761230 879.49810791]
[-310.09860229 882.95770264]
[-323.40429688 874.42926025]
[-326.70068359 858.97259521]
[-318.03207397 845.75781250]
[-302.54138184 842.62500000]
[-294.44699097 829.99645996]
[-286.35260010 817.36785889]
[-285.39102173 810.05358887]
[-278.06628418 804.62658691]
[-269.80517578 792.10638428]
[-261.54409790 779.58624268]
[-253.28302002 767.06604004]
[-245.35671997 754.33129883]
[-237.77079773 741.39093018]
[-230.18486023 728.45056152]
[-222.59892273 715.51013184]
[-215.01300049 702.56976318]
[-207.42706299 689.62939453]
[-199.84112549 676.68902588]
[-202.30195618 653.70483398]
[-181.45231628 642.13226318]
[-174.91848755 628.63006592]
[-168.38464355 615.12792969]
[-161.85081482 601.62573242]
[-155.31697083 588.12353516]
[-155.23275757 580.74682617]
[-148.60600281 574.48657227]
[-141.89375305 561.07214355]
[-135.18151855 547.65777588]
[-128.46928406 534.24340820]
[-121.75704956 520.82897949]
[-115.04480743 507.41461182]
[-108.33257294 494.00021362]
[-101.62033081 480.58581543]
[-94.90809631 467.17141724]
[-88.37425995 453.66925049]
[-82.01997375 440.08163452]
[-83.63721466 425.27508545]
[-70.78244019 416.05200195]
[-64.42815399 402.46441650]
[-58.07386398 388.87680054]
[-51.71957779 375.28918457]
[-45.36529160 361.70159912]
[-39.01100540 348.11398315]
[-32.65671539 334.52636719]
[-26.30242920 320.93878174]
[-20.21954918 307.22750854]
[-14.41048145 293.39801025]
[-8.60141468 279.56854248]
[-2.79234672 265.73904419]
[3.01672101 251.90956116]
[-4.84763002 239.28854370]
[-3.75934029 224.27923584]
[6.07326126 212.65281677]
[21.03946495 209.00331116]
[26.84853172 195.17382812]
[32.65760040 181.34432983]
[38.46666718 167.51484680]
[44.27573395 153.68536377]
[43.96887970 146.31452942]
[50.25455093 139.71186829]
[56.24642181 125.96060181]
[53.08885956 111.29670715]
[41.96833420 101.23023224]
[30.84781075 91.16375732]
[15.04749107 85.01670074]
[16.58035088 68.13219452]
[33.22934723 64.93104553]
[40.91428757 80.04322815]
[52.03480911 90.10970306]
[63.15533447 100.17618561]
[69.65052795 96.42618561]
[62.15052414 83.43579865]
[54.65052414 70.44541931]
[47.15052414 57.45503998]
[39.65052414 44.46465683]
[39.65021515 29.46465874]
[52.64090729 36.96465683]
[60.14090729 49.95503998]
[67.64090729 62.94541931]
[75.14090729 75.93579865]
[82.64090729 88.92618561]
[89.13610077 85.17618561]
[85.97853088 70.51229095]
[82.82096863 55.84839249]
[79.66340637 41.18449783]
[76.50584412 26.52060509]
[73.34828186 11.85671043]
[61.94769287 0.06864409]
[66.71569824 -15.62205791]
[82.74739075 -19.07414627]
[93.55073547 -6.73640919]
[88.01217651 8.69914818]
[91.16973877 23.36304283]
[94.32730103 38.02693558]
[97.48486328 52.69083023]
[100.64242554 67.35472870]
[103.79998779 82.01862335]
[118.69403839 83.80396271]
[133.58674622 85.58916473]
[140.12059021 72.08698273]
[139.16709900 56.29453278]
[151.67565918 48.20841980]
[158.20948792 34.70623398]
[164.74333191 21.20405006]
[171.27716064 7.70186615]
[177.81100464 -5.80031824]
[176.85751343 -21.59276581]
[189.36607361 -29.67888069]
[195.89990234 -43.18106461]
[202.43374634 -56.68325043]
[194.98814392 -70.29730988]
[197.00006104 -85.68340302]
[207.69586182 -96.92525482]
[222.96281433 -99.70014954]
[236.93043518 -92.94108582]
[244.22792053 -79.24705505]
[242.04920959 -63.88368988]
[231.23207092 -52.75852585]
[215.93592834 -50.14941406]
[209.40208435 -36.64722824]
[202.86825562 -23.14504433]
[204.28909302 -8.31836319]
[191.31318665 0.73351818]
[184.77934265 14.23570251]
[178.24551392 27.73788643]
[171.71166992 41.24007034]
[165.17784119 54.74225616]
[166.59867859 69.56893921]
[153.62277222 78.62081909]
[147.08894348 92.12300110]
[156.55191040 103.76139832]
[171.10313416 100.11971283]
[185.65435791 96.47801971]
[200.20556641 92.83633423]
[214.75679016 89.19464111]
[229.30801392 85.55295563]
[243.85923767 81.91126251]
[258.41046143 78.26957703]
[272.96170044 74.62789154]
[277.94931030 70.33189392]
[283.52157593 69.33551025]
[287.94689941 71.08797455]
[302.58956909 67.83329773]
[317.23220825 64.57861328]
[323.28799438 50.29201508]
[336.60202026 42.32229233]
[352.05474854 43.73396683]
[363.70428467 53.98421860]
[367.07116699 69.13162231]
[360.86074829 83.35168457]
[347.46105957 91.17650604]
[332.02453613 89.59728241]
[320.48687744 79.22126007]
[305.84423828 82.47593689]
[291.20159912 85.73062134]
[276.60339355 89.17910767]
[262.05215454 92.82080078]
[247.50093079 96.46248627]
[232.94970703 100.10417938]
[218.39848328 103.74586487]
[203.84725952 107.38755798]
[189.29603577 111.02924347]
[174.74481201 114.67093658]
[160.19358826 118.31262207]
[69.99769592 131.95246887]
[64.00582123 145.70375061]
[58.10522461 159.49443054]
[52.29615402 173.32391357]
[46.48708725 187.15339661]
[40.67802048 200.98289490]
[34.86895370 214.81237793]
[42.73979950 228.05458069]
[41.32060242 243.21502686]
[31.36427116 254.49932861]
[16.84620857 257.71862793]
[11.03714085 271.54812622]
[5.22807360 285.37759399]
[-0.58099407 299.20709229]
[-6.39006186 313.03659058]
[-5.73897886 318.17993164]
[-6.99007559 322.62054443]
[-9.56110191 325.75411987]
[-12.71482372 327.29306030]
[-19.06911087 340.88067627]
[-25.42339706 354.46826172]
[-31.77768517 368.05587769]
[-38.13197327 381.64349365]
[-44.48625946 395.23107910]
[-50.84054565 408.81869507]
[-57.19483566 422.40631104]
[-56.03209305 438.18472290]
[-68.43236542 446.43594360]
[-74.78665161 460.02352905]
[-74.59993744 466.60360718]
[-77.34219360 471.55566406]
[-81.49370575 473.88366699]
[-88.20594025 487.29806519]
[-94.91818237 500.71246338]
[-101.63041687 514.12683105]
[-108.34265900 527.54125977]
[-115.05489349 540.95562744]
[-121.76713562 554.36999512]
[-128.47937012 567.78442383]
[-135.19160461 581.19879150]
[-141.81478882 594.65734863]
[-148.34863281 608.15954590]
[-154.88246155 621.66174316]
[-161.41630554 635.16394043]
[-167.95013428 648.66613770]
[-164.16633606 654.30999756]
[-162.31552124 660.79449463]
[-162.54666138 667.48254395]
[-164.80572510 673.72705078]
[-168.84407043 678.93359375]
[-174.24533081 682.61700439]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 39]
[2 38]
[3 37]
[4 36]
[5 35]
[6 34]
[7 33]
[12 32]
[13 31]
[14 30]
[15 29]
[16 27]
[17 26]
[18 25]
[41 230]
[42 229]
[43 228]
[44 227]
[45 226]
[47 225]
[48 224]
[49 223]
[50 222]
[51 221]
[52 220]
[53 219]
[54 218]
[55 217]
[56 214]
[57 213]
[59 211]
[60 210]
[61 209]
[62 208]
[63 207]
[64 206]
[65 205]
[66 204]
[67 200]
[68 199]
[69 198]
[70 197]
[71 196]
[75 192]
[76 191]
[77 190]
[78 189]
[79 188]
[81 187]
[82 186]
[83 91]
[84 90]
[85 89]
[103 118]
[104 117]
[105 116]
[106 115]
[107 114]
[108 113]
[120 151]
[121 150]
[123 148]
[124 147]
[125 146]
[126 145]
[127 144]
[129 142]
[130 141]
[131 140]
[152 185]
[153 184]
[154 183]
[155 182]
[156 181]
[157 180]
[158 179]
[159 178]
[160 177]
[163 176]
[164 175]
[165 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
