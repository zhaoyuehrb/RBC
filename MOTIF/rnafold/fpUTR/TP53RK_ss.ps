%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:06:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCCACAAGAGCCCUUCCUGCAGGGAACCUCAGGCUUCAGAGAGCCGAAAAGUUGGGAGGCGUAACCACUUACAGGCCGGAAGUGUCCGGGGUGGACGCAUUCGGGUAGCCGAAGAAGUCCCAGGAUUGCCGAAGAAGUCCCAGGAUUUCCGAAGCGAGCCGAAGCAUCGCGACAGUUUUCAGAGACAGCUGAUCGGUUGGAGCUGUUGCGCCGAGCAGUC\
) } def
/len { sequence length } bind def

/coor [
[-37.83959961 622.64788818]
[-41.58625031 637.17242432]
[-45.33289719 651.69702148]
[-49.07954407 666.22155762]
[-52.82619095 680.74609375]
[-43.59083939 693.36523438]
[-44.67914581 708.96490479]
[-55.57724380 720.17944336]
[-71.13938141 721.71362305]
[-84.01759338 712.84313965]
[-88.13118744 697.75634766]
[-81.53784943 683.57672119]
[-67.35074615 676.99945068]
[-63.60409546 662.47491455]
[-59.85744858 647.95037842]
[-56.11080170 633.42578125]
[-52.36415482 618.90124512]
[-61.51995468 604.78912354]
[-57.55376053 588.09375000]
[-42.44594574 579.26593018]
[-38.90336609 564.69024658]
[-35.36078644 550.11456299]
[-31.81820869 535.53887939]
[-39.76018524 522.99060059]
[-36.37514114 508.15829468]
[-23.15945053 499.91311646]
[-19.61687279 485.33743286]
[-31.25049019 477.49758911]
[-39.52815247 466.13436890]
[-43.43968201 452.59982300]
[-42.49594116 438.51315308]
[-36.78989029 425.56668091]
[-26.98787308 415.32287598]
[-14.25185585 409.02551270]
[-0.10171793 407.44882202]
[3.64492917 392.92428589]
[7.39157629 378.39971924]
[11.13822365 363.87515259]
[14.88487053 349.35061646]
[18.63151741 334.82604980]
[22.37816429 320.30151367]
[21.08054161 317.82678223]
[20.68028641 314.69131470]
[21.43308258 311.23257446]
[23.46843719 307.87408447]
[26.76362419 305.07925415]
[31.31877518 290.78762817]
[35.87392426 276.49600220]
[40.42907715 262.20437622]
[44.98423004 247.91273499]
[37.94099808 234.83877563]
[42.35697937 220.28013611]
[56.11791229 212.98120117]
[60.67306137 198.68957520]
[65.22821045 184.39794922]
[69.78336334 170.10632324]
[74.33851624 155.81469727]
[56.90649033 143.78060913]
[44.59818268 126.54110718]
[38.87701416 106.14593506]
[40.42322540 85.02002716]
[49.05297089 65.67520142]
[37.72925949 55.83784103]
[26.40555000 46.00048447]
[15.08184052 36.16312790]
[8.68977928 34.53462601]
[4.67616081 30.52798080]
[3.58348989 25.88757515]
[-7.45986509 15.73650074]
[-18.50321960 5.58542585]
[-29.54657364 -4.56564903]
[-40.58992767 -14.71672344]
[-40.98003387 0.27820286]
[-51.76903152 10.69921970]
[-66.76846313 10.56894493]
[-77.37482452 -0.03789644]
[-77.50442505 -15.03733635]
[-67.08291626 -25.82586098]
[-52.08880997 -26.21560478]
[-62.23988724 -37.25896072]
[-72.39096069 -48.30231476]
[-82.54203796 -59.34566879]
[-92.69310760 -70.38902283]
[-108.49430084 -74.77700043]
[-112.33226013 -90.72071838]
[-100.25881958 -101.81864929]
[-84.69409943 -96.65419006]
[-81.64975739 -80.54010010]
[-71.49868011 -69.49674225]
[-61.34760666 -58.45338821]
[-51.19652939 -47.41003418]
[-41.04545593 -36.36668015]
[-30.43885422 -25.76007843]
[-19.39550018 -15.60900402]
[-8.35214520 -5.45792913]
[2.69120979 4.69314575]
[13.73456478 14.84422016]
[24.91919708 24.83941841]
[36.24290848 34.67677689]
[47.56661606 44.51413345]
[58.89032745 54.35149002]
[75.63591766 41.60650635]
[96.26264954 34.99354935]
[95.21163940 20.03041458]
[94.16062927 5.06728029]
[93.10961914 -9.89585400]
[92.05860901 -24.85898781]
[82.44059753 -38.14152527]
[89.38070679 -52.99975586]
[105.73954773 -54.14879990]
[114.68854523 -40.40662384]
[107.02174377 -25.90999794]
[108.07275391 -10.94686413]
[109.12376404 4.01626921]
[110.17477417 18.97940254]
[111.22578430 33.94253540]
[125.63954163 38.09506989]
[134.49032593 25.98459435]
[143.34111023 13.87411785]
[152.19189453 1.76364136]
[161.04267883 -10.34683514]
[169.89346313 -22.45731163]
[178.74424744 -34.56778717]
[176.51748657 -49.98463821]
[185.66595459 -62.14030075]
[200.37728882 -64.16816711]
[209.22807312 -76.27864075]
[218.07885742 -88.38911438]
[226.92964172 -100.49959564]
[235.78042603 -112.61006927]
[230.89878845 -127.33926392]
[235.63912964 -142.11454773]
[248.17871094 -151.25450134]
[263.69577026 -151.24464417]
[276.22372437 -142.08876038]
[280.94528198 -127.30747223]
[276.04495239 -112.58448792]
[263.40695190 -103.58110046]
[247.89089966 -103.75928497]
[239.04011536 -91.64881134]
[230.18933105 -79.53833008]
[221.33854675 -67.42785645]
[212.48777771 -55.31738281]
[215.02316284 -40.68497086]
[206.21972656 -28.27714539]
[190.85472107 -25.71700478]
[182.00393677 -13.60652733]
[173.15315247 -1.49605155]
[164.30236816 10.61442471]
[155.45158386 22.72490120]
[146.60079956 34.83537674]
[137.75001526 46.94585419]
[144.70390320 53.67511368]
[150.50741577 61.28118896]
[155.05603027 69.57343292]
[158.27601624 78.34983063]
[160.12551880 87.40184021]
[175.07244873 86.14108276]
[190.01936340 84.88032532]
[204.96629333 83.61956787]
[219.90400696 82.25402832]
[234.83177185 80.78376770]
[247.83934021 70.79701233]
[262.88635254 77.31767273]
[264.49377441 93.63785553]
[251.00798035 102.96875000]
[236.30203247 95.71154022]
[221.37425232 97.18179321]
[215.03176880 100.96195221]
[206.22705078 98.56649017]
[191.28012085 99.82724762]
[176.33320618 101.08800507]
[161.38627625 102.34876251]
[160.78063965 108.91662598]
[159.47431946 115.38169098]
[157.48240662 121.66944885]
[154.82783508 127.70739746]
[151.54122925 133.42594910]
[147.66046143 138.75915527]
[143.23027039 143.64556885]
[138.30172729 148.02883911]
[132.93164062 151.85844421]
[127.18193817 155.09024048]
[121.11888123 157.68695068]
[114.81237793 159.61866760]
[108.33510590 160.86311340]
[101.76175690 161.40592957]
[95.16809845 161.24087524]
[88.63014221 160.36984253]
[84.07498932 174.66146851]
[79.51983643 188.95309448]
[74.96469116 203.24472046]
[70.40953827 217.53634644]
[77.40872192 231.45213318]
[72.58556366 245.88099670]
[59.27585602 252.46789551]
[54.72070312 266.75952148]
[50.16555405 281.05114746]
[45.61040115 295.34277344]
[41.05525208 309.63439941]
[36.90271759 324.04815674]
[33.15607071 338.57269287]
[29.40942383 353.09725952]
[25.66277695 367.62182617]
[21.91613007 382.14636230]
[18.16948128 396.67092896]
[14.42283535 411.19546509]
[27.33433151 420.78417969]
[35.55620193 434.56143188]
[37.85412598 450.40109253]
[33.90530014 465.87203979]
[24.34344101 478.61114502]
[10.65726948 486.68429565]
[-5.04120255 488.88003540]
[-8.58378124 503.45568848]
[-0.62675309 516.84686279]
[-4.42706776 531.57818604]
[-17.24253845 539.08148193]
[-20.78511810 553.65716553]
[-24.32769775 568.23284912]
[-27.87027550 582.80847168]
[-19.58989906 593.42437744]
[-18.94194603 606.67742920]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 17]
[2 16]
[3 15]
[4 14]
[5 13]
[20 221]
[21 220]
[22 219]
[23 218]
[26 215]
[27 214]
[35 207]
[36 206]
[37 205]
[38 204]
[39 203]
[40 202]
[41 201]
[46 200]
[47 199]
[48 198]
[49 197]
[50 196]
[53 193]
[54 192]
[55 191]
[56 190]
[57 189]
[62 101]
[63 100]
[64 99]
[65 98]
[68 97]
[69 96]
[70 95]
[71 94]
[72 93]
[79 92]
[80 91]
[81 90]
[82 89]
[83 88]
[103 116]
[104 115]
[105 114]
[106 113]
[107 112]
[117 152]
[118 151]
[119 150]
[120 149]
[121 148]
[122 147]
[123 146]
[126 143]
[127 142]
[128 141]
[129 140]
[130 139]
[157 173]
[158 172]
[159 171]
[160 170]
[161 168]
[162 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
