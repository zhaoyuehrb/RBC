%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:31:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGCUGCGGCACCUUUAAGACAAGGGAGGACCCCUCUUGCCCUCGGAGAAACCAGGAAGGGAGUCGCGAGCAUCAUACGGGGCUUUGGCUGUACUGUACAGUUACUGUAGGGGCAGUGACGCCGCCGCCGCCGCGCGAGGGAGCGACCAGGGCAGCGCGACGCGGGCAGAGCGAGCGCCGCGGACCCCGGAGGCGAGCGGCCGAGGGAGCCCAGUCCCAACUUCGGGCCCCGGCCCCGCGCGCCCCGGCCCGG\
CCCCGCGAGGUCUCGGCGCGGAAG\
) } def
/len { sequence length } bind def

/coor [
[286.59432983 75.77225494]
[271.61791992 76.61331177]
[256.64151001 77.45436859]
[241.66511536 78.29542542]
[226.68870544 79.13648224]
[211.71231079 79.97753906]
[199.43888855 88.41629028]
[185.22659302 81.46494293]
[170.25019836 82.30599976]
[155.27378845 83.14705658]
[140.29739380 83.98811340]
[125.32099152 84.82917023]
[138.06503296 120.87254333]
[101.59719849 157.28402710]
[94.93772125 170.72468567]
[88.27825165 184.16534424]
[81.61877441 197.60600281]
[86.90774536 212.49903870]
[80.04131317 226.73376465]
[65.09319305 231.86499023]
[50.93185425 224.84843445]
[45.95896149 209.84690857]
[53.12484360 195.76054382]
[68.17810822 190.94653320]
[74.83758545 177.50585938]
[81.49706268 164.06520081]
[88.15653992 150.62454224]
[78.60815430 139.05612183]
[64.14871216 143.04667664]
[49.68926620 147.03723145]
[35.22982407 151.02778625]
[27.82579994 156.30708313]
[20.58573914 154.98101807]
[6.08243418 158.80908203]
[-8.42087173 162.63716125]
[-22.92417717 166.46522522]
[-28.62084007 180.77795410]
[-41.50240707 188.89698792]
[-56.51713181 187.88603210]
[-67.92095947 178.34188843]
[-82.42427063 182.16996765]
[-90.96843719 197.45672607]
[-107.60231781 201.73059082]
[-121.88307953 192.81405640]
[-136.34251404 196.80461121]
[-150.80195618 200.79516602]
[-165.26141357 204.78572083]
[-179.69822693 208.85733032]
[-194.11199951 213.00985718]
[-197.82298279 226.26104736]
[-207.51274109 235.87928772]
[-220.58242798 239.43518066]
[-233.60002136 236.10556030]
[-243.20149231 226.86096191]
[-257.66091919 230.85151672]
[-266.79702759 244.03906250]
[-282.81277466 244.97468567]
[-293.42227173 232.94064331]
[-290.48681641 217.16842651]
[-276.25823975 209.75714111]
[-261.65148926 216.39207458]
[-247.19203186 212.40151978]
[-241.90510559 196.84109497]
[-228.23989868 187.41561890]
[-211.48356628 188.01315308]
[-198.26452637 198.59609985]
[-183.85076904 194.44357300]
[-178.31568909 189.59178162]
[-169.25195312 190.32627869]
[-154.79251099 186.33572388]
[-140.33306885 182.34516907]
[-125.87362671 178.35461426]
[-121.15885162 166.38796997]
[-110.25656891 159.20414734]
[-97.01197052 159.60449219]
[-86.25233459 167.66665649]
[-71.74903107 163.83859253]
[-66.54076385 149.90977478]
[-53.98075485 141.62060547]
[-38.77032089 142.32490540]
[-26.75224686 151.96192932]
[-12.24894238 148.13385010]
[2.25436378 144.30578613]
[16.75766945 140.47770691]
[31.23927116 136.56834412]
[45.69871521 132.57778931]
[60.15815735 128.58723450]
[74.61759949 124.59667969]
[75.87389374 117.20265198]
[64.32333374 107.63266754]
[78.38648987 102.41458130]
[79.64278412 95.02055359]
[67.31275940 86.47828674]
[54.98272324 77.93601990]
[42.65269470 69.39374542]
[26.18959808 65.34371185]
[25.52391815 48.40283966]
[41.61845779 43.07347488]
[51.19496155 57.06371689]
[63.52499390 65.60598755]
[75.85502625 74.14825439]
[88.18505096 82.69052124]
[98.73198700 72.02458191]
[90.05191803 59.79116821]
[81.37184906 47.55775833]
[72.69178009 35.32434464]
[64.01171112 23.09093094]
[55.33163834 10.85751724]
[46.65156937 -1.37589538]
[37.97150040 -13.60930824]
[22.84841919 -19.95158195]
[21.04814529 -36.25161362]
[34.42264938 -45.74132919]
[49.21338654 -38.65852356]
[50.20491409 -22.28937721]
[58.88498306 -10.05596447]
[67.56505585 2.17744827]
[76.24512482 14.41086102]
[84.92519379 26.64427376]
[93.60526276 38.87768555]
[102.28533173 51.11109924]
[110.96540070 63.34451294]
[124.47993469 69.85276794]
[139.45632935 69.01171112]
[154.43273926 68.17065430]
[169.40913391 67.32959747]
[184.38554382 66.48854065]
[197.73016357 57.98963165]
[210.87124634 65.00113678]
[225.84765625 64.16007996]
[240.82405090 63.31902313]
[255.80046082 62.47796631]
[270.77685547 61.63690948]
[285.75326538 60.79585266]
[300.69287109 59.45126343]
[315.57876587 57.60466385]
[330.46469116 55.75806427]
[345.35058594 53.91146469]
[360.22589111 51.98138809]
[375.09014893 49.96788788]
[389.95437622 47.95438766]
[404.81863403 45.94089127]
[415.75131226 30.43072319]
[434.23733521 27.92208672]
[448.41232300 39.55126953]
[463.22763062 37.20475388]
[478.04296875 34.85823822]
[481.25476074 32.07154083]
[484.82354736 30.57774162]
[488.30645752 30.33240509]
[491.31903076 31.15404510]
[493.57427979 32.75437927]
[508.47994995 31.07491302]
[523.38562012 29.39544487]
[538.29132080 27.71597862]
[530.95208740 12.11318398]
[534.91174316 -8.43679237]
[543.86407471 -20.47236061]
[552.81646729 -32.50793076]
[561.76885986 -44.54349899]
[560.66668701 -57.36816788]
[568.33782959 -67.20155334]
[580.25512695 -69.12454224]
[589.34197998 -81.05891418]
[598.42883301 -92.99327850]
[594.81085205 -108.20658112]
[601.86450195 -122.16297150]
[616.25909424 -128.27265930]
[631.19812012 -123.65084076]
[639.62768555 -110.47980499]
[637.56768799 -94.97850037]
[625.99072266 -84.46617889]
[610.36315918 -83.90642548]
[601.27630615 -71.97206116]
[592.18945312 -60.03769302]
[590.88507080 -42.52021408]
[573.80444336 -35.59112167]
[564.85205078 -23.55555153]
[555.89965820 -11.51998329]
[546.94726562 0.51558614]
[549.66119385 7.50733805]
[555.08905029 21.49084282]
[557.80297852 28.48259354]
[572.53094482 31.32637024]
[587.25891113 34.17014694]
[595.85894775 27.59351349]
[606.43878174 26.82869530]
[615.51245117 31.88696098]
[620.22180176 40.90008545]
[634.88226318 44.07361221]
[649.54272461 47.24713898]
[664.20318604 50.42066574]
[673.21142578 49.17911911]
[679.00982666 53.71291733]
[693.63378906 57.05073166]
[708.25769043 60.38854599]
[722.88159180 63.72636032]
[738.05749512 59.25387573]
[748.74395752 69.62927246]
[763.36785889 72.96708679]
[777.99182129 76.30490112]
[792.61572266 79.64271545]
[803.09423828 68.50053406]
[817.64685059 64.12812805]
[832.33648682 67.60385895]
[843.24108887 77.89682770]
[847.50085449 92.16988373]
[862.12475586 95.50769806]
[876.74865723 98.84551239]
[885.77032471 97.70511627]
[891.51751709 102.30368805]
[906.10308838 105.80536652]
[920.68859863 109.30704498]
[935.27416992 112.80873108]
[949.89807129 116.14654541]
[964.55853271 119.32006836]
[979.21899414 122.49359894]
[994.66058350 116.97184753]
[1006.98651123 127.78862000]
[1003.51696777 143.81654358]
[987.82110596 148.56745911]
[976.04547119 137.15403748]
[961.38500977 133.98051453]
[946.72454834 130.80699158]
[942.32562256 132.57133484]
[936.77392578 131.61900330]
[931.77246094 127.39427948]
[917.18695068 123.89259338]
[902.60137939 120.39091492]
[888.01580811 116.88923645]
[873.41088867 113.46943665]
[858.78692627 110.13162231]
[844.16302490 106.79380798]
[834.13232422 117.80515289]
[819.84161377 122.34746552]
[805.09863281 119.10539246]
[793.88427734 108.85184479]
[789.27789307 94.26663208]
[774.65399170 90.92881775]
[760.03009033 87.59100342]
[745.40612793 84.25318909]
[731.27624512 88.96441650]
[719.54382324 78.35028076]
[704.91986084 75.01246643]
[690.29595947 71.67465210]
[675.67205811 68.33683777]
[661.02960205 65.08111572]
[646.36920166 61.90758896]
[631.70874023 58.73405838]
[617.04827881 55.56053162]
[599.08038330 62.76674271]
[584.41516113 48.89811325]
[569.68719482 46.05433655]
[554.95922852 43.21055984]
[539.97076416 42.62166214]
[525.06512451 44.30112839]
[510.15942383 45.98059464]
[495.25372314 47.66006470]
[480.38949585 49.67356110]
[465.57415771 52.02008057]
[450.75885010 54.36659622]
[446.23718262 64.79037476]
[437.16210938 71.82431793]
[425.70373535 73.64080811]
[414.67300415 69.67771149]
[406.83212280 60.80513763]
[391.96789551 62.81863403]
[377.10363770 64.83213043]
[362.23937988 66.84563446]
[356.05792236 70.84141541]
[347.19717407 68.79737091]
[332.31127930 70.64396667]
[317.42538452 72.49057007]
[302.53948975 74.33716583]
[313.85156250 84.18787384]
[314.98895264 99.14469147]
[305.29647827 110.59266663]
[290.35690308 111.93788910]
[278.77526855 102.40554047]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 134]
[2 133]
[3 132]
[4 131]
[5 130]
[6 129]
[8 127]
[9 126]
[10 125]
[11 124]
[12 123]
[14 27]
[15 26]
[16 25]
[17 24]
[28 88]
[29 87]
[30 86]
[31 85]
[33 84]
[34 83]
[35 82]
[36 81]
[40 77]
[41 76]
[44 72]
[45 71]
[46 70]
[47 69]
[48 67]
[49 66]
[54 62]
[55 61]
[92 102]
[93 101]
[94 100]
[95 99]
[103 122]
[104 121]
[105 120]
[106 119]
[107 118]
[108 117]
[109 116]
[110 115]
[135 274]
[136 273]
[137 272]
[138 271]
[139 269]
[140 268]
[141 267]
[142 266]
[145 261]
[146 260]
[147 259]
[152 258]
[153 257]
[154 256]
[155 255]
[157 180]
[158 179]
[159 178]
[160 177]
[163 175]
[164 174]
[165 173]
[183 254]
[184 253]
[185 252]
[189 250]
[190 249]
[191 248]
[192 247]
[194 246]
[195 245]
[196 244]
[197 243]
[199 241]
[200 240]
[201 239]
[202 238]
[207 233]
[208 232]
[209 231]
[211 230]
[212 229]
[213 228]
[214 227]
[215 224]
[216 223]
[217 222]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
