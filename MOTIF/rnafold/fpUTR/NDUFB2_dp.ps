%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:51:21 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NDUFB2)
} def

/sequence { (\
CGCCGGGGAAGCGAAGUAGGCAGGGGCGAGGCGGCUGGGGACCGCGGGGCGGACGGGAGCGAGU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 13 0.040221415 ubox
1 28 0.699485344 ubox
1 33 0.611756756 ubox
1 37 0.031626576 ubox
1 46 0.043576835 ubox
1 51 0.169849325 ubox
1 55 0.112608743 ubox
1 61 0.056345762 ubox
2 12 0.041004287 ubox
2 17 0.004182874 ubox
2 21 0.095331312 ubox
2 27 0.713008505 ubox
2 32 0.620326066 ubox
2 35 0.110449317 ubox
2 36 0.006684172 ubox
2 45 0.044138890 ubox
2 50 0.172166117 ubox
2 54 0.114070160 ubox
2 60 0.056515764 ubox
2 64 0.005559291 ubox
3 11 0.040956537 ubox
3 16 0.004292751 ubox
3 20 0.095440470 ubox
3 24 0.006415777 ubox
3 25 0.026390732 ubox
3 26 0.712648784 ubox
3 31 0.620302116 ubox
3 34 0.110903999 ubox
3 38 0.076348729 ubox
3 39 0.107749924 ubox
3 40 0.026225693 ubox
3 44 0.031781831 ubox
3 47 0.112906391 ubox
3 48 0.014303577 ubox
3 49 0.170042888 ubox
3 52 0.117446799 ubox
3 56 0.063285172 ubox
3 57 0.010789761 ubox
3 59 0.047496520 ubox
3 63 0.005825979 ubox
4 13 0.030983648 ubox
4 19 0.095342570 ubox
4 23 0.006800993 ubox
4 24 0.035571620 ubox
4 25 0.711996359 ubox
4 28 0.085440216 ubox
4 30 0.613963580 ubox
4 33 0.111114594 ubox
4 37 0.077345178 ubox
4 38 0.109082717 ubox
4 39 0.026144386 ubox
4 44 0.033131600 ubox
4 46 0.116582313 ubox
4 47 0.014152776 ubox
4 48 0.167039469 ubox
4 51 0.117530836 ubox
4 55 0.068789007 ubox
4 56 0.011985559 ubox
4 61 0.005770064 ubox
5 12 0.063040937 ubox
5 27 0.194113398 ubox
5 32 0.110785357 ubox
5 36 0.076820240 ubox
5 43 0.051206098 ubox
5 45 0.129078187 ubox
5 50 0.114955541 ubox
5 54 0.068496706 ubox
5 60 0.005483366 ubox
6 35 0.076594616 ubox
6 36 0.106896568 ubox
6 42 0.051181975 ubox
6 43 0.057121268 ubox
7 35 0.106311929 ubox
7 36 0.034155641 ubox
7 42 0.057210556 ubox
7 43 0.120928729 ubox
8 35 0.038387386 ubox
8 42 0.120374307 ubox
10 36 0.097019269 ubox
11 17 0.088236708 ubox
11 21 0.843728171 ubox
11 27 0.348296262 ubox
11 32 0.137639170 ubox
11 35 0.098712407 ubox
11 45 0.173933485 ubox
11 50 0.042386704 ubox
11 60 0.004569616 ubox
12 16 0.089682034 ubox
12 20 0.844911341 ubox
12 26 0.348323717 ubox
12 28 0.011395904 ubox
12 31 0.137678179 ubox
12 33 0.019837441 ubox
12 34 0.096951498 ubox
12 37 0.028525725 ubox
12 44 0.173977322 ubox
12 46 0.016517665 ubox
12 49 0.042396056 ubox
12 51 0.004314303 ubox
12 59 0.004575131 ubox
13 27 0.011333112 ubox
13 32 0.026825316 ubox
13 36 0.023225119 ubox
13 43 0.170238282 ubox
13 45 0.016567824 ubox
13 50 0.004271479 ubox
15 36 0.056529851 ubox
16 27 0.137761864 ubox
16 32 0.062437749 ubox
16 35 0.057414890 ubox
16 42 0.163489710 ubox
16 45 0.039911477 ubox
16 54 0.005761535 ubox
16 60 0.009148705 ubox
17 26 0.137277700 ubox
17 31 0.061599304 ubox
17 34 0.056956443 ubox
17 37 0.007490007 ubox
17 41 0.163940299 ubox
17 44 0.037488025 ubox
17 53 0.005705298 ubox
17 59 0.008955085 ubox
18 36 0.007499955 ubox
19 35 0.007195700 ubox
19 36 0.022047583 ubox
19 43 0.041524401 ubox
20 27 0.186331236 ubox
20 32 0.052500586 ubox
20 35 0.022344824 ubox
20 42 0.041676479 ubox
20 45 0.008436847 ubox
20 50 0.004102198 ubox
20 60 0.008391923 ubox
21 26 0.186119521 ubox
21 31 0.052480695 ubox
21 34 0.022356044 ubox
21 37 0.169156472 ubox
21 44 0.008415833 ubox
21 49 0.004099587 ubox
21 59 0.008386122 ubox
22 36 0.167680382 ubox
23 35 0.165512850 ubox
23 36 0.009462635 ubox
23 43 0.010114931 ubox
24 35 0.011331807 ubox
24 36 0.045848144 ubox
24 42 0.010145060 ubox
25 35 0.048784551 ubox
25 36 0.096479831 ubox
26 32 0.160850995 ubox
26 35 0.101953771 ubox
26 45 0.003602496 ubox
26 50 0.089995148 ubox
26 60 0.005647524 ubox
26 64 0.034189957 ubox
27 31 0.159914684 ubox
27 33 0.054643812 ubox
27 34 0.102454491 ubox
27 37 0.003392457 ubox
27 44 0.003600555 ubox
27 46 0.004611868 ubox
27 49 0.090319963 ubox
27 51 0.010811695 ubox
27 59 0.005647591 ubox
27 63 0.036210536 ubox
28 32 0.051568470 ubox
28 43 0.003485881 ubox
28 50 0.011569345 ubox
29 36 0.019737873 ubox
30 35 0.020278299 ubox
31 45 0.221234400 ubox
31 50 0.012190134 ubox
31 60 0.459864936 ubox
31 64 0.298549510 ubox
32 44 0.221438567 ubox
32 46 0.003764768 ubox
32 49 0.012197504 ubox
32 51 0.009156147 ubox
32 55 0.008053934 ubox
32 59 0.460160166 ubox
32 61 0.140282651 ubox
32 63 0.315887768 ubox
33 43 0.221449266 ubox
33 45 0.003172239 ubox
33 50 0.009250640 ubox
33 54 0.008070442 ubox
33 60 0.104095616 ubox
34 42 0.220932504 ubox
34 45 0.016174050 ubox
34 50 0.005068251 ubox
34 60 0.796342747 ubox
34 64 0.028874539 ubox
35 44 0.016061156 ubox
35 47 0.014403469 ubox
35 48 0.008352799 ubox
35 49 0.005104608 ubox
35 52 0.008525708 ubox
35 56 0.455970299 ubox
35 57 0.076353892 ubox
35 59 0.802946077 ubox
35 63 0.030585716 ubox
36 44 0.007948987 ubox
36 46 0.014786570 ubox
36 47 0.007410914 ubox
36 48 0.004805282 ubox
36 51 0.008668992 ubox
36 55 0.455747660 ubox
36 56 0.075840925 ubox
36 58 0.797120038 ubox
36 61 0.013917809 ubox
36 62 0.029581832 ubox
37 43 0.020366730 ubox
37 45 0.015252723 ubox
37 50 0.008660771 ubox
37 54 0.450953575 ubox
37 60 0.020520342 ubox
38 42 0.020141095 ubox
41 64 0.024083156 ubox
42 48 0.037150986 ubox
42 49 0.169340460 ubox
42 52 0.925806713 ubox
42 56 0.027409920 ubox
42 57 0.036789720 ubox
42 63 0.026332268 ubox
43 47 0.036923990 ubox
43 48 0.169590155 ubox
43 51 0.929024660 ubox
43 55 0.027418526 ubox
43 56 0.036828740 ubox
43 61 0.034449939 ubox
44 50 0.928916997 ubox
44 54 0.026837930 ubox
44 60 0.034638034 ubox
44 64 0.010095308 ubox
45 49 0.922172563 ubox
45 51 0.016317800 ubox
45 55 0.037130797 ubox
45 59 0.034579897 ubox
45 63 0.011232618 ubox
46 50 0.015833337 ubox
46 54 0.038356778 ubox
46 60 0.003635522 ubox
49 60 0.198925738 ubox
49 64 0.024500308 ubox
50 59 0.199099346 ubox
50 61 0.064432470 ubox
50 63 0.025910981 ubox
51 60 0.066327953 ubox
53 64 0.070962760 ubox
54 61 0.189517856 ubox
54 63 0.077456652 ubox
55 60 0.192469718 ubox
1 33 0.9500000 lbox
2 32 0.9500000 lbox
3 31 0.9500000 lbox
4 30 0.9500000 lbox
11 21 0.9500000 lbox
12 20 0.9500000 lbox
34 60 0.9500000 lbox
35 59 0.9500000 lbox
36 58 0.9500000 lbox
42 52 0.9500000 lbox
43 51 0.9500000 lbox
44 50 0.9500000 lbox
45 49 0.9500000 lbox
showpage
end
%%EOF
