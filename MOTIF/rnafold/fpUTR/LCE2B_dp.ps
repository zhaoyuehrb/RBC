%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:44:40 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (LCE2B)
} def

/sequence { (\
CAGGGACGUGUCUGUGCUCCUGCGUGUGACCAGGGUUGACUAAACUCUGCCAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.014887876 ubox
1 14 0.207798777 ubox
1 16 0.206564855 ubox
1 22 0.454711062 ubox
1 26 0.035405588 ubox
1 28 0.024448083 ubox
1 49 0.745098869 ubox
2 9 0.015748910 ubox
2 13 0.209926345 ubox
2 15 0.210080410 ubox
2 18 0.018038775 ubox
2 21 0.460358790 ubox
2 25 0.035206970 ubox
2 27 0.024184722 ubox
2 46 0.004313355 ubox
2 48 0.755330140 ubox
3 12 0.210135055 ubox
3 13 0.012314910 ubox
3 17 0.016514793 ubox
3 18 0.219676423 ubox
3 19 0.050973213 ubox
3 20 0.458469605 ubox
3 21 0.126655891 ubox
3 31 0.008763547 ubox
3 45 0.004610525 ubox
3 46 0.009064389 ubox
3 47 0.756502573 ubox
3 48 0.008075357 ubox
3 51 0.114800538 ubox
4 11 0.196562894 ubox
4 12 0.014014483 ubox
4 13 0.210950639 ubox
4 17 0.234685454 ubox
4 18 0.058985618 ubox
4 19 0.455202503 ubox
4 20 0.141966356 ubox
4 30 0.009120570 ubox
4 31 0.005101080 ubox
4 45 0.036035411 ubox
4 46 0.754706832 ubox
4 47 0.009100388 ubox
4 48 0.020711075 ubox
4 50 0.114412761 ubox
4 51 0.096583024 ubox
5 11 0.012520744 ubox
5 12 0.212063170 ubox
5 17 0.269688312 ubox
5 18 0.333152080 ubox
5 19 0.148012632 ubox
5 30 0.005349543 ubox
5 45 0.752211806 ubox
5 46 0.007757795 ubox
5 47 0.026339502 ubox
5 50 0.096512718 ubox
6 11 0.187971040 ubox
6 15 0.399543238 ubox
6 18 0.152673060 ubox
6 25 0.031252650 ubox
6 27 0.014898546 ubox
6 46 0.026209650 ubox
7 14 0.404659661 ubox
7 16 0.283225749 ubox
7 24 0.032156909 ubox
7 26 0.015376687 ubox
7 28 0.004033722 ubox
7 49 0.014362159 ubox
8 13 0.286227019 ubox
8 15 0.213228465 ubox
8 17 0.187317879 ubox
8 23 0.032143497 ubox
8 25 0.014655388 ubox
8 27 0.003804560 ubox
8 30 0.020375613 ubox
8 40 0.010204169 ubox
8 45 0.032023445 ubox
8 48 0.007924746 ubox
8 50 0.004980279 ubox
9 14 0.075004174 ubox
9 16 0.183844132 ubox
9 22 0.031751465 ubox
9 24 0.011446877 ubox
9 29 0.020048214 ubox
9 32 0.003184552 ubox
9 39 0.009780563 ubox
9 42 0.054706932 ubox
9 44 0.032986336 ubox
10 15 0.090984765 ubox
10 17 0.040760180 ubox
10 21 0.019929896 ubox
10 23 0.011976312 ubox
10 30 0.204627705 ubox
10 31 0.003416706 ubox
10 40 0.755722428 ubox
10 41 0.014087757 ubox
10 45 0.010163684 ubox
11 16 0.038180616 ubox
11 22 0.011540877 ubox
11 29 0.205637831 ubox
11 39 0.756582698 ubox
11 44 0.009784242 ubox
11 54 0.020042737 ubox
12 28 0.205677003 ubox
12 38 0.755137609 ubox
12 53 0.032498471 ubox
13 24 0.012226644 ubox
13 26 0.122217391 ubox
13 34 0.003817432 ubox
13 38 0.016871401 ubox
13 42 0.005515448 ubox
13 52 0.032542626 ubox
14 23 0.013431396 ubox
14 25 0.128437316 ubox
14 27 0.012699388 ubox
14 30 0.005685212 ubox
14 36 0.079916567 ubox
14 37 0.091950233 ubox
14 40 0.020862513 ubox
14 51 0.032380457 ubox
15 22 0.013180919 ubox
15 24 0.206701700 ubox
15 26 0.021137221 ubox
15 28 0.012288920 ubox
15 29 0.005442180 ubox
15 32 0.004591507 ubox
15 35 0.025641111 ubox
15 38 0.007428824 ubox
15 39 0.020286292 ubox
16 21 0.006995974 ubox
16 23 0.246025704 ubox
16 25 0.026796681 ubox
16 27 0.023862702 ubox
16 31 0.004649303 ubox
16 36 0.703871733 ubox
16 37 0.061101323 ubox
16 50 0.016882031 ubox
17 22 0.246026401 ubox
17 24 0.027379448 ubox
17 26 0.024995983 ubox
17 33 0.003275626 ubox
17 34 0.005517217 ubox
17 35 0.716403365 ubox
17 49 0.016557514 ubox
18 29 0.008937760 ubox
18 34 0.089236514 ubox
18 35 0.228536369 ubox
19 28 0.009794416 ubox
19 33 0.063779325 ubox
19 34 0.752547111 ubox
19 35 0.010875516 ubox
19 53 0.004974320 ubox
19 54 0.345279898 ubox
20 33 0.755312068 ubox
20 34 0.009934007 ubox
20 53 0.354782301 ubox
20 54 0.005510242 ubox
21 32 0.757699663 ubox
21 33 0.008764992 ubox
21 52 0.354677409 ubox
21 53 0.005477207 ubox
22 31 0.757451984 ubox
22 50 0.035554601 ubox
22 51 0.352638548 ubox
23 49 0.045326052 ubox
24 30 0.665597869 ubox
24 48 0.022911262 ubox
24 50 0.300512999 ubox
25 29 0.599783534 ubox
25 32 0.008146640 ubox
25 49 0.161358358 ubox
25 52 0.073538268 ubox
26 31 0.013962809 ubox
26 45 0.007750076 ubox
26 48 0.035843417 ubox
26 50 0.070111318 ubox
26 51 0.081131898 ubox
27 44 0.007715223 ubox
27 49 0.037731405 ubox
27 52 0.247646805 ubox
28 37 0.004216363 ubox
28 47 0.015698163 ubox
28 48 0.008822869 ubox
28 51 0.274134443 ubox
29 36 0.004396292 ubox
29 46 0.014699275 ubox
30 35 0.004396521 ubox
30 54 0.060010102 ubox
31 49 0.621807216 ubox
31 53 0.057870764 ubox
32 41 0.010899799 ubox
32 48 0.647642130 ubox
33 40 0.011261277 ubox
33 41 0.010356192 ubox
33 47 0.649717057 ubox
33 48 0.005776898 ubox
33 51 0.008034032 ubox
34 40 0.010714923 ubox
34 41 0.008039245 ubox
34 46 0.649378221 ubox
34 47 0.006112564 ubox
34 50 0.007524455 ubox
34 51 0.050896999 ubox
35 40 0.008129824 ubox
35 45 0.649980777 ubox
35 50 0.051346662 ubox
36 43 0.013722802 ubox
36 44 0.649209126 ubox
36 49 0.049900234 ubox
37 42 0.017283634 ubox
37 43 0.643853496 ubox
38 47 0.051052960 ubox
39 46 0.047826315 ubox
45 53 0.003637323 ubox
46 52 0.003500934 ubox
47 53 0.004496662 ubox
48 52 0.004101410 ubox
48 53 0.003326089 ubox
1 49 0.9500000 lbox
2 48 0.9500000 lbox
3 47 0.9500000 lbox
4 46 0.9500000 lbox
5 45 0.9500000 lbox
10 40 0.9500000 lbox
11 39 0.9500000 lbox
12 38 0.9500000 lbox
16 36 0.9500000 lbox
17 35 0.9500000 lbox
19 34 0.9500000 lbox
20 33 0.9500000 lbox
21 32 0.9500000 lbox
22 31 0.9500000 lbox
24 30 0.9500000 lbox
25 29 0.9500000 lbox
showpage
end
%%EOF
