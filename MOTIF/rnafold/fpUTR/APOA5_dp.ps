%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:15:21 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (APOA5)
} def

/sequence { (\
AUAAAGCAGAAUGUCUGCUCUCUGUGCCCAGACGUGAGCAGGCCUCCCUCCACCUGUCUUCUCAGAGCAGGUA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.035706792 ubox
1 14 0.003771342 ubox
2 11 0.037843480 ubox
2 13 0.004608662 ubox
2 24 0.003393675 ubox
2 73 0.006887105 ubox
3 12 0.014117964 ubox
3 23 0.003397194 ubox
3 72 0.005150141 ubox
5 19 0.030338941 ubox
5 45 0.067593494 ubox
5 49 0.277229998 ubox
6 14 0.025053455 ubox
6 18 0.032215911 ubox
6 39 0.008674904 ubox
6 43 0.012611186 ubox
6 44 0.071447305 ubox
6 48 0.292564571 ubox
6 68 0.004762388 ubox
6 72 0.005289509 ubox
7 13 0.027027964 ubox
7 17 0.032251533 ubox
7 38 0.008671372 ubox
7 42 0.012624909 ubox
7 67 0.004762300 ubox
7 71 0.004893988 ubox
8 12 0.023188972 ubox
8 16 0.032287670 ubox
8 45 0.188761520 ubox
8 49 0.249042525 ubox
9 15 0.032296313 ubox
9 44 0.199735849 ubox
9 46 0.578773032 ubox
9 48 0.264713322 ubox
9 50 0.142860492 ubox
10 14 0.028103803 ubox
10 45 0.569485339 ubox
10 49 0.140519361 ubox
11 35 0.008986029 ubox
12 34 0.009055214 ubox
12 73 0.004758765 ubox
13 33 0.009087052 ubox
13 43 0.995320847 ubox
13 72 0.003538540 ubox
14 32 0.009086514 ubox
14 42 0.997238548 ubox
14 71 0.005753503 ubox
15 31 0.009087029 ubox
15 41 0.999306170 ubox
15 70 0.007563640 ubox
16 30 0.008784040 ubox
16 40 0.999153106 ubox
16 69 0.007573462 ubox
17 27 0.006054201 ubox
17 29 0.006614648 ubox
17 39 0.999399034 ubox
17 68 0.007577273 ubox
18 26 0.006739003 ubox
18 38 0.999387464 ubox
18 67 0.007555594 ubox
19 37 0.999127574 ubox
19 66 0.007466400 ubox
20 36 0.998393198 ubox
20 38 0.016566141 ubox
20 42 0.003240762 ubox
20 65 0.007402903 ubox
20 67 0.009906275 ubox
20 70 0.003958074 ubox
21 32 0.869531985 ubox
21 37 0.019178822 ubox
21 42 0.010933248 ubox
21 64 0.004847249 ubox
21 66 0.010125037 ubox
21 69 0.003947479 ubox
21 71 0.005549510 ubox
22 31 0.877060372 ubox
22 36 0.020717693 ubox
22 41 0.014630968 ubox
22 42 0.004603232 ubox
22 65 0.010185502 ubox
22 67 0.004083884 ubox
22 70 0.007213328 ubox
23 30 0.876484769 ubox
23 34 0.453731296 ubox
23 40 0.014475852 ubox
23 41 0.004239826 ubox
23 64 0.010235491 ubox
23 66 0.004073927 ubox
23 69 0.007220952 ubox
24 29 0.870328353 ubox
24 33 0.473232706 ubox
24 35 0.006167965 ubox
24 39 0.014323376 ubox
24 63 0.010284235 ubox
24 68 0.007222162 ubox
25 32 0.470564858 ubox
25 34 0.010459263 ubox
25 38 0.014021999 ubox
25 40 0.011912572 ubox
25 64 0.004271266 ubox
25 67 0.007168601 ubox
26 33 0.012841006 ubox
26 35 0.022299071 ubox
26 39 0.015025498 ubox
26 43 0.003517803 ubox
26 63 0.004483079 ubox
27 34 0.022419352 ubox
27 38 0.015065067 ubox
27 42 0.003523483 ubox
28 41 0.003513261 ubox
29 36 0.017929353 ubox
30 35 0.017279379 ubox
30 59 0.010852338 ubox
30 62 0.006034671 ubox
31 58 0.011249146 ubox
31 61 0.006233306 ubox
32 57 0.011243627 ubox
32 60 0.005961029 ubox
33 56 0.011154104 ubox
34 53 0.010234079 ubox
34 55 0.004898435 ubox
35 52 0.010623293 ubox
35 64 0.005091585 ubox
36 46 0.005245352 ubox
36 50 0.007325716 ubox
36 51 0.010447970 ubox
36 58 0.005324726 ubox
36 60 0.003549681 ubox
36 63 0.005921814 ubox
37 45 0.005266572 ubox
37 49 0.007850219 ubox
37 57 0.004533840 ubox
37 59 0.004499224 ubox
37 62 0.005912962 ubox
38 44 0.005232009 ubox
38 48 0.007721282 ubox
38 57 0.005122988 ubox
38 58 0.004567964 ubox
38 61 0.005587649 ubox
39 56 0.008840237 ubox
40 49 0.020290057 ubox
40 55 0.008857021 ubox
40 59 0.004588884 ubox
41 47 0.009152917 ubox
41 48 0.022128361 ubox
41 51 0.007890718 ubox
41 54 0.008862052 ubox
41 58 0.004681627 ubox
42 46 0.009204620 ubox
42 47 0.022003076 ubox
42 50 0.007982643 ubox
42 53 0.008833274 ubox
42 57 0.004674251 ubox
42 72 0.003574156 ubox
43 56 0.004670006 ubox
43 71 0.003701078 ubox
44 70 0.003793163 ubox
45 69 0.003671551 ubox
47 71 0.018210774 ubox
48 67 0.004308561 ubox
48 70 0.018308988 ubox
49 66 0.004322332 ubox
49 69 0.017741520 ubox
50 65 0.003748631 ubox
50 71 0.004357003 ubox
51 70 0.004243679 ubox
52 72 0.951334444 ubox
53 71 0.999209091 ubox
54 65 0.020215159 ubox
54 70 0.999642517 ubox
55 64 0.020485939 ubox
55 69 0.999372077 ubox
56 63 0.020489123 ubox
56 68 0.998410243 ubox
57 66 0.570917488 ubox
57 67 0.460930954 ubox
58 65 0.670826426 ubox
58 67 0.672912883 ubox
59 64 0.613067638 ubox
59 65 0.125586356 ubox
59 66 0.671063776 ubox
59 67 0.042860162 ubox
60 64 0.104205889 ubox
60 65 0.618062257 ubox
60 66 0.158428297 ubox
61 65 0.175430069 ubox
61 67 0.011807112 ubox
62 66 0.012546216 ubox
13 43 0.9500000 lbox
14 42 0.9500000 lbox
15 41 0.9500000 lbox
16 40 0.9500000 lbox
17 39 0.9500000 lbox
18 38 0.9500000 lbox
19 37 0.9500000 lbox
20 36 0.9500000 lbox
21 32 0.9500000 lbox
22 31 0.9500000 lbox
23 30 0.9500000 lbox
24 29 0.9500000 lbox
52 72 0.9500000 lbox
53 71 0.9500000 lbox
54 70 0.9500000 lbox
55 69 0.9500000 lbox
56 68 0.9500000 lbox
58 67 0.9500000 lbox
59 66 0.9500000 lbox
60 65 0.9500000 lbox
showpage
end
%%EOF
