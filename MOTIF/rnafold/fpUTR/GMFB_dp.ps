%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:12:56 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GMFB)
} def

/sequence { (\
CGACUGGGCCAGGCGCCGGGGCAGGAAGGGAGGCGGCCGCCGUGCCAUUCUUAAAGGCGCCCGAGUGUAGGCGACAGGCCGCUGACGGCCGGAAGGAAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 67 0.004029224 ubox
1 73 0.258079001 ubox
1 81 0.014942505 ubox
1 91 0.127887661 ubox
2 72 0.253831251 ubox
2 80 0.016013708 ubox
2 90 0.122167286 ubox
3 66 0.015700149 ubox
4 12 0.008975474 ubox
4 65 0.016413155 ubox
4 70 0.270037756 ubox
4 71 0.018564484 ubox
4 77 0.413814452 ubox
4 78 0.008127591 ubox
4 88 0.008172957 ubox
4 92 0.084053967 ubox
4 95 0.109056430 ubox
4 96 0.047293769 ubox
5 11 0.009004713 ubox
5 64 0.016321274 ubox
5 69 0.273479213 ubox
5 70 0.013319468 ubox
5 73 0.017859244 ubox
5 76 0.695116787 ubox
5 77 0.007929048 ubox
5 87 0.008176443 ubox
5 91 0.080120453 ubox
5 94 0.103776064 ubox
5 95 0.041759694 ubox
6 10 0.008870451 ubox
6 68 0.272950543 ubox
6 72 0.006498065 ubox
6 75 0.732059888 ubox
6 86 0.008103517 ubox
6 90 0.053174183 ubox
7 46 0.003759919 ubox
7 62 0.016119187 ubox
7 80 0.004003114 ubox
7 89 0.039347627 ubox
7 90 0.071174062 ubox
8 45 0.003824549 ubox
8 61 0.011412217 ubox
8 66 0.273444312 ubox
8 68 0.003278816 ubox
8 72 0.956664159 ubox
8 79 0.004016153 ubox
8 82 0.003313066 ubox
8 89 0.077078903 ubox
9 44 0.003841952 ubox
9 65 0.273055873 ubox
9 67 0.003293966 ubox
9 71 0.957741610 ubox
9 78 0.004021556 ubox
9 81 0.003308027 ubox
9 88 0.082516803 ubox
9 92 0.008570103 ubox
9 96 0.006246617 ubox
10 70 0.957216393 ubox
10 77 0.004015647 ubox
10 84 0.009113956 ubox
10 87 0.082153612 ubox
10 91 0.008581540 ubox
10 95 0.006259904 ubox
11 66 0.003669278 ubox
11 83 0.013730876 ubox
12 41 0.004898517 ubox
12 61 0.258446002 ubox
12 62 0.113066914 ubox
12 82 0.013762098 ubox
12 83 0.012418692 ubox
13 40 0.004902244 ubox
13 60 0.271293930 ubox
13 61 0.079976727 ubox
13 66 0.014329498 ubox
13 68 0.956134828 ubox
13 82 0.012464118 ubox
14 39 0.004900952 ubox
14 59 0.282826390 ubox
14 65 0.014442715 ubox
14 67 0.958807375 ubox
14 73 0.003342527 ubox
14 81 0.012143790 ubox
15 37 0.003466331 ubox
15 38 0.003464706 ubox
15 58 0.282842169 ubox
15 66 0.958576061 ubox
15 72 0.003358102 ubox
16 36 0.004900869 ubox
16 57 0.282845818 ubox
16 65 0.958815053 ubox
16 71 0.003357480 ubox
17 35 0.004900977 ubox
17 56 0.282749958 ubox
17 63 0.948203089 ubox
18 34 0.004854171 ubox
18 46 0.005951635 ubox
18 49 0.007534656 ubox
18 50 0.010224725 ubox
18 51 0.014349882 ubox
18 52 0.009656112 ubox
18 61 0.032898114 ubox
18 62 0.948091442 ubox
19 45 0.005953308 ubox
19 48 0.006963538 ubox
19 49 0.008478429 ubox
19 50 0.014486537 ubox
19 51 0.009877124 ubox
19 52 0.007987348 ubox
19 60 0.042320282 ubox
19 61 0.947487371 ubox
19 62 0.141233835 ubox
20 41 0.008392990 ubox
20 46 0.046484956 ubox
20 49 0.004412738 ubox
20 50 0.009720936 ubox
20 51 0.006975731 ubox
20 52 0.022832533 ubox
20 60 0.946357276 ubox
20 61 0.142881886 ubox
21 40 0.008410148 ubox
21 43 0.005998725 ubox
21 45 0.046604514 ubox
21 48 0.003419259 ubox
21 49 0.008903257 ubox
21 50 0.006540564 ubox
21 51 0.009151432 ubox
21 58 0.946207080 ubox
21 60 0.144468455 ubox
22 39 0.008387818 ubox
22 42 0.005997600 ubox
22 44 0.046605300 ubox
22 57 0.946568529 ubox
22 59 0.145959403 ubox
23 43 0.044886194 ubox
23 49 0.003265374 ubox
23 51 0.222830620 ubox
23 52 0.548693277 ubox
24 38 0.007534674 ubox
24 41 0.042745645 ubox
24 46 0.011544328 ubox
24 50 0.227055022 ubox
24 51 0.575658356 ubox
24 52 0.011163701 ubox
25 37 0.007520309 ubox
25 40 0.042676467 ubox
25 45 0.011558450 ubox
25 49 0.226215491 ubox
25 50 0.580861908 ubox
25 52 0.043298324 ubox
26 48 0.224325183 ubox
26 49 0.579997176 ubox
26 51 0.031167280 ubox
26 52 0.680737769 ubox
27 48 0.536114774 ubox
27 49 0.011109629 ubox
27 51 0.693802641 ubox
27 52 0.301700574 ubox
28 38 0.042415105 ubox
28 41 0.003348495 ubox
28 46 0.466228426 ubox
28 48 0.013271895 ubox
28 49 0.003771302 ubox
28 50 0.695302449 ubox
28 51 0.340464584 ubox
28 52 0.062732050 ubox
29 37 0.042392779 ubox
29 38 0.020280392 ubox
29 40 0.003326942 ubox
29 41 0.012863093 ubox
29 45 0.466486520 ubox
29 46 0.410755918 ubox
29 48 0.009244407 ubox
29 49 0.690787820 ubox
29 50 0.344335480 ubox
29 51 0.072201788 ubox
30 37 0.020317368 ubox
30 40 0.012909325 ubox
30 45 0.411967176 ubox
30 48 0.682569052 ubox
30 49 0.344292029 ubox
30 50 0.073283155 ubox
30 52 0.009137134 ubox
31 48 0.342876169 ubox
31 49 0.072152449 ubox
31 51 0.009285941 ubox
32 38 0.013459259 ubox
32 41 0.505668339 ubox
32 46 0.773730483 ubox
32 48 0.060282468 ubox
32 49 0.006137320 ubox
32 50 0.009276253 ubox
33 37 0.013271369 ubox
33 40 0.506069773 ubox
33 43 0.369138364 ubox
33 45 0.773454685 ubox
33 48 0.013151329 ubox
33 49 0.008134672 ubox
34 39 0.505340192 ubox
34 42 0.380768653 ubox
34 44 0.767919062 ubox
35 41 0.427381466 ubox
35 43 0.657622696 ubox
35 46 0.073629519 ubox
36 40 0.421811134 ubox
36 43 0.287208631 ubox
36 45 0.073769859 ubox
37 42 0.406337912 ubox
37 44 0.073338039 ubox
38 44 0.006085343 ubox
39 43 0.006049004 ubox
42 60 0.010171748 ubox
43 59 0.010722938 ubox
44 58 0.021774368 ubox
45 57 0.021792629 ubox
46 56 0.021773627 ubox
48 54 0.007958227 ubox
48 55 0.007753933 ubox
49 53 0.006930371 ubox
49 54 0.006897816 ubox
50 56 0.004684665 ubox
51 55 0.004381246 ubox
58 73 0.004660937 ubox
59 72 0.004837497 ubox
60 71 0.004819980 ubox
61 70 0.004800013 ubox
61 92 0.004585565 ubox
62 73 0.005375072 ubox
62 84 0.011615342 ubox
62 87 0.003342157 ubox
62 91 0.005287765 ubox
63 72 0.005403723 ubox
63 83 0.006460659 ubox
63 86 0.008368798 ubox
63 90 0.005290623 ubox
64 83 0.022259802 ubox
65 72 0.004711698 ubox
65 75 0.003535314 ubox
65 82 0.023408314 ubox
65 86 0.033286881 ubox
66 71 0.004671589 ubox
66 74 0.003473600 ubox
66 76 0.004511551 ubox
66 81 0.023248204 ubox
66 85 0.032913072 ubox
66 87 0.005568104 ubox
67 75 0.006502558 ubox
67 80 0.007164905 ubox
67 82 0.019496913 ubox
67 86 0.044010874 ubox
68 74 0.006364277 ubox
68 81 0.018287582 ubox
68 84 0.005047054 ubox
68 85 0.039561181 ubox
69 83 0.005827588 ubox
70 80 0.064682556 ubox
70 82 0.003797083 ubox
70 83 0.048240864 ubox
70 90 0.004545746 ubox
71 79 0.065165317 ubox
71 82 0.051309248 ubox
71 89 0.004651133 ubox
72 78 0.065157895 ubox
72 81 0.051423826 ubox
72 87 0.004785935 ubox
72 88 0.003968201 ubox
72 91 0.005084664 ubox
73 80 0.050988992 ubox
73 86 0.011917875 ubox
73 90 0.003335266 ubox
75 84 0.020576581 ubox
76 83 0.020645572 ubox
77 82 0.020627366 ubox
77 90 0.904478216 ubox
78 89 0.990359327 ubox
79 88 0.993682066 ubox
79 92 0.063578059 ubox
79 96 0.024346241 ubox
80 87 0.993650784 ubox
80 91 0.063770038 ubox
80 95 0.024411310 ubox
81 86 0.967960220 ubox
81 89 0.043223144 ubox
81 90 0.047941139 ubox
82 88 0.060273380 ubox
82 92 0.025343018 ubox
83 87 0.054306292 ubox
83 91 0.025493190 ubox
84 90 0.025447011 ubox
89 96 0.076822822 ubox
90 95 0.116052002 ubox
8 72 0.9500000 lbox
9 71 0.9500000 lbox
10 70 0.9500000 lbox
13 68 0.9500000 lbox
14 67 0.9500000 lbox
15 66 0.9500000 lbox
16 65 0.9500000 lbox
17 63 0.9500000 lbox
18 62 0.9500000 lbox
19 61 0.9500000 lbox
20 60 0.9500000 lbox
21 58 0.9500000 lbox
22 57 0.9500000 lbox
26 52 0.9500000 lbox
27 51 0.9500000 lbox
28 50 0.9500000 lbox
29 49 0.9500000 lbox
30 48 0.9500000 lbox
32 46 0.9500000 lbox
33 45 0.9500000 lbox
34 44 0.9500000 lbox
35 43 0.9500000 lbox
77 90 0.9500000 lbox
78 89 0.9500000 lbox
79 88 0.9500000 lbox
80 87 0.9500000 lbox
81 86 0.9500000 lbox
showpage
end
%%EOF
