%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:39:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCUGCUCCUGUAAGCCCAGAGAGGCCCAGGGACAACUUCCACUUUAUUCUGGAUGUUUUCACUUUUGGGACAUCCUGUUCUGAGUCAAGAUUCCUCCUUCUGAACAUGGGACUUUCCAGAAGGACCACAGCUCCUCCCGUGCAUCCACUCGGCCUGGGAGGUUCUGGAUUUUGGCUGUCGAGGGAGUUUGCCUGCCUCUCCAGAGAAAG\
) } def
/len { sequence length } bind def

/coor [
[60.48243713 478.94244385]
[54.42200470 482.75625610]
[47.75070190 485.33090210]
[40.71854401 486.57391357]
[33.58828735 486.44262695]
[28.97427559 500.71536255]
[24.36026764 514.98809814]
[31.77846336 528.94323730]
[27.07631683 544.03179932]
[13.04352856 551.30206299]
[-1.99449849 546.44061279]
[-9.11596870 532.33178711]
[-4.09584045 517.34594727]
[10.08753395 510.37408447]
[14.70154285 496.10134888]
[19.31555176 481.82861328]
[3.54718661 464.54470825]
[1.28508258 441.13851929]
[13.57565403 420.95120239]
[35.62878418 412.12545776]
[37.85390091 397.29141235]
[40.07901764 382.45736694]
[42.30413437 367.62332153]
[44.52925110 352.78927612]
[46.75436783 337.95523071]
[48.97948456 323.12121582]
[47.18899536 320.08367920]
[46.78079987 316.02801514]
[48.21740723 311.61334229]
[51.64947128 307.68038940]
[54.53474426 292.96051025]
[57.42001343 278.24060059]
[48.92321777 266.06112671]
[51.63960266 251.09194946]
[64.47218323 242.26231384]
[67.35746002 227.54241943]
[70.24272919 212.82252502]
[73.12800598 198.10263062]
[76.01327515 183.38275146]
[78.89855194 168.66285706]
[81.78382111 153.94296265]
[74.86096191 151.08523560]
[68.37310028 147.34355164]
[62.43249893 142.78265381]
[57.14194870 137.48146057]
[52.59299850 131.53170776]
[48.86435699 125.03633881]
[46.02054596 118.10774994]
[44.11077118 110.86583710]
[43.16808319 103.43590546]
[43.20878983 95.94651794]
[44.23218918 88.52727509]
[30.06605148 83.59568024]
[15.89991665 78.66408539]
[1.73378181 73.73249054]
[-12.43235302 68.80090332]
[-26.59848785 63.86930466]
[-40.76462173 58.93771362]
[-54.93075943 54.00611877]
[-69.09689331 49.07452393]
[-82.43459320 57.23783875]
[-97.89139557 54.86687851]
[-108.16905975 43.08113861]
[-108.41478729 27.44548607]
[-98.51256561 15.34259796]
[-83.13790894 12.48708725]
[-69.55026245 20.22723770]
[-64.16529846 34.90839005]
[-49.99916458 39.83998489]
[-35.83303070 44.77157593]
[-21.66689491 49.70317078]
[-7.50075960 54.63476562]
[6.66537523 59.56635666]
[20.83151054 64.49795532]
[34.99764633 69.42954254]
[49.16378021 74.36113739]
[55.78635788 64.12763977]
[64.43547821 55.53836060]
[74.71471405 48.98699570]
[86.15290833 44.77382660]
[98.22578430 43.09196472]
[110.37998962 44.01850128]
[122.05841827 47.51096725]
[132.72579956 53.40928268]
[142.88934326 42.37740707]
[153.05288696 31.34552956]
[163.21643066 20.31365204]
[173.37997437 9.28177452]
[183.54353333 -1.75010276]
[193.70707703 -12.78197956]
[203.87062073 -23.81385803]
[214.03416443 -34.84573364]
[224.19770813 -45.87761307]
[214.06616211 -51.57212448]
[206.92753601 -63.45059204]
[205.74551392 -79.77897644]
[207.97064209 -94.61301422]
[210.19575500 -109.44705963]
[212.42086792 -124.28110504]
[214.64598083 -139.11514282]
[216.87110901 -153.94918823]
[219.09622192 -168.78323364]
[221.32133484 -183.61727905]
[208.27780151 -191.42333984]
[199.21839905 -203.62971497]
[195.52464294 -218.37504578]
[197.75979614 -233.41075134]
[205.58300781 -246.44401550]
[217.80130005 -255.48735046]
[232.55146790 -259.16171265]
[247.58422852 -256.90676880]
[260.60717773 -249.06643677]
[269.63442993 -236.83625793]
[273.28936768 -222.08126831]
[271.01467896 -207.05148315]
[263.15719604 -194.03884888]
[250.91517639 -185.02770996]
[236.15538025 -181.39216614]
[233.93026733 -166.55812073]
[231.70515442 -151.72407532]
[229.48002625 -136.89002991]
[227.25491333 -122.05598450]
[225.02980042 -107.22194672]
[222.80468750 -92.38790131]
[220.57955933 -77.55385590]
[226.28079224 -72.68087006]
[240.42227173 -77.68273926]
[237.68325806 -62.93490601]
[243.38449097 -58.06192398]
[257.69116211 -62.56955338]
[271.99786377 -67.07717896]
[279.34249878 -80.81378174]
[293.91571045 -85.18135071]
[306.96621704 -78.09471130]
[321.27288818 -82.60234070]
[335.57958984 -87.10997009]
[349.88626099 -91.61759186]
[364.19296265 -96.12522125]
[378.49963379 -100.63285065]
[392.80633545 -105.14048004]
[403.64352417 -116.66722870]
[418.10763550 -113.11220551]
[432.41433716 -117.61983490]
[436.37008667 -132.53143311]
[447.77508545 -142.92033386]
[462.99005127 -145.47149658]
[477.15994263 -139.37084961]
[485.76318359 -126.56507874]
[486.05453491 -111.14046478]
[477.94100952 -98.01894379]
[464.01159668 -91.38755035]
[448.71115112 -93.36233521]
[436.92196655 -103.31314850]
[422.61526489 -98.80551910]
[412.80139160 -87.60118866]
[397.31396484 -90.83379364]
[383.00726318 -86.32616425]
[368.70059204 -81.81853485]
[354.39389038 -77.31090546]
[340.08721924 -72.80327606]
[325.78051758 -68.29565430]
[311.47384644 -63.78802109]
[304.84274292 -50.50027847]
[290.39794922 -45.72509766]
[276.50549316 -52.77049637]
[262.19879150 -48.26286697]
[247.89212036 -43.75523758]
[235.22959900 -35.71406555]
[225.06604004 -24.68218803]
[214.90249634 -13.65031052]
[204.73895264 -2.61843324]
[194.57540894 8.41344452]
[184.41184998 19.44532204]
[174.24830627 30.47719765]
[164.08476257 41.50907516]
[153.92121887 52.54095459]
[143.75767517 63.57283020]
[154.28247070 82.82192993]
[156.74781799 104.62149811]
[150.78767395 125.73490143]
[137.28695679 143.02737427]
[118.25016022 153.93147278]
[96.50371552 156.82823181]
[93.61843872 171.54812622]
[90.73316956 186.26802063]
[87.84789276 200.98791504]
[84.96262360 215.70779419]
[82.07735443 230.42768860]
[79.19207764 245.14758301]
[87.74171448 258.16839600]
[84.60594940 273.05535889]
[72.13990784 281.12588501]
[69.25463104 295.84576416]
[66.36936188 310.56567383]
[63.81352997 325.34631348]
[61.58841324 340.18035889]
[59.36329651 355.01440430]
[57.13817596 369.84844971]
[54.91305923 384.68249512]
[52.68794250 399.51654053]
[50.46282578 414.35058594]
[56.99750137 417.53060913]
[62.79156494 421.90121460]
[67.63130188 427.29653931]
[71.33908844 433.51300049]
[73.77993011 440.31698608]
[74.86636353 447.45358276]
[74.56157684 454.65625000]
[72.88065338 461.65667725]
[69.88987732 468.19479370]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 16]
[6 15]
[7 14]
[20 201]
[21 200]
[22 199]
[23 198]
[24 197]
[25 196]
[26 195]
[30 194]
[31 193]
[32 192]
[35 189]
[36 188]
[37 187]
[38 186]
[39 185]
[40 184]
[41 183]
[52 76]
[53 75]
[54 74]
[55 73]
[56 72]
[57 71]
[58 70]
[59 69]
[60 68]
[84 177]
[85 176]
[86 175]
[87 174]
[88 173]
[89 172]
[90 171]
[91 170]
[92 169]
[93 168]
[96 125]
[97 124]
[98 123]
[99 122]
[100 121]
[101 120]
[102 119]
[103 118]
[129 167]
[130 166]
[131 165]
[134 162]
[135 161]
[136 160]
[137 159]
[138 158]
[139 157]
[140 156]
[142 154]
[143 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
