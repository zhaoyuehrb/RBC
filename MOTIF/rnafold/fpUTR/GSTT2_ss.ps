%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:53:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCGAAGGGGCGAGGCGGGUCCGGGGGUGGUGCGCUCCAAUUGGGUGCUGUCCCCAGGGGGUGGGGCCUGAUCCCCUAUUUCCCGGCGCGCCGGGAUCCUGCCACAGCUGCUGCCCACACCGCGCUCAGCGCCUUCACUGCCAUCCCCGCUGUCCUUGCCGCCCCCGCC\
) } def
/len { sequence length } bind def

/coor [
[75.22130585 555.92199707]
[64.31347656 544.48547363]
[64.77086639 528.68780518]
[76.32210541 517.90148926]
[76.59767151 502.90402222]
[66.10814667 492.39187622]
[66.17395782 477.17837524]
[77.27119446 466.24728394]
[77.54676056 451.24981689]
[77.68454742 436.25042725]
[77.68454742 421.25042725]
[77.68454742 406.25042725]
[77.68454742 391.25042725]
[77.68454742 376.25042725]
[77.68454742 361.25042725]
[77.68454742 346.25042725]
[77.54676056 331.25106812]
[77.27119446 316.25360107]
[76.99563599 301.25613403]
[74.68873596 298.54223633]
[73.60190582 294.56289673]
[74.32138824 289.91323853]
[77.14101410 285.43017578]
[77.69204712 270.44030762]
[78.24308014 255.45042419]
[78.79411316 240.46054077]
[79.34514618 225.47067261]
[79.89617920 210.48078918]
[80.44721222 195.49092102]
[80.99824524 180.50105286]
[81.54927826 165.51116943]
[82.10031128 150.52130127]
[71.34857178 140.06184387]
[56.37957001 141.02569580]
[41.41057205 141.98956299]
[26.44157028 142.95341492]
[11.47256947 143.91728210]
[-3.49643087 144.88113403]
[-15.12552643 155.93299866]
[-30.99643326 153.58909607]
[-38.93434906 139.64747620]
[-32.84998322 124.80294037]
[-17.41074371 120.44296265]
[-4.46029043 129.91213989]
[10.50870991 128.94828796]
[25.47771072 127.98442078]
[40.44671249 127.02056122]
[55.41571045 126.05670166]
[70.38471222 125.09284210]
[72.02481842 117.77436829]
[60.98894119 107.61516571]
[75.30503845 103.13742065]
[76.94514465 95.81895447]
[63.81917572 88.55886078]
[47.44166183 89.40095520]
[38.75191498 75.49339294]
[46.68920135 61.14307785]
[63.08832169 61.11238480]
[71.07926178 75.43289185]
[84.20523834 82.69297791]
[97.88591003 76.54161835]
[101.16612244 61.90467453]
[104.44634247 47.26773071]
[107.72655487 32.63078308]
[110.87218475 17.96432495]
[113.88294983 3.26958895]
[116.89372253 -11.42514706]
[119.90448761 -26.11988258]
[122.23739624 -40.93735886]
[123.88751984 -55.84631729]
[125.53764343 -70.75527954]
[112.76095581 -75.97707367]
[101.78998566 -84.33147430]
[93.37427521 -95.23934937]
[88.08663177 -107.94740295]
[86.28411865 -121.58019257]
[88.08395386 -135.20045471]
[93.35593414 -147.87348938]
[101.73179626 -158.73136902]
[112.63097382 -167.03236389]
[125.30078125 -172.21156311]
[138.86846924 -173.91938782]
[141.06517029 -188.75765991]
[143.26185608 -203.59594727]
[145.45855713 -218.43421936]
[147.65525818 -233.27249146]
[149.85195923 -248.11077881]
[143.32075500 -263.15322876]
[153.29838562 -276.16778564]
[169.52073669 -273.76620483]
[175.29962158 -258.41900635]
[164.69023132 -245.91407776]
[162.49353027 -231.07580566]
[160.29684448 -216.23751831]
[158.10014343 -201.39924622]
[155.90344238 -186.56095886]
[153.70674133 -171.72268677]
[168.39851379 -164.73048401]
[180.23603821 -153.54045105]
[188.06059265 -139.23220825]
[191.10139465 -123.19131470]
[189.05155945 -106.97521210]
[182.09902954 -92.16191101]
[170.90936279 -80.19646454]
[156.56211853 -72.25001526]
[140.44660950 -69.10515594]
[138.79647827 -54.19619370]
[137.14636230 -39.28723526]
[150.41210938 -46.28865814]
[164.23152161 -40.45568085]
[168.46864319 -26.06655693]
[160.01568604 -13.67512226]
[145.07257080 -12.36999035]
[134.59922791 -23.10911369]
[131.58845520 -8.41437721]
[128.57768250 6.28035879]
[125.56691742 20.97509384]
[127.31146240 28.18643951]
[122.36350250 35.91099930]
[119.08328247 50.54794693]
[115.80307007 65.18489075]
[112.52285004 79.82183838]
[121.95194244 91.48769379]
[136.95130920 91.34990692]
[151.95068359 91.21212006]
[166.95004272 91.07433319]
[182.73297119 84.88275146]
[193.05172729 98.33487701]
[182.98184204 111.97428894]
[167.08782959 106.07369995]
[152.08847046 106.21148682]
[137.08909607 106.34927368]
[122.08973694 106.48706055]
[136.56739807 110.41101074]
[147.19029236 121.00129700]
[151.15873718 135.46682739]
[147.42683411 149.99517822]
[136.97814941 160.75737000]
[122.56643677 164.91700745]
[107.98994446 161.37782288]
[97.09018707 151.07232666]
[96.53915405 166.06221008]
[95.98812103 181.05207825]
[95.43708801 196.04194641]
[94.88605499 211.03182983]
[94.33502197 226.02169800]
[93.78398895 241.01158142]
[93.23295593 256.00146484]
[92.68192291 270.99133301]
[92.13088989 285.98120117]
[91.99310303 300.98056030]
[92.26866913 315.97802734]
[92.54422760 330.97552490]
[95.84103394 339.53601074]
[92.68454742 346.25042725]
[92.68454742 361.25042725]
[92.68454742 376.25042725]
[92.68454742 391.25042725]
[92.68454742 406.25042725]
[92.68454742 421.25042725]
[92.68454742 436.25042725]
[95.82353210 444.87005615]
[92.54422760 451.52536011]
[92.26866913 466.52282715]
[102.95685577 477.85421753]
[102.46375275 493.05987549]
[91.59513855 503.17959595]
[91.31957245 518.17706299]
[102.46678162 529.38043213]
[102.34352112 545.18420410]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 168]
[5 167]
[8 164]
[9 163]
[10 161]
[11 160]
[12 159]
[13 158]
[14 157]
[15 156]
[16 155]
[17 153]
[18 152]
[19 151]
[23 150]
[24 149]
[25 148]
[26 147]
[27 146]
[28 145]
[29 144]
[30 143]
[31 142]
[32 141]
[33 49]
[34 48]
[35 47]
[36 46]
[37 45]
[38 44]
[53 60]
[54 59]
[61 122]
[62 121]
[63 120]
[64 119]
[65 117]
[66 116]
[67 115]
[68 114]
[69 108]
[70 107]
[71 106]
[82 97]
[83 96]
[84 95]
[85 94]
[86 93]
[87 92]
[123 133]
[124 132]
[125 131]
[126 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
