%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:56:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCACUGGGAAUAUGAUUAUGCUUAAUCUAUGCUCAGUUGAAAGGGGCUGGGGCUGCUUUCUCCCCUCCCUUCUUGACUCUCUGUUCACAGAACUCAGGCUGCCUCCAGCCAGCCUUUGCCCGCUAGACUCACUGGCCCUGAGCACUUGAAGGUGCAGCAAGUCACUGAGA\
) } def
/len { sequence length } bind def

/coor [
[104.56258392 145.11671448]
[96.25742340 145.19212341]
[88.07781219 143.75152588]
[80.29814148 140.84324646]
[73.17938232 136.56486511]
[62.42931366 147.02603149]
[51.67924118 157.48719788]
[40.92916870 167.94834900]
[30.17909813 178.40951538]
[19.42902565 188.87068176]
[14.93491554 204.04017639]
[0.41756517 207.37121582]
[-10.33250618 217.83238220]
[-21.08257675 228.29354858]
[-25.06959915 236.55255127]
[-32.12411880 238.84486389]
[-43.06237793 249.10910034]
[-54.00063705 259.37332153]
[-64.93889618 269.63757324]
[-75.87715149 279.90179443]
[-80.10221100 295.74731445]
[-96.00556946 299.74923706]
[-107.22721100 287.79067993]
[-102.22328186 272.17361450]
[-86.14138794 268.96353149]
[-75.20312500 258.69931030]
[-64.26486969 248.43507385]
[-53.32661057 238.17083740]
[-42.38835526 227.90660095]
[-31.54374313 217.54347229]
[-20.79367065 207.08230591]
[-10.04359913 196.62113953]
[-6.31840515 182.19990540]
[8.96786213 178.12062073]
[19.71793365 167.65945435]
[30.46800423 157.19828796]
[41.21807480 146.73712158]
[51.96814728 136.27595520]
[62.71821976 125.81478882]
[54.65468979 100.37062073]
[62.30124664 74.79804230]
[83.00870514 57.95680237]
[79.76580048 43.31154251]
[76.52290344 28.66628456]
[73.28000641 14.02102661]
[70.03710175 -0.62423187]
[66.52880096 -15.20818901]
[62.75625610 -29.72603607]
[58.98370743 -44.24388504]
[55.21116257 -58.76173019]
[51.43861771 -73.27957916]
[47.66606903 -87.79742432]
[43.76186371 -102.28042603]
[39.72631836 -116.72737122]
[35.69076920 -131.17431641]
[24.52599525 -142.38406372]
[28.55392265 -156.72369385]
[24.51837540 -171.17065430]
[20.48283005 -185.61759949]
[16.52815437 -171.14830017]
[7.93198776 -158.85578918]
[-4.30157042 -150.17591858]
[-18.74353981 -146.12258911]
[-33.70697784 -147.16923523]
[-47.44403458 -153.19363403]
[-58.35010910 -163.49205017]
[-65.15128326 -176.86157227]
[-67.05312347 -191.74050903]
[-63.83348083 -206.39089966]
[-55.86843109 -219.10145569]
[-44.08835983 -228.38746643]
[-29.86927986 -233.16424561]
[-14.87209129 -232.87385559]
[-0.84859008 -227.55018616]
[10.56316376 -217.81510925]
[18.03063583 -204.80450439]
[18.30301476 -219.80201721]
[18.57539177 -234.79954529]
[8.15805149 -243.37101746]
[4.64192581 -256.19326782]
[9.09756279 -268.51306152]
[19.68265915 -275.89682007]
[20.22732353 -290.88693237]
[20.77198982 -305.87704468]
[21.31665421 -320.86715698]
[13.16425228 -335.09637451]
[21.64366341 -349.13314819]
[38.03199768 -348.53768921]
[45.47034073 -333.92251587]
[36.30676270 -320.32247925]
[35.76209641 -305.33236694]
[35.21743393 -290.34228516]
[34.67276764 -275.35217285]
[46.63690186 -263.55569458]
[46.37976456 -246.41862488]
[33.57291794 -234.52717590]
[33.30054092 -219.52964783]
[33.02816391 -204.53211975]
[34.92977905 -189.65315247]
[38.96532440 -175.20619202]
[43.00087357 -160.75924683]
[53.87699890 -150.58283997]
[50.13772202 -135.20986938]
[54.17326736 -120.76291656]
[58.20881271 -106.31597137]
[63.05416107 -100.69960785]
[62.18391800 -91.56997681]
[65.95646667 -77.05212402]
[69.72901154 -62.53427887]
[73.50155640 -48.01642990]
[77.27410126 -33.49858475]
[81.04664612 -18.98073578]
[84.66802979 -15.81746006]
[86.31898499 -10.33246326]
[84.68235779 -3.86713243]
[87.92526245 10.77812576]
[91.16815948 25.42338371]
[94.41106415 40.06864166]
[97.65396118 54.71390152]
[106.73853302 55.15664291]
[115.55200958 57.40340805]
[123.73984528 61.36381912]
[130.97262573 66.87854004]
[136.95939636 73.72573090]
[141.45932007 81.62991333]
[144.29133606 90.27312469]
[145.34153748 99.30764008]
[144.56767273 108.37001038]
[142.00086975 117.09565735]
[137.74438477 125.13355255]
[148.68264771 135.39778137]
[159.62091064 145.66201782]
[170.55915833 155.92625427]
[185.91699219 159.72729492]
[189.90342712 174.07852173]
[200.84169006 184.34275818]
[211.77995300 194.60699463]
[222.71820068 204.87121582]
[236.94976807 199.46530151]
[252.05561829 200.76919556]
[265.04421997 208.47091675]
[273.36666870 220.99679565]
[275.41687012 235.83277893]
[270.84121704 250.02886963]
[281.77947998 260.29309082]
[292.71774292 270.55734253]
[303.65600586 280.82156372]
[314.59426880 291.08581543]
[330.67614746 294.29589844]
[335.68008423 309.91296387]
[324.45843506 321.87149048]
[308.55508423 317.86959839]
[304.33001709 302.02404785]
[293.39175415 291.75982666]
[282.45352173 281.49560547]
[271.51525879 271.23135376]
[260.57699585 260.96713257]
[246.70019531 266.43521118]
[231.76394653 265.33145142]
[218.73475647 257.82141113]
[210.22360229 245.34820557]
[207.96289062 230.35566711]
[212.45397949 215.80947876]
[201.51571655 205.54524231]
[190.57745361 195.28100586]
[179.63920593 185.01676941]
[165.06375122 181.94990540]
[160.29493713 166.86451721]
[149.35667419 156.60028076]
[138.41841125 146.33604431]
[127.48015594 136.07180786]
[120.44026184 140.47875977]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 39]
[6 38]
[7 37]
[8 36]
[9 35]
[10 34]
[12 32]
[13 31]
[14 30]
[16 29]
[17 28]
[18 27]
[19 26]
[20 25]
[42 119]
[43 118]
[44 117]
[45 116]
[46 115]
[47 112]
[48 111]
[49 110]
[50 109]
[51 108]
[52 107]
[53 105]
[54 104]
[55 103]
[57 101]
[58 100]
[59 99]
[76 98]
[77 97]
[78 96]
[82 93]
[83 92]
[84 91]
[85 90]
[130 171]
[131 170]
[132 169]
[133 168]
[135 166]
[136 165]
[137 164]
[138 163]
[144 157]
[145 156]
[146 155]
[147 154]
[148 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
