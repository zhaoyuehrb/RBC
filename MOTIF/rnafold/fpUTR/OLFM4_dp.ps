%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:03:42 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OLFM4)
} def

/sequence { (\
UUUUCCUACAUGCUGGCCAUGGGGAAAUCACCACUGGGCACUAUAAGAAGCCCCUGGGCUCUCUGCAGAGCCAGCGGCUCCAGCUAAGAGGACAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 27 0.005349478 ubox
1 92 0.018233406 ubox
1 95 0.408880684 ubox
1 96 0.148640187 ubox
2 26 0.006265427 ubox
2 27 0.029192794 ubox
2 91 0.019845891 ubox
2 92 0.008751492 ubox
2 94 0.435383343 ubox
2 95 0.251143137 ubox
2 96 0.050846500 ubox
3 25 0.006330533 ubox
3 26 0.033541732 ubox
3 90 0.020676462 ubox
3 91 0.004496089 ubox
3 92 0.039982736 ubox
3 94 0.261560919 ubox
3 95 0.067277633 ubox
3 96 0.018268977 ubox
4 24 0.006197876 ubox
4 25 0.034533785 ubox
4 89 0.021074010 ubox
4 90 0.003867769 ubox
4 91 0.017002117 ubox
4 92 0.941975275 ubox
4 94 0.028389190 ubox
4 95 0.009242975 ubox
5 23 0.006218231 ubox
5 24 0.034677105 ubox
5 88 0.020572783 ubox
5 90 0.017135922 ubox
5 91 0.998522800 ubox
6 22 0.006202643 ubox
6 23 0.034666924 ubox
6 88 0.017446028 ubox
6 90 0.998738656 ubox
6 91 0.007293837 ubox
7 21 0.004008237 ubox
7 22 0.031291028 ubox
7 86 0.014971568 ubox
7 87 0.017736963 ubox
7 89 0.988679617 ubox
7 90 0.007046598 ubox
8 85 0.016229804 ubox
9 21 0.034702641 ubox
10 20 0.035039436 ubox
10 44 0.012155353 ubox
11 19 0.035103571 ubox
11 43 0.012884045 ubox
11 76 0.017608541 ubox
11 86 0.055352895 ubox
12 18 0.034940380 ubox
12 42 0.012677767 ubox
12 75 0.033680615 ubox
12 84 0.998029735 ubox
12 85 0.012104617 ubox
13 74 0.033707193 ubox
13 83 0.998632360 ubox
14 40 0.050255762 ubox
14 73 0.033700683 ubox
14 82 0.996835141 ubox
15 39 0.095453287 ubox
15 72 0.033709749 ubox
15 79 0.031806733 ubox
15 80 0.028381856 ubox
15 81 0.992457736 ubox
16 39 0.524692454 ubox
16 41 0.009154630 ubox
16 59 0.003556583 ubox
16 66 0.004136478 ubox
16 71 0.033710105 ubox
16 78 0.078076210 ubox
16 79 0.004536235 ubox
16 80 0.824689938 ubox
17 23 0.007263871 ubox
17 24 0.017512542 ubox
17 37 0.837554509 ubox
17 38 0.528094880 ubox
17 58 0.003567437 ubox
17 65 0.004095894 ubox
17 70 0.033696623 ubox
17 77 0.100150639 ubox
18 22 0.007268341 ubox
18 23 0.017538124 ubox
18 36 0.848279522 ubox
18 37 0.514180530 ubox
18 57 0.003565299 ubox
18 76 0.100242677 ubox
19 35 0.846458573 ubox
19 44 0.007862108 ubox
20 30 0.013065502 ubox
20 33 0.878920830 ubox
20 36 0.175621601 ubox
20 43 0.008306154 ubox
20 67 0.033885268 ubox
20 73 0.005081102 ubox
20 76 0.009734989 ubox
21 29 0.013917637 ubox
21 32 0.893660042 ubox
21 35 0.258652892 ubox
21 42 0.008394225 ubox
21 54 0.005170231 ubox
21 64 0.005107654 ubox
21 66 0.034001198 ubox
21 72 0.004229732 ubox
21 75 0.010093495 ubox
22 28 0.013159836 ubox
22 29 0.009775180 ubox
22 31 0.893160073 ubox
22 32 0.329456647 ubox
22 34 0.261129171 ubox
22 35 0.010881558 ubox
22 41 0.008370545 ubox
22 42 0.003187013 ubox
22 53 0.005142271 ubox
22 63 0.005556239 ubox
23 28 0.018212667 ubox
23 29 0.280480232 ubox
23 31 0.330446850 ubox
23 32 0.296733333 ubox
23 34 0.011487959 ubox
23 41 0.003349366 ubox
23 52 0.005130093 ubox
23 62 0.005580689 ubox
23 64 0.033836801 ubox
24 28 0.182528826 ubox
24 31 0.295950328 ubox
24 51 0.005118061 ubox
24 61 0.005628152 ubox
24 63 0.033940833 ubox
25 60 0.005525853 ubox
25 62 0.033188494 ubox
28 37 0.008911047 ubox
28 92 0.003564960 ubox
29 36 0.009698480 ubox
29 91 0.003893081 ubox
30 35 0.008276284 ubox
31 37 0.009241465 ubox
31 38 0.015951730 ubox
31 57 0.044630925 ubox
31 58 0.016515336 ubox
31 77 0.004911104 ubox
31 91 0.003613619 ubox
32 36 0.009200528 ubox
32 37 0.015994024 ubox
32 56 0.044931178 ubox
32 57 0.016545289 ubox
32 76 0.004930389 ubox
32 90 0.003625071 ubox
33 55 0.043611573 ubox
34 47 0.017416715 ubox
34 57 0.003846052 ubox
34 74 0.008549083 ubox
34 83 0.003902353 ubox
34 88 0.003445344 ubox
35 43 0.015046685 ubox
35 45 0.004748829 ubox
35 46 0.017283793 ubox
35 56 0.005302205 ubox
35 73 0.008450182 ubox
35 82 0.003929931 ubox
35 87 0.003417822 ubox
36 42 0.016656509 ubox
36 44 0.005258677 ubox
36 53 0.113294601 ubox
36 54 0.009529709 ubox
36 55 0.003897948 ubox
36 72 0.006861462 ubox
36 81 0.003939209 ubox
37 41 0.016807589 ubox
37 52 0.113830857 ubox
37 53 0.008536259 ubox
37 54 0.003999829 ubox
37 71 0.005487835 ubox
37 72 0.005552322 ubox
37 80 0.003939646 ubox
37 85 0.003301467 ubox
38 51 0.115437740 ubox
38 52 0.007345171 ubox
38 53 0.004018047 ubox
38 66 0.011260948 ubox
38 71 0.006944462 ubox
38 84 0.003549753 ubox
39 50 0.115358008 ubox
39 65 0.011273202 ubox
39 70 0.008060425 ubox
39 83 0.003540213 ubox
40 64 0.009945990 ubox
41 47 0.235590177 ubox
41 50 0.015966307 ubox
41 68 0.008935125 ubox
42 46 0.213739252 ubox
42 49 0.024601265 ubox
42 67 0.009077524 ubox
44 65 0.005342604 ubox
45 64 0.004941859 ubox
46 62 0.016160311 ubox
46 64 0.028019747 ubox
46 79 0.009384347 ubox
47 61 0.016932473 ubox
47 63 0.029327884 ubox
47 78 0.005702235 ubox
47 80 0.346433031 ubox
48 60 0.011987854 ubox
48 62 0.029073114 ubox
48 79 0.247837572 ubox
49 60 0.031829426 ubox
49 79 0.910424451 ubox
50 59 0.034422700 ubox
50 78 0.992159295 ubox
51 58 0.034405624 ubox
51 77 0.991399377 ubox
52 57 0.034274403 ubox
52 76 0.989290740 ubox
52 77 0.052899216 ubox
53 76 0.070318129 ubox
53 77 0.003962087 ubox
54 74 0.986356346 ubox
54 76 0.004646948 ubox
54 77 0.011615410 ubox
54 96 0.003630239 ubox
55 73 0.973384447 ubox
55 76 0.011741397 ubox
55 94 0.011301116 ubox
56 72 0.795288152 ubox
56 75 0.013997243 ubox
56 93 0.012412721 ubox
57 71 0.563063207 ubox
57 72 0.603017608 ubox
58 66 0.014043307 ubox
58 71 0.824169501 ubox
59 65 0.014049930 ubox
59 68 0.009409284 ubox
59 70 0.997345441 ubox
59 90 0.033580163 ubox
60 67 0.008906572 ubox
60 69 0.997641853 ubox
60 89 0.033717505 ubox
60 91 0.006824420 ubox
61 68 0.997393728 ubox
61 70 0.020227595 ubox
61 88 0.033782969 ubox
61 90 0.008676143 ubox
62 67 0.911495157 ubox
62 69 0.020716941 ubox
62 87 0.033600316 ubox
62 89 0.008709107 ubox
63 68 0.020975465 ubox
63 83 0.003945543 ubox
63 88 0.008733485 ubox
64 82 0.004000410 ubox
64 87 0.008020869 ubox
65 81 0.004052900 ubox
65 84 0.034680225 ubox
66 83 0.034649332 ubox
68 80 0.048105842 ubox
69 79 0.048897589 ubox
70 78 0.049000284 ubox
71 77 0.049000424 ubox
72 76 0.048644206 ubox
76 85 0.026006103 ubox
77 84 0.028566063 ubox
78 83 0.028484937 ubox
78 90 0.004354646 ubox
79 89 0.004433446 ubox
79 92 0.010509323 ubox
80 88 0.004715850 ubox
80 91 0.012040213 ubox
81 90 0.012046271 ubox
4 92 0.9500000 lbox
5 91 0.9500000 lbox
6 90 0.9500000 lbox
7 89 0.9500000 lbox
12 84 0.9500000 lbox
13 83 0.9500000 lbox
14 82 0.9500000 lbox
15 81 0.9500000 lbox
16 80 0.9500000 lbox
17 37 0.9500000 lbox
18 36 0.9500000 lbox
19 35 0.9500000 lbox
20 33 0.9500000 lbox
21 32 0.9500000 lbox
22 31 0.9500000 lbox
49 79 0.9500000 lbox
50 78 0.9500000 lbox
51 77 0.9500000 lbox
52 76 0.9500000 lbox
54 74 0.9500000 lbox
55 73 0.9500000 lbox
56 72 0.9500000 lbox
57 71 0.9500000 lbox
59 70 0.9500000 lbox
60 69 0.9500000 lbox
61 68 0.9500000 lbox
62 67 0.9500000 lbox
showpage
end
%%EOF
