%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:18:26 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ATP6V0D2)
} def

/sequence { (\
GCAAAUCUUCAGGGGCCGUCCAGGACUACAGAGCUGUUUCACCCUACCUUGGCUUCAAUCUCUUCCCCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 16 0.005062218 ubox
1 34 0.004922947 ubox
1 37 0.017809524 ubox
1 53 0.029100393 ubox
2 15 0.005075269 ubox
2 33 0.004924397 ubox
2 36 0.019503269 ubox
2 51 0.007277114 ubox
2 52 0.028854252 ubox
3 9 0.024523902 ubox
3 35 0.019320888 ubox
3 50 0.008155562 ubox
3 64 0.022137436 ubox
4 8 0.021084816 ubox
4 49 0.007651418 ubox
4 50 0.010034317 ubox
4 55 0.004214788 ubox
4 63 0.022784250 ubox
4 64 0.041105963 ubox
5 49 0.011758907 ubox
5 54 0.004493857 ubox
5 59 0.012311297 ubox
5 63 0.042234401 ubox
6 13 0.005859861 ubox
6 14 0.005124593 ubox
6 25 0.015221523 ubox
6 32 0.019836729 ubox
6 52 0.004951532 ubox
6 58 0.012297917 ubox
7 12 0.011418869 ubox
7 13 0.011777550 ubox
7 14 0.006378963 ubox
7 23 0.003435936 ubox
7 24 0.016651726 ubox
7 31 0.020051856 ubox
7 33 0.004560904 ubox
7 51 0.006785645 ubox
7 52 0.005026015 ubox
8 12 0.010720470 ubox
8 13 0.006011138 ubox
8 22 0.003470127 ubox
8 23 0.016522247 ubox
8 25 0.014687305 ubox
8 30 0.019527409 ubox
8 32 0.004514760 ubox
8 51 0.004872479 ubox
8 58 0.052889232 ubox
9 22 0.013290952 ubox
9 24 0.016225387 ubox
9 25 0.022332748 ubox
9 31 0.004282000 ubox
9 32 0.003493744 ubox
9 52 0.026730204 ubox
9 57 0.052115710 ubox
10 23 0.016881416 ubox
10 24 0.023549040 ubox
10 31 0.003848722 ubox
10 51 0.035675205 ubox
11 27 0.005791417 ubox
11 45 0.033212906 ubox
11 49 0.003896010 ubox
11 50 0.035556836 ubox
11 55 0.003352277 ubox
11 61 0.030412685 ubox
11 63 0.038539202 ubox
11 64 0.014211757 ubox
12 21 0.042631246 ubox
12 26 0.005841855 ubox
12 27 0.007714076 ubox
12 44 0.034721525 ubox
12 45 0.023818774 ubox
12 48 0.004567720 ubox
12 49 0.034721164 ubox
12 55 0.006829684 ubox
12 56 0.819665708 ubox
12 60 0.030897879 ubox
12 61 0.010156431 ubox
12 62 0.040883202 ubox
12 63 0.016152125 ubox
12 65 0.005277002 ubox
12 66 0.025277289 ubox
12 67 0.109925642 ubox
12 68 0.493361405 ubox
12 69 0.219204312 ubox
13 20 0.042661705 ubox
13 21 0.026394900 ubox
13 26 0.008012513 ubox
13 27 0.014746657 ubox
13 43 0.034707542 ubox
13 44 0.024948747 ubox
13 47 0.004055950 ubox
13 48 0.034588812 ubox
13 54 0.006878203 ubox
13 55 0.821949406 ubox
13 56 0.033596855 ubox
13 59 0.025230027 ubox
13 60 0.012511823 ubox
13 61 0.039285451 ubox
13 62 0.016378231 ubox
13 64 0.004690011 ubox
13 65 0.025256193 ubox
13 66 0.110263680 ubox
13 67 0.494640956 ubox
13 68 0.220778579 ubox
13 69 0.019425484 ubox
14 19 0.038432399 ubox
14 20 0.026401005 ubox
14 21 0.007083120 ubox
14 26 0.015128726 ubox
14 27 0.016562508 ubox
14 42 0.034640328 ubox
14 43 0.025127917 ubox
14 44 0.003214773 ubox
14 47 0.034393424 ubox
14 53 0.005140852 ubox
14 54 0.826917271 ubox
14 55 0.024025876 ubox
14 56 0.004109386 ubox
14 59 0.007316944 ubox
14 60 0.037174517 ubox
14 61 0.013262176 ubox
14 63 0.003586602 ubox
14 64 0.014039800 ubox
14 65 0.108633337 ubox
14 66 0.494426524 ubox
14 67 0.220284927 ubox
14 68 0.019669618 ubox
15 19 0.017122636 ubox
15 20 0.007322762 ubox
15 26 0.035591774 ubox
15 42 0.025172522 ubox
15 43 0.003658341 ubox
15 53 0.835509717 ubox
15 54 0.004077608 ubox
15 59 0.020185189 ubox
15 60 0.012091575 ubox
15 62 0.004449363 ubox
15 63 0.005334168 ubox
15 64 0.062830517 ubox
15 65 0.487704661 ubox
15 66 0.215705530 ubox
15 67 0.019539170 ubox
16 24 0.278063873 ubox
16 52 0.838339839 ubox
17 23 0.279151705 ubox
17 51 0.838169256 ubox
18 26 0.174836406 ubox
18 29 0.024896257 ubox
18 42 0.023880241 ubox
18 47 0.100361476 ubox
18 50 0.801495452 ubox
18 53 0.101814759 ubox
18 59 0.016302035 ubox
19 25 0.175031946 ubox
19 28 0.024483645 ubox
19 41 0.023628221 ubox
19 46 0.098903309 ubox
19 52 0.087665226 ubox
19 58 0.016687814 ubox
20 24 0.173625431 ubox
20 31 0.003407764 ubox
20 51 0.087420193 ubox
20 52 0.082363266 ubox
21 36 0.056038758 ubox
21 51 0.082857546 ubox
22 35 0.056204562 ubox
22 39 0.003192403 ubox
22 45 0.732431518 ubox
22 49 0.302945144 ubox
22 50 0.074455311 ubox
22 55 0.009321770 ubox
22 61 0.038364955 ubox
22 63 0.058687757 ubox
22 64 0.374891265 ubox
23 34 0.055878538 ubox
23 35 0.019859000 ubox
23 39 0.028866068 ubox
23 40 0.020081089 ubox
23 43 0.198744790 ubox
23 44 0.753295374 ubox
23 45 0.046929127 ubox
23 48 0.308925438 ubox
23 49 0.064336686 ubox
23 54 0.010091579 ubox
23 56 0.017687997 ubox
23 60 0.039278765 ubox
23 61 0.072686254 ubox
23 62 0.060139185 ubox
23 63 0.389291662 ubox
23 64 0.010274519 ubox
23 65 0.015535266 ubox
23 66 0.035098288 ubox
23 67 0.004867694 ubox
23 68 0.005978648 ubox
23 69 0.004375951 ubox
24 34 0.021012200 ubox
24 38 0.039678623 ubox
24 39 0.020208853 ubox
24 40 0.064212186 ubox
24 42 0.207774206 ubox
24 43 0.748223824 ubox
24 44 0.048060411 ubox
24 47 0.308230863 ubox
24 48 0.063829322 ubox
24 53 0.010167780 ubox
24 55 0.016356813 ubox
24 56 0.048429978 ubox
24 59 0.035301209 ubox
24 60 0.086824164 ubox
24 61 0.038425979 ubox
24 62 0.390829186 ubox
24 63 0.004365852 ubox
24 64 0.016011213 ubox
24 65 0.037827875 ubox
24 66 0.004685278 ubox
24 67 0.005978621 ubox
24 68 0.004413263 ubox
25 37 0.118456290 ubox
25 38 0.031497220 ubox
25 39 0.086114438 ubox
25 54 0.015291886 ubox
25 55 0.042614947 ubox
25 59 0.085312530 ubox
25 61 0.382274308 ubox
25 63 0.014988767 ubox
25 64 0.037857277 ubox
26 33 0.041487640 ubox
26 36 0.119319812 ubox
26 52 0.017772431 ubox
27 32 0.039849929 ubox
27 36 0.014370928 ubox
27 46 0.027743154 ubox
27 51 0.017675012 ubox
28 35 0.019984689 ubox
28 37 0.720089576 ubox
28 45 0.028099145 ubox
28 50 0.015643001 ubox
29 36 0.728564959 ubox
29 51 0.020067186 ubox
30 35 0.656427541 ubox
30 38 0.026415121 ubox
30 39 0.101476101 ubox
30 45 0.020447131 ubox
30 49 0.013103478 ubox
30 50 0.017917305 ubox
30 54 0.004970591 ubox
30 55 0.015579713 ubox
30 61 0.033611306 ubox
30 63 0.191208104 ubox
30 64 0.009343761 ubox
31 37 0.025820929 ubox
31 38 0.113397777 ubox
31 39 0.036894327 ubox
31 40 0.304553198 ubox
31 44 0.021241462 ubox
31 48 0.013816123 ubox
31 49 0.012923269 ubox
31 50 0.022699180 ubox
31 53 0.004818204 ubox
31 54 0.011173573 ubox
31 55 0.438810582 ubox
31 56 0.122638615 ubox
31 60 0.036173313 ubox
31 62 0.204020899 ubox
31 64 0.036038374 ubox
31 65 0.009716826 ubox
32 37 0.111213876 ubox
32 38 0.039104357 ubox
32 39 0.299045745 ubox
32 45 0.014354730 ubox
32 49 0.026295564 ubox
32 54 0.468950753 ubox
32 55 0.087329613 ubox
32 59 0.034228122 ubox
32 61 0.203921636 ubox
32 63 0.038338889 ubox
32 64 0.008759265 ubox
33 37 0.027701432 ubox
33 38 0.220077489 ubox
33 44 0.014746981 ubox
33 48 0.027415293 ubox
33 53 0.479151821 ubox
33 54 0.014019038 ubox
33 60 0.202625146 ubox
33 62 0.038746912 ubox
33 63 0.006642809 ubox
34 52 0.479196026 ubox
35 41 0.018860210 ubox
35 46 0.019270428 ubox
35 51 0.471804648 ubox
35 57 0.096948885 ubox
36 40 0.020772097 ubox
36 42 0.044551533 ubox
36 45 0.022195957 ubox
36 47 0.306373383 ubox
36 50 0.302016237 ubox
36 53 0.017439817 ubox
36 56 0.099831763 ubox
36 59 0.134501073 ubox
37 41 0.040312561 ubox
37 46 0.306776879 ubox
37 52 0.016642597 ubox
37 58 0.143809553 ubox
38 51 0.015214803 ubox
38 57 0.133672733 ubox
38 58 0.013749758 ubox
39 52 0.043284033 ubox
39 57 0.014626534 ubox
40 51 0.055172431 ubox
41 50 0.054749258 ubox
42 52 0.057646582 ubox
43 51 0.056445623 ubox
43 52 0.202491497 ubox
44 51 0.203565532 ubox
44 52 0.015807375 ubox
45 51 0.015946557 ubox
46 50 0.015215194 ubox
49 58 0.024089968 ubox
50 57 0.027742321 ubox
51 56 0.028249224 ubox
51 60 0.007307066 ubox
51 62 0.005993649 ubox
51 66 0.004798333 ubox
51 67 0.005120569 ubox
51 68 0.004802024 ubox
52 59 0.005659627 ubox
52 60 0.003414231 ubox
52 61 0.005618701 ubox
52 65 0.004806998 ubox
52 66 0.005115849 ubox
52 67 0.004793200 ubox
57 64 0.038453873 ubox
58 63 0.036135180 ubox
12 56 0.9500000 lbox
13 55 0.9500000 lbox
14 54 0.9500000 lbox
15 53 0.9500000 lbox
16 52 0.9500000 lbox
17 51 0.9500000 lbox
18 50 0.9500000 lbox
22 45 0.9500000 lbox
23 44 0.9500000 lbox
24 43 0.9500000 lbox
28 37 0.9500000 lbox
29 36 0.9500000 lbox
30 35 0.9500000 lbox
showpage
end
%%EOF
