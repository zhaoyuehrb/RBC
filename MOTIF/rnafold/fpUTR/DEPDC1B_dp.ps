%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:31:04 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DEPDC1B)
} def

/sequence { (\
GAUUCAAACUGCUGCUCCUCCGGCUGGCGGGGAUCAGCGCUGGCGCGGCUGCGGCCGCUGCUGCCUACGCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 35 0.125885901 ubox
2 34 0.125951809 ubox
3 33 0.125600171 ubox
4 32 0.124931313 ubox
4 33 0.009369776 ubox
4 43 0.008549023 ubox
5 11 0.003274151 ubox
5 31 0.124370562 ubox
5 32 0.012710293 ubox
5 42 0.090817600 ubox
6 10 0.007621277 ubox
6 41 0.098328153 ubox
9 27 0.013959189 ubox
9 30 0.124602382 ubox
9 37 0.004214182 ubox
10 26 0.013120723 ubox
10 29 0.124769777 ubox
10 36 0.004600882 ubox
10 39 0.729738533 ubox
11 24 0.017364761 ubox
11 28 0.125107994 ubox
11 35 0.004597185 ubox
11 38 0.990581234 ubox
11 40 0.034668959 ubox
12 23 0.017449054 ubox
12 27 0.125102657 ubox
12 30 0.004683921 ubox
12 37 0.991107714 ubox
12 39 0.033811864 ubox
13 22 0.017432755 ubox
13 26 0.117307927 ubox
13 29 0.004690417 ubox
13 36 0.990945925 ubox
13 39 0.011646434 ubox
14 21 0.017071634 ubox
14 24 0.122452660 ubox
14 25 0.021577753 ubox
14 28 0.004703330 ubox
14 35 0.989433461 ubox
14 38 0.035992345 ubox
15 23 0.123235766 ubox
15 27 0.004696385 ubox
15 32 0.091373874 ubox
15 37 0.036004743 ubox
16 22 0.113647707 ubox
16 23 0.013940450 ubox
16 26 0.004283411 ubox
16 31 0.092327451 ubox
16 32 0.012298029 ubox
16 33 0.969953958 ubox
16 36 0.033412661 ubox
17 22 0.036561345 ubox
17 23 0.015404820 ubox
17 30 0.092492315 ubox
17 31 0.014480300 ubox
17 32 0.979920162 ubox
18 22 0.015529278 ubox
18 29 0.092465250 ubox
18 30 0.015263009 ubox
18 31 0.976186604 ubox
18 32 0.121976664 ubox
19 29 0.015724793 ubox
19 30 0.180686042 ubox
19 31 0.148335265 ubox
20 26 0.003240991 ubox
20 27 0.106940387 ubox
20 29 0.152337331 ubox
20 30 0.970505539 ubox
21 26 0.108181496 ubox
21 29 0.974242667 ubox
21 30 0.003371197 ubox
22 28 0.975958157 ubox
36 66 0.003657547 ubox
37 65 0.003844340 ubox
37 70 0.039721387 ubox
37 72 0.117059097 ubox
38 69 0.039820065 ubox
38 71 0.117615574 ubox
39 64 0.041302749 ubox
39 68 0.040595441 ubox
39 70 0.122628143 ubox
39 72 0.010727055 ubox
40 63 0.041199818 ubox
40 69 0.122546929 ubox
40 71 0.010744672 ubox
41 63 0.028971429 ubox
41 67 0.075665069 ubox
42 62 0.056825492 ubox
42 65 0.107399596 ubox
42 66 0.065897606 ubox
42 68 0.004681448 ubox
42 73 0.974623655 ubox
43 61 0.060410120 ubox
43 64 0.107568680 ubox
43 65 0.065514037 ubox
43 70 0.007262056 ubox
43 72 0.989998332 ubox
44 60 0.060522415 ubox
44 63 0.107630951 ubox
44 69 0.007308031 ubox
44 71 0.990084484 ubox
45 58 0.119762350 ubox
45 59 0.012846337 ubox
45 61 0.025880617 ubox
45 62 0.014731491 ubox
45 64 0.065476291 ubox
45 68 0.007174860 ubox
45 70 0.990051915 ubox
46 57 0.121312194 ubox
46 60 0.026307063 ubox
46 63 0.065489674 ubox
46 69 0.990029368 ubox
47 56 0.121950724 ubox
47 59 0.025418130 ubox
47 62 0.065510536 ubox
47 65 0.155320604 ubox
47 66 0.013003981 ubox
47 68 0.976453210 ubox
48 55 0.122012647 ubox
48 58 0.025417676 ubox
48 61 0.065733489 ubox
48 64 0.172484423 ubox
48 65 0.027509265 ubox
49 54 0.121992960 ubox
49 57 0.025359138 ubox
49 60 0.065580167 ubox
49 63 0.172180836 ubox
50 67 0.011218229 ubox
51 56 0.006385610 ubox
51 58 0.065448385 ubox
51 61 0.172394066 ubox
51 64 0.973518939 ubox
51 66 0.004323627 ubox
52 57 0.065508262 ubox
52 60 0.172793389 ubox
52 63 0.974696887 ubox
53 59 0.171476688 ubox
53 62 0.974028451 ubox
53 65 0.009187589 ubox
54 58 0.167805387 ubox
54 61 0.974715814 ubox
54 64 0.009196968 ubox
55 60 0.970346274 ubox
55 63 0.009038737 ubox
57 64 0.011008277 ubox
58 63 0.011027010 ubox
60 70 0.006565163 ubox
60 72 0.006484885 ubox
61 69 0.006550607 ubox
61 71 0.006366639 ubox
62 71 0.007926465 ubox
63 68 0.003678206 ubox
63 70 0.023869316 ubox
63 72 0.012965660 ubox
64 69 0.023835043 ubox
64 71 0.013007922 ubox
10 39 0.9500000 lbox
11 38 0.9500000 lbox
12 37 0.9500000 lbox
13 36 0.9500000 lbox
14 35 0.9500000 lbox
16 33 0.9500000 lbox
17 32 0.9500000 lbox
18 31 0.9500000 lbox
20 30 0.9500000 lbox
21 29 0.9500000 lbox
22 28 0.9500000 lbox
42 73 0.9500000 lbox
43 72 0.9500000 lbox
44 71 0.9500000 lbox
45 70 0.9500000 lbox
46 69 0.9500000 lbox
47 68 0.9500000 lbox
51 64 0.9500000 lbox
52 63 0.9500000 lbox
53 62 0.9500000 lbox
54 61 0.9500000 lbox
55 60 0.9500000 lbox
showpage
end
%%EOF
