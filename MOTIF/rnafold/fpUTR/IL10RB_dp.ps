%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:05:36 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (IL10RB)
} def

/sequence { (\
CCCGCCCAUCUCCGCUGGUUCCCGGAAGCCGCCGCGGACAAGCUCUCCCGGGCGCGGGCGGGGGUCGUGUGCUUGGAGGAAGCCGCGGAACCCCCAGCGUCCGUCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 18 0.013592078 ubox
1 52 0.021175059 ubox
1 57 0.351005027 ubox
1 58 0.044713590 ubox
1 62 0.005710522 ubox
2 17 0.014089965 ubox
2 18 0.009348548 ubox
2 25 0.005352212 ubox
2 37 0.022766636 ubox
2 51 0.021507247 ubox
2 56 0.352260183 ubox
2 57 0.059262689 ubox
2 61 0.007363455 ubox
3 17 0.009534300 ubox
3 24 0.005367696 ubox
3 36 0.022836245 ubox
3 50 0.021515456 ubox
3 54 0.754266287 ubox
3 56 0.058953881 ubox
3 60 0.008700618 ubox
3 99 0.004957220 ubox
4 13 0.007697057 ubox
4 15 0.018045971 ubox
4 23 0.005322297 ubox
4 35 0.022853307 ubox
4 43 0.099791851 ubox
4 49 0.020988416 ubox
4 53 0.982673567 ubox
4 55 0.057338901 ubox
4 59 0.015643820 ubox
4 98 0.005041511 ubox
5 14 0.018163164 ubox
5 34 0.022780321 ubox
5 42 0.099784057 ubox
5 52 0.983117375 ubox
5 54 0.056963720 ubox
5 58 0.015656194 ubox
5 97 0.005028473 ubox
6 18 0.005831299 ubox
6 51 0.983129379 ubox
6 52 0.047500713 ubox
6 57 0.015658771 ubox
7 17 0.005955391 ubox
7 50 0.981452206 ubox
7 51 0.047553910 ubox
7 56 0.015641103 ubox
8 16 0.005662380 ubox
8 19 0.007531031 ubox
9 18 0.007849635 ubox
9 38 0.014542647 ubox
9 64 0.003409721 ubox
10 17 0.008583917 ubox
10 28 0.015439835 ubox
10 37 0.014463887 ubox
10 42 0.015706746 ubox
10 63 0.003680133 ubox
11 26 0.018075288 ubox
11 27 0.011331061 ubox
11 36 0.013608519 ubox
11 38 0.146512855 ubox
11 41 0.009724413 ubox
11 62 0.003684617 ubox
12 25 0.021266627 ubox
12 36 0.003319992 ubox
12 37 0.153035294 ubox
12 51 0.003502677 ubox
12 61 0.003942647 ubox
13 24 0.021266670 ubox
13 34 0.014522319 ubox
13 36 0.153094818 ubox
13 50 0.003605584 ubox
13 60 0.004152822 ubox
13 99 0.003444298 ubox
14 23 0.021016350 ubox
14 32 0.009305539 ubox
14 33 0.014655862 ubox
14 35 0.153120524 ubox
14 43 0.985518714 ubox
14 59 0.005529465 ubox
14 98 0.003520425 ubox
15 25 0.011280652 ubox
15 31 0.009550252 ubox
15 34 0.152089996 ubox
15 42 0.986889700 ubox
15 58 0.005531977 ubox
15 97 0.003520523 ubox
16 24 0.011369520 ubox
16 31 0.110601484 ubox
16 34 0.015020126 ubox
16 40 0.070252960 ubox
16 41 0.919361632 ubox
16 57 0.005514340 ubox
16 96 0.003499723 ubox
17 23 0.011916193 ubox
17 30 0.136362559 ubox
17 33 0.071669358 ubox
17 39 0.091772112 ubox
17 44 0.005471608 ubox
18 22 0.011765616 ubox
18 29 0.136382056 ubox
18 32 0.071674419 ubox
18 39 0.923317218 ubox
18 43 0.006135957 ubox
18 55 0.005562157 ubox
19 27 0.030604442 ubox
19 28 0.132661046 ubox
19 31 0.048742916 ubox
19 38 0.854063753 ubox
19 42 0.006118573 ubox
19 54 0.005504732 ubox
20 25 0.003402572 ubox
20 26 0.044762362 ubox
20 27 0.113342380 ubox
20 37 0.770039657 ubox
20 38 0.489077415 ubox
21 25 0.053748484 ubox
21 36 0.766413730 ubox
21 37 0.617406372 ubox
21 52 0.006802455 ubox
22 36 0.618374251 ubox
22 37 0.008729019 ubox
22 51 0.006837858 ubox
23 31 0.057867740 ubox
23 34 0.986321206 ubox
23 36 0.009182540 ubox
23 50 0.006839014 ubox
24 30 0.069127380 ubox
24 33 0.987253461 ubox
24 35 0.009241036 ubox
24 49 0.006718639 ubox
25 29 0.068043829 ubox
25 32 0.984543438 ubox
25 48 0.006581881 ubox
27 44 0.004291128 ubox
27 46 0.005091306 ubox
28 35 0.006784220 ubox
28 43 0.004355284 ubox
28 45 0.005203677 ubox
28 55 0.007194095 ubox
29 34 0.006784095 ubox
29 37 0.004259704 ubox
29 42 0.004141092 ubox
29 54 0.005462201 ubox
30 36 0.004507229 ubox
30 54 0.007781720 ubox
31 35 0.004223458 ubox
31 53 0.010756598 ubox
32 51 0.003576016 ubox
32 52 0.010677891 ubox
33 50 0.004177055 ubox
33 51 0.010587413 ubox
34 43 0.005999161 ubox
34 49 0.005092178 ubox
34 104 0.003182673 ubox
35 42 0.006011102 ubox
35 50 0.008022582 ubox
35 103 0.003448178 ubox
36 48 0.010491718 ubox
36 49 0.008227325 ubox
36 102 0.003463621 ubox
37 47 0.010667767 ubox
37 48 0.008099711 ubox
37 101 0.003464063 ubox
38 46 0.010396350 ubox
38 100 0.003461839 ubox
39 99 0.003436172 ubox
42 53 0.048457900 ubox
43 52 0.048516946 ubox
44 51 0.048376017 ubox
45 50 0.048138420 ubox
47 58 0.005087943 ubox
48 57 0.005245223 ubox
49 56 0.005248982 ubox
49 103 0.162998570 ubox
50 55 0.005230580 ubox
50 102 0.166725777 ubox
50 106 0.016531119 ubox
51 101 0.166732139 ubox
51 105 0.016651857 ubox
51 106 0.004992556 ubox
52 100 0.166681525 ubox
52 104 0.016416516 ubox
52 105 0.005288681 ubox
53 99 0.166740736 ubox
53 103 0.016428440 ubox
54 98 0.166765846 ubox
54 100 0.004437626 ubox
54 102 0.016810455 ubox
54 104 0.604649020 ubox
55 97 0.166168899 ubox
55 99 0.006669497 ubox
55 103 0.908203453 ubox
56 95 0.023400847 ubox
56 98 0.006377342 ubox
56 101 0.020727059 ubox
56 102 0.917971607 ubox
56 106 0.018105596 ubox
57 94 0.023081019 ubox
57 95 0.159399074 ubox
57 100 0.019731786 ubox
57 101 0.917731202 ubox
57 102 0.008009752 ubox
57 105 0.018436866 ubox
58 93 0.019625732 ubox
58 94 0.159891322 ubox
58 98 0.410237749 ubox
58 100 0.891726031 ubox
58 101 0.008189815 ubox
58 104 0.018837342 ubox
59 97 0.412080484 ubox
59 99 0.890806715 ubox
59 103 0.018934510 ubox
60 92 0.015568413 ubox
60 93 0.160817149 ubox
60 94 0.063518994 ubox
60 95 0.887993254 ubox
60 98 0.420148673 ubox
60 102 0.011808223 ubox
61 91 0.015145920 ubox
61 92 0.161381455 ubox
61 93 0.070137558 ubox
61 94 0.965823244 ubox
61 95 0.184381146 ubox
61 101 0.008964463 ubox
62 91 0.161401340 ubox
62 92 0.070323476 ubox
62 93 0.966300544 ubox
62 94 0.183693027 ubox
62 95 0.034234886 ubox
62 100 0.003683911 ubox
63 91 0.070448542 ubox
63 92 0.966614770 ubox
63 93 0.182047982 ubox
63 94 0.034184794 ubox
63 95 0.004194068 ubox
63 106 0.003611390 ubox
64 91 0.966168039 ubox
64 92 0.180233664 ubox
64 93 0.034084718 ubox
64 94 0.004184507 ubox
64 98 0.003448228 ubox
64 105 0.003652085 ubox
65 88 0.487846410 ubox
65 89 0.232608768 ubox
65 90 0.790233800 ubox
65 97 0.003163394 ubox
66 87 0.947431035 ubox
66 88 0.236425687 ubox
66 103 0.003685029 ubox
67 86 0.983790633 ubox
67 102 0.003674170 ubox
68 85 0.983608432 ubox
68 87 0.173836424 ubox
69 84 0.983140777 ubox
69 86 0.176964297 ubox
70 85 0.176051541 ubox
70 99 0.003461332 ubox
71 83 0.992008283 ubox
71 84 0.124879850 ubox
71 98 0.003699638 ubox
72 79 0.003853333 ubox
72 82 0.999836372 ubox
72 97 0.003686914 ubox
73 78 0.003921843 ubox
73 80 0.050186675 ubox
73 81 0.997112098 ubox
73 82 0.012669366 ubox
74 78 0.006299566 ubox
74 79 0.069774110 ubox
74 80 0.987921668 ubox
74 81 0.030843930 ubox
75 84 0.004145490 ubox
75 95 0.003177737 ubox
75 106 0.003232271 ubox
76 83 0.004241826 ubox
76 94 0.003175640 ubox
76 105 0.003270400 ubox
77 104 0.003186738 ubox
78 102 0.003463405 ubox
79 101 0.003468356 ubox
80 100 0.003374394 ubox
87 95 0.003272891 ubox
88 94 0.003292134 ubox
97 104 0.024753515 ubox
98 103 0.025674853 ubox
3 54 0.9500000 lbox
4 53 0.9500000 lbox
5 52 0.9500000 lbox
6 51 0.9500000 lbox
7 50 0.9500000 lbox
14 43 0.9500000 lbox
15 42 0.9500000 lbox
16 41 0.9500000 lbox
18 39 0.9500000 lbox
19 38 0.9500000 lbox
20 37 0.9500000 lbox
21 36 0.9500000 lbox
23 34 0.9500000 lbox
24 33 0.9500000 lbox
25 32 0.9500000 lbox
55 103 0.9500000 lbox
56 102 0.9500000 lbox
57 101 0.9500000 lbox
58 100 0.9500000 lbox
59 99 0.9500000 lbox
60 95 0.9500000 lbox
61 94 0.9500000 lbox
62 93 0.9500000 lbox
63 92 0.9500000 lbox
64 91 0.9500000 lbox
65 90 0.9500000 lbox
66 87 0.9500000 lbox
67 86 0.9500000 lbox
68 85 0.9500000 lbox
69 84 0.9500000 lbox
71 83 0.9500000 lbox
72 82 0.9500000 lbox
73 81 0.9500000 lbox
74 80 0.9500000 lbox
showpage
end
%%EOF
