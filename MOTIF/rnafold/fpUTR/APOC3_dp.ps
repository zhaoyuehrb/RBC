%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:11:46 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (APOC3)
} def

/sequence { (\
AACCCUCCUGCCUGUCUGCUCAGUUCAUCCCUAGAGGCAGCUGCUCCAGGAACAGAGGUGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 59 0.621534203 ubox
3 50 0.006504547 ubox
3 58 0.622817018 ubox
4 49 0.006245012 ubox
4 50 0.056726114 ubox
4 57 0.604129565 ubox
4 58 0.757248856 ubox
5 49 0.057001150 ubox
5 50 0.003396985 ubox
5 55 0.528509448 ubox
5 57 0.775985182 ubox
5 58 0.031591004 ubox
6 48 0.055302630 ubox
6 49 0.003225909 ubox
6 51 0.472573044 ubox
6 54 0.338435720 ubox
6 56 0.786097897 ubox
6 57 0.030267672 ubox
6 58 0.018326503 ubox
7 49 0.003366025 ubox
7 50 0.576308205 ubox
7 55 0.678391240 ubox
7 57 0.024340632 ubox
7 58 0.046927502 ubox
8 23 0.010164727 ubox
8 40 0.084819369 ubox
8 49 0.578000571 ubox
8 50 0.024108336 ubox
8 55 0.419799343 ubox
8 57 0.047324688 ubox
8 58 0.010664264 ubox
9 22 0.010040746 ubox
9 27 0.023410224 ubox
9 39 0.086386335 ubox
9 43 0.004090170 ubox
9 48 0.576781284 ubox
9 49 0.023666355 ubox
9 54 0.573046337 ubox
9 56 0.044406731 ubox
9 57 0.010689879 ubox
9 60 0.014135675 ubox
10 19 0.020457062 ubox
10 21 0.008614607 ubox
10 24 0.010990768 ubox
10 26 0.026000721 ubox
10 38 0.086732965 ubox
10 41 0.039814125 ubox
10 42 0.012730151 ubox
10 44 0.204779007 ubox
10 47 0.540181146 ubox
10 53 0.568591749 ubox
10 59 0.024077318 ubox
10 61 0.013630652 ubox
11 18 0.020729747 ubox
11 23 0.009766578 ubox
11 37 0.086746749 ubox
11 40 0.031201646 ubox
11 43 0.227457056 ubox
11 50 0.775628733 ubox
11 58 0.024584933 ubox
11 60 0.013659271 ubox
12 23 0.116806958 ubox
12 36 0.086595409 ubox
12 40 0.242632219 ubox
12 49 0.777670403 ubox
12 50 0.021085975 ubox
12 55 0.050797572 ubox
12 57 0.024014283 ubox
12 58 0.009208631 ubox
13 22 0.118106205 ubox
13 27 0.008508083 ubox
13 35 0.074475844 ubox
13 39 0.246565231 ubox
13 43 0.096647965 ubox
13 48 0.776618082 ubox
13 49 0.019345838 ubox
13 54 0.057656608 ubox
13 56 0.018315591 ubox
13 57 0.008103368 ubox
14 21 0.118156996 ubox
14 26 0.009893719 ubox
14 28 0.003748536 ubox
14 38 0.246827508 ubox
14 41 0.300710373 ubox
14 42 0.122683742 ubox
14 44 0.354115436 ubox
14 47 0.752674896 ubox
14 53 0.058528570 ubox
14 61 0.006198023 ubox
15 27 0.003707198 ubox
15 35 0.045280376 ubox
15 37 0.246505695 ubox
15 40 0.048661723 ubox
15 43 0.357133781 ubox
15 50 0.163536039 ubox
15 51 0.028982043 ubox
15 52 0.046316362 ubox
15 56 0.015386954 ubox
15 60 0.005990502 ubox
16 23 0.016741659 ubox
16 34 0.057482104 ubox
16 36 0.245156737 ubox
16 37 0.011641377 ubox
16 40 0.750193730 ubox
16 49 0.172818784 ubox
16 50 0.035644859 ubox
16 55 0.018183165 ubox
17 22 0.015752590 ubox
17 27 0.008600528 ubox
17 33 0.057281653 ubox
17 35 0.243503020 ubox
17 36 0.009624549 ubox
17 39 0.754196230 ubox
17 43 0.019229045 ubox
17 48 0.173560182 ubox
17 49 0.032881455 ubox
17 54 0.018209009 ubox
18 24 0.013616705 ubox
18 26 0.009299969 ubox
18 32 0.051378291 ubox
18 38 0.754247717 ubox
18 41 0.188065471 ubox
18 42 0.004500006 ubox
18 44 0.397017867 ubox
18 47 0.173166893 ubox
18 53 0.017788200 ubox
18 59 0.003319895 ubox
18 61 0.003270608 ubox
19 23 0.014054872 ubox
19 34 0.218832426 ubox
19 36 0.426946934 ubox
19 37 0.624173476 ubox
19 40 0.188129550 ubox
19 43 0.360263617 ubox
19 49 0.006275188 ubox
19 50 0.005199899 ubox
19 57 0.012594899 ubox
20 33 0.216561757 ubox
20 35 0.601445595 ubox
20 36 0.431235939 ubox
20 37 0.012224337 ubox
20 39 0.176024766 ubox
20 48 0.006271587 ubox
20 49 0.005183227 ubox
20 51 0.009669098 ubox
20 56 0.013119341 ubox
21 34 0.636006454 ubox
21 36 0.097009275 ubox
21 43 0.418778927 ubox
21 50 0.007046794 ubox
21 55 0.013207110 ubox
21 60 0.008979097 ubox
22 32 0.621819798 ubox
22 42 0.526960446 ubox
22 45 0.023433844 ubox
22 59 0.009226504 ubox
23 31 0.624042732 ubox
23 38 0.128724678 ubox
23 41 0.542883914 ubox
23 44 0.023893205 ubox
23 53 0.017277827 ubox
24 34 0.037685972 ubox
24 35 0.075071943 ubox
24 36 0.185163131 ubox
24 37 0.108334256 ubox
24 40 0.541120664 ubox
24 43 0.023705103 ubox
24 52 0.017971134 ubox
24 57 0.009535907 ubox
25 33 0.035827945 ubox
25 34 0.073762451 ubox
25 35 0.293185675 ubox
25 36 0.071619698 ubox
25 37 0.082913859 ubox
25 39 0.498531285 ubox
25 51 0.017401768 ubox
25 56 0.010061683 ubox
26 34 0.296127684 ubox
26 36 0.107876885 ubox
26 50 0.010809464 ubox
26 55 0.010122460 ubox
28 35 0.302064487 ubox
28 37 0.076942598 ubox
28 51 0.031763749 ubox
29 34 0.302567996 ubox
29 36 0.082938603 ubox
29 37 0.425582279 ubox
29 50 0.030095172 ubox
30 36 0.424740947 ubox
30 37 0.153327589 ubox
30 49 0.025809169 ubox
30 50 0.116635932 ubox
31 36 0.154619712 ubox
31 37 0.013372778 ubox
31 40 0.003800438 ubox
31 49 0.118426556 ubox
32 36 0.012179793 ubox
32 39 0.003957367 ubox
32 48 0.117126536 ubox
33 42 0.004596044 ubox
33 45 0.005998698 ubox
34 41 0.004629993 ubox
34 44 0.006286914 ubox
34 46 0.121756746 ubox
35 42 0.009533344 ubox
35 45 0.119182298 ubox
36 41 0.009846655 ubox
36 44 0.106842882 ubox
36 45 0.042284362 ubox
36 46 0.008419760 ubox
36 47 0.003411776 ubox
36 62 0.012739053 ubox
37 41 0.003882751 ubox
37 44 0.077554197 ubox
37 46 0.003852277 ubox
37 61 0.012990389 ubox
38 43 0.093705077 ubox
38 60 0.013007502 ubox
39 45 0.004923096 ubox
39 59 0.012902011 ubox
40 44 0.005697410 ubox
40 61 0.012006106 ubox
41 49 0.070632406 ubox
41 50 0.024726331 ubox
41 55 0.025785167 ubox
41 57 0.012606139 ubox
41 60 0.012957789 ubox
42 48 0.070998793 ubox
42 49 0.024276000 ubox
42 54 0.030663825 ubox
42 56 0.012468886 ubox
43 47 0.070068074 ubox
43 53 0.031406035 ubox
43 59 0.003898141 ubox
43 61 0.033729559 ubox
44 50 0.010366934 ubox
44 55 0.010919500 ubox
44 57 0.017686693 ubox
44 58 0.003186885 ubox
44 60 0.033794685 ubox
45 49 0.009408951 ubox
45 51 0.030265142 ubox
45 54 0.010848682 ubox
45 56 0.018079370 ubox
46 50 0.030618646 ubox
46 55 0.018150557 ubox
46 58 0.033743528 ubox
47 57 0.033768119 ubox
49 62 0.006805322 ubox
50 61 0.006943006 ubox
52 59 0.045853235 ubox
53 58 0.047238249 ubox
53 60 0.051291241 ubox
54 59 0.049402200 ubox
4 58 0.9500000 lbox
5 57 0.9500000 lbox
6 56 0.9500000 lbox
7 55 0.9500000 lbox
11 50 0.9500000 lbox
12 49 0.9500000 lbox
13 48 0.9500000 lbox
14 47 0.9500000 lbox
21 43 0.9500000 lbox
22 42 0.9500000 lbox
23 41 0.9500000 lbox
24 40 0.9500000 lbox
25 39 0.9500000 lbox
29 37 0.9500000 lbox
30 36 0.9500000 lbox
showpage
end
%%EOF
