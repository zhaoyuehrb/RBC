%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:56:10 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NCF1)
} def

/sequence { (\
CGACUUCCUCUUUCCAGUGCAUUUAAGGCGCAGCCUGGAAGUGCCAGGGAGCACUGGAGGCCACCCAGUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 10 0.053298135 ubox
2 12 0.003385560 ubox
2 70 0.964061590 ubox
3 9 0.050823307 ubox
3 11 0.003637515 ubox
3 69 0.972232343 ubox
4 51 0.042171691 ubox
4 59 0.004732057 ubox
4 60 0.036127970 ubox
4 68 0.973062147 ubox
5 50 0.042405407 ubox
5 51 0.003502436 ubox
5 58 0.003795484 ubox
5 59 0.036275795 ubox
5 67 0.936793602 ubox
5 68 0.007309650 ubox
6 49 0.042400552 ubox
6 50 0.004586844 ubox
6 58 0.036537517 ubox
6 60 0.015637851 ubox
6 67 0.030718541 ubox
7 48 0.042446154 ubox
7 49 0.004794462 ubox
7 57 0.036572025 ubox
7 59 0.015542299 ubox
7 60 0.105947995 ubox
8 47 0.042442484 ubox
8 48 0.004771834 ubox
8 51 0.004256273 ubox
8 56 0.036514748 ubox
8 59 0.106051675 ubox
8 60 0.038297796 ubox
8 68 0.011918600 ubox
9 46 0.041053940 ubox
9 47 0.003886624 ubox
9 50 0.004290920 ubox
9 58 0.078360144 ubox
9 59 0.033429266 ubox
9 60 0.047901429 ubox
9 67 0.011795180 ubox
10 41 0.019718425 ubox
10 49 0.004269981 ubox
10 51 0.003951636 ubox
10 57 0.055206822 ubox
10 59 0.052913938 ubox
10 60 0.270706352 ubox
10 68 0.008886382 ubox
11 40 0.016123217 ubox
11 41 0.030710580 ubox
11 48 0.003813194 ubox
11 50 0.003600649 ubox
11 51 0.011442208 ubox
11 56 0.037204736 ubox
11 58 0.031996878 ubox
11 59 0.221011057 ubox
11 60 0.781416341 ubox
11 67 0.008355468 ubox
12 39 0.011500249 ubox
12 40 0.037197005 ubox
12 47 0.003645583 ubox
12 49 0.003196423 ubox
12 50 0.014496667 ubox
12 51 0.045084488 ubox
12 57 0.006384339 ubox
12 58 0.156603372 ubox
12 59 0.913420362 ubox
12 60 0.039180105 ubox
13 39 0.040383976 ubox
13 46 0.003353925 ubox
13 49 0.014665723 ubox
13 50 0.049020657 ubox
13 57 0.021017819 ubox
13 58 0.978302131 ubox
13 59 0.018165525 ubox
14 38 0.042106948 ubox
14 48 0.014908121 ubox
14 49 0.049323117 ubox
14 56 0.015143020 ubox
14 57 0.996425140 ubox
15 37 0.042121319 ubox
15 47 0.014903829 ubox
15 48 0.049293076 ubox
15 56 0.997384764 ubox
16 36 0.042058555 ubox
16 55 0.997433438 ubox
17 31 0.011847411 ubox
17 34 0.005774698 ubox
17 35 0.040080346 ubox
17 44 0.006213237 ubox
17 54 0.997656371 ubox
18 30 0.014257930 ubox
18 32 0.025035385 ubox
18 33 0.004961722 ubox
18 43 0.006206778 ubox
18 46 0.010347993 ubox
18 53 0.997378370 ubox
19 29 0.045360197 ubox
19 31 0.027400507 ubox
19 34 0.028887556 ubox
19 42 0.006219776 ubox
19 44 0.053710788 ubox
19 45 0.007548699 ubox
19 52 0.996462526 ubox
20 28 0.045392987 ubox
20 30 0.027414904 ubox
20 33 0.028872237 ubox
20 41 0.006234259 ubox
20 43 0.054704859 ubox
20 51 0.995330398 ubox
21 42 0.056076633 ubox
22 28 0.015525725 ubox
22 33 0.007785160 ubox
22 39 0.004516866 ubox
22 40 0.009968165 ubox
22 41 0.055596032 ubox
22 47 0.028702591 ubox
22 48 0.179453106 ubox
22 49 0.551462334 ubox
22 50 0.726279337 ubox
22 51 0.008627208 ubox
23 27 0.012337692 ubox
23 32 0.010042546 ubox
23 33 0.007033111 ubox
23 38 0.004876447 ubox
23 39 0.012439741 ubox
23 40 0.054258810 ubox
23 46 0.029134584 ubox
23 47 0.181093006 ubox
23 48 0.533263905 ubox
23 49 0.725379144 ubox
23 50 0.082996954 ubox
24 32 0.008424847 ubox
24 37 0.004685149 ubox
24 38 0.012400376 ubox
24 39 0.050618357 ubox
24 46 0.145910787 ubox
24 47 0.476151477 ubox
24 48 0.653842415 ubox
24 49 0.089564974 ubox
24 50 0.015683302 ubox
25 36 0.003650337 ubox
26 36 0.064378562 ubox
27 35 0.068014186 ubox
27 45 0.980909454 ubox
28 34 0.069433862 ubox
28 44 0.983761399 ubox
28 52 0.006393062 ubox
29 33 0.069804189 ubox
29 43 0.983740890 ubox
29 51 0.007197430 ubox
30 42 0.982619522 ubox
30 44 0.005221885 ubox
30 52 0.046750318 ubox
31 37 0.014427732 ubox
31 41 0.982148878 ubox
31 43 0.005404862 ubox
31 51 0.047750651 ubox
32 36 0.019563536 ubox
32 42 0.005567623 ubox
33 42 0.023772464 ubox
34 41 0.025848336 ubox
34 48 0.159495351 ubox
34 49 0.004442717 ubox
35 41 0.013186203 ubox
35 47 0.160395560 ubox
35 48 0.003441971 ubox
36 40 0.019769864 ubox
36 46 0.161437648 ubox
37 45 0.164456864 ubox
38 44 0.164135525 ubox
40 55 0.008774271 ubox
41 54 0.009980202 ubox
42 53 0.009996584 ubox
43 52 0.010047382 ubox
44 51 0.010044907 ubox
53 69 0.043595497 ubox
54 68 0.046609080 ubox
55 67 0.046638950 ubox
56 66 0.046595360 ubox
57 64 0.003641176 ubox
57 65 0.046412052 ubox
59 65 0.054281355 ubox
59 66 0.121569575 ubox
59 70 0.059643868 ubox
60 64 0.054012538 ubox
60 65 0.120520384 ubox
60 69 0.068054439 ubox
61 68 0.069329500 ubox
63 69 0.016302617 ubox
64 68 0.017255242 ubox
2 70 0.9500000 lbox
3 69 0.9500000 lbox
4 68 0.9500000 lbox
5 67 0.9500000 lbox
11 60 0.9500000 lbox
12 59 0.9500000 lbox
13 58 0.9500000 lbox
14 57 0.9500000 lbox
15 56 0.9500000 lbox
16 55 0.9500000 lbox
17 54 0.9500000 lbox
18 53 0.9500000 lbox
19 52 0.9500000 lbox
20 51 0.9500000 lbox
22 50 0.9500000 lbox
23 49 0.9500000 lbox
24 48 0.9500000 lbox
27 45 0.9500000 lbox
28 44 0.9500000 lbox
29 43 0.9500000 lbox
30 42 0.9500000 lbox
31 41 0.9500000 lbox
showpage
end
%%EOF
