%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:29:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAGCGUGCUGAAGCCGGAGCGAGCUAGCCGCCCGGAGCCGCGCCGACCCAGCUGAGCCCAGCCCACGGGACGCCAGACCUCGACCGUCGCUCCUACCCCGGCCACCGCUCGGAGCCGAGGCGGACGCGUCCCGAUCUUCCCCUGUCCCCACCCUGCCCCGACCCUCCUCUCCACCUCUCGCGUCGUGACACCAGCUGUCUCCGGCAGCCUCUUGGUC\
) } def
/len { sequence length } bind def

/coor [
[19.38232994 339.38906860]
[9.65331268 327.97213745]
[17.50444984 315.19165039]
[10.21356297 313.43298340]
[1.01825690 325.28399658]
[-8.17704868 337.13497925]
[-10.96287823 345.82785034]
[-17.59024239 349.08877563]
[-26.95460129 360.80667114]
[-36.31896210 372.52456665]
[-36.81676865 376.82452393]
[-38.48619080 380.38653564]
[-40.95241928 382.93334961]
[-43.78918457 384.33764648]
[-46.57193375 384.62557983]
[-56.59289169 395.78713989]
[-66.61384583 406.94869995]
[-76.63480377 418.11026001]
[-80.03644562 426.58114624]
[-86.88046265 429.35873413]
[-97.06049347 440.37539673]
[-107.24053192 451.39205933]
[-105.08495331 466.88037109]
[-113.43313599 480.10314941]
[-128.34330750 484.81701660]
[-142.77536011 478.79623413]
[-149.91491699 464.88360596]
[-146.39088440 449.64828491]
[-133.86721802 440.28390503]
[-118.25719452 441.21203613]
[-108.07715607 430.19537354]
[-97.89712524 419.17871094]
[-87.79636383 408.08929443]
[-77.77540588 396.92773438]
[-67.75444794 385.76617432]
[-57.73349380 374.60461426]
[-48.03684235 363.16018677]
[-38.67248535 351.44232178]
[-29.30812645 339.72442627]
[-20.02805519 327.93966675]
[-10.83274937 316.08868408]
[-1.63744342 304.23767090]
[6.14032269 291.41165161]
[12.39822674 277.77938843]
[18.65612984 264.14712524]
[24.91403389 250.51487732]
[16.41531563 236.46714783]
[17.98227501 219.95661926]
[29.19440842 207.51142883]
[45.77849960 204.17079163]
[51.84020996 190.45016479]
[57.90192032 176.72953796]
[63.96362686 163.00891113]
[70.02533722 149.28828430]
[76.08705139 135.56764221]
[70.21964264 130.82234192]
[65.27543640 125.12153625]
[61.40771484 118.64195251]
[58.73636627 111.58444977]
[57.34421539 104.16783142]
[57.27441025 96.62200165]
[58.52912140 89.18090057]
[61.06944656 82.07518768]
[64.81663513 75.52516174]
[69.65453339 69.73385620]
[75.43314362 64.88082123]
[81.97335052 61.11650085]
[78.14305115 46.61378098]
[74.31275177 32.11106491]
[70.48245239 17.60834694]
[66.65215302 3.10563064]
[62.82184982 -11.39708710]
[58.99155045 -25.89980316]
[55.16125107 -40.40251923]
[39.15920639 -44.57617569]
[27.51343346 -56.18493652]
[23.33685303 -71.99201202]
[27.67826653 -87.65717316]
[39.26098251 -98.92843628]
[35.22304153 -113.37471771]
[31.18509865 -127.82099915]
[27.14715576 -142.26727295]
[23.10921478 -156.71356201]
[14.85781193 -144.18701172]
[0.19294012 -141.03399658]
[-12.47782898 -149.06216431]
[-15.89016819 -163.66888428]
[-8.08773804 -176.47988892]
[6.45622253 -180.15048218]
[19.40287781 -172.57701111]
[16.62175560 -187.31692505]
[13.84063339 -202.05685425]
[11.05951023 -216.79676819]
[8.27838707 -231.53669739]
[-3.62166071 -235.34288025]
[-12.72306061 -243.79656982]
[-17.34183884 -255.24993896]
[-16.65910149 -267.50839233]
[-10.86553001 -278.25100708]
[-1.11362350 -285.47000122]
[-3.47076631 -300.28363037]
[-5.82790899 -315.09725952]
[-14.28813457 -329.78945923]
[-2.51212931 -341.98626709]
[12.46794224 -334.04690552]
[8.98572922 -317.45440674]
[11.34287167 -302.64077759]
[13.70001507 -287.82711792]
[29.79910469 -280.55694580]
[38.38286209 -264.93838501]
[35.84611130 -247.13900757]
[23.01831055 -234.31782532]
[25.79943466 -219.57789612]
[28.58055687 -204.83798218]
[31.36167908 -190.09805298]
[34.14280319 -175.35812378]
[37.55549622 -160.75149536]
[41.59343719 -146.30522156]
[45.63137817 -131.85893250]
[49.66932297 -117.41265869]
[53.70726395 -102.96637726]
[67.12815094 -100.45437622]
[78.21136475 -92.36711884]
[84.76127625 -80.23617554]
[85.45002747 -66.40089417]
[80.08635712 -53.55731964]
[69.66397095 -44.23281860]
[73.49427032 -29.73010254]
[77.32456970 -15.22738647]
[81.15486908 -0.72466886]
[84.98516846 13.77804852]
[88.81546783 28.28076553]
[92.64576721 42.78348160]
[96.47606659 57.28620148]
[103.19990540 57.26070404]
[109.84499359 58.28713608]
[116.24776459 60.34023285]
[122.25063324 63.36946487]
[127.70585632 67.30027008]
[132.47917175 72.03590393]
[136.45307922 77.45980835]
[139.52976990 83.43849182]
[141.63354492 89.82479858]
[142.71260071 96.46154022]
[157.64744568 97.85816956]
[172.58227539 99.25479126]
[187.51712036 100.65142059]
[176.20597839 90.79960632]
[170.07075500 77.11169434]
[170.24320984 62.11268616]
[176.69152832 48.56945038]
[188.22618103 38.98030472]
[202.71937561 35.11416245]
[217.49757385 37.68420410]
[229.83460999 46.21634293]
[237.45469666 59.13664627]
[238.95214844 74.06171417]
[234.05073547 88.23831940]
[223.65460205 99.05130005]
[209.68457031 104.50551605]
[224.21438599 108.23169708]
[238.74420166 111.95787811]
[253.27401733 115.68405914]
[261.16452026 102.79098511]
[272.50588989 92.79773712]
[286.28961182 86.59290314]
[301.29010010 84.72821045]
[316.17349243 87.36946869]
[329.61636353 94.28181458]
[340.42340088 104.85061646]
[347.63363647 118.13610077]
[350.60592651 132.95692444]
[349.07601929 147.99522400]
[343.17990112 161.91383362]
[333.44189453 173.47508240]
[320.72790527 181.65098572]
[306.16839600 185.71452332]
[291.05801392 185.30438232]
[276.74038696 180.45701599]
[264.48861694 171.60346985]
[255.39210510 159.53099060]
[250.25973511 145.31303406]
[249.54783630 130.21388245]
[235.01802063 126.48769379]
[220.48820496 122.76151276]
[205.95838928 119.03533173]
[195.94705200 122.04579926]
[186.12048340 115.58626556]
[171.18565369 114.18963623]
[156.25080872 112.79300690]
[141.31596375 111.39637756]
[121.69512939 136.96224976]
[89.80767822 141.62936401]
[83.74597168 155.34999084]
[77.68425751 169.07061768]
[71.62255096 182.79124451]
[65.56083679 196.51187134]
[59.49913025 210.23249817]
[67.29130554 221.59825134]
[68.44236755 235.22183228]
[62.75831223 247.53730774]
[51.82025528 255.37402344]
[38.54629898 256.77276611]
[32.28839493 270.40502930]
[26.03049088 284.03729248]
[19.77258682 297.66955566]
[38.41370392 300.42626953]
[54.11703110 317.68658447]
[56.89815521 332.42651367]
[59.67927933 347.16644287]
[70.77435303 359.24249268]
[65.60621643 374.80599976]
[49.49140549 377.84652710]
[39.00745392 365.23626709]
[44.93935394 349.94757080]
[42.15822983 335.20764160]
[39.37710953 320.46771240]
[32.08622360 318.70904541]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 42]
[5 41]
[6 40]
[8 39]
[9 38]
[10 37]
[15 36]
[16 35]
[17 34]
[18 33]
[20 32]
[21 31]
[22 30]
[43 206]
[44 205]
[45 204]
[46 203]
[50 198]
[51 197]
[52 196]
[53 195]
[54 194]
[55 193]
[67 134]
[68 133]
[69 132]
[70 131]
[71 130]
[72 129]
[73 128]
[74 127]
[79 121]
[80 120]
[81 119]
[82 118]
[83 117]
[90 116]
[91 115]
[92 114]
[93 113]
[94 112]
[100 108]
[101 107]
[102 106]
[144 191]
[145 190]
[146 189]
[147 188]
[160 186]
[161 185]
[162 184]
[163 183]
[208 217]
[209 216]
[210 215]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
