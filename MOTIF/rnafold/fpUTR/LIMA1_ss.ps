%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:51:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCGCGCCCCCGCGGCGGUGGGCGGGGUCCGGGGCGGGGCCGCAGGAGCAGUAGGUGUUAGCAGCUUGGUCGCGACAGGUGCGCUAGGUAGAGCGCCGGGACCUGUGACAGGGCUGGUAGCAGCGCAGAGGAAAGGCGGCUUUUAGCCAGGUAUUUCAGUGUCUGUAGACAAG\
) } def
/len { sequence length } bind def

/coor [
[153.13139343 152.62153625]
[157.34626770 139.15414429]
[146.50434875 128.78819275]
[135.66241455 118.42225647]
[124.82049561 108.05632019]
[113.97856903 97.69037628]
[128.09234619 120.73918915]
[107.50195312 155.16088867]
[98.90443420 167.45246887]
[90.41759491 179.82070923]
[82.04210663 192.26463318]
[73.66661835 204.70855713]
[65.29113007 217.15248108]
[56.91564560 229.59640503]
[56.32843018 245.98503113]
[41.71701431 253.43074036]
[28.11236572 244.27401733]
[29.50978279 227.93450928]
[44.47172165 221.22091675]
[52.84720993 208.77699280]
[61.22269440 196.33306885]
[69.59818268 183.88914490]
[77.97367096 171.44522095]
[79.10374451 164.11593628]
[86.61286926 158.85494995]
[95.21038818 146.56336975]
[86.17718506 134.58834839]
[71.99684906 139.47894287]
[57.81650543 144.36953735]
[43.63616180 149.26013184]
[29.45582008 154.15072632]
[22.76095390 168.46694946]
[7.87558603 173.77745056]
[-6.36905622 166.93159485]
[-11.52188110 151.99090576]
[-4.52580738 137.81944275]
[10.46851730 132.82487488]
[24.56522751 139.97038269]
[38.74556732 135.07978821]
[52.92591095 130.18919373]
[67.10625458 125.29859924]
[81.28659058 120.40800476]
[79.54024506 105.51000977]
[64.61330414 104.03137207]
[49.90328598 111.28033447]
[36.42273712 101.94187927]
[38.03929138 85.62259674]
[53.08997345 79.11038208]
[66.09193420 89.10443115]
[81.01887512 90.58306122]
[86.79772949 85.80238342]
[72.73846436 80.57389069]
[70.23675537 65.78398132]
[81.79427338 56.22240448]
[95.85363007 61.45064163]
[98.35542297 76.24102020]
[104.13427734 71.46034241]
[105.47886658 56.52072906]
[106.82345581 41.58111572]
[108.16804504 26.64150047]
[109.51263428 11.70188618]
[103.04351807 -2.73629689]
[111.89053345 -14.71876621]
[113.23512268 -29.65838051]
[114.57971191 -44.59799576]
[115.92430115 -59.53760910]
[117.26889038 -74.47722626]
[118.61348724 -89.41683960]
[112.14437103 -103.85501862]
[120.99138641 -115.83749390]
[122.33597565 -130.77709961]
[123.68056488 -145.71672058]
[121.45340729 -150.51155090]
[121.32408142 -155.20718384]
[122.89765930 -159.01396179]
[125.52095032 -161.41696167]
[127.66778564 -176.26254272]
[129.81462097 -191.10810852]
[131.96145630 -205.95368958]
[134.10830688 -220.79925537]
[136.25514221 -235.64483643]
[137.86769104 -250.55790710]
[138.94387817 -265.51925659]
[140.02008057 -280.48059082]
[141.09626770 -295.44192505]
[142.17245483 -310.40328979]
[131.63954163 -322.18603516]
[132.60671997 -337.96069336]
[144.50016785 -348.36846924]
[160.26373291 -347.23455811]
[170.54515076 -335.23171997]
[169.24465942 -319.48104858]
[157.13380432 -309.32708740]
[156.05761719 -294.36575317]
[154.98141479 -279.40438843]
[153.90522766 -264.44305420]
[152.82904053 -249.48171997]
[154.59446716 -247.26344299]
[155.57240295 -244.20068359]
[155.43234253 -240.59547424]
[153.96128845 -236.86523438]
[151.10070801 -233.49800110]
[148.95387268 -218.65242004]
[146.80703735 -203.80685425]
[144.66020203 -188.96127319]
[142.51336670 -174.11570740]
[140.36653137 -159.27012634]
[138.62017822 -144.37213135]
[137.27558899 -129.43251038]
[135.93099976 -114.49290466]
[142.49629211 -101.12329865]
[133.55310059 -88.07225037]
[132.20851135 -73.13263702]
[130.86392212 -58.19301987]
[129.51933289 -43.25340652]
[128.17474365 -28.31379128]
[126.83014679 -13.37417698]
[133.39543152 -0.00457486]
[124.45224762 13.04647541]
[123.10765839 27.98608971]
[121.76306915 42.92570496]
[120.41847992 57.86531830]
[119.07389069 72.80493164]
[124.34451294 86.84845734]
[135.18643188 97.21439362]
[146.02835083 107.58033752]
[156.87028503 117.94627380]
[167.71220398 128.31221008]
[186.41142273 123.21652985]
[204.59202576 129.55114746]
[215.92370605 144.95642090]
[216.54817200 163.94168091]
[229.75709534 171.04971313]
[242.96603394 178.15774536]
[256.17495728 185.26576233]
[271.99380493 184.99180603]
[279.53491211 197.83628845]
[292.74383545 204.94432068]
[306.07824707 211.81408691]
[319.53381348 218.44338989]
[332.98937988 225.07269287]
[346.44494629 231.70199585]
[363.32546997 233.27835083]
[366.48370361 249.93553162]
[351.35177612 257.58151245]
[339.81567383 245.15756226]
[326.36007690 238.52825928]
[312.90451050 231.89895630]
[299.44894409 225.26966858]
[294.69009399 225.94363403]
[289.46127319 223.61181641]
[285.63580322 218.15325928]
[272.42687988 211.04522705]
[257.55282593 211.82760620]
[249.06694031 198.47470093]
[235.85800171 191.36666870]
[222.64906311 184.25863647]
[209.44013977 177.15060425]
[207.20576477 179.40818787]
[204.75836182 181.43286133]
[202.12208557 183.20462036]
[206.62910461 197.51150513]
[211.13612366 211.81837463]
[215.64314270 226.12525940]
[228.09017944 236.80250549]
[224.80139160 252.86849976]
[209.16001892 257.79589844]
[197.25656128 246.51585388]
[201.33627319 230.63227844]
[196.82925415 216.32539368]
[192.32223511 202.01852417]
[187.81521606 187.71163940]
[174.13146973 185.83142090]
[162.44696045 178.32647705]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 128]
[3 127]
[4 126]
[5 125]
[6 124]
[8 26]
[9 25]
[10 23]
[11 22]
[12 21]
[13 20]
[14 19]
[27 42]
[28 41]
[29 40]
[30 39]
[31 38]
[43 50]
[44 49]
[57 123]
[58 122]
[59 121]
[60 120]
[61 119]
[63 117]
[64 116]
[65 115]
[66 114]
[67 113]
[68 112]
[70 110]
[71 109]
[72 108]
[76 107]
[77 106]
[78 105]
[79 104]
[80 103]
[81 102]
[82 97]
[83 96]
[84 95]
[85 94]
[86 93]
[132 158]
[133 157]
[134 156]
[135 155]
[137 153]
[138 152]
[139 149]
[140 148]
[141 147]
[142 146]
[161 172]
[162 171]
[163 170]
[164 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
