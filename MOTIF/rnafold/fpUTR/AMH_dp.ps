%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:02:35 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (AMH)
} def

/sequence { (\
ACCUUCCACUCGGCUCACUUAAGGCAGGCAGCCCAGCCCCUGGCAGCACCCACG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 13 0.257361046 ubox
2 24 0.298292490 ubox
2 28 0.209389392 ubox
2 43 0.228528552 ubox
3 12 0.262362812 ubox
3 13 0.017003790 ubox
3 23 0.299696601 ubox
3 24 0.011436035 ubox
3 27 0.224950796 ubox
3 28 0.014724675 ubox
3 31 0.006895430 ubox
3 42 0.229402151 ubox
3 43 0.024142271 ubox
3 46 0.498864076 ubox
4 12 0.017187644 ubox
4 13 0.005993781 ubox
4 22 0.298592406 ubox
4 23 0.011499901 ubox
4 26 0.220766556 ubox
4 27 0.017440498 ubox
4 30 0.007693293 ubox
4 35 0.003346208 ubox
4 42 0.024082208 ubox
4 45 0.494857630 ubox
4 46 0.083259700 ubox
5 12 0.010218774 ubox
5 13 0.022970807 ubox
5 21 0.287660874 ubox
5 22 0.012653490 ubox
5 24 0.011144907 ubox
5 26 0.021141186 ubox
5 30 0.004083561 ubox
5 43 0.010461253 ubox
5 45 0.106009839 ubox
6 12 0.042834544 ubox
6 13 0.311904340 ubox
6 23 0.011179988 ubox
6 24 0.223316043 ubox
6 27 0.006378476 ubox
6 28 0.012538330 ubox
6 42 0.011697635 ubox
6 43 0.551965050 ubox
7 12 0.315836629 ubox
7 23 0.223222665 ubox
7 27 0.013828068 ubox
7 42 0.553196690 ubox
8 41 0.537081520 ubox
9 23 0.024239507 ubox
9 24 0.012335706 ubox
9 27 0.069785614 ubox
9 28 0.034739479 ubox
9 31 0.005694484 ubox
9 36 0.448374693 ubox
9 43 0.025650532 ubox
9 46 0.036147073 ubox
10 22 0.025867676 ubox
10 23 0.011146717 ubox
10 24 0.012001698 ubox
10 26 0.065081803 ubox
10 27 0.035391686 ubox
10 28 0.030225552 ubox
10 30 0.005634927 ubox
10 35 0.450711862 ubox
10 42 0.025010096 ubox
10 43 0.011603979 ubox
10 45 0.033762210 ubox
11 23 0.015900009 ubox
11 27 0.108771858 ubox
11 42 0.016131722 ubox
11 54 0.048029459 ubox
12 19 0.137838620 ubox
12 20 0.020457354 ubox
12 33 0.575602544 ubox
12 34 0.036969555 ubox
12 38 0.442187285 ubox
12 39 0.040789663 ubox
12 40 0.047652553 ubox
12 41 0.013526045 ubox
12 50 0.076892168 ubox
12 51 0.127912426 ubox
12 53 0.051564293 ubox
13 18 0.141376198 ubox
13 19 0.018023897 ubox
13 25 0.267473924 ubox
13 29 0.042656740 ubox
13 32 0.577317705 ubox
13 33 0.026288053 ubox
13 37 0.443753794 ubox
13 38 0.031359117 ubox
13 39 0.047361241 ubox
13 40 0.013401943 ubox
13 44 0.086894834 ubox
13 47 0.292089759 ubox
13 49 0.073249124 ubox
13 50 0.125302478 ubox
14 23 0.045579277 ubox
14 24 0.267493631 ubox
14 27 0.013438496 ubox
14 28 0.042823728 ubox
14 31 0.577896021 ubox
14 36 0.444089767 ubox
14 43 0.087123920 ubox
14 46 0.294709451 ubox
15 22 0.047678073 ubox
15 23 0.226883570 ubox
15 24 0.030086119 ubox
15 26 0.012691497 ubox
15 27 0.041003007 ubox
15 28 0.010328443 ubox
15 30 0.571068224 ubox
15 35 0.426988866 ubox
15 42 0.074284292 ubox
15 43 0.018167760 ubox
15 45 0.284775951 ubox
16 23 0.134808713 ubox
16 27 0.022582339 ubox
16 42 0.054326942 ubox
17 41 0.049188635 ubox
18 24 0.045566605 ubox
18 27 0.558347314 ubox
18 28 0.138148779 ubox
18 31 0.016817994 ubox
18 36 0.034530535 ubox
18 43 0.235895897 ubox
18 46 0.080368220 ubox
19 23 0.041294676 ubox
19 26 0.526990221 ubox
19 27 0.137672869 ubox
19 28 0.019603130 ubox
19 30 0.016020907 ubox
19 31 0.006011337 ubox
19 35 0.046692468 ubox
19 36 0.004614682 ubox
19 42 0.229975504 ubox
19 43 0.077207796 ubox
19 45 0.077850509 ubox
19 46 0.006264262 ubox
20 26 0.128051307 ubox
20 27 0.019698701 ubox
20 30 0.006098125 ubox
20 35 0.023848772 ubox
20 42 0.076961926 ubox
20 45 0.006830215 ubox
21 41 0.062483169 ubox
22 41 0.262741723 ubox
23 33 0.449214869 ubox
23 34 0.067507966 ubox
23 38 0.234788514 ubox
23 39 0.016186882 ubox
23 40 0.275461039 ubox
23 41 0.020184295 ubox
23 50 0.142742676 ubox
23 51 0.252235447 ubox
24 32 0.451954184 ubox
24 33 0.053682385 ubox
24 37 0.235465026 ubox
24 38 0.011851431 ubox
24 39 0.274018923 ubox
24 40 0.020858951 ubox
24 44 0.030882408 ubox
24 47 0.012541916 ubox
24 49 0.143192522 ubox
24 50 0.251508172 ubox
25 31 0.453515772 ubox
25 36 0.235379475 ubox
25 42 0.054683821 ubox
25 43 0.024366849 ubox
25 46 0.012600335 ubox
26 41 0.058198978 ubox
27 33 0.050194577 ubox
27 34 0.230002303 ubox
27 38 0.287063958 ubox
27 39 0.007781292 ubox
27 40 0.056679996 ubox
27 41 0.005327885 ubox
27 50 0.083002256 ubox
27 51 0.287245011 ubox
28 32 0.049969671 ubox
28 33 0.227577673 ubox
28 37 0.288721760 ubox
28 38 0.006828310 ubox
28 39 0.055903841 ubox
28 40 0.005796900 ubox
28 44 0.008988029 ubox
28 47 0.414026025 ubox
28 49 0.081189606 ubox
28 50 0.286703679 ubox
29 36 0.288620469 ubox
29 42 0.011802575 ubox
29 43 0.006739460 ubox
29 46 0.416822770 ubox
30 41 0.012838021 ubox
31 37 0.053945292 ubox
31 40 0.012856228 ubox
31 44 0.433240712 ubox
31 47 0.341568844 ubox
32 36 0.053624623 ubox
32 43 0.383302356 ubox
32 46 0.340773768 ubox
33 42 0.324834549 ubox
33 43 0.349168009 ubox
34 42 0.407599921 ubox
35 41 0.454392896 ubox
36 40 0.444979677 ubox
36 44 0.407475037 ubox
36 47 0.048826392 ubox
37 43 0.409026343 ubox
37 46 0.049024559 ubox
38 42 0.406068413 ubox
40 46 0.008882413 ubox
41 45 0.008139309 ubox
41 48 0.041093634 ubox
41 52 0.208268329 ubox
41 54 0.008969520 ubox
42 47 0.047970847 ubox
42 50 0.076820813 ubox
42 51 0.242443342 ubox
42 53 0.017349071 ubox
43 49 0.077900334 ubox
43 50 0.240487702 ubox
3 46 0.9500000 lbox
4 45 0.9500000 lbox
6 43 0.9500000 lbox
7 42 0.9500000 lbox
8 41 0.9500000 lbox
12 38 0.9500000 lbox
13 37 0.9500000 lbox
14 36 0.9500000 lbox
15 35 0.9500000 lbox
23 33 0.9500000 lbox
24 32 0.9500000 lbox
25 31 0.9500000 lbox
showpage
end
%%EOF
