%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:51:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUCAUUGCUUUGGCGCCGUCUGGGGAGCGCGAGCCCGCGGGUGGCGCGCGGCGCAUGGUGGCGGCUCCUUUCGGAGCGCAGCCGAACCUCUGACCCGGACUCCGUUACCCCUGCCCGGCGCGCCCCGGCGGCCGGCUGGAGGCAGAAACAGCAGAAGCGUUAACAGCAGCAGCGGCGGCGGCUGCUCCGCCGCCGUCUCCGCGGGAGC\
) } def
/len { sequence length } bind def

/coor [
[-36.67347336 134.90116882]
[-49.56687546 142.56668091]
[-64.55915833 143.04791260]
[-77.91761780 136.22503662]
[-86.31634521 123.79679108]
[-87.66426849 108.85748291]
[-81.62585449 95.12668610]
[-79.48402405 80.28038788]
[-88.48135376 92.28239441]
[-97.47868347 104.28439331]
[-106.47601318 116.28639984]
[-104.43680573 131.72917175]
[-113.73235321 143.77275085]
[-128.46723938 145.62164307]
[-137.46456909 157.62365723]
[-139.55134583 173.30664062]
[-153.37631226 178.84915161]
[-162.37364197 190.85115051]
[-159.88726807 206.45863342]
[-169.23280334 219.20368958]
[-184.86570740 221.52491760]
[-197.51124573 212.04515076]
[-199.66705322 196.38859558]
[-190.05412292 183.84397888]
[-174.37564087 181.85382080]
[-165.37832642 169.85182190]
[-163.93508911 155.02729797]
[-149.46658325 148.62632751]
[-140.46925354 136.62431335]
[-142.82659912 121.96217346]
[-133.87300110 109.66226959]
[-118.47801208 107.28907013]
[-109.48069000 95.28707123]
[-100.48336029 83.28506470]
[-91.48603058 71.28305817]
[-91.37383270 56.28348160]
[-100.19061279 44.14822769]
[-109.00738525 32.01296997]
[-117.82416534 19.87771606]
[-132.19531250 13.26101398]
[-133.41661072 -1.58343673]
[-142.23338318 -13.71869183]
[-149.80990601 -18.82247734]
[-151.08969116 -26.10207939]
[-159.72393799 -38.36787033]
[-168.35820007 -50.63365936]
[-176.99244690 -62.89945221]
[-185.62670898 -75.16524506]
[-194.26097107 -87.43103027]
[-202.89521790 -99.69682312]
[-211.62098694 -111.89768982]
[-220.43775940 -124.03294373]
[-228.01428223 -129.13673401]
[-229.29405212 -136.41633606]
[-237.92831421 -148.68211365]
[-246.56257629 -160.94790649]
[-263.44577026 -168.29815674]
[-264.33660889 -185.82418823]
[-273.15341187 -197.95944214]
[-281.97018433 -210.09469604]
[-290.78695679 -222.22994995]
[-299.60372925 -234.36520386]
[-308.42053223 -246.50047302]
[-317.23730469 -258.63571167]
[-326.05407715 -270.77096558]
[-343.04531860 -277.86782837]
[-344.19827271 -295.37857056]
[-353.19561768 -307.38058472]
[-362.19293213 -319.38259888]
[-379.55209351 -321.54260254]
[-389.77719116 -335.31756592]
[-386.93338013 -351.89285278]
[-396.10925293 -363.75891113]
[-405.28512573 -375.62496948]
[-414.46099854 -387.49102783]
[-423.63684082 -399.35711670]
[-432.81271362 -411.22317505]
[-442.25253296 -422.88037109]
[-451.95150757 -434.32281494]
[-467.56356812 -439.34234619]
[-470.75759888 -455.42745972]
[-458.24783325 -466.03112793]
[-442.90325928 -460.24523926]
[-440.50906372 -444.02178955]
[-430.81008911 -432.57934570]
[-427.34426880 -431.92697144]
[-424.02239990 -429.56298828]
[-421.64572144 -425.57345581]
[-420.94665527 -420.39904785]
[-411.77078247 -408.53295898]
[-402.59490967 -396.66690063]
[-393.41906738 -384.80084229]
[-384.24319458 -372.93478394]
[-375.06732178 -361.06872559]
[-362.18276978 -361.23886108]
[-351.39181519 -353.84634399]
[-346.76095581 -341.40536499]
[-350.19091797 -328.37991333]
[-341.19360352 -316.37792969]
[-332.19625854 -304.37591553]
[-320.26965332 -302.35250854]
[-312.67568970 -292.42639160]
[-313.91882324 -279.58776855]
[-305.10205078 -267.45251465]
[-296.28524780 -255.31724548]
[-287.46847534 -243.18199158]
[-278.65170288 -231.04673767]
[-269.83493042 -218.91148376]
[-261.01815796 -206.77622986]
[-252.20137024 -194.64097595]
[-240.30636597 -192.43936157]
[-232.86170959 -182.40077209]
[-234.29678345 -169.58216858]
[-225.66252136 -157.31637573]
[-217.02825928 -145.05058289]
[-208.30250549 -132.84971619]
[-199.48573303 -120.71446991]
[-193.01048279 -117.15054321]
[-190.62942505 -108.33107758]
[-181.99517822 -96.06528473]
[-173.36091614 -83.79949951]
[-164.72665405 -71.53370667]
[-156.09240723 -59.26791763]
[-147.45814514 -47.00212479]
[-138.82389832 -34.73633575]
[-130.09812927 -22.53547096]
[-121.28134918 -10.40021515]
[-107.54084015 -4.65150738]
[-105.68891144 11.06093788]
[-96.87213135 23.19619179]
[-88.05535126 35.33144760]
[-79.23857880 47.46670151]
[-52.61621094 59.92724991]
[-38.57268906 65.19787598]
[-23.93828011 62.42598724]
[-13.73676968 74.51895142]
[0.30675340 79.78957367]
[7.67417908 79.19673157]
[14.51995277 85.24550629]
[28.48305893 90.72562408]
[42.44616699 96.20574188]
[56.40927124 101.68585205]
[70.37237549 107.16596985]
[84.33548737 112.64608765]
[72.37222290 100.38190460]
[72.06726837 78.69760895]
[89.29284668 58.73953247]
[120.04746246 54.05809784]
[135.00552368 52.93714523]
[149.96357727 51.81619644]
[158.28811646 48.05397797]
[165.15348816 50.79206467]
[180.12663269 49.89500427]
[193.50740051 40.41410446]
[208.29345703 47.50666046]
[209.27420044 63.87645721]
[195.44070435 72.68364716]
[181.02369690 64.86815643]
[166.05055237 65.76521301]
[151.08451843 66.77425385]
[136.12646484 67.89520264]
[121.16841125 69.01615143]
[119.99515533 76.42382050]
[134.81044006 78.77057648]
[132.46342468 93.58583069]
[117.64863586 91.23914337]
[116.47537994 98.64680481]
[130.35493469 104.33518982]
[146.52420044 101.59888458]
[156.76863098 114.40448761]
[150.54965210 129.57868958]
[134.26481628 131.51156616]
[124.66655731 118.21475220]
[110.78699493 112.52636719]
[102.24472809 124.85639954]
[112.44731903 135.85217285]
[122.64990997 146.84796143]
[132.85250854 157.84373474]
[143.05509949 168.83950806]
[153.25769043 179.83529663]
[163.46028137 190.83106995]
[173.66287231 201.82684326]
[189.57641602 203.86116028]
[197.78439331 217.64553833]
[191.99032593 232.60575867]
[176.63893127 237.26564026]
[163.50650024 228.05052185]
[162.66708374 212.02943420]
[152.46449280 201.03366089]
[142.26190186 190.03788757]
[132.05931091 179.04209900]
[121.85671997 168.04632568]
[111.65412903 157.05055237]
[101.45153809 146.05476379]
[91.24894714 135.05899048]
[78.85536957 126.60919189]
[64.89226532 121.12907410]
[50.92915726 115.64895630]
[36.96604919 110.16884613]
[23.00294304 104.68872833]
[9.03983784 99.20861053]
[-4.96386909 93.83309174]
[-19.00739288 88.56246948]
[-34.64628601 90.95736694]
[-43.84331131 79.24139404]
[-57.88683319 73.97077179]
[-48.08935165 85.32900238]
[-35.60861206 93.64952087]
[-28.70199203 106.96487427]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 35]
[9 34]
[10 33]
[11 32]
[14 29]
[15 28]
[17 26]
[18 25]
[36 132]
[37 131]
[38 130]
[39 129]
[41 127]
[42 126]
[44 125]
[45 124]
[46 123]
[47 122]
[48 121]
[49 120]
[50 119]
[51 117]
[52 116]
[54 115]
[55 114]
[56 113]
[58 110]
[59 109]
[60 108]
[61 107]
[62 106]
[63 105]
[64 104]
[65 103]
[67 100]
[68 99]
[69 98]
[72 94]
[73 93]
[74 92]
[75 91]
[76 90]
[77 89]
[78 85]
[79 84]
[133 206]
[134 205]
[136 203]
[137 202]
[139 201]
[140 200]
[141 199]
[142 198]
[143 197]
[144 196]
[148 162]
[149 161]
[150 160]
[152 159]
[153 158]
[167 174]
[168 173]
[175 195]
[176 194]
[177 193]
[178 192]
[179 191]
[180 190]
[181 189]
[182 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
