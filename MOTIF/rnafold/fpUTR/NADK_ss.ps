%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:55:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAUCCCCCAAGUUCUCAUGAUCCUUGCUUCCCUUUCCAGUCACCCUUGGUGCCCUGUACUUCACUGUGGUCCUGAACUGAAGAGCUGUGUUUUUCAGGAAGACUUGGCCAGGCCGUGUUCCGUGUCUCUGGAUUCAAGUCCCAGGAGUCCUGACCAGAGAGCAGGCAUCAGUGUUUUUCUGACCGAAGUUCUCAUUUCCUGACA\
) } def
/len { sequence length } bind def

/coor [
[157.29530334 76.90719604]
[168.00994873 87.40464783]
[173.93562317 101.18457794]
[174.18457031 116.18251038]
[168.71949768 130.15150452]
[158.35916138 140.99877930]
[144.65571594 147.09922791]
[129.66215515 147.53889465]
[115.62782288 142.25379944]
[107.80010223 155.04937744]
[99.97238159 167.84495544]
[92.14465332 180.64053345]
[92.10568237 199.05282593]
[76.37780762 206.83370972]
[68.74612427 219.74716187]
[69.12055206 236.14204407]
[54.97068787 244.43139648]
[40.85270691 236.08786011]
[41.28997421 219.69453430]
[55.83266830 212.11547852]
[63.46435165 199.20202637]
[60.75731277 187.40972900]
[67.01301575 176.58784485]
[79.34908295 172.81280518]
[87.17680359 160.01722717]
[95.00452423 147.22164917]
[102.83225250 134.42608643]
[98.77307129 128.11949158]
[86.15989685 136.23785400]
[73.54671478 144.35620117]
[60.93353653 152.47456360]
[48.32022476 160.59271240]
[40.20228577 147.97926331]
[52.81517792 139.86138916]
[65.42835999 131.74302673]
[78.04153442 123.62467194]
[90.65471649 115.50630951]
[86.59553528 109.19972229]
[71.70703125 111.02523804]
[56.81853104 112.85075378]
[42.37400818 124.26873016]
[26.50076103 116.78887939]
[11.64182949 118.84123230]
[-3.21710205 120.89358521]
[-18.07603455 122.94593811]
[-32.93892288 131.10258484]
[-44.89125824 119.07852173]
[-36.64583969 104.26469421]
[-20.12838554 108.08700562]
[-5.26945496 106.03465271]
[9.58947659 103.98229980]
[24.44840813 101.92994690]
[32.00080109 92.47755432]
[44.36606979 90.64805603]
[54.99301529 97.96225739]
[69.88151550 96.13673401]
[84.77001953 94.31121826]
[86.59553528 79.42272186]
[72.58909607 74.05432129]
[58.58266068 68.68592072]
[44.25186920 75.34954834]
[29.43543816 69.84963226]
[22.92370033 55.44919205]
[28.57994843 40.69173813]
[43.04843521 34.33261490]
[57.74526215 40.14457321]
[63.95106125 54.67948151]
[77.95749664 60.04788208]
[91.96393585 65.41628265]
[106.91120148 64.15959167]
[119.82466125 56.52791214]
[132.73811340 48.89622879]
[136.77967834 33.85284042]
[149.98448181 26.29718399]
[164.30114746 30.24289894]
[177.21459961 22.61121750]
[190.12805176 14.97953415]
[198.07202148 1.29727769]
[212.96546936 1.48293138]
[225.87892151 -6.14875174]
[238.79237366 -13.78043461]
[244.59100342 -20.84355164]
[251.96147156 -21.42830849]
[264.98980713 -28.86217499]
[278.01815796 -36.29604340]
[291.04647827 -43.72990799]
[304.07482910 -51.16377640]
[302.59558105 -63.09766006]
[305.22109985 -74.79727173]
[311.62084961 -84.89620972]
[321.02487183 -92.22310638]
[332.31640625 -95.93745422]
[344.16442871 -95.62602234]
[355.18069458 -91.34864807]
[364.08218384 -83.62854767]
[377.43688965 -90.45877838]
[390.79159546 -97.28900909]
[404.14627075 -104.11924744]
[417.50097656 -110.94947815]
[430.85568237 -117.77970886]
[444.21035767 -124.60993958]
[457.56506348 -131.44017029]
[470.91976929 -138.27040100]
[484.27447510 -145.10063171]
[497.57669067 -152.03250122]
[510.82568359 -159.06559753]
[524.07464600 -166.09869385]
[537.32366943 -173.13179016]
[538.86334229 -182.44140625]
[544.43328857 -189.88699341]
[552.68164062 -193.87272644]
[561.70129395 -193.61766052]
[569.47052002 -189.30557251]
[583.02734375 -195.72535706]
[596.58410645 -202.14514160]
[603.00384521 -208.64886475]
[610.39691162 -208.55770874]
[624.05004883 -214.77000427]
[637.70312500 -220.98229980]
[651.35626221 -227.19461060]
[665.00933838 -233.40690613]
[670.63079834 -247.93403625]
[684.56549072 -254.03970337]
[698.38018799 -248.59100342]
[712.03332520 -254.80329895]
[717.28161621 -266.58822632]
[728.78436279 -271.48040771]
[740.15954590 -267.35833740]
[753.90582275 -273.36172485]
[763.45587158 -285.97549438]
[778.21600342 -283.97866821]
[791.96228027 -289.98202515]
[805.70855713 -295.98541260]
[819.45477295 -301.98876953]
[833.20104980 -307.99215698]
[846.94732666 -313.99551392]
[849.29498291 -329.24322510]
[859.53063965 -340.78598022]
[874.38806152 -344.94055176]
[889.12634277 -340.38122559]
[899.04248047 -328.56289673]
[900.97235107 -313.25671387]
[894.30010986 -299.34683228]
[881.15484619 -291.27185059]
[865.73114014 -291.60848999]
[852.95068359 -300.24926758]
[839.20440674 -294.24591064]
[825.45819092 -288.24252319]
[811.71191406 -282.23916626]
[797.96563721 -276.23577881]
[784.21942139 -270.23242188]
[775.65258789 -258.04803467]
[759.90917969 -259.61547852]
[746.16296387 -253.61209106]
[736.52581787 -238.94807434]
[718.24560547 -241.15019226]
[704.59252930 -234.93789673]
[699.62481689 -220.94297791]
[685.86712646 -214.44833374]
[671.22161865 -219.75379944]
[657.56854248 -213.54150391]
[643.91540527 -207.32919312]
[630.26232910 -201.11689758]
[616.60925293 -194.90460205]
[603.00390625 -188.58836365]
[589.44708252 -182.16857910]
[575.89031982 -175.74879456]
[565.68322754 -157.81294250]
[544.35675049 -159.88279724]
[531.10772705 -152.84970093]
[517.85876465 -145.81660461]
[504.60977173 -138.78352356]
[500.17398071 -132.86833191]
[491.10470581 -131.74594116]
[477.75000000 -124.91571045]
[464.39529419 -118.08547211]
[451.04058838 -111.25524139]
[437.68591309 -104.42501068]
[424.33120728 -97.59477997]
[410.97650146 -90.76454926]
[397.62182617 -83.93431854]
[384.26712036 -77.10408020]
[370.91241455 -70.27384949]
[370.82669067 -52.15735245]
[361.51596069 -36.51716995]
[345.48181152 -27.72423172]
[327.11849976 -28.28675842]
[311.50869751 -38.13543701]
[298.48034668 -30.70157051]
[285.45202637 -23.26770401]
[272.42367554 -15.83383656]
[259.39532471 -8.39997005]
[246.42405701 -0.86697567]
[233.51060486 6.76470709]
[220.59715271 14.39638996]
[213.57684326 27.53277779]
[197.75973511 27.89299202]
[184.84628296 35.52467728]
[171.93283081 43.15635681]
[168.48455811 57.60091019]
[155.49719238 65.52448273]
[140.36979675 61.80968857]
[127.45634460 69.44136810]
[114.54288483 77.07305145]
[128.39704895 71.32310486]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 27]
[10 26]
[11 25]
[12 24]
[14 21]
[15 20]
[38 57]
[39 56]
[40 55]
[42 52]
[43 51]
[44 50]
[45 49]
[58 69]
[59 68]
[60 67]
[70 204]
[71 203]
[72 202]
[75 199]
[76 198]
[77 197]
[79 195]
[80 194]
[81 193]
[83 192]
[84 191]
[85 190]
[86 189]
[87 188]
[95 183]
[96 182]
[97 181]
[98 180]
[99 179]
[100 178]
[101 177]
[102 176]
[103 175]
[104 174]
[105 172]
[106 171]
[107 170]
[108 169]
[113 167]
[114 166]
[115 165]
[117 164]
[118 163]
[119 162]
[120 161]
[121 160]
[124 157]
[125 156]
[128 154]
[129 153]
[131 151]
[132 150]
[133 149]
[134 148]
[135 147]
[136 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
