%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:50:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCCAGGUCGGCCGCCCCCACCAGGUCCAGUUCCAGAGCCCAGGCCGGUCGGCCGGGCCCGCGUGCCCUCGGCGGGCUGCGCAGAGCGCGGGAGCGGUUUGGGGCUGGGCAUGCUGGGAGCCCCUCGGGCAACGGCCGCCGCCGCCACAGCCACACAGCCGCCGCCACUGCGUCCGUCCCCGGUGAGCGCCGCUGACGCGCGGAG\
) } def
/len { sequence length } bind def

/coor [
[-501.78665161 624.98400879]
[-513.60882568 615.75170898]
[-513.91748047 600.75427246]
[-526.03930664 609.58947754]
[-538.16119385 618.42462158]
[-544.75604248 632.80578613]
[-559.59863281 634.04962158]
[-571.72052002 642.88482666]
[-583.84234619 651.72003174]
[-595.96423340 660.55517578]
[-608.08605957 669.39038086]
[-620.20794678 678.22558594]
[-632.32977295 687.06072998]
[-644.45166016 695.89593506]
[-656.57348633 704.73114014]
[-668.62799072 713.65802002]
[-680.61437988 722.67614746]
[-675.88763428 737.88970947]
[-676.65423584 753.77526855]
[-682.80316162 768.41345215]
[-693.57409668 780.04193115]
[-707.65161133 787.26745605]
[-723.32562256 789.23297119]
[-738.69903564 785.71911621]
[-751.91760254 777.16851807]
[-763.76574707 786.36749268]
[-764.17810059 801.99963379]
[-774.58074951 813.67517090]
[-790.06195068 815.88128662]
[-803.31188965 807.57629395]
[-808.07440186 792.68157959]
[-802.10070801 778.22998047]
[-788.21148682 771.04504395]
[-772.96472168 774.51934814]
[-761.11657715 765.32037354]
[-765.85736084 751.97930908]
[-766.24633789 737.80487061]
[-762.23217773 724.18280029]
[-754.19476318 712.44885254]
[-742.90917969 703.75805664]
[-729.47082520 698.97076416]
[-715.18951416 698.56756592]
[-701.46130371 702.60113525]
[-689.63250732 710.68981934]
[-677.64611816 701.67163086]
[-674.19000244 695.13623047]
[-665.40869141 692.60925293]
[-653.28686523 683.77404785]
[-641.16497803 674.93890381]
[-629.04309082 666.10369873]
[-616.92126465 657.26849365]
[-604.79937744 648.43334961]
[-592.67755127 639.59814453]
[-580.55566406 630.76293945]
[-568.43383789 621.92779541]
[-562.70599365 608.17852783]
[-546.99633789 606.30279541]
[-534.87451172 597.46759033]
[-522.75262451 588.63238525]
[-510.97463989 579.34375000]
[-499.55746460 569.61505127]
[-488.14028931 559.88629150]
[-476.72314453 550.15759277]
[-465.30596924 540.42883301]
[-453.88879395 530.70013428]
[-442.47161865 520.97137451]
[-441.82882690 517.50152588]
[-439.47155762 514.17114258]
[-435.48397827 511.78363037]
[-430.30621338 511.07409668]
[-418.45806885 501.87509155]
[-406.60995483 492.67608643]
[-394.76181030 483.47708130]
[-382.91366577 474.27807617]
[-371.06552124 465.07907104]
[-359.21740723 455.88006592]
[-347.43939209 446.59143066]
[-335.73223877 437.21368408]
[-324.02505493 427.83593750]
[-320.76889038 421.19860840]
[-312.06832886 418.40631104]
[-300.22018433 409.20730591]
[-288.37203979 400.00833130]
[-291.60333252 385.44726562]
[-288.17797852 370.86727905]
[-278.72323608 359.17242432]
[-265.07278442 352.71606445]
[-249.91114807 352.82711792]
[-236.24600220 359.53717041]
[-224.39785767 350.33819580]
[-212.54972839 341.13919067]
[-200.70158386 331.94018555]
[-188.85343933 322.74118042]
[-183.54551697 308.82446289]
[-167.90005493 306.47277832]
[-156.05192566 297.27377319]
[-144.20378113 288.07476807]
[-132.35563660 278.87576294]
[-120.50750732 269.67678833]
[-114.77134705 253.09315491]
[-96.51040649 250.73388672]
[-84.80323792 241.35614014]
[-73.09606934 231.97837830]
[-61.46039963 222.51206970]
[-49.89689636 212.95771790]
[-38.33339691 203.40338135]
[-26.76989555 193.84904480]
[-15.20639515 184.29469299]
[-18.35871315 171.00463867]
[-15.46279335 157.58865356]
[-7.02816916 146.67752075]
[5.34387684 140.43589783]
[19.26407242 140.13304138]
[32.01651764 145.88507080]
[43.72368622 136.50730896]
[55.43085480 127.12956238]
[67.13802338 117.75180817]
[78.77368927 108.28549194]
[90.33719635 98.73114777]
[74.93164062 83.14488220]
[74.93367767 55.96440506]
[84.40000153 44.32873535]
[93.86631775 32.69306564]
[103.33263397 21.05739594]
[108.63830566 4.95503044]
[125.58014679 5.59577608]
[129.65440369 22.05289459]
[114.96830750 30.52371597]
[105.50198364 42.15938568]
[96.03566742 53.79505539]
[86.56935120 65.43072510]
[91.30250549 71.24855804]
[100.76882935 82.88422394]
[105.50198364 88.70206451]
[118.82026672 81.80108643]
[132.13854980 74.90010834]
[145.45681763 67.99913788]
[153.83369446 53.90090561]
[170.22593689 54.37690735]
[177.77059937 68.93746948]
[168.70640564 82.60393524]
[152.35780334 81.31741333]
[139.03952026 88.21839142]
[125.72123718 95.11936188]
[112.40296173 102.02033997]
[99.89153290 110.29464722]
[88.32803345 119.84899139]
[83.70382690 127.73018646]
[76.51577759 129.45896912]
[64.80860901 138.83673096]
[53.10144043 148.21447754]
[41.39427185 157.59222412]
[44.06265259 173.90855408]
[38.17316437 189.25654602]
[25.42131424 199.48197937]
[9.34606552 201.86837769]
[-5.65205336 195.85820007]
[-17.21555328 205.41253662]
[-28.77905464 214.96688843]
[-40.34255600 224.52122498]
[-51.90605545 234.07556152]
[-56.53026199 241.95677185]
[-63.71831512 243.68554688]
[-75.42548370 253.06330872]
[-87.13265228 262.44104004]
[-89.32287598 275.15399170]
[-99.26950836 282.72357178]
[-111.30850220 281.52490234]
[-123.15663910 290.72390747]
[-135.00477600 299.92291260]
[-146.85292053 309.12191772]
[-158.70104980 318.32092285]
[-164.85644531 332.89559937]
[-179.65444946 334.58932495]
[-191.50257874 343.78833008]
[-203.35072327 352.98730469]
[-215.19885254 362.18630981]
[-227.04699707 371.38531494]
[-223.93257141 386.28704834]
[-227.58212280 401.00329590]
[-237.21981812 412.62805176]
[-250.89283752 418.88983154]
[-265.86691284 418.59530640]
[-279.17303467 411.85644531]
[-291.02117920 421.05545044]
[-302.86932373 430.25445557]
[-314.64730835 439.54309082]
[-326.35449219 448.92086792]
[-338.06164551 458.29861450]
[-342.80493164 466.10870361]
[-350.01840210 467.72821045]
[-361.86651611 476.92721558]
[-373.71466064 486.12622070]
[-385.56280518 495.32522583]
[-397.41094971 504.52423096]
[-409.25909424 513.72320557]
[-421.10720825 522.92224121]
[-432.74288940 532.38854980]
[-444.16006470 542.11724854]
[-455.57723999 551.84600830]
[-466.99441528 561.57476807]
[-478.41156006 571.30346680]
[-489.82873535 581.03222656]
[-501.24591064 590.76092529]
[-486.73397827 594.55615234]
[-480.51089478 608.20434570]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 59]
[4 58]
[5 57]
[7 55]
[8 54]
[9 53]
[10 52]
[11 51]
[12 50]
[13 49]
[14 48]
[15 47]
[16 45]
[17 44]
[25 35]
[26 34]
[60 204]
[61 203]
[62 202]
[63 201]
[64 200]
[65 199]
[66 198]
[70 197]
[71 196]
[72 195]
[73 194]
[74 193]
[75 192]
[76 191]
[77 189]
[78 188]
[79 187]
[81 186]
[82 185]
[83 184]
[89 178]
[90 177]
[91 176]
[92 175]
[93 174]
[95 172]
[96 171]
[97 170]
[98 169]
[99 168]
[101 165]
[102 164]
[103 163]
[104 161]
[105 160]
[106 159]
[107 158]
[108 157]
[114 152]
[115 151]
[116 150]
[117 149]
[118 147]
[119 146]
[121 131]
[122 130]
[123 129]
[124 128]
[134 145]
[135 144]
[136 143]
[137 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
