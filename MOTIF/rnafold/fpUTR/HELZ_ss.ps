%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:28:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGCUUUGUGGGGACGUUGACAAGUGGAUCCAAGAUGGCGUAGAAAGUAAUGACAGGAUUUGGAUGAAGUAAUGGAUCACUAAUGAACUACAGUGCUGGUGAGAUGUGUAAGAAAUUAUAAAGAGCUCUGAUGGGCUAUUUGGGUGAUACCCAGUGCAGUGAACUGCAGGAUUUUUGUCCCUGAGUC\
) } def
/len { sequence length } bind def

/coor [
[63.24796295 349.78555298]
[49.06656647 342.28439331]
[46.23096466 326.49392700]
[56.91638947 314.52725220]
[57.41496277 299.53555298]
[57.91353607 284.54382324]
[58.41210938 269.55212402]
[56.26584244 266.73217773]
[55.38911438 262.72653198]
[56.32693481 258.14804077]
[59.32777023 253.83084106]
[60.57300186 238.88261414]
[61.81822968 223.93440247]
[63.06345749 208.98617554]
[64.30868530 194.03794861]
[65.55391693 179.08972168]
[67.61527252 85.28649139]
[52.88849640 82.43659210]
[38.16171265 79.58669281]
[28.05934525 91.07100677]
[13.66009331 95.92469788]
[-1.13696170 92.93914795]
[-12.37767792 83.01431274]
[-17.10947609 68.89073181]
[-31.83625793 66.04083252]
[-46.56303787 63.19093704]
[-61.28982162 60.34104156]
[-70.32917023 61.78408432]
[-76.23679352 57.31944656]
[-90.91416931 54.22516251]
[-105.59154510 51.13087845]
[-120.26892853 48.03659821]
[-134.94630432 44.94231415]
[-148.08737183 53.30594254]
[-162.92823792 49.95881653]
[-170.82069397 37.37928009]
[-185.49806213 34.28499985]
[-198.63912964 42.64862823]
[-213.47999573 39.30150223]
[-221.37245178 26.72196579]
[-236.04983521 23.62768364]
[-250.72721863 20.53339958]
[-263.86828613 28.89702988]
[-278.70913696 25.54990196]
[-286.60159302 12.97036743]
[-301.27896118 9.87608433]
[-315.95635986 6.78180218]
[-325.23223877 18.90289497]
[-338.85253906 25.79130745]
[-354.11291504 26.07934380]
[-367.98345947 19.70981026]
[-377.71014404 7.94738579]
[-381.36169434 -6.87249327]
[-378.21313477 -21.80732918]
[-368.88961792 -33.89179993]
[-355.24227905 -40.72652435]
[-339.98086548 -40.95446014]
[-326.13552856 -34.53035736]
[-316.45526123 -22.72971916]
[-312.86206055 -7.89557552]
[-298.18469238 -4.80129290]
[-283.50732422 -1.70701039]
[-271.20825195 -10.02976894]
[-256.27920532 -7.10081100]
[-247.63293457 5.85602283]
[-232.95555115 8.95030499]
[-218.27816772 12.04458809]
[-205.97909546 3.72182965]
[-191.05006409 6.65078735]
[-182.40379333 19.60762024]
[-167.72640991 22.70190430]
[-155.42733765 14.37914562]
[-140.49830627 17.30810356]
[-131.85202026 30.26493645]
[-117.17464447 33.35921860]
[-102.49726868 36.45350266]
[-87.81988525 39.54778671]
[-73.14250946 42.64206696]
[-58.43992233 45.61425781]
[-43.71314240 48.46415710]
[-28.98636055 51.31405258]
[-14.25957966 54.16394806]
[-4.60037851 42.82527924]
[9.53142357 37.81048584]
[24.37401390 40.56073380]
[35.92297363 50.43587112]
[41.01160812 64.85991669]
[55.73839188 67.70980835]
[70.46517181 70.55970764]
[82.92855072 62.21320343]
[85.90074158 47.51061630]
[88.87294006 32.80802536]
[91.84513092 18.10544014]
[81.52087402 6.67233276]
[79.92706299 -8.47075748]
[87.46649170 -21.49462128]
[101.06641388 -27.50961876]
[104.03860474 -42.21220779]
[98.30562592 -57.57661438]
[108.95236206 -70.04975128]
[125.02635193 -66.80032349]
[129.99206543 -51.17106247]
[118.74118805 -39.24001312]
[115.76899719 -24.53742790]
[125.96456909 -13.71206760]
[127.85305023 1.21768904]
[120.50228882 14.55259609]
[106.54771423 21.07763290]
[103.57552338 35.78022003]
[100.60333252 50.48280716]
[97.63114166 65.18539429]
[103.29554749 70.10112762]
[112.95269012 58.62334061]
[122.60982513 47.14555359]
[132.26696777 35.66776276]
[141.92410278 24.18997383]
[148.49807739 10.70728111]
[163.41680908 12.26653481]
[167.06083679 26.81717300]
[154.63839722 35.22380447]
[144.63488770 46.40100479]
[134.63137817 57.57820511]
[124.62787628 68.75540161]
[114.62436676 79.93260193]
[120.28878021 84.84834290]
[134.42631531 79.83536530]
[148.56385803 74.82238770]
[162.70140076 69.80940247]
[176.83894348 64.79642487]
[187.06675720 51.97755051]
[203.23954773 54.69288254]
[208.72012329 70.14912415]
[197.87052917 82.44621277]
[181.85191345 78.93396759]
[167.71437073 83.94694519]
[153.57684326 88.95992279]
[139.43930054 93.97290039]
[125.30175781 98.98587799]
[125.80005646 106.46930695]
[126.79664612 121.43616486]
[127.29494476 128.91960144]
[141.97232056 132.01387024]
[156.64970398 135.10815430]
[171.32708740 138.20243835]
[186.00445557 141.29672241]
[200.68183899 144.39100647]
[217.42756653 141.74209595]
[224.60864258 157.10011292]
[211.83874512 168.25205994]
[197.58755493 159.06838989]
[182.91017151 155.97410583]
[168.23280334 152.87982178]
[153.55541992 149.78553772]
[138.87803650 146.69125366]
[124.20066833 143.59696960]
[117.69240570 157.11151123]
[129.26281738 166.65748596]
[140.83322144 176.20347595]
[152.40361023 185.74945068]
[163.97401428 195.29544067]
[180.22785950 197.47369385]
[186.21728516 212.73995972]
[175.78088379 225.38960266]
[159.65473938 222.40975952]
[154.42803955 206.86582947]
[142.85763550 197.31985474]
[131.28723145 187.77386475]
[119.71682739 178.22789001]
[108.14642334 168.68191528]
[101.23535156 171.59516907]
[107.06187439 185.41731262]
[112.88839722 199.23945618]
[118.71470642 213.06169128]
[104.89238739 218.88778687]
[99.06625366 205.06597900]
[93.23973083 191.24383545]
[87.41321564 177.42169189]
[80.50214386 180.33494568]
[79.25691223 195.28317261]
[78.01168060 210.23139954]
[76.76645660 225.17962646]
[75.52122498 240.12785339]
[74.27599335 255.07606506]
[73.40382385 270.05068970]
[72.90525055 285.04241943]
[72.40667725 300.03411865]
[71.90810394 315.02581787]
[81.77485657 327.67599487]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 187]
[5 186]
[6 185]
[7 184]
[11 183]
[12 182]
[13 181]
[14 180]
[15 179]
[16 178]
[17 89]
[18 88]
[19 87]
[24 82]
[25 81]
[26 80]
[27 79]
[29 78]
[30 77]
[31 76]
[32 75]
[33 74]
[36 71]
[37 70]
[40 67]
[41 66]
[42 65]
[45 62]
[46 61]
[47 60]
[90 111]
[91 110]
[92 109]
[93 108]
[97 104]
[98 103]
[125 138]
[126 137]
[127 136]
[128 135]
[129 134]
[141 155]
[142 154]
[143 153]
[144 152]
[145 151]
[146 150]
[156 169]
[157 168]
[158 167]
[159 166]
[160 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
