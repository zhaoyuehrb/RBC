%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:20:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUACGCUGCUGGCUGGCAGCGGCCGGGCCGGUCGGGGCUGGGCCCUACGCACUUUGCGUAGCGAGGGGGGUUACCAAAGGCCUAGUGCUUGGCCUCGAGCAAGCCUGGCCUAUCCCCUGUAGGGGGUGGGUGAGGGGCGAGGCUGAGGAAGAAGAGAAGGGGAAUUGGGGCGCUUGAGGGGAUUAUAAUUUCUUUAAAAAGAGGGGAGGGGAGAGGCC\
) } def
/len { sequence length } bind def

/coor [
[147.93502808 119.40828705]
[141.55178833 136.06843567]
[129.27441406 150.45202637]
[111.97994232 160.46215820]
[91.28777313 164.35807800]
[69.41152191 161.01443481]
[63.77036285 174.91326904]
[58.12920380 188.81208801]
[52.48804474 202.71092224]
[46.84688568 216.60974121]
[41.20572662 230.50856018]
[43.99698639 246.66842651]
[31.22628784 256.95632935]
[16.03102875 250.78898621]
[14.04279137 234.51081848]
[27.30690193 224.86740112]
[32.94805908 210.96858215]
[38.58921814 197.06976318]
[44.23037720 183.17092896]
[49.87153625 169.27210999]
[55.51269531 155.37329102]
[43.76617050 146.04487610]
[31.50625229 154.68746948]
[19.24633598 163.33006287]
[6.98641920 171.97267151]
[0.16517852 186.24786377]
[-14.69519806 187.25706482]
[-26.95511436 195.89965820]
[-39.21503067 204.54225159]
[-51.47494888 213.18484497]
[-53.92263031 228.79844666]
[-66.74291992 238.04051208]
[-82.32976532 235.42788696]
[-91.43576813 222.51060486]
[-88.65850067 206.95225525]
[-75.64566040 197.98332214]
[-60.11754227 200.92492676]
[-47.85762405 192.28233337]
[-35.59770966 183.63973999]
[-23.33779335 174.99714661]
[-17.39346313 161.34011841]
[-1.65617537 159.71275330]
[10.60374165 151.07015991]
[22.86365891 142.42755127]
[35.12357330 133.78495789]
[30.38658142 119.55257416]
[15.39269829 119.98091888]
[0.39881504 120.40925598]
[-14.59506798 120.83759308]
[-29.58895111 121.26593781]
[-44.58283234 121.69427490]
[-59.57671738 122.12261963]
[-75.23673248 128.61878967]
[-85.81415558 115.36910248]
[-76.01039124 101.53716278]
[-60.00505829 107.12873840]
[-45.01117325 106.70039368]
[-30.01729202 106.27205658]
[-15.02340889 105.84371185]
[-0.02952574 105.41537476]
[14.96435738 104.98703003]
[29.95824051 104.55869293]
[31.60476494 97.24166107]
[16.97075081 93.94838715]
[20.26425362 79.31442261]
[34.89781570 82.60759735]
[36.54433823 75.29056549]
[23.17924118 68.48070526]
[8.22780895 73.60224915]
[-5.92898703 66.57653809]
[-10.89217091 51.57179260]
[-3.71717381 37.49006653]
[11.33920574 32.68579865]
[25.34428406 40.00927734]
[29.98909760 55.11560822]
[43.35419464 61.92546463]
[70.38272858 45.00339890]
[99.49098969 43.32595825]
[123.31979370 54.76953506]
[136.97257996 74.17281342]
[150.52668762 67.74738312]
[164.08079529 61.32196045]
[177.63490295 54.89653397]
[191.18901062 48.47110748]
[187.78070068 21.39357376]
[195.35118103 -4.79151964]
[212.64009094 -25.82075882]
[236.80699158 -38.28118134]
[263.89804077 -40.16417694]
[267.50375366 -54.72434998]
[271.10949707 -69.28452301]
[274.71524048 -83.84470367]
[278.32095337 -98.40487671]
[281.92669678 -112.96504974]
[285.53240967 -127.52523041]
[289.13815308 -142.08540344]
[292.74389648 -156.64558411]
[296.34960938 -171.20574951]
[289.16064453 -177.69876099]
[284.85278320 -186.31066895]
[283.97891235 -195.84207153]
[286.61688232 -204.98254395]
[292.36465454 -212.49072266]
[300.40081787 -217.36293030]
[309.60195923 -218.96723938]
[314.03302002 -233.29782104]
[318.46408081 -247.62840271]
[315.14874268 -263.09832764]
[326.30041504 -272.97198486]
[330.73150635 -287.30258179]
[335.16256714 -301.63314819]
[339.59365845 -315.96374512]
[344.02471924 -330.29431152]
[348.45578003 -344.62490845]
[352.88687134 -358.95547485]
[357.31793213 -373.28607178]
[361.74902344 -387.61663818]
[366.18008423 -401.94723511]
[362.01617432 -417.80892944]
[373.85964966 -429.15197754]
[389.52694702 -424.30758667]
[392.90087891 -408.25927734]
[380.51068115 -397.51614380]
[376.07958984 -383.18557739]
[371.64852905 -368.85498047]
[367.21743774 -354.52441406]
[362.78637695 -340.19381714]
[358.35531616 -325.86325073]
[353.92422485 -311.53265381]
[349.49316406 -297.20208740]
[345.06207275 -282.87149048]
[340.63101196 -268.54092407]
[344.26330566 -254.09599304]
[332.79467773 -243.19732666]
[328.36358643 -228.86674500]
[323.93252563 -214.53616333]
[334.95053101 -197.31352234]
[329.58416748 -177.28001404]
[310.90979004 -167.60002136]
[307.30404663 -153.03984070]
[303.69833374 -138.47967529]
[300.09259033 -123.91949463]
[296.48687744 -109.35932159]
[292.88113403 -94.79914856]
[289.27539062 -80.23896790]
[285.66967773 -65.67879486]
[282.06393433 -51.11862183]
[278.45822144 -36.55844498]
[286.60028076 -32.91241837]
[294.18768311 -28.22001457]
[301.08663940 -22.56393051]
[307.17559814 -16.04384804]
[312.34725952 -8.77467060]
[316.51049805 -0.88450629]
[319.59188843 7.48759270]
[321.53713989 16.19408226]
[322.31201172 25.08152199]
[321.90280151 33.99328995]
[320.31677246 42.77232361]
[334.37100220 48.01428604]
[348.42526245 53.25624847]
[362.47949219 58.49821091]
[376.53375244 63.74017715]
[390.58798218 68.98213959]
[404.64224243 74.22409821]
[418.69647217 79.46606445]
[432.75073242 84.70802307]
[446.80496216 89.94998932]
[457.84344482 79.46602631]
[472.28036499 74.83325958]
[487.23587036 76.91958618]
[499.75103760 85.25812531]
[507.37329102 98.15041351]
[508.63681030 113.01207733]
[522.69104004 118.25403595]
[538.76464844 115.00245667]
[549.41302490 127.47416687]
[543.68212891 142.83934021]
[527.46734619 145.29161072]
[517.44909668 132.30828857]
[503.39486694 127.06632233]
[492.70761108 137.47056580]
[478.50448608 142.22241211]
[463.58554077 140.32856750]
[450.91665649 132.11152649]
[443.03979492 119.15615082]
[441.56301880 104.00423431]
[427.50875854 98.76227570]
[413.45452881 93.52030945]
[399.40026855 88.27834320]
[385.34603882 83.03638458]
[371.29177856 77.79441833]
[357.23754883 72.55245972]
[343.18328857 67.31049347]
[329.12902832 62.06853485]
[315.07479858 56.82656860]
[311.34140015 63.32187653]
[306.90686035 69.36330414]
[301.82583618 74.87547302]
[296.16107178 79.78952026]
[289.98260498 84.04398346]
[283.36685181 87.58555603]
[276.39578247 90.36974335]
[269.15579224 92.36145782]
[261.73669434 93.53543091]
[254.23060608 93.87652588]
[246.73072815 93.37996674]
[239.33030701 92.05138397]
[232.12136841 89.90674591]
[225.19364929 86.97216797]
[218.63342285 83.28362274]
[212.52247620 78.88645172]
[206.93704224 73.83485413]
[201.94689941 68.19119263]
[197.61444092 62.02521896]
[184.06033325 68.45064545]
[170.50622559 74.87606812]
[156.95211792 81.30149841]
[143.39799500 87.72692108]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 21]
[7 20]
[8 19]
[9 18]
[10 17]
[11 16]
[22 45]
[23 44]
[24 43]
[25 42]
[27 40]
[28 39]
[29 38]
[30 37]
[46 62]
[47 61]
[48 60]
[49 59]
[50 58]
[51 57]
[52 56]
[67 76]
[68 75]
[80 219]
[81 218]
[82 217]
[83 216]
[84 215]
[89 148]
[90 147]
[91 146]
[92 145]
[93 144]
[94 143]
[95 142]
[96 141]
[97 140]
[98 139]
[105 136]
[106 135]
[107 134]
[109 132]
[110 131]
[111 130]
[112 129]
[113 128]
[114 127]
[115 126]
[116 125]
[117 124]
[118 123]
[159 196]
[160 195]
[161 194]
[162 193]
[163 192]
[164 191]
[165 190]
[166 189]
[167 188]
[168 187]
[174 181]
[175 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
