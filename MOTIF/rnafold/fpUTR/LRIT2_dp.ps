%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:17:57 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (LRIT2)
} def

/sequence { (\
AGGAUUUGCCACUCGGAAGCUGGGGCGAUACUUAUUCAAAACUCACAACGUAUUUUCUUACAGAGAAAU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 21 0.003243085 ubox
1 32 0.239050811 ubox
1 33 0.690538951 ubox
1 36 0.015418972 ubox
1 43 0.018799504 ubox
1 58 0.007321806 ubox
1 59 0.010463762 ubox
2 10 0.031499995 ubox
2 20 0.003870446 ubox
2 21 0.004012807 ubox
2 31 0.274839106 ubox
2 32 0.809582166 ubox
2 33 0.042352271 ubox
2 35 0.016882943 ubox
2 36 0.006966505 ubox
2 37 0.325575243 ubox
2 42 0.021355948 ubox
2 43 0.016178237 ubox
2 44 0.016834629 ubox
2 55 0.003476805 ubox
2 57 0.008440247 ubox
2 58 0.012252736 ubox
3 9 0.031470643 ubox
3 14 0.003312369 ubox
3 20 0.005076298 ubox
3 31 0.822175082 ubox
3 32 0.030831281 ubox
3 33 0.057206849 ubox
3 35 0.006420965 ubox
3 36 0.326778784 ubox
3 37 0.030138170 ubox
3 42 0.017956413 ubox
3 43 0.013958248 ubox
3 44 0.019022100 ubox
3 54 0.005201389 ubox
3 56 0.008297333 ubox
3 57 0.012466346 ubox
4 13 0.003273088 ubox
4 29 0.213328148 ubox
4 32 0.057161000 ubox
4 35 0.326668401 ubox
4 36 0.027270987 ubox
4 43 0.018193563 ubox
4 51 0.005250890 ubox
4 53 0.005737836 ubox
4 55 0.007958004 ubox
4 56 0.011637306 ubox
4 69 0.007228432 ubox
5 17 0.003579649 ubox
5 19 0.005911399 ubox
5 28 0.191366824 ubox
5 34 0.324399461 ubox
5 39 0.010773834 ubox
5 40 0.012203027 ubox
5 41 0.011791180 ubox
5 50 0.005297521 ubox
5 52 0.005639525 ubox
5 68 0.007695575 ubox
6 16 0.003648426 ubox
6 18 0.007040512 ubox
6 19 0.003579279 ubox
6 27 0.134466357 ubox
6 28 0.952856370 ubox
6 38 0.006716018 ubox
6 39 0.011364139 ubox
6 40 0.009912364 ubox
6 41 0.005194654 ubox
6 48 0.003207577 ubox
6 67 0.006462155 ubox
7 15 0.003686662 ubox
7 17 0.007233648 ubox
7 18 0.003404653 ubox
7 27 0.979448403 ubox
7 30 0.007907695 ubox
7 38 0.010361882 ubox
7 39 0.008237359 ubox
7 40 0.004591749 ubox
7 47 0.003661351 ubox
7 52 0.005930844 ubox
7 66 0.005448738 ubox
8 14 0.003651055 ubox
8 26 0.998716335 ubox
8 29 0.005637935 ubox
8 37 0.008385428 ubox
8 46 0.003600230 ubox
8 51 0.005912156 ubox
9 16 0.014359977 ubox
9 23 0.012848837 ubox
9 24 0.012350830 ubox
9 25 0.998480089 ubox
9 50 0.005888544 ubox
10 15 0.014419854 ubox
10 22 0.014695550 ubox
10 23 0.014919937 ubox
10 24 0.971188644 ubox
11 21 0.018741687 ubox
12 19 0.032793284 ubox
12 23 0.836917873 ubox
12 24 0.230056799 ubox
12 25 0.009663367 ubox
12 65 0.010499364 ubox
13 18 0.030772276 ubox
13 22 0.338572019 ubox
13 23 0.461160606 ubox
13 24 0.012139476 ubox
13 28 0.004117694 ubox
13 64 0.010562366 ubox
14 22 0.929924398 ubox
14 23 0.048974447 ubox
14 27 0.004337037 ubox
14 50 0.004912010 ubox
14 63 0.010547555 ubox
15 21 0.927275213 ubox
15 26 0.004314378 ubox
15 37 0.003476547 ubox
15 49 0.005159155 ubox
16 20 0.908058565 ubox
16 36 0.003454063 ubox
16 37 0.009008755 ubox
17 35 0.003385610 ubox
17 36 0.008997876 ubox
18 35 0.008241478 ubox
19 26 0.006089454 ubox
19 51 0.003967777 ubox
20 25 0.006077617 ubox
20 50 0.004100351 ubox
20 63 0.010114003 ubox
21 34 0.010296419 ubox
21 45 0.011765612 ubox
21 47 0.003173479 ubox
21 60 0.009795663 ubox
21 62 0.010139000 ubox
22 32 0.003466557 ubox
22 33 0.011258874 ubox
22 44 0.013350156 ubox
22 46 0.003488429 ubox
22 59 0.010842134 ubox
22 61 0.009980037 ubox
23 31 0.003561424 ubox
23 32 0.011722066 ubox
23 43 0.013348298 ubox
23 44 0.004007091 ubox
23 58 0.013701152 ubox
23 59 0.003470863 ubox
24 31 0.011861270 ubox
24 42 0.013363785 ubox
24 43 0.004012590 ubox
24 57 0.014195509 ubox
24 58 0.004543238 ubox
25 42 0.004048827 ubox
25 51 0.013159944 ubox
25 56 0.013570942 ubox
25 57 0.004661723 ubox
26 50 0.013429799 ubox
27 33 0.003806931 ubox
27 36 0.011061318 ubox
27 37 0.047470470 ubox
27 44 0.012469971 ubox
27 49 0.013341675 ubox
27 54 0.053707489 ubox
28 32 0.003658948 ubox
28 35 0.013363189 ubox
28 36 0.047073602 ubox
28 43 0.011974904 ubox
28 53 0.080893635 ubox
29 34 0.013855453 ubox
29 52 0.099889329 ubox
30 51 0.102901975 ubox
31 50 0.103091712 ubox
31 63 0.003669218 ubox
31 65 0.006502647 ubox
32 39 0.019949571 ubox
32 40 0.019794567 ubox
32 41 0.020477814 ubox
32 48 0.029378906 ubox
32 62 0.003604763 ubox
32 64 0.006512450 ubox
32 68 0.003434449 ubox
33 38 0.021920305 ubox
33 39 0.023566148 ubox
33 40 0.026271789 ubox
33 47 0.027928191 ubox
33 52 0.027785950 ubox
33 60 0.003414771 ubox
33 63 0.006228413 ubox
33 66 0.003521657 ubox
33 67 0.004259174 ubox
34 51 0.031150484 ubox
34 53 0.013698598 ubox
34 59 0.003785152 ubox
34 69 0.008905025 ubox
35 41 0.020886804 ubox
35 48 0.016552012 ubox
35 50 0.030067858 ubox
35 52 0.015164347 ubox
35 65 0.010404396 ubox
35 67 0.021517787 ubox
35 68 0.009781698 ubox
36 40 0.020990912 ubox
36 47 0.017150975 ubox
36 64 0.014754051 ubox
36 66 0.024694959 ubox
36 67 0.008364901 ubox
37 63 0.015115546 ubox
37 65 0.024278191 ubox
38 54 0.030538325 ubox
38 55 0.016004456 ubox
38 56 0.009530686 ubox
39 53 0.041136579 ubox
39 54 0.022302397 ubox
39 55 0.012470534 ubox
39 56 0.004257317 ubox
40 53 0.025352262 ubox
40 54 0.013936155 ubox
40 55 0.005389275 ubox
41 51 0.202728664 ubox
41 53 0.012042732 ubox
41 54 0.005205313 ubox
42 50 0.209767310 ubox
42 63 0.017624099 ubox
42 65 0.194649113 ubox
43 62 0.017500409 ubox
43 64 0.195956123 ubox
43 66 0.039607434 ubox
44 63 0.195771574 ubox
44 65 0.041498217 ubox
45 51 0.031111959 ubox
46 50 0.029844317 ubox
47 54 0.014024288 ubox
47 55 0.007072254 ubox
47 56 0.006906041 ubox
47 59 0.010901919 ubox
48 53 0.015333970 ubox
48 54 0.008597691 ubox
48 55 0.007309120 ubox
48 58 0.010563228 ubox
50 61 0.266700293 ubox
50 69 0.101746370 ubox
51 60 0.267105214 ubox
51 68 0.107412511 ubox
52 59 0.264093867 ubox
52 69 0.116691657 ubox
53 64 0.010707930 ubox
53 65 0.008878476 ubox
53 66 0.038293259 ubox
53 67 0.495070641 ubox
53 68 0.118091092 ubox
54 63 0.011494499 ubox
54 64 0.012911450 ubox
54 65 0.038785481 ubox
54 66 0.567757829 ubox
54 67 0.104728005 ubox
54 68 0.624497975 ubox
55 62 0.010218165 ubox
55 63 0.013230633 ubox
55 64 0.037435655 ubox
55 65 0.577198317 ubox
55 66 0.082005378 ubox
55 67 0.720396271 ubox
55 68 0.020066043 ubox
56 62 0.011992065 ubox
56 63 0.033602019 ubox
56 64 0.582117650 ubox
56 65 0.050340281 ubox
56 66 0.743193858 ubox
56 67 0.016396450 ubox
57 63 0.583301796 ubox
57 65 0.747543165 ubox
58 62 0.525505592 ubox
58 64 0.741949826 ubox
58 65 0.006439897 ubox
58 66 0.007480035 ubox
58 67 0.006952161 ubox
58 68 0.003556291 ubox
59 63 0.668599305 ubox
59 64 0.021528513 ubox
59 65 0.007771863 ubox
59 66 0.007300216 ubox
59 67 0.003935601 ubox
1 33 0.9500000 lbox
2 32 0.9500000 lbox
3 31 0.9500000 lbox
6 28 0.9500000 lbox
7 27 0.9500000 lbox
8 26 0.9500000 lbox
9 25 0.9500000 lbox
10 24 0.9500000 lbox
13 23 0.9500000 lbox
14 22 0.9500000 lbox
15 21 0.9500000 lbox
16 20 0.9500000 lbox
54 68 0.9500000 lbox
55 67 0.9500000 lbox
56 66 0.9500000 lbox
57 65 0.9500000 lbox
58 64 0.9500000 lbox
59 63 0.9500000 lbox
showpage
end
%%EOF
