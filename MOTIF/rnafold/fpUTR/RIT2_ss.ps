%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:09:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUUGCUAUGAGACCCGCUCGAGCGGAGGACCAGCAGCCAGCCCGACGCUGAUGGUUCUUACCUCGUACUAAAACCUUUGCUUUGACACAGUUUUAGAGUUGCUUAAUAUUCGAGCAAGCACCUGACACGGGUGACUUUCUCCUUCUUUUUUUCCUCCGGUCCCUCGGGUAAG\
) } def
/len { sequence length } bind def

/coor [
[146.85708618 499.67861938]
[137.26115417 511.41293335]
[124.22898102 519.15490723]
[109.33425140 521.96966553]
[94.37558746 519.51733398]
[81.15930939 512.09399414]
[71.28134918 500.59609985]
[65.93452454 486.41204834]
[65.76448822 471.25463867]
[70.79176331 456.95419312]
[80.40930176 445.23760986]
[93.45571899 437.51965332]
[108.35561371 434.73233032]
[110.78234100 419.92996216]
[113.20906830 405.12756348]
[115.63580322 390.32516479]
[118.06253052 375.52276611]
[107.47380829 365.08163452]
[105.03479004 350.23187256]
[111.88764954 336.63439941]
[125.59150696 329.59802246]
[128.01823425 314.79562378]
[122.44190979 300.98425293]
[132.30990601 288.61764526]
[134.73663330 273.81524658]
[137.16336060 259.01284790]
[139.59008789 244.21044922]
[142.01681519 229.40805054]
[144.44355774 214.60565186]
[146.87028503 199.80325317]
[141.65222168 191.41484070]
[140.59463501 181.64497375]
[143.86201477 172.43229675]
[134.57029724 160.65672302]
[125.27856445 148.88116455]
[115.98683929 137.10560608]
[106.69511414 125.33004761]
[97.40338898 113.55448151]
[84.08782196 106.64828491]
[69.10981750 105.83619690]
[54.13182068 105.02411652]
[39.15382004 104.21202850]
[26.30001068 113.81198883]
[10.81737041 109.60872650]
[4.58285379 94.82662964]
[12.37904930 80.80525970]
[28.22538185 78.30060577]
[39.96590042 89.23403168]
[54.94390488 90.04611206]
[69.92190552 90.85820007]
[84.89990234 91.67028046]
[87.10132599 84.50064087]
[91.50416565 70.16136169]
[93.70558167 62.99171829]
[80.85272217 55.25840759]
[67.99987030 47.52510071]
[51.60255051 47.77018738]
[43.42506790 33.55537796]
[51.87971115 19.50364876]
[68.26907349 20.07021713]
[75.73317719 34.67224503]
[88.58603668 42.40555191]
[101.43888855 50.13885880]
[107.68430328 45.98616791]
[95.92555237 36.67317581]
[101.14910126 22.61207771]
[116.13616180 23.23487282]
[120.17512512 37.68078232]
[126.42053223 33.52809143]
[124.26144409 18.68429375]
[122.10235596 3.84049511]
[119.94326019 -11.00330257]
[117.78417206 -25.84710121]
[115.62508392 -40.69089890]
[113.46599579 -55.53469467]
[101.79899597 -62.30624008]
[96.25334930 -74.38931274]
[98.65486908 -87.26742554]
[107.90371704 -96.26775360]
[106.01296997 -111.14810944]
[93.36624146 -120.62628174]
[91.20846558 -136.28257751]
[100.81981659 -148.82838440]
[116.49805450 -150.82051086]
[128.94154358 -141.07705688]
[130.76780701 -125.37863922]
[120.89333344 -113.03885651]
[122.78408051 -98.15849304]
[136.50131226 -88.45529938]
[139.02275085 -71.50224304]
[128.30978394 -57.69378662]
[130.46888733 -42.84998703]
[132.62797546 -28.00618935]
[134.78706360 -13.16239262]
[136.94615173 1.68140554]
[139.10523987 16.52520370]
[141.26432800 31.36900139]
[143.12159729 86.78627014]
[109.17895508 104.26275635]
[118.47068024 116.03832245]
[127.76240540 127.81388092]
[137.05412292 139.58944702]
[146.34585571 151.36500549]
[155.63757324 163.14056396]
[149.53953552 149.43605042]
[152.19554138 134.67306519]
[162.68774414 123.95330048]
[177.39036560 120.98120117]
[191.22253418 126.78385162]
[199.40428162 139.35601807]
[199.10818481 154.35308838]
[190.43658447 166.59251404]
[176.38578796 171.84468079]
[191.29786682 170.22290039]
[206.20993042 168.60112000]
[219.09265137 159.41711426]
[232.58186340 165.73298645]
[247.49394226 164.11120605]
[262.40600586 162.48942566]
[277.30282593 160.73307800]
[292.18319702 158.84233093]
[307.06353760 156.95159912]
[321.94390869 155.06085205]
[336.82427979 153.17010498]
[351.70462036 151.27935791]
[366.65527344 143.28472900]
[378.47622681 155.43797302]
[370.07031250 170.16131592]
[353.59536743 166.15971375]
[338.71499634 168.05046082]
[323.83465576 169.94120789]
[308.95428467 171.83195496]
[294.07394409 173.72270203]
[279.19357300 175.61344910]
[272.93273926 179.58963013]
[264.02780151 177.40148926]
[249.11572266 179.02326965]
[234.20365906 180.64506531]
[222.38754272 189.71305847]
[207.83171082 183.51318359]
[192.91964722 185.13496399]
[178.00758362 186.75675964]
[191.87167358 192.48272705]
[206.59417725 195.35467529]
[217.66804504 205.47244263]
[221.85408020 219.87651062]
[217.92784119 234.35354614]
[207.03778076 244.66888428]
[192.36932373 247.80522156]
[178.21315002 242.84512329]
[168.71005249 231.23947144]
[166.63966370 216.38375854]
[161.67268372 202.22999573]
[159.24594116 217.03239441]
[156.81921387 231.83479309]
[154.39248657 246.63717651]
[151.96575928 261.43957520]
[149.53903198 276.24197388]
[147.11230469 291.04437256]
[152.51504517 305.91452026]
[142.82063293 317.22235107]
[140.39390564 332.02474976]
[151.13369751 343.06845093]
[153.28611755 358.14227295]
[146.23323059 371.43591309]
[132.86492920 377.94949341]
[130.43820190 392.75189209]
[128.01147461 407.55429077]
[125.58473969 422.35668945]
[123.15801239 437.15908813]
[136.38793945 444.55804443]
[146.28707886 456.03771973]
[151.66003418 470.21188354]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 170]
[14 169]
[15 168]
[16 167]
[17 166]
[21 162]
[22 161]
[24 159]
[25 158]
[26 157]
[27 156]
[28 155]
[29 154]
[30 153]
[33 104]
[34 103]
[35 102]
[36 101]
[37 100]
[38 99]
[39 51]
[40 50]
[41 49]
[42 48]
[54 63]
[55 62]
[56 61]
[69 97]
[70 96]
[71 95]
[72 94]
[73 93]
[74 92]
[75 91]
[79 88]
[80 87]
[113 142]
[114 141]
[115 140]
[117 138]
[118 137]
[119 136]
[120 134]
[121 133]
[122 132]
[123 131]
[124 130]
[125 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
