%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:41:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUACUUGAUCCAGGUAUAUGUCACAUUCCCAACUGUUGGCUGGGCCCAAGCAAAUUAGUAAAAUAAAUUAGGUGCUGUGUGAAAGUAUACGCCACAAUCACACCUGCGGGAAGGACCAGGAAUAAAUUUCACAAUUCUACGUAUUUCCCAGCUUUAGGUCUGAGAGUCUACACUUCUGAGCUCCAGUUCUUCUCUUCACUGCUCUGCGUCCUCUGUUCCUAGAGGCCAAGCCACUGUGGCCUUGUGUUCUGCAG\
GUAUCCGCAGAUUU\
) } def
/len { sequence length } bind def

/coor [
[95.17574310 468.37872314]
[87.67891693 468.59686279]
[84.21967316 483.19253540]
[80.76043701 497.78820801]
[77.30120087 512.38385010]
[73.84196472 526.97955322]
[70.38272095 541.57519531]
[66.92348480 556.17089844]
[69.15409088 572.97747803]
[53.62182236 579.77343750]
[42.79169846 566.72943115]
[52.32781219 552.71166992]
[55.78705215 538.11596680]
[59.24628830 523.52032471]
[62.70552826 508.92462158]
[66.16476440 494.32894897]
[69.62400055 479.73327637]
[73.08324432 465.13760376]
[69.35927582 452.03289795]
[70.86933899 439.51004028]
[76.63355255 429.43499756]
[85.09053802 423.03414917]
[94.42648315 420.74963379]
[94.42648315 405.74963379]
[94.42648315 390.74963379]
[94.42648315 375.74963379]
[82.28807068 367.15911865]
[77.47875977 352.89956665]
[82.04151154 338.37252808]
[94.42648315 329.21182251]
[94.42648315 314.21182251]
[91.29508972 307.54687500]
[94.51477051 299.03756714]
[94.68930054 284.03857422]
[87.10060883 271.22213745]
[94.99794769 257.51293945]
[95.17247772 242.51394653]
[92.11884308 235.81301880]
[95.43730927 227.34172058]
[95.78634644 212.34577942]
[96.13538361 197.34983826]
[96.48441315 182.35389709]
[89.04535675 169.45004272]
[97.10167694 155.83364868]
[97.45071411 140.83770752]
[97.79975128 125.84176636]
[98.14878082 110.84582520]
[89.39545441 124.61202240]
[74.40468597 134.04862976]
[54.90588760 137.09777832]
[39.97082520 138.49201965]
[25.03576469 139.88627625]
[10.10070324 141.28051758]
[1.30124426 150.67907715]
[-11.14284801 151.55067444]
[-20.54253578 143.97216797]
[-35.49280930 145.19255066]
[-50.44308090 146.41293335]
[-65.39335632 147.63330078]
[-80.34362793 148.85368347]
[-89.23913574 161.71463013]
[-104.33393860 165.79888916]
[-118.50071716 159.17797852]
[-125.05036163 144.97811890]
[-120.89032745 129.90403748]
[-107.98485565 121.07324219]
[-92.42752075 122.65538025]
[-81.56401062 133.90341187]
[-66.61373901 132.68302917]
[-51.66346359 131.46264648]
[-36.71318817 130.24227905]
[-21.76291466 129.02189636]
[-7.86598444 118.28079224]
[8.70645523 126.34545898]
[23.64151764 124.95121002]
[38.57658005 123.55696106]
[53.51164246 122.16271973]
[56.88590622 107.54716492]
[44.07355881 99.74692535]
[31.26121330 91.94667816]
[18.44886780 84.14643860]
[5.63652039 76.34619904]
[-7.17582607 68.54595184]
[-22.35059929 72.06220245]
[-35.23302460 63.96913147]
[-38.49171066 49.48063660]
[-51.30405807 41.68039322]
[-66.06015015 46.85646820]
[-80.67276001 41.28819656]
[-88.24226379 27.60475159]
[-85.19456482 12.26703453]
[-72.96870422 2.51704741]
[-57.33734894 2.95843554]
[-45.68115234 13.38278961]
[-43.50381851 28.86804771]
[-30.69147110 36.66828918]
[-16.32432938 32.91051483]
[-3.21967125 40.63855362]
[0.62441564 55.73360825]
[13.43676186 63.53385162]
[26.24910927 71.33409119]
[39.06145477 79.13433838]
[51.87380219 86.93457794]
[64.68614960 94.73481750]
[70.99983215 90.68669128]
[83.62721252 82.59043121]
[89.94089508 78.54229736]
[88.19950104 63.64372253]
[86.37145996 48.75553131]
[84.45684052 33.87822723]
[82.54221344 19.00092125]
[80.62758636 4.12361526]
[78.71296692 -10.75368977]
[76.79833984 -25.63099480]
[67.36285400 -38.33068466]
[73.41233063 -51.94145584]
[71.49771118 -66.81875610]
[59.27121735 -76.47022247]
[57.54145050 -91.58519745]
[66.81799316 -103.18180847]
[64.90336609 -118.05911255]
[62.98873901 -132.93641663]
[61.07411575 -147.81372070]
[59.15949249 -162.69102478]
[44.95615387 -168.53575134]
[35.59077835 -180.70889282]
[33.58260727 -195.93594360]
[39.47182083 -210.12088013]
[51.67425919 -219.44805908]
[66.90751648 -221.40849304]
[81.07393646 -215.47483826]
[90.36281586 -203.24322510]
[92.27548981 -188.00389099]
[86.29746246 -173.85614014]
[74.03679657 -164.60565186]
[75.95142365 -149.72834778]
[77.86604309 -134.85104370]
[79.78067017 -119.97373962]
[81.69529724 -105.09643555]
[93.60576630 -96.22647095]
[95.75939941 -81.16604614]
[86.37501526 -68.73338318]
[88.28963470 -53.85607910]
[97.58818054 -42.22051239]
[91.67564392 -27.54561996]
[93.59027100 -12.66831493]
[95.50489044 2.20899057]
[97.41951752 17.08629608]
[99.33414459 31.96360207]
[101.24877167 46.84090805]
[105.20527649 53.05163956]
[103.09807587 61.90232849]
[104.83946991 76.80090332]
[117.46684265 84.89716339]
[131.73269653 80.26190948]
[145.99853516 75.62665558]
[160.26438904 70.99140167]
[174.53024292 66.35614777]
[188.79608154 61.72089005]
[192.06005859 48.34992218]
[201.42358398 38.41029739]
[214.36944580 34.41846848]
[227.49336243 37.31247711]
[237.39900208 46.23412704]
[251.71781921 41.76517487]
[266.03662109 37.29621887]
[280.35543823 32.82726669]
[284.81900024 22.95745277]
[293.78182983 17.27371597]
[304.17449951 17.43805313]
[312.59048462 23.15632439]
[327.00939941 19.02176476]
[328.98242188 7.79061508]
[334.96243286 -1.85853040]
[344.05990601 -8.56250954]
[354.94812012 -11.39093685]
[366.05667114 -9.97518349]
[375.79791260 -4.55594873]
[382.79397583 4.05665874]
[397.34841919 0.42783052]
[411.90286255 -3.20099783]
[426.45727539 -6.82982635]
[427.27023315 -21.92388153]
[432.49768066 -36.10715485]
[441.67480469 -48.11847687]
[453.98556519 -56.88980865]
[468.33532715 -61.64121246]
[483.44812012 -61.95019150]
[497.98007202 -57.78927994]
[510.63906860 -49.52845383]
[520.29943848 -37.90226364]
[526.10223389 -23.94450569]
[527.53149414 -8.89629173]
[524.46002197 5.90430212]
[517.16101074 19.14121628]
[506.28347778 29.63743401]
[492.79461670 36.45963669]
[477.89389038 39.00120163]
[462.90621948 37.03613281]
[449.16433716 30.73916054]
[437.89013672 20.67021179]
[430.08612061 7.72460938]
[415.53167725 11.35343838]
[400.97723389 14.98226643]
[386.42279053 18.61109543]
[380.39794922 36.33982849]
[364.75631714 46.90485382]
[345.75891113 45.85711288]
[331.14395142 33.44068909]
[316.72503662 37.57524872]
[304.30426025 52.42107773]
[284.82440186 47.14608002]
[270.50558472 51.61503601]
[256.18676758 56.08398819]
[241.86795044 60.55294418]
[237.10267639 76.27880096]
[223.76158142 86.15416718]
[206.99674988 86.11827850]
[193.43133545 75.98674011]
[179.16549683 80.62199402]
[164.89964294 85.25724792]
[150.63380432 89.89250183]
[136.36795044 94.52775574]
[122.10210419 99.16300964]
[113.14472198 111.19486237]
[112.79568481 126.19079590]
[112.44665527 141.18673706]
[112.09761810 156.18267822]
[119.51171112 170.15914917]
[111.48035431 182.70294189]
[111.13131714 197.69888306]
[110.78228760 212.69480896]
[110.43325043 227.69075012]
[110.17146301 242.68847656]
[109.99693298 257.68743896]
[117.57314301 271.57672119]
[109.68827820 284.21310425]
[109.51375580 299.21209717]
[109.42648315 314.21182251]
[109.42648315 329.21182251]
[121.81146240 338.37252808]
[126.37421417 352.89956665]
[121.56490326 367.15911865]
[109.42648315 375.74963379]
[109.42648315 390.74963379]
[109.42648315 405.74963379]
[109.42648315 420.74963379]
[130.28793335 433.24368286]
[132.03607178 463.42227173]
[136.33811951 477.79211426]
[140.64016724 492.16195679]
[144.94221497 506.53179932]
[149.24426270 520.90161133]
[154.68470764 528.19384766]
[153.51171875 535.46374512]
[157.64628601 549.88269043]
[167.82424927 563.44165039]
[157.61273193 576.97534180]
[141.78109741 570.90936279]
[143.22735596 554.01721191]
[139.09278870 539.59832764]
[134.87442017 525.20367432]
[130.57237244 510.83383179]
[126.27031708 496.46398926]
[121.96826935 482.09414673]
[117.66622162 467.72430420]
[110.16939545 467.94244385]
[110.60566711 482.93609619]
[103.48693848 496.13928223]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 18]
[3 17]
[4 16]
[5 15]
[6 14]
[7 13]
[8 12]
[23 247]
[24 246]
[25 245]
[26 244]
[30 240]
[31 239]
[33 238]
[34 237]
[36 235]
[37 234]
[39 233]
[40 232]
[41 231]
[42 230]
[44 228]
[45 227]
[46 226]
[47 225]
[50 77]
[51 76]
[52 75]
[53 74]
[56 72]
[57 71]
[58 70]
[59 69]
[60 68]
[78 104]
[79 103]
[80 102]
[81 101]
[82 100]
[83 99]
[86 96]
[87 95]
[107 153]
[108 152]
[109 150]
[110 149]
[111 148]
[112 147]
[113 146]
[114 145]
[116 143]
[117 142]
[120 139]
[121 138]
[122 137]
[123 136]
[124 135]
[154 224]
[155 223]
[156 222]
[157 221]
[158 220]
[159 219]
[164 215]
[165 214]
[166 213]
[167 212]
[171 210]
[172 209]
[179 205]
[180 204]
[181 203]
[182 202]
[249 266]
[250 265]
[251 264]
[252 263]
[253 262]
[255 261]
[256 260]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
