%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:11:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAUGCUGCUGCUGCCGGGUGUCCAUGGCCCGCACCCCCAAGCUGCCACUGCAGCAGUCAGAGUGGCAGCUGAAGGCUCGGUUCAUGCCGUGCCCCCGGGCAGUUCUGGUGAGGCUAAGCAAGAGGCCUCUGCAUCUUGACACCUAGGAGAGCAGGGACGGAGUCUCCCAGGGUGGAGGACC\
) } def
/len { sequence length } bind def

/coor [
[197.56188965 204.66259766]
[201.79246521 190.27154541]
[212.17420959 179.44476318]
[226.37510681 174.61418152]
[241.20808411 176.86602783]
[227.41227722 170.97741699]
[213.61647034 165.08880615]
[200.95037842 172.88035583]
[185.94757080 171.70564270]
[174.37797546 161.80625916]
[170.81471252 146.81929016]
[157.01890564 140.93067932]
[143.22309875 135.04206848]
[129.42729187 129.15345764]
[115.63148499 123.26484680]
[101.83567810 117.37624359]
[86.94385529 119.17446136]
[74.94626617 128.17767334]
[62.94867706 137.18089294]
[50.95109177 146.18409729]
[38.95350266 155.18731689]
[26.95591354 164.19053650]
[28.17703247 179.56948853]
[20.86967659 193.15647888]
[7.36559582 200.61592102]
[-8.02610493 199.56755066]
[-20.39399147 190.34590149]
[-25.79151726 175.89355469]
[-22.49634743 160.82220459]
[-11.55996323 149.94107056]
[3.52787709 146.72229004]
[17.95269775 152.19294739]
[29.95028687 143.18972778]
[41.94787598 134.18650818]
[53.94546509 125.18329620]
[65.94305420 116.18008423]
[77.94064331 107.17687225]
[76.85011292 99.75657654]
[62.90724945 94.22515869]
[74.66905975 84.91599274]
[73.57852936 77.49569702]
[59.49787903 72.32508850]
[45.41722488 67.15447235]
[31.33657265 61.98386383]
[17.25592041 56.81325531]
[3.17526746 51.64264297]
[-10.90538502 46.47203064]
[-24.98603821 41.30142212]
[-39.06669235 36.13080978]
[-53.14734268 30.96019936]
[-64.45292664 41.27729416]
[-79.26104736 45.14744186]
[-94.16891479 41.68130875]
[-105.75080872 31.67539597]
[-111.34529114 17.42897987]
[-109.66679382 2.21578741]
[-101.10102844 -10.46830273]
[-87.61633301 -17.70858002]
[-72.31140137 -17.84127998]
[-58.70318985 -10.83591080]
[-49.91876984 1.69774616]
[-47.97673416 16.87954712]
[-33.89608002 22.05015755]
[-19.81542778 27.22076797]
[-5.73477459 32.39138031]
[8.34587860 37.56198883]
[22.42653084 42.73260117]
[36.50718307 47.90321350]
[50.58783722 53.07382202]
[64.66848755 58.24443436]
[78.74914551 63.41504288]
[84.33992767 58.41572952]
[81.27133942 43.73295975]
[95.52149200 48.41710281]
[101.11228180 43.41778946]
[97.54177856 28.84893608]
[93.97128296 14.28007984]
[83.17147064 2.71830130]
[87.65686798 -11.48488522]
[84.08636475 -26.05374146]
[80.51586914 -40.62259674]
[76.94536591 -55.19145203]
[65.21635437 -66.65279388]
[69.53926086 -82.47190857]
[85.46704865 -86.37545776]
[96.61457825 -74.34779358]
[91.51422119 -58.76195145]
[95.08472443 -44.19309616]
[98.65522003 -29.62423897]
[102.22572327 -15.05538464]
[112.77014160 -4.53566790]
[108.54013824 10.70958138]
[112.11063385 25.27843666]
[115.68112946 39.84729004]
[129.25238037 57.69547653]
[133.22541809 76.48757935]
[128.92022705 92.12407684]
[119.17563629 101.61612701]
[107.72428894 103.58043671]
[121.52009583 109.46903992]
[135.31590271 115.35765076]
[149.11170959 121.24626160]
[162.90751648 127.13487244]
[176.70332336 133.02348328]
[189.99063110 125.22901917]
[205.14265442 126.73549652]
[216.36944580 136.75663757]
[219.50508118 151.29299927]
[233.30088806 157.18161011]
[247.09669495 163.07022095]
[262.04147339 161.78427124]
[274.62854004 153.62548828]
[287.21560669 145.46669006]
[299.80267334 137.30790710]
[312.38973999 129.14912415]
[324.97680664 120.99034119]
[325.66769409 105.48865509]
[335.36459351 93.37464142]
[350.33886719 89.30637360]
[364.83261108 94.84819794]
[373.27264404 107.86916351]
[372.41360474 123.36244202]
[362.58584595 135.37055969]
[347.56832886 139.27613831]
[333.13558960 133.57740784]
[320.54852295 141.73619080]
[307.96145630 149.89497375]
[295.37438965 158.05375671]
[282.78732300 166.21255493]
[270.20025635 174.37133789]
[269.81414795 181.86138916]
[284.29974365 177.96684265]
[292.47982788 190.54010010]
[283.04959106 202.20503235]
[269.04199219 196.84150696]
[268.65588379 204.33155823]
[280.33734131 213.74131775]
[292.01879883 223.15106201]
[307.61962891 225.78262329]
[312.67742920 239.79219055]
[324.35888672 249.20195007]
[333.02835083 252.15898132]
[336.15829468 258.87487793]
[347.67648315 268.48376465]
[359.19470215 278.09268188]
[374.74804688 280.99163818]
[379.56460571 295.08596802]
[391.08279419 304.69485474]
[402.60101318 314.30377197]
[414.11923218 323.91265869]
[425.63742065 333.52154541]
[439.51043701 327.15737915]
[454.77072144 327.45132446]
[468.38833618 334.34500122]
[477.65954590 346.46969604]
[480.74346924 361.41799927]
[477.02786255 376.22195435]
[467.25039673 387.94219971]
[453.35244751 394.25167847]
[438.09344482 393.89764404]
[424.50305176 386.95040894]
[415.27969360 374.78930664]
[412.25463867 359.82897949]
[416.02853394 345.03976440]
[404.51031494 335.43087769]
[392.99212646 325.82196045]
[381.47390747 316.21307373]
[369.95568848 306.60418701]
[355.22622681 304.39248657]
[349.58578491 289.61087036]
[338.06759644 280.00198364]
[326.54937744 270.39306641]
[314.94912720 260.88339233]
[303.26766968 251.47364807]
[288.50238037 249.51513672]
[282.60903931 234.83251953]
[270.92758179 225.42277527]
[259.24612427 216.01301575]
[251.32255554 228.74945068]
[238.42443848 236.40705872]
[223.44905090 237.26573181]
[209.76019287 231.13259888]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 110]
[6 109]
[7 108]
[11 104]
[12 103]
[13 102]
[14 101]
[15 100]
[16 99]
[17 37]
[18 36]
[19 35]
[20 34]
[21 33]
[22 32]
[41 71]
[42 70]
[43 69]
[44 68]
[45 67]
[46 66]
[47 65]
[48 64]
[49 63]
[50 62]
[75 94]
[76 93]
[77 92]
[79 90]
[80 89]
[81 88]
[82 87]
[111 130]
[112 129]
[113 128]
[114 127]
[115 126]
[116 125]
[136 178]
[137 177]
[138 176]
[140 174]
[141 173]
[143 172]
[144 171]
[145 170]
[147 168]
[148 167]
[149 166]
[150 165]
[151 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
