%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:32:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCAGUCGGGGGGAGGCGGCGGCAGCGGCAGCGGCUGCGGGCAGCGCGCGGGGCGCAGGGCGCGGGGCGAUCACCGUCGGGGCUCGGGAGGCGGGCAGUGGGCACAGGCUCCCCGGUGCCCGCCCCUCCGCUGCGGAGGGGGGCCGCGAGCGGGCGGCCGGGGAGGGGCCGGCACCGCCGCCACAAA\
) } def
/len { sequence length } bind def

/coor [
[94.10060883 436.87564087]
[82.61250305 446.68380737]
[68.82589722 452.85684204]
[53.85842133 454.89431763]
[38.92341614 452.63107300]
[25.23159599 446.25057983]
[13.89289570 436.27005005]
[5.82649326 423.49862671]
[1.68629491 408.97155762]
[1.80792880 393.86651611]
[6.18153429 379.40802002]
[14.45256329 366.76812744]
[25.95051956 356.97152710]
[39.74331665 350.81234741]
[54.71283340 348.78991699]
[56.96026993 333.95922852]
[59.20770645 319.12854004]
[61.45513916 304.29788208]
[63.70257568 289.46719360]
[65.95001221 274.63650513]
[68.19744873 259.80584717]
[70.44488525 244.97515869]
[59.73059464 234.66293335]
[57.11206818 219.84378052]
[63.79988480 206.16436768]
[77.41760254 198.96269226]
[79.66503143 184.13201904]
[81.91246796 169.30133057]
[84.15990448 154.47065735]
[70.79698181 148.63275146]
[59.36384583 139.58111572]
[50.61602402 127.91387177]
[45.13158798 114.40203094]
[43.27295685 99.93847656]
[28.40679550 97.93917084]
[13.54063320 95.93986511]
[-1.16768849 101.76874542]
[-12.75012016 92.40410614]
[-27.61628151 90.40480042]
[-42.32460403 96.23368073]
[-53.90703583 86.86904144]
[-68.77320099 84.86973572]
[-87.03350830 93.37850952]
[-101.83650970 80.95623016]
[-116.76117706 79.45479584]
[-131.68585205 77.95336151]
[-146.61051941 76.45192719]
[-159.89305115 85.44935608]
[-175.16555786 80.53709412]
[-180.71224976 65.48340607]
[-172.27821350 51.83618927]
[-156.33329773 50.06442642]
[-145.10908508 61.52725983]
[-130.18441772 63.02869415]
[-115.25974274 64.53012848]
[-100.33507538 66.03156281]
[-93.01667023 58.86558914]
[-82.74449921 56.87962723]
[-72.87619781 60.96939468]
[-66.77389526 70.00357056]
[-51.90773010 72.00287628]
[-38.26273727 66.03099060]
[-25.61697769 75.53863525]
[-10.75081539 77.53794098]
[2.89417815 71.56605530]
[15.53993702 81.07370758]
[30.40609932 83.07301331]
[45.27226257 85.07231140]
[51.09081650 71.26234436]
[60.32258606 59.45787430]
[72.32331085 50.48271179]
[86.25550079 44.96319580]
[101.14687347 43.28451920]
[115.95820618 45.56382751]
[122.04399109 31.85385895]
[120.57109833 16.10136223]
[132.80667114 7.60782766]
[138.89244080 -6.10214281]
[144.97822571 -19.81211281]
[143.50534058 -35.56460953]
[155.74090576 -44.05814362]
[161.82669067 -57.76811600]
[167.91246033 -71.47808075]
[162.47178650 -86.07386017]
[168.83892822 -99.89102936]
[182.78730774 -104.98793793]
[188.87309265 -118.69790649]
[194.95886230 -132.40788269]
[195.58380127 -141.54132080]
[201.26258850 -146.29476929]
[207.57661438 -159.90112305]
[213.89062500 -173.50749207]
[220.20465088 -187.11386108]
[226.51867676 -200.72021484]
[232.83270264 -214.32658386]
[239.14671326 -227.93295288]
[245.46073914 -241.53930664]
[244.25128174 -257.31420898]
[256.62707520 -265.60211182]
[262.94107056 -279.20846558]
[269.25509644 -292.81484985]
[275.56912231 -306.42120361]
[267.22082520 -319.39462280]
[267.23458862 -334.82196045]
[275.60604858 -347.78045654]
[289.66384888 -354.13507080]
[304.92227173 -351.85809326]
[316.51232910 -341.67605591]
[320.73574829 -326.83804321]
[316.24481201 -312.07882690]
[304.47256470 -302.10797119]
[289.17547607 -300.10717773]
[282.86148071 -286.50082397]
[276.54745483 -272.89447021]
[270.23342896 -259.28808594]
[271.89450073 -244.48640442]
[259.06710815 -235.22528076]
[252.75308228 -221.61892700]
[246.43905640 -208.01255798]
[240.12504578 -194.40620422]
[233.81101990 -180.79983521]
[227.49699402 -167.19346619]
[221.18296814 -153.58711243]
[214.86895752 -139.98074341]
[208.66883850 -126.32209778]
[202.58305359 -112.61212921]
[196.49726868 -98.90216064]
[202.07350159 -85.13838959]
[196.09695435 -71.14783478]
[181.62243652 -65.39230347]
[175.53665161 -51.68233490]
[169.45088196 -37.97236252]
[171.35906982 -23.20049667]
[158.68820190 -13.72633266]
[152.60241699 -0.01636277]
[146.51663208 13.69360733]
[148.42481995 28.46547508]
[135.75395203 37.93964005]
[129.66818237 51.64960861]
[146.21327209 67.10176086]
[155.39820862 87.79345703]
[155.76013184 110.42923737]
[170.01040649 115.11214447]
[184.26068115 119.79505157]
[198.51095581 124.47795868]
[212.76123047 129.16085815]
[227.01152039 133.84376526]
[241.00231934 126.49308014]
[256.06802368 131.26806641]
[263.27038574 145.33581543]
[258.33636475 160.35017395]
[244.19326782 167.40341187]
[229.23190308 162.31094360]
[222.32861328 148.09405518]
[208.07832336 143.41114807]
[193.82804871 138.72824097]
[179.57777405 134.04533386]
[165.32749939 129.36242676]
[151.07722473 124.67951202]
[147.55549622 130.92631531]
[143.27378845 136.67887878]
[138.30053711 141.84530640]
[132.71522522 146.34301758]
[126.60710907 150.10012817]
[120.07379150 153.05661011]
[113.21968079 155.16522217]
[106.15430450 156.39224243]
[98.99058533 156.71809387]
[96.74314880 171.54876709]
[94.49571228 186.37945557]
[92.24827576 201.21012878]
[103.12091064 212.12306213]
[105.45558929 227.16973877]
[98.56407166 240.54774475]
[85.27556610 247.22259521]
[83.02812958 262.05328369]
[80.78069305 276.88394165]
[78.53325653 291.71463013]
[76.28582001 306.54531860]
[74.03838348 321.37597656]
[71.79094696 336.20666504]
[69.54351044 351.03735352]
[83.24173737 357.40408325]
[94.59045410 367.37319946]
[102.66968536 380.13653564]
[106.82447815 394.65942383]
[106.71801758 409.76455688]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 182]
[16 181]
[17 180]
[18 179]
[19 178]
[20 177]
[21 176]
[22 175]
[26 171]
[27 170]
[28 169]
[29 168]
[34 68]
[35 67]
[36 66]
[38 64]
[39 63]
[41 61]
[42 60]
[44 56]
[45 55]
[46 54]
[47 53]
[74 139]
[75 138]
[77 136]
[78 135]
[79 134]
[81 132]
[82 131]
[83 130]
[86 127]
[87 126]
[88 125]
[90 124]
[91 123]
[92 122]
[93 121]
[94 120]
[95 119]
[96 118]
[97 117]
[99 115]
[100 114]
[101 113]
[102 112]
[142 159]
[143 158]
[144 157]
[145 156]
[146 155]
[147 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
