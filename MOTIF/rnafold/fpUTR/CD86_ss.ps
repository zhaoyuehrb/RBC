%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:03:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUUUCUGUAUUUGAGUUCUACCGUCAGUCCUGGCAUUAUUUCUCUCUCUACAAGGAGCCUUAGGAGGUACGGGGAGCUCGCAAAUACUCCUUUUGGUUUAUUCUUACCACCUUGCUUCUGUGUUCCUUGGGAAUGCUGCUGUGCUUAUGCAUCUGGUCUCUUUUUGGAGCUACAGUGGACAGGCAUUUGUGACAGCACU\
) } def
/len { sequence length } bind def

/coor [
[130.37846375 143.90457153]
[118.44834900 149.03366089]
[105.86757660 151.05284119]
[93.41810608 149.95680237]
[81.84507751 145.93022156]
[71.81221008 139.32962036]
[63.86384201 130.65510559]
[58.39568710 120.51406860]
[55.63597107 109.57958221]
[40.65229416 110.27919006]
[25.66861916 110.97879028]
[10.68494225 111.67839813]
[-4.29873419 112.37800598]
[-19.28240967 113.07760620]
[-34.25339508 114.01015472]
[-49.20806503 115.17541504]
[-64.16273499 116.34066772]
[-79.11740875 117.50592804]
[-94.07207489 118.67118835]
[-109.02674866 119.83644104]
[-123.98141479 121.00170135]
[-132.30108643 124.79068756]
[-139.17741394 122.06694794]
[-154.14839172 122.99948883]
[-169.11938477 123.93203735]
[-184.09036255 124.86457825]
[-192.46337891 137.79512024]
[-206.67864990 143.25218201]
[-221.20959473 139.33868408]
[-230.53813171 127.75782013]
[-245.50910950 128.69036865]
[-260.48010254 129.62290955]
[-275.45108032 130.55545044]
[-290.40576172 131.72070312]
[-305.34048462 133.11839294]
[-320.27523804 134.51608276]
[-322.79486084 149.39270020]
[-329.07989502 163.10987854]
[-338.70178223 174.73236084]
[-351.00445557 183.46768188]
[-365.14916992 188.72029114]
[-380.17147827 190.13201904]
[-395.04711914 187.60664368]
[-408.76187134 181.31631470]
[-420.38061523 171.68995667]
[-429.11120605 159.38388062]
[-434.35833740 145.23715210]
[-435.76428223 130.21430969]
[-433.23315430 115.33964539]
[-426.93753052 101.62732697]
[-417.30667114 90.01228333]
[-404.99725342 81.28646088]
[-390.84848022 76.04478455]
[-375.82510376 74.64465332]
[-360.95141602 77.18151855]
[-347.24151611 83.48242188]
[-335.63018799 93.11775970]
[-326.90911865 105.43057251]
[-321.67291260 119.58134460]
[-306.73818970 118.18365479]
[-291.80343628 116.78597260]
[-288.11621094 113.74026489]
[-282.47460938 112.98326111]
[-276.38363647 115.58446503]
[-261.41262817 114.65192413]
[-246.44165039 113.71937561]
[-231.47067261 112.78683472]
[-223.65142822 100.13782501]
[-209.71846008 94.45130920]
[-194.93586731 98.10209656]
[-185.02290344 109.89360046]
[-170.05192566 108.96105194]
[-155.08093262 108.02851105]
[-140.10995483 107.09596252]
[-125.14667511 106.04702759]
[-110.19200897 104.88177490]
[-95.23733521 103.71651459]
[-80.28266144 102.55125427]
[-65.32799530 101.38600159]
[-50.37332153 100.22074127]
[-35.41865158 99.05548096]
[-31.68450546 96.06748962]
[-26.03181267 95.39831543]
[-19.98201561 98.09393311]
[-4.99834013 97.39432526]
[9.98533630 96.69472504]
[24.96901321 95.99511719]
[39.95269012 95.29550934]
[54.93636322 94.59590149]
[55.92790222 83.38073730]
[59.76128387 72.36139679]
[66.38930511 62.26742554]
[75.57601929 53.81389999]
[86.90180969 47.65243149]
[99.78124237 44.32407761]
[113.49281311 44.21731186]
[114.65807343 29.26264191]
[115.82333374 14.30797195]
[116.98858643 -0.64669889]
[105.09454346 -10.61220741]
[101.36231232 -25.67374992]
[107.22700500 -40.03985596]
[120.43353271 -48.18646240]
[135.90371704 -46.98103714]
[147.68894958 -36.88708878]
[151.25758362 -21.78594398]
[145.23738098 -7.48430443]
[131.94325256 0.51855880]
[130.77799988 15.47322941]
[129.61274719 30.42790031]
[128.44747925 45.38257217]
[135.06532288 48.91161346]
[142.12341309 35.67593002]
[149.18150330 22.44024277]
[156.23959351 9.20455742]
[163.29789734 -4.03101110]
[176.53335571 3.02751708]
[169.47528076 16.26264572]
[162.41719055 29.49833298]
[155.35910034 42.73401642]
[148.30101013 55.96970367]
[154.91885376 59.49874878]
[166.68777466 50.19860458]
[178.45668030 40.89846039]
[190.22560120 31.59831810]
[201.99450684 22.29817581]
[213.76342773 12.99803257]
[225.53234863 3.69788933]
[234.21084595 -10.86644745]
[250.60845947 -6.55891228]
[251.00856018 10.39031315]
[234.83248901 15.46680355]
[223.06356812 24.76694679]
[211.29466248 34.06708908]
[199.52574158 43.36723328]
[187.75683594 52.66737747]
[175.98791504 61.96751785]
[164.21899414 71.26766205]
[165.15155029 86.23864746]
[177.98362732 94.00639343]
[190.81568909 101.77413177]
[203.64776611 109.54187775]
[216.47984314 117.30962372]
[229.31192017 125.07736969]
[242.20401001 132.74508667]
[255.15533447 140.31233215]
[270.26403809 136.52221680]
[283.29071045 144.38096619]
[286.81091309 158.80816650]
[299.76223755 166.37541199]
[312.71356201 173.94264221]
[325.66488647 181.50988770]
[346.27886963 174.39846802]
[365.17623901 184.69879150]
[370.23495483 205.32585144]
[383.73501587 211.86412048]
[397.23504639 218.40238953]
[413.64773560 212.35903931]
[429.05148315 219.90382385]
[434.13378906 235.93190002]
[447.73388672 242.25942993]
[461.33398438 248.58694458]
[474.93405151 254.91447449]
[491.21304321 252.93287659]
[500.85104370 266.20092773]
[493.93331909 281.06958008]
[477.57620239 282.24325562]
[468.60653687 268.51455688]
[455.00643921 262.18704224]
[441.40637207 255.85951233]
[427.80627441 249.53198242]
[416.43484497 255.60066223]
[403.45086670 253.98539734]
[393.62484741 245.05378723]
[390.69677734 231.90243530]
[377.19674683 225.36416626]
[363.69668579 218.82589722]
[356.97335815 224.24230957]
[348.81335449 227.19319153]
[340.09378052 227.33128357]
[331.76177979 224.61334229]
[324.73150635 219.30784607]
[319.78390503 211.96876526]
[317.48007202 203.37780762]
[318.09765625 194.46121216]
[305.14633179 186.89396667]
[292.19500732 179.32673645]
[279.24368286 171.75949097]
[264.94683838 175.77648926]
[251.70455933 168.28672791]
[247.58808899 153.26365662]
[234.63676453 145.69642639]
[227.27020264 145.03587341]
[221.54417419 137.90943909]
[208.71209717 130.14169312]
[195.88002014 122.37395477]
[183.04795837 114.60620880]
[170.21588135 106.83846283]
[157.38380432 99.07072449]
[154.91578674 112.81379700]
[149.26698303 125.31549072]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 89]
[10 88]
[11 87]
[12 86]
[13 85]
[14 84]
[15 81]
[16 80]
[17 79]
[18 78]
[19 77]
[20 76]
[21 75]
[23 74]
[24 73]
[25 72]
[26 71]
[30 67]
[31 66]
[32 65]
[33 64]
[34 61]
[35 60]
[36 59]
[96 111]
[97 110]
[98 109]
[99 108]
[122 138]
[123 137]
[124 136]
[125 135]
[126 134]
[127 133]
[128 132]
[139 199]
[140 198]
[141 197]
[142 196]
[143 195]
[144 194]
[145 192]
[146 191]
[149 188]
[150 187]
[151 186]
[152 185]
[155 177]
[156 176]
[157 175]
[160 171]
[161 170]
[162 169]
[163 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
