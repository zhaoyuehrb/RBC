%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:44:19 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GMNC)
} def

/sequence { (\
CACUGGUUUUACUGAAAAAUUGAGUGGGCUCAGUUUCUGCAGCGCUUUCUUCCACUGCAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 14 0.019329003 ubox
1 22 0.005708521 ubox
1 26 0.061344676 ubox
1 57 0.017173092 ubox
2 13 0.018212532 ubox
2 21 0.005428411 ubox
2 25 0.061590588 ubox
2 34 0.918976997 ubox
2 56 0.017220458 ubox
3 24 0.061625141 ubox
3 33 0.982534201 ubox
3 42 0.005940392 ubox
3 61 0.012229941 ubox
4 11 0.015630591 ubox
4 14 0.044476829 ubox
4 22 0.020535842 ubox
4 23 0.059123834 ubox
4 32 0.982991351 ubox
4 41 0.005987588 ubox
4 54 0.021063739 ubox
4 60 0.011912209 ubox
5 10 0.014937424 ubox
5 13 0.069913181 ubox
5 21 0.051503420 ubox
5 30 0.084956569 ubox
5 31 0.979753515 ubox
5 37 0.004179455 ubox
5 38 0.003338474 ubox
5 40 0.005939922 ubox
5 46 0.006516640 ubox
5 49 0.005735866 ubox
5 50 0.003463639 ubox
5 53 0.022140648 ubox
6 12 0.072232052 ubox
6 20 0.064338228 ubox
6 29 0.533021218 ubox
6 30 0.797985276 ubox
6 37 0.004355590 ubox
6 43 0.003475320 ubox
6 45 0.007059948 ubox
6 48 0.005575627 ubox
6 49 0.003774457 ubox
6 52 0.022080320 ubox
6 58 0.003453512 ubox
7 11 0.065086858 ubox
7 15 0.009534607 ubox
7 16 0.022105013 ubox
7 17 0.012567079 ubox
7 18 0.016874439 ubox
7 19 0.065090346 ubox
7 27 0.008455981 ubox
7 28 0.466803212 ubox
7 42 0.003238720 ubox
7 44 0.006924828 ubox
7 57 0.003407942 ubox
8 14 0.010176911 ubox
8 15 0.025208433 ubox
8 16 0.016438249 ubox
8 17 0.019475802 ubox
8 18 0.065225346 ubox
8 19 0.014579050 ubox
8 26 0.006068534 ubox
8 27 0.371197274 ubox
8 28 0.838945094 ubox
9 14 0.024947532 ubox
9 15 0.017030964 ubox
9 16 0.020649277 ubox
9 17 0.064910239 ubox
9 18 0.015420311 ubox
9 26 0.261783919 ubox
9 27 0.889906041 ubox
9 28 0.009117268 ubox
10 14 0.015477881 ubox
10 15 0.019400211 ubox
10 16 0.062318036 ubox
10 17 0.014891033 ubox
10 26 0.940857502 ubox
10 27 0.009268511 ubox
11 25 0.980552670 ubox
11 34 0.007422801 ubox
12 24 0.983646790 ubox
12 33 0.007812756 ubox
12 42 0.029962063 ubox
12 61 0.008504154 ubox
13 22 0.037951911 ubox
13 23 0.979740283 ubox
13 32 0.007801380 ubox
13 41 0.030164961 ubox
13 60 0.008339943 ubox
14 21 0.104988054 ubox
14 31 0.007788756 ubox
14 37 0.066110700 ubox
14 40 0.030109566 ubox
14 49 0.003684553 ubox
15 20 0.101321011 ubox
15 21 0.880466145 ubox
15 30 0.007493140 ubox
15 36 0.063211762 ubox
15 48 0.003675440 ubox
16 20 0.677560306 ubox
16 35 0.048177139 ubox
16 36 0.011262722 ubox
16 47 0.003340112 ubox
17 34 0.029164995 ubox
17 35 0.011071120 ubox
17 36 0.118035081 ubox
18 34 0.008744427 ubox
18 35 0.137283711 ubox
18 36 0.004420963 ubox
19 34 0.146282699 ubox
19 35 0.003588933 ubox
20 33 0.149270044 ubox
20 60 0.054959318 ubox
21 32 0.150395325 ubox
21 59 0.064487177 ubox
22 31 0.150655111 ubox
22 47 0.005569934 ubox
22 49 0.006006843 ubox
22 51 0.004475753 ubox
22 58 0.066420971 ubox
23 30 0.150524693 ubox
23 46 0.005942388 ubox
23 48 0.005992375 ubox
23 50 0.004836589 ubox
23 56 0.072886193 ubox
24 29 0.149261690 ubox
24 45 0.006014449 ubox
24 47 0.005411625 ubox
24 49 0.004919495 ubox
24 55 0.073463756 ubox
25 44 0.005884086 ubox
25 54 0.073454543 ubox
26 43 0.004111842 ubox
26 46 0.006802079 ubox
26 53 0.073451072 ubox
27 35 0.005799391 ubox
27 45 0.014398190 ubox
27 46 0.004231865 ubox
27 52 0.073300764 ubox
28 34 0.006993153 ubox
28 40 0.005002209 ubox
28 43 0.088481659 ubox
28 45 0.007042574 ubox
28 51 0.017060354 ubox
29 33 0.007054134 ubox
29 39 0.005000861 ubox
29 42 0.089132526 ubox
29 44 0.007042211 ubox
30 41 0.088734003 ubox
31 39 0.088658150 ubox
32 38 0.088492242 ubox
32 46 0.010545364 ubox
32 50 0.006406198 ubox
33 37 0.086570955 ubox
33 40 0.010770328 ubox
33 43 0.006368775 ubox
33 45 0.010904822 ubox
33 49 0.006472365 ubox
34 39 0.010639204 ubox
34 42 0.006346749 ubox
34 44 0.010581310 ubox
34 60 0.010249975 ubox
34 61 0.016909845 ubox
35 41 0.005728303 ubox
35 59 0.009398597 ubox
35 60 0.050518055 ubox
35 61 0.075685301 ubox
36 59 0.026341927 ubox
36 60 0.111170159 ubox
37 61 0.228647968 ubox
38 59 0.909375163 ubox
38 60 0.166378388 ubox
39 45 0.013179976 ubox
39 58 0.994114484 ubox
40 44 0.013104259 ubox
40 57 0.994295090 ubox
41 50 0.006828443 ubox
41 56 0.993409733 ubox
42 49 0.009106964 ubox
42 55 0.989163755 ubox
42 58 0.025279642 ubox
43 57 0.025308790 ubox
44 56 0.019938273 ubox
44 58 0.053108943 ubox
45 57 0.053150559 ubox
49 61 0.004731487 ubox
50 60 0.004852232 ubox
51 59 0.004574586 ubox
55 61 0.003500397 ubox
56 60 0.003206467 ubox
2 34 0.9500000 lbox
3 33 0.9500000 lbox
4 32 0.9500000 lbox
5 31 0.9500000 lbox
6 30 0.9500000 lbox
8 28 0.9500000 lbox
9 27 0.9500000 lbox
10 26 0.9500000 lbox
11 25 0.9500000 lbox
12 24 0.9500000 lbox
13 23 0.9500000 lbox
15 21 0.9500000 lbox
16 20 0.9500000 lbox
38 59 0.9500000 lbox
39 58 0.9500000 lbox
40 57 0.9500000 lbox
41 56 0.9500000 lbox
42 55 0.9500000 lbox
showpage
end
%%EOF
