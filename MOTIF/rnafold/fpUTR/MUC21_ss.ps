%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:14:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUCACAACAGAGAAAGAGGCAACUACAUUGCCUGGAGGAAGCCUAAGGAACCCAGGCAUCCAGCUGCCCACGCCUGAGUCCAAGAUUCUUCCCAGGAACACAAACGUAGGAGACCCACGCUCCUGGAAGCACCAGCCUUUAUCUCUUCACCUUCAAGUCCCCUUUCUCAAGAAUCCUCUGUUCUUUGCCCUCUAAAGUCUUGGUACAUCUAGGACCCAGGCAUCUUGCUUUCCAGCCACAAAGAGACAG\
) } def
/len { sequence length } bind def

/coor [
[237.07225037 290.23284912]
[224.15190125 293.15893555]
[210.89619446 293.12890625]
[197.97323608 290.14056396]
[186.03524780 284.34100342]
[175.68551636 276.01925659]
[167.44799805 265.59188843]
[161.74078369 253.58219910]
[158.85482788 240.59393311]
[158.93917847 227.28097534]
[161.99324036 214.31436157]
[167.86665344 202.34846497]
[156.37597656 192.70664978]
[144.88531494 183.06483459]
[133.39465332 173.42301941]
[121.90397644 163.78120422]
[110.41331482 154.13938904]
[98.92264557 144.49757385]
[83.99718475 145.99108887]
[74.64483643 157.71856689]
[65.29248810 169.44602966]
[55.94014359 181.17350769]
[46.58779526 192.90098572]
[37.23545074 204.62844849]
[37.59564209 220.66746521]
[25.18857002 230.83821106]
[9.53187656 227.33856201]
[2.63603640 212.85316467]
[9.79094887 198.49395752]
[25.50797653 195.27610779]
[34.86032486 183.54862976]
[44.21266937 171.82116699]
[53.56501770 160.09368896]
[62.91736603 148.36621094]
[72.26971436 136.63874817]
[66.10040283 122.96615601]
[51.11905289 122.21846771]
[36.13769913 121.47077942]
[21.15634346 120.72309113]
[6.17499065 119.97540283]
[-8.80636311 119.22771454]
[-23.78771782 118.48002625]
[-33.84177780 126.53188324]
[-46.28855133 125.61637115]
[-54.51038742 116.76612854]
[-69.48125458 115.83173370]
[-79.63491058 123.75762939]
[-92.06930542 122.68701935]
[-100.18016815 113.73497009]
[-115.13822937 112.61401367]
[-123.90293121 115.08869171]
[-130.27539062 111.38471222]
[-145.21830750 110.07737732]
[-159.64031982 116.58247375]
[-171.64480591 107.76535797]
[-186.58773804 106.45802307]
[-201.53065491 105.15068817]
[-216.47357178 103.84335327]
[-231.41648865 102.53601074]
[-238.40444946 116.03553009]
[-250.02973938 125.82946014]
[-264.51959229 130.42430115]
[-279.66439819 129.11936951]
[-293.15472412 122.11367035]
[-302.93334961 110.47550964]
[-307.50912476 95.97962189]
[-306.18429565 80.83653259]
[-299.16082764 67.35544586]
[-287.50982666 57.59213257]
[-273.00793457 53.03543091]
[-257.86660767 54.38019562]
[-244.39476013 61.42136765]
[-234.64677429 73.08522034]
[-230.10916138 87.59309387]
[-215.16624451 88.90042877]
[-200.22331238 90.20776367]
[-185.28039551 91.51509857]
[-170.33747864 92.82244110]
[-156.98428345 86.22383118]
[-143.91098022 95.13446045]
[-128.96806335 96.44179535]
[-114.01728058 97.65596008]
[-99.05921936 98.77690887]
[-83.66555023 90.32730103]
[-68.54685974 100.86086273]
[-53.57599258 101.79525757]
[-38.28885651 93.15439606]
[-23.04002953 103.49867249]
[-8.05867481 104.24636078]
[6.92267895 104.99404907]
[21.90403175 105.74173737]
[36.88538742 106.48942566]
[51.86674118 107.23711395]
[66.84809113 107.98480225]
[70.57069397 91.25895691]
[81.25175476 80.15569305]
[94.50635529 76.73983002]
[95.81369019 61.79690933]
[97.12102509 46.85398865]
[84.01049042 41.10671997]
[73.32924652 31.60855293]
[66.11100769 19.29640961]
[63.04887772 5.37865973]
[64.42879486 -8.78346634]
[70.10292053 -21.80900955]
[79.50532532 -32.43194580]
[91.70841217 -39.62422562]
[105.51442719 -42.69527054]
[107.00794220 -57.62073135]
[108.40840149 -72.55521393]
[109.71573639 -87.49813080]
[111.02307129 -102.44105530]
[112.33040619 -117.38397217]
[113.63774109 -132.32688904]
[114.94507599 -147.26982117]
[101.89872742 -155.11546326]
[93.58641815 -167.79585266]
[91.61204529 -182.76655579]
[96.31411743 -197.05122375]
[106.70912933 -207.83329773]
[120.69672394 -213.01139832]
[122.00405884 -227.95431519]
[123.31139374 -242.89724731]
[113.42861176 -254.93753052]
[114.96730804 -270.07315063]
[126.50678253 -279.42065430]
[127.81411743 -294.36358643]
[120.39691925 -308.98950195]
[129.58015442 -322.57626343]
[145.91690063 -321.14697266]
[152.60131836 -306.17196655]
[142.75703430 -293.05624390]
[141.44970703 -278.11334229]
[151.19068909 -266.90402222]
[150.07772827 -251.73114014]
[138.25431824 -241.58990479]
[136.94697571 -226.64698792]
[135.63964844 -211.70407104]
[148.51556396 -204.17570496]
[156.88035583 -191.75236511]
[159.03050232 -176.86820984]
[154.48648071 -162.46778870]
[144.09852600 -151.42344666]
[129.88800049 -145.96247864]
[128.58065796 -131.01956177]
[127.27332306 -116.07663727]
[125.96598816 -101.13372040]
[124.65865326 -86.19079590]
[123.35131836 -71.24787903]
[125.89245605 -64.32903290]
[121.93340302 -56.12721252]
[120.43988800 -41.20175171]
[134.72003174 -34.54232788]
[145.87222290 -23.37332153]
[152.53273010 -9.03442287]
[153.87821960 6.74550867]
[149.72738647 22.05689812]
[140.56515503 35.04053116]
[127.48616791 44.11332321]
[112.06394196 48.16132355]
[110.75660706 63.10424423]
[109.44927216 78.04716492]
[128.91566467 102.21040344]
[108.56446075 133.00691223]
[120.05513000 142.64872742]
[131.54579163 152.29054260]
[143.03645325 161.93235779]
[154.52713013 171.57415771]
[166.01779175 181.21597290]
[177.50845337 190.85778809]
[191.41825867 181.32608032]
[207.43402100 176.09382629]
[224.26130676 175.57591248]
[240.54237366 179.80653381]
[254.96568298 188.43704224]
[266.37155151 200.76464844]
[273.84536743 215.78970337]
[276.79098511 232.29667664]
[274.97830200 248.95256042]
[268.56103516 264.41448975]
[280.40420532 273.61990356]
[292.24734497 282.82531738]
[304.09048462 292.03076172]
[315.99078369 301.16217041]
[327.94778442 310.21923828]
[339.90478516 319.27630615]
[351.86175537 328.33337402]
[363.81875610 337.39044189]
[375.77572632 346.44750977]
[380.04583740 342.51165771]
[385.28738403 339.46853638]
[391.30502319 337.55374146]
[397.84735107 336.95825195]
[404.61749268 337.81549072]
[411.28643799 340.19076538]
[417.50897217 344.07391357]
[422.94104004 349.37554932]
[427.25799561 355.92758179]
[430.17257690 363.48767090]
[443.52066040 370.33084106]
[456.86874390 377.17401123]
[470.21682739 384.01715088]
[483.56491089 390.86032104]
[496.91296387 397.70349121]
[510.26104736 404.54663086]
[525.91064453 401.01553345]
[538.33819580 411.16128540]
[538.01025391 427.20098877]
[525.17840576 436.83032227]
[509.68621826 432.66250610]
[503.41787720 417.89471436]
[490.06982422 411.05154419]
[476.72174072 404.20840454]
[463.37365723 397.36523438]
[450.02557373 390.52206421]
[436.67749023 383.67892456]
[423.32943726 376.83575439]
[418.22811890 382.33364868]
[422.64974976 396.66714478]
[408.02554321 393.32943726]
[402.92425537 398.82730103]
[410.74578857 411.62667847]
[418.56729126 424.42602539]
[433.66287231 422.41525269]
[448.26940918 426.72445679]
[459.85620117 436.60708618]
[466.41580200 450.35086060]
[466.81170654 465.57461548]
[460.97531128 479.64077759]
[449.91781616 490.11224365]
[435.55499268 495.17480469]
[420.37530518 493.95132446]
[407.00869751 486.65377808]
[397.77105713 474.54650879]
[394.26281738 459.72720337]
[397.09182739 444.76336670]
[405.76794434 432.24755859]
[397.94641113 419.44821167]
[390.12487793 406.64883423]
[364.28247070 385.88488770]
[366.71865845 358.40447998]
[354.76168823 349.34741211]
[342.80468750 340.29034424]
[330.84771729 331.23330688]
[318.89071655 322.17623901]
[306.93371582 313.11917114]
[299.72341919 311.58975220]
[294.88507080 303.87390137]
[283.04193115 294.66848755]
[271.19876099 285.46304321]
[259.35562134 276.25762939]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 170]
[13 169]
[14 168]
[15 167]
[16 166]
[17 165]
[18 164]
[19 35]
[20 34]
[21 33]
[22 32]
[23 31]
[24 30]
[36 94]
[37 93]
[38 92]
[39 91]
[40 90]
[41 89]
[42 88]
[45 86]
[46 85]
[49 83]
[50 82]
[52 81]
[53 80]
[55 78]
[56 77]
[57 76]
[58 75]
[59 74]
[97 162]
[98 161]
[99 160]
[108 152]
[109 151]
[110 149]
[111 148]
[112 147]
[113 146]
[114 145]
[115 144]
[121 138]
[122 137]
[123 136]
[126 133]
[127 132]
[180 251]
[181 250]
[182 249]
[183 248]
[184 246]
[185 245]
[186 244]
[187 243]
[188 242]
[189 241]
[199 217]
[200 216]
[201 215]
[202 214]
[203 213]
[204 212]
[205 211]
[221 239]
[222 238]
[223 237]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
