%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:33:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGGGGAGGAACCCAGGCUGGGGGAGAAGUUAAAGCCAGAGGAGGGGCAGGAAUGUCUGAGGUGGCAACACUUCUCUUCAGCCAGACAGCACUGGCCAGUUUGGAGUCUGUCCAUCCUGCAGGCCACAAGCUCUGGAUGAGGAACUUGAGGCAAGUCACCAGCCCCUGAUCAUUUCGCCUAAAAGAGCAAGGACUAGAGUUCCUGACCUCCAGGCCAGUCCCUGAUCCCUGACCUA\
) } def
/len { sequence length } bind def

/coor [
[-31.44993591 664.12640381]
[-42.39527130 665.30072021]
[-46.11795044 679.83148193]
[-49.84062576 694.36218262]
[-53.56330109 708.89288330]
[-57.28598022 723.42358398]
[-49.01910782 736.89337158]
[-52.77930832 752.24383545]
[-66.33571625 760.36779785]
[-81.64556122 756.44549561]
[-89.62577820 742.80395508]
[-85.54184723 727.53643799]
[-71.81669617 719.70092773]
[-68.09401703 705.17022705]
[-64.37133789 690.63946533]
[-60.64866257 676.10876465]
[-56.92598724 661.57806396]
[-71.14203644 649.08050537]
[-77.03919983 631.00775146]
[-72.89459229 612.37048340]
[-59.78161621 598.38049316]
[-41.29358673 592.99377441]
[-38.34296417 578.28680420]
[-35.39233780 563.57989502]
[-32.44171143 548.87298584]
[-29.49108696 534.16601562]
[-37.93370438 521.94891357]
[-35.15085602 506.99197388]
[-22.27918053 498.21942139]
[-19.32855606 483.51248169]
[-32.26808929 474.12152100]
[-39.84055710 459.97430420]
[-40.48331070 443.88250732]
[-34.01673126 429.06961060]
[-21.69044304 418.52514648]
[-5.94212866 414.40124512]
[-3.18588591 399.65664673]
[-0.42964315 384.91204834]
[-6.92725420 377.05496216]
[-8.06114101 366.70181274]
[-3.21872711 357.23388672]
[6.22077751 351.87670898]
[9.36527157 337.21002197]
[12.50976467 322.54330444]
[15.65425873 307.87661743]
[18.79875183 293.20989990]
[12.49711609 282.89797974]
[14.98365211 270.66253662]
[25.46124649 263.16110229]
[28.79906082 248.53718567]
[32.13687515 233.91326904]
[35.47468948 219.28935242]
[38.81250381 204.66543579]
[42.15031815 190.04151917]
[45.48813248 175.41758728]
[48.43875504 160.71066284]
[51.00013733 145.93096924]
[53.56151581 131.15127563]
[56.12289810 116.37158203]
[47.72771072 103.94094086]
[33.06100464 100.79644775]
[18.39430428 97.65195465]
[3.72760177 94.50746155]
[-10.93910122 91.36296844]
[-25.60580254 88.21847534]
[-41.03641891 93.77078247]
[-53.38377762 82.97843933]
[-49.94597626 66.94367981]
[-34.25952911 62.16168976]
[-22.46130943 73.55177307]
[-7.79460716 76.69626617]
[6.87209511 79.84075928]
[21.53879738 82.98525238]
[36.20550156 86.12974548]
[50.87220383 89.27423859]
[61.33787918 78.52855682]
[57.80732346 63.94997406]
[54.27677155 49.37138748]
[50.74621964 34.79279709]
[47.21566772 20.21421242]
[43.68511200 5.63562489]
[32.91703796 -5.95571280]
[37.44134521 -20.14655113]
[33.91078949 -34.72513962]
[30.38023758 -49.30372620]
[26.84968376 -63.88231277]
[23.31913185 -78.46089935]
[19.06195450 -83.48042297]
[18.10786057 -89.05930328]
[19.89320183 -93.47087860]
[16.74870872 -108.13758087]
[1.88448691 -117.37783051]
[-1.61981368 -134.18046570]
[7.92826176 -148.03514099]
[4.59044790 -162.65905762]
[1.25263393 -177.28297424]
[-2.08518004 -191.90689087]
[-5.42299414 -206.53082275]
[-9.04968739 -221.08578491]
[-12.96383953 -235.56610107]
[-26.38605690 -243.47064209]
[-30.14928627 -258.21148682]
[-22.53079414 -270.95880127]
[-26.44494438 -285.43911743]
[-30.35909653 -299.91943359]
[-34.27324677 -314.39974976]
[-47.41237259 -323.60534668]
[-48.26341248 -339.62579346]
[-36.17351913 -350.17160034]
[-20.41702652 -347.15292358]
[-13.08096695 -332.88540649]
[-19.79293823 -318.31390381]
[-15.87878513 -303.83358765]
[-11.96463394 -289.35327148]
[-8.05048180 -274.87295532]
[4.95267296 -267.69985962]
[9.12845707 -253.07051086]
[1.51647174 -239.48023987]
[5.43062353 -224.99993896]
[8.27084541 -222.93997192]
[10.26221275 -219.41043091]
[10.72858334 -214.82157898]
[9.20092487 -209.86862183]
[12.53873825 -195.24470520]
[15.87655258 -180.62078857]
[19.21436691 -165.99687195]
[22.55218124 -151.37295532]
[34.30551910 -146.11819458]
[40.99103165 -134.88864136]
[39.97906494 -121.66382599]
[31.41541100 -111.28207397]
[34.55990601 -96.61537170]
[37.89772034 -81.99145508]
[41.42827225 -67.41286469]
[44.95882416 -52.83427811]
[48.48937607 -38.25569153]
[52.01993179 -23.67710495]
[62.53547668 -13.12852573]
[58.26369858 2.10507202]
[61.79425430 16.68365860]
[65.32480621 31.26224518]
[68.85536194 45.84083176]
[72.38591003 60.41941833]
[75.91646576 74.99800873]
[102.91683197 69.39978027]
[121.87416840 84.57981110]
[136.06480408 79.71917725]
[150.25544739 74.85854340]
[162.04483032 60.70208740]
[179.12391663 64.76984406]
[193.24916077 59.72232437]
[207.37440491 54.67480087]
[221.49964905 49.62728119]
[235.59127808 44.48664093]
[249.64866638 39.25311279]
[263.70605469 34.01958466]
[277.76345825 28.78605461]
[282.02734375 13.98317146]
[294.04953003 4.63863707]
[309.09097290 4.17054462]
[321.37677002 12.54893017]
[335.43414307 7.31540108]
[349.49154663 2.08187175]
[362.22573853 -9.11081505]
[376.50619507 0.02729203]
[371.67843628 16.27933884]
[354.72506714 16.13925934]
[340.66769409 21.37278938]
[326.61029053 26.60631943]
[322.79473877 40.97919464]
[311.10925293 50.46146393]
[295.90316772 51.25395203]
[282.99697876 42.84344482]
[268.93957520 48.07697296]
[254.88220215 53.31050110]
[240.82481384 58.54402924]
[235.66252136 63.81351471]
[226.54718018 63.75252533]
[212.42193604 68.80004883]
[198.29669189 73.84756470]
[184.17144775 78.89508820]
[178.72143555 89.68138885]
[167.00967407 94.00841522]
[155.11608887 89.04917908]
[140.92544556 93.90981293]
[126.73480225 98.77044678]
[125.98814392 110.65700531]
[119.97447968 121.59125519]
[109.41826630 129.26051331]
[96.04335785 131.81915283]
[82.29708099 128.31016541]
[70.90258789 118.93296051]
[68.34120941 133.71266174]
[65.77983093 148.49235535]
[63.21844864 163.27204895]
[64.84094238 167.25477600]
[65.09720612 171.15626526]
[64.17849731 174.55993652]
[62.39092636 177.15315247]
[60.11204910 178.75540161]
[56.77423477 193.37933350]
[53.43642044 208.00325012]
[50.09860611 222.62716675]
[46.76079559 237.25108337]
[43.42298126 251.87500000]
[40.08516693 266.49893188]
[45.91490936 283.97488403]
[33.46545410 296.35440063]
[30.32096100 311.02111816]
[27.17646790 325.68780518]
[24.03197289 340.35452271]
[20.88747978 355.02120972]
[27.92929649 373.92251587]
[14.31495380 387.66827393]
[11.55871105 402.41287231]
[8.80246735 417.15747070]
[20.49636269 425.07733154]
[28.26778793 436.81851196]
[30.97237778 450.59234619]
[28.23466301 464.31549072]
[20.49981117 475.92504883]
[8.96162128 483.68872070]
[-4.62162542 486.46310425]
[-7.57225037 501.17004395]
[0.91946685 514.22869873]
[-2.28239250 529.10156250]
[-14.78415680 537.11663818]
[-17.73478127 551.82360840]
[-20.68540764 566.53051758]
[-23.63603210 581.23742676]
[-26.58665657 595.94439697]
[-17.11886597 601.96612549]
[-9.94368649 610.55816650]
[-5.72634315 620.89862061]
[-4.85017776 632.00506592]
[-7.38185978 642.82720947]
[-13.06660652 652.34680176]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 17]
[3 16]
[4 15]
[5 14]
[6 13]
[22 231]
[23 230]
[24 229]
[25 228]
[26 227]
[29 224]
[30 223]
[36 216]
[37 215]
[38 214]
[42 212]
[43 211]
[44 210]
[45 209]
[46 208]
[49 206]
[50 205]
[51 204]
[52 203]
[53 202]
[54 201]
[55 200]
[56 195]
[57 194]
[58 193]
[59 192]
[60 75]
[61 74]
[62 73]
[63 72]
[64 71]
[65 70]
[76 144]
[77 143]
[78 142]
[79 141]
[80 140]
[81 139]
[83 137]
[84 136]
[85 135]
[86 134]
[87 133]
[90 132]
[91 131]
[94 127]
[95 126]
[96 125]
[97 124]
[98 123]
[99 119]
[100 118]
[103 115]
[104 114]
[105 113]
[106 112]
[146 186]
[147 185]
[148 184]
[150 181]
[151 180]
[152 179]
[153 178]
[154 176]
[155 175]
[156 174]
[157 173]
[161 169]
[162 168]
[163 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
