%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:14:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGCUCGCGCACCGCGCCACGUGUUUUCUCCUCCCGCCAAUGGGCGGAAGCGCCGCCUGAGCCUGCUCCCGCCCCCCAGGCUCGCCUGAGCCAAUCGGAAGGGGCGGGGUGUGUGUGUGUCUGUGUGUGUUUGUGUGUUGUGUGUCUGUGAGUGUCUGUGUGUGUGU\
) } def
/len { sequence length } bind def

/coor [
[138.42770386 413.34210205]
[147.83625793 401.45703125]
[160.74397278 393.50930786]
[157.69807434 378.82180786]
[154.65216064 364.13430786]
[151.60626221 349.44680786]
[148.56034851 334.75930786]
[145.51445007 320.07183838]
[142.46853638 305.38433838]
[139.42263794 290.69683838]
[129.26213074 279.80587769]
[134.03596497 264.72207642]
[130.99006653 250.03457642]
[127.80777740 235.37602234]
[124.48937988 220.74768066]
[121.17098999 206.11935425]
[117.85259247 191.49101257]
[107.49140167 180.79078674]
[111.98402405 165.62084961]
[108.66563416 150.99250793]
[105.34724426 136.36416626]
[102.02884674 121.73583221]
[97.92781067 136.16433716]
[99.77731323 151.04986572]
[94.67250824 165.15451050]
[83.72447968 175.40834045]
[69.31611633 179.57954407]
[54.58344269 176.76026917]
[42.73308563 167.56411743]
[36.34431839 153.99269104]
[36.80767822 138.99984741]
[44.02231598 125.84884644]
[56.41793823 117.40203857]
[71.29479980 115.49771881]
[84.25292206 107.94212341]
[69.25875854 108.36032867]
[54.26458740 108.77853394]
[39.27041626 109.19673920]
[24.27624702 109.61494446]
[10.59940434 118.66347504]
[-3.95250034 111.10211945]
[-4.40971422 94.70935059]
[9.69810486 86.34864044]
[23.85804176 94.62077332]
[38.85221100 94.20256805]
[53.84638214 93.78436279]
[68.84055328 93.36615753]
[83.83471680 92.94795227]
[95.51235199 83.53344727]
[99.10208893 68.96932220]
[102.69182587 54.40519714]
[106.28155518 39.84106827]
[109.87129211 25.27694130]
[113.46102905 10.71281338]
[116.91524506 -3.88404918]
[120.23363495 -18.51238632]
[123.55202484 -33.14072418]
[117.34021759 -44.47467422]
[120.43306732 -56.60997009]
[130.63685608 -63.15385818]
[134.22659302 -77.71798706]
[137.40887451 -92.37653351]
[140.18124390 -107.11810303]
[135.12785339 -122.11056519]
[145.08416748 -133.18852234]
[147.85652161 -147.93009949]
[150.62889099 -162.67167664]
[153.26411438 -177.43838501]
[155.76197815 -192.22894287]
[158.25984192 -207.01950073]
[160.75772095 -221.81005859]
[163.25558472 -236.60061646]
[165.75344849 -251.39117432]
[168.25131226 -266.18173218]
[170.74917603 -280.97229004]
[173.24703979 -295.76284790]
[175.46954346 -310.59729004]
[177.41592407 -325.47048950]
[167.96237183 -344.67251587]
[181.06346130 -360.59213257]
[182.17779541 -375.55068970]
[183.29212952 -390.50924683]
[184.40646362 -405.46780396]
[185.52079773 -420.42633057]
[177.91540527 -434.95529175]
[186.92250061 -448.65945435]
[203.27632141 -447.44119263]
[210.15348816 -432.55374146]
[200.47933960 -419.31201172]
[199.36500549 -404.35345459]
[198.25068665 -389.39489746]
[197.13635254 -374.43637085]
[196.02201843 -359.47781372]
[202.88580322 -353.73547363]
[206.36872864 -345.34240723]
[205.56336975 -336.15258789]
[200.52526855 -328.26058960]
[192.28910828 -323.52410889]
[190.34272766 -308.65090942]
[192.51676941 -304.35726929]
[191.98823547 -298.64767456]
[188.03759766 -293.26498413]
[185.53973389 -278.47442627]
[183.04187012 -263.68386841]
[180.54400635 -248.89331055]
[178.04614258 -234.10275269]
[175.54827881 -219.31219482]
[173.05041504 -204.52163696]
[170.55253601 -189.73107910]
[168.05467224 -174.94050598]
[170.04951477 -167.79249573]
[165.37046814 -159.89930725]
[162.59809875 -145.15773010]
[159.82572937 -130.41616821]
[165.07742310 -116.47811890]
[154.92282104 -104.34574127]
[152.15045166 -89.60417175]
[153.86087036 -86.47726440]
[154.11785889 -82.35710144]
[152.46710205 -77.94703674]
[148.79072571 -74.12825012]
[145.20098877 -59.56412125]
[150.99693298 -43.01812744]
[138.18035889 -29.82233047]
[134.86196899 -15.19399357]
[131.54357910 -0.56565589]
[133.13688660 6.68244362]
[128.02516174 14.30254841]
[124.43541718 28.86667633]
[120.84568787 43.43080521]
[117.25595093 57.99493027]
[113.66621399 72.55905914]
[110.07647705 87.12318420]
[120.57868195 99.26649475]
[116.65718842 118.41744232]
[119.97557831 133.04577637]
[123.29397583 147.67411804]
[126.61236572 162.30245972]
[137.21092224 174.04899597]
[132.48092651 188.17262268]
[135.79933167 202.80094910]
[139.11772156 217.42929077]
[142.43611145 232.05763245]
[147.40531921 239.77143860]
[145.67755127 246.98866272]
[148.72346497 261.67614746]
[159.10183716 273.61767578]
[154.11013794 287.65093994]
[157.15603638 302.33843994]
[160.20193481 317.02590942]
[163.24784851 331.71340942]
[166.29374695 346.40090942]
[169.33966064 361.08840942]
[172.38555908 375.77590942]
[175.43147278 390.46337891]
[190.43521118 392.62283325]
[203.79409790 399.78637695]
[213.89494324 411.08895874]
[219.51803589 425.16577148]
[219.98435974 440.31695557]
[215.23760986 454.71295166]
[205.85096741 466.61532593]
[192.95791626 474.58685303]
[178.11537170 477.66491699]
[163.11563110 475.47781372]
[149.76997375 468.28967285]
[139.68997192 456.96847534]
[134.09281921 442.88134766]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 155]
[4 154]
[5 153]
[6 152]
[7 151]
[8 150]
[9 149]
[10 148]
[12 146]
[13 145]
[14 143]
[15 142]
[16 141]
[17 140]
[19 138]
[20 137]
[21 136]
[22 135]
[35 48]
[36 47]
[37 46]
[38 45]
[39 44]
[49 133]
[50 132]
[51 131]
[52 130]
[53 129]
[54 128]
[55 126]
[56 125]
[57 124]
[60 122]
[61 121]
[62 117]
[63 116]
[65 114]
[66 113]
[67 112]
[68 110]
[69 109]
[70 108]
[71 107]
[72 106]
[73 105]
[74 104]
[75 103]
[76 102]
[77 99]
[78 98]
[80 93]
[81 92]
[82 91]
[83 90]
[84 89]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
