%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:55:03 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KIAA1109)
} def

/sequence { (\
GAAAUCUUUUAGGCCUUUAGAUGUUGUUCUGGAAAAACUUUAGUA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.028605761 ubox
1 9 0.037649651 ubox
1 10 0.101569263 ubox
1 17 0.006934905 ubox
1 18 0.013086294 ubox
1 25 0.043756145 ubox
1 28 0.008148446 ubox
1 29 0.061678413 ubox
1 40 0.011720981 ubox
1 41 0.042846146 ubox
2 7 0.030798292 ubox
2 8 0.042825680 ubox
2 9 0.106185377 ubox
2 10 0.061693943 ubox
2 16 0.009097414 ubox
2 17 0.015783133 ubox
2 18 0.008587342 ubox
2 24 0.044371465 ubox
2 25 0.023673109 ubox
2 27 0.009212643 ubox
2 28 0.061726590 ubox
2 39 0.012688033 ubox
2 40 0.044982757 ubox
2 41 0.051338524 ubox
3 7 0.033742193 ubox
3 8 0.093632316 ubox
3 9 0.063402790 ubox
3 10 0.071786452 ubox
3 16 0.016551065 ubox
3 17 0.010293028 ubox
3 18 0.004016645 ubox
3 24 0.021670877 ubox
3 25 0.028031226 ubox
3 27 0.059714056 ubox
3 28 0.008816339 ubox
3 39 0.041489409 ubox
3 40 0.053691631 ubox
3 41 0.065807366 ubox
4 8 0.049050604 ubox
4 9 0.073229846 ubox
4 16 0.010277798 ubox
4 17 0.004875658 ubox
4 22 0.109986029 ubox
4 24 0.030379075 ubox
4 27 0.010112068 ubox
4 39 0.050346718 ubox
4 40 0.069811346 ubox
4 44 0.100089468 ubox
5 13 0.125065414 ubox
5 21 0.114273861 ubox
5 23 0.029838738 ubox
5 26 0.010368352 ubox
5 32 0.006870100 ubox
5 33 0.049010831 ubox
5 43 0.068060046 ubox
6 12 0.169865259 ubox
6 13 0.076026353 ubox
6 20 0.114935021 ubox
6 31 0.010630391 ubox
6 32 0.052327316 ubox
6 43 0.312320872 ubox
7 11 0.153294002 ubox
7 12 0.071420421 ubox
7 13 0.013461944 ubox
7 19 0.112789497 ubox
7 21 0.013104572 ubox
7 31 0.050429742 ubox
7 33 0.008381946 ubox
7 34 0.136605993 ubox
7 35 0.033620488 ubox
7 36 0.059650771 ubox
7 37 0.109466553 ubox
7 42 0.300882434 ubox
7 43 0.282147789 ubox
8 12 0.013223988 ubox
8 19 0.006163795 ubox
8 20 0.012849445 ubox
8 21 0.068745497 ubox
8 32 0.007929862 ubox
8 33 0.151397351 ubox
8 34 0.036262405 ubox
8 35 0.064196121 ubox
8 36 0.121098926 ubox
8 37 0.027684950 ubox
8 42 0.350179218 ubox
8 43 0.105442415 ubox
9 19 0.011953321 ubox
9 20 0.070966533 ubox
9 21 0.006091268 ubox
9 31 0.006091729 ubox
9 32 0.153094964 ubox
9 33 0.032410207 ubox
9 34 0.064312865 ubox
9 35 0.123166450 ubox
9 36 0.031530363 ubox
9 37 0.023238748 ubox
9 42 0.127227421 ubox
9 43 0.113861084 ubox
10 19 0.072497206 ubox
10 20 0.005825423 ubox
10 26 0.007740839 ubox
10 31 0.153970119 ubox
10 32 0.026443506 ubox
10 33 0.045783129 ubox
10 34 0.121021261 ubox
10 35 0.028667711 ubox
10 36 0.025646507 ubox
10 42 0.146549770 ubox
10 45 0.010748299 ubox
11 17 0.013493058 ubox
11 18 0.072845830 ubox
11 25 0.007938212 ubox
11 30 0.154821344 ubox
11 39 0.533096946 ubox
11 40 0.219938693 ubox
11 41 0.135174091 ubox
11 44 0.010561437 ubox
12 16 0.010511728 ubox
12 17 0.059263082 ubox
12 18 0.006855776 ubox
12 24 0.006852458 ubox
12 25 0.047861084 ubox
12 28 0.014148479 ubox
12 29 0.154372299 ubox
12 30 0.008332521 ubox
12 38 0.555138042 ubox
12 39 0.261766415 ubox
12 40 0.119750148 ubox
12 41 0.008713090 ubox
13 17 0.005218235 ubox
13 24 0.062749150 ubox
13 27 0.067375701 ubox
13 28 0.113641372 ubox
13 29 0.008466283 ubox
13 38 0.269764095 ubox
13 39 0.096944763 ubox
13 40 0.008500964 ubox
13 44 0.041515743 ubox
14 23 0.065204985 ubox
14 26 0.094117047 ubox
14 32 0.120412027 ubox
14 43 0.041517229 ubox
15 31 0.119382086 ubox
15 32 0.050832399 ubox
15 43 0.031128488 ubox
16 31 0.042436305 ubox
16 32 0.017208559 ubox
16 33 0.886391668 ubox
16 34 0.125903922 ubox
16 35 0.067843425 ubox
16 36 0.028268815 ubox
16 37 0.014053839 ubox
16 42 0.028637092 ubox
16 43 0.005291206 ubox
17 31 0.015247834 ubox
17 32 0.930776135 ubox
17 33 0.121893197 ubox
17 34 0.060190051 ubox
17 35 0.026695017 ubox
17 36 0.014048053 ubox
17 37 0.003900186 ubox
17 42 0.005422630 ubox
17 43 0.049711786 ubox
18 26 0.020789138 ubox
18 31 0.952673320 ubox
18 32 0.089351946 ubox
18 33 0.039962438 ubox
18 34 0.018328485 ubox
18 35 0.009747433 ubox
18 42 0.067633742 ubox
18 45 0.003300094 ubox
19 25 0.022621280 ubox
19 28 0.007028141 ubox
19 30 0.969202090 ubox
19 39 0.019888152 ubox
19 41 0.069122506 ubox
19 44 0.003709959 ubox
20 24 0.015579440 ubox
20 27 0.007918970 ubox
20 28 0.015360623 ubox
20 29 0.970830498 ubox
20 38 0.019788422 ubox
20 40 0.069392218 ubox
20 41 0.020212535 ubox
21 27 0.040796318 ubox
21 28 0.956780755 ubox
21 39 0.067673777 ubox
21 40 0.020756679 ubox
21 44 0.005370007 ubox
22 26 0.051149821 ubox
22 42 0.004625790 ubox
22 43 0.005418841 ubox
23 38 0.082946471 ubox
23 41 0.005307657 ubox
24 33 0.014036184 ubox
24 34 0.013276307 ubox
24 35 0.010408936 ubox
24 36 0.008863056 ubox
24 37 0.082805224 ubox
25 32 0.014407501 ubox
25 33 0.013725936 ubox
25 34 0.012102791 ubox
25 35 0.009812305 ubox
25 36 0.080658747 ubox
25 42 0.003454573 ubox
25 45 0.007689040 ubox
26 38 0.024237206 ubox
26 41 0.003294150 ubox
26 44 0.008667321 ubox
27 33 0.014576830 ubox
27 34 0.030508168 ubox
27 35 0.010892132 ubox
27 36 0.005047975 ubox
27 37 0.024096256 ubox
27 43 0.003254443 ubox
28 32 0.013675758 ubox
28 33 0.030229742 ubox
28 34 0.011874135 ubox
28 35 0.006085858 ubox
28 36 0.022726147 ubox
28 42 0.003569810 ubox
29 43 0.105301415 ubox
30 42 0.107284393 ubox
31 39 0.015559786 ubox
31 40 0.004521170 ubox
31 41 0.106961186 ubox
31 44 0.003362928 ubox
32 38 0.018641661 ubox
32 39 0.005930375 ubox
32 40 0.106242779 ubox
32 41 0.033754366 ubox
33 39 0.102642829 ubox
33 40 0.036864811 ubox
33 41 0.023955689 ubox
34 39 0.035039056 ubox
34 40 0.029768843 ubox
34 41 0.039559162 ubox
35 39 0.023796962 ubox
35 40 0.036898226 ubox
35 41 0.024094449 ubox
36 40 0.019652996 ubox
37 44 0.151595731 ubox
38 43 0.156522965 ubox
16 33 0.9500000 lbox
17 32 0.9500000 lbox
18 31 0.9500000 lbox
19 30 0.9500000 lbox
20 29 0.9500000 lbox
21 28 0.9500000 lbox
showpage
end
%%EOF
