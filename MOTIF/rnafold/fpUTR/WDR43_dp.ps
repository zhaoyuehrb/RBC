%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:31:35 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (WDR43)
} def

/sequence { (\
GCGCCGGUGCGCCUGCGCACGGACGAACACGUGGCUGCAGCGGGGCCAGAGCAGCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.012591624 ubox
1 18 0.021668666 ubox
1 32 0.003855131 ubox
1 46 0.965092646 ubox
1 52 0.112078763 ubox
1 55 0.211076090 ubox
2 11 0.013022057 ubox
2 17 0.023655474 ubox
2 25 0.040135441 ubox
2 31 0.004009040 ubox
2 45 0.968164790 ubox
2 51 0.112074729 ubox
2 54 0.211118912 ubox
3 10 0.013095785 ubox
3 16 0.023730641 ubox
3 24 0.040854267 ubox
3 30 0.003975339 ubox
3 46 0.024172903 ubox
3 52 0.209585902 ubox
3 55 0.010287163 ubox
4 9 0.013037610 ubox
4 15 0.023654667 ubox
4 22 0.045364051 ubox
4 43 0.968688901 ubox
4 44 0.013249116 ubox
4 45 0.023990113 ubox
4 51 0.210100234 ubox
4 54 0.010250875 ubox
5 21 0.045414007 ubox
5 42 0.968837334 ubox
5 43 0.012294032 ubox
5 44 0.023728794 ubox
6 13 0.023594455 ubox
6 20 0.041469620 ubox
6 41 0.968443576 ubox
6 47 0.226044960 ubox
7 12 0.023475125 ubox
7 18 0.037046516 ubox
7 20 0.018933115 ubox
7 41 0.014359814 ubox
7 46 0.226090523 ubox
7 52 0.008244094 ubox
8 17 0.037066168 ubox
8 19 0.026282466 ubox
8 39 0.967202211 ubox
8 40 0.015058024 ubox
8 42 0.020349369 ubox
8 45 0.224057307 ubox
8 48 0.050543805 ubox
8 51 0.008118530 ubox
9 16 0.037091023 ubox
9 18 0.026754341 ubox
9 38 0.968378550 ubox
9 41 0.024011889 ubox
9 46 0.064260114 ubox
9 47 0.049116039 ubox
10 15 0.037038811 ubox
10 17 0.026760247 ubox
10 37 0.967943810 ubox
10 40 0.024106577 ubox
10 42 0.221029732 ubox
10 45 0.066209417 ubox
11 16 0.026288910 ubox
11 18 0.003201133 ubox
11 35 0.281366880 ubox
11 36 0.888020606 ubox
11 38 0.037623421 ubox
11 41 0.221724006 ubox
11 46 0.029038249 ubox
12 17 0.004084755 ubox
12 34 0.287239668 ubox
12 37 0.039276302 ubox
12 40 0.157974584 ubox
12 43 0.027844098 ubox
12 44 0.079411312 ubox
12 45 0.025873643 ubox
13 22 0.005287577 ubox
13 33 0.265091697 ubox
13 34 0.091463809 ubox
13 40 0.159157576 ubox
13 42 0.025022766 ubox
13 43 0.080591597 ubox
13 44 0.022001938 ubox
14 21 0.008453713 ubox
14 29 0.014091476 ubox
14 31 0.023690222 ubox
14 33 0.085364043 ubox
14 39 0.223653034 ubox
14 42 0.081588347 ubox
14 43 0.016155696 ubox
15 20 0.009486246 ubox
15 28 0.014175570 ubox
15 30 0.025102773 ubox
15 32 0.186115578 ubox
15 35 0.917964692 ubox
15 36 0.012264932 ubox
15 38 0.224594182 ubox
15 41 0.083315693 ubox
16 25 0.029223594 ubox
16 31 0.191477616 ubox
16 33 0.007270094 ubox
16 34 0.917891057 ubox
16 37 0.224459980 ubox
16 40 0.083283326 ubox
16 42 0.006099851 ubox
17 24 0.029015734 ubox
17 30 0.188485032 ubox
17 32 0.015304650 ubox
17 35 0.181737238 ubox
17 36 0.115794787 ubox
17 38 0.080130537 ubox
17 41 0.006184853 ubox
18 31 0.014641073 ubox
18 33 0.944429095 ubox
18 34 0.133770440 ubox
18 37 0.080156570 ubox
18 40 0.006135705 ubox
19 32 0.974111854 ubox
19 36 0.076894372 ubox
20 31 0.975259293 ubox
20 33 0.010845782 ubox
20 37 0.010074362 ubox
21 30 0.975027174 ubox
21 32 0.006124058 ubox
21 36 0.010642516 ubox
22 35 0.011062129 ubox
23 32 0.087366089 ubox
24 31 0.088337546 ubox
24 33 0.006231135 ubox
25 30 0.086125050 ubox
25 32 0.005038799 ubox
31 52 0.003665871 ubox
31 55 0.005181497 ubox
32 48 0.017330959 ubox
32 54 0.004886887 ubox
32 56 0.003401115 ubox
33 47 0.021774257 ubox
33 55 0.003296978 ubox
34 46 0.021810709 ubox
34 52 0.005452878 ubox
34 55 0.047087666 ubox
35 45 0.021747124 ubox
35 51 0.005482519 ubox
35 54 0.047260322 ubox
36 44 0.021518834 ubox
36 50 0.005429931 ubox
36 53 0.047253287 ubox
36 56 0.004269453 ubox
37 52 0.047254639 ubox
37 55 0.005605628 ubox
38 45 0.003292240 ubox
38 51 0.047204131 ubox
38 54 0.005600128 ubox
40 46 0.025305432 ubox
40 52 0.005812276 ubox
41 45 0.025163910 ubox
41 51 0.005842422 ubox
45 52 0.027635379 ubox
45 55 0.014750559 ubox
46 51 0.027957389 ubox
46 54 0.015115275 ubox
1 46 0.9500000 lbox
2 45 0.9500000 lbox
4 43 0.9500000 lbox
5 42 0.9500000 lbox
6 41 0.9500000 lbox
8 39 0.9500000 lbox
9 38 0.9500000 lbox
10 37 0.9500000 lbox
11 36 0.9500000 lbox
15 35 0.9500000 lbox
16 34 0.9500000 lbox
18 33 0.9500000 lbox
19 32 0.9500000 lbox
20 31 0.9500000 lbox
21 30 0.9500000 lbox
showpage
end
%%EOF
