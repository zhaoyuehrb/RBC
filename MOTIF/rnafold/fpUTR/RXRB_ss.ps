%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:03:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGAGGGGGCGGGAACUCGCGCCGAGACUUCCCGUCUGUACAAAGAUGGCUGCCACAUUGGCGCUGUCAUUUUGGUACUGAGCAGAGCGACGGGCUUAAUUCGACCCAAUCCAGGCCAGAGUCUUUCUCUCAGGGGCUUCCUCGUGCUCAGCUAAUCCUCCGAUCAAUCCUUGGGAAUCCCUGGGACCUCUUCGGUAUCCCUACUCUCAGCCAGGGAUC\
) } def
/len { sequence length } bind def

/coor [
[143.87774658 198.94177246]
[135.17454529 185.32833862]
[133.27429199 169.22416687]
[138.60801697 153.84893799]
[127.88893890 143.35601807]
[117.16986084 132.86309814]
[106.45078278 122.37017822]
[91.48865509 123.43543243]
[82.36428070 135.34114075]
[73.23990631 147.24684143]
[64.11553955 159.15255737]
[54.99116898 171.05825806]
[45.86679459 182.96397400]
[36.74242401 194.86967468]
[27.61805344 206.77537537]
[18.49368286 218.68109131]
[9.53947163 230.71528625]
[0.75722980 242.87556458]
[-8.02501202 255.03584290]
[-16.80725479 267.19610596]
[-21.17911720 283.57669067]
[-38.12978363 283.91027832]
[-43.14274216 267.71438599]
[-28.96752548 258.41387939]
[-20.18528366 246.25360107]
[-11.40304279 234.09332275]
[-2.62080097 221.93304443]
[-2.48179841 217.16587830]
[0.64848495 212.43371582]
[6.58797598 209.55671692]
[15.71234703 197.65101624]
[24.83671951 185.74530029]
[33.96109009 173.83959961]
[43.08546066 161.93388367]
[52.20983124 150.02818298]
[61.33420181 138.12248230]
[70.45857239 126.21676636]
[79.58294678 114.31106567]
[73.67076874 100.52533722]
[58.75593948 98.92913818]
[43.84111023 97.33293915]
[28.92627907 95.73674011]
[14.38111305 101.96158600]
[2.54945803 92.91387177]
[-12.36537170 91.31767273]
[-27.28020096 89.72147369]
[-42.19503021 88.12527466]
[-57.10985947 86.52907562]
[-72.02468872 84.93287659]
[-86.93952179 83.33667755]
[-101.85434723 81.74047852]
[-116.79035950 80.35645294]
[-131.74453735 79.18488312]
[-146.69871521 78.01330566]
[-161.65289307 76.84173584]
[-176.60707092 75.67016602]
[-192.87007141 80.46092224]
[-201.97564697 66.15970612]
[-190.75399780 53.45100403]
[-175.43550110 60.71598816]
[-160.48132324 61.88755798]
[-145.52714539 63.05913162]
[-130.57296753 64.23070526]
[-115.61878967 65.40227509]
[-111.47558594 63.04025269]
[-105.80570221 63.25081635]
[-100.25814819 66.82564545]
[-85.34332275 68.42184448]
[-70.42848969 70.01804352]
[-55.51366043 71.61424255]
[-40.59883118 73.21044159]
[-25.68400192 74.80664062]
[-10.76917267 76.40283966]
[4.14565706 77.99903870]
[17.62401581 71.66002655]
[30.52247810 80.82191467]
[45.43730927 82.41811371]
[60.35213852 84.01431274]
[75.26696777 85.61051178]
[87.10752106 76.40174866]
[89.23265076 61.55305099]
[91.35778046 46.70435333]
[93.48291016 31.85565567]
[95.60803223 17.00695801]
[97.73316193 2.15825939]
[99.75270081 -12.70516777]
[101.66654205 -27.58257484]
[103.58038330 -42.45998001]
[101.57238007 -51.36325073]
[105.62862396 -57.53469467]
[107.75375366 -72.38339233]
[87.99993134 -72.17765045]
[69.46640778 -89.90513611]
[65.25901794 -104.30297852]
[61.05163574 -118.70082092]
[46.11156464 -122.26310730]
[34.96525955 -132.82981873]
[30.61101723 -147.55857849]
[34.22011185 -162.48739624]
[44.82171249 -173.60054016]
[59.56404114 -177.90858459]
[74.48148346 -174.25271606]
[85.56133270 -163.61633301]
[89.82315063 -148.86056519]
[86.12053680 -133.95466614]
[75.44947815 -122.90821075]
[79.65686798 -108.51036835]
[83.86425018 -94.11251831]
[91.33226013 -93.42050934]
[92.71628571 -108.35652161]
[94.10055542 -123.29251099]
[109.03652191 -121.90798950]
[107.65229797 -106.97249603]
[106.26827240 -92.03648376]
[113.73627472 -91.34447479]
[120.51761627 -104.72406006]
[127.29896545 -118.10364532]
[134.08030701 -131.48323059]
[140.47857666 -145.05018616]
[146.48858643 -158.79354858]
[152.49859619 -172.53689575]
[158.50860596 -186.28024292]
[154.02252197 -201.68331909]
[163.38546753 -214.71076965]
[179.41500854 -215.36906433]
[189.81465149 -203.15321350]
[186.60667419 -187.43417358]
[172.25195312 -180.27023315]
[166.24194336 -166.52688599]
[160.23193359 -152.78352356]
[154.22192383 -139.04017639]
[155.11096191 -136.38900757]
[155.00733948 -133.22717285]
[153.71176147 -129.92956543]
[151.16371155 -126.93609619]
[147.45989990 -124.70188904]
[140.67855835 -111.32230377]
[133.89720154 -97.94271851]
[127.11586761 -84.56312561]
[122.60245514 -70.25826263]
[120.47732544 -55.40956497]
[118.45778656 -40.54613876]
[116.54394531 -25.66873360]
[114.63010406 -10.79132652]
[116.89263916 -3.76133156]
[112.58186340 4.28338766]
[110.45673370 19.13208580]
[108.33160400 33.98078537]
[106.20647430 48.82948303]
[104.08134460 63.67818069]
[101.95622253 78.52687836]
[108.11019135 80.17546082]
[113.47431946 83.53377533]
[117.59010315 88.28550720]
[120.11437988 93.99661255]
[120.84786987 100.15489197]
[119.75068665 106.21590424]
[116.94369507 111.65110016]
[127.66278076 122.14402008]
[138.38185120 132.63693237]
[149.10093689 143.12985229]
[162.19331360 137.81700134]
[176.27908325 137.89382935]
[189.23283386 143.31575012]
[199.11253357 153.23413086]
[204.45065308 166.12895203]
[204.47215271 180.04170227]
[199.20678711 192.87283325]
[209.77561951 203.51705933]
[220.34446716 214.16130066]
[230.91329956 224.80552673]
[241.48214722 235.44975281]
[252.05097961 246.09397888]
[262.61981201 256.73822021]
[273.18865967 267.38244629]
[287.28015137 260.18811035]
[302.88610840 257.70468140]
[318.47631836 260.16351318]
[332.52575684 267.31192017]
[343.66394043 278.43908691]
[350.80859375 292.44683838]
[353.27066040 307.95779419]
[350.82089233 323.45098877]
[343.71105957 337.41101074]
[354.43014526 347.90393066]
[365.14923096 358.39685059]
[375.86831665 368.88977051]
[386.73544312 379.22927856]
[397.74847412 389.41323853]
[413.77096558 390.22552490]
[423.00830078 403.34234619]
[418.37438965 418.70159912]
[403.42401123 424.52096558]
[389.62576294 416.33633423]
[387.56451416 400.42626953]
[376.55148315 390.24227905]
[371.83581543 389.52969360]
[367.51547241 385.85183716]
[365.37539673 379.60885620]
[354.65631104 369.11593628]
[343.93722534 358.62301636]
[333.21813965 348.13009644]
[320.75762939 355.04510498]
[306.83795166 358.17218018]
[292.58529663 357.24908447]
[279.15536499 352.34170532]
[267.63970947 343.83935547]
[258.97692871 332.42388916]
[253.87629700 319.01510620]
[252.75955200 304.69650269]
[255.72615051 290.62786865]
[262.54443359 277.95126343]
[251.97560120 267.30703735]
[241.40675354 256.66281128]
[230.83792114 246.01858521]
[220.26907349 235.37435913]
[209.70024109 224.73013306]
[199.13139343 214.08590698]
[188.56254578 203.44168091]
[173.56022644 208.95428467]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 161]
[5 160]
[6 159]
[7 158]
[8 38]
[9 37]
[10 36]
[11 35]
[12 34]
[13 33]
[14 32]
[15 31]
[16 30]
[17 27]
[18 26]
[19 25]
[20 24]
[39 79]
[40 78]
[41 77]
[42 76]
[44 74]
[45 73]
[46 72]
[47 71]
[48 70]
[49 69]
[50 68]
[51 67]
[52 64]
[53 63]
[54 62]
[55 61]
[56 60]
[80 151]
[81 150]
[82 149]
[83 148]
[84 147]
[85 146]
[86 144]
[87 143]
[88 142]
[90 141]
[91 140]
[93 108]
[94 107]
[95 106]
[115 139]
[116 138]
[117 137]
[118 136]
[119 131]
[120 130]
[121 129]
[122 128]
[168 219]
[169 218]
[170 217]
[171 216]
[172 215]
[173 214]
[174 213]
[175 212]
[184 202]
[185 201]
[186 200]
[187 199]
[188 196]
[189 195]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
