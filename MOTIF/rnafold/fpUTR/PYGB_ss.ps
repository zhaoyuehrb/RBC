%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:35:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGUGCCGGGCGCCAGAGCAGCGGCGCCAGAGCAGCUGCACCAUCCCGGCGUUCGCGUGUGCCGCCGCUUUCCUCCUCCAUCUCUUUUCCUCCGCCUCCGCCGGCGCG\
) } def
/len { sequence length } bind def

/coor [
[144.55723572 346.51153564]
[130.55895996 338.67395020]
[128.10113525 322.82028198]
[139.06919861 311.11209106]
[139.92552185 296.13656616]
[140.78186035 281.16104126]
[141.63819885 266.18548584]
[142.49452209 251.20996094]
[143.35086060 236.23442078]
[144.20718384 221.25888062]
[143.99299622 206.26042175]
[142.70936584 191.31544495]
[141.42575073 176.37046814]
[138.14454651 173.04484558]
[136.26686096 168.31987000]
[136.37252808 162.82225037]
[127.55574799 150.68699646]
[118.73896790 138.55174255]
[109.92218781 126.41648102]
[101.10540771 114.28122711]
[88.41168213 108.41940308]
[86.75933838 94.53555298]
[77.94255829 82.40029907]
[69.12577820 70.26503754]
[60.30899811 58.12978745]
[51.49222183 45.99452972]
[42.67544174 33.85927582]
[33.85866165 21.72402191]
[15.15348816 19.58702087]
[4.01446438 4.80186272]
[7.01612806 -13.14517307]
[-2.47905850 -24.75729752]
[-11.97424507 -36.36942291]
[-21.46943283 -47.98154449]
[-29.44794464 -52.73588943]
[-31.06424522 -60.06354141]
[-40.22396469 -71.94207764]
[-49.38368225 -83.82061005]
[-58.54339981 -95.69914246]
[-74.04972076 -95.12144470]
[-86.91536713 -103.79639435]
[-92.19323730 -118.38829803]
[-87.85388184 -133.28627014]
[-75.56587982 -142.76173401]
[-60.05420685 -143.17118835]
[-47.28342056 -134.35717773]
[-42.16415405 -119.70888519]
[-46.66486740 -104.85885620]
[-37.50514984 -92.98032379]
[-28.34543037 -81.10179138]
[-19.18571091 -69.22325897]
[-9.85730839 -57.47673035]
[-0.36212119 -45.86460876]
[9.13306522 -34.25248337]
[18.62825203 -22.64035988]
[30.13263893 -23.98595238]
[40.94294357 -19.50125504]
[48.26605606 -10.21739674]
[50.14796448 1.57872653]
[45.99391937 12.90724277]
[54.81069565 25.04249763]
[63.62747574 37.17775345]
[72.44425201 49.31300735]
[81.26103210 61.44826126]
[90.07781219 73.58351898]
[98.89459229 85.71877289]
[111.58831787 91.58059692]
[113.24066162 105.46444702]
[122.05744171 117.59970093]
[130.87422180 129.73495483]
[139.69099426 141.87020874]
[148.50778198 154.00546265]
[148.17620850 139.00914001]
[151.81747437 124.45780182]
[159.17292786 111.38504028]
[169.72013855 100.71937561]
[182.70996094 93.21838379]
[197.21971130 89.41484833]
[212.21881104 89.57892609]
[226.64189148 93.69895935]
[239.46450806 101.48231506]
[249.77587891 112.37615204]
[256.84359741 125.60668945]
[260.16567993 140.23419189]
[259.50613403 155.21968079]
[254.91183472 169.49877930]
[246.70907593 182.05723572]
[235.48051453 192.00305176]
[222.02368164 198.62979126]
[207.29440308 201.46678162]
[192.33888245 200.31248474]
[178.21939087 195.24891663]
[165.93879700 186.63572693]
[156.37072754 175.08683777]
[157.65434265 190.03181458]
[158.93797302 204.97679138]
[170.98020935 196.03337097]
[185.55262756 199.58924866]
[192.12202454 213.07417297]
[185.93988037 226.74096680]
[171.47479248 230.71099854]
[159.18272400 222.11521912]
[158.32640076 237.09075928]
[157.47006226 252.06628418]
[156.61372375 267.04183960]
[155.75740051 282.01736450]
[154.90106201 296.99288940]
[154.04473877 311.96844482]
[163.60667419 324.85055542]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 108]
[5 107]
[6 106]
[7 105]
[8 104]
[9 103]
[10 102]
[11 96]
[12 95]
[13 94]
[16 72]
[17 71]
[18 70]
[19 69]
[20 68]
[22 66]
[23 65]
[24 64]
[25 63]
[26 62]
[27 61]
[28 60]
[31 55]
[32 54]
[33 53]
[34 52]
[36 51]
[37 50]
[38 49]
[39 48]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
