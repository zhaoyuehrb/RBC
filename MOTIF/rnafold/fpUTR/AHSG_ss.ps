%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:32:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUUUGCUUUUCCAGGGCUGAUGUUUGCAGGGUGUUUUUUUUUUUCUUUUGAACCAAAGCAGAAAUCAUCCUGUAUCCUUAUGCAAUUCUUCCGGCAGGCUCCAACAGAUAAAUAAAGCCCACCACCCUCCAUGGGUCUACCUUUCCCAGCAGAGCACCUGGGUUGGUCCCGAAGCCUCCAACCACCUGCACGCCUGCCAGGGCCUCUCUGGGGCAGCC\
) } def
/len { sequence length } bind def

/coor [
[117.15952301 202.97875977]
[121.79277039 217.41166687]
[121.20716095 232.55871582]
[115.47339630 246.59080505]
[105.28385925 257.81350708]
[91.86898804 264.87164307]
[76.84870148 266.91287231]
[62.03675842 263.69073486]
[49.22177887 255.59429932]
[39.95123672 243.60127258]
[35.34459305 229.15985107]
[35.95811844 214.01391602]
[41.71773529 199.99241638]
[51.92793274 188.78849792]
[65.35578918 181.75511169]
[80.37981415 179.74156189]
[83.56829071 165.08435059]
[86.75677490 150.42715454]
[89.94525146 135.76994324]
[93.13372803 121.11273956]
[88.06241608 115.58718109]
[80.68626404 128.64828491]
[65.98509979 125.66905975]
[64.27578735 110.76676941]
[77.91979218 104.53606415]
[72.84848785 99.01050568]
[57.97219467 100.93299866]
[43.09590149 102.85549164]
[28.21961212 104.77798462]
[13.34332180 106.70047760]
[-1.53296864 108.62297058]
[-16.40925980 110.54546356]
[-31.28554916 112.46795654]
[-46.16183853 114.39044952]
[-61.02402496 116.41911316]
[-75.87134552 118.55383301]
[-90.71866608 120.68855286]
[-105.56598663 122.82328033]
[-120.41331482 124.95800018]
[-135.24501038 127.19867706]
[-150.06033325 129.54519653]
[-164.87565613 131.89170837]
[-179.69099426 134.23823547]
[-194.47129822 136.79606628]
[-209.21357727 139.56468201]
[-223.95584106 142.33331299]
[-236.04132080 153.41815186]
[-251.60041809 148.23681641]
[-254.62730408 132.11944580]
[-242.00814819 121.64617920]
[-226.72447205 127.59104156]
[-211.98219299 124.82241058]
[-197.23992920 122.05378723]
[-193.85569763 118.69247437]
[-188.32615662 117.41725922]
[-182.03750610 119.42290497]
[-167.22218323 117.07638550]
[-152.40686035 114.72987366]
[-137.59153748 112.38335419]
[-131.48088074 108.23513031]
[-122.54803467 110.11067963]
[-107.70071411 107.97595978]
[-92.85339355 105.84123230]
[-78.00607300 103.70651245]
[-63.15874863 101.57179260]
[-56.98949051 97.51124573]
[-48.08433151 99.51416016]
[-33.20804214 97.59166718]
[-18.33175278 95.66917419]
[-3.45546150 93.74668121]
[11.42082882 91.82418823]
[26.29711914 89.90169525]
[41.17340851 87.97920227]
[56.04970169 86.05670929]
[70.92599487 84.13421631]
[56.94912720 78.68929291]
[42.97225952 73.24436188]
[28.99539566 67.79943848]
[15.01852989 62.35450745]
[0.12558118 60.56563187]
[-12.88664341 53.10359192]
[-21.95227242 41.15309525]
[-25.63200951 26.61144829]
[-23.34164619 11.78733826]
[-15.44480991 -0.96570009]
[-3.19523311 -9.62294388]
[11.46229362 -12.80993462]
[26.20068359 -10.02069378]
[38.68001175 -1.69805276]
[46.91976929 10.83854866]
[54.48412704 23.79156113]
[62.04848099 36.74457550]
[69.61283875 49.69758606]
[77.17719269 62.65060043]
[76.74884796 47.65671539]
[65.54081726 36.83923721]
[65.32001495 21.62720680]
[75.70189667 11.00872898]
[75.27355957 -3.98515439]
[74.84522247 -18.97903633]
[74.41687775 -33.97291946]
[60.10345459 -39.02172089]
[48.58296967 -48.90316010]
[41.41347122 -62.28085327]
[39.56457520 -77.34558105]
[43.28633118 -92.05995941]
[52.07540131 -104.43399048]
[64.74313354 -112.79418945]
[79.57633209 -116.00991058]
[94.56890869 -113.64624786]
[107.69326019 -106.02286530]
[117.17441559 -94.17077637]
[121.73012543 -79.69286346]
[120.74427795 -64.54714966]
[114.35018921 -50.78197861]
[103.41261292 -40.25896454]
[89.41075897 -34.40126038]
[89.83910370 -19.40737724]
[90.26744080 -4.41349506]
[90.69578552 10.58038807]
[101.66693115 20.58885765]
[102.31492615 35.78868484]
[91.74272919 47.22837448]
[92.17107391 62.22225952]
[106.56346893 66.44824982]
[115.03011322 54.06616974]
[123.49676514 41.68408966]
[131.96340942 29.30201149]
[130.42735291 13.33266449]
[142.05470276 2.27897739]
[157.92597961 4.62039328]
[165.86608887 18.56077957]
[159.78404236 33.40626144]
[144.34548950 37.76866150]
[135.87884521 50.15073776]
[127.41219330 62.53281784]
[118.94554901 74.91489410]
[121.00710297 82.12599945]
[129.71197510 69.91021729]
[144.69003296 69.09936523]
[154.66279602 80.30400848]
[152.12072754 95.08703613]
[138.97802734 102.31679535]
[125.13022614 96.54819489]
[127.19178772 103.75930023]
[140.92385864 109.79505157]
[154.65591431 115.83080292]
[168.38798523 121.86656189]
[182.12005615 127.90231323]
[195.85212708 133.93806458]
[204.96084595 134.52516174]
[209.73622131 140.15930176]
[223.38069153 146.39051819]
[237.02517700 152.62174988]
[250.66966248 158.85298157]
[265.32247925 153.56781006]
[279.07113647 160.08152771]
[284.01943970 174.08331299]
[297.66390991 180.31452942]
[311.30841064 186.54576111]
[324.95288086 192.77699280]
[360.16027832 164.22541809]
[374.77047729 167.62286377]
[389.38064575 171.02032471]
[403.99081421 174.41777039]
[418.60101318 177.81521606]
[433.21118164 181.21267700]
[443.16033936 169.58198547]
[457.37921143 163.91790771]
[472.60043335 165.52198792]
[485.32626343 174.02563477]
[492.63241577 187.47476196]
[492.83993530 202.77885437]
[485.90121460 216.42115784]
[473.41064453 225.26676941]
[458.23852539 227.28302002]
[443.87127686 222.00660706]
[433.61038208 210.64999390]
[429.81372070 195.82284546]
[415.20355225 192.42539978]
[400.59338379 189.02795410]
[385.98318481 185.63049316]
[371.37301636 182.23304749]
[356.76284790 178.83558655]
[353.02828979 185.33969116]
[366.03637695 192.80897522]
[358.56689453 205.81690979]
[345.55923462 198.34788513]
[341.82470703 204.85197449]
[352.12411499 215.75714111]
[362.42349243 226.66229248]
[378.28256226 230.83631897]
[382.33563232 246.72671509]
[370.41326904 257.98681641]
[354.78018188 253.03317261]
[351.51834106 236.96170044]
[341.21893311 226.05653381]
[330.91955566 215.15138245]
[318.72164917 206.42146301]
[305.07717896 200.19024658]
[291.43270874 193.95901489]
[277.78820801 187.72778320]
[263.96591187 193.15733337]
[250.03971863 187.03236389]
[244.43843079 172.49745178]
[230.79394531 166.26623535]
[217.14947510 160.03500366]
[203.50498962 153.80377197]
[189.81637573 147.67013550]
[176.08430481 141.63438416]
[162.35223389 135.59863281]
[148.62016296 129.56286621]
[134.88809204 123.52711487]
[121.15602875 117.49136353]
[107.79093170 124.30122375]
[104.60245514 138.95841980]
[101.41397858 153.61563110]
[98.22549438 168.27282715]
[95.03701782 182.93003845]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 219]
[17 218]
[18 217]
[19 216]
[20 215]
[26 75]
[27 74]
[28 73]
[29 72]
[30 71]
[31 70]
[32 69]
[33 68]
[34 67]
[35 65]
[36 64]
[37 63]
[38 62]
[39 61]
[40 59]
[41 58]
[42 57]
[43 56]
[44 53]
[45 52]
[46 51]
[94 124]
[95 123]
[98 120]
[99 119]
[100 118]
[101 117]
[125 137]
[126 136]
[127 135]
[128 134]
[145 214]
[146 213]
[147 212]
[148 211]
[149 210]
[150 209]
[152 208]
[153 207]
[154 206]
[155 205]
[158 202]
[159 201]
[160 200]
[161 199]
[162 184]
[163 183]
[164 182]
[165 181]
[166 180]
[167 179]
[189 198]
[190 197]
[191 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
