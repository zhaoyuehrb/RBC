%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:32:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCAGGAAGUAGAAGUGAUGUGAGUGGUGGCUGGUGCAAGGAGCCACAGUGGGCUGCCUGGGGGGCUGAUGCCACCAUUCCAGGAGCCUCGGUGAAGAGAGGAUAUCCAUCUGUGUAGCCGCUUCUCUAUACGGGAUUCCAGAGCCCAAGUGCCCCCUGUCUCUGCAGCUCC\
) } def
/len { sequence length } bind def

/coor [
[200.59396362 465.87133789]
[198.18098450 451.06671143]
[195.76800537 436.26205444]
[193.35501099 421.45739746]
[190.94203186 406.65277100]
[188.52905273 391.84811401]
[186.11605835 377.04348755]
[183.70307922 362.23883057]
[171.50155640 353.77371216]
[168.84353638 338.79406738]
[177.80526733 326.05337524]
[175.39228821 311.24874878]
[172.97930908 296.44409180]
[156.87342834 289.26486206]
[148.20283508 273.73049927]
[150.58830261 255.94259644]
[163.26502991 243.01765442]
[160.32217407 228.30915833]
[147.82464600 220.28749084]
[144.63063049 205.41291809]
[153.12924194 192.35873413]
[150.18638611 177.65025330]
[145.77607727 171.68830872]
[147.32521057 162.65144348]
[144.64685059 147.89250183]
[141.96850586 133.13356018]
[139.29014587 118.37461090]
[99.96469879 136.00819397]
[74.03131104 112.08264160]
[59.24891663 114.62841797]
[44.46652985 117.17418671]
[29.68413925 119.71995544]
[14.90174866 122.26573181]
[0.11935879 124.81150055]
[-5.80282784 139.05690002]
[-18.49952507 147.82031250]
[-33.91926193 148.30537415]
[-47.14165497 140.35729980]
[-53.94748688 126.51229858]
[-52.16504669 111.18824768]
[-42.36309814 99.27500916]
[-27.66941071 94.57404327]
[-12.77268410 98.58541107]
[-2.42641258 110.02911377]
[12.35597706 107.48333740]
[27.13836670 104.93756866]
[41.92075729 102.39179993]
[56.70314789 99.84602356]
[71.48553467 97.30025482]
[72.28775024 83.35839081]
[80.15835571 69.95169830]
[94.57141876 60.68165970]
[113.19866943 58.68248367]
[105.27526855 45.94593048]
[97.35186768 33.20938110]
[89.42846680 20.47282791]
[81.50506592 7.73627710]
[74.29003143 2.07870197]
[73.55612946 -5.30079079]
[65.86264038 -18.17752266]
[58.16915131 -31.05425453]
[50.47566223 -43.93098831]
[42.78217316 -56.80772018]
[34.74477005 -69.47264099]
[26.36928368 -81.91655731]
[17.88244057 -94.28480530]
[9.28492165 -106.57637787]
[0.68740320 -118.86794281]
[-14.39264011 -125.31188202]
[-16.08314133 -141.62365723]
[-2.64505744 -151.02313232]
[12.09766293 -143.84091187]
[12.97897243 -127.46546173]
[21.57649040 -115.17388916]
[30.17400932 -102.88232422]
[36.60599136 -99.19110107]
[38.81320572 -90.29204559]
[47.18869400 -77.84812164]
[50.59482574 -76.82128906]
[53.66426086 -74.07426453]
[55.58510590 -69.78752136]
[55.65890503 -64.50120544]
[63.35239410 -51.62447739]
[71.04588318 -38.74774551]
[78.73937225 -25.87101173]
[86.43286133 -12.99427986]
[94.24162292 -0.18712245]
[102.16502380 12.54942894]
[110.08841705 25.28598022]
[118.01181793 38.02252960]
[125.93521881 50.75908279]
[140.88630676 51.96952057]
[150.75538635 40.67345047]
[160.62446594 29.37737846]
[170.49354553 18.08130646]
[164.98864746 2.50684786]
[168.06184387 -13.62801170]
[178.78340149 -25.94688416]
[194.16218567 -31.15694427]
[209.97973633 -27.92879105]
[219.64443970 -39.40020370]
[229.30915833 -50.87161636]
[238.87051392 -62.42931366]
[248.32775879 -74.07236481]
[250.38166809 -90.34238434]
[265.60168457 -96.44835663]
[278.33078003 -86.10898590]
[275.47430420 -69.96052551]
[259.97079468 -64.61513519]
[250.51358032 -52.97208023]
[248.73104858 -45.77359772]
[240.78057861 -41.20690155]
[231.11585999 -29.73548889]
[221.45114136 -18.26407623]
[226.93721008 -5.73778152]
[226.48165894 7.99587345]
[220.11651611 20.24864197]
[209.03611755 28.59750748]
[195.37344360 31.36378288]
[181.78961182 27.95038795]
[171.92053223 39.24645996]
[162.05145264 50.54253006]
[152.18237305 61.83860397]
[155.19184875 68.70832825]
[170.10005188 70.36518097]
[161.21078491 82.44776917]
[164.22026062 89.31748962]
[179.21481323 89.72136688]
[194.20938110 90.12523651]
[206.79696655 80.17877197]
[222.38833618 83.95882416]
[229.02311707 98.56564331]
[221.61167908 112.79413605]
[205.83943176 115.72942352]
[193.80551147 105.11979675]
[178.81094360 104.71592712]
[163.81639099 104.31205750]
[154.04908752 115.69625854]
[156.72744751 130.45520020]
[159.40580750 145.21414185]
[162.08415222 159.97308350]
[164.89486694 174.70739746]
[167.83773804 189.41587830]
[180.70477295 198.19523621]
[183.47972107 213.15365601]
[175.03065491 225.36630249]
[177.97351074 240.07479858]
[189.95625305 243.76779175]
[199.16929626 252.16636658]
[203.89730835 263.62344360]
[203.29563904 275.93072510]
[197.54057312 286.74432373]
[187.78395081 294.03109741]
[190.19692993 308.83575439]
[192.60990906 323.64038086]
[205.15351868 332.87597656]
[207.38972473 347.92434692]
[198.50772095 359.82583618]
[200.92070007 374.63049316]
[203.33369446 389.43515015]
[205.74667358 404.23977661]
[208.15965271 419.04443359]
[210.57264709 433.84906006]
[212.98562622 448.65371704]
[215.39860535 463.45837402]
[229.79014587 468.82296753]
[239.55889893 480.67486572]
[242.07713318 495.82589722]
[236.66741943 510.20056152]
[224.78498840 519.93212891]
[209.62612915 522.40283203]
[195.26849365 516.94812012]
[185.57423401 505.03521729]
[183.15104675 489.86868286]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 165]
[2 164]
[3 163]
[4 162]
[5 161]
[6 160]
[7 159]
[8 158]
[11 155]
[12 154]
[13 153]
[17 147]
[18 146]
[21 143]
[22 142]
[24 141]
[25 140]
[26 139]
[27 138]
[29 49]
[30 48]
[31 47]
[32 46]
[33 45]
[34 44]
[53 91]
[54 90]
[55 89]
[56 88]
[57 87]
[59 86]
[60 85]
[61 84]
[62 83]
[63 82]
[64 78]
[65 77]
[66 75]
[67 74]
[68 73]
[92 123]
[93 122]
[94 121]
[95 120]
[100 114]
[101 113]
[102 112]
[103 110]
[104 109]
[127 137]
[128 136]
[129 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
