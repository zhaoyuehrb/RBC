%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:17:44 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (C3orf52)
} def

/sequence { (\
GAGGCGGGGAGGUCGCUCGACUCGCCGGCGCUGUGGCCUCCCGCGGAGCCGCUCAGACUUUCCCUGCCGGCAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 23 0.015458150 ubox
2 22 0.015463778 ubox
3 21 0.015235866 ubox
3 26 0.010722405 ubox
3 68 0.997444434 ubox
4 25 0.010746298 ubox
4 44 0.043921689 ubox
4 67 0.998671334 ubox
4 71 0.003425313 ubox
5 15 0.003469887 ubox
5 19 0.014660415 ubox
5 24 0.010746988 ubox
5 43 0.043926438 ubox
5 45 0.016804032 ubox
5 66 0.998612514 ubox
5 70 0.003411125 ubox
6 14 0.003465277 ubox
6 18 0.015160008 ubox
6 23 0.010756945 ubox
6 42 0.038396286 ubox
6 44 0.016971051 ubox
6 64 0.294971032 ubox
6 65 0.953363545 ubox
7 13 0.003295997 ubox
7 17 0.015110985 ubox
7 22 0.010667183 ubox
7 41 0.031926009 ubox
7 42 0.027713710 ubox
7 63 0.299248991 ubox
7 64 0.952790123 ubox
8 16 0.015100638 ubox
8 21 0.010606759 ubox
8 40 0.023751967 ubox
8 41 0.034993376 ubox
8 62 0.303311088 ubox
8 63 0.951506820 ubox
9 18 0.009369437 ubox
9 23 0.006787283 ubox
9 39 0.010282282 ubox
9 40 0.040991387 ubox
9 61 0.307060283 ubox
9 62 0.950108900 ubox
10 17 0.009911991 ubox
10 22 0.007607303 ubox
10 39 0.046211408 ubox
10 59 0.010718596 ubox
10 60 0.603508613 ubox
10 61 0.787545171 ubox
11 16 0.010569569 ubox
11 18 0.008778766 ubox
11 21 0.006936039 ubox
11 22 0.182640370 ubox
11 23 0.058287921 ubox
11 26 0.008515537 ubox
11 32 0.016140031 ubox
11 38 0.047389471 ubox
11 58 0.016469468 ubox
11 59 0.800390679 ubox
11 60 0.546848569 ubox
11 61 0.005229469 ubox
12 17 0.006438194 ubox
12 21 0.230417408 ubox
12 22 0.007332175 ubox
12 25 0.008989004 ubox
12 29 0.007707343 ubox
12 31 0.020295418 ubox
12 37 0.047390470 ubox
12 58 0.961049081 ubox
12 59 0.107933504 ubox
12 60 0.010960574 ubox
13 20 0.231272710 ubox
13 24 0.005311615 ubox
13 28 0.007718591 ubox
13 30 0.004289184 ubox
13 36 0.047373672 ubox
13 57 0.962541002 ubox
14 19 0.231224663 ubox
14 24 0.008742293 ubox
14 27 0.007749055 ubox
14 30 0.037056989 ubox
14 35 0.047282659 ubox
14 56 0.953478451 ubox
15 23 0.046199816 ubox
15 25 0.535975921 ubox
15 26 0.014135702 ubox
15 29 0.126532157 ubox
15 31 0.137011575 ubox
15 34 0.046953922 ubox
15 49 0.016243441 ubox
15 52 0.083828468 ubox
16 24 0.536626314 ubox
16 28 0.125926658 ubox
16 30 0.137142071 ubox
16 33 0.046943418 ubox
16 48 0.016302064 ubox
16 51 0.078024352 ubox
16 56 0.156121374 ubox
17 27 0.035652837 ubox
17 28 0.136749659 ubox
17 47 0.016268780 ubox
17 55 0.210808609 ubox
17 57 0.047210139 ubox
18 24 0.090234513 ubox
18 27 0.184440345 ubox
18 30 0.043653009 ubox
18 46 0.015828389 ubox
18 51 0.065652379 ubox
18 56 0.052547836 ubox
19 23 0.102331005 ubox
19 26 0.187199740 ubox
19 29 0.043850456 ubox
19 50 0.063502823 ubox
19 54 0.428926939 ubox
19 60 0.005860580 ubox
20 53 0.429363632 ubox
20 59 0.006649972 ubox
21 28 0.042371683 ubox
21 46 0.003494951 ubox
21 48 0.063110761 ubox
21 56 0.042924727 ubox
22 27 0.038460546 ubox
22 46 0.016330597 ubox
22 47 0.061495773 ubox
22 55 0.065001847 ubox
22 57 0.051176122 ubox
23 27 0.006134646 ubox
23 30 0.004389810 ubox
23 43 0.005793242 ubox
23 45 0.037264778 ubox
23 46 0.053525268 ubox
23 51 0.012614708 ubox
23 56 0.063456041 ubox
24 29 0.004446111 ubox
24 31 0.015998962 ubox
24 37 0.005716382 ubox
24 42 0.005849569 ubox
24 44 0.048013513 ubox
24 50 0.005542266 ubox
24 52 0.671648364 ubox
24 71 0.015755146 ubox
25 30 0.015978743 ubox
25 36 0.005727424 ubox
25 43 0.046593896 ubox
25 51 0.475496350 ubox
25 70 0.015772111 ubox
26 35 0.005727925 ubox
26 43 0.044995758 ubox
26 51 0.836317101 ubox
26 69 0.015772894 ubox
27 34 0.005261905 ubox
27 38 0.039765130 ubox
27 39 0.005381724 ubox
27 40 0.003538008 ubox
27 41 0.023959355 ubox
27 42 0.045736008 ubox
27 50 0.978148005 ubox
27 53 0.011805966 ubox
27 54 0.004181766 ubox
27 68 0.015778348 ubox
28 37 0.040167828 ubox
28 38 0.005553151 ubox
28 39 0.003241612 ubox
28 40 0.023840729 ubox
28 41 0.045477187 ubox
28 49 0.978431317 ubox
28 52 0.013605661 ubox
28 67 0.015778063 ubox
29 36 0.040421180 ubox
29 48 0.976483121 ubox
29 51 0.013619473 ubox
29 66 0.015745169 ubox
30 37 0.051131738 ubox
30 49 0.004955423 ubox
30 50 0.012929116 ubox
30 52 0.007283813 ubox
30 65 0.014118853 ubox
31 36 0.050997384 ubox
31 46 0.976600921 ubox
31 48 0.006313726 ubox
31 51 0.007220683 ubox
31 56 0.019935004 ubox
32 45 0.977534947 ubox
32 47 0.005623419 ubox
32 55 0.021595621 ubox
33 44 0.978526163 ubox
33 52 0.187885910 ubox
33 54 0.015134948 ubox
34 43 0.978168510 ubox
34 45 0.003723232 ubox
34 51 0.188439588 ubox
35 41 0.030337289 ubox
35 42 0.977922393 ubox
35 44 0.003625524 ubox
35 50 0.189108909 ubox
35 53 0.005356831 ubox
36 40 0.041991530 ubox
36 41 0.966012718 ubox
36 49 0.189107068 ubox
36 52 0.005938651 ubox
37 48 0.134936542 ubox
37 51 0.005916243 ubox
38 46 0.017296741 ubox
38 48 0.132628882 ubox
39 45 0.015955841 ubox
39 46 0.013765164 ubox
39 47 0.187436262 ubox
40 45 0.015193456 ubox
40 46 0.187801278 ubox
41 45 0.186437427 ubox
43 52 0.004094438 ubox
44 51 0.004099945 ubox
45 50 0.004049778 ubox
46 54 0.003707735 ubox
47 53 0.003855116 ubox
48 52 0.003788295 ubox
48 71 0.047289489 ubox
49 70 0.047338974 ubox
50 69 0.047336733 ubox
51 67 0.008919812 ubox
51 68 0.046216303 ubox
51 71 0.010650666 ubox
52 66 0.012427308 ubox
52 70 0.010661340 ubox
53 69 0.009873415 ubox
54 66 0.046638992 ubox
55 65 0.047029707 ubox
56 60 0.004552687 ubox
56 62 0.009822552 ubox
56 64 0.046996989 ubox
57 61 0.008722353 ubox
3 68 0.9500000 lbox
4 67 0.9500000 lbox
5 66 0.9500000 lbox
6 65 0.9500000 lbox
7 64 0.9500000 lbox
8 63 0.9500000 lbox
9 62 0.9500000 lbox
10 61 0.9500000 lbox
11 60 0.9500000 lbox
12 58 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 25 0.9500000 lbox
16 24 0.9500000 lbox
26 51 0.9500000 lbox
27 50 0.9500000 lbox
28 49 0.9500000 lbox
29 48 0.9500000 lbox
31 46 0.9500000 lbox
32 45 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
showpage
end
%%EOF
