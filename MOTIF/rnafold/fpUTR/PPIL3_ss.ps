%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:23:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGGAAGGAGGUGAGGCGGUAAGGGGCGUUCUCUCUCUUGGGUCCCGCGCCCAACUUCCGCUGGCCCAAAGAAACUAUAAUUUUGAACCAACAGACCUCUGCUGGCAUCUGCGAUUGCAUUUUUCCUGUUUUAACAACGGCUGUGCUAGACGAAGUGGUGAAGCCCAAAGACUUAUUUUUGAGCUCGCUGUAAGACUGAGAAAUCACGUAGUCCUUCCUGAAACCACUAAGAGGAAAA\
) } def
/len { sequence length } bind def

/coor [
[127.83274078 285.22161865]
[125.31328583 270.43472290]
[109.76322937 260.74658203]
[106.19240570 242.45063782]
[117.33430481 227.10839844]
[114.43183136 212.39187622]
[111.52935028 197.67536926]
[108.62687683 182.95886230]
[105.72439575 168.24235535]
[102.82191467 153.52584839]
[99.91944122 138.80934143]
[97.01696014 124.09283447]
[83.41321564 117.77317047]
[70.29496765 125.04721069]
[57.17672348 132.32124329]
[52.88674545 144.47062683]
[41.82787704 150.26301575]
[30.17085266 147.08113098]
[16.95928383 154.18424988]
[3.74771595 161.28738403]
[-9.46385288 168.39051819]
[-22.67542076 175.49365234]
[-28.73616791 182.29925537]
[-36.10491943 182.60197449]
[-49.40758514 189.53298950]
[-62.71024704 196.46401978]
[-75.92181396 203.56715393]
[-89.04006195 210.84118652]
[-102.15830994 218.11521912]
[-115.27655792 225.38926697]
[-128.39480591 232.66329956]
[-141.51304626 239.93733215]
[-143.34870911 256.76177979]
[-154.74339294 269.04962158]
[-171.05474854 272.08630371]
[-185.80917358 264.86849976]
[-198.83189392 272.31222534]
[-211.85459900 279.75592041]
[-219.64364624 294.18725586]
[-236.04156494 294.38687134]
[-244.17961121 280.14944458]
[-235.68603516 266.12121582]
[-219.29832458 266.73321533]
[-206.27560425 259.28948975]
[-193.25288391 251.84577942]
[-193.04020691 238.50825500]
[-186.21469116 226.92185974]
[-174.46450806 220.16267395]
[-160.80097961 220.08616638]
[-148.78707886 226.81909180]
[-135.66883850 219.54505920]
[-122.55059052 212.27101135]
[-109.43234253 204.99697876]
[-96.31410217 197.72294617]
[-83.19585419 190.44891357]
[-81.04621124 186.20532227]
[-76.21847534 183.25688171]
[-69.64127350 183.16136169]
[-56.33861160 176.23033142]
[-43.03594589 169.29930115]
[-29.77855110 162.28207397]
[-16.56698227 155.17895508]
[-3.35541415 148.07582092]
[9.85615444 140.97268677]
[23.06772232 133.86955261]
[31.49367714 118.46564484]
[49.90268707 119.20300293]
[63.02093124 111.92896271]
[76.13917542 104.65493011]
[75.94445801 89.65618896]
[62.64179230 82.72516632]
[49.33913040 75.79413605]
[36.03646469 68.86311340]
[22.73380089 61.93208313]
[9.39138412 69.67698669]
[-6.01912832 68.95612335]
[-18.58029938 59.99953461]
[-24.28390312 45.66522217]
[-21.30994034 30.52722168]
[-10.60739422 19.41600800]
[4.40859461 15.87713432]
[18.94647789 21.03983879]
[28.36726761 33.25672150]
[29.66482735 48.62942123]
[42.96749115 55.56044769]
[56.27015686 62.49147415]
[69.57282257 69.42250061]
[82.87548065 76.35353088]
[87.96827698 70.84776306]
[98.15386200 59.83622742]
[103.24665833 54.33046341]
[95.30153656 41.60744858]
[87.35641479 28.88443375]
[73.48403168 21.27736664]
[73.30550385 6.38383150]
[65.36038208 -6.33918285]
[57.41526794 -19.06219673]
[42.69161987 -26.28343582]
[41.85368729 -42.66116333]
[55.76345825 -51.34737396]
[70.11175537 -43.40644073]
[70.13828278 -27.00731468]
[78.08339691 -14.28430176]
[86.02851868 -1.56128764]
[99.33261871 5.13574505]
[100.07942963 20.93931580]
[108.02455139 33.66233063]
[115.96966553 46.38534164]
[121.39807892 60.28471756]
[122.05703735 73.75415039]
[118.42445374 85.48693085]
[111.29816437 94.36712646]
[124.60083008 87.43610382]
[137.90348816 80.50507355]
[151.20616150 73.57405090]
[164.50881958 66.64302063]
[168.35575867 61.30731201]
[173.53842163 59.04007721]
[178.24801636 59.70981598]
[191.72613525 53.12647247]
[198.04727173 46.56200790]
[205.42221069 46.54642487]
[218.98466492 40.13859940]
[232.54710388 33.73077393]
[246.10954285 27.32294846]
[259.67196655 20.91512489]
[273.23440552 14.50729942]
[286.79684448 8.09947491]
[291.86584473 -3.74606133]
[303.27713013 -8.80893803]
[314.70324707 -4.87763166]
[328.34771729 -11.10885715]
[341.99218750 -17.34008217]
[355.63665771 -23.57130623]
[369.28115845 -29.80253220]
[382.92562866 -36.03375626]
[389.41503906 -42.43190765]
[396.78793335 -42.25602722]
[410.51214600 -48.30960464]
[420.01602173 -60.95819092]
[434.78338623 -59.01532745]
[448.50759888 -65.06890106]
[462.19223022 -71.21143341]
[475.83670044 -77.44265747]
[489.48120117 -83.67388153]
[480.95190430 -94.42582703]
[479.66888428 -111.03281403]
[488.40722656 -129.11557007]
[500.58810425 -137.86921692]
[512.76898193 -146.62286377]
[515.45190430 -161.96690369]
[527.92974854 -170.67082214]
[542.54144287 -168.01847839]
[554.72229004 -176.77212524]
[557.02801514 -192.40731812]
[569.76379395 -201.76550293]
[585.37371826 -199.29463196]
[594.59674072 -186.46063232]
[591.96093750 -170.87768555]
[579.03015137 -161.79087830]
[563.47595215 -164.59124756]
[551.29510498 -155.83760071]
[549.14959717 -141.14295959]
[536.92120361 -132.09199524]
[521.52264404 -134.44198608]
[509.34176636 -125.68833923]
[497.16088867 -116.93469238]
[499.91821289 -109.95993805]
[508.19012451 -89.03566742]
[523.06390381 -90.97747040]
[537.93768311 -92.91927338]
[552.81146240 -94.86107635]
[567.68524170 -96.80287933]
[582.55902100 -98.74468231]
[595.24414062 -109.13796997]
[610.48992920 -103.09662628]
[612.61285400 -86.83547211]
[599.42901611 -77.08258820]
[584.50085449 -83.87090302]
[569.62707520 -81.92910004]
[554.75329590 -79.98729706]
[539.87951660 -78.04549408]
[525.00573730 -76.10369110]
[510.13192749 -74.16188812]
[495.71240234 -70.02940369]
[482.06793213 -63.79817963]
[468.42346191 -57.56695557]
[463.65475464 -51.94116211]
[454.56115723 -51.34468460]
[440.83694458 -45.29110718]
[432.31469727 -33.07551575]
[416.56570435 -34.58538437]
[402.84149170 -28.53180695]
[389.15686035 -22.38927841]
[375.51239014 -16.15805244]
[361.86788940 -9.92682743]
[348.22341919 -3.69560194]
[334.57894897 2.53562331]
[320.93444824 8.76684856]
[311.52709961 23.59178925]
[293.20468140 21.66191483]
[279.64224243 28.06974030]
[266.07980347 34.47756577]
[252.51736450 40.88538742]
[238.95492554 47.29321289]
[225.39248657 53.70103836]
[211.83004761 60.10886383]
[198.30947876 66.60458374]
[184.83135986 73.18792725]
[171.43984985 79.94568634]
[158.13717651 86.87670898]
[144.83451843 93.80773926]
[131.53186035 100.73876190]
[118.22919464 107.66979218]
[111.73346710 121.19035339]
[114.63594818 135.90686035]
[117.53842926 150.62336731]
[120.44090271 165.33987427]
[123.34338379 180.05638123]
[126.24585724 194.77290344]
[129.14833069 209.48941040]
[132.05081177 224.20591736]
[143.00288391 228.76644897]
[150.32626343 237.94728088]
[152.29769897 249.40307617]
[148.54269409 260.27746582]
[140.10018921 267.91525269]
[142.61962891 282.70214844]
[157.44874573 286.04370117]
[169.86743164 294.80978394]
[177.98193359 307.66372681]
[180.55484009 322.64532471]
[177.19381714 337.47003174]
[168.41137695 349.87716675]
[155.54678345 357.97476196]
[140.56181335 360.52795410]
[125.74153900 357.14743042]
[113.34595490 348.34869385]
[105.26530457 335.47344971]
[102.73181915 320.48513794]
[106.13184357 305.66931152]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 228]
[2 227]
[5 222]
[6 221]
[7 220]
[8 219]
[9 218]
[10 217]
[11 216]
[12 215]
[13 69]
[14 68]
[15 67]
[18 65]
[19 64]
[20 63]
[21 62]
[22 61]
[24 60]
[25 59]
[26 58]
[27 55]
[28 54]
[29 53]
[30 52]
[31 51]
[32 50]
[36 45]
[37 44]
[38 43]
[70 88]
[71 87]
[72 86]
[73 85]
[74 84]
[91 108]
[92 107]
[93 106]
[95 104]
[96 103]
[97 102]
[112 214]
[113 213]
[114 212]
[115 211]
[116 210]
[119 209]
[120 208]
[122 207]
[123 206]
[124 205]
[125 204]
[126 203]
[127 202]
[128 201]
[131 199]
[132 198]
[133 197]
[134 196]
[135 195]
[136 194]
[138 193]
[139 192]
[141 190]
[142 189]
[143 187]
[144 186]
[145 185]
[148 167]
[149 166]
[150 165]
[153 162]
[154 161]
[169 184]
[170 183]
[171 182]
[172 181]
[173 180]
[174 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
