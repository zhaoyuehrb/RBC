%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:04:33 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CACNG5)
} def

/sequence { (\
AGAGCGCAGUCCGUGCUGGUGGGAGCGUGGCGACUAGUUGCACAGCAACGGUCCAGGAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 17 0.016345591 ubox
1 35 0.007235135 ubox
2 11 0.023981135 ubox
2 16 0.016263538 ubox
2 34 0.007628581 ubox
2 53 0.139127975 ubox
3 10 0.025616054 ubox
3 17 0.634647722 ubox
3 35 0.027068174 ubox
3 52 0.139085134 ubox
4 10 0.031504947 ubox
4 14 0.024411991 ubox
4 16 0.652413325 ubox
4 20 0.068444574 ubox
4 26 0.016695305 ubox
4 28 0.452382664 ubox
4 31 0.191831894 ubox
4 34 0.027910385 ubox
4 38 0.003270454 ubox
4 41 0.009486702 ubox
4 52 0.006623267 ubox
5 9 0.032607565 ubox
5 13 0.025884773 ubox
5 15 0.652736294 ubox
5 18 0.011503367 ubox
5 19 0.071955793 ubox
5 21 0.067373679 ubox
5 25 0.016689463 ubox
5 27 0.481292236 ubox
5 29 0.183423775 ubox
5 30 0.157814608 ubox
5 32 0.038419028 ubox
5 37 0.003368857 ubox
5 40 0.009493223 ubox
5 50 0.138137641 ubox
5 51 0.007102890 ubox
6 12 0.025411381 ubox
6 14 0.652346034 ubox
6 16 0.039038666 ubox
6 20 0.065767441 ubox
6 26 0.483322122 ubox
6 28 0.213511114 ubox
6 31 0.067743006 ubox
6 38 0.006613470 ubox
6 39 0.007098800 ubox
6 46 0.003441633 ubox
6 49 0.135796481 ubox
6 52 0.006112390 ubox
7 13 0.652251483 ubox
7 15 0.039296405 ubox
7 18 0.096633038 ubox
7 19 0.047659669 ubox
7 21 0.004787073 ubox
7 25 0.482902565 ubox
7 27 0.217332925 ubox
7 29 0.074801494 ubox
7 30 0.057575977 ubox
7 37 0.009662142 ubox
7 45 0.003611910 ubox
7 51 0.005570413 ubox
8 14 0.038590829 ubox
8 17 0.107019386 ubox
8 20 0.004601885 ubox
8 28 0.072561262 ubox
8 35 0.031312708 ubox
9 16 0.107821415 ubox
9 20 0.005329770 ubox
9 26 0.087389252 ubox
9 28 0.008345476 ubox
9 31 0.400642204 ubox
9 34 0.032760489 ubox
9 46 0.130950825 ubox
9 49 0.004181519 ubox
9 52 0.031397158 ubox
10 15 0.100867119 ubox
10 22 0.019338018 ubox
10 23 0.423024290 ubox
10 24 0.308017615 ubox
10 25 0.052180907 ubox
10 27 0.004112860 ubox
10 30 0.180853430 ubox
10 33 0.031552732 ubox
10 45 0.128912889 ubox
10 48 0.004394207 ubox
10 57 0.003768804 ubox
10 58 0.042724218 ubox
11 19 0.048326765 ubox
11 21 0.013234610 ubox
11 22 0.433089126 ubox
11 23 0.317154212 ubox
11 29 0.176551134 ubox
11 30 0.433013992 ubox
11 32 0.020159937 ubox
11 51 0.141930133 ubox
11 57 0.045630592 ubox
12 18 0.048640807 ubox
12 21 0.433749334 ubox
12 22 0.316221230 ubox
12 27 0.162889654 ubox
12 29 0.439087627 ubox
12 32 0.006748666 ubox
12 50 0.143385612 ubox
12 56 0.045386647 ubox
13 17 0.030245527 ubox
13 20 0.340649931 ubox
13 26 0.162218677 ubox
13 28 0.418472539 ubox
13 31 0.013471068 ubox
13 43 0.135527207 ubox
13 49 0.143369094 ubox
14 19 0.204892010 ubox
14 21 0.036824705 ubox
14 25 0.154678777 ubox
14 27 0.425345977 ubox
14 30 0.012476927 ubox
14 32 0.003212877 ubox
14 42 0.135886747 ubox
14 47 0.101370061 ubox
14 48 0.101229558 ubox
14 55 0.004491854 ubox
15 20 0.027293547 ubox
15 26 0.450162990 ubox
15 31 0.032606108 ubox
15 41 0.135947162 ubox
15 46 0.143499967 ubox
15 52 0.007907823 ubox
16 22 0.025600674 ubox
16 23 0.157365495 ubox
16 25 0.450253746 ubox
16 30 0.032671929 ubox
16 40 0.135870612 ubox
16 45 0.143602389 ubox
16 51 0.008116823 ubox
16 56 0.020777368 ubox
16 60 0.009977960 ubox
17 21 0.023456279 ubox
17 22 0.155158762 ubox
17 24 0.447481695 ubox
17 27 0.005617644 ubox
17 29 0.032287309 ubox
17 36 0.004124607 ubox
17 44 0.142053672 ubox
17 50 0.008064831 ubox
17 55 0.029723292 ubox
17 56 0.003384785 ubox
17 59 0.028480317 ubox
18 26 0.018762025 ubox
18 28 0.023179997 ubox
18 31 0.031917756 ubox
18 35 0.004965924 ubox
18 39 0.011776774 ubox
18 43 0.123306077 ubox
18 49 0.007703171 ubox
18 53 0.003837244 ubox
18 54 0.047223342 ubox
19 26 0.080611661 ubox
19 28 0.010050821 ubox
19 31 0.038496755 ubox
19 34 0.005052941 ubox
19 38 0.014429343 ubox
19 41 0.093260386 ubox
19 43 0.073407444 ubox
19 53 0.046424527 ubox
20 25 0.079434427 ubox
20 27 0.027907553 ubox
20 29 0.029463919 ubox
20 30 0.037984930 ubox
20 33 0.004699321 ubox
20 36 0.146109623 ubox
20 40 0.088246032 ubox
20 42 0.101594503 ubox
20 47 0.004948482 ubox
20 50 0.016952982 ubox
20 51 0.016783903 ubox
20 55 0.124264663 ubox
21 26 0.040056952 ubox
21 28 0.026193725 ubox
21 31 0.011384796 ubox
21 35 0.163309869 ubox
21 39 0.051652412 ubox
21 41 0.103173897 ubox
21 46 0.005567689 ubox
21 49 0.021269362 ubox
21 54 0.118531582 ubox
22 34 0.164551732 ubox
22 35 0.009835639 ubox
22 38 0.047307249 ubox
22 39 0.007494642 ubox
22 53 0.094611575 ubox
22 54 0.627575978 ubox
23 34 0.010473652 ubox
23 38 0.007905499 ubox
23 39 0.090112827 ubox
23 52 0.058577269 ubox
23 53 0.632306521 ubox
24 35 0.046835881 ubox
24 38 0.084336206 ubox
24 39 0.048032928 ubox
24 52 0.634742196 ubox
25 31 0.176905712 ubox
25 34 0.048343497 ubox
25 38 0.057514586 ubox
25 41 0.005462564 ubox
25 46 0.057399084 ubox
25 52 0.005310736 ubox
26 30 0.175651211 ubox
26 32 0.046666102 ubox
26 37 0.070111793 ubox
26 40 0.005704994 ubox
26 45 0.057448455 ubox
26 50 0.637239349 ubox
26 51 0.007276969 ubox
27 31 0.044119494 ubox
27 34 0.085708418 ubox
27 39 0.004379138 ubox
27 41 0.025507027 ubox
27 43 0.030622437 ubox
27 46 0.018432710 ubox
27 49 0.635362198 ubox
28 33 0.085318255 ubox
28 36 0.054049375 ubox
28 40 0.026131426 ubox
28 42 0.031373517 ubox
28 44 0.153900482 ubox
28 45 0.014748737 ubox
28 47 0.096633544 ubox
28 48 0.569021331 ubox
28 55 0.102762800 ubox
29 35 0.058120545 ubox
29 39 0.039652803 ubox
29 41 0.024265270 ubox
29 43 0.224010864 ubox
29 46 0.133980656 ubox
29 53 0.008415831 ubox
29 54 0.160379080 ubox
30 34 0.057123801 ubox
30 38 0.050856200 ubox
30 41 0.270142581 ubox
30 46 0.571174336 ubox
30 52 0.008162072 ubox
30 53 0.133442109 ubox
31 37 0.051756778 ubox
31 40 0.271346380 ubox
31 45 0.573210473 ubox
31 51 0.010755677 ubox
32 39 0.258567053 ubox
32 53 0.723198146 ubox
33 38 0.225167195 ubox
33 52 0.735607533 ubox
34 45 0.024830483 ubox
34 51 0.737068189 ubox
34 56 0.003248452 ubox
35 44 0.033161814 ubox
35 50 0.653493679 ubox
37 43 0.041378442 ubox
37 46 0.008627766 ubox
37 49 0.742064978 ubox
38 42 0.037642290 ubox
38 45 0.008609915 ubox
38 48 0.743001672 ubox
39 44 0.008626891 ubox
39 47 0.744238940 ubox
40 46 0.744912376 ubox
41 45 0.739499051 ubox
52 58 0.017492031 ubox
53 57 0.018737146 ubox
3 17 0.9500000 lbox
4 16 0.9500000 lbox
5 15 0.9500000 lbox
6 14 0.9500000 lbox
7 13 0.9500000 lbox
22 54 0.9500000 lbox
23 53 0.9500000 lbox
24 52 0.9500000 lbox
26 50 0.9500000 lbox
27 49 0.9500000 lbox
28 48 0.9500000 lbox
30 46 0.9500000 lbox
31 45 0.9500000 lbox
showpage
end
%%EOF
