%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:18:24 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (C10orf99)
} def

/sequence { (\
AGGACUUCUGCAGCACAGCUCCCUUCCCAGGACGUGAAAAUCUGCCUUCUCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.008641996 ubox
1 9 0.167538863 ubox
1 20 0.005186216 ubox
1 24 0.081112450 ubox
1 25 0.012418477 ubox
1 43 0.008007366 ubox
1 47 0.069602083 ubox
1 48 0.056054698 ubox
1 50 0.197557809 ubox
2 6 0.008291272 ubox
2 8 0.177078578 ubox
2 9 0.118004928 ubox
2 19 0.006156970 ubox
2 20 0.011724593 ubox
2 21 0.008784155 ubox
2 22 0.242097307 ubox
2 23 0.090866508 ubox
2 24 0.015853183 ubox
2 26 0.019094235 ubox
2 27 0.270678456 ubox
2 28 0.056508630 ubox
2 42 0.008450781 ubox
2 43 0.010992982 ubox
2 46 0.080019717 ubox
2 47 0.079040536 ubox
2 48 0.006285016 ubox
2 49 0.226770511 ubox
2 50 0.338313021 ubox
2 51 0.160800667 ubox
2 54 0.332931957 ubox
3 7 0.114861301 ubox
3 8 0.127241694 ubox
3 19 0.012885721 ubox
3 20 0.007587395 ubox
3 21 0.246014582 ubox
3 22 0.088179754 ubox
3 23 0.016295397 ubox
3 25 0.019146890 ubox
3 26 0.271920108 ubox
3 27 0.053376069 ubox
3 41 0.007565799 ubox
3 42 0.011927884 ubox
3 45 0.072625341 ubox
3 46 0.081505330 ubox
3 47 0.006371675 ubox
3 48 0.225423036 ubox
3 49 0.377202974 ubox
3 50 0.099361307 ubox
3 51 0.338946979 ubox
3 53 0.334820176 ubox
4 20 0.245070297 ubox
4 24 0.020572910 ubox
4 25 0.266352401 ubox
4 35 0.019700799 ubox
4 41 0.011653389 ubox
4 47 0.217979120 ubox
4 48 0.370334048 ubox
4 50 0.332806882 ubox
5 13 0.010744283 ubox
5 18 0.040787214 ubox
5 34 0.020262210 ubox
6 12 0.010372336 ubox
6 17 0.038321932 ubox
6 18 0.022976068 ubox
6 32 0.042953684 ubox
6 38 0.012649872 ubox
6 39 0.005709016 ubox
6 40 0.003922936 ubox
7 17 0.023027956 ubox
7 31 0.046225597 ubox
7 32 0.007976745 ubox
7 37 0.013809400 ubox
7 38 0.005439055 ubox
7 39 0.003752314 ubox
8 18 0.255562690 ubox
8 30 0.047682012 ubox
8 31 0.008227775 ubox
8 36 0.013852356 ubox
9 15 0.033280531 ubox
9 17 0.256137304 ubox
9 29 0.047691469 ubox
9 30 0.007948364 ubox
9 34 0.004198008 ubox
9 36 0.003997982 ubox
9 52 0.010413462 ubox
10 14 0.033580613 ubox
10 16 0.255648956 ubox
10 19 0.290731317 ubox
10 28 0.047059095 ubox
10 33 0.004777921 ubox
10 35 0.008892404 ubox
10 45 0.908537018 ubox
10 51 0.008390688 ubox
11 18 0.290675150 ubox
11 34 0.009109100 ubox
11 36 0.004909176 ubox
11 44 0.911126500 ubox
12 20 0.070236443 ubox
12 24 0.019551135 ubox
12 25 0.004768146 ubox
12 35 0.003899562 ubox
12 43 0.910683148 ubox
12 47 0.007949080 ubox
12 50 0.003745094 ubox
13 19 0.075641165 ubox
13 23 0.019473088 ubox
13 24 0.003909401 ubox
13 35 0.005953142 ubox
13 42 0.908205619 ubox
13 45 0.037183344 ubox
13 46 0.006160391 ubox
13 49 0.003495825 ubox
14 18 0.075154176 ubox
14 34 0.006383481 ubox
14 36 0.459332646 ubox
14 44 0.037713279 ubox
15 35 0.459190923 ubox
15 43 0.037174845 ubox
16 34 0.458544321 ubox
16 36 0.480304256 ubox
16 44 0.004452089 ubox
17 24 0.010060542 ubox
17 35 0.477754026 ubox
17 43 0.004519448 ubox
18 23 0.010274631 ubox
18 35 0.622264407 ubox
18 42 0.004332036 ubox
19 30 0.040128189 ubox
19 31 0.086976367 ubox
19 34 0.629929628 ubox
20 29 0.040174291 ubox
20 30 0.074878720 ubox
20 31 0.017821493 ubox
20 32 0.791620922 ubox
20 37 0.031413833 ubox
21 30 0.041349625 ubox
21 31 0.783155901 ubox
21 36 0.032100092 ubox
22 30 0.769730440 ubox
22 31 0.474859666 ubox
23 30 0.496352286 ubox
23 31 0.052773071 ubox
24 29 0.470981547 ubox
24 30 0.052261132 ubox
24 31 0.005895149 ubox
24 32 0.024404499 ubox
24 38 0.006082091 ubox
25 29 0.049612643 ubox
25 30 0.006210609 ubox
25 31 0.026356323 ubox
25 32 0.087894249 ubox
25 37 0.006777201 ubox
25 39 0.003504267 ubox
26 30 0.026476210 ubox
26 31 0.094529941 ubox
26 36 0.006783419 ubox
28 36 0.017793451 ubox
28 44 0.048937599 ubox
29 35 0.017552194 ubox
29 43 0.049115866 ubox
29 47 0.191990729 ubox
29 48 0.022663861 ubox
29 50 0.148600100 ubox
30 42 0.048394938 ubox
30 43 0.019552959 ubox
30 46 0.205432377 ubox
30 47 0.025073993 ubox
30 49 0.158821616 ubox
30 50 0.030096435 ubox
30 51 0.012348082 ubox
30 54 0.035080412 ubox
31 41 0.033240077 ubox
31 42 0.022792078 ubox
31 45 0.205416745 ubox
31 46 0.025531975 ubox
31 48 0.158686441 ubox
31 49 0.033599427 ubox
31 50 0.005875197 ubox
31 51 0.012208298 ubox
31 53 0.034259862 ubox
32 41 0.023860749 ubox
32 47 0.157622999 ubox
32 48 0.032431042 ubox
32 50 0.012078849 ubox
33 44 0.193310144 ubox
34 41 0.037365337 ubox
34 43 0.179928328 ubox
34 45 0.161741506 ubox
34 53 0.287744689 ubox
35 40 0.044085775 ubox
35 44 0.160310642 ubox
35 52 0.288816063 ubox
36 42 0.171093023 ubox
36 43 0.103381574 ubox
36 49 0.048766954 ubox
36 51 0.288912296 ubox
37 41 0.149098056 ubox
37 48 0.049618262 ubox
37 50 0.281462417 ubox
38 47 0.052903287 ubox
38 48 0.062473165 ubox
39 47 0.060791253 ubox
39 48 0.209615165 ubox
40 47 0.198195203 ubox
43 52 0.007914636 ubox
44 51 0.008970869 ubox
10 45 0.9500000 lbox
11 44 0.9500000 lbox
12 43 0.9500000 lbox
13 42 0.9500000 lbox
16 36 0.9500000 lbox
17 35 0.9500000 lbox
20 32 0.9500000 lbox
21 31 0.9500000 lbox
22 30 0.9500000 lbox
showpage
end
%%EOF
