%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:36:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUCCCUCUCCCCACCGCCCCAGGCCGCGGGAGCCCGCGGGGAGGGCGGGCCUGUCGCAGCCGCGCUGGUCGCCAGGCGUCCGGGAGGAGCGGGGUCCGCGCGGCGGACGAGGCGGGGGCGGAGGCGCAGGCAGAGCGAGCGCGGGAGGUCGCCGCAGCCAGGGACACCGCGCGCCGCCGCUCAAC\
) } def
/len { sequence length } bind def

/coor [
[255.44256592 235.96565247]
[256.88198853 225.35935974]
[245.11001587 216.06311035]
[233.33801270 206.76686096]
[214.06140137 205.40534973]
[206.85069275 186.59461975]
[194.77464294 177.69691467]
[182.69859314 168.79922485]
[170.62254333 159.90151978]
[158.54649353 151.00382996]
[146.39651489 142.20733643]
[134.17347717 133.51268005]
[121.95042419 124.81800842]
[109.72738647 116.12334442]
[92.93527985 121.14038086]
[76.11598969 109.62050629]
[62.72821045 116.38565826]
[49.34042740 123.15081024]
[35.95264435 129.91596985]
[22.56486130 136.68112183]
[9.17707920 143.44627380]
[7.99091864 157.19015503]
[0.22588196 168.46086121]
[-11.99873447 174.37104797]
[-25.43868256 173.47117615]
[-36.58555222 166.10346985]
[-50.08451080 172.64396667]
[-63.58346939 179.18447876]
[-77.08242798 185.72497559]
[-90.58138275 192.26547241]
[-104.08033752 198.80596924]
[-112.83312988 212.67395020]
[-129.20664978 211.75750732]
[-136.35722351 196.99942017]
[-126.92896271 183.58152771]
[-110.62084198 185.30702209]
[-97.12187958 178.76651001]
[-83.62292480 172.22601318]
[-70.12397003 165.68551636]
[-56.62501144 159.14501953]
[-43.12605286 152.60452271]
[-40.75807953 136.36964417]
[-29.06789780 124.62249756]
[-12.51629639 122.12606812]
[2.41192722 130.05848694]
[15.79970932 123.29333496]
[29.18749237 116.52818298]
[42.57527542 109.76303101]
[55.96305847 102.99787903]
[69.35083771 96.23272705]
[74.74195862 82.23501587]
[69.35083771 68.23730469]
[63.95972443 54.23960114]
[58.56860733 40.24188995]
[53.06072617 26.28971291]
[47.43646240 12.38404274]
[41.81219864 -1.52162707]
[31.54671669 -5.19237089]
[25.13699913 -13.73784637]
[24.51296616 -24.18160820]
[29.63972473 -33.04877090]
[24.48325920 -47.13460922]
[19.32679558 -61.22045135]
[14.17033005 -75.30628967]
[9.01386547 -89.39212799]
[3.85740089 -103.47796631]
[-1.29906368 -117.56380463]
[-7.19934654 -124.56359863]
[-6.42185545 -131.92832947]
[-11.34222794 -146.09837341]
[-16.10827637 -150.72682190]
[-17.58443260 -156.24073792]
[-16.18163681 -160.82489014]
[-20.62577057 -175.15141296]
[-25.06990433 -189.47795105]
[-38.77379227 -196.88343811]
[-43.07668686 -211.47589111]
[-35.93223572 -224.49482727]
[-40.37636948 -238.82136536]
[-45.91847610 -246.10801697]
[-44.77290726 -253.42454529]
[-48.97702789 -267.82333374]
[-53.18114853 -282.22213745]
[-65.40009308 -293.15966797]
[-61.77302933 -309.15267944]
[-46.03116226 -313.74893188]
[-34.36837769 -302.22021484]
[-38.78234863 -286.42626953]
[-34.57823181 -272.02746582]
[-30.37411118 -257.62866211]
[-26.04983330 -243.26548767]
[-21.60569954 -228.93894958]
[-8.34749508 -222.24899292]
[-3.63642454 -207.78315735]
[-10.74336624 -193.92208862]
[-6.29923248 -179.59555054]
[-1.85509896 -165.26901245]
[2.82780814 -151.01873779]
[7.74818087 -136.84870911]
[12.78677559 -122.72027588]
[17.94324112 -108.63442993]
[23.09970474 -94.54859161]
[28.25617027 -80.46275330]
[33.41263580 -66.37691498]
[38.56909943 -52.29107666]
[43.72556305 -38.20523453]
[59.43140411 -26.94608879]
[55.71786880 -7.14589024]
[61.34213257 6.75977993]
[66.96639252 20.66545105]
[72.39984894 25.69748497]
[72.56631470 34.85077286]
[77.95743561 48.84848404]
[83.34854889 62.84619141]
[88.73966217 76.84390259]
[113.72612762 82.43811798]
[118.42205048 103.90029907]
[130.64509583 112.59496307]
[142.86813354 121.28963470]
[155.09118652 129.98429871]
[163.91712952 132.41596985]
[167.44418335 138.92778015]
[179.52023315 147.82546997]
[191.59628296 156.72317505]
[203.67233276 165.62086487]
[215.74838257 174.51855469]
[226.41535950 172.26686096]
[236.35211182 176.18740845]
[242.35536194 184.75610352]
[242.63426208 194.99487305]
[254.40626526 204.29112244]
[266.17825317 213.58737183]
[285.95849609 210.16975403]
[301.65304565 222.19006348]
[303.45114136 241.57119751]
[315.67419434 250.26585388]
[327.89721680 258.96054077]
[340.12026978 267.65518188]
[352.34332275 276.34985352]
[372.46499634 277.32757568]
[379.77648926 295.21566772]
[392.28326416 303.49703979]
[404.79000854 311.77841187]
[417.29675293 320.05978394]
[429.80349731 328.34115601]
[442.37899780 336.51776123]
[455.02239990 344.58898926]
[467.77581787 342.57681274]
[478.14483643 349.57577515]
[480.86697388 361.37487793]
[493.37371826 369.65625000]
[505.88046265 377.93762207]
[514.78271484 380.07302856]
[518.52539062 386.46334839]
[530.89202881 394.95254517]
[545.90911865 390.59115601]
[560.19537354 396.95016479]
[567.00524902 411.02706909]
[563.12341309 426.17517090]
[550.38262939 435.24200439]
[534.79882812 433.94647217]
[523.73010254 422.90032959]
[522.40283203 407.31915283]
[510.03622437 398.82995605]
[497.59909058 390.44436646]
[485.09234619 382.16299438]
[472.58560181 373.88162231]
[455.04547119 373.76190186]
[446.95114136 357.23239136]
[434.30776978 349.16113281]
[426.96343994 348.21014404]
[421.52212524 340.84790039]
[409.01538086 332.56652832]
[396.50863647 324.28515625]
[384.00186157 316.00378418]
[371.49511719 307.72241211]
[361.68103027 310.65393066]
[351.66644287 307.62582397]
[344.83966064 299.40969849]
[343.64865112 288.57290649]
[331.42559814 279.87823486]
[319.20254517 271.18356323]
[306.97952271 262.48889160]
[294.75646973 253.79423523]
[285.43646240 258.17721558]
[275.05697632 258.28652954]
[265.49896240 254.03501892]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 132]
[3 131]
[4 130]
[6 126]
[7 125]
[8 124]
[9 123]
[10 122]
[11 120]
[12 119]
[13 118]
[14 117]
[16 50]
[17 49]
[18 48]
[19 47]
[20 46]
[21 45]
[26 41]
[27 40]
[28 39]
[29 38]
[30 37]
[31 36]
[51 115]
[52 114]
[53 113]
[54 112]
[55 110]
[56 109]
[57 108]
[61 106]
[62 105]
[63 104]
[64 103]
[65 102]
[66 101]
[67 100]
[69 99]
[70 98]
[73 97]
[74 96]
[75 95]
[78 92]
[79 91]
[81 90]
[82 89]
[83 88]
[135 184]
[136 183]
[137 182]
[138 181]
[139 180]
[141 176]
[142 175]
[143 174]
[144 173]
[145 172]
[146 170]
[147 169]
[150 167]
[151 166]
[152 165]
[154 164]
[155 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
