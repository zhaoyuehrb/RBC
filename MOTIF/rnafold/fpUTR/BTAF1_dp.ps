%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:11:46 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (BTAF1)
} def

/sequence { (\
CCGCGGCCUGGGCCUGCGCCGCUCAGCUCUCUGGAAACUAGCGCCUCAGCUGCGCGGCGCGUAGGUCGCGGGGAGCUCCGAACCGCCGGCGCCCGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 71 0.992815975 ubox
1 72 0.016464024 ubox
1 73 0.003559502 ubox
1 96 0.010840968 ubox
2 70 0.998589952 ubox
2 71 0.012236507 ubox
2 72 0.003190508 ubox
2 80 0.003380026 ubox
2 95 0.010935260 ubox
3 69 0.998885905 ubox
3 76 0.024512695 ubox
3 94 0.010347964 ubox
4 68 0.998890500 ubox
4 75 0.024552916 ubox
4 80 0.004507163 ubox
5 67 0.998780610 ubox
5 79 0.004569750 ubox
5 93 0.010354231 ubox
5 98 0.037587637 ubox
6 66 0.998568941 ubox
6 78 0.004566996 ubox
6 92 0.010348547 ubox
6 97 0.037863013 ubox
7 65 0.998899510 ubox
7 72 0.025074589 ubox
7 91 0.010341863 ubox
7 96 0.037513161 ubox
8 64 0.998886860 ubox
8 71 0.025164790 ubox
8 89 0.010254900 ubox
8 95 0.037124112 ubox
8 96 0.005185820 ubox
9 61 0.010371194 ubox
9 63 0.996896816 ubox
9 70 0.025207024 ubox
9 88 0.010235635 ubox
9 95 0.007299272 ubox
10 60 0.022178244 ubox
10 62 0.979376865 ubox
10 69 0.025134629 ubox
10 87 0.010147890 ubox
10 93 0.020734874 ubox
10 94 0.031481792 ubox
11 67 0.027201963 ubox
11 92 0.020734818 ubox
11 93 0.031493636 ubox
12 58 0.024229009 ubox
12 60 0.770327742 ubox
12 62 0.138003363 ubox
12 66 0.027414981 ubox
12 90 0.020823941 ubox
12 92 0.031381246 ubox
13 57 0.023997987 ubox
13 59 0.765554230 ubox
13 61 0.149945455 ubox
13 65 0.027446265 ubox
13 89 0.020890776 ubox
13 91 0.031254699 ubox
14 56 0.023753359 ubox
14 57 0.741076029 ubox
14 64 0.028048719 ubox
14 88 0.020934667 ubox
14 89 0.023380101 ubox
15 56 0.740736416 ubox
15 61 0.602499121 ubox
15 63 0.023375811 ubox
15 88 0.023208840 ubox
16 55 0.741698696 ubox
16 58 0.003693944 ubox
16 60 0.635971145 ubox
16 62 0.007035087 ubox
16 86 0.023866018 ubox
16 87 0.019737871 ubox
17 54 0.741708501 ubox
17 59 0.641959661 ubox
17 61 0.006253172 ubox
17 85 0.026652629 ubox
17 91 0.003245831 ubox
18 53 0.741705206 ubox
18 58 0.669906282 ubox
18 60 0.003475537 ubox
18 84 0.026546499 ubox
18 86 0.015744947 ubox
18 90 0.005481300 ubox
19 52 0.741014176 ubox
19 57 0.669953237 ubox
19 85 0.015366076 ubox
19 89 0.005483540 ubox
20 43 0.013624439 ubox
20 52 0.016815559 ubox
20 56 0.669951880 ubox
20 80 0.022648098 ubox
20 85 0.003620485 ubox
20 88 0.005482199 ubox
21 27 0.003240470 ubox
21 42 0.014030790 ubox
21 50 0.740766912 ubox
21 51 0.005093475 ubox
21 55 0.669953282 ubox
21 79 0.022647472 ubox
21 84 0.004918429 ubox
21 86 0.003669822 ubox
21 87 0.004100411 ubox
22 26 0.003221549 ubox
22 34 0.004027004 ubox
22 41 0.014030331 ubox
22 49 0.741217692 ubox
22 54 0.669699384 ubox
22 85 0.005158005 ubox
23 34 0.016353867 ubox
23 40 0.013273009 ubox
23 48 0.722323532 ubox
23 81 0.014729064 ubox
24 33 0.024329302 ubox
24 52 0.669517529 ubox
24 80 0.014926800 ubox
25 32 0.024375722 ubox
25 39 0.009745540 ubox
25 46 0.577126130 ubox
25 51 0.669850693 ubox
25 77 0.030494164 ubox
26 31 0.023853768 ubox
26 38 0.009795757 ubox
26 42 0.074752672 ubox
26 44 0.555139062 ubox
26 45 0.475139871 ubox
26 50 0.670010041 ubox
26 76 0.031489603 ubox
27 34 0.005905961 ubox
27 41 0.074777000 ubox
27 43 0.652531077 ubox
27 49 0.669482407 ubox
27 75 0.031491481 ubox
28 33 0.005370338 ubox
28 34 0.004822825 ubox
28 35 0.021459946 ubox
28 40 0.068993924 ubox
28 48 0.646303134 ubox
28 74 0.031486998 ubox
29 33 0.006911292 ubox
29 34 0.024249463 ubox
29 41 0.184237973 ubox
29 49 0.018180575 ubox
29 73 0.031490851 ubox
30 40 0.167536229 ubox
30 48 0.038320153 ubox
30 72 0.031470401 ubox
31 41 0.787293557 ubox
31 49 0.017289662 ubox
31 71 0.031488021 ubox
32 40 0.790271890 ubox
32 43 0.238608753 ubox
32 48 0.037051410 ubox
32 70 0.031452273 ubox
33 39 0.794193769 ubox
33 42 0.261481818 ubox
33 45 0.496917401 ubox
33 46 0.044098073 ubox
33 47 0.049168220 ubox
33 69 0.031338614 ubox
34 38 0.777522848 ubox
34 44 0.496033702 ubox
34 45 0.049549729 ubox
34 46 0.039276664 ubox
34 47 0.044316105 ubox
34 67 0.025407585 ubox
35 46 0.042940296 ubox
35 66 0.024895629 ubox
38 64 0.030076651 ubox
39 52 0.009926308 ubox
39 63 0.030025682 ubox
40 46 0.007931717 ubox
40 51 0.017050825 ubox
40 62 0.028801491 ubox
41 45 0.008436973 ubox
41 50 0.017647517 ubox
41 53 0.003309660 ubox
41 60 0.031381550 ubox
42 49 0.017686372 ubox
42 52 0.003313362 ubox
42 59 0.031420614 ubox
43 50 0.005173412 ubox
43 58 0.031420905 ubox
44 49 0.005249190 ubox
44 57 0.031417419 ubox
45 56 0.031378009 ubox
49 55 0.021436593 ubox
50 54 0.021296771 ubox
64 84 0.004555059 ubox
64 87 0.004037786 ubox
65 83 0.004559033 ubox
65 86 0.004027757 ubox
65 90 0.019787000 ubox
66 82 0.003846514 ubox
66 85 0.003354686 ubox
66 89 0.019795199 ubox
67 80 0.003367484 ubox
67 88 0.019786995 ubox
68 79 0.003351299 ubox
68 86 0.017279480 ubox
68 87 0.014139687 ubox
69 80 0.005918508 ubox
69 85 0.022169842 ubox
70 79 0.011290849 ubox
70 84 0.023359661 ubox
70 98 0.005147432 ubox
71 76 0.003761468 ubox
71 77 0.003434101 ubox
71 78 0.011696443 ubox
71 79 0.046349046 ubox
71 83 0.023431152 ubox
71 84 0.041633285 ubox
71 94 0.033467642 ubox
71 97 0.006740637 ubox
71 98 0.005101981 ubox
72 76 0.007815464 ubox
72 77 0.010234983 ubox
72 78 0.052145969 ubox
72 79 0.471286381 ubox
72 83 0.046810215 ubox
72 84 0.177748439 ubox
72 87 0.005161707 ubox
72 93 0.037506027 ubox
72 94 0.820031290 ubox
72 97 0.010333248 ubox
72 98 0.016012602 ubox
73 77 0.033886241 ubox
73 78 0.470183327 ubox
73 83 0.177325649 ubox
73 86 0.004941986 ubox
73 92 0.035621494 ubox
73 93 0.820671984 ubox
73 97 0.016052928 ubox
75 86 0.009088862 ubox
75 90 0.031760208 ubox
75 92 0.822545165 ubox
75 97 0.007654519 ubox
76 85 0.009313053 ubox
76 89 0.029349416 ubox
76 91 0.822389643 ubox
76 96 0.007667825 ubox
77 88 0.024468249 ubox
77 89 0.004230608 ubox
77 95 0.007599090 ubox
78 88 0.007148651 ubox
78 89 0.822685443 ubox
79 85 0.020565228 ubox
79 88 0.823101570 ubox
80 84 0.029864289 ubox
80 87 0.816131582 ubox
83 96 0.003970939 ubox
84 95 0.003983431 ubox
85 94 0.003779730 ubox
85 97 0.564390186 ubox
86 96 0.565531087 ubox
87 95 0.565534987 ubox
88 94 0.565422414 ubox
88 98 0.018810349 ubox
89 93 0.556294625 ubox
89 97 0.018967368 ubox
90 96 0.018969236 ubox
1 71 0.9500000 lbox
2 70 0.9500000 lbox
3 69 0.9500000 lbox
4 68 0.9500000 lbox
5 67 0.9500000 lbox
6 66 0.9500000 lbox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
15 61 0.9500000 lbox
16 60 0.9500000 lbox
17 59 0.9500000 lbox
18 58 0.9500000 lbox
19 57 0.9500000 lbox
20 56 0.9500000 lbox
21 55 0.9500000 lbox
22 54 0.9500000 lbox
24 52 0.9500000 lbox
25 51 0.9500000 lbox
26 50 0.9500000 lbox
27 49 0.9500000 lbox
28 48 0.9500000 lbox
33 45 0.9500000 lbox
34 44 0.9500000 lbox
72 94 0.9500000 lbox
73 93 0.9500000 lbox
75 92 0.9500000 lbox
76 91 0.9500000 lbox
78 89 0.9500000 lbox
79 88 0.9500000 lbox
80 87 0.9500000 lbox
showpage
end
%%EOF
