%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:51:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGGCCGCAGCUGUCAGAGCCGCGGCGGCGAACGAGGCGCAGCGAGCUGAGCGGUGGCAGCGCCGCAGCCGGGGCCGGAGCGCAGGAGCCGACGGGGCCCGACCAGGAUGGUGCAGUGGCGGCUCCGCGGCGCACGCACGCGCUGAGCGGGCCCAGCCUGGGCCCCGCGCCCCCCGCGCCCCCCGCCGCCCCGAUCCGGGCCGGC\
) } def
/len { sequence length } bind def

/coor [
[100.53619385 136.57615662]
[101.59583282 130.04370117]
[97.09130859 115.73603821]
[82.13489532 114.59336090]
[75.50910950 128.05065918]
[68.88333130 141.50796509]
[62.25755310 154.96527100]
[55.63177109 168.42257690]
[56.47752380 184.22116089]
[43.91410446 192.22177124]
[37.28832245 205.67907715]
[30.66254234 219.13638306]
[34.44700241 234.72666931]
[24.50411034 247.31709290]
[8.46120071 247.24932861]
[-1.37497890 234.57536316]
[2.54104686 219.01759338]
[17.20523834 212.51060486]
[23.83101845 199.05329895]
[30.45679855 185.59599304]
[29.13712692 170.75996399]
[42.17446899 161.79679871]
[48.80024719 148.33949280]
[55.42602921 134.88218689]
[62.05180740 121.42488098]
[68.67758942 107.96758270]
[60.17835236 95.60784912]
[45.24110413 96.97846985]
[30.30385780 98.34909821]
[26.24173546 109.07604218]
[18.50350952 117.47326660]
[8.23625278 122.35254669]
[-3.05901146 123.04297638]
[-13.74672031 119.48297882]
[-22.29360199 112.22364807]
[-27.48862839 102.34385681]
[-42.47293091 103.02988434]
[-57.45723724 103.71591187]
[-72.44153595 104.40194702]
[-87.42584229 105.08797455]
[-100.85770416 113.44833374]
[-113.92552948 106.30121613]
[-128.90983582 106.98725128]
[-138.16635132 115.97314453]
[-150.66351318 116.23395538]
[-159.68814087 108.17526245]
[-174.68116760 108.63270569]
[-189.67417908 109.09014893]
[-203.32730103 118.17444611]
[-217.89894104 110.65119934]
[-218.39906311 94.25967407]
[-204.31317139 85.86207581]
[-190.13162231 94.09712219]
[-175.13861084 93.63968658]
[-160.14558411 93.18224335]
[-145.74406433 83.15705109]
[-129.59587097 92.00294495]
[-114.61155701 91.31691742]
[-102.25147247 83.00562286]
[-88.11187744 90.10367584]
[-73.12757111 89.41764069]
[-58.14326477 88.73161316]
[-43.15896225 88.04557800]
[-28.17465782 87.35955048]
[-18.81758499 71.18576813]
[-1.46642721 63.85673523]
[16.94305801 68.49838257]
[28.93323135 83.41184998]
[43.87047958 82.04122162]
[58.80772781 80.67060089]
[103.15645599 86.69398499]
[113.01075745 75.38502502]
[122.86506653 64.07605743]
[132.71937561 52.76709747]
[142.57368469 41.45813370]
[152.34146118 30.07435799]
[162.02217102 18.61643410]
[171.70286560 7.15850878]
[174.36721802 -12.82047844]
[192.82182312 -18.58472252]
[202.14860535 -30.33254242]
[211.47537231 -42.08036041]
[220.80215454 -53.82818222]
[223.32313538 -69.44725037]
[237.29652405 -74.60415649]
[246.62329102 -86.35197449]
[249.50999451 -95.02253723]
[256.18298340 -98.20640564]
[265.68780518 -109.81062317]
[275.19265747 -121.41484833]
[268.60308838 -137.70265198]
[271.15512085 -154.99662781]
[282.05685425 -168.54806519]
[298.23629761 -174.68209839]
[315.20642090 -171.79402161]
[324.35296631 -183.68270874]
[333.49951172 -195.57139587]
[342.64605713 -207.46008301]
[351.79257202 -219.34877014]
[360.93911743 -231.23745728]
[370.08566284 -243.12614441]
[368.23950195 -258.59320068]
[377.68475342 -270.51971436]
[392.44158936 -272.18441772]
[401.58813477 -284.07308960]
[410.73464966 -295.96179199]
[405.86334229 -308.85839844]
[407.98474121 -322.37057495]
[416.43893433 -332.98452759]
[428.93334961 -337.99377441]
[442.16372681 -336.18878174]
[451.49047852 -347.93658447]
[460.81726074 -359.68441772]
[470.14404297 -371.43222046]
[473.03073120 -380.10278320]
[479.70373535 -383.28665161]
[489.20855713 -394.89086914]
[498.71340942 -406.49508667]
[508.12948608 -418.17144775]
[517.45623779 -429.91928101]
[519.97723389 -445.53836060]
[533.95062256 -450.69525146]
[543.27740479 -462.44308472]
[548.39050293 -478.60760498]
[565.33880615 -478.16912842]
[569.60919189 -461.76177979]
[555.02520752 -453.11630249]
[545.69842529 -441.36846924]
[543.84460449 -426.58969116]
[529.20410156 -420.59249878]
[519.87731934 -408.84469604]
[518.17968750 -401.64859009]
[510.31762695 -396.99026489]
[500.81277466 -385.38604736]
[491.30795288 -373.78179932]
[481.89184570 -362.10543823]
[472.56509399 -350.35763550]
[463.23831177 -338.60980225]
[453.91152954 -326.86199951]
[458.81774902 -311.19842529]
[453.36767578 -295.53964233]
[439.52154541 -286.12026978]
[422.62335205 -286.81524658]
[413.47680664 -274.92657471]
[404.33026123 -263.03787231]
[406.50430298 -248.34744263]
[397.39776611 -236.16032410]
[381.97433472 -233.97959900]
[372.82781982 -222.09091187]
[363.68127441 -210.20223999]
[354.53472900 -198.31355286]
[345.38818359 -186.42486572]
[336.24166870 -174.53617859]
[327.09512329 -162.64749146]
[333.14550781 -151.55155945]
[334.55377197 -138.94493103]
[331.07540894 -126.69751740]
[323.19348145 -116.63942719]
[312.05172729 -110.28748322]
[299.28869629 -108.61653137]
[286.79687500 -111.91000366]
[277.29205322 -100.30578613]
[267.78720093 -88.70156097]
[258.37112427 -77.02519989]
[249.04434204 -65.27738190]
[247.19047546 -50.49860001]
[232.54997253 -44.50140762]
[223.22320557 -32.75358582]
[213.89642334 -21.00576782]
[204.56964111 -9.25794792]
[206.64456177 0.75236303]
[202.78396606 10.45524406]
[194.03904724 16.55536652]
[183.16079712 16.83920860]
[173.48008728 28.29713440]
[163.79939270 39.75505829]
[161.88308716 46.89603424]
[153.88264465 51.31243896]
[144.02833557 62.62140274]
[134.17402649 73.93036652]
[124.31972504 85.23932648]
[114.46541595 96.54829407]
[111.39897156 111.23151398]
[115.90349579 125.53917694]
[120.62568665 139.77647400]
[125.56444550 153.94012451]
[130.50320435 168.10375977]
[135.44197083 182.26739502]
[147.29158020 192.75059509]
[144.17614746 207.31573486]
[149.11491394 221.47937012]
[154.05366516 235.64302063]
[158.99243164 249.80665588]
[169.91668701 262.77188110]
[160.48228455 276.85833740]
[144.33462524 271.69216919]
[144.82879639 254.74540710]
[139.89002991 240.58177185]
[134.95126343 226.41813660]
[130.01251221 212.25450134]
[118.51615906 202.78437805]
[121.27832794 187.20616150]
[116.33956909 173.04251099]
[111.40081024 158.87887573]
[106.46205139 144.71524048]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 184]
[3 183]
[4 26]
[5 25]
[6 24]
[7 23]
[8 22]
[10 20]
[11 19]
[12 18]
[27 70]
[28 69]
[29 68]
[36 64]
[37 63]
[38 62]
[39 61]
[40 60]
[42 58]
[43 57]
[46 55]
[47 54]
[48 53]
[71 182]
[72 181]
[73 180]
[74 179]
[75 178]
[76 176]
[77 175]
[78 174]
[80 170]
[81 169]
[82 168]
[83 167]
[85 165]
[86 164]
[88 163]
[89 162]
[90 161]
[95 154]
[96 153]
[97 152]
[98 151]
[99 150]
[100 149]
[101 148]
[104 145]
[105 144]
[106 143]
[111 139]
[112 138]
[113 137]
[114 136]
[116 135]
[117 134]
[118 133]
[119 131]
[120 130]
[122 128]
[123 127]
[185 205]
[186 204]
[187 203]
[188 202]
[190 200]
[191 199]
[192 198]
[193 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
