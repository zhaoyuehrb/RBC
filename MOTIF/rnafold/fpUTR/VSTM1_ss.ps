%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:27:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAGAAGGAAACUGCAAGAGUGGGGCAGAGAACCAGAGUGUCAGAGCAAAACCUCCUCUAUCUGCACAUCCUGGGGACGAACCGGGCAGCCGGAGAGCUGCGGCCGGCCCAGUCCCGCUCCGCCUUUGAAGGGUAAAACCCAAGGCGGGGCCUUGGUUCUGGCAGAAGGGACGCU\
) } def
/len { sequence length } bind def

/coor [
[134.60832214 444.73080444]
[119.72235870 442.31036377]
[105.90632629 436.26318359]
[94.02872467 426.96945190]
[84.83619690 415.01336670]
[78.90657806 401.14648438]
[76.61262512 386.24050903]
[78.09852600 371.23239136]
[83.27088165 357.06561279]
[91.80455017 344.63070679]
[103.16309357 334.70928955]
[116.63251495 327.92507935]
[131.36610413 324.70452881]
[131.89846802 309.71398926]
[132.43083191 294.72341919]
[132.96319580 279.73287964]
[125.68247223 266.73901367]
[133.90467834 253.22215271]
[134.43704224 238.23159790]
[134.96939087 223.24104309]
[135.50175476 208.25050354]
[137.13757324 187.09944153]
[149.02458191 175.88201904]
[139.86677551 164.00201416]
[130.70896912 152.12200928]
[121.55117035 140.24198914]
[112.39337158 128.36198425]
[102.38970184 132.81353760]
[90.81984711 133.61848450]
[79.04518890 130.24911499]
[68.59312439 122.69255829]
[60.96183395 111.49755096]
[57.41452789 97.74744415]
[58.79061508 82.95876312]
[44.77264786 77.62054443]
[30.75467873 72.28232574]
[16.73670959 66.94410706]
[1.08645833 69.26364136]
[-8.05401516 57.50349426]
[-22.07198334 52.16527557]
[-36.08995056 46.82706070]
[-50.10792160 41.48884201]
[-64.17270660 36.27523804]
[-78.28321075 31.18665314]
[-92.39371490 26.09807014]
[-106.50421906 21.00948715]
[-116.44097137 32.48230362]
[-129.85299683 39.58736038]
[-144.92645264 41.36376190]
[-159.62275696 37.57126236]
[-171.95436096 28.72276688]
[-180.25352478 16.01495934]
[-183.39784241 1.16646826]
[-180.96208191 -13.81456947]
[-173.27565002 -26.90209198]
[-161.37808228 -36.32612228]
[-146.87841797 -40.81212997]
[-131.73762512 -39.75342941]
[-118.00337982 -33.29319382]
[-107.53310394 -22.30511665]
[-101.74282837 -8.27525139]
[-101.41564178 6.89898300]
[-87.30513763 11.98756599]
[-73.19463348 17.07614899]
[-59.08412552 22.16473198]
[-51.70216370 21.47385025]
[-44.76970291 27.47087288]
[-30.75173569 32.80908966]
[-16.73376656 38.14730835]
[-2.71579814 43.48552322]
[11.93179417 40.78417206]
[22.07492638 52.92614365]
[36.09289551 58.26435852]
[50.11086273 63.60257721]
[64.12882996 68.94079590]
[75.05971527 58.66870499]
[70.60205841 44.34637070]
[57.12499237 35.64302444]
[55.67016220 19.66607285]
[67.35359192 8.67166328]
[83.21275330 11.09376717]
[91.08185577 25.07435417]
[84.92439270 39.88871384]
[89.38204956 54.21104813]
[104.37969208 54.47727203]
[109.34284973 40.32216644]
[114.30600739 26.16705894]
[119.26916504 12.01195145]
[115.42813110 -5.98238611]
[129.14065552 -16.91246986]
[133.85180664 -31.15343475]
[138.56295776 -45.39439774]
[143.27410889 -59.63536453]
[134.11135864 -72.15827942]
[134.09297180 -87.67534637]
[143.22605896 -100.21992493]
[157.99871826 -104.96838379]
[172.73059082 -100.09483337]
[181.75697327 -87.47325134]
[181.60700989 -71.95690155]
[172.33839417 -59.51213074]
[157.51507568 -54.92421341]
[152.80392456 -40.68324661]
[148.09277344 -26.44228363]
[143.38162231 -12.20131969]
[148.53727722 -1.23684108]
[144.70498657 10.67943287]
[133.42427063 16.97511101]
[128.46112061 31.13021851]
[123.49795532 45.28532410]
[118.53479767 59.44042969]
[136.72204590 91.15297699]
[124.27338409 119.20417786]
[133.43118286 131.08418274]
[142.58898926 142.96420288]
[151.74678040 154.84420776]
[160.90458679 166.72422791]
[174.09001160 173.87574768]
[189.04220581 175.07254028]
[203.99438477 176.26933289]
[218.94656372 177.46612549]
[233.89874268 178.66291809]
[248.85092163 179.85971069]
[263.80310059 181.05650330]
[278.75527954 182.25329590]
[293.70745850 183.45008850]
[308.65963745 184.64688110]
[312.57281494 182.60644531]
[316.53192139 181.99847412]
[320.07540894 182.65835571]
[322.84426880 184.28686523]
[324.61758423 186.49613953]
[339.44717407 188.75057983]
[354.27679443 191.00502014]
[369.10641479 193.25946045]
[385.67437744 189.66235352]
[393.71737671 204.58705139]
[381.60244751 216.44728088]
[366.85198975 208.08906555]
[352.02236938 205.83464050]
[337.19274902 203.58020020]
[322.36312866 201.32575989]
[307.46286011 199.59906006]
[292.51068115 198.40226746]
[277.55850220 197.20547485]
[262.60629272 196.00868225]
[247.65412903 194.81188965]
[232.70195007 193.61509705]
[217.74977112 192.41830444]
[202.79759216 191.22151184]
[187.84541321 190.02473450]
[172.89321899 188.82794189]
[167.29299927 193.81666565]
[180.24324036 201.38575745]
[177.04644775 216.04113770]
[162.12046814 217.52954102]
[156.09254456 203.79412842]
[150.49230957 208.78285217]
[149.95994568 223.77340698]
[149.42758179 238.76396179]
[148.89521790 253.75450134]
[156.13787842 267.82058716]
[147.95375061 280.26522827]
[147.42138672 295.25579834]
[146.88902283 310.24633789]
[146.35665894 325.23687744]
[160.82467651 329.49447632]
[173.77891541 337.21710205]
[184.40505981 347.91921997]
[192.03514099 360.92819214]
[196.18951416 375.42617798]
[196.60705566 390.50186157]
[193.26148987 405.20758057]
[186.36314392 418.61889648]
[176.34564209 429.89279175]
[163.83869934 438.32055664]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 166]
[14 165]
[15 164]
[16 163]
[18 161]
[19 160]
[20 159]
[21 158]
[23 117]
[24 116]
[25 115]
[26 114]
[27 113]
[34 75]
[35 74]
[36 73]
[37 72]
[39 70]
[40 69]
[41 68]
[42 67]
[43 65]
[44 64]
[45 63]
[46 62]
[76 84]
[77 83]
[85 111]
[86 110]
[87 109]
[88 108]
[90 105]
[91 104]
[92 103]
[93 102]
[118 152]
[119 151]
[120 150]
[121 149]
[122 148]
[123 147]
[124 146]
[125 145]
[126 144]
[127 143]
[132 142]
[133 141]
[134 140]
[135 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
