%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:39:32 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TPRX1)
} def

/sequence { (\
AGAAAGUGCUAGAAUUUUACUUUCAGAAGGACCAGUACCCGAACUACGACCAGCGACUGAAUCUGGCGGAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.007740082 ubox
1 21 0.021340135 ubox
1 45 0.019275841 ubox
1 64 0.004352196 ubox
2 9 0.008197547 ubox
2 18 0.007179268 ubox
2 20 0.024532421 ubox
2 23 0.004919712 ubox
2 24 0.856228217 ubox
2 44 0.019944520 ubox
2 63 0.004595543 ubox
3 17 0.007337048 ubox
3 18 0.040579180 ubox
3 22 0.004481205 ubox
3 23 0.856976995 ubox
3 62 0.004407001 ubox
4 16 0.007098000 ubox
4 17 0.043340217 ubox
4 21 0.003351235 ubox
4 22 0.856441276 ubox
5 15 0.006661715 ubox
5 16 0.044039260 ubox
5 21 0.857137646 ubox
5 45 0.009535968 ubox
5 58 0.005272563 ubox
6 15 0.044516465 ubox
6 20 0.857587203 ubox
6 32 0.051044732 ubox
6 38 0.180779838 ubox
6 44 0.009784075 ubox
6 57 0.005370638 ubox
7 14 0.045492538 ubox
7 19 0.851762381 ubox
7 25 0.004589290 ubox
7 31 0.051069519 ubox
7 37 0.181301313 ubox
7 43 0.009539507 ubox
7 55 0.003319699 ubox
7 56 0.004347711 ubox
7 68 0.361197433 ubox
8 18 0.786183231 ubox
8 24 0.005164331 ubox
8 36 0.181498554 ubox
8 54 0.005535623 ubox
8 67 0.474088925 ubox
9 26 0.019445035 ubox
9 29 0.051236074 ubox
9 35 0.181520802 ubox
9 53 0.005538674 ubox
9 66 0.474304541 ubox
10 19 0.041159716 ubox
10 25 0.019525290 ubox
10 28 0.050579263 ubox
10 34 0.175128711 ubox
10 46 0.008948368 ubox
10 52 0.005210429 ubox
10 65 0.474080061 ubox
11 17 0.121205905 ubox
11 18 0.069496171 ubox
11 21 0.009595927 ubox
11 23 0.005431928 ubox
11 45 0.009614989 ubox
11 64 0.474060212 ubox
12 16 0.096326056 ubox
12 17 0.085187336 ubox
12 18 0.035743971 ubox
12 20 0.009790436 ubox
12 22 0.005642373 ubox
12 23 0.007806718 ubox
12 24 0.059462185 ubox
12 44 0.009637936 ubox
12 63 0.474183916 ubox
13 17 0.038859615 ubox
13 21 0.005920622 ubox
13 22 0.009475632 ubox
13 23 0.059452329 ubox
13 62 0.463430372 ubox
14 21 0.012172921 ubox
14 22 0.058686662 ubox
14 36 0.010732068 ubox
14 62 0.067970861 ubox
15 26 0.003255785 ubox
15 27 0.010697664 ubox
15 28 0.109252363 ubox
15 29 0.122534278 ubox
15 30 0.042776718 ubox
15 31 0.039725533 ubox
15 35 0.010930483 ubox
15 42 0.009429679 ubox
15 43 0.011133653 ubox
15 60 0.051795040 ubox
15 61 0.090588582 ubox
16 25 0.004371741 ubox
16 26 0.011340994 ubox
16 27 0.112579755 ubox
16 28 0.126131783 ubox
16 29 0.049330459 ubox
16 30 0.041532287 ubox
16 31 0.010215670 ubox
16 34 0.010143477 ubox
16 41 0.010043657 ubox
16 42 0.013378882 ubox
16 43 0.004519828 ubox
16 56 0.004468565 ubox
16 59 0.041351762 ubox
16 60 0.081233611 ubox
16 61 0.065631403 ubox
17 25 0.010518779 ubox
17 26 0.112779963 ubox
17 27 0.126203923 ubox
17 28 0.052059811 ubox
17 29 0.041229368 ubox
17 30 0.010296587 ubox
17 31 0.012681791 ubox
17 41 0.013490708 ubox
17 42 0.005333599 ubox
17 53 0.003465324 ubox
17 55 0.004822215 ubox
17 56 0.022067096 ubox
17 59 0.065130550 ubox
17 60 0.072477542 ubox
17 61 0.019391181 ubox
18 25 0.100369201 ubox
18 26 0.123215813 ubox
18 27 0.052303470 ubox
18 28 0.039832028 ubox
18 29 0.007591249 ubox
18 30 0.012408087 ubox
18 37 0.101256050 ubox
18 41 0.004037170 ubox
18 46 0.004226459 ubox
18 52 0.003737807 ubox
18 55 0.023058859 ubox
18 59 0.071462144 ubox
18 60 0.015022763 ubox
19 36 0.108477774 ubox
19 45 0.004276337 ubox
19 58 0.069372463 ubox
20 26 0.059954510 ubox
20 29 0.072965691 ubox
20 30 0.054485886 ubox
20 35 0.109228402 ubox
20 53 0.037967688 ubox
20 69 0.012293129 ubox
20 71 0.007218070 ubox
21 25 0.054336835 ubox
21 27 0.008494963 ubox
21 28 0.072450884 ubox
21 29 0.054595826 ubox
21 30 0.007000652 ubox
21 31 0.008751150 ubox
21 34 0.104253447 ubox
21 43 0.004519589 ubox
21 49 0.010711897 ubox
21 52 0.036764076 ubox
21 53 0.006977557 ubox
21 56 0.024412472 ubox
21 61 0.030097609 ubox
21 68 0.012236179 ubox
21 70 0.007292357 ubox
22 26 0.008566347 ubox
22 27 0.063124144 ubox
22 28 0.053066337 ubox
22 29 0.008632130 ubox
22 30 0.009661017 ubox
22 31 0.097269997 ubox
22 34 0.003180587 ubox
22 42 0.004981847 ubox
22 43 0.020300890 ubox
22 48 0.011759204 ubox
22 49 0.010331712 ubox
22 52 0.006918696 ubox
22 53 0.007120956 ubox
22 55 0.023492483 ubox
22 56 0.012037691 ubox
22 60 0.022040669 ubox
22 61 0.418562245 ubox
22 69 0.006966285 ubox
22 70 0.003997890 ubox
22 71 0.004728090 ubox
23 27 0.044352604 ubox
23 28 0.007983251 ubox
23 29 0.008534965 ubox
23 30 0.103975117 ubox
23 31 0.062056281 ubox
23 41 0.004844060 ubox
23 42 0.023738131 ubox
23 48 0.010536446 ubox
23 49 0.039387241 ubox
23 52 0.006946251 ubox
23 55 0.011296077 ubox
23 56 0.067216270 ubox
23 59 0.005312708 ubox
23 60 0.427843803 ubox
23 66 0.014385629 ubox
23 68 0.003565028 ubox
23 69 0.004214927 ubox
23 70 0.007859650 ubox
24 29 0.104649310 ubox
24 30 0.064072551 ubox
24 41 0.024144612 ubox
24 48 0.040374723 ubox
24 55 0.068005456 ubox
24 59 0.429313445 ubox
24 65 0.017334153 ubox
24 68 0.004296774 ubox
24 69 0.008344020 ubox
25 45 0.288488708 ubox
25 58 0.429076176 ubox
25 64 0.018922336 ubox
26 44 0.302266553 ubox
26 57 0.427455219 ubox
26 63 0.019074098 ubox
27 62 0.018502111 ubox
28 45 0.059825523 ubox
28 58 0.006916988 ubox
28 64 0.022936683 ubox
29 39 0.236024528 ubox
29 40 0.717598822 ubox
29 44 0.061432910 ubox
29 45 0.020654862 ubox
29 51 0.338204673 ubox
29 57 0.007764082 ubox
29 58 0.004021373 ubox
29 63 0.023596761 ubox
29 64 0.018608205 ubox
30 38 0.236653230 ubox
30 39 0.717930534 ubox
30 44 0.021319775 ubox
30 50 0.338216889 ubox
30 57 0.004371401 ubox
30 62 0.021572809 ubox
30 63 0.020084584 ubox
31 62 0.019774614 ubox
32 66 0.060316347 ubox
32 69 0.029140889 ubox
33 59 0.100271089 ubox
33 65 0.060591116 ubox
33 68 0.028695982 ubox
34 45 0.346520003 ubox
34 58 0.100712220 ubox
34 64 0.060468729 ubox
35 44 0.359881645 ubox
35 47 0.268927658 ubox
35 50 0.026618183 ubox
35 54 0.028112078 ubox
35 57 0.100757836 ubox
35 63 0.060074197 ubox
35 67 0.007165886 ubox
36 43 0.349129609 ubox
36 46 0.268453822 ubox
36 49 0.026334474 ubox
36 53 0.027679575 ubox
36 56 0.099140297 ubox
36 59 0.012863582 ubox
36 61 0.009693820 ubox
36 66 0.005662783 ubox
37 45 0.259072778 ubox
37 58 0.013108564 ubox
38 66 0.006364792 ubox
38 69 0.014969798 ubox
39 65 0.006439595 ubox
39 66 0.003711922 ubox
39 68 0.013706025 ubox
39 69 0.168141587 ubox
40 48 0.118313148 ubox
40 55 0.080625319 ubox
40 59 0.019458860 ubox
40 65 0.003797785 ubox
40 68 0.168632101 ubox
41 47 0.120066330 ubox
41 54 0.080742113 ubox
41 58 0.017238058 ubox
41 63 0.006892095 ubox
41 67 0.166102650 ubox
42 62 0.006749361 ubox
44 53 0.081223998 ubox
44 66 0.123371596 ubox
44 69 0.041377910 ubox
44 71 0.569584290 ubox
45 52 0.078499706 ubox
45 59 0.004902480 ubox
45 65 0.124486962 ubox
45 68 0.020871323 ubox
45 70 0.443094754 ubox
46 58 0.004797705 ubox
46 64 0.121653398 ubox
47 55 0.139407577 ubox
47 59 0.007050522 ubox
47 65 0.005670457 ubox
47 68 0.845713450 ubox
48 54 0.140979816 ubox
48 58 0.006097524 ubox
48 63 0.109893837 ubox
48 64 0.003296082 ubox
48 67 0.851645089 ubox
49 62 0.107783053 ubox
50 66 0.863749071 ubox
50 69 0.064781163 ubox
51 59 0.185688467 ubox
51 65 0.863877656 ubox
51 68 0.064855727 ubox
52 58 0.186042275 ubox
52 64 0.861505019 ubox
53 57 0.182096688 ubox
53 63 0.845856298 ubox
53 67 0.062863533 ubox
54 65 0.027455535 ubox
54 66 0.062653610 ubox
54 68 0.023208789 ubox
55 63 0.109610415 ubox
55 64 0.024482996 ubox
55 67 0.023579388 ubox
56 62 0.127594056 ubox
57 66 0.023882362 ubox
57 69 0.012588484 ubox
58 65 0.023311924 ubox
58 68 0.012653234 ubox
59 64 0.014495058 ubox
59 67 0.012645215 ubox
62 70 0.011803188 ubox
63 68 0.003853577 ubox
63 69 0.012610717 ubox
63 71 0.005145688 ubox
64 68 0.011366560 ubox
64 70 0.005318102 ubox
2 24 0.9500000 lbox
3 23 0.9500000 lbox
4 22 0.9500000 lbox
5 21 0.9500000 lbox
6 20 0.9500000 lbox
7 19 0.9500000 lbox
8 18 0.9500000 lbox
29 40 0.9500000 lbox
30 39 0.9500000 lbox
47 68 0.9500000 lbox
48 67 0.9500000 lbox
50 66 0.9500000 lbox
51 65 0.9500000 lbox
52 64 0.9500000 lbox
53 63 0.9500000 lbox
showpage
end
%%EOF
