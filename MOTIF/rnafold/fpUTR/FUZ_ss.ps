%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:57:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGGGUUUGGGGGAGGUGCCUGAAUAGGGUUUGAGGGUCUGUUUGAGUUGGGUGAAGAAGGCGGGAAGUUAAUCCUCUUCCAAUCAGCUCCCCAUCUCGCCCUCUGGCGGCUCCGGACCACAGGCCGAGUUACUCUGAUUACCGCCAUGCUCCAAGACCCGCACUGACAGUCCCCACGUGAGGGACCGCGGUGGGAGUCCUAA\
) } def
/len { sequence length } bind def

/coor [
[496.83303833 567.55084229]
[496.88226318 560.74133301]
[499.05175781 554.23205566]
[489.15795898 542.95764160]
[479.26419067 531.68316650]
[469.28430176 520.48492432]
[459.21890259 509.36340332]
[444.94186401 505.11889648]
[441.41827393 489.69506836]
[431.35287476 478.57357788]
[421.28747559 467.45205688]
[407.01043701 463.20758057]
[403.48684692 447.78372192]
[393.42147827 436.66223145]
[379.14443970 432.41775513]
[375.62084961 416.99389648]
[365.55545044 405.87240601]
[355.49005127 394.75088501]
[340.25469971 399.56387329]
[324.38775635 397.24365234]
[311.07217407 388.20437622]
[303.00146484 374.21325684]
[301.83480835 358.04507446]
[307.85629272 342.93206787]
[297.62167358 331.96612549]
[287.38702393 321.00015259]
[272.53875732 320.74496460]
[262.00317383 309.76971436]
[262.37155151 294.19723511]
[252.13690186 283.23129272]
[241.90225220 272.26535034]
[231.66760254 261.29937744]
[221.43296814 250.33343506]
[211.19831848 239.36749268]
[199.12091064 238.63621521]
[190.50447083 229.57989502]
[190.36529541 216.67936707]
[180.29989624 205.55786133]
[170.23449707 194.43637085]
[160.16909790 183.31486511]
[150.10369873 172.19335938]
[140.03829956 161.07186890]
[136.54916382 160.53344727]
[133.14826965 158.27539062]
[130.64231873 154.35801697]
[129.78034973 149.20018005]
[120.23671722 137.62785339]
[110.69308472 126.05551147]
[101.14944458 114.48316956]
[56.74104691 114.16561890]
[44.81165314 105.07224274]
[32.88225937 95.97885895]
[20.95286751 86.88547516]
[10.26961422 88.96086884]
[0.41173813 84.89527130]
[-5.45549774 76.25544739]
[-5.59302473 66.03228760]
[-17.23814964 56.57760620]
[-32.74822998 58.01815414]
[-44.42335510 48.26387024]
[-45.70111465 33.46850204]
[-57.34624100 24.01381493]
[-72.85632324 25.45436478]
[-84.53144836 15.70008087]
[-85.80920410 0.90471226]
[-97.45433044 -8.54997253]
[-109.09945679 -18.00465775]
[-120.74458313 -27.45934296]
[-132.38970947 -36.91402817]
[-147.34791565 -32.78708649]
[-161.86325073 -38.27204132]
[-170.35426331 -51.25981522]
[-169.55599976 -66.75634766]
[-159.77539062 -78.80289459]
[-144.77330017 -82.76732635]
[-130.31831360 -77.12522888]
[-121.96868896 -64.04611206]
[-122.93502045 -48.55915451]
[-111.28989410 -39.10446930]
[-99.64476776 -29.64978218]
[-87.99964905 -20.19509697]
[-76.35452271 -10.74041271]
[-61.61219025 -12.52905655]
[-49.66769409 -3.10655022]
[-47.89155579 12.36869144]
[-36.24642944 21.82337570]
[-21.50409889 20.03473282]
[-9.55960083 29.45723915]
[-7.78346443 44.93247986]
[3.86166048 54.38716507]
[23.12546921 56.02621078]
[30.04624939 74.95608521]
[41.97564316 84.04946899]
[53.90503693 93.14284515]
[65.83442688 102.23622894]
[72.65449524 99.11586761]
[74.06990814 84.18279266]
[86.29463196 92.87513733]
[93.11470032 89.75476837]
[94.03361511 74.78294373]
[94.95252991 59.81111908]
[95.87144470 44.83929062]
[88.07700348 30.41089439]
[96.90437317 16.59027481]
[113.27272034 17.59490204]
[120.34368896 32.39130402]
[110.84326935 45.75820541]
[109.92435455 60.73003387]
[109.00543976 75.70185852]
[108.08652496 90.67368317]
[112.72177887 104.93953705]
[122.26541901 116.51187134]
[131.80905151 128.08421326]
[141.35269165 139.65655518]
[151.15980530 151.00646973]
[161.22520447 162.12796021]
[171.29058838 173.24946594]
[181.35598755 184.37097168]
[191.42138672 195.49246216]
[201.48678589 206.61396790]
[219.13894653 211.84864807]
[222.16427612 229.13284302]
[232.39891052 240.09880066]
[242.63356018 251.06474304]
[252.86820984 262.03070068]
[263.10284424 272.99664307]
[273.33749390 283.96258545]
[288.89834595 284.66815186]
[299.12152100 295.93496704]
[298.35296631 310.76553345]
[308.58761597 321.73147583]
[318.82226562 332.69741821]
[332.14739990 327.97955322]
[346.22158813 328.69549561]
[358.92086792 334.70413208]
[368.34146118 345.06814575]
[373.08505249 358.20007324]
[372.46624756 372.10537720]
[366.61154175 384.68551636]
[376.67694092 395.80700684]
[386.74234009 406.92849731]
[401.73931885 411.96847534]
[404.54296875 426.59683228]
[414.60836792 437.71832275]
[429.60534668 442.75830078]
[432.40896606 457.38665771]
[442.47436523 468.50817871]
[452.53976440 479.62966919]
[467.53674316 484.66964722]
[470.34039307 499.29800415]
[480.40579224 510.41949463]
[488.48861694 514.68499756]
[490.53860474 521.78942871]
[500.43240356 533.06384277]
[510.32620239 544.33825684]
[533.52917480 549.85406494]
[537.47375488 572.63970947]
[548.36096191 582.95806885]
[559.24816895 593.27642822]
[570.21411133 603.51110840]
[581.25817871 613.66137695]
[589.69854736 617.16674805]
[592.39215088 624.05291748]
[603.27935791 634.37127686]
[614.16656494 644.68963623]
[625.05377197 655.00799561]
[635.94097900 665.32635498]
[649.27697754 663.41784668]
[661.10394287 669.45178223]
[667.20440674 681.02502441]
[665.54864502 693.80621338]
[676.27642822 704.29022217]
[687.00421143 714.77423096]
[697.73205566 725.25823975]
[708.45983887 735.74224854]
[724.00231934 734.02044678]
[736.98663330 742.73492432]
[741.28186035 757.77105713]
[734.86004639 772.02917480]
[720.75329590 778.77703857]
[705.62243652 774.82855225]
[696.61175537 762.04803467]
[697.97583008 746.47003174]
[687.24804688 735.98602295]
[676.52026367 725.50201416]
[665.79241943 715.01806641]
[655.06463623 704.53405762]
[638.27374268 705.44702148]
[625.77008057 693.70410156]
[625.62261963 676.21356201]
[614.73541260 665.89520264]
[603.84820557 655.57684326]
[592.96099854 645.25848389]
[582.07379150 634.94012451]
[571.10784912 624.70544434]
[560.06378174 614.55511475]
[553.00842285 612.34240723]
[548.92980957 604.16363525]
[538.04260254 593.84527588]
[527.15539551 583.52691650]
[520.96276855 585.50329590]
[514.41094971 585.46685791]
[508.14285278 583.38928223]
[502.78332520 579.44403076]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 155]
[4 154]
[5 153]
[6 151]
[7 150]
[9 148]
[10 147]
[11 146]
[13 144]
[14 143]
[16 141]
[17 140]
[18 139]
[24 132]
[25 131]
[26 130]
[29 127]
[30 126]
[31 125]
[32 124]
[33 123]
[34 122]
[37 120]
[38 119]
[39 118]
[40 117]
[41 116]
[42 115]
[46 114]
[47 113]
[48 112]
[49 111]
[50 95]
[51 94]
[52 93]
[53 92]
[57 90]
[58 89]
[61 86]
[62 85]
[65 82]
[66 81]
[67 80]
[68 79]
[69 78]
[99 110]
[100 109]
[101 108]
[102 107]
[157 200]
[158 199]
[159 198]
[160 196]
[161 195]
[163 194]
[164 193]
[165 192]
[166 191]
[167 190]
[171 187]
[172 186]
[173 185]
[174 184]
[175 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
