%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:36:05 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (AP1S1)
} def

/sequence { (\
GCGGGACGGGGCGGGGCUUCGGGCGAGAGGGAGGGCAGCAGGAGAAAGGAUAAGAAAGGGAGUGGGACUGGCGCCUACGGUGGCCGAAGUGGGACGCGCCGAGCCGGAGGCUGCAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.006008046 ubox
1 104 0.003936033 ubox
1 111 0.106603998 ubox
1 114 0.228583725 ubox
2 11 0.006012383 ubox
2 103 0.003948405 ubox
2 106 0.940572377 ubox
2 110 0.097675994 ubox
2 113 0.226788433 ubox
3 7 0.003876437 ubox
3 105 0.958972939 ubox
3 112 0.121296820 ubox
4 104 0.958991243 ubox
4 105 0.032608802 ubox
4 111 0.104930072 ubox
4 112 0.003591307 ubox
5 104 0.035197332 ubox
5 111 0.003474628 ubox
7 101 0.994837249 ubox
7 106 0.068156520 ubox
8 100 0.997519516 ubox
8 105 0.067992390 ubox
9 99 0.997389276 ubox
9 100 0.013115659 ubox
9 104 0.067607832 ubox
10 99 0.015359891 ubox
10 100 0.055319982 ubox
10 105 0.007018217 ubox
11 97 0.997557219 ubox
11 99 0.055357284 ubox
11 104 0.007025439 ubox
11 114 0.004054254 ubox
12 96 0.997644571 ubox
12 98 0.055344959 ubox
12 101 0.038466740 ubox
12 103 0.006973906 ubox
12 113 0.004051049 ubox
13 95 0.996435070 ubox
13 97 0.055194250 ubox
13 100 0.038556978 ubox
14 99 0.038536521 ubox
15 100 0.005498286 ubox
15 112 0.006824961 ubox
16 90 0.995925500 ubox
16 97 0.037702282 ubox
16 99 0.005484825 ubox
16 111 0.007438736 ubox
17 30 0.003227913 ubox
17 89 0.999305305 ubox
17 92 0.006668023 ubox
17 96 0.033929140 ubox
17 98 0.005263035 ubox
17 110 0.007517908 ubox
18 29 0.003897264 ubox
18 88 0.999308645 ubox
18 91 0.005895102 ubox
18 94 0.004815925 ubox
18 109 0.007512275 ubox
19 28 0.004129965 ubox
19 87 0.999574809 ubox
19 93 0.003758797 ubox
19 94 0.003600068 ubox
19 108 0.007517139 ubox
20 27 0.004156893 ubox
20 86 0.999867281 ubox
20 92 0.003208676 ubox
20 93 0.003529980 ubox
20 107 0.007515050 ubox
21 85 0.995732799 ubox
22 84 0.991464036 ubox
22 85 0.091433924 ubox
22 105 0.007549867 ubox
23 36 0.007458104 ubox
23 39 0.004870930 ubox
23 81 0.021407244 ubox
23 84 0.128975409 ubox
23 90 0.003403027 ubox
23 104 0.007571019 ubox
24 35 0.007466403 ubox
24 38 0.004876990 ubox
24 79 0.007848919 ubox
24 80 0.021992827 ubox
24 82 0.984432370 ubox
24 83 0.157506646 ubox
24 89 0.003473088 ubox
24 103 0.007580704 ubox
25 78 0.013636459 ubox
25 81 0.954850371 ubox
26 76 0.004533267 ubox
28 76 0.047237655 ubox
29 75 0.042101934 ubox
29 76 0.062644742 ubox
30 74 0.039986051 ubox
30 75 0.060015339 ubox
30 76 0.099692959 ubox
31 74 0.058424999 ubox
31 75 0.050732520 ubox
32 69 0.003720855 ubox
32 76 0.307669426 ubox
33 68 0.004076184 ubox
33 69 0.016894097 ubox
33 75 0.276706676 ubox
33 76 0.908040284 ubox
34 68 0.017005553 ubox
34 69 0.015078518 ubox
34 74 0.237405763 ubox
34 75 0.956558360 ubox
34 76 0.004945149 ubox
35 68 0.015127571 ubox
35 72 0.176181290 ubox
35 74 0.968609923 ubox
35 75 0.003891639 ubox
36 64 0.004301670 ubox
36 70 0.045083137 ubox
36 71 0.173771892 ubox
36 73 0.978675174 ubox
37 63 0.004054139 ubox
37 69 0.051688397 ubox
38 63 0.013167154 ubox
38 68 0.051943619 ubox
38 72 0.271074713 ubox
39 62 0.013683161 ubox
39 64 0.032180755 ubox
39 70 0.975321416 ubox
39 71 0.208822517 ubox
40 63 0.031401544 ubox
40 69 0.990554367 ubox
41 68 0.991437553 ubox
41 69 0.085801532 ubox
42 68 0.093115942 ubox
43 69 0.023638002 ubox
44 68 0.024764694 ubox
47 69 0.009051421 ubox
48 68 0.010683794 ubox
49 68 0.003297767 ubox
50 63 0.066923302 ubox
51 62 0.066140266 ubox
51 64 0.026042603 ubox
52 63 0.024702384 ubox
57 69 0.008613836 ubox
58 68 0.010042053 ubox
58 69 0.016366021 ubox
59 68 0.019599671 ubox
59 69 0.003289150 ubox
60 68 0.003919146 ubox
61 69 0.008987146 ubox
62 68 0.010690234 ubox
62 78 0.006886760 ubox
63 67 0.010184755 ubox
63 77 0.006895830 ubox
64 76 0.006885862 ubox
65 75 0.006889335 ubox
66 74 0.006877694 ubox
72 82 0.004840421 ubox
73 81 0.005484605 ubox
74 80 0.005579484 ubox
75 79 0.005560883 ubox
77 81 0.004487136 ubox
78 101 0.006786917 ubox
79 100 0.006918649 ubox
80 97 0.004472472 ubox
80 99 0.006915565 ubox
81 96 0.004572784 ubox
81 98 0.006898889 ubox
82 95 0.004642838 ubox
82 97 0.006751229 ubox
84 93 0.008271868 ubox
85 92 0.008333563 ubox
89 95 0.008368585 ubox
89 97 0.003870888 ubox
90 94 0.007557923 ubox
90 96 0.003970088 ubox
91 95 0.004538540 ubox
91 97 0.003668430 ubox
102 112 0.247627031 ubox
103 111 0.260372829 ubox
103 114 0.008771890 ubox
104 110 0.264150087 ubox
104 113 0.008100786 ubox
104 117 0.003562861 ubox
105 109 0.262263656 ubox
105 113 0.005103675 ubox
105 116 0.003728673 ubox
106 112 0.019605185 ubox
107 111 0.033185432 ubox
111 117 0.056752741 ubox
112 116 0.052507478 ubox
2 106 0.9500000 lbox
3 105 0.9500000 lbox
4 104 0.9500000 lbox
7 101 0.9500000 lbox
8 100 0.9500000 lbox
9 99 0.9500000 lbox
11 97 0.9500000 lbox
12 96 0.9500000 lbox
13 95 0.9500000 lbox
16 90 0.9500000 lbox
17 89 0.9500000 lbox
18 88 0.9500000 lbox
19 87 0.9500000 lbox
20 86 0.9500000 lbox
21 85 0.9500000 lbox
22 84 0.9500000 lbox
24 82 0.9500000 lbox
25 81 0.9500000 lbox
33 76 0.9500000 lbox
34 75 0.9500000 lbox
35 74 0.9500000 lbox
36 73 0.9500000 lbox
39 70 0.9500000 lbox
40 69 0.9500000 lbox
41 68 0.9500000 lbox
showpage
end
%%EOF
