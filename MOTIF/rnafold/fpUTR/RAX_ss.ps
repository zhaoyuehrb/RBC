%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:07:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGACUAAGGCGGCAGCGGGCUGAGCGCUCGGCCACCCCCAGCGUGCGCAGCCCGGGCGGGCUUCGCCCGCGGAGCUUGACCUAGGGUCGGGACCCGUCGGGUUGCACCGCCGCACUCGGGAAGACCCGGCUUCGAGCCUCUCCUCUCCGUCUCCAAAGCGCCCUCCCGCCUCCCGGCGCUCCCC\
) } def
/len { sequence length } bind def

/coor [
[115.08010864 312.75506592]
[113.08080292 297.88888550]
[111.08149719 283.02273560]
[109.08219147 268.15655518]
[107.08289337 253.29040527]
[105.08358765 238.42424011]
[102.91755676 236.61515808]
[101.34503937 233.83061218]
[100.74435425 230.29501343]
[101.40467834 226.36659241]
[103.48181152 222.50215149]
[102.47991943 207.53565979]
[101.47802734 192.56915283]
[100.47614288 177.60264587]
[99.47425079 162.63613892]
[90.90414429 150.45408630]
[97.70241547 136.16793823]
[96.70052338 121.20143890]
[84.33390045 112.71222687]
[70.00736237 117.15636444]
[55.68082428 121.60049438]
[41.35429001 126.04463196]
[27.02775002 130.48876953]
[12.70121384 134.93289185]
[-1.62532413 139.37702942]
[-14.60744762 154.78166199]
[-33.26408386 149.74462891]
[-47.43412399 154.66500854]
[-61.60416031 159.58537292]
[-75.77419281 164.50575256]
[-89.94422913 169.42611694]
[-100.44280243 181.26211548]
[-115.00389099 178.12777710]
[-129.17391968 183.04815674]
[-137.43505859 196.80072021]
[-153.35635376 198.77357483]
[-164.72433472 187.45332336]
[-162.81848145 171.52386475]
[-149.10078430 163.20495605]
[-134.09429932 168.87811279]
[-119.92426300 163.95774841]
[-110.43922424 152.47369385]
[-94.86460114 155.25608826]
[-80.69456482 150.33570862]
[-66.52452850 145.41534424]
[-52.35449600 140.49496460]
[-38.18445969 135.57460022]
[-34.56240845 125.99383545]
[-26.08057594 119.86846924]
[-15.40760231 119.42434692]
[-6.06945801 125.05049133]
[8.25708008 120.60636139]
[22.58361626 116.16222382]
[36.91015625 111.71809387]
[51.23669052 107.27395630]
[65.56323242 102.82982635]
[79.88977051 98.38569641]
[87.09849548 85.23144531]
[83.13555908 70.76440430]
[79.17263031 56.29736710]
[75.20970154 41.83032990]
[71.24677277 27.36329269]
[67.16310120 12.92987156]
[62.95898056 -1.46892631]
[53.11248016 -6.14876509]
[47.59032059 -15.29290962]
[48.01479721 -25.74668312]
[54.00337219 -34.05614853]
[50.28273392 -48.58738327]
[46.56209946 -63.11862183]
[42.84146500 -77.64985657]
[39.12082672 -92.18109894]
[35.27890778 -106.68074036]
[31.31597900 -121.14778137]
[27.35304832 -135.61482239]
[13.90426636 -143.47407532]
[10.09137917 -158.20216370]
[17.66686821 -170.97509766]
[13.70393658 -185.44212341]
[9.74100590 -199.90916443]
[5.77807426 -214.37620544]
[1.81514335 -228.84324646]
[-2.14778757 -243.31028748]
[-6.11071873 -257.77731323]
[-16.12685204 -271.45626831]
[-5.75523329 -284.86767578]
[10.00320148 -278.61401367]
[8.35631847 -261.74023438]
[12.31925011 -247.27320862]
[16.28218079 -232.80616760]
[20.24511147 -218.33914185]
[24.20804214 -203.87210083]
[28.17097473 -189.40505981]
[32.13390350 -174.93801880]
[45.16115952 -167.80877686]
[49.38622665 -153.19358826]
[41.82008362 -139.57774353]
[45.78301620 -125.11071014]
[49.74594879 -110.64366913]
[54.55499268 -105.01190186]
[53.65206528 -95.90173340]
[57.37269974 -81.37049866]
[61.09333801 -66.83925629]
[64.81397247 -52.30802155]
[68.53460693 -37.77678299]
[83.03458405 -25.00209618]
[77.35778046 -5.67304564]
[81.56189728 8.72575188]
[86.46437836 14.27638149]
[85.71380615 23.40036201]
[89.67673492 37.86740112]
[93.63967133 52.33443832]
[97.60260010 66.80147552]
[101.56552887 81.26850891]
[113.71549988 90.06500244]
[128.69665527 89.31333923]
[142.09176636 80.89421844]
[155.19078064 87.98402405]
[170.17193604 87.23236847]
[180.74513245 75.79360962]
[195.94886780 75.24472809]
[206.78880310 85.39515686]
[221.76995850 84.64349365]
[236.75111389 83.89183044]
[245.18473816 80.33032227]
[251.98846436 83.25489807]
[266.98010254 82.75366974]
[281.97171021 82.25244904]
[287.80441284 79.07167816]
[293.50811768 79.29544067]
[297.47085571 81.99342346]
[312.47085571 81.99342346]
[320.20727539 68.79891205]
[333.42205811 61.29787064]
[348.51684570 61.41770554]
[361.43844604 69.02610016]
[368.76745605 81.99342346]
[383.76745605 81.99342346]
[398.76745605 81.99342346]
[414.60659790 75.94708252]
[424.80133057 89.49342346]
[414.60659790 103.03976440]
[398.76745605 96.99342346]
[383.76745605 96.99342346]
[368.76745605 96.99342346]
[361.43844604 109.96074677]
[348.51684570 117.56914520]
[333.42205811 117.68898010]
[320.20727539 110.18793488]
[312.47085571 96.99342346]
[297.47085571 96.99342346]
[282.47293091 97.24407196]
[267.48132324 97.74530029]
[252.48968506 98.24652100]
[237.50277710 98.87298584]
[222.52162170 99.62464905]
[207.54046631 100.37631226]
[197.77098083 111.56079102]
[182.58866882 112.53649902]
[170.92358398 102.21351624]
[155.94242859 102.96517944]
[143.61888123 111.33053589]
[129.44831848 104.29449463]
[114.46716309 105.04615784]
[114.88771057 112.32024384]
[111.66703033 120.19954681]
[112.66891479 135.16604614]
[121.31069183 148.41860962]
[114.44075775 161.63426208]
[115.44264221 176.60075378]
[116.44453430 191.56726074]
[117.44642639 206.53376770]
[118.44831085 221.50027466]
[119.94974518 236.42494202]
[121.94905090 251.29109192]
[123.94835663 266.15725708]
[125.94766235 281.02343750]
[127.94696808 295.88958740]
[129.94627380 310.75573730]
[143.96374512 317.19885254]
[152.25334167 330.20986938]
[152.16984558 345.63699341]
[143.73992920 358.55752563]
[129.65351868 364.84854126]
[114.40556335 362.50262451]
[102.86161804 352.26831055]
[98.70531464 337.41137695]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 179]
[2 178]
[3 177]
[4 176]
[5 175]
[6 174]
[11 173]
[12 172]
[13 171]
[14 170]
[15 169]
[17 167]
[18 166]
[19 57]
[20 56]
[21 55]
[22 54]
[23 53]
[24 52]
[25 51]
[27 47]
[28 46]
[29 45]
[30 44]
[31 43]
[33 41]
[34 40]
[58 114]
[59 113]
[60 112]
[61 111]
[62 110]
[63 108]
[64 107]
[68 105]
[69 104]
[70 103]
[71 102]
[72 101]
[73 99]
[74 98]
[75 97]
[78 94]
[79 93]
[80 92]
[81 91]
[82 90]
[83 89]
[84 88]
[115 164]
[116 163]
[118 161]
[119 160]
[122 157]
[123 156]
[124 155]
[126 154]
[127 153]
[128 152]
[131 151]
[132 150]
[137 145]
[138 144]
[139 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
