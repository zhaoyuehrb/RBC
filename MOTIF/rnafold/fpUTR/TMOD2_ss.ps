%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:10:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCGCCCCGGCGCCGCGCCCGGCCGGGAGCCGCCUGUUGAUCGCCGCGCUCGCCCCGGCCACGGCGCCGCCCCUGUUCUCCCGGCCCCGCUCCACCGGGGCUGACGGACUGACGGCCAGCACAGCCGGCUCCGGGAUGAGCGCACGGACGGUAUUCUGAAGUCUCAGGAAACUGGACCAUUUAAAUGUGCAUGGCCCAUGAGAAAGGCUUAUAAGAAGCC\
) } def
/len { sequence length } bind def

/coor [
[66.35546875 260.24362183]
[59.22608948 273.44104004]
[52.09670639 286.63845825]
[50.77329254 295.66818237]
[44.77191162 299.97113037]
[37.45648956 313.06634521]
[30.23390388 326.21301270]
[23.10452080 339.41043091]
[15.97513771 352.60784912]
[8.84575367 365.80526733]
[1.71637070 379.00268555]
[-5.41301250 392.20010376]
[2.70798111 405.23638916]
[3.20678091 420.58718872]
[-4.05078793 434.12319946]
[-17.11247635 442.20327759]
[-32.46475601 442.65396118]
[-45.97793961 435.35400391]
[-54.01704788 422.26705933]
[-54.41960526 406.91342163]
[-47.07732010 393.42318726]
[-33.96523666 385.42514038]
[-18.61043167 385.07070923]
[-11.48104954 371.87329102]
[-4.35166597 358.67587280]
[2.77771735 345.47845459]
[9.90710068 332.28103638]
[17.03648376 319.08361816]
[17.44972610 311.71060181]
[24.36127663 305.75094604]
[31.67670059 292.65573120]
[38.89928436 279.50906372]
[46.02866745 266.31164551]
[53.15805054 253.11424255]
[58.45421600 239.08032227]
[61.82159042 224.46318054]
[53.72956467 212.01109314]
[56.93633270 197.13925171]
[70.05210114 188.73602295]
[73.41947174 174.11888123]
[67.24813843 165.98706055]
[66.55261993 155.58239746]
[71.80285645 146.31950378]
[81.47769928 141.37123108]
[85.25737000 126.85523987]
[89.03704071 112.33924866]
[87.65922546 97.40266418]
[81.28791046 83.82303619]
[74.91658783 70.24340820]
[68.54527283 56.66378021]
[62.17395020 43.08415222]
[55.80262756 29.50452423]
[49.43130875 15.92489624]
[36.56497955 6.71793747]
[38.16365433 -8.09062386]
[31.79233360 -21.67025185]
[25.42101479 -35.24987793]
[19.04969406 -48.82950592]
[12.67837429 -62.40913391]
[-2.42490315 -65.44181824]
[-12.72602558 -76.65522003]
[-14.42892265 -91.60727692]
[-7.08876801 -104.54019165]
[-13.46008778 -118.11981964]
[-19.83140755 -131.69944763]
[-26.20272827 -145.27906799]
[-41.30600357 -148.31175232]
[-51.60712814 -159.52516174]
[-53.31002426 -174.47721863]
[-45.96987152 -187.41012573]
[-52.34119034 -200.98974609]
[-68.90268707 -206.63517761]
[-76.11151886 -222.20681763]
[-69.94786835 -237.85833740]
[-76.51071167 -251.34645081]
[-83.07355499 -264.83456421]
[-89.63639832 -278.32266235]
[-96.19924927 -291.81076050]
[-111.69200897 -301.77032471]
[-109.75988770 -319.21606445]
[-116.51294708 -332.60995483]
[-123.26599884 -346.00384521]
[-130.20791626 -359.30084229]
[-137.33729553 -372.49826050]
[-144.46669006 -385.69567871]
[-151.59606934 -398.89309692]
[-158.72544861 -412.09051514]
[-165.85482788 -425.28793335]
[-172.98422241 -438.48535156]
[-180.11360168 -451.68276978]
[-195.32728577 -455.96286011]
[-202.98553467 -469.78771973]
[-198.54484558 -484.95532227]
[-184.63978577 -492.46694946]
[-169.51998901 -487.86614990]
[-162.15577698 -473.88244629]
[-166.91618347 -458.81216431]
[-159.78680420 -445.61474609]
[-152.65740967 -432.41732788]
[-145.52803040 -419.21990967]
[-138.39865112 -406.02246094]
[-131.26925659 -392.82504272]
[-124.13987732 -379.62762451]
[-117.01049805 -366.43020630]
[-112.77906799 -364.23153687]
[-109.87991333 -359.35537720]
[-109.87211609 -352.75689697]
[-103.11905670 -339.36300659]
[-96.36600494 -325.96911621]
[-84.98377228 -321.88879395]
[-79.24616241 -310.79217529]
[-82.71113586 -298.37362671]
[-76.14829254 -284.88549805]
[-69.58544922 -271.39739990]
[-63.02260208 -257.90930176]
[-56.45975876 -244.42117310]
[-43.81611633 -241.96206665]
[-34.76041794 -232.53057861]
[-32.75828171 -219.41284180]
[-38.76156235 -207.36106873]
[-32.39024353 -193.78144836]
[-17.75237083 -191.16023254]
[-7.34165525 -180.29373169]
[-5.30192757 -165.20423889]
[-12.62310028 -151.65039062]
[-6.25178003 -138.07077026]
[0.11953978 -124.49113464]
[6.49085951 -110.91150665]
[21.12873077 -108.29029846]
[31.53944588 -97.42378998]
[33.57917404 -82.33429718]
[26.25800133 -68.78045654]
[32.62932205 -55.20082474]
[39.00064087 -41.62120056]
[45.37195969 -28.04157066]
[51.74328232 -14.46194363]
[64.15389252 -6.22629070]
[63.01093674 9.55357647]
[69.38225555 23.13320351]
[75.75357819 36.71283340]
[82.12489319 50.29245758]
[88.49621582 63.87208557]
[94.86753845 77.45171356]
[101.23885345 91.03134155]
[105.53324890 87.31646729]
[111.78840637 85.58419800]
[119.16836548 86.56777191]
[134.09483337 85.08431244]
[148.80502319 74.00151062]
[164.50096130 81.85803223]
[179.40493774 80.16349792]
[194.30891418 78.46896362]
[209.21289062 76.77443695]
[222.05064392 67.52767181]
[235.57052612 73.77765656]
[250.47450256 72.08312225]
[265.37847900 70.38859558]
[280.28244019 68.69406128]
[295.18643188 66.99952698]
[310.09042358 65.30499268]
[322.94635010 55.12379456]
[338.08972168 61.41748428]
[339.94232178 77.71165466]
[326.59832764 87.24425507]
[311.78494263 80.20896912]
[296.88095093 81.90350342]
[281.97698975 83.59803772]
[267.07299805 85.29257202]
[252.16903687 86.98710632]
[237.26506042 88.68163300]
[225.49333191 97.80718994]
[210.90742493 91.67841339]
[196.00344849 93.37294769]
[181.09947205 95.06748199]
[166.19549561 96.76200867]
[158.42448425 106.02569580]
[146.02732849 107.56356049]
[135.57829285 100.01078033]
[120.65182495 101.49423981]
[134.46223450 107.34850311]
[149.46221924 107.32604218]
[163.25218201 113.22834015]
[173.59097290 124.09615326]
[178.79833984 138.16325378]
[178.02798462 153.14346313]
[171.40509033 166.60218811]
[160.00604248 176.35214233]
[145.68338013 180.80874634]
[130.76483154 179.24772644]
[117.67494202 171.92276001]
[108.54109192 160.02433777]
[104.84770203 145.48614502]
[107.19539642 130.66996765]
[103.55303192 116.11891937]
[99.77336121 130.63491821]
[95.99369049 145.15090942]
[102.21430969 164.33105469]
[88.03661346 177.48625183]
[84.66924286 192.10339355]
[92.78643799 205.39810181]
[89.16321564 220.17398071]
[76.43872833 227.83055115]
[73.07135773 242.44769287]
[82.35482788 240.75622559]
[92.72458649 243.13375854]
[102.69149780 249.90402222]
[110.70191956 260.89724731]
[114.06929016 275.51437378]
[117.43666077 290.13153076]
[120.80403137 304.74865723]
[124.17140198 319.36581421]
[136.95539856 329.05853271]
[137.20396423 345.09963989]
[124.72640228 355.18380737]
[109.09444427 351.57528687]
[102.29959106 337.04223633]
[109.55426025 322.73318481]
[106.18688965 308.11602783]
[102.81951904 293.49890137]
[99.45214844 278.88174438]
[96.08477783 264.26461792]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 34]
[2 33]
[3 32]
[5 31]
[6 30]
[7 28]
[8 27]
[9 26]
[10 25]
[11 24]
[12 23]
[35 203]
[36 202]
[39 199]
[40 198]
[44 196]
[45 195]
[46 194]
[47 144]
[48 143]
[49 142]
[50 141]
[51 140]
[52 139]
[53 138]
[55 136]
[56 135]
[57 134]
[58 133]
[59 132]
[63 128]
[64 127]
[65 126]
[66 125]
[70 121]
[71 120]
[74 116]
[75 115]
[76 114]
[77 113]
[78 112]
[80 109]
[81 108]
[82 107]
[83 104]
[84 103]
[85 102]
[86 101]
[87 100]
[88 99]
[89 98]
[90 97]
[147 179]
[148 178]
[150 175]
[151 174]
[152 173]
[153 172]
[155 170]
[156 169]
[157 168]
[158 167]
[159 166]
[160 165]
[207 221]
[208 220]
[209 219]
[210 218]
[211 217]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
