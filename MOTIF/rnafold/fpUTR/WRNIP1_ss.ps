%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:03:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCGAGGGCGGGCGGACGCGGGAGCUGCGGACGUGAGGCAUGAGCGGCGCCCUCCUCCGGCCCGCGAGCGUCCUGCUGGUUCCCCGAGCGAGGGUCUCGCGGCGCGGGGCCUAGCGGAGGGCAUCGAAGGCCUCCGCGUGCGCACGGGUUGCUGCGGCCGCGCCGGGCGCCGGGGAGGGCGGCGGCCGCC\
) } def
/len { sequence length } bind def

/coor [
[82.35530853 193.85394287]
[81.61929321 178.87200928]
[80.88327789 163.89007568]
[80.14726257 148.90814209]
[79.41124725 133.92620850]
[69.76110077 121.40061188]
[66.32410431 107.05225372]
[68.88526154 93.59477234]
[76.16671753 83.25444794]
[86.18030548 77.40197754]
[82.29801941 62.91308975]
[78.41573334 48.42420197]
[74.41504669 33.96756363]
[70.29621124 19.54413605]
[66.17738342 5.12070847]
[62.05855560 -9.30271816]
[50.82929230 -20.44786263]
[54.77442169 -34.81049728]
[50.65559387 -49.23392105]
[46.53676224 -63.65734863]
[42.41793442 -78.08078003]
[38.29910660 -92.50420380]
[27.06984329 -103.64934540]
[31.01497078 -118.01197815]
[26.89614105 -132.43540955]
[22.77731133 -146.85884094]
[18.65848351 -161.28225708]
[14.18692589 -175.60026550]
[9.36533356 -189.80421448]
[4.54374170 -204.00816345]
[-7.21886110 -214.58889771]
[-3.98322582 -229.12780762]
[-8.80481815 -243.33175659]
[-13.62640953 -257.53570557]
[-18.44800186 -271.73965454]
[-23.26959419 -285.94360352]
[-28.20722961 -300.10763550]
[-33.26057816 -314.23080444]
[-38.31392288 -328.35397339]
[-43.36727142 -342.47711182]
[-55.74079132 -344.38073730]
[-66.06731415 -351.32965088]
[-72.41691589 -361.95101929]
[-73.63458252 -374.19299316]
[-69.54988098 -385.72082520]
[-60.99773788 -394.36233521]
[-65.58628082 -408.64324951]
[-70.17482758 -422.92419434]
[-81.76274109 -433.69598389]
[-78.28964996 -448.17999268]
[-82.87819672 -462.46093750]
[-87.46674347 -476.74188232]
[-92.05529022 -491.02282715]
[-96.64383698 -505.30374146]
[-101.23238373 -519.58471680]
[-105.82092285 -533.86566162]
[-111.10467529 -547.90423584]
[-117.07089996 -561.66662598]
[-123.03713226 -575.42907715]
[-135.62506104 -585.01312256]
[-133.58837891 -599.76782227]
[-139.55461121 -613.53027344]
[-145.63322449 -627.24340820]
[-151.82383728 -640.90637207]
[-158.01443481 -654.56933594]
[-164.20504761 -668.23229980]
[-170.39564514 -681.89526367]
[-176.58625793 -695.55816650]
[-182.77685547 -709.22113037]
[-194.56002808 -714.49285889]
[-199.43083191 -726.01318359]
[-195.27746582 -737.38507080]
[-201.24369812 -751.14746094]
[-207.20991516 -764.90991211]
[-213.17614746 -778.67230225]
[-219.25477600 -792.38543701]
[-225.44537354 -806.04840088]
[-231.63598633 -819.71136475]
[-237.93815613 -833.32324219]
[-244.35148621 -846.88305664]
[-258.13656616 -855.76580811]
[-257.06628418 -872.13000488]
[-242.24162292 -879.14154053]
[-228.91294861 -869.58758545]
[-230.79164124 -853.29638672]
[-224.37831116 -839.73657227]
[-218.66720581 -835.02655029]
[-217.97302246 -825.90197754]
[-211.78240967 -812.23901367]
[-205.59181213 -798.57604980]
[-199.95852661 -793.77319336]
[-199.41372681 -784.63854980]
[-193.44750977 -770.87615967]
[-187.48127747 -757.11370850]
[-181.51504517 -743.35131836]
[-166.87826538 -733.68218994]
[-169.11390686 -715.41174316]
[-162.92329407 -701.74877930]
[-156.73269653 -688.08581543]
[-150.54208374 -674.42291260]
[-144.35148621 -660.75994873]
[-138.16087341 -647.09698486]
[-131.97027588 -633.43402100]
[-126.33698273 -628.63116455]
[-125.79219055 -619.49645996]
[-119.82596588 -605.73406982]
[-107.66477966 -597.13433838]
[-109.27471161 -581.39526367]
[-103.30848694 -567.63287354]
[-97.34226227 -553.87042236]
[-90.74040985 -567.33953857]
[-76.59790802 -572.33850098]
[-62.99822617 -566.01007080]
[-57.71456146 -551.97149658]
[-63.76691437 -538.24670410]
[-77.69592285 -532.68048096]
[-91.53998566 -538.45416260]
[-86.95143890 -524.17321777]
[-82.36289215 -509.89230347]
[-77.77435303 -495.61135864]
[-73.18580627 -481.33041382]
[-68.59725952 -467.04946899]
[-64.00871277 -452.76852417]
[-52.74900818 -443.01824951]
[-55.89388657 -427.51275635]
[-51.30534363 -413.23181152]
[-46.71679688 -398.95086670]
[-29.71116447 -394.23568726]
[-18.83484459 -380.13967896]
[-18.58281898 -362.18011475]
[-29.24411201 -347.53048706]
[-24.19076347 -333.40731812]
[-19.13741493 -319.28414917]
[-14.08406830 -305.16098022]
[-8.86211491 -299.91384888]
[-9.06564140 -290.76519775]
[-4.24405003 -276.56124878]
[0.57754213 -262.35729980]
[5.39913416 -248.15335083]
[10.22072601 -233.94940186]
[21.63845634 -224.38462830]
[18.74769402 -208.82975769]
[23.56928635 -194.62580872]
[28.39087677 -180.42185974]
[31.39097023 -178.54061890]
[33.62253571 -175.10493469]
[34.36138153 -170.49487305]
[33.08190918 -165.40109253]
[37.20074081 -150.97766113]
[41.31956863 -136.55422974]
[45.43839645 -122.13080597]
[56.37305450 -112.01732635]
[52.72253036 -96.62303162]
[56.84136200 -82.19960785]
[60.96018982 -67.77617645]
[65.07901764 -53.35275269]
[69.19784546 -38.92932510]
[80.13250732 -28.81584167]
[76.48198700 -13.42154789]
[80.60081482 1.00187910]
[84.71964264 15.42530632]
[88.83847046 29.84873390]
[93.70606232 35.42617416]
[92.90462494 44.54191589]
[96.78691101 59.03080368]
[100.66919708 73.51969147]
[119.56254578 76.09725952]
[134.40209961 92.15100861]
[135.96731567 116.77011871]
[143.67886353 129.63604736]
[151.39039612 142.50196838]
[159.10194397 155.36790466]
[174.49156189 158.96443176]
[182.75946045 172.43356323]
[179.00042725 187.78430176]
[165.44464111 195.90933228]
[150.13449097 191.98820496]
[142.15324402 178.34727478]
[146.23600769 163.07945251]
[138.52447510 150.21351624]
[130.81292725 137.34757996]
[123.10138702 124.48165894]
[115.92433929 126.65879059]
[94.39318085 133.19020081]
[95.12919617 148.17213440]
[95.86521149 163.15406799]
[96.60122681 178.13598633]
[97.33724213 193.11791992]
[106.67371368 206.59985352]
[99.42258453 221.30879211]
[83.04319000 222.11346436]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 188]
[2 187]
[3 186]
[4 185]
[5 184]
[10 166]
[11 165]
[12 164]
[13 162]
[14 161]
[15 160]
[16 159]
[18 157]
[19 156]
[20 155]
[21 154]
[22 153]
[24 151]
[25 150]
[26 149]
[27 148]
[28 144]
[29 143]
[30 142]
[32 140]
[33 139]
[34 138]
[35 137]
[36 136]
[37 134]
[38 133]
[39 132]
[40 131]
[46 127]
[47 126]
[48 125]
[50 123]
[51 122]
[52 121]
[53 120]
[54 119]
[55 118]
[56 117]
[57 110]
[58 109]
[59 108]
[61 106]
[62 105]
[63 103]
[64 102]
[65 101]
[66 100]
[67 99]
[68 98]
[69 97]
[72 95]
[73 94]
[74 93]
[75 92]
[76 90]
[77 89]
[78 88]
[79 86]
[80 85]
[169 182]
[170 181]
[171 180]
[172 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
