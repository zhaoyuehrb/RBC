%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:07:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGCCGCCAGCUCGGCCGCACGUCAGGGCGCGGGAGCGCGGAGCGAGUUUGGUUGCACUUACACCGGUACUUAAGCGCGGACCGGCGUGUCCUUGGACUUAGAGAGUGGGGACGUCCGGCUUCGGAGCGGGAGUGUUCGUUGUGCCAGCGACUAAAAAGAGAAUUAAAU\
) } def
/len { sequence length } bind def

/coor [
[-114.22185516 385.91238403]
[-125.44248199 395.86715698]
[-126.99786377 408.69625854]
[-136.58052063 416.75637817]
[-148.68476868 416.13119507]
[-160.08638000 425.87817383]
[-171.48800659 435.62512207]
[-182.88961792 445.37207031]
[-181.80500793 460.73858643]
[-189.88226318 473.64639282]
[-203.84611511 479.25662231]
[-218.26333618 475.61221313]
[-229.66494751 485.35916138]
[-241.06657410 495.10610962]
[-252.46818542 504.85308838]
[-263.77978516 514.70434570]
[-275.00039673 524.65911865]
[-286.22103882 534.61389160]
[-283.74557495 549.84136963]
[-289.91662598 563.98071289]
[-302.76501465 572.52020264]
[-318.19088745 572.73480225]
[-331.27188110 564.55615234]
[-337.83392334 550.59393311]
[-335.78308105 535.30352783]
[-325.77377319 523.56396484]
[-310.99990845 519.12133789]
[-296.17581177 523.39324951]
[-284.95516968 513.43847656]
[-273.73455811 503.48373413]
[-270.80667114 496.66650391]
[-262.21514893 493.45147705]
[-250.81352234 483.70449829]
[-239.41191101 473.95755005]
[-228.01029968 464.21060181]
[-229.36810303 449.40200806]
[-221.65438843 436.48059082]
[-207.64741516 430.50915527]
[-192.63656616 433.97045898]
[-181.23495483 424.22351074]
[-169.83334351 414.47653198]
[-158.43173218 404.72958374]
[-153.50315857 387.90377808]
[-135.39724731 384.64651489]
[-124.17662811 374.69174194]
[-129.14082336 351.82925415]
[-119.53018188 330.37170410]
[-98.96463013 318.73861694]
[-75.39172363 321.58401489]
[-66.39754486 309.57965088]
[-57.40336609 297.57528687]
[-48.40919113 285.57092285]
[-39.41501236 273.56655884]
[-30.42083359 261.56219482]
[-21.42665482 249.55783081]
[-12.43247700 237.55346680]
[-3.43829870 225.54910278]
[-8.00159454 211.39585876]
[-3.30025125 197.10035706]
[9.06185818 188.21038818]
[24.46631050 188.30532837]
[33.46049118 176.30096436]
[42.45466614 164.29660034]
[51.44884491 152.29223633]
[52.88817596 137.46734619]
[67.35501862 131.06256104]
[76.34919739 119.05820465]
[85.34337616 107.05384064]
[86.89365387 90.36687469]
[102.35700226 83.90596771]
[111.12912750 71.73839569]
[119.90126038 59.57082748]
[128.67338562 47.40325928]
[126.34678650 32.00115967]
[135.41630554 19.78647614]
[150.11419678 17.66333580]
[158.88632202 5.49576616]
[160.30055237 -12.84636307]
[176.54338074 -19.44706535]
[185.09049988 -31.77373314]
[193.63761902 -44.10039902]
[202.18473816 -56.42706680]
[210.61827087 -68.83172607]
[218.93750000 -81.31333160]
[227.25672913 -93.79493713]
[235.57595825 -106.27654266]
[243.78018188 -118.83403778]
[251.86869812 -131.46636963]
[259.95721436 -144.09869385]
[260.88275146 -159.89280701]
[274.26174927 -166.43891907]
[282.35028076 -179.07125854]
[290.43881226 -191.70358276]
[290.47744751 -196.13221741]
[291.80996704 -199.92362976]
[294.07040405 -202.74508667]
[296.82177734 -204.41967773]
[299.61389160 -204.93591309]
[308.60806274 -216.94027710]
[317.60223389 -228.94464111]
[326.59643555 -240.94900513]
[331.25491333 -257.25036621]
[348.20883179 -257.28659058]
[352.93695068 -241.00527954]
[338.60079956 -231.95481873]
[329.60659790 -219.95045471]
[320.61242676 -207.94609070]
[311.61825562 -195.94172668]
[303.07113647 -183.61506653]
[294.98260498 -170.98272705]
[286.89407349 -158.35040283]
[286.54708862 -143.45983887]
[272.58956909 -136.01017761]
[264.50103760 -123.37784576]
[256.41250610 -110.74551392]
[255.45010376 -103.38883209]
[248.05755615 -97.95731354]
[239.73832703 -85.47570801]
[231.41909790 -72.99410248]
[223.09986877 -60.51250076]
[222.00248718 -53.17474365]
[214.51141357 -47.87994766]
[205.96429443 -35.55327988]
[197.41716003 -23.22661209]
[188.87004089 -10.89994526]
[190.71302795 1.07950258]
[183.66065979 11.42633724]
[171.05389404 14.26789570]
[162.28176880 26.43546486]
[164.91191101 41.05113983]
[156.18905640 53.51574707]
[140.84095764 56.17538834]
[132.06883240 68.34295654]
[123.29669952 80.51052856]
[114.52456665 92.67809296]
[115.68974304 104.29013824]
[108.77815247 113.69370270]
[97.34774017 116.04801941]
[88.35356140 128.05238342]
[79.35938263 140.05674744]
[77.27672577 155.74028015]
[63.45320892 161.28642273]
[54.45903015 173.29078674]
[45.46485519 185.29515076]
[36.47067642 197.29951477]
[40.88939285 212.05691528]
[35.83033752 226.41865540]
[23.43130112 234.94671631]
[8.56606579 234.54328918]
[-0.42811266 246.54765320]
[-9.42229080 258.55200195]
[-18.41646957 270.55636597]
[-27.41064644 282.56072998]
[-36.40482330 294.56509399]
[-45.39900208 306.56945801]
[-54.39318085 318.57382202]
[-63.38735962 330.57818604]
[-59.01905441 336.63235474]
[-55.91918945 343.41323853]
[-54.20331955 350.65893555]
[-53.93363571 358.09045410]
[-55.11669159 365.42227173]
[-57.70332718 372.37353516]
[-61.59067535 378.67868042]
[-66.62626648 384.09765625]
[-72.61398315 388.42498779]
[-79.32173920 391.49761963]
[-86.49040985 393.20101929]
[-93.84390259 393.47348022]
[-101.09976196 392.30838013]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 45]
[2 44]
[5 42]
[6 41]
[7 40]
[8 39]
[12 35]
[13 34]
[14 33]
[15 32]
[16 30]
[17 29]
[18 28]
[49 157]
[50 156]
[51 155]
[52 154]
[53 153]
[54 152]
[55 151]
[56 150]
[57 149]
[61 145]
[62 144]
[63 143]
[64 142]
[66 140]
[67 139]
[68 138]
[70 135]
[71 134]
[72 133]
[73 132]
[76 129]
[77 128]
[79 125]
[80 124]
[81 123]
[82 122]
[83 120]
[84 119]
[85 118]
[86 117]
[87 115]
[88 114]
[89 113]
[91 111]
[92 110]
[93 109]
[98 108]
[99 107]
[100 106]
[101 105]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
