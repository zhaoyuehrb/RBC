%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:52:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCUGGGCUUCGGCUCGGGGCCUAUGAGAGCCGGGCUCCGGGGGGCGGGCCGGACUGUGGCGGCUGCCGGGGGCGGUGGCGGUGGUGGCGGCGGCGGCGGAGGCGGACUGGGGAGGCGGCGGCCUGGCUCGGCCUGGCCUGGCCUGUCAGGGCGCGGGCGGCGGCGGCUCCAGCACC\
) } def
/len { sequence length } bind def

/coor [
[121.64427185 662.12152100]
[131.48501587 649.45111084]
[130.95564270 634.46044922]
[130.42626953 619.46978760]
[129.89689636 604.47912598]
[129.36752319 589.48846436]
[128.70588684 574.50305176]
[127.91203308 559.52410889]
[127.11817932 544.54510498]
[126.19217682 529.57373047]
[125.13409424 514.61108398]
[124.07601166 499.64843750]
[122.75402069 484.70681763]
[121.16854095 469.79083252]
[119.58306122 454.87487793]
[117.99758911 439.95889282]
[116.41210938 425.04290771]
[107.19163513 417.18374634]
[105.76437378 404.74871826]
[113.44040680 394.35882568]
[112.11841583 379.41717529]
[110.79643250 364.47555542]
[109.47444153 349.53393555]
[105.74163818 343.12887573]
[108.26335907 334.31729126]
[107.20527649 319.35467529]
[106.14718628 304.39202881]
[97.53139496 292.24224854]
[104.27597046 277.93066406]
[103.21788788 262.96801758]
[102.02780151 248.01531982]
[100.70581818 233.07368469]
[99.38382721 218.13204956]
[98.06184387 203.19042969]
[96.73985291 188.24879456]
[95.41786957 173.30715942]
[94.09587860 158.36552429]
[92.00308990 156.45768738]
[90.55178070 153.59350586]
[90.11469269 150.01747131]
[90.96763611 146.10598755]
[93.24599457 142.32928467]
[92.98126984 127.33162689]
[92.71654510 112.33396149]
[85.67828369 100.25279236]
[92.28579712 87.93076324]
[92.02106476 72.93309784]
[91.75634003 57.93543625]
[91.49161530 42.93777466]
[91.22688293 27.94010925]
[90.96215820 12.94244576]
[90.69743347 -2.05521798]
[90.43270111 -17.05288124]
[82.45305634 -30.71435356]
[89.96453857 -43.57619476]
[89.69980621 -58.57385635]
[89.43508148 -73.57152557]
[89.17035675 -88.56918335]
[81.19070435 -102.23065948]
[88.70218658 -115.09249878]
[88.43745422 -130.09016418]
[87.37937164 -145.05279541]
[85.53089905 -159.93846130]
[83.55113220 -174.80725098]
[81.44023895 -189.65797424]
[79.32933807 -204.50869751]
[77.21843719 -219.35942078]
[75.10754395 -234.21015930]
[62.46639633 -239.74754333]
[54.28330231 -250.72567749]
[52.61439133 -264.20684814]
[57.79018402 -276.64898682]
[68.35689545 -284.83627319]
[66.50841522 -299.72195435]
[57.12947083 -312.46343994]
[63.23939514 -326.04721069]
[61.39091873 -340.93286133]
[52.01197433 -353.67437744]
[58.12189484 -367.25811768]
[56.27341843 -382.14379883]
[46.89447403 -394.88528442]
[53.00439835 -408.46902466]
[51.15592194 -423.35470581]
[40.84239960 -436.10473633]
[46.97924423 -451.31234741]
[63.25339508 -453.33322144]
[72.92340088 -440.08850098]
[66.04158783 -425.20318604]
[67.89006805 -410.31750488]
[77.13679504 -398.64071655]
[71.15908813 -383.99224854]
[73.00756073 -369.10659790]
[82.25429535 -357.42980957]
[76.27658844 -342.78134155]
[78.12506104 -327.89566040]
[87.37179565 -316.21890259]
[81.39408875 -301.57043457]
[83.24256134 -286.68475342]
[97.84859467 -279.22232056]
[105.21206665 -264.38058472]
[102.25976562 -247.90908813]
[89.95827484 -236.32104492]
[92.06916809 -221.47032166]
[94.18006897 -206.61959839]
[96.29096222 -191.76887512]
[98.40186310 -176.91813660]
[102.46841431 -170.71961975]
[100.41656494 -161.78694153]
[102.26504517 -146.90127563]
[112.46183014 -157.90243530]
[127.44394684 -158.63456726]
[138.66476440 -148.68000793]
[139.72329712 -133.71740723]
[130.01570129 -122.28225708]
[115.07973480 -120.89781189]
[103.43511963 -130.35488892]
[103.69985199 -115.35722351]
[111.66056061 -102.76848602]
[104.16801453 -88.83391571]
[104.43274689 -73.83625031]
[104.69747162 -58.83858490]
[104.96219635 -43.84092331]
[112.92291260 -31.25218391]
[105.43036652 -17.31760979]
[105.69509888 -2.31994510]
[105.95982361 12.67771912]
[106.22454834 27.67538261]
[106.48928070 42.67304611]
[106.75400543 57.67071152]
[107.01873016 72.66837311]
[107.28345490 87.66603851]
[114.32171631 99.74720764]
[107.71420288 112.06923676]
[107.97893524 127.06690216]
[108.24365997 142.06455994]
[109.03751373 157.04354858]
[110.35949707 171.98516846]
[111.68148804 186.92680359]
[113.00347137 201.86843872]
[114.32546234 216.81007385]
[115.64744568 231.75169373]
[116.96943665 246.69332886]
[120.85320282 254.99508667]
[118.18051910 261.90994263]
[119.23860931 276.87258911]
[127.93008423 290.09259033]
[121.10982513 303.33395386]
[122.16790771 318.29656982]
[123.22599030 333.25921631]
[124.41607666 348.21194458]
[125.73806000 363.15356445]
[127.06005096 378.09518433]
[128.38203430 393.03683472]
[139.30784607 407.84207153]
[131.32807922 423.45745850]
[132.91355896 438.37341309]
[134.49903870 453.28939819]
[136.08451843 468.20535278]
[137.66999817 483.12133789]
[141.27380371 488.72235107]
[141.45732117 494.44042969]
[139.03865051 498.59036255]
[140.09672546 513.55297852]
[141.15481567 528.51562500]
[144.89146423 536.88464355]
[142.09716797 543.75128174]
[142.89100647 558.73022461]
[143.68486023 573.70922852]
[147.27322388 582.14288330]
[144.35818481 588.95910645]
[144.88755798 603.94976807]
[145.41691589 618.94042969]
[145.94628906 633.93109131]
[146.47566223 648.92169189]
[157.18565369 660.86639404]
[154.38249207 676.66265869]
[140.21653748 684.19293213]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 174]
[3 173]
[4 172]
[5 171]
[6 170]
[7 168]
[8 167]
[9 166]
[10 164]
[11 163]
[12 162]
[13 159]
[14 158]
[15 157]
[16 156]
[17 155]
[20 153]
[21 152]
[22 151]
[23 150]
[25 149]
[26 148]
[27 147]
[29 145]
[30 144]
[31 142]
[32 141]
[33 140]
[34 139]
[35 138]
[36 137]
[37 136]
[42 135]
[43 134]
[44 133]
[46 131]
[47 130]
[48 129]
[49 128]
[50 127]
[51 126]
[52 125]
[53 124]
[55 122]
[56 121]
[57 120]
[58 119]
[60 117]
[61 116]
[62 109]
[63 108]
[64 106]
[65 105]
[66 104]
[67 103]
[68 102]
[73 98]
[74 97]
[76 95]
[77 94]
[79 92]
[80 91]
[82 89]
[83 88]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
