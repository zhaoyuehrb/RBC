%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:45:21 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PPIE)
} def

/sequence { (\
AGUGGGGAAGAGGACGGGUCGAGUGCUGGCUUCCGGCGGAAAAGCGCGCGAGCAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 27 0.030300694 ubox
1 31 0.031856498 ubox
2 15 0.094683559 ubox
2 26 0.032191805 ubox
2 30 0.039293173 ubox
2 37 0.300431494 ubox
2 45 0.013534723 ubox
2 47 0.013661484 ubox
2 49 0.113629755 ubox
2 53 0.101960023 ubox
3 14 0.094387021 ubox
3 16 0.045244551 ubox
3 21 0.016698159 ubox
3 23 0.003459122 ubox
3 25 0.031989532 ubox
3 28 0.009833353 ubox
3 29 0.039273909 ubox
3 35 0.108676348 ubox
3 36 0.299650096 ubox
3 38 0.041058787 ubox
3 44 0.013418632 ubox
3 46 0.013358477 ubox
3 48 0.112222156 ubox
3 50 0.030438456 ubox
3 52 0.097206017 ubox
3 54 0.079245736 ubox
4 15 0.059556836 ubox
4 20 0.021966830 ubox
4 24 0.027644800 ubox
4 27 0.015549355 ubox
4 31 0.005834739 ubox
4 32 0.012262763 ubox
4 33 0.046535327 ubox
4 34 0.146457740 ubox
4 37 0.054065608 ubox
4 45 0.007596784 ubox
4 47 0.086131676 ubox
4 49 0.041264510 ubox
4 53 0.087532884 ubox
5 19 0.020592815 ubox
5 20 0.016807485 ubox
5 26 0.016071816 ubox
5 27 0.040777497 ubox
5 30 0.006566205 ubox
5 31 0.017433288 ubox
5 32 0.047170053 ubox
5 33 0.146585550 ubox
5 34 0.294265826 ubox
6 19 0.015998597 ubox
6 20 0.011635765 ubox
6 26 0.040921118 ubox
6 27 0.011395773 ubox
6 30 0.018788884 ubox
6 31 0.051203565 ubox
6 32 0.140956845 ubox
6 33 0.279097226 ubox
6 34 0.814237790 ubox
7 19 0.009714872 ubox
7 20 0.025546180 ubox
7 26 0.012072057 ubox
7 30 0.054570488 ubox
7 31 0.123247396 ubox
7 32 0.257860122 ubox
7 33 0.825290796 ubox
8 19 0.024371388 ubox
8 31 0.231762150 ubox
8 32 0.830132445 ubox
9 27 0.013016487 ubox
9 31 0.830075755 ubox
9 32 0.005297623 ubox
10 20 0.062975450 ubox
10 26 0.012865764 ubox
10 30 0.826641013 ubox
10 31 0.005875712 ubox
10 32 0.032072007 ubox
10 33 0.154852019 ubox
11 19 0.062437203 ubox
11 27 0.805388913 ubox
11 31 0.045201411 ubox
11 32 0.156496670 ubox
12 20 0.028784139 ubox
12 26 0.859433536 ubox
12 27 0.261881223 ubox
12 30 0.050011828 ubox
12 31 0.160871091 ubox
12 33 0.004602327 ubox
12 34 0.057966190 ubox
13 19 0.024579410 ubox
13 20 0.048018323 ubox
13 26 0.262859974 ubox
13 30 0.160091759 ubox
13 32 0.004285278 ubox
13 33 0.058520661 ubox
14 19 0.042666217 ubox
14 24 0.893654139 ubox
14 31 0.003390258 ubox
14 32 0.054456461 ubox
15 21 0.039359493 ubox
15 23 0.895904353 ubox
15 25 0.116345408 ubox
15 28 0.229983595 ubox
15 35 0.040581588 ubox
15 46 0.005675507 ubox
15 48 0.073616859 ubox
15 50 0.048293725 ubox
16 20 0.044134091 ubox
16 24 0.110983604 ubox
16 27 0.236383573 ubox
16 31 0.006085348 ubox
16 32 0.026356196 ubox
16 33 0.005635725 ubox
16 34 0.040952618 ubox
16 45 0.006843495 ubox
16 47 0.075186834 ubox
16 49 0.049306642 ubox
17 26 0.236466871 ubox
17 27 0.052149297 ubox
17 30 0.004755488 ubox
17 31 0.064484278 ubox
17 32 0.004066340 ubox
17 33 0.040442690 ubox
17 34 0.006641991 ubox
18 24 0.006658811 ubox
18 26 0.054206987 ubox
18 30 0.072574821 ubox
18 32 0.021265106 ubox
18 33 0.006891352 ubox
18 37 0.003696637 ubox
18 45 0.075849662 ubox
18 47 0.049216450 ubox
18 49 0.005595658 ubox
18 53 0.168574826 ubox
19 23 0.007140546 ubox
19 25 0.053866575 ubox
19 29 0.073056252 ubox
19 36 0.003707137 ubox
19 40 0.005291397 ubox
19 44 0.074398200 ubox
19 46 0.025591123 ubox
19 48 0.005159507 ubox
19 51 0.258015192 ubox
19 52 0.089345223 ubox
20 28 0.073257041 ubox
20 35 0.003866255 ubox
20 39 0.006016737 ubox
20 46 0.041878327 ubox
20 50 0.284484791 ubox
21 27 0.063752024 ubox
21 32 0.027002108 ubox
21 34 0.003478514 ubox
21 45 0.042763815 ubox
21 49 0.283949664 ubox
22 31 0.034396501 ubox
23 30 0.034703763 ubox
23 45 0.003895035 ubox
23 47 0.284881878 ubox
23 49 0.016141439 ubox
24 29 0.034303760 ubox
24 38 0.089910741 ubox
24 44 0.003614320 ubox
24 46 0.285174330 ubox
24 48 0.016292864 ubox
24 50 0.006335979 ubox
24 54 0.127406295 ubox
25 37 0.093014004 ubox
25 45 0.285276557 ubox
25 47 0.016372998 ubox
25 49 0.008948960 ubox
25 53 0.143676732 ubox
26 36 0.093038627 ubox
26 44 0.285267142 ubox
26 46 0.016285536 ubox
26 48 0.008953872 ubox
26 52 0.143709061 ubox
26 56 0.030187391 ubox
27 35 0.093028461 ubox
27 38 0.003840217 ubox
27 43 0.281955245 ubox
27 51 0.143199494 ubox
27 54 0.011588733 ubox
27 55 0.030419467 ubox
28 34 0.093289386 ubox
28 37 0.005094360 ubox
28 45 0.003588539 ubox
28 49 0.003166796 ubox
28 53 0.015108854 ubox
29 33 0.091786166 ubox
29 37 0.027096773 ubox
29 45 0.020147821 ubox
29 49 0.143444298 ubox
29 53 0.269739803 ubox
30 36 0.027323402 ubox
30 39 0.024894676 ubox
30 44 0.020326062 ubox
30 48 0.143084112 ubox
30 52 0.270178171 ubox
30 56 0.005116384 ubox
31 35 0.024716534 ubox
31 38 0.023567097 ubox
31 39 0.004935356 ubox
31 40 0.046018201 ubox
31 41 0.246231011 ubox
31 42 0.011160744 ubox
31 43 0.017569817 ubox
31 51 0.253609337 ubox
31 52 0.024232330 ubox
31 55 0.005361807 ubox
32 38 0.004810120 ubox
32 39 0.046683908 ubox
32 40 0.277771150 ubox
32 41 0.008275223 ubox
32 42 0.007653450 ubox
32 50 0.217735527 ubox
32 51 0.095544772 ubox
32 54 0.005172587 ubox
33 38 0.046432721 ubox
33 39 0.279394093 ubox
33 50 0.128423161 ubox
34 38 0.277369323 ubox
34 46 0.038205592 ubox
34 48 0.217384273 ubox
34 50 0.197503890 ubox
35 45 0.032398443 ubox
35 47 0.208893382 ubox
35 49 0.368481972 ubox
36 45 0.365157930 ubox
36 47 0.664752579 ubox
36 49 0.468556873 ubox
36 53 0.020028485 ubox
37 44 0.366484598 ubox
37 46 0.671064953 ubox
37 48 0.469542834 ubox
37 50 0.010509186 ubox
37 52 0.019954612 ubox
38 45 0.671352538 ubox
38 47 0.469374908 ubox
38 49 0.012170885 ubox
44 53 0.237173342 ubox
45 52 0.237362082 ubox
46 53 0.352307643 ubox
47 52 0.352575411 ubox
6 34 0.9500000 lbox
7 33 0.9500000 lbox
8 32 0.9500000 lbox
9 31 0.9500000 lbox
10 30 0.9500000 lbox
11 27 0.9500000 lbox
12 26 0.9500000 lbox
14 24 0.9500000 lbox
15 23 0.9500000 lbox
36 47 0.9500000 lbox
37 46 0.9500000 lbox
38 45 0.9500000 lbox
showpage
end
%%EOF
