%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:32:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUUUGCAAGGAGAGCUGAGACGGGCUGCUCCACUGUACUUUGUUGGCUGAGAAGUUGAGCAGGGGGUGGGGGUGGGAGGGUGGGGGGCUGGGGGGGUCGCGUCCGAAAGCCCUCACACCGGUCCGGGUGCCACCUCUCCCUGCUUGGGCGCCGCCGCGCGAGCGCUUCCCUUCCCCCUGCAAGCGCCCGGAUAAUGUCUGAGA\
) } def
/len { sequence length } bind def

/coor [
[-100.31932831 435.09707642]
[-97.68930817 420.32992554]
[-95.05943298 405.56225586]
[-92.42956543 390.79458618]
[-99.81339264 389.47964478]
[-108.99791718 401.33901978]
[-118.18243408 413.19839478]
[-127.36695862 425.05776978]
[-129.42568970 443.35427856]
[-145.91175842 449.36306763]
[-154.91346741 461.36178589]
[-163.91517639 473.36050415]
[-172.91687012 485.35922241]
[-181.82638550 497.42657471]
[-190.64315796 509.56182861]
[-199.45994568 521.69708252]
[-208.27671814 533.83233643]
[-205.55714417 549.40087891]
[-214.71096802 562.28430176]
[-230.30740356 564.83911133]
[-243.09333801 555.54962158]
[-245.48312378 539.92706299]
[-236.05892944 527.24005127]
[-220.41197205 525.01556396]
[-211.59519958 512.88031006]
[-202.77841187 500.74505615]
[-193.96163940 488.60980225]
[-192.57263184 481.34719849]
[-184.91558838 476.35751343]
[-175.91389465 464.35879517]
[-166.91218567 452.36007690]
[-157.91047668 440.36135864]
[-159.30799866 428.34280396]
[-151.90263367 418.27203369]
[-139.22631836 415.87322998]
[-130.04180908 404.01385498]
[-120.85727692 392.15451050]
[-111.67276001 380.29513550]
[-120.31320190 368.03369141]
[-121.27265930 353.06442261]
[-114.26828766 339.80023193]
[-101.36496735 332.15142822]
[-86.36660004 332.37283325]
[-73.69470215 340.39923096]
[-67.08494568 353.86441040]
[-68.48641968 368.80023193]
[-62.03739929 355.25732422]
[-55.58837891 341.71441650]
[-70.05847168 345.66619873]
[-83.15447998 338.35220337]
[-87.37933350 323.95947266]
[-80.31443787 310.72741699]
[-66.00422668 306.23098755]
[-52.64086151 313.04425049]
[-47.87440872 327.26596069]
[-40.20912933 314.37240601]
[-32.54384995 301.47888184]
[-35.22014999 289.67904663]
[-28.93560791 278.87326050]
[-16.58900070 275.13104248]
[-8.72703743 262.35647583]
[-0.86507350 249.58189392]
[6.99689054 236.80732727]
[14.85885429 224.03276062]
[22.72081757 211.25820923]
[30.58278275 198.48364258]
[38.44474792 185.70907593]
[38.52612686 170.81468201]
[52.34859848 163.11729431]
[60.21056366 150.34272766]
[68.07252502 137.56816101]
[75.93449402 124.79360199]
[83.79645538 112.01903534]
[79.23963928 88.07130432]
[103.05483246 72.45662689]
[105.57147217 57.66925430]
[108.08811188 42.88187408]
[110.60475159 28.09449768]
[113.12139130 13.30712128]
[115.52465057 -1.49910522]
[117.81439209 -16.32331085]
[120.10412598 -31.14751816]
[122.39386749 -45.97172546]
[124.68360901 -60.79592896]
[89.52641296 -88.12644958]
[88.14911652 -103.06307983]
[86.77182770 -117.99971771]
[85.39453125 -132.93635559]
[84.01724243 -147.87298584]
[82.63994598 -162.80961609]
[69.46615601 -170.79444885]
[63.58881378 -184.84115601]
[67.06850433 -199.48205566]
[78.36686707 -209.15081787]
[76.98957825 -224.08744812]
[75.61228180 -239.02409363]
[63.29938126 -248.93206787]
[61.68193436 -264.65338135]
[71.71954346 -276.86083984]
[87.45706940 -278.31198120]
[99.55771637 -268.14587402]
[100.84239197 -252.39387512]
[90.54891968 -240.40138245]
[91.92620850 -225.46475220]
[93.30350494 -210.52810669]
[106.17942047 -203.08843994]
[112.27771759 -189.33071899]
[109.06810760 -174.44610596]
[97.57658386 -164.18692017]
[98.95387268 -149.25027466]
[100.33116913 -134.31364441]
[101.70845795 -119.37700653]
[103.08575439 -104.44037628]
[104.46304321 -89.50373840]
[111.67950439 -87.46102142]
[126.11242676 -83.37558746]
[133.32888794 -81.33287811]
[142.33059692 -93.33159637]
[151.33230591 -105.33031464]
[160.33401489 -117.32903290]
[157.85333252 -132.93742371]
[167.20352173 -145.67907715]
[182.83726501 -147.99458313]
[195.47933960 -138.51022339]
[197.62944031 -122.85286713]
[188.01193237 -110.31176758]
[172.33273315 -108.32732391]
[163.33102417 -96.32860565]
[154.32931519 -84.32988739]
[145.32760620 -72.33116913]
[139.50781250 -58.50619125]
[137.21807861 -43.68198395]
[134.92832947 -28.85777855]
[132.63859558 -14.03357220]
[130.34886169 0.79063410]
[132.43559265 7.88431978]
[127.90876770 15.82376099]
[125.39212799 30.61113930]
[122.87548828 45.39851379]
[120.35884857 60.18589401]
[117.84220886 74.97326660]
[127.56205750 86.39800262]
[142.56161499 86.28306580]
[157.56117249 86.16812897]
[172.56074524 86.05319214]
[187.56030273 85.93825531]
[202.55986023 85.82332611]
[216.30033875 77.98050690]
[229.08651733 85.62006378]
[244.08609009 85.50512695]
[259.08563232 85.39019012]
[272.94265747 76.62005615]
[287.33868408 84.47410583]
[287.46435547 100.87277222]
[273.19036865 108.94651031]
[259.20059204 100.38974762]
[244.20101929 100.50468445]
[229.20146179 100.61962128]
[216.53384399 108.45421600]
[202.67478943 100.82288361]
[187.67523193 100.93782043]
[172.67567444 101.05275726]
[157.67611694 101.16768646]
[142.67655945 101.28262329]
[127.67699432 101.39756012]
[120.59455872 114.52198792]
[108.68656921 120.95825958]
[96.57102203 119.88100433]
[88.70906067 132.65556335]
[80.84709167 145.43013000]
[72.98513031 158.20469666]
[65.12316895 170.97926331]
[64.47944641 186.78736877]
[51.21931076 193.57102966]
[43.35734940 206.34559631]
[35.49538422 219.12016296]
[27.63341904 231.89472961]
[19.77145576 244.66929626]
[11.90949154 257.44384766]
[4.04752827 270.21841431]
[-3.81443572 282.99298096]
[-3.90236664 301.40475464]
[-19.65030479 309.14416504]
[-27.31558418 322.03768921]
[-34.98086548 334.93124390]
[-42.04547882 348.16345215]
[-48.49449921 361.70635986]
[-54.94351959 375.24923706]
[-55.97712708 390.21359253]
[-51.45131683 404.51452637]
[-46.92551041 418.81549072]
[-42.39970016 433.11642456]
[-37.87388992 447.41738892]
[-27.33034134 460.69403076]
[-37.16940308 474.50088501]
[-53.16040421 468.86846924]
[-52.17483902 451.94317627]
[-56.70064545 437.64224243]
[-61.22645569 423.34130859]
[-65.75226593 409.04034424]
[-70.27807617 394.73941040]
[-77.66190338 393.42446899]
[-80.29177856 408.19213867]
[-82.92164612 422.95977783]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 38]
[6 37]
[7 36]
[8 35]
[10 32]
[11 31]
[12 30]
[13 29]
[14 27]
[15 26]
[16 25]
[17 24]
[46 188]
[47 187]
[48 186]
[55 185]
[56 184]
[57 183]
[60 181]
[61 180]
[62 179]
[63 178]
[64 177]
[65 176]
[66 175]
[67 174]
[69 172]
[70 171]
[71 170]
[72 169]
[73 168]
[75 141]
[76 140]
[77 139]
[78 138]
[79 137]
[80 135]
[81 134]
[82 133]
[83 132]
[84 131]
[85 114]
[86 113]
[87 112]
[88 111]
[89 110]
[90 109]
[94 105]
[95 104]
[96 103]
[117 130]
[118 129]
[119 128]
[120 127]
[142 165]
[143 164]
[144 163]
[145 162]
[146 161]
[147 160]
[149 158]
[150 157]
[151 156]
[189 201]
[190 200]
[191 199]
[192 198]
[193 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
