%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:22:10 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TULP1)
} def

/sequence { (\
GAAGUUGAGCCGAGAUUAGCAGGAGUCGGGAGGGAGGCUCCUAGACCUGCAGAGAAAGGGGUGCGAUAGGCAAAGGCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 17 0.036908612 ubox
2 16 0.038813583 ubox
2 17 0.020460538 ubox
3 16 0.020790186 ubox
3 17 0.072760095 ubox
4 10 0.035099257 ubox
4 16 0.080938828 ubox
4 20 0.207788083 ubox
4 64 0.014808559 ubox
4 67 0.139690540 ubox
4 71 0.006984078 ubox
4 77 0.022295140 ubox
4 79 0.018105557 ubox
5 9 0.033950003 ubox
5 13 0.051658961 ubox
5 14 0.022629212 ubox
5 15 0.081684954 ubox
5 19 0.207878171 ubox
5 24 0.003251423 ubox
5 63 0.014703608 ubox
5 66 0.143374154 ubox
5 70 0.006710265 ubox
5 75 0.004140899 ubox
5 76 0.022032690 ubox
5 78 0.017750320 ubox
6 12 0.053370849 ubox
6 13 0.028864831 ubox
6 14 0.080681231 ubox
6 18 0.211520203 ubox
6 23 0.003353680 ubox
6 60 0.003581084 ubox
6 65 0.144104327 ubox
6 69 0.005690238 ubox
6 74 0.005437263 ubox
6 75 0.020474353 ubox
6 78 0.004923809 ubox
7 11 0.051953918 ubox
7 17 0.212022112 ubox
7 40 0.004875344 ubox
7 64 0.141429316 ubox
7 77 0.005149814 ubox
8 16 0.210064982 ubox
8 17 0.011532432 ubox
8 39 0.004897695 ubox
9 16 0.010299991 ubox
9 20 0.051823911 ubox
9 38 0.004900637 ubox
9 50 0.004648504 ubox
9 62 0.135274121 ubox
9 71 0.022613112 ubox
9 77 0.089063454 ubox
10 19 0.051859493 ubox
10 23 0.004470587 ubox
10 37 0.004898389 ubox
10 49 0.004568017 ubox
10 59 0.922053077 ubox
10 60 0.092507770 ubox
10 61 0.141604397 ubox
10 70 0.022644416 ubox
10 76 0.089154612 ubox
11 22 0.004482178 ubox
11 36 0.004894064 ubox
11 58 0.924378858 ubox
11 59 0.102692430 ubox
11 60 0.141205596 ubox
11 69 0.022623036 ubox
11 75 0.089031570 ubox
13 48 0.004266666 ubox
14 27 0.007183333 ubox
14 47 0.004581743 ubox
15 26 0.007191354 ubox
15 67 0.011455180 ubox
16 25 0.007172903 ubox
16 45 0.007320307 ubox
16 52 0.130384630 ubox
16 53 0.692902772 ubox
16 54 0.148669219 ubox
16 55 0.089535100 ubox
16 56 0.011931513 ubox
16 57 0.009695814 ubox
16 66 0.012350095 ubox
16 69 0.004965838 ubox
16 74 0.003529344 ubox
17 24 0.006559486 ubox
17 43 0.003733527 ubox
17 44 0.007843463 ubox
17 51 0.148556768 ubox
17 52 0.596101196 ubox
17 53 0.163392932 ubox
17 54 0.091624819 ubox
17 55 0.011937295 ubox
17 56 0.008977343 ubox
17 65 0.011087560 ubox
17 68 0.004996987 ubox
17 73 0.003372387 ubox
18 67 0.004654726 ubox
19 50 0.971642544 ubox
19 62 0.006174985 ubox
19 64 0.020427895 ubox
20 49 0.974603412 ubox
20 61 0.006233500 ubox
20 63 0.020420145 ubox
21 42 0.211589257 ubox
21 48 0.971885406 ubox
21 62 0.008709922 ubox
22 41 0.222682449 ubox
22 47 0.962840390 ubox
22 48 0.070043410 ubox
23 40 0.222836756 ubox
23 46 0.873851738 ubox
23 47 0.138113145 ubox
24 39 0.222995742 ubox
24 42 0.003243604 ubox
25 38 0.223028491 ubox
25 46 0.426993909 ubox
26 35 0.005015199 ubox
26 37 0.222886502 ubox
26 45 0.779100857 ubox
27 33 0.003343348 ubox
27 34 0.007489396 ubox
27 36 0.222803059 ubox
27 44 0.805749914 ubox
28 41 0.019100660 ubox
28 42 0.889889129 ubox
29 40 0.015171518 ubox
29 41 0.974111426 ubox
29 42 0.015435485 ubox
30 39 0.008822173 ubox
30 40 0.974411235 ubox
30 41 0.015171820 ubox
31 39 0.974041515 ubox
31 42 0.014574099 ubox
32 38 0.972374259 ubox
32 39 0.025054368 ubox
32 40 0.010590622 ubox
32 41 0.015338568 ubox
32 42 0.004505064 ubox
33 38 0.054679691 ubox
33 39 0.010588563 ubox
33 40 0.015320470 ubox
33 41 0.005302337 ubox
34 38 0.010879955 ubox
34 39 0.011965820 ubox
34 40 0.005357309 ubox
35 39 0.004700626 ubox
43 62 0.008575613 ubox
45 62 0.017781152 ubox
46 59 0.219414579 ubox
46 60 0.014820432 ubox
46 61 0.019301299 ubox
47 54 0.013926359 ubox
47 58 0.219922110 ubox
47 59 0.015347040 ubox
47 60 0.019307299 ubox
48 53 0.013900381 ubox
48 57 0.219618741 ubox
48 58 0.014988268 ubox
48 59 0.019086273 ubox
49 64 0.003909208 ubox
50 63 0.003924551 ubox
51 62 0.004015654 ubox
58 80 0.007795663 ubox
59 79 0.007570902 ubox
59 80 0.016863223 ubox
60 79 0.014447736 ubox
60 80 0.968447577 ubox
61 71 0.005074683 ubox
61 77 0.007880230 ubox
61 79 0.983731923 ubox
62 70 0.005050827 ubox
62 72 0.087431178 ubox
62 76 0.006454055 ubox
62 78 0.983715200 ubox
63 71 0.099283142 ubox
63 77 0.983941361 ubox
64 70 0.099360056 ubox
64 76 0.983769882 ubox
69 80 0.036166324 ubox
70 77 0.120441170 ubox
70 79 0.036135783 ubox
71 76 0.120473229 ubox
10 59 0.9500000 lbox
11 58 0.9500000 lbox
16 53 0.9500000 lbox
17 52 0.9500000 lbox
19 50 0.9500000 lbox
20 49 0.9500000 lbox
21 48 0.9500000 lbox
22 47 0.9500000 lbox
23 46 0.9500000 lbox
26 45 0.9500000 lbox
27 44 0.9500000 lbox
28 42 0.9500000 lbox
29 41 0.9500000 lbox
30 40 0.9500000 lbox
31 39 0.9500000 lbox
32 38 0.9500000 lbox
60 80 0.9500000 lbox
61 79 0.9500000 lbox
62 78 0.9500000 lbox
63 77 0.9500000 lbox
64 76 0.9500000 lbox
showpage
end
%%EOF
