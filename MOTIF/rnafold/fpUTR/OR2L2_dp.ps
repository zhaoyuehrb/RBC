%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:16:33 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR2L2)
} def

/sequence { (\
UGGGAGUCUUGUAAUGCAGCCACUGUGGAUAAAAGUGAAUUACUGUUCUUAAUUUACCCUUUUGUCUCCCUUCAGGAUGGAUUGUAGGAAUUCCCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 94 0.067312619 ubox
2 95 0.993380393 ubox
2 96 0.045939729 ubox
3 93 0.067527095 ubox
3 94 0.996905396 ubox
3 95 0.039547997 ubox
4 92 0.067188650 ubox
4 93 0.997210038 ubox
4 94 0.031096282 ubox
5 91 0.073241313 ubox
5 92 0.996012755 ubox
6 91 0.984512955 ubox
7 88 0.010738810 ubox
7 89 0.713952306 ubox
7 90 0.696095872 ubox
8 87 0.017211534 ubox
8 88 0.998808628 ubox
9 86 0.016188221 ubox
9 87 0.997920437 ubox
9 88 0.017867998 ubox
9 89 0.018285945 ubox
9 90 0.006955683 ubox
10 86 0.993096153 ubox
10 87 0.019102576 ubox
10 88 0.017840260 ubox
10 89 0.011372012 ubox
11 17 0.003234673 ubox
11 85 0.959530801 ubox
12 84 0.958636623 ubox
12 86 0.015667497 ubox
13 83 0.991782879 ubox
13 85 0.009828140 ubox
14 82 0.994196113 ubox
15 27 0.008910043 ubox
15 81 0.988902112 ubox
15 86 0.072595886 ubox
16 26 0.075629960 ubox
16 85 0.088656243 ubox
17 25 0.077960739 ubox
17 27 0.003226809 ubox
17 79 0.990459439 ubox
17 84 0.091547373 ubox
18 24 0.077962354 ubox
18 26 0.003467602 ubox
18 78 0.950868938 ubox
18 83 0.091409938 ubox
19 23 0.076348567 ubox
19 26 0.020973899 ubox
19 82 0.090412310 ubox
20 25 0.021967732 ubox
20 28 0.016877039 ubox
20 76 0.757211781 ubox
20 80 0.100592729 ubox
21 27 0.023309754 ubox
21 75 0.750261698 ubox
21 79 0.100581919 ubox
22 26 0.019566082 ubox
22 78 0.093873702 ubox
23 75 0.639454284 ubox
23 76 0.037429251 ubox
24 74 0.674736892 ubox
24 75 0.033646410 ubox
25 73 0.678887543 ubox
26 74 0.032428580 ubox
27 59 0.003351339 ubox
27 66 0.010253926 ubox
27 67 0.804788528 ubox
27 68 0.295047342 ubox
27 69 0.332242820 ubox
27 70 0.235566781 ubox
27 71 0.147901445 ubox
27 72 0.023415753 ubox
27 73 0.030119799 ubox
28 58 0.003351798 ubox
28 66 0.923824157 ubox
28 67 0.029029806 ubox
28 68 0.314265201 ubox
28 69 0.191595675 ubox
28 70 0.094729178 ubox
28 71 0.004105505 ubox
28 72 0.008620183 ubox
29 65 0.960485368 ubox
29 67 0.266423484 ubox
29 71 0.005928150 ubox
30 56 0.004113768 ubox
30 64 0.990363600 ubox
31 55 0.004174554 ubox
31 61 0.015681490 ubox
31 62 0.025139617 ubox
31 63 0.995717714 ubox
32 54 0.004131788 ubox
32 60 0.019851229 ubox
32 61 0.032013676 ubox
32 62 0.994948862 ubox
32 63 0.052912403 ubox
33 53 0.003859199 ubox
33 60 0.035114587 ubox
33 61 0.991101579 ubox
33 62 0.054187739 ubox
33 63 0.026400417 ubox
34 60 0.915139827 ubox
34 61 0.053617906 ubox
34 62 0.026174773 ubox
34 63 0.005634694 ubox
35 57 0.741543259 ubox
35 59 0.665903658 ubox
35 60 0.010046497 ubox
35 61 0.004880568 ubox
36 51 0.006701013 ubox
36 52 0.005242396 ubox
36 56 0.941320328 ubox
37 48 0.051799919 ubox
37 50 0.004365022 ubox
37 54 0.003927488 ubox
37 55 0.995819742 ubox
38 47 0.051941498 ubox
38 49 0.004042900 ubox
38 53 0.003409576 ubox
38 54 0.997145064 ubox
38 55 0.013842992 ubox
39 46 0.051687740 ubox
39 53 0.996916009 ubox
39 54 0.012676714 ubox
40 45 0.050772840 ubox
40 52 0.996440962 ubox
41 51 0.991364175 ubox
42 50 0.956591291 ubox
44 51 0.034795189 ubox
45 50 0.044960032 ubox
45 53 0.005235084 ubox
45 57 0.003735153 ubox
46 52 0.005584939 ubox
46 56 0.003695365 ubox
47 51 0.005020946 ubox
50 56 0.004256178 ubox
51 55 0.004033042 ubox
58 80 0.004067880 ubox
59 79 0.004077776 ubox
60 77 0.004958010 ubox
61 76 0.005168790 ubox
62 75 0.005238071 ubox
63 74 0.005756209 ubox
64 73 0.005891904 ubox
67 74 0.003777190 ubox
67 77 0.048886226 ubox
67 81 0.006339544 ubox
68 75 0.005080087 ubox
68 76 0.066231955 ubox
68 80 0.016810157 ubox
69 75 0.066149605 ubox
69 76 0.049836833 ubox
69 79 0.016423611 ubox
69 80 0.063199524 ubox
69 88 0.010916242 ubox
70 75 0.049966819 ubox
70 76 0.009159524 ubox
70 79 0.063416504 ubox
70 80 0.006086014 ubox
70 87 0.010992291 ubox
71 75 0.008325119 ubox
71 77 0.012525149 ubox
71 79 0.006032961 ubox
71 81 0.004879277 ubox
71 86 0.010316956 ubox
72 76 0.011450697 ubox
72 80 0.007601179 ubox
73 79 0.008550200 ubox
73 80 0.003684648 ubox
73 84 0.011140069 ubox
74 78 0.006959335 ubox
74 83 0.011159899 ubox
75 82 0.010453123 ubox
2 95 0.9500000 lbox
3 94 0.9500000 lbox
4 93 0.9500000 lbox
5 92 0.9500000 lbox
6 91 0.9500000 lbox
7 90 0.9500000 lbox
8 88 0.9500000 lbox
9 87 0.9500000 lbox
10 86 0.9500000 lbox
11 85 0.9500000 lbox
12 84 0.9500000 lbox
13 83 0.9500000 lbox
14 82 0.9500000 lbox
15 81 0.9500000 lbox
17 79 0.9500000 lbox
18 78 0.9500000 lbox
20 76 0.9500000 lbox
21 75 0.9500000 lbox
27 67 0.9500000 lbox
28 66 0.9500000 lbox
29 65 0.9500000 lbox
30 64 0.9500000 lbox
31 63 0.9500000 lbox
32 62 0.9500000 lbox
33 61 0.9500000 lbox
34 60 0.9500000 lbox
35 57 0.9500000 lbox
36 56 0.9500000 lbox
37 55 0.9500000 lbox
38 54 0.9500000 lbox
39 53 0.9500000 lbox
40 52 0.9500000 lbox
41 51 0.9500000 lbox
42 50 0.9500000 lbox
showpage
end
%%EOF
