%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:03:26 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PTCRA)
} def

/sequence { (\
UAGAAGGCAGUCUUGUGGGUGCCUCCUCCCCCAGCCGCAACUCAGGUCUGCAGCUGGGUCCUGCCUCCUUCCGAGUGGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 63 0.008938007 ubox
2 24 0.003553125 ubox
2 27 0.728257775 ubox
2 62 0.041249638 ubox
2 69 0.022636474 ubox
3 25 0.351879708 ubox
3 26 0.783401160 ubox
3 28 0.270018303 ubox
3 60 0.036335984 ubox
3 61 0.042534662 ubox
3 67 0.011201965 ubox
3 68 0.024365872 ubox
4 24 0.250849205 ubox
4 27 0.261984164 ubox
4 59 0.034492348 ubox
4 66 0.008103161 ubox
5 24 0.938454269 ubox
5 27 0.005509707 ubox
5 66 0.031438173 ubox
6 23 0.999208853 ubox
6 26 0.004026802 ubox
6 65 0.033839603 ubox
6 81 0.014195747 ubox
7 22 0.999309540 ubox
7 64 0.033851382 ubox
7 80 0.014312824 ubox
8 21 0.999308556 ubox
8 63 0.033855285 ubox
8 79 0.014304429 ubox
9 20 0.998675512 ubox
9 62 0.033805752 ubox
10 20 0.005046056 ubox
10 61 0.033565419 ubox
11 18 0.983970286 ubox
11 19 0.069797184 ubox
12 17 0.992947895 ubox
12 18 0.076144177 ubox
12 19 0.015722733 ubox
12 58 0.003673264 ubox
12 75 0.014243595 ubox
13 17 0.068681184 ubox
13 18 0.014650048 ubox
13 74 0.014256089 ubox
14 73 0.014237069 ubox
15 72 0.014153639 ubox
17 23 0.003301174 ubox
17 26 0.016339540 ubox
17 27 0.019371130 ubox
17 28 0.008152655 ubox
17 29 0.008017152 ubox
17 30 0.012447434 ubox
17 68 0.008386967 ubox
17 69 0.011074126 ubox
18 22 0.003254498 ubox
18 25 0.016350934 ubox
18 26 0.021675086 ubox
18 27 0.006929053 ubox
18 28 0.008000026 ubox
18 29 0.016010202 ubox
18 67 0.008390674 ubox
18 68 0.011257958 ubox
19 23 0.003761489 ubox
19 24 0.011916712 ubox
19 25 0.021678697 ubox
19 26 0.007748098 ubox
19 27 0.006218411 ubox
19 28 0.016028239 ubox
19 66 0.007583596 ubox
19 67 0.011253575 ubox
21 64 0.013620173 ubox
22 63 0.013606933 ubox
25 78 0.007104030 ubox
25 79 0.006844245 ubox
26 77 0.007110541 ubox
26 78 0.006914689 ubox
26 79 0.004914274 ubox
27 77 0.006188925 ubox
27 78 0.004250675 ubox
27 79 0.008421470 ubox
28 58 0.012782869 ubox
28 77 0.004471891 ubox
28 78 0.013990741 ubox
28 79 0.009866118 ubox
29 57 0.011821129 ubox
29 58 0.077557202 ubox
29 77 0.013967023 ubox
29 78 0.009783548 ubox
30 56 0.010398707 ubox
30 57 0.064662877 ubox
30 58 0.974831810 ubox
30 77 0.007611153 ubox
31 56 0.046021429 ubox
31 57 0.994914265 ubox
31 58 0.004480640 ubox
32 56 0.998831245 ubox
32 57 0.003299065 ubox
33 55 0.999712694 ubox
34 54 0.999967575 ubox
34 80 0.004320752 ubox
35 53 0.999580206 ubox
35 79 0.004328974 ubox
36 50 0.003426046 ubox
36 78 0.004321204 ubox
37 51 0.999031074 ubox
38 50 0.999872945 ubox
38 77 0.003822732 ubox
39 49 0.982231349 ubox
40 47 0.944802769 ubox
40 59 0.003815765 ubox
41 46 0.955432756 ubox
41 58 0.004173584 ubox
41 75 0.004112576 ubox
42 57 0.004174745 ubox
42 74 0.004113282 ubox
43 56 0.004185177 ubox
43 73 0.004104341 ubox
44 55 0.004182325 ubox
44 69 0.003539073 ubox
45 54 0.004175108 ubox
45 68 0.003601363 ubox
46 67 0.003597548 ubox
50 64 0.004032076 ubox
51 63 0.004042464 ubox
52 62 0.004037832 ubox
53 61 0.004006735 ubox
57 81 0.074610654 ubox
58 80 0.181756598 ubox
59 78 0.004097292 ubox
59 79 0.196003474 ubox
60 77 0.005207248 ubox
60 78 0.214978514 ubox
60 79 0.510443547 ubox
61 75 0.005065729 ubox
61 77 0.214776991 ubox
61 78 0.516487181 ubox
61 79 0.062299689 ubox
62 73 0.004606937 ubox
62 74 0.005210934 ubox
62 77 0.513937443 ubox
62 78 0.062935733 ubox
63 72 0.005255496 ubox
63 76 0.510873344 ubox
63 80 0.818695436 ubox
64 75 0.369334740 ubox
64 78 0.020710487 ubox
64 79 0.821126661 ubox
65 75 0.425328600 ubox
65 77 0.022029139 ubox
65 78 0.819931196 ubox
65 79 0.028794397 ubox
66 74 0.555950446 ubox
66 77 0.781825235 ubox
66 78 0.028540873 ubox
66 79 0.042170972 ubox
67 73 0.557061448 ubox
67 77 0.171954624 ubox
67 78 0.067153790 ubox
67 79 0.023421091 ubox
68 75 0.801942718 ubox
68 77 0.074793828 ubox
68 78 0.023803629 ubox
69 74 0.742998463 ubox
69 75 0.034101673 ubox
69 77 0.023863870 ubox
70 74 0.036288543 ubox
70 77 0.003345630 ubox
70 79 0.030244464 ubox
71 77 0.004359394 ubox
71 78 0.040084016 ubox
71 79 0.021868837 ubox
72 77 0.040395933 ubox
72 78 0.022135637 ubox
2 27 0.9500000 lbox
3 26 0.9500000 lbox
5 24 0.9500000 lbox
6 23 0.9500000 lbox
7 22 0.9500000 lbox
8 21 0.9500000 lbox
9 20 0.9500000 lbox
11 18 0.9500000 lbox
12 17 0.9500000 lbox
30 58 0.9500000 lbox
31 57 0.9500000 lbox
32 56 0.9500000 lbox
33 55 0.9500000 lbox
34 54 0.9500000 lbox
35 53 0.9500000 lbox
37 51 0.9500000 lbox
38 50 0.9500000 lbox
39 49 0.9500000 lbox
40 47 0.9500000 lbox
41 46 0.9500000 lbox
63 80 0.9500000 lbox
64 79 0.9500000 lbox
65 78 0.9500000 lbox
66 77 0.9500000 lbox
68 75 0.9500000 lbox
69 74 0.9500000 lbox
showpage
end
%%EOF
