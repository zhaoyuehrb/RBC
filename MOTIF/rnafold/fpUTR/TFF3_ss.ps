%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:29:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCAAAACAGUGGGGGCUGAACUGACCUCUCCCCUUUGGGAGAGAAAAACUGUCUGGGAGCUUGACAAAGGCAUGCAGGAGAGAACAGGAGCAGCCACAGCCAGGAGGGAGAGCCUUCCCCAAGCAAACAAUCCAGAGCAGCUGUGCAAACAACGGUGCAUAAAUGAGGCCUCCUGGACC\
) } def
/len { sequence length } bind def

/coor [
[89.35610199 360.87164307]
[74.11367035 360.07723999]
[60.72951508 352.74053955]
[51.86107635 340.31823730]
[49.26918030 325.27679443]
[53.46845627 310.60272217]
[63.62512970 299.20953369]
[77.72258759 293.35937500]
[78.50329590 278.37969971]
[79.28400421 263.40002441]
[76.48464966 256.53805542]
[80.21047974 248.16781616]
[81.25106049 233.20396423]
[82.29163361 218.24009705]
[83.33220673 203.27622986]
[76.49645996 190.04287720]
[85.17246246 176.81269836]
[86.21303558 161.84883118]
[80.24641418 157.30467224]
[72.15917206 169.93782043]
[69.33517456 184.66958618]
[55.32466507 190.02735901]
[43.39154434 180.93885803]
[44.83303070 166.00828552]
[58.28403091 159.37054443]
[68.31317902 148.21633911]
[62.34655380 143.67216492]
[48.19754410 148.65267944]
[34.04853058 153.63319397]
[19.89951897 158.61369324]
[5.75050592 163.59420776]
[-8.39850616 168.57470703]
[-22.54751968 173.55522156]
[-32.80474854 186.35057068]
[-48.97125626 183.59811401]
[-54.41632843 168.12933350]
[-43.53853989 155.85719299]
[-27.52802658 159.40620422]
[-13.37901402 154.42568970]
[0.76999879 149.44519043]
[14.91901112 144.46467590]
[29.06802368 139.48417664]
[43.21703720 134.50366211]
[57.36604691 129.52316284]
[52.75035858 112.15051270]
[54.52314758 95.33338928]
[61.71702194 81.21281433]
[72.71941376 71.33289337]
[85.56185150 66.47498322]
[98.23893738 66.61579895]
[100.82941437 51.84117889]
[103.41989136 37.06655884]
[105.88205719 22.27001190]
[108.21571350 7.45265675]
[110.54936981 -7.36469936]
[112.88303375 -22.18205452]
[115.21669006 -36.99941254]
[117.55034637 -51.81676865]
[107.36587524 -72.64992523]
[121.91149902 -89.75102234]
[122.95207977 -104.71488190]
[123.99265289 -119.67874908]
[125.03322601 -134.64260864]
[126.07380676 -149.60647583]
[116.32241058 -153.21461487]
[108.08757019 -160.61769104]
[102.85065460 -171.13644409]
[101.77816772 -183.51835632]
[105.50401306 -196.08474731]
[113.97975159 -206.95826721]
[110.11843109 -221.45275879]
[106.25710297 -235.94723511]
[101.01057434 -243.45834351]
[102.45687866 -250.72683716]
[98.84770203 -265.28616333]
[95.23852539 -279.84548950]
[80.20243073 -282.07800293]
[67.16780853 -289.89895630]
[58.12234497 -302.11566162]
[54.44541550 -316.86520386]
[56.69771957 -331.89834595]
[64.53579712 -344.92266846]
[76.76440430 -353.95205688]
[91.51875305 -357.60955811]
[106.54892731 -355.33749390]
[119.56292725 -347.48226929]
[128.57621765 -335.24182129]
[132.21432495 -320.48266602]
[129.92248535 -305.45550537]
[122.05016327 -292.45184326]
[109.79784393 -283.45465088]
[113.40702057 -268.89532471]
[117.01620483 -254.33601379]
[120.75159454 -239.80856323]
[124.61291504 -225.31407166]
[128.47424316 -210.81959534]
[135.76928711 -209.07824707]
[139.25198364 -223.66833496]
[138.05564880 -238.62055969]
[151.90638733 -244.37879944]
[161.66288757 -232.98535156]
[153.84207153 -220.18565369]
[150.35939026 -205.59555054]
[157.65443420 -203.85420227]
[167.64616394 -215.04193115]
[177.63789368 -226.22966003]
[187.62962341 -237.41740417]
[197.62135315 -248.60513306]
[207.61308289 -259.79284668]
[210.42613220 -275.94894409]
[225.91522217 -281.33596802]
[238.14651489 -270.41223145]
[234.53749084 -254.41514587]
[218.80082703 -249.80113220]
[208.80908203 -238.61338806]
[198.81735229 -227.42565918]
[188.82562256 -216.23793030]
[178.83389282 -205.05020142]
[168.84216309 -193.86247253]
[165.20933533 -161.59237671]
[141.03767395 -148.56590271]
[139.99708557 -133.60203552]
[138.95651245 -118.63817596]
[137.91593933 -103.67430878]
[136.87536621 -88.71044922]
[142.78671265 -84.64807129]
[146.95018005 -78.72386169]
[148.80442810 -71.65383911]
[148.07081604 -64.31302643]
[144.79406738 -57.62719727]
[139.34262085 -52.45613098]
[132.36770630 -49.48310852]
[130.03404236 -34.66575241]
[127.70038605 -19.84839630]
[125.36672974 -5.03104067]
[123.03306580 9.78631496]
[120.69940948 24.60367203]
[122.77027130 31.71944809]
[118.19451904 39.65703583]
[115.60403442 54.43165588]
[113.01355743 69.20627594]
[141.89509583 92.04100037]
[136.29765320 137.03715515]
[148.83262634 145.27575684]
[161.36758423 153.51437378]
[173.90255737 161.75297546]
[186.43751526 169.99157715]
[198.97248840 178.23019409]
[213.44114685 172.62329102]
[228.43356323 176.62422180]
[238.18481445 188.69454956]
[238.94535828 204.19297791]
[230.42274475 217.16004944]
[215.89410400 222.60964966]
[200.94599915 218.44631958]
[191.32624817 206.27091980]
[190.73388672 190.76515198]
[178.19891357 182.52655029]
[165.66394043 174.28793335]
[153.12898254 166.04933167]
[140.59400940 157.81072998]
[128.05905151 149.57212830]
[121.33851624 152.90144348]
[127.99693298 166.34263611]
[114.55564117 173.00082397]
[107.89743805 159.56008911]
[101.17690277 162.88940430]
[100.13632965 177.85327148]
[106.89764404 192.15695190]
[98.29607391 204.31680298]
[97.25549316 219.28067017]
[96.21492004 234.24453735]
[95.17434692 249.20840454]
[94.26367188 264.18072510]
[93.48296356 279.16040039]
[92.70225525 294.14007568]
[106.11519623 301.42401123]
[115.03249359 313.81127930]
[117.68359375 328.84240723]
[113.54214478 343.53289795]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 176]
[9 175]
[10 174]
[12 173]
[13 172]
[14 171]
[15 170]
[17 168]
[18 167]
[27 44]
[28 43]
[29 42]
[30 41]
[31 40]
[32 39]
[33 38]
[50 141]
[51 140]
[52 139]
[53 137]
[54 136]
[55 135]
[56 134]
[57 133]
[58 132]
[60 125]
[61 124]
[62 123]
[63 122]
[64 121]
[70 96]
[71 95]
[72 94]
[74 93]
[75 92]
[76 91]
[104 119]
[105 118]
[106 117]
[107 116]
[108 115]
[109 114]
[143 162]
[144 161]
[145 160]
[146 159]
[147 158]
[148 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
