%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:31:18 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ESX1)
} def

/sequence { (\
CCCGGGAUCGCCGCGGAACCACGCACAGAGUCUGCAGAAGUGCACAGCUUUAUCGACAGCGCUUGAAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 16 0.662873337 ubox
2 15 0.665591040 ubox
2 16 0.482532998 ubox
3 10 0.036987243 ubox
3 13 0.663535526 ubox
3 15 0.483825095 ubox
3 23 0.066047781 ubox
3 34 0.228108508 ubox
3 55 0.036446080 ubox
3 61 0.019775023 ubox
3 65 0.171928771 ubox
4 9 0.037903479 ubox
4 12 0.704556301 ubox
4 14 0.481866092 ubox
4 20 0.051983205 ubox
4 22 0.074285129 ubox
4 32 0.087503295 ubox
4 33 0.304974751 ubox
4 54 0.035614087 ubox
4 60 0.020791891 ubox
4 63 0.009581190 ubox
4 64 0.171903039 ubox
5 11 0.704198421 ubox
5 12 0.506424165 ubox
5 19 0.051979194 ubox
5 20 0.089300212 ubox
5 31 0.081316104 ubox
5 32 0.332629114 ubox
5 33 0.213054358 ubox
5 53 0.012162209 ubox
5 62 0.010822758 ubox
5 63 0.172310105 ubox
5 64 0.003993215 ubox
6 11 0.504870180 ubox
6 19 0.089343190 ubox
6 31 0.256614082 ubox
6 32 0.255476862 ubox
6 54 0.008432485 ubox
6 62 0.170620032 ubox
6 63 0.004018938 ubox
6 64 0.025807296 ubox
7 31 0.250344397 ubox
7 53 0.008343281 ubox
7 63 0.027051213 ubox
8 16 0.041853829 ubox
8 17 0.092758895 ubox
8 29 0.403851582 ubox
8 30 0.149994042 ubox
8 52 0.007675717 ubox
8 56 0.021222014 ubox
8 66 0.009152473 ubox
9 15 0.043356041 ubox
9 16 0.093693851 ubox
9 28 0.425736784 ubox
9 37 0.003298030 ubox
9 55 0.022090356 ubox
9 61 0.170972427 ubox
9 65 0.009727564 ubox
10 14 0.040806049 ubox
10 24 0.003341760 ubox
10 31 0.004859755 ubox
10 48 0.006792851 ubox
10 54 0.021044220 ubox
10 60 0.174997862 ubox
10 62 0.011546760 ubox
10 64 0.006933457 ubox
10 69 0.012061184 ubox
11 30 0.005163450 ubox
11 47 0.006791085 ubox
11 59 0.174601079 ubox
11 61 0.011405501 ubox
11 68 0.012134600 ubox
12 23 0.004035392 ubox
12 55 0.018427623 ubox
12 61 0.004669286 ubox
13 22 0.004607950 ubox
13 24 0.551765320 ubox
13 35 0.039271284 ubox
13 43 0.003442599 ubox
13 60 0.005186313 ubox
13 62 0.022573795 ubox
13 69 0.003856958 ubox
14 23 0.553829685 ubox
14 34 0.039693341 ubox
14 42 0.003476623 ubox
14 55 0.004246887 ubox
14 59 0.005178772 ubox
14 61 0.022840687 ubox
14 68 0.004129052 ubox
15 22 0.553136861 ubox
15 33 0.039835022 ubox
15 41 0.003322060 ubox
15 54 0.004251630 ubox
15 60 0.022807054 ubox
16 32 0.040071756 ubox
16 53 0.003773376 ubox
16 54 0.003360334 ubox
17 31 0.033912773 ubox
17 53 0.003328252 ubox
17 64 0.017971289 ubox
18 31 0.031800415 ubox
18 41 0.018797768 ubox
18 63 0.018347696 ubox
19 30 0.037162791 ubox
19 40 0.019332435 ubox
20 34 0.022832387 ubox
20 42 0.079347989 ubox
20 65 0.111232038 ubox
21 31 0.107297752 ubox
21 33 0.025286724 ubox
21 41 0.080019054 ubox
21 64 0.107132074 ubox
22 30 0.115058757 ubox
22 34 0.006347285 ubox
22 40 0.080035283 ubox
22 42 0.018607439 ubox
22 55 0.113684057 ubox
22 61 0.152864294 ubox
22 65 0.011496906 ubox
23 31 0.094624794 ubox
23 33 0.006793056 ubox
23 35 0.128503937 ubox
23 41 0.018816601 ubox
23 43 0.482769212 ubox
23 48 0.004402092 ubox
23 54 0.114921792 ubox
23 60 0.157844349 ubox
23 62 0.088326750 ubox
23 64 0.008174291 ubox
23 69 0.442126252 ubox
24 30 0.098623469 ubox
24 34 0.128483368 ubox
24 40 0.018815406 ubox
24 42 0.483291352 ubox
24 47 0.004446983 ubox
24 59 0.157628753 ubox
24 61 0.088271281 ubox
24 65 0.039336929 ubox
24 68 0.444927082 ubox
25 31 0.037558661 ubox
25 33 0.119160971 ubox
25 41 0.482982603 ubox
25 64 0.036967543 ubox
26 30 0.041262823 ubox
26 34 0.090271187 ubox
26 40 0.479797406 ubox
26 42 0.005636841 ubox
26 65 0.105346132 ubox
27 33 0.102759823 ubox
27 41 0.005592444 ubox
27 49 0.015657497 ubox
27 50 0.007488964 ubox
27 51 0.266448372 ubox
27 63 0.050637620 ubox
27 64 0.090571514 ubox
28 32 0.102106171 ubox
28 48 0.016617328 ubox
28 49 0.005620973 ubox
28 50 0.305143687 ubox
28 51 0.014533372 ubox
28 54 0.058114005 ubox
28 62 0.055992843 ubox
28 63 0.059062003 ubox
28 64 0.449936418 ubox
29 49 0.310976906 ubox
29 50 0.012207063 ubox
29 51 0.003370124 ubox
29 53 0.049636878 ubox
29 63 0.459676829 ubox
29 64 0.005681599 ubox
30 43 0.020339233 ubox
30 45 0.114703369 ubox
30 48 0.314016335 ubox
30 49 0.008523262 ubox
30 50 0.004701952 ubox
30 53 0.003693917 ubox
30 57 0.137125874 ubox
30 60 0.067791563 ubox
30 62 0.463000256 ubox
30 69 0.017088774 ubox
31 38 0.148466503 ubox
31 42 0.019694306 ubox
31 44 0.083638226 ubox
31 47 0.302618509 ubox
31 52 0.004637405 ubox
31 56 0.137445392 ubox
31 59 0.016368810 ubox
31 61 0.458618928 ubox
31 66 0.006750727 ubox
31 68 0.006452530 ubox
32 37 0.151807808 ubox
32 40 0.028557860 ubox
32 47 0.065862191 ubox
32 55 0.136056392 ubox
32 59 0.461490849 ubox
32 65 0.007266473 ubox
32 68 0.033588203 ubox
33 39 0.035282054 ubox
33 42 0.023973964 ubox
33 44 0.539291389 ubox
33 46 0.050392896 ubox
33 52 0.004038844 ubox
33 55 0.027180640 ubox
33 58 0.462182062 ubox
33 61 0.004937704 ubox
33 67 0.033166950 ubox
34 41 0.033265166 ubox
34 43 0.659222931 ubox
34 45 0.028480532 ubox
34 48 0.016679200 ubox
34 54 0.109363359 ubox
34 57 0.461753785 ubox
34 60 0.013010454 ubox
34 69 0.088341760 ubox
35 40 0.035262849 ubox
35 42 0.660940573 ubox
35 47 0.016686872 ubox
35 59 0.013020208 ubox
35 65 0.055116742 ubox
35 68 0.094634188 ubox
36 41 0.633764399 ubox
36 51 0.010595638 ubox
36 64 0.047784854 ubox
37 50 0.009850545 ubox
37 51 0.193278980 ubox
37 54 0.439882840 ubox
37 63 0.018758517 ubox
37 64 0.014482155 ubox
38 49 0.007505625 ubox
38 50 0.238993651 ubox
38 51 0.028150546 ubox
38 53 0.413772409 ubox
38 63 0.011478446 ubox
38 64 0.243644905 ubox
39 49 0.384504782 ubox
39 50 0.056270599 ubox
39 51 0.162898693 ubox
39 63 0.258851414 ubox
39 64 0.006935911 ubox
40 48 0.387887979 ubox
40 49 0.055460883 ubox
40 50 0.142561853 ubox
40 53 0.011318662 ubox
40 62 0.261624519 ubox
40 69 0.008545940 ubox
41 47 0.385073369 ubox
41 52 0.019931129 ubox
41 61 0.261534327 ubox
41 68 0.008579083 ubox
42 48 0.282644774 ubox
42 51 0.019920072 ubox
42 60 0.261344200 ubox
42 62 0.010007982 ubox
42 69 0.004984522 ubox
43 47 0.280719216 ubox
43 59 0.261126546 ubox
43 61 0.010033342 ubox
43 65 0.013656851 ubox
43 68 0.005049107 ubox
44 64 0.013802996 ubox
45 65 0.023791907 ubox
46 63 0.032058803 ubox
46 64 0.018544274 ubox
47 60 0.114562114 ubox
47 62 0.036812990 ubox
47 69 0.754720811 ubox
48 59 0.114763287 ubox
48 61 0.036845377 ubox
48 68 0.761256464 ubox
49 56 0.018915245 ubox
49 58 0.113268839 ubox
49 59 0.007249443 ubox
49 66 0.008324839 ubox
49 67 0.760835184 ubox
50 55 0.018647724 ubox
50 56 0.024070349 ubox
50 58 0.008255234 ubox
50 59 0.024553630 ubox
50 65 0.011338525 ubox
50 66 0.759028138 ubox
50 67 0.005376779 ubox
50 68 0.004197480 ubox
51 55 0.022390987 ubox
51 58 0.024334952 ubox
51 65 0.757591058 ubox
51 66 0.004994859 ubox
51 67 0.008291780 ubox
52 64 0.745587722 ubox
53 66 0.127762788 ubox
54 61 0.717573405 ubox
54 65 0.137086870 ubox
55 60 0.706375556 ubox
55 64 0.136713900 ubox
56 63 0.126997001 ubox
57 65 0.032518454 ubox
58 64 0.031877816 ubox
59 63 0.021774471 ubox
59 69 0.109612220 ubox
60 68 0.110543965 ubox
61 69 0.135950820 ubox
62 68 0.137991053 ubox
63 67 0.124346320 ubox
1 16 0.9500000 lbox
2 15 0.9500000 lbox
3 13 0.9500000 lbox
4 12 0.9500000 lbox
5 11 0.9500000 lbox
23 43 0.9500000 lbox
24 42 0.9500000 lbox
25 41 0.9500000 lbox
26 40 0.9500000 lbox
47 69 0.9500000 lbox
48 68 0.9500000 lbox
49 67 0.9500000 lbox
50 66 0.9500000 lbox
51 65 0.9500000 lbox
52 64 0.9500000 lbox
54 61 0.9500000 lbox
55 60 0.9500000 lbox
showpage
end
%%EOF
