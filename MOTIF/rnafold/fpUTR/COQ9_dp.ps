%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:51:27 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (COQ9)
} def

/sequence { (\
AGCGACGACUUCCGCCCUCCUUAGGGCCGUGGUCCCGUAGCUACCGGUCGCGUCGCCGUGGGCGACGUGCCCGCUUCCAAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.003218367 ubox
1 42 0.861692702 ubox
1 75 0.141905038 ubox
1 76 0.007075384 ubox
2 9 0.003683929 ubox
2 33 0.019668645 ubox
2 38 0.336937271 ubox
2 41 0.912421326 ubox
2 51 0.007859434 ubox
2 53 0.006273771 ubox
2 56 0.106321574 ubox
2 74 0.163219186 ubox
3 32 0.020391076 ubox
3 37 0.344808315 ubox
3 40 0.910337373 ubox
3 50 0.007886652 ubox
3 52 0.006504439 ubox
3 55 0.106570590 ubox
3 73 0.163178817 ubox
4 12 0.010550861 ubox
4 13 0.007300011 ubox
4 34 0.099218415 ubox
4 36 0.343339577 ubox
4 49 0.007915195 ubox
4 51 0.006517566 ubox
4 54 0.106577516 ubox
4 72 0.157707397 ubox
4 77 0.009606498 ubox
5 10 0.003511970 ubox
5 11 0.010395749 ubox
5 30 0.021819055 ubox
5 33 0.101001792 ubox
5 38 0.784948445 ubox
5 48 0.007890862 ubox
5 53 0.106413810 ubox
5 76 0.008811333 ubox
6 14 0.007608256 ubox
6 29 0.021997976 ubox
6 32 0.101223582 ubox
6 37 0.842660660 ubox
6 47 0.007569867 ubox
6 50 0.019044787 ubox
6 52 0.104976197 ubox
6 73 0.003891275 ubox
7 13 0.023163375 ubox
7 28 0.022261589 ubox
7 34 0.816946517 ubox
7 36 0.540677926 ubox
7 45 0.003515596 ubox
7 49 0.028822925 ubox
7 51 0.097873665 ubox
7 72 0.003840439 ubox
7 77 0.005612592 ubox
8 30 0.100899158 ubox
8 33 0.925776421 ubox
8 48 0.032193687 ubox
8 76 0.005198751 ubox
9 29 0.100620787 ubox
9 32 0.939761359 ubox
9 47 0.032545074 ubox
10 31 0.927877347 ubox
10 32 0.021108031 ubox
10 46 0.029644466 ubox
11 31 0.045661464 ubox
11 32 0.200519188 ubox
11 47 0.015343775 ubox
12 31 0.208776959 ubox
12 32 0.199018134 ubox
12 46 0.015622648 ubox
12 47 0.092658252 ubox
13 29 0.410304579 ubox
13 31 0.198869080 ubox
13 46 0.092594984 ubox
14 27 0.953247000 ubox
14 28 0.291536505 ubox
14 30 0.059679609 ubox
14 45 0.022141339 ubox
15 26 0.998260356 ubox
15 29 0.054088002 ubox
16 25 0.998463941 ubox
16 26 0.034559690 ubox
17 24 0.998076317 ubox
17 25 0.034800433 ubox
17 26 0.017326555 ubox
18 23 0.899152919 ubox
18 24 0.032736920 ubox
18 25 0.016784231 ubox
18 26 0.022721752 ubox
19 24 0.018656992 ubox
19 25 0.025293473 ubox
19 26 0.028759796 ubox
20 24 0.025150817 ubox
20 25 0.028805176 ubox
20 40 0.006796016 ubox
21 39 0.006776331 ubox
24 36 0.006953429 ubox
25 34 0.003198520 ubox
25 35 0.006924509 ubox
26 33 0.003256218 ubox
26 34 0.006881025 ubox
26 48 0.004105839 ubox
27 32 0.006585856 ubox
27 47 0.008488454 ubox
28 37 0.003275400 ubox
28 46 0.016277774 ubox
28 52 0.003280914 ubox
29 36 0.003339975 ubox
29 44 0.140582959 ubox
29 45 0.014471996 ubox
29 51 0.012198122 ubox
30 43 0.141682884 ubox
30 50 0.012592082 ubox
31 42 0.141840188 ubox
31 45 0.013886693 ubox
31 49 0.012995477 ubox
32 41 0.141915244 ubox
32 44 0.013896856 ubox
32 48 0.012279832 ubox
33 40 0.137621217 ubox
33 43 0.013120258 ubox
34 47 0.012471080 ubox
35 46 0.013269745 ubox
35 47 0.057058970 ubox
36 46 0.057976861 ubox
36 52 0.003370176 ubox
37 44 0.049695173 ubox
37 45 0.057333338 ubox
37 51 0.012473473 ubox
37 74 0.003975360 ubox
38 43 0.048139717 ubox
38 50 0.012379118 ubox
39 75 0.159838134 ubox
39 76 0.011142682 ubox
40 48 0.014381536 ubox
40 51 0.009794556 ubox
40 74 0.172863098 ubox
40 75 0.009045935 ubox
41 47 0.014610833 ubox
41 50 0.009807573 ubox
41 73 0.164235954 ubox
42 46 0.013168657 ubox
45 73 0.913288604 ubox
46 57 0.003676381 ubox
46 71 0.274184514 ubox
46 72 0.953613219 ubox
46 75 0.017190650 ubox
46 78 0.005598220 ubox
47 56 0.003679485 ubox
47 70 0.278856384 ubox
47 71 0.951597177 ubox
47 74 0.018419399 ubox
47 77 0.005509452 ubox
48 69 0.035741151 ubox
48 73 0.018299091 ubox
49 69 0.988524788 ubox
50 68 0.993698561 ubox
51 67 0.994211760 ubox
52 66 0.994203037 ubox
53 65 0.994116942 ubox
54 64 0.994214728 ubox
55 63 0.994226119 ubox
56 62 0.994219194 ubox
57 61 0.986985967 ubox
58 74 0.106893946 ubox
59 73 0.106966414 ubox
60 72 0.107123868 ubox
61 71 0.107127610 ubox
62 70 0.107127484 ubox
63 69 0.107083746 ubox
64 68 0.066069873 ubox
75 81 0.014684807 ubox
76 80 0.017487647 ubox
1 42 0.9500000 lbox
2 41 0.9500000 lbox
3 40 0.9500000 lbox
5 38 0.9500000 lbox
6 37 0.9500000 lbox
7 34 0.9500000 lbox
8 33 0.9500000 lbox
9 32 0.9500000 lbox
10 31 0.9500000 lbox
14 27 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
45 73 0.9500000 lbox
46 72 0.9500000 lbox
47 71 0.9500000 lbox
49 69 0.9500000 lbox
50 68 0.9500000 lbox
51 67 0.9500000 lbox
52 66 0.9500000 lbox
53 65 0.9500000 lbox
54 64 0.9500000 lbox
55 63 0.9500000 lbox
56 62 0.9500000 lbox
57 61 0.9500000 lbox
showpage
end
%%EOF
