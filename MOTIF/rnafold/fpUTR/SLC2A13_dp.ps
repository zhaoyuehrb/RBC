%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:18:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SLC2A13)
} def

/sequence { (\
CUGCCGGCCCGCGGAGCCGCGUCCCCCCGGGCAGCCCCGGGCCCCUGCCCU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 14 0.005065023 ubox
1 16 0.003305915 ubox
1 34 0.090563786 ubox
2 13 0.005094132 ubox
2 15 0.003364867 ubox
2 21 0.004955166 ubox
2 33 0.092289309 ubox
2 47 0.033414947 ubox
3 12 0.005328124 ubox
3 20 0.006902009 ubox
3 22 0.006177893 ubox
3 28 0.006888749 ubox
3 32 0.092552092 ubox
3 35 0.101655793 ubox
3 38 0.003303293 ubox
3 46 0.038672410 ubox
3 48 0.873736662 ubox
4 11 0.005268992 ubox
4 14 0.005426725 ubox
4 19 0.004884604 ubox
4 21 0.006488570 ubox
4 30 0.035752023 ubox
4 31 0.085458412 ubox
4 34 0.101950660 ubox
4 47 0.875956387 ubox
5 13 0.005448487 ubox
5 19 0.008533979 ubox
5 29 0.050398946 ubox
5 30 0.077643805 ubox
5 47 0.031735442 ubox
6 12 0.005443861 ubox
6 18 0.010345484 ubox
6 24 0.016772382 ubox
6 25 0.063508624 ubox
6 26 0.023567865 ubox
6 27 0.020432853 ubox
6 28 0.061064869 ubox
6 36 0.003354952 ubox
6 43 0.986017099 ubox
6 44 0.064034708 ubox
6 45 0.038243139 ubox
6 46 0.006052223 ubox
6 49 0.010624484 ubox
7 17 0.010347632 ubox
7 23 0.016812342 ubox
7 24 0.063722092 ubox
7 25 0.023305908 ubox
7 26 0.021007696 ubox
7 27 0.060758712 ubox
7 32 0.105233473 ubox
7 42 0.988282486 ubox
7 43 0.046120227 ubox
7 44 0.025735088 ubox
7 48 0.010626539 ubox
8 16 0.010310221 ubox
8 31 0.105286737 ubox
8 41 0.989669127 ubox
8 47 0.010578620 ubox
9 30 0.105305833 ubox
9 40 0.989659671 ubox
9 41 0.005706998 ubox
10 21 0.094504036 ubox
10 29 0.105304887 ubox
10 39 0.989567579 ubox
10 40 0.006656819 ubox
11 20 0.095233417 ubox
11 22 0.013697283 ubox
11 28 0.105030691 ubox
11 35 0.004526053 ubox
11 38 0.988667107 ubox
12 19 0.095243934 ubox
12 21 0.014194319 ubox
12 34 0.004947715 ubox
12 39 0.013140434 ubox
13 18 0.093935197 ubox
13 20 0.014165725 ubox
13 24 0.092024921 ubox
13 25 0.018314263 ubox
13 26 0.035256486 ubox
13 27 0.032718774 ubox
13 36 0.300100224 ubox
13 37 0.942184570 ubox
13 38 0.027077468 ubox
14 23 0.092235845 ubox
14 24 0.018174281 ubox
14 25 0.034985845 ubox
14 26 0.032569640 ubox
14 35 0.300170911 ubox
14 36 0.942044782 ubox
14 37 0.029406095 ubox
15 22 0.090774663 ubox
16 22 0.027171903 ubox
16 32 0.389787042 ubox
16 35 0.895427372 ubox
17 21 0.029134164 ubox
17 30 0.040460743 ubox
17 31 0.389659681 ubox
17 34 0.895089887 ubox
18 29 0.044673477 ubox
18 30 0.388925364 ubox
19 28 0.047982948 ubox
19 32 0.345639056 ubox
19 35 0.151675931 ubox
19 48 0.007065012 ubox
20 29 0.376715096 ubox
20 31 0.336175590 ubox
20 34 0.152110300 ubox
20 47 0.007105787 ubox
21 28 0.371364435 ubox
21 32 0.835034855 ubox
21 46 0.006407966 ubox
22 30 0.116124943 ubox
22 31 0.820028819 ubox
23 29 0.127949342 ubox
23 30 0.849527710 ubox
23 31 0.196850340 ubox
24 29 0.847323937 ubox
24 30 0.212288565 ubox
24 31 0.009614970 ubox
25 29 0.211606123 ubox
25 30 0.012149474 ubox
25 31 0.003381133 ubox
26 30 0.004369047 ubox
26 41 0.021618476 ubox
27 40 0.022151396 ubox
28 39 0.022513561 ubox
29 37 0.003860241 ubox
29 38 0.023228479 ubox
29 50 0.016888666 ubox
30 36 0.003935307 ubox
30 37 0.023220625 ubox
30 49 0.016926302 ubox
31 35 0.003939492 ubox
31 36 0.022937845 ubox
31 48 0.016939112 ubox
32 47 0.016938850 ubox
33 46 0.016767494 ubox
34 42 0.014430870 ubox
34 45 0.008898141 ubox
35 41 0.016231883 ubox
36 40 0.016116852 ubox
39 50 0.140266910 ubox
40 49 0.140451735 ubox
41 48 0.140460474 ubox
42 47 0.139834840 ubox
3 48 0.9500000 lbox
4 47 0.9500000 lbox
6 43 0.9500000 lbox
7 42 0.9500000 lbox
8 41 0.9500000 lbox
9 40 0.9500000 lbox
10 39 0.9500000 lbox
11 38 0.9500000 lbox
13 37 0.9500000 lbox
14 36 0.9500000 lbox
16 35 0.9500000 lbox
17 34 0.9500000 lbox
21 32 0.9500000 lbox
22 31 0.9500000 lbox
23 30 0.9500000 lbox
24 29 0.9500000 lbox
showpage
end
%%EOF
