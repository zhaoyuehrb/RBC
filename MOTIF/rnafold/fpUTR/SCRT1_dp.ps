%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:21:31 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SCRT1)
} def

/sequence { (\
GUGGGGACCCGCGCUGCCUCCGCCGCUCCUCGGAUGGUGACGGGGCCCUGCCGCCGCAGCCCCCCCAAGCCCCGGCUCCGCAGGCCCACAGCGCCGGAGCCCCGCAGGAAUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 105 0.998707383 ubox
2 104 0.998954584 ubox
3 102 0.005054477 ubox
3 103 0.999948739 ubox
4 101 0.006826096 ubox
4 102 0.999970108 ubox
5 100 0.008217142 ubox
5 101 0.999959110 ubox
6 100 0.999847162 ubox
8 97 0.190094521 ubox
9 96 0.190173392 ubox
9 97 0.981241841 ubox
10 96 0.981219092 ubox
11 94 0.719695257 ubox
11 95 0.693930270 ubox
12 93 0.999646959 ubox
13 92 0.999865225 ubox
13 94 0.015047162 ubox
14 91 0.999869278 ubox
14 93 0.014754142 ubox
15 39 0.021368071 ubox
15 90 0.998549154 ubox
16 38 0.078864697 ubox
16 41 0.007299471 ubox
16 46 0.050536416 ubox
16 85 0.027201581 ubox
16 87 0.003419123 ubox
16 89 0.990151607 ubox
16 92 0.013691212 ubox
17 22 0.005401343 ubox
17 37 0.205311298 ubox
17 43 0.291507433 ubox
17 44 0.024898152 ubox
17 45 0.065190672 ubox
17 84 0.030636983 ubox
17 91 0.013568089 ubox
18 36 0.206041037 ubox
18 37 0.005531021 ubox
18 42 0.456147342 ubox
18 43 0.035935039 ubox
18 44 0.065643871 ubox
18 45 0.021451848 ubox
18 83 0.030637826 ubox
19 34 0.204974902 ubox
19 36 0.003420083 ubox
19 37 0.006951020 ubox
19 40 0.180193024 ubox
19 42 0.047324014 ubox
19 43 0.061348101 ubox
19 44 0.022587218 ubox
19 82 0.029794026 ubox
20 33 0.208188753 ubox
20 36 0.009063877 ubox
20 37 0.073269995 ubox
20 39 0.133795627 ubox
20 42 0.106368374 ubox
20 43 0.071517161 ubox
20 84 0.008292883 ubox
21 32 0.208186292 ubox
21 36 0.073974471 ubox
21 39 0.951636669 ubox
21 42 0.100072830 ubox
21 80 0.028274745 ubox
21 83 0.008299261 ubox
22 31 0.206094955 ubox
22 35 0.073272616 ubox
22 38 0.967054483 ubox
22 41 0.098640036 ubox
22 76 0.006801137 ubox
22 79 0.027758433 ubox
22 81 0.009387272 ubox
22 85 0.048007669 ubox
23 33 0.078722079 ubox
23 37 0.968324629 ubox
23 43 0.006755358 ubox
23 75 0.007177874 ubox
23 80 0.008726654 ubox
23 84 0.048075679 ubox
24 32 0.078747957 ubox
24 36 0.968247037 ubox
24 39 0.095787712 ubox
24 42 0.010561134 ubox
24 74 0.007165682 ubox
24 80 0.006367252 ubox
24 83 0.048043991 ubox
25 31 0.076410382 ubox
25 35 0.949082165 ubox
25 38 0.096071241 ubox
25 41 0.010529882 ubox
25 46 0.005502171 ubox
25 73 0.006839331 ubox
25 76 0.028263353 ubox
25 79 0.007292022 ubox
25 81 0.047288597 ubox
26 33 0.173097715 ubox
26 37 0.095606663 ubox
26 45 0.005510683 ubox
26 75 0.027997441 ubox
26 80 0.047378174 ubox
27 32 0.157118790 ubox
27 33 0.066982264 ubox
27 34 0.946172087 ubox
27 36 0.072760703 ubox
27 40 0.006680347 ubox
27 44 0.005473775 ubox
27 74 0.013061514 ubox
28 32 0.070125915 ubox
28 33 0.951451223 ubox
28 36 0.008864316 ubox
28 37 0.014443006 ubox
28 39 0.006632209 ubox
28 43 0.005534523 ubox
28 74 0.003402649 ubox
28 75 0.003218869 ubox
29 36 0.015844899 ubox
29 37 0.004279812 ubox
29 42 0.005590288 ubox
29 69 0.005157663 ubox
29 75 0.011342383 ubox
30 36 0.003780312 ubox
30 37 0.004785914 ubox
30 40 0.005901804 ubox
30 68 0.005086670 ubox
30 75 0.044122495 ubox
31 36 0.005549666 ubox
31 39 0.005944210 ubox
31 42 0.003785522 ubox
31 74 0.054760775 ubox
32 38 0.005615773 ubox
32 41 0.003839536 ubox
32 65 0.004022250 ubox
32 66 0.004172002 ubox
32 73 0.056512155 ubox
33 64 0.004071202 ubox
33 65 0.004124727 ubox
33 72 0.056221542 ubox
35 42 0.016572621 ubox
36 41 0.023498882 ubox
36 61 0.005972319 ubox
36 71 0.057047392 ubox
37 60 0.006011728 ubox
37 70 0.057352054 ubox
38 59 0.005906964 ubox
38 67 0.003865008 ubox
38 69 0.057137000 ubox
39 66 0.004703399 ubox
39 89 0.013316092 ubox
41 56 0.006112201 ubox
41 74 0.005626801 ubox
42 55 0.006123333 ubox
42 63 0.012116541 ubox
42 64 0.012156777 ubox
42 65 0.056336538 ubox
42 66 0.011765495 ubox
42 73 0.008449641 ubox
42 87 0.105015270 ubox
43 54 0.006117985 ubox
43 62 0.012172686 ubox
43 63 0.012180428 ubox
43 64 0.056446105 ubox
43 65 0.011630769 ubox
43 72 0.008455464 ubox
43 86 0.095906455 ubox
43 87 0.941569809 ubox
44 52 0.006301106 ubox
44 61 0.012206148 ubox
44 62 0.012185157 ubox
44 63 0.056471311 ubox
44 64 0.011475699 ubox
44 71 0.008456174 ubox
44 85 0.085322305 ubox
44 86 0.973775503 ubox
44 87 0.181249104 ubox
45 51 0.006307027 ubox
45 60 0.012226162 ubox
45 61 0.012172003 ubox
45 62 0.056469208 ubox
45 63 0.011295816 ubox
45 70 0.008456093 ubox
45 85 0.975186408 ubox
45 86 0.180934147 ubox
46 50 0.006261212 ubox
46 59 0.011017611 ubox
46 69 0.008443593 ubox
46 84 0.798042751 ubox
47 83 0.566133762 ubox
47 84 0.599233677 ubox
48 59 0.059705095 ubox
48 83 0.821915794 ubox
49 58 0.060634371 ubox
49 80 0.017291219 ubox
49 82 0.995705443 ubox
50 57 0.060795320 ubox
50 79 0.018939201 ubox
50 81 0.997845474 ubox
51 56 0.060627753 ubox
51 75 0.003170937 ubox
51 80 0.997095420 ubox
52 74 0.003216337 ubox
52 80 0.024286339 ubox
53 73 0.003204708 ubox
53 76 0.997520622 ubox
53 79 0.014377877 ubox
54 75 0.998078706 ubox
55 74 0.998057117 ubox
56 70 0.014997295 ubox
56 73 0.995935704 ubox
56 79 0.006931944 ubox
57 69 0.016346409 ubox
58 77 0.008582161 ubox
59 70 0.996979802 ubox
59 76 0.008839413 ubox
60 69 0.996913587 ubox
60 75 0.008828309 ubox
61 74 0.008803820 ubox
68 77 0.004119295 ubox
69 76 0.004364431 ubox
69 85 0.009667825 ubox
70 75 0.004351416 ubox
70 84 0.009660414 ubox
71 83 0.009614284 ubox
73 80 0.007454794 ubox
74 79 0.007409691 ubox
74 86 0.017340385 ubox
75 81 0.007175894 ubox
75 85 0.017669547 ubox
76 80 0.007130190 ubox
76 84 0.017675603 ubox
77 83 0.016551430 ubox
78 83 0.004267891 ubox
1 105 0.9500000 lbox
2 104 0.9500000 lbox
3 103 0.9500000 lbox
4 102 0.9500000 lbox
5 101 0.9500000 lbox
6 100 0.9500000 lbox
9 97 0.9500000 lbox
10 96 0.9500000 lbox
11 95 0.9500000 lbox
12 93 0.9500000 lbox
13 92 0.9500000 lbox
14 91 0.9500000 lbox
15 90 0.9500000 lbox
16 89 0.9500000 lbox
21 39 0.9500000 lbox
22 38 0.9500000 lbox
23 37 0.9500000 lbox
24 36 0.9500000 lbox
25 35 0.9500000 lbox
27 34 0.9500000 lbox
28 33 0.9500000 lbox
43 87 0.9500000 lbox
44 86 0.9500000 lbox
45 85 0.9500000 lbox
46 84 0.9500000 lbox
47 83 0.9500000 lbox
49 82 0.9500000 lbox
50 81 0.9500000 lbox
51 80 0.9500000 lbox
53 76 0.9500000 lbox
54 75 0.9500000 lbox
55 74 0.9500000 lbox
56 73 0.9500000 lbox
59 70 0.9500000 lbox
60 69 0.9500000 lbox
showpage
end
%%EOF
