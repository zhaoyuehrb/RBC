%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:04:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAAAUUCCCUCCCUUCGCUCCUUCCCCGGAACAGCGGCCUCUGACACCAGCACAGCAAACCCGCCGGGAUCAAAGUGUACCAGUCGGCAGCAUGGGUCAUGUGUCUCCAGCUCUUCCCAGCACAACCUCACCCUCCUCAGGGCUCUGAGGGGGCGGAGAGGACAGGCCAGAGCG\
) } def
/len { sequence length } bind def

/coor [
[30.62347794 286.19488525]
[35.49010468 300.51867676]
[35.69021988 315.64529419]
[31.20421410 330.09283447]
[22.47158432 342.44583130]
[10.34786320 351.49404907]
[-3.97919059 356.35107422]
[-19.10595894 356.54104614]
[-33.55047226 352.04537964]
[-45.89760971 343.30447388]
[-54.93771744 331.17468262]
[-59.78514481 316.84439087]
[-59.96498871 301.71749878]
[-55.45962524 287.27600098]
[-46.71044922 274.93472290]
[-34.57461166 265.90274048]
[-20.24106216 261.06491089]
[-5.11405420 260.89520264]
[-0.65639675 246.57287598]
[3.80126071 232.25053406]
[8.25891781 217.92820740]
[12.71657562 203.60586548]
[12.58800888 203.50750732]
[12.46016788 203.40821838]
[-0.25584805 211.36453247]
[-12.97186470 219.32084656]
[-20.18014336 234.05084229]
[-36.55712509 234.90318298]
[-45.25557709 221.00106812]
[-37.32727432 206.64578247]
[-20.92817879 206.60482788]
[-8.21216202 198.64851379]
[4.50385475 190.69219971]
[4.16292477 181.88047791]
[7.32478809 173.54264832]
[13.55962753 167.02981567]
[21.93337631 163.42927551]
[31.14717865 163.38354492]
[38.99032974 150.59742737]
[46.83348465 137.81129456]
[54.67663574 125.02517700]
[62.51979065 112.23905182]
[60.66092300 97.35468292]
[49.91407394 86.89020538]
[39.16722107 76.42573547]
[28.42037010 65.96125793]
[17.67351913 55.49678802]
[2.92580533 59.55291367]
[-11.77499676 55.70802307]
[-22.50614357 45.09157944]
[-26.45606995 30.62596321]
[-22.66056442 16.22249985]
[-33.40741348 5.75802755]
[-44.15426636 -4.70644522]
[-54.90111923 -15.17091846]
[-68.86824799 -9.23838139]
[-84.00183105 -9.10561562]
[-97.99548340 -14.76171303]
[-108.72845459 -25.31590271]
[-114.58704376 -39.13768768]
[-114.70716858 -54.10869217]
[-109.10166168 -67.94731903]
[-119.84851074 -78.41178894]
[-130.59536743 -88.87626648]
[-146.16152954 -95.59420013]
[-144.01527405 -112.41175079]
[-127.26082611 -115.00493622]
[-120.13088989 -99.62311554]
[-109.38404083 -89.15864563]
[-98.63719177 -78.69416809]
[-84.95269012 -84.66608429]
[-69.98379517 -84.94453430]
[-56.01094437 -79.45596313]
[-45.17477798 -69.00775146]
[-39.14816666 -55.16963196]
[-38.87802124 -40.03787613]
[-44.43664551 -25.91776848]
[-33.68979263 -15.45329666]
[-22.94294167 -4.98882389]
[-12.19609165 5.47564936]
[2.10122824 1.29806101]
[16.66686821 4.86150408]
[27.56521606 15.30623341]
[31.80009079 29.89947319]
[28.13799286 44.74993515]
[38.88484192 55.21440887]
[49.63169479 65.67888641]
[60.37854767 76.14335632]
[71.12539673 86.60782623]
[81.55295563 71.53792572]
[99.51059723 63.99785995]
[119.84188843 67.48193359]
[129.20909119 55.76632690]
[132.13729858 47.08019638]
[138.84800720 43.92785645]
[148.42166138 32.38034821]
[157.99533081 20.83283615]
[167.56898499 9.28532696]
[162.34913635 -5.09174919]
[165.00885010 -20.05245399]
[174.73524475 -31.59643555]
[188.83959961 -36.68792343]
[203.49996948 -34.05371475]
[213.07363892 -45.60122299]
[210.08932495 -60.95140076]
[217.71528625 -74.60346222]
[232.35078430 -80.11131287]
[247.08537292 -74.87432098]
[254.96182251 -61.36523819]
[252.26113892 -45.96263123]
[240.25848389 -35.93914413]
[224.62113953 -36.02756119]
[215.04748535 -24.48005104]
[220.35247803 -10.56162548]
[217.96253967 4.24189186]
[208.42063904 15.93884087]
[194.21180725 21.32455254]
[179.11650085 18.85898972]
[169.54283142 30.40649986]
[159.96917725 41.95401001]
[150.39550781 53.50151825]
[140.92469788 65.13353729]
[131.55749512 76.84914398]
[133.33744812 84.13486481]
[146.09565735 76.24639130]
[157.54052734 85.94252014]
[151.85560608 99.82350159]
[136.89735413 98.70631409]
[138.67729187 105.99203491]
[152.39128113 112.06875610]
[166.10527039 118.14547729]
[180.69744873 112.69514465]
[194.51882935 119.05316162]
[199.62495422 132.99816895]
[213.33894348 139.07487488]
[227.05293274 145.15159607]
[240.76692200 151.22831726]
[254.48091125 157.30503845]
[268.19488525 163.38175964]
[281.90887451 169.45846558]
[295.62286377 175.53518677]
[309.33685303 181.61190796]
[325.57672119 179.33171082]
[335.45672607 192.42054749]
[328.81320190 207.41372681]
[312.48040771 208.88755798]
[303.26016235 195.32589722]
[289.54617310 189.24917603]
[275.83218384 183.17245483]
[262.11819458 177.09574890]
[248.40419006 171.01902771]
[234.69020081 164.94230652]
[220.97621155 158.86558533]
[207.26222229 152.78886414]
[193.54823303 146.71215820]
[179.78814697 152.29747009]
[165.79365540 146.33016968]
[160.02856445 131.85946655]
[146.31457520 125.78274536]
[132.60058594 119.70602417]
[124.09133911 128.14739990]
[113.64623260 133.31927490]
[102.42896271 134.87690735]
[91.61999512 132.86576843]
[82.29251862 127.69644165]
[75.30591583 120.08220673]
[67.46276093 132.86833191]
[59.61960602 145.65444946]
[51.77645493 158.44058228]
[43.93330383 171.22669983]
[46.73187256 195.22575378]
[27.03891182 208.06352234]
[22.58125305 222.38586426]
[18.12359619 236.70819092]
[13.66593838 251.03053284]
[9.20828152 265.35287476]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 176]
[19 175]
[20 174]
[21 173]
[22 172]
[24 33]
[25 32]
[26 31]
[38 170]
[39 169]
[40 168]
[41 167]
[42 166]
[43 89]
[44 88]
[45 87]
[46 86]
[47 85]
[52 80]
[53 79]
[54 78]
[55 77]
[62 70]
[63 69]
[64 68]
[92 123]
[93 122]
[95 121]
[96 120]
[97 119]
[98 118]
[103 113]
[104 112]
[129 160]
[130 159]
[131 158]
[134 155]
[135 154]
[136 153]
[137 152]
[138 151]
[139 150]
[140 149]
[141 148]
[142 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
