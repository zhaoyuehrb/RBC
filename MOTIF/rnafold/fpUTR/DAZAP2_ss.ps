%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:49:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGACCCUCCCGCGGCCGACUGGAGGCCCGGAGCAGGGGCGGAGUUUCCGGCGGCAGCGCCACUCGGGCGUCGGGUGACGCUAGGCGGACGGACCAUCAUGUGACACGGAAGUAGCUCCGAACAGGAAGAGGACGAAAAAAAUAACCGUCCGCGACGCCGAGACAAACCGGACCCGCAACCACC\
) } def
/len { sequence length } bind def

/coor [
[-2.14067364 350.27459717]
[-16.04712486 344.65225220]
[-26.20966530 333.61944580]
[-30.67301941 319.29888916]
[-28.57831001 304.44552612]
[-38.58367920 315.62106323]
[-48.58905029 326.79660034]
[-58.59441757 337.97213745]
[-61.81000519 357.85729980]
[-80.39910126 363.13183594]
[-90.01921844 374.64068604]
[-99.63933563 386.14953613]
[-102.75225067 394.76205444]
[-109.52183533 397.77032471]
[-119.33599091 409.11413574]
[-129.15014648 420.45794678]
[-138.96430969 431.80178833]
[-136.30316162 447.21127319]
[-144.21426392 460.70010376]
[-158.96224976 465.89923096]
[-173.58354187 460.35385132]
[-181.17445374 446.68225098]
[-178.15075684 431.33978271]
[-165.94015503 421.57067871]
[-150.30813599 421.98760986]
[-140.49397278 410.64379883]
[-130.67980957 399.29998779]
[-120.86566162 387.95614624]
[-111.14817047 376.52941895]
[-101.52805328 365.02056885]
[-91.90793610 353.51171875]
[-93.73065948 343.42898560]
[-89.60485077 333.81045532]
[-80.67568970 327.94033813]
[-69.76995087 327.96676636]
[-59.76458359 316.79122925]
[-49.75921631 305.61569214]
[-39.75384521 294.44015503]
[-30.93706703 282.30490112]
[-23.40032959 269.33581543]
[-15.86359406 256.36669922]
[-8.32685852 243.39759827]
[-7.68297672 236.01773071]
[-0.55042768 230.27381897]
[7.20544720 217.43455505]
[6.94417095 212.64501953]
[9.70460224 207.64450073]
[15.44899178 204.29736328]
[23.63637161 191.72886658]
[31.82375145 179.16038513]
[40.01113129 166.59190369]
[47.43747711 153.55928040]
[54.07656860 140.10853577]
[60.71565628 126.65779114]
[67.35474396 113.20704651]
[64.81973267 98.42280579]
[54.07891083 87.95214844]
[43.33808517 77.48149109]
[32.59725952 67.01083374]
[17.31459999 62.91804123]
[13.60214806 48.49351501]
[2.86132288 38.02285767]
[-7.87950277 27.55220032]
[-18.62032890 17.08154297]
[-29.36115456 6.61088610]
[-40.10197830 -3.85977149]
[-56.09748459 -5.09402609]
[-64.98594666 -18.44972992]
[-59.94889832 -33.68152618]
[-44.85033035 -39.10488892]
[-31.27257538 -30.55947685]
[-29.63132095 -14.60059643]
[-18.89049530 -4.12993956]
[-8.14967060 6.34071827]
[2.59115481 16.81137466]
[13.33198071 27.28203392]
[24.07280540 37.75268936]
[38.58720779 41.09654999]
[43.06791687 56.27000809]
[53.80874252 66.74066925]
[64.54956818 77.21132660]
[75.29039001 87.68198395]
[86.42453003 78.02436066]
[100.03851318 75.94849396]
[111.76605225 81.08912659]
[123.51617432 71.76525879]
[135.26629639 62.44139099]
[147.01643372 53.11751938]
[158.76655579 43.79365158]
[170.51667786 34.46977997]
[182.26679993 25.14591217]
[194.01693726 15.82204247]
[198.45507812 5.45018911]
[207.94320679 2.24606657]
[217.56332397 -9.26277256]
[220.10182190 -29.24566650]
[238.50108337 -35.14839172]
[247.72485352 -46.97726059]
[250.10925293 -62.61775970]
[264.03704834 -67.89656830]
[273.26080322 -79.72544098]
[282.48458862 -91.55430603]
[280.08172607 -100.71411896]
[282.14605713 -109.81485748]
[288.08782959 -116.83108521]
[296.46923828 -120.26163483]
[305.35076904 -119.44992828]
[315.16491699 -130.79374695]
[324.97909546 -142.13757324]
[334.79324341 -153.48139954]
[333.40377808 -169.22448730]
[343.61721802 -181.28521729]
[359.37411499 -182.50816345]
[371.32617188 -172.16777039]
[372.38247681 -156.39881897]
[361.91629028 -144.55674744]
[346.13705444 -143.66723633]
[336.32290649 -132.32341003]
[326.50875854 -120.97959137]
[316.69458008 -109.63576508]
[314.62548828 -89.11302185]
[294.31344604 -82.33054352]
[285.08969116 -70.50167084]
[275.86590576 -58.67280579]
[274.14126587 -43.87838745]
[259.55371094 -37.75349426]
[250.32995605 -25.92462730]
[252.49400330 -15.90957737]
[248.69718933 -6.15651798]
[239.97250366 0.01343974]
[229.07215881 0.35734361]
[219.45204163 11.86618233]
[233.93354797 7.95647812]
[248.78401184 10.06924820]
[261.60052490 17.86263466]
[270.30932617 30.07562256]
[273.50125122 44.73207474]
[270.65982056 59.46049500]
[262.24484253 71.87773895]
[249.61785889 79.97461700]
[234.82200623 82.44100952]
[220.25135803 78.87784576]
[208.26351929 69.86165619]
[200.79818726 56.85132217]
[199.06330872 41.95198822]
[203.34080505 27.57216835]
[191.59068298 36.89603806]
[179.84054565 46.21990585]
[168.09042358 55.54377747]
[156.34030151 64.86764526]
[144.59017944 74.19151306]
[132.84004211 83.51538849]
[121.08992004 92.83925629]
[122.26021576 107.85887909]
[113.34761810 121.06890869]
[97.32449341 126.13884735]
[80.80548859 119.84613800]
[74.16639709 133.29687500]
[67.52731323 146.74761963]
[60.88822174 160.19836426]
[75.12049866 155.46102905]
[89.12017059 160.84704590]
[96.50736237 173.90190125]
[93.91560364 188.67630005]
[82.52600098 198.43728638]
[67.52898407 198.73663330]
[55.75894928 189.43791199]
[52.57961655 174.77928162]
[44.39223480 187.34776306]
[36.20485687 199.91624451]
[28.01747704 212.48474121]
[20.04470062 225.19042969]
[12.28882504 238.02969360]
[4.64224386 250.93432617]
[-2.89449215 263.90344238]
[-10.43122864 276.87252808]
[-17.96796417 289.84164429]
[-4.48921680 283.25958252]
[10.50969696 283.07904053]
[24.14298058 289.33471680]
[33.78758621 300.82305908]
[37.58789062 315.33364868]
[34.81270981 330.07470703]
[25.99599648 342.20999146]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 38]
[6 37]
[7 36]
[8 35]
[10 31]
[11 30]
[12 29]
[14 28]
[15 27]
[16 26]
[17 25]
[39 177]
[40 176]
[41 175]
[42 174]
[44 173]
[45 172]
[48 171]
[49 170]
[50 169]
[51 168]
[52 160]
[53 159]
[54 158]
[55 157]
[56 82]
[57 81]
[58 80]
[59 79]
[61 77]
[62 76]
[63 75]
[64 74]
[65 73]
[66 72]
[85 153]
[86 152]
[87 151]
[88 150]
[89 149]
[90 148]
[91 147]
[92 146]
[94 132]
[95 131]
[97 127]
[98 126]
[100 124]
[101 123]
[102 122]
[107 120]
[108 119]
[109 118]
[110 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
