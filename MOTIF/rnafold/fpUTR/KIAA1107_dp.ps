%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:28:40 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KIAA1107)
} def

/sequence { (\
GAACACAGGGUUUUACGUGCAAGAUCCAGGCUCUGCGUGAUAAGCUGUGGAUCUUCCUGGUUCAGUCUUUCUAUGCUGUUCGUCACACAGAAAGCUGGAAGCUG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 13 0.007906490 ubox
1 53 0.008866717 ubox
1 62 0.010249291 ubox
1 63 0.969159655 ubox
1 67 0.005192967 ubox
2 12 0.009103243 ubox
2 52 0.008691823 ubox
2 61 0.009113382 ubox
2 62 0.984360074 ubox
2 66 0.004902871 ubox
3 11 0.009378071 ubox
3 61 0.988910671 ubox
4 10 0.009426836 ubox
4 19 0.011481234 ubox
4 49 0.013904275 ubox
4 60 0.989524933 ubox
4 104 0.005964520 ubox
5 18 0.011548823 ubox
5 48 0.014015628 ubox
5 61 0.011634532 ubox
5 103 0.005324056 ubox
6 17 0.011544952 ubox
6 47 0.014032827 ubox
6 49 0.003661357 ubox
6 59 0.997648992 ubox
6 60 0.011276044 ubox
6 104 0.005500744 ubox
7 46 0.013973550 ubox
7 48 0.003688601 ubox
7 58 0.999004494 ubox
7 103 0.005489311 ubox
8 27 0.005916817 ubox
8 45 0.013861332 ubox
8 56 0.003719655 ubox
8 57 0.998810687 ubox
8 58 0.025154823 ubox
8 102 0.005389684 ubox
9 26 0.006011852 ubox
9 46 0.003824795 ubox
9 54 0.006685929 ubox
9 55 0.003657158 ubox
9 56 0.997656849 ubox
9 57 0.040091056 ubox
9 103 0.008302932 ubox
10 16 0.206523434 ubox
10 18 0.011910746 ubox
10 20 0.388497663 ubox
10 25 0.006326508 ubox
10 45 0.004322605 ubox
10 52 0.007367469 ubox
10 53 0.026267307 ubox
10 54 0.009926932 ubox
10 55 0.654694098 ubox
10 56 0.050252539 ubox
10 102 0.008759895 ubox
11 15 0.186347839 ubox
11 17 0.014361182 ubox
11 19 0.386598106 ubox
11 22 0.008194637 ubox
11 24 0.006533450 ubox
11 44 0.004336520 ubox
11 51 0.007861513 ubox
11 101 0.008757144 ubox
12 21 0.015848633 ubox
12 22 0.006750706 ubox
12 23 0.006756229 ubox
12 43 0.004163678 ubox
12 50 0.006491650 ubox
12 51 0.086871158 ubox
12 100 0.008559634 ubox
13 21 0.011091335 ubox
13 22 0.014571495 ubox
13 40 0.013764255 ubox
13 42 0.003684363 ubox
13 49 0.004612281 ubox
13 50 0.089660613 ubox
13 51 0.005273324 ubox
13 99 0.007948167 ubox
14 21 0.022080249 ubox
14 22 0.004262560 ubox
14 39 0.014060445 ubox
14 49 0.090484331 ubox
14 50 0.004193726 ubox
14 98 0.007221704 ubox
15 38 0.014110990 ubox
15 48 0.090919861 ubox
15 61 0.007179244 ubox
16 37 0.014094425 ubox
16 39 0.003931772 ubox
16 47 0.090962360 ubox
16 49 0.005464917 ubox
16 59 0.004258512 ubox
16 60 0.008199995 ubox
17 36 0.013736752 ubox
17 38 0.003823845 ubox
17 45 0.009986284 ubox
17 46 0.084559388 ubox
17 48 0.005118923 ubox
17 58 0.003832110 ubox
18 35 0.013543686 ubox
18 37 0.005524514 ubox
18 44 0.009938639 ubox
19 31 0.008823880 ubox
19 34 0.004254083 ubox
19 36 0.006915046 ubox
19 45 0.090247563 ubox
19 102 0.005923921 ubox
20 30 0.008831750 ubox
20 35 0.007055879 ubox
20 44 0.090046483 ubox
20 59 0.003228558 ubox
20 101 0.005933731 ubox
21 34 0.005506892 ubox
21 55 0.710711642 ubox
22 32 0.005225911 ubox
22 34 0.009503466 ubox
22 54 0.988667138 ubox
22 55 0.015396824 ubox
22 103 0.003624276 ubox
23 31 0.005371795 ubox
23 33 0.010708144 ubox
23 53 0.995556526 ubox
23 102 0.003778776 ubox
24 32 0.010331428 ubox
24 38 0.008016615 ubox
24 41 0.081360310 ubox
24 52 0.995391958 ubox
25 37 0.007867603 ubox
25 40 0.083607970 ubox
25 51 0.995400101 ubox
25 99 0.008204863 ubox
26 39 0.060756018 ubox
26 49 0.003582331 ubox
26 50 0.995639473 ubox
26 98 0.008640450 ubox
27 35 0.013769345 ubox
27 39 0.067204731 ubox
27 47 0.007733984 ubox
27 49 0.995349202 ubox
27 97 0.008647941 ubox
28 34 0.013866374 ubox
28 38 0.088511084 ubox
28 46 0.014405783 ubox
28 48 0.903320148 ubox
28 96 0.008415661 ubox
29 33 0.013615439 ubox
29 45 0.016994216 ubox
29 46 0.893158705 ubox
29 95 0.007642227 ubox
29 96 0.003604665 ubox
30 36 0.090317797 ubox
30 38 0.005383725 ubox
30 45 0.985159637 ubox
30 48 0.036594669 ubox
30 95 0.005200529 ubox
31 35 0.089679059 ubox
31 37 0.005615325 ubox
31 44 0.984628554 ubox
31 47 0.046305068 ubox
31 94 0.006264808 ubox
32 40 0.416879053 ubox
32 43 0.860018056 ubox
32 51 0.003470143 ubox
32 91 0.009134652 ubox
32 93 0.003770240 ubox
33 39 0.532115344 ubox
33 44 0.093066836 ubox
33 50 0.003548711 ubox
33 90 0.010269408 ubox
34 42 0.304050758 ubox
34 43 0.110583551 ubox
34 47 0.005652720 ubox
34 49 0.003542558 ubox
34 89 0.010280861 ubox
35 41 0.289115733 ubox
35 45 0.107879341 ubox
35 48 0.005565789 ubox
35 88 0.010282077 ubox
36 44 0.107970437 ubox
36 47 0.006382748 ubox
37 45 0.010621160 ubox
37 46 0.004187936 ubox
37 86 0.010278798 ubox
38 44 0.010571267 ubox
38 85 0.010278194 ubox
39 84 0.010265922 ubox
40 83 0.010232755 ubox
41 82 0.009548284 ubox
43 77 0.005537670 ubox
43 80 0.007882319 ubox
44 76 0.005825867 ubox
44 79 0.008177753 ubox
45 75 0.005793291 ubox
45 78 0.008177016 ubox
46 75 0.003183309 ubox
47 74 0.007669704 ubox
47 76 0.004111507 ubox
48 64 0.004769835 ubox
48 73 0.008035411 ubox
48 75 0.003598799 ubox
49 57 0.003334871 ubox
49 63 0.005655996 ubox
49 72 0.008328457 ubox
50 56 0.003557239 ubox
50 62 0.008188298 ubox
50 71 0.008375857 ubox
51 61 0.008554882 ubox
51 70 0.008291414 ubox
52 60 0.008635747 ubox
53 59 0.008704608 ubox
57 65 0.008171278 ubox
57 101 0.004467754 ubox
58 64 0.008194440 ubox
58 100 0.004309921 ubox
58 104 0.005016071 ubox
59 63 0.008067482 ubox
59 103 0.014225615 ubox
60 102 0.035374665 ubox
61 99 0.108125058 ubox
61 100 0.013406664 ubox
61 101 0.031897040 ubox
62 98 0.129692871 ubox
62 99 0.016408214 ubox
62 100 0.017240555 ubox
63 97 0.156344582 ubox
63 98 0.013504018 ubox
63 104 0.183228027 ubox
64 72 0.004573712 ubox
64 77 0.004200309 ubox
64 96 0.194390965 ubox
64 103 0.802965897 ubox
65 71 0.004817316 ubox
65 76 0.004417444 ubox
65 95 0.197883752 ubox
65 102 0.840932805 ubox
66 75 0.004376388 ubox
66 94 0.029651137 ubox
66 99 0.006027157 ubox
66 101 0.555533610 ubox
67 94 0.200080802 ubox
67 98 0.006722361 ubox
67 101 0.620928928 ubox
68 92 0.003216363 ubox
68 93 0.202351841 ubox
68 97 0.006299593 ubox
68 99 0.015744364 ubox
68 100 0.566354210 ubox
68 101 0.387952052 ubox
69 92 0.203604536 ubox
69 98 0.010536370 ubox
69 99 0.499343113 ubox
69 100 0.739622885 ubox
69 101 0.011748814 ubox
70 91 0.204103178 ubox
70 97 0.006770943 ubox
70 98 0.422017480 ubox
70 99 0.838507010 ubox
70 100 0.013093346 ubox
71 90 0.204182860 ubox
71 94 0.004256290 ubox
71 97 0.418192955 ubox
71 98 0.882530370 ubox
72 89 0.198437083 ubox
72 93 0.003951553 ubox
72 97 0.881718185 ubox
73 83 0.007480606 ubox
73 96 0.860320525 ubox
74 82 0.007508413 ubox
74 85 0.022997887 ubox
74 87 0.196293855 ubox
74 89 0.021174652 ubox
74 97 0.004640172 ubox
75 81 0.007364973 ubox
75 83 0.011350712 ubox
75 84 0.023016410 ubox
75 86 0.197539819 ubox
75 88 0.030652268 ubox
75 95 0.976370831 ubox
75 96 0.003735815 ubox
75 102 0.004391799 ubox
76 82 0.022927422 ubox
76 90 0.060600501 ubox
76 94 0.976705434 ubox
76 101 0.004398700 ubox
77 85 0.192716996 ubox
77 87 0.035369931 ubox
77 89 0.062376929 ubox
77 93 0.965146253 ubox
77 100 0.004291180 ubox
78 84 0.193616340 ubox
78 86 0.037145241 ubox
78 88 0.064087005 ubox
78 95 0.003563806 ubox
79 85 0.035682415 ubox
79 87 0.061820586 ubox
79 90 0.029075035 ubox
79 91 0.108961426 ubox
79 92 0.816403111 ubox
79 93 0.007571885 ubox
79 94 0.003361040 ubox
80 89 0.031437088 ubox
80 90 0.102943748 ubox
80 91 0.955623666 ubox
80 92 0.011719518 ubox
81 90 0.961750276 ubox
82 88 0.258580451 ubox
83 87 0.234171970 ubox
83 91 0.019386003 ubox
84 90 0.021004624 ubox
88 97 0.003854861 ubox
89 96 0.003916970 ubox
90 95 0.003910515 ubox
93 103 0.027608606 ubox
94 102 0.030525027 ubox
95 101 0.030813908 ubox
96 100 0.027767568 ubox
97 103 0.011432591 ubox
98 102 0.011959780 ubox
1 63 0.9500000 lbox
2 62 0.9500000 lbox
3 61 0.9500000 lbox
4 60 0.9500000 lbox
6 59 0.9500000 lbox
7 58 0.9500000 lbox
8 57 0.9500000 lbox
9 56 0.9500000 lbox
10 55 0.9500000 lbox
22 54 0.9500000 lbox
23 53 0.9500000 lbox
24 52 0.9500000 lbox
25 51 0.9500000 lbox
26 50 0.9500000 lbox
27 49 0.9500000 lbox
28 48 0.9500000 lbox
29 46 0.9500000 lbox
30 45 0.9500000 lbox
31 44 0.9500000 lbox
32 43 0.9500000 lbox
64 103 0.9500000 lbox
65 102 0.9500000 lbox
66 101 0.9500000 lbox
69 100 0.9500000 lbox
70 99 0.9500000 lbox
71 98 0.9500000 lbox
72 97 0.9500000 lbox
73 96 0.9500000 lbox
75 95 0.9500000 lbox
76 94 0.9500000 lbox
77 93 0.9500000 lbox
79 92 0.9500000 lbox
80 91 0.9500000 lbox
81 90 0.9500000 lbox
showpage
end
%%EOF
