%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:22:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGUGACCCGCACGGCGCCUCGAGGCCGGAAGCGAUUGCGAGCCAGCGCGCGCGCUUCGGCGUUCCCGGCGGUCUGCGAAGUUUCCGGAGCCCGGGUCCCGCCGCGGGUUCGCGCUUGUGCUCGCGCUCGUUCCUGGAGUCGGCGGCCGCUGCGCGCGCUCGUUGCCCAACCCGGUCCCCGCCCCCAGACACGCCGGGCUCUCGGGGCACCACAGCC\
) } def
/len { sequence length } bind def

/coor [
[101.10311127 316.99948120]
[88.47514343 308.90414429]
[82.13487244 295.30966187]
[78.70680237 309.91268921]
[75.27873230 324.51568604]
[82.47389984 338.85476685]
[75.61872101 353.35946655]
[59.97190857 356.90301514]
[47.53635406 346.76712036]
[47.85155106 330.72717285]
[60.67570877 321.08764648]
[64.10377502 306.48461914]
[67.53184509 291.88159180]
[70.00637817 277.08709717]
[71.51696777 262.16336060]
[65.10070801 248.72158813]
[74.18843079 235.77076721]
[75.69902039 220.84703064]
[77.20960999 205.92327881]
[78.72019196 190.99954224]
[80.23078156 176.07579041]
[81.74137115 161.15205383]
[83.25196075 146.22830200]
[84.76254272 131.30456543]
[73.00624847 121.98847961]
[58.82268906 126.86972809]
[44.63912582 131.75097656]
[30.45556641 136.63223267]
[23.36387444 142.38098145]
[16.03230476 141.48002625]
[1.77987516 146.15637207]
[-12.47255325 150.83273315]
[-26.72498322 155.50907898]
[-40.97740936 160.18544006]
[-48.15922928 174.00785828]
[-62.67983627 178.54730225]
[-75.81314087 171.61535645]
[-90.06556702 176.29170227]
[-104.31800079 180.96806335]
[-118.57042694 185.64440918]
[-125.48027039 199.85812378]
[-140.44396973 204.94371033]
[-154.58383179 197.88398743]
[-159.51092529 182.86735535]
[-152.30209351 168.80291748]
[-137.23420715 164.03486633]
[-123.24678040 171.39198303]
[-108.99434662 166.71563721]
[-94.74192047 162.03927612]
[-80.48949432 157.36293030]
[-74.01586151 143.99775696]
[-59.62848663 139.05224609]
[-45.65376282 145.93301392]
[-31.40133476 141.25665283]
[-17.14890671 136.58030701]
[-2.89647746 131.90394592]
[11.35595131 127.22759247]
[25.57431602 122.44866943]
[39.75787735 117.56742096]
[53.94143677 112.68616486]
[68.12500000 107.80491638]
[70.30979919 90.77292633]
[80.46036530 78.07923889]
[94.87291718 72.84017181]
[109.00428772 75.70085144]
[118.06408691 63.74593353]
[127.12388611 51.79101944]
[136.18368530 39.83610535]
[145.24348450 27.88118744]
[154.30328369 15.92627239]
[163.36309814 3.97135687]
[172.33651733 -8.04852772]
[181.22309875 -20.13275909]
[190.10968018 -32.21698761]
[198.99626160 -44.30121994]
[207.88285828 -56.38544846]
[202.73410034 -69.16823578]
[204.55804443 -82.71855927]
[212.77252197 -93.51267242]
[225.14759827 -98.79693604]
[238.41009521 -97.28993225]
[247.46989441 -109.24484253]
[243.58750916 -120.47496033]
[245.58529663 -132.06651306]
[252.85343933 -141.16180420]
[263.49746704 -145.57531738]
[274.83090210 -144.31822205]
[284.23147583 -156.00709534]
[293.63201904 -167.69595337]
[295.01818848 -174.15185547]
[298.87524414 -178.31665039]
[303.47579956 -179.58108521]
[313.20928955 -190.99418640]
[322.94281006 -202.40730286]
[332.67630005 -213.82040405]
[342.40979004 -225.23350525]
[352.14331055 -236.64662170]
[348.66427612 -251.65336609]
[354.61920166 -265.66735840]
[367.53149414 -273.39633179]
[382.34167480 -272.05599976]
[392.07516479 -283.46911621]
[395.14300537 -298.99002075]
[409.28881836 -303.65313721]
[419.02233887 -315.06625366]
[428.75582886 -326.47933960]
[438.48931885 -337.89245605]
[448.22280884 -349.30557251]
[457.95632935 -360.71865845]
[461.02413940 -376.23959351]
[475.16998291 -380.90270996]
[484.90347290 -392.31579590]
[494.63699341 -403.72891235]
[504.37048340 -415.14202881]
[514.10400391 -426.55511475]
[513.86193848 -439.44760132]
[522.19958496 -448.75265503]
[534.24316406 -449.84796143]
[544.14013672 -461.11962891]
[554.03710938 -472.39129639]
[557.32824707 -487.86639404]
[571.53985596 -492.32516479]
[581.43676758 -503.59683228]
[591.33374023 -514.86846924]
[601.23071289 -526.14013672]
[610.96417236 -537.55322266]
[620.53222656 -549.10540771]
[630.10021973 -560.65759277]
[639.66827393 -572.20977783]
[636.67645264 -587.55853271]
[644.29577637 -601.21429443]
[658.92852783 -606.72930908]
[673.66571045 -601.49951172]
[681.54876709 -587.99426270]
[678.85559082 -572.59033203]
[666.85784912 -562.56097412]
[651.22045898 -562.64178467]
[641.65240479 -551.08959961]
[632.08441162 -539.53741455]
[622.51635742 -527.98522949]
[622.06243896 -523.23571777]
[618.62347412 -518.71954346]
[612.50238037 -516.24316406]
[602.60540771 -504.97152710]
[592.70843506 -493.69985962]
[582.81146240 -482.42822266]
[580.22821045 -467.75933838]
[565.30877686 -462.49432373]
[555.41180420 -451.22268677]
[545.51483154 -439.95101929]
[543.01043701 -422.57940674]
[525.51708984 -416.82162476]
[515.78356934 -405.40850830]
[506.05007935 -393.99542236]
[496.31658936 -382.58230591]
[486.58309937 -371.16918945]
[484.21145630 -356.46463013]
[469.36941528 -350.98516846]
[459.63592529 -339.57205200]
[449.90243530 -328.15896606]
[440.16894531 -316.74584961]
[430.43542480 -305.33273315]
[420.70193481 -293.91964722]
[418.33032227 -279.21505737]
[403.48828125 -273.73559570]
[393.75476074 -262.32250977]
[397.41619873 -247.90959167]
[391.82244873 -233.93911743]
[378.92419434 -225.84664917]
[363.55639648 -226.91311646]
[353.82290649 -215.50001526]
[344.08941650 -204.08689880]
[334.35589600 -192.67379761]
[324.62240601 -181.26069641]
[314.88891602 -169.84757996]
[305.32089233 -158.29539490]
[295.92031860 -146.60653687]
[286.51977539 -134.91766357]
[289.58349609 -116.86588287]
[278.28125000 -102.05650330]
[259.42480469 -100.18504333]
[250.36500549 -88.23012543]
[255.62226868 -72.67643738]
[250.51985168 -56.89646912]
[236.88079834 -47.17228699]
[219.96708679 -47.49886322]
[211.08050537 -35.41463470]
[202.19390869 -23.33040428]
[193.30732727 -11.24617386]
[184.42074585 0.83805627]
[182.99113464 8.08511448]
[175.31800842 13.03115749]
[166.25820923 24.98607445]
[157.19841003 36.94099045]
[148.13861084 48.89590454]
[139.07879639 60.85081863]
[130.01899719 72.80573273]
[120.95919800 84.76065063]
[128.05139160 103.03187561]
[120.27680206 122.80480957]
[99.68628693 132.81515503]
[98.17569733 147.73889160]
[96.66511536 162.66264343]
[95.15452576 177.58638000]
[93.64393616 192.51013184]
[92.13335419 207.43386841]
[90.62276459 222.35762024]
[89.11217499 237.28135681]
[95.42038727 251.79055786]
[86.44071198 263.67395020]
[84.93012238 278.59768677]
[95.34888458 267.80651855]
[109.92383575 264.26098633]
[124.13524628 269.06054688]
[133.57612610 280.71688843]
[135.31883240 295.61529541]
[128.82295227 309.13577271]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 13]
[4 12]
[5 11]
[14 211]
[15 210]
[17 208]
[18 207]
[19 206]
[20 205]
[21 204]
[22 203]
[23 202]
[24 201]
[25 61]
[26 60]
[27 59]
[28 58]
[30 57]
[31 56]
[32 55]
[33 54]
[34 53]
[37 50]
[38 49]
[39 48]
[40 47]
[65 198]
[66 197]
[67 196]
[68 195]
[69 194]
[70 193]
[71 192]
[72 190]
[73 189]
[74 188]
[75 187]
[76 186]
[81 182]
[82 181]
[87 178]
[88 177]
[89 176]
[92 175]
[93 174]
[94 173]
[95 172]
[96 171]
[97 170]
[101 166]
[102 165]
[104 163]
[105 162]
[106 161]
[107 160]
[108 159]
[109 158]
[111 156]
[112 155]
[113 154]
[114 153]
[115 152]
[118 150]
[119 149]
[120 148]
[122 146]
[123 145]
[124 144]
[125 143]
[126 140]
[127 139]
[128 138]
[129 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
