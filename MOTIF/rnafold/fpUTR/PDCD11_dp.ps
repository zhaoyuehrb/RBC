%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:05:26 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PDCD11)
} def

/sequence { (\
GGGUAUCCUGGUCUCCGCGUGUGUGAGUACCGCGGCGCGAGGUUAGUGGUAGCUGGGUGCAGACGCCGUGGCGCUGGAGACCCAAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.004888590 ubox
1 8 0.081534254 ubox
1 9 0.066514337 ubox
1 54 0.006322925 ubox
1 82 0.010175599 ubox
1 83 0.991429738 ubox
2 6 0.003225144 ubox
2 7 0.081399812 ubox
2 8 0.070875947 ubox
2 9 0.009452632 ubox
2 53 0.008578009 ubox
2 81 0.010138721 ubox
2 82 0.992171851 ubox
2 83 0.008730736 ubox
3 7 0.069763230 ubox
3 8 0.009889819 ubox
3 81 0.992091707 ubox
3 82 0.008110814 ubox
3 87 0.006070071 ubox
4 51 0.008656301 ubox
4 80 0.901090238 ubox
4 86 0.005979350 ubox
5 50 0.008722796 ubox
6 49 0.008720555 ubox
6 77 0.008042182 ubox
6 78 0.943613559 ubox
6 80 0.059030090 ubox
7 48 0.008719364 ubox
7 76 0.008158179 ubox
7 77 0.978667775 ubox
7 79 0.079520028 ubox
8 46 0.008733293 ubox
8 76 0.974111457 ubox
8 77 0.161835249 ubox
8 79 0.004047277 ubox
9 45 0.008755523 ubox
9 73 0.019783842 ubox
9 76 0.183260493 ubox
9 78 0.003838862 ubox
9 84 0.033317866 ubox
10 44 0.008730097 ubox
10 72 0.024209308 ubox
10 75 0.920406854 ubox
10 82 0.119606978 ubox
10 83 0.030382481 ubox
11 43 0.008125707 ubox
11 72 0.039823490 ubox
11 74 0.981367269 ubox
11 81 0.121933628 ubox
11 82 0.021520036 ubox
12 42 0.008191820 ubox
12 71 0.019425599 ubox
12 73 0.965603394 ubox
12 80 0.123863154 ubox
13 41 0.008928322 ubox
13 70 0.015174396 ubox
13 71 0.017790600 ubox
13 79 0.123939598 ubox
14 40 0.008918529 ubox
14 70 0.011207579 ubox
14 71 0.036459546 ubox
14 78 0.123921405 ubox
15 39 0.007012085 ubox
15 70 0.027833125 ubox
15 71 0.989692976 ubox
15 77 0.123883555 ubox
16 37 0.004346332 ubox
16 39 0.005945437 ubox
16 68 0.008660958 ubox
16 70 0.991594813 ubox
16 76 0.123782130 ubox
17 36 0.004344142 ubox
17 38 0.008193245 ubox
17 66 0.008074430 ubox
17 67 0.007664655 ubox
17 69 0.991815422 ubox
17 72 0.003245123 ubox
17 74 0.120479352 ubox
17 75 0.026839350 ubox
18 35 0.003481517 ubox
18 37 0.008195115 ubox
18 65 0.009038323 ubox
18 68 0.992201707 ubox
18 71 0.003226576 ubox
18 73 0.123256622 ubox
19 33 0.003764870 ubox
19 36 0.008190849 ubox
19 64 0.009046321 ubox
19 66 0.019181596 ubox
19 67 0.991515525 ubox
19 72 0.123232388 ubox
19 74 0.006242721 ubox
20 32 0.003769573 ubox
20 35 0.007654895 ubox
20 63 0.009013788 ubox
20 65 0.026411842 ubox
20 68 0.004882226 ubox
20 70 0.007777106 ubox
20 71 0.122035456 ubox
20 73 0.006238748 ubox
21 31 0.003733762 ubox
21 33 0.003496519 ubox
21 64 0.026460147 ubox
21 66 0.999169840 ubox
21 67 0.009611746 ubox
21 72 0.006056847 ubox
22 32 0.003498515 ubox
22 34 0.005789012 ubox
22 61 0.009014614 ubox
22 63 0.026321970 ubox
22 65 0.998964787 ubox
22 68 0.003249592 ubox
22 71 0.004060607 ubox
23 30 0.003794931 ubox
23 31 0.003387150 ubox
23 33 0.007954623 ubox
23 60 0.008920006 ubox
23 64 0.999314878 ubox
23 66 0.013439667 ubox
24 29 0.003626743 ubox
24 32 0.007955354 ubox
24 59 0.008651039 ubox
24 61 0.022909979 ubox
24 63 0.998330481 ubox
24 65 0.013641875 ubox
25 31 0.007938160 ubox
25 58 0.007157559 ubox
25 60 0.015555594 ubox
25 64 0.013627843 ubox
26 54 0.009652728 ubox
26 75 0.003196340 ubox
27 53 0.009803858 ubox
27 60 0.999310345 ubox
27 74 0.003514011 ubox
28 51 0.010751531 ubox
28 52 0.006947615 ubox
28 59 0.999472360 ubox
28 70 0.003693592 ubox
28 73 0.003473808 ubox
29 50 0.013146571 ubox
29 58 0.999365844 ubox
29 69 0.003743356 ubox
30 49 0.013251915 ubox
30 56 0.018805268 ubox
30 57 0.999609841 ubox
30 68 0.003753151 ubox
30 71 0.009388654 ubox
31 48 0.013267195 ubox
31 55 0.025690855 ubox
31 56 0.998516025 ubox
31 70 0.010000584 ubox
32 38 0.008865578 ubox
32 43 0.004327597 ubox
32 47 0.013410209 ubox
32 50 0.018847561 ubox
32 53 0.121554153 ubox
32 54 0.007187176 ubox
32 66 0.003813210 ubox
32 69 0.010002905 ubox
33 37 0.008809690 ubox
33 39 0.003368341 ubox
33 42 0.004509609 ubox
33 46 0.013408857 ubox
33 49 0.018940766 ubox
33 52 0.122188488 ubox
33 55 0.986384717 ubox
33 65 0.003820024 ubox
33 68 0.010007469 ubox
34 38 0.003208241 ubox
34 44 0.009999022 ubox
34 54 0.990818822 ubox
34 64 0.003805840 ubox
34 67 0.010007740 ubox
35 43 0.014253378 ubox
35 47 0.018780512 ubox
35 50 0.047463047 ubox
35 53 0.991673885 ubox
35 60 0.005675831 ubox
35 66 0.009976097 ubox
36 42 0.014498045 ubox
36 46 0.018859599 ubox
36 48 0.141365163 ubox
36 49 0.039797716 ubox
36 52 0.987939497 ubox
36 59 0.005738499 ubox
36 65 0.009946626 ubox
37 43 0.028164812 ubox
37 47 0.303260985 ubox
37 50 0.766475478 ubox
37 53 0.009008350 ubox
37 58 0.006255233 ubox
37 60 0.004607259 ubox
37 64 0.008385793 ubox
38 42 0.028182079 ubox
38 46 0.304799475 ubox
38 48 0.115457400 ubox
38 49 0.818264758 ubox
38 52 0.009628641 ubox
38 57 0.007137613 ubox
38 59 0.005039633 ubox
39 47 0.105019744 ubox
39 58 0.004376189 ubox
41 54 0.013389754 ubox
42 50 0.003285686 ubox
42 53 0.014492565 ubox
42 60 0.004031043 ubox
42 72 0.003291246 ubox
43 49 0.009649092 ubox
43 52 0.014727594 ubox
43 56 0.006344382 ubox
43 59 0.003857209 ubox
43 71 0.003293421 ubox
44 48 0.009515567 ubox
44 51 0.028257306 ubox
44 55 0.010754314 ubox
44 70 0.003290614 ubox
45 50 0.027895168 ubox
45 54 0.011538440 ubox
45 69 0.003258858 ubox
46 53 0.011638958 ubox
47 52 0.011456188 ubox
48 67 0.003474819 ubox
49 66 0.003478980 ubox
50 65 0.003465719 ubox
52 60 0.003347200 ubox
53 59 0.003361177 ubox
53 62 0.007216849 ubox
54 61 0.007263392 ubox
54 84 0.005511681 ubox
55 60 0.007311324 ubox
55 83 0.008720159 ubox
56 82 0.008725608 ubox
57 81 0.008724462 ubox
58 80 0.008312118 ubox
60 76 0.008674143 ubox
61 75 0.008800681 ubox
62 74 0.008813973 ubox
64 73 0.008846468 ubox
65 72 0.008855415 ubox
66 71 0.008827084 ubox
1 83 0.9500000 lbox
2 82 0.9500000 lbox
3 81 0.9500000 lbox
4 80 0.9500000 lbox
6 78 0.9500000 lbox
7 77 0.9500000 lbox
8 76 0.9500000 lbox
10 75 0.9500000 lbox
11 74 0.9500000 lbox
12 73 0.9500000 lbox
15 71 0.9500000 lbox
16 70 0.9500000 lbox
17 69 0.9500000 lbox
18 68 0.9500000 lbox
19 67 0.9500000 lbox
21 66 0.9500000 lbox
22 65 0.9500000 lbox
23 64 0.9500000 lbox
24 63 0.9500000 lbox
27 60 0.9500000 lbox
28 59 0.9500000 lbox
29 58 0.9500000 lbox
30 57 0.9500000 lbox
31 56 0.9500000 lbox
33 55 0.9500000 lbox
34 54 0.9500000 lbox
35 53 0.9500000 lbox
36 52 0.9500000 lbox
37 50 0.9500000 lbox
38 49 0.9500000 lbox
showpage
end
%%EOF
