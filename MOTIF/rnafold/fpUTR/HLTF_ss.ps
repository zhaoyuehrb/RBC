%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:29:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAGAGCGACGCUGGUCUCCCAGAUUGUUGCAGAAGGAGACGGCGUCGACGUCUGACUGGACUCGCGGCGACUUACCUUUCAGUCGUGCGCUCCUGAUCCGGCGCUCGGAAUUUGUCCCCGGCUUCAGGGCUGCGGGGCCUGGAAGGAGGCGUAUCGAGGCGGCUCGAAAACGAUCCAGGGGAGCCGAGGCGCUCCUCUUGUCAUCCCACUCAGCGCC\
) } def
/len { sequence length } bind def

/coor [
[49.75630188 280.68646240]
[43.10977936 294.13351440]
[30.45346451 302.18447876]
[15.45688915 302.50500488]
[2.46811223 295.00222778]
[-4.74694347 281.85147095]
[-4.09712887 266.86788940]
[-14.74170113 277.43640137]
[-25.38627243 288.00488281]
[-36.03084564 298.57339478]
[-46.67541504 309.14187622]
[-57.31998825 319.71038818]
[-67.96456146 330.27886963]
[-78.60913086 340.84738159]
[-82.49096680 349.10922241]
[-89.48300934 351.48974609]
[-100.27809143 361.90447998]
[-111.07316589 372.31918335]
[-121.86824799 382.73388672]
[-132.66333008 393.14862061]
[-126.75561523 407.12942505]
[-126.30120850 422.30038452]
[-131.36155701 436.60974121]
[-141.25228882 448.12225342]
[-154.63577271 455.28094482]
[-169.70198059 457.11767578]
[-184.41336060 453.38406372]
[-196.78028870 444.58499146]
[-205.13026428 431.91052246]
[-208.33401489 417.07473755]
[-205.95825195 402.08407593]
[-198.32427979 388.96588135]
[-186.46453857 379.49429321]
[-171.98295593 374.95025635]
[-156.83805847 375.94833374]
[-143.07803345 382.35354614]
[-132.28295898 371.93881226]
[-121.48788452 361.52410889]
[-110.69280243 351.10937500]
[-99.89772797 340.69467163]
[-89.17762756 330.20278931]
[-78.53305817 319.63430786]
[-67.88848114 309.06579590]
[-57.24391174 298.49731445]
[-46.59933853 287.92880249]
[-35.95476913 277.36032104]
[-25.31019592 266.79183960]
[-14.66562462 256.22332764]
[-11.95800781 245.68424988]
[-0.78357518 240.76119995]
[8.58078384 229.04331970]
[10.29995632 221.86000061]
[18.16448212 217.22578430]
[27.69596672 205.64343262]
[37.22745132 194.06108093]
[46.75893784 182.47872925]
[48.87184906 167.73475647]
[63.61532974 161.99539185]
[73.14681244 150.41304016]
[82.67829895 138.83070374]
[66.12088776 97.47352600]
[93.20005798 75.49871826]
[93.63034821 60.50489426]
[94.06064606 45.51106644]
[94.49094391 30.51724052]
[83.92024231 19.07617188]
[84.57022095 3.87642813]
[95.54267120 -6.13061142]
[95.97296906 -21.12443924]
[96.40326691 -36.11826706]
[93.52264404 -44.78018188]
[96.94880676 -51.32365799]
[97.59413910 -66.30976868]
[98.23947144 -81.29588318]
[95.48340607 -89.99822998]
[99.00308228 -96.49188232]
[99.86331940 -111.46719360]
[100.72355652 -126.44251251]
[101.58379364 -141.41781616]
[102.44403076 -156.39312744]
[103.30426788 -171.36845398]
[104.16450500 -186.34376526]
[105.02474213 -201.31907654]
[105.77754974 -216.30017090]
[106.42288208 -231.28628540]
[99.28646088 -245.40655518]
[107.56415558 -257.78915405]
[108.20948792 -272.77526855]
[108.85482025 -287.76138306]
[109.39264679 -302.75173950]
[109.82294464 -317.74557495]
[106.94232941 -326.40750122]
[110.36849213 -332.95095825]
[111.01382446 -347.93707275]
[111.65915680 -362.92318726]
[112.30448914 -377.90930176]
[112.94982147 -392.89541626]
[104.06161499 -409.02557373]
[114.05927277 -423.45132446]
[114.48957062 -438.44515991]
[114.91986847 -453.43896484]
[115.35016632 -468.43280029]
[102.83685303 -460.16134644]
[88.52329254 -464.64712524]
[82.96892548 -478.58084106]
[90.27133179 -491.68331909]
[105.04335785 -494.28854370]
[116.38717651 -484.47497559]
[117.89089203 -499.39941406]
[119.39460754 -514.32385254]
[110.39920044 -527.60778809]
[115.31379700 -542.87951660]
[130.36833191 -548.42395020]
[144.01426697 -539.98779297]
[145.78358459 -524.04260254]
[134.31904602 -512.82012939]
[132.81532288 -497.89569092]
[131.31161499 -482.97125244]
[130.34399414 -468.00250244]
[129.91369629 -453.00866699]
[129.48339844 -438.01486206]
[129.05310059 -423.02102661]
[137.12527466 -414.01678467]
[136.89311218 -401.52539062]
[127.93593597 -392.25006104]
[127.29060364 -377.26397705]
[126.64527130 -362.27786255]
[125.99993134 -347.29174805]
[125.35459900 -332.30563354]
[124.81677246 -317.31527710]
[124.38647461 -302.32144165]
[127.33489227 -295.54925537]
[123.84093475 -287.11605835]
[123.19560242 -272.12994385]
[122.55026245 -257.14382935]
[129.73284912 -244.09547424]
[121.40899658 -230.64094543]
[120.76366425 -215.65483093]
[123.61463165 -208.84104919]
[120.00006104 -200.45883179]
[119.13981628 -185.48352051]
[118.27957916 -170.50820923]
[117.41934204 -155.53289795]
[116.55910492 -140.55758667]
[115.69886780 -125.58226776]
[114.83863068 -110.60695648]
[113.97839355 -95.63164520]
[113.22558594 -80.65055084]
[112.58025360 -65.66443634]
[111.93492126 -50.67832565]
[111.39708710 -35.68796921]
[110.96679688 -20.69414330]
[110.53649902 -5.70031548]
[120.91699982 4.91951609]
[120.69420624 20.13151741]
[109.48477173 30.94753647]
[109.05447388 45.94136429]
[108.62417603 60.93518829]
[108.19388580 75.92901611]
[122.02063751 78.00382996]
[134.87072754 88.17306519]
[142.15544128 105.54827881]
[156.98559570 107.79911041]
[171.79054260 102.22019958]
[183.21269226 111.77969360]
[198.04286194 114.03052521]
[212.87301636 116.28135681]
[227.93920898 109.80509186]
[240.91726685 119.83015442]
[238.45648193 136.04362488]
[223.08830261 141.76646423]
[210.62219238 131.11152649]
[195.79202271 128.86068726]
[180.96185303 126.60985565]
[167.21766663 132.34976196]
[154.73477173 122.62927246]
[139.90460205 120.37844086]
[133.74464417 134.05523682]
[145.25833130 143.66955566]
[156.77201843 153.28385925]
[168.28570557 162.89817810]
[179.79939270 172.51249695]
[191.31306458 182.12681580]
[202.82675171 191.74111938]
[214.34043884 201.35543823]
[230.05683899 199.69091797]
[242.29429626 209.69192505]
[243.79255676 225.42503357]
[233.66273499 237.55607605]
[217.91465759 238.88790894]
[205.89140320 228.63040161]
[204.72613525 212.86912537]
[193.21244812 203.25480652]
[181.69876099 193.64048767]
[170.18507385 184.02618408]
[158.67138672 174.41186523]
[147.15769958 164.79754639]
[135.64401245 155.18324280]
[124.13032532 145.56892395]
[116.66291046 146.26724243]
[127.06668091 157.07286072]
[125.10532379 171.94407654]
[112.25574493 179.68283081]
[98.19370270 174.46182251]
[93.50794220 160.21247864]
[101.72806549 147.66386414]
[94.26065063 148.36218262]
[84.72916412 159.94453430]
[75.19767761 171.52688599]
[72.40301514 187.09930420]
[58.34128571 192.01022339]
[48.80979919 203.59257507]
[39.27831650 215.17491150]
[29.74683189 226.75726318]
[20.29866600 238.40768433]
[10.93430805 250.12556458]
[25.76388168 247.87084961]
[39.61287689 253.63325500]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 48]
[8 47]
[9 46]
[10 45]
[11 44]
[12 43]
[13 42]
[14 41]
[16 40]
[17 39]
[18 38]
[19 37]
[20 36]
[50 216]
[51 215]
[53 214]
[54 213]
[55 212]
[56 211]
[58 209]
[59 208]
[60 207]
[62 159]
[63 158]
[64 157]
[65 156]
[68 153]
[69 152]
[70 151]
[72 150]
[73 149]
[74 148]
[76 147]
[77 146]
[78 145]
[79 144]
[80 143]
[81 142]
[82 141]
[83 140]
[84 138]
[85 137]
[87 135]
[88 134]
[89 133]
[90 131]
[91 130]
[93 129]
[94 128]
[95 127]
[96 126]
[97 125]
[99 122]
[100 121]
[101 120]
[102 119]
[108 118]
[109 117]
[110 116]
[162 177]
[163 176]
[165 174]
[166 173]
[167 172]
[178 199]
[179 198]
[180 197]
[181 196]
[182 195]
[183 194]
[184 193]
[185 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
