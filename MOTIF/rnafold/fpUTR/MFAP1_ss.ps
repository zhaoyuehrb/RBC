%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:22:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCCCACAAUCCUCUCGUCACGUAUUUCCGGUUUAUCUAGCUCAGCCGUAAGUAGUUUCUCUAUCAGUCGCGCAGCUGUGUUCGCGGACUCAGGUGGAAGGAAUUUCUUCUCUUCGUUGACGUUGCUGGUGUUCACUGUUUGGAAUUAGUCAAGUUUCGGGAAUCACCGUCGCUGCCAUCAAC\
) } def
/len { sequence length } bind def

/coor [
[88.49485779 520.47143555]
[74.34867859 515.48284912]
[61.42433548 507.86962891]
[50.20328140 497.91534424]
[41.10353088 485.99081421]
[34.46407318 472.54025269]
[30.53223801 458.06472778]
[29.45450211 443.10348511]
[31.27101135 428.21389771]
[35.91409302 413.95059204]
[43.21078491 400.84490967]
[52.88927078 389.38513184]
[64.58899689 379.99807739]
[77.87412262 373.03350830]
[92.24975586 368.75082397]
[107.18035126 367.30960083]
[122.10972595 368.76348877]
[136.48171997 373.05834961]
[149.76094055 380.03421021]
[161.45269775 389.43115234]
[171.12388611 400.90264893]
[167.83930969 386.26669312]
[155.15837097 378.53820801]
[151.61885071 363.74206543]
[159.81117249 350.49353027]
[156.52659607 335.85754395]
[153.24201965 321.22158813]
[149.95742798 306.58563232]
[146.67285156 291.94964600]
[143.01657104 277.40209961]
[138.99095154 262.95236206]
[134.96533203 248.50263977]
[130.93971252 234.05293274]
[117.88167572 226.98022461]
[113.59328461 212.38349915]
[121.10031891 198.73498535]
[117.07469940 184.28526306]
[112.92653656 169.87023926]
[108.65613556 155.49096680]
[104.38572693 141.11169434]
[100.11531830 126.73240662]
[95.84491730 112.35313416]
[91.08869934 98.12715149]
[85.85216522 84.07088470]
[80.61562347 70.01461792]
[75.37908936 55.95835114]
[70.14254761 41.90208435]
[51.52277374 37.57641602]
[39.34695435 23.03490257]
[38.37580109 4.24376631]
[48.82020187 -11.22727108]
[42.87467194 -24.99864388]
[36.92914581 -38.77001572]
[24.35564232 -48.37301636]
[26.41450310 -63.12463760]
[20.46897507 -76.89601135]
[14.52344704 -90.66738129]
[8.57791996 -104.43875885]
[2.63239217 -118.21012878]
[-3.31313539 -131.98150635]
[-9.25866318 -145.75286865]
[-15.32090473 -159.47326660]
[-21.49942398 -173.14169312]
[-27.67794228 -186.81011963]
[-33.85646057 -200.47854614]
[-40.03498077 -214.14697266]
[-46.44470596 -227.70851135]
[-53.08379745 -241.15925598]
[-59.72288513 -254.61000061]
[-66.36197662 -268.06076050]
[-72.98171234 -274.38885498]
[-72.99741364 -281.79672241]
[-79.40714264 -295.35827637]
[-85.81687164 -308.91983032]
[-92.34151459 -322.42645264]
[-98.98060608 -335.87719727]
[-105.61969757 -349.32794189]
[-118.05204010 -360.85498047]
[-110.41707611 -375.99249268]
[-93.75759888 -372.84637451]
[-92.16895294 -355.96701050]
[-85.52986145 -342.51626587]
[-78.89077759 -329.06552124]
[-73.09764099 -324.44854736]
[-72.25533295 -315.32955933]
[-65.84560394 -301.76800537]
[-59.43587494 -288.20645142]
[-52.91123199 -274.69982910]
[-46.27214432 -261.24908447]
[-39.63305283 -247.79835510]
[-32.99396515 -234.34761047]
[-28.81800652 -231.98764038]
[-26.09208488 -226.96824646]
[-26.36655235 -220.32550049]
[-20.18803406 -206.65707397]
[-14.00951481 -192.98864746]
[-7.83099604 -179.32022095]
[-1.65247715 -165.65177917]
[3.98054099 -160.84075928]
[4.51270962 -151.69839478]
[10.45823765 -137.92703247]
[16.40376472 -124.15565491]
[22.34929276 -110.38428497]
[28.29481888 -96.61290741]
[34.24034882 -82.84153748]
[40.18587494 -69.07016754]
[52.33411407 -60.45218658]
[50.70051956 -44.71554184]
[56.64604568 -30.94417191]
[62.59157181 -17.17279816]
[73.78030396 -16.82563400]
[84.07395935 -12.29771996]
[91.96251678 -4.21128225]
[96.27310944 6.28644657]
[96.34433746 17.68589973]
[92.12739563 28.33222961]
[84.19881439 36.66554642]
[89.43535614 50.72181320]
[94.67189026 64.77808380]
[99.90843201 78.83435059]
[105.14496613 92.89061737]
[107.82595062 94.39299774]
[110.01372528 96.91304016]
[111.32707214 100.26772308]
[111.45858765 104.13462067]
[110.22418976 108.08272552]
[114.49459839 122.46200562]
[118.76500702 136.84127808]
[123.03540802 151.22056580]
[127.30581665 165.59983826]
[132.76087952 172.95567322]
[131.52441406 180.25964355]
[135.55003357 194.70936584]
[149.03276062 202.51023865]
[152.90946960 217.22166443]
[145.38943481 230.02731323]
[149.41505432 244.47703552]
[153.44067383 258.92675781]
[157.46629333 273.37646484]
[161.22921753 277.05975342]
[163.00932312 281.38796997]
[162.89494324 285.49188232]
[161.30882263 288.66506958]
[164.59339905 303.30102539]
[167.87797546 317.93701172]
[171.16255188 332.57296753]
[174.44712830 347.20895386]
[187.51513672 355.68627930]
[190.63766479 370.57601929]
[182.47528076 382.98211670]
[185.75985718 397.61807251]
[190.27755737 401.50079346]
[192.57705688 406.46737671]
[192.59136963 411.45864868]
[202.21148682 422.96749878]
[211.83160400 434.47634888]
[227.33064270 436.03115845]
[236.92285156 447.83981323]
[235.34504700 462.60620117]
[244.96516418 474.11502075]
[254.58528137 485.62387085]
[270.34713745 486.78118896]
[280.61071777 498.79928589]
[279.28680420 514.54803467]
[267.16085815 524.68395996]
[251.42700195 523.19366455]
[241.41984558 510.96121216]
[243.07643127 495.24398804]
[233.45632935 483.73513794]
[223.83621216 472.22631836]
[209.02409363 471.16009521]
[199.10397339 459.62554932]
[200.32275391 444.09646606]
[190.70263672 432.58761597]
[181.08251953 421.07876587]
[184.30590820 435.72833252]
[184.65493774 450.72427368]
[182.11663818 465.50796509]
[176.78556824 479.52865601]
[168.86030579 492.26403809]
[158.63607788 503.23971558]
[146.49378967 512.04681396]
[132.88575745 518.35717773]
[118.31890106 521.93585205]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 151]
[22 150]
[25 147]
[26 146]
[27 145]
[28 144]
[29 143]
[30 139]
[31 138]
[32 137]
[33 136]
[36 133]
[37 132]
[38 130]
[39 129]
[40 128]
[41 127]
[42 126]
[43 121]
[44 120]
[45 119]
[46 118]
[47 117]
[51 110]
[52 109]
[53 108]
[55 106]
[56 105]
[57 104]
[58 103]
[59 102]
[60 101]
[61 100]
[62 98]
[63 97]
[64 96]
[65 95]
[66 94]
[67 91]
[68 90]
[69 89]
[70 88]
[72 87]
[73 86]
[74 85]
[75 83]
[76 82]
[77 81]
[154 175]
[155 174]
[156 173]
[159 170]
[160 169]
[161 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
