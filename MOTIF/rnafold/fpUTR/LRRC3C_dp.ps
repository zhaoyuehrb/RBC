%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:14:07 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (LRRC3C)
} def

/sequence { (\
CAUAGUCUUCCAAAAUCCAGCAAGAAAAAUCCUUCUCAGAAAGGUCUCCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 16 0.016892104 ubox
2 30 0.033615476 ubox
2 45 0.008433729 ubox
3 15 0.017745645 ubox
3 29 0.029983002 ubox
3 44 0.007748009 ubox
4 33 0.009350913 ubox
4 36 0.011311554 ubox
4 47 0.113556142 ubox
5 16 0.044134973 ubox
5 21 0.126161395 ubox
5 30 0.020919988 ubox
5 32 0.010124534 ubox
5 35 0.012203500 ubox
5 45 0.019755400 ubox
5 46 0.122550922 ubox
6 15 0.045699599 ubox
6 20 0.104019737 ubox
6 25 0.332706169 ubox
6 29 0.019972067 ubox
6 40 0.038921473 ubox
6 44 0.104758169 ubox
7 20 0.078164576 ubox
7 24 0.355505344 ubox
7 39 0.041547423 ubox
7 43 0.116127774 ubox
7 44 0.073243796 ubox
8 14 0.029168652 ubox
8 15 0.035517127 ubox
8 19 0.075202861 ubox
8 20 0.011959710 ubox
8 23 0.352439401 ubox
8 24 0.008356115 ubox
8 25 0.012697978 ubox
8 26 0.124256040 ubox
8 27 0.014364374 ubox
8 28 0.008983712 ubox
8 29 0.007542599 ubox
8 38 0.039875046 ubox
8 40 0.003831645 ubox
8 41 0.050038725 ubox
8 42 0.109456951 ubox
8 43 0.070802458 ubox
9 13 0.027066884 ubox
9 14 0.035994754 ubox
9 19 0.016267767 ubox
9 22 0.322231060 ubox
9 23 0.011298314 ubox
9 24 0.012495897 ubox
9 25 0.137980409 ubox
9 26 0.013428520 ubox
9 27 0.008615065 ubox
9 28 0.007720309 ubox
9 38 0.003279012 ubox
9 39 0.004222735 ubox
9 40 0.068043490 ubox
9 41 0.098700953 ubox
9 42 0.059652255 ubox
9 44 0.008922711 ubox
10 24 0.139231232 ubox
10 39 0.078453559 ubox
10 43 0.011766001 ubox
10 44 0.093730001 ubox
11 43 0.094405411 ubox
12 34 0.005607709 ubox
13 33 0.005479802 ubox
13 34 0.005404014 ubox
14 33 0.005263900 ubox
14 34 0.006252018 ubox
15 30 0.010447709 ubox
15 33 0.005981723 ubox
15 45 0.105067771 ubox
16 25 0.158229808 ubox
16 29 0.010039432 ubox
16 40 0.130228479 ubox
16 44 0.105731474 ubox
17 24 0.168736919 ubox
17 39 0.134640075 ubox
17 43 0.108198695 ubox
17 44 0.149407599 ubox
18 43 0.150449704 ubox
19 33 0.019824537 ubox
19 34 0.005207770 ubox
19 36 0.154453801 ubox
19 47 0.026624719 ubox
20 32 0.020766153 ubox
20 33 0.005365597 ubox
20 35 0.161608623 ubox
20 45 0.019473899 ubox
20 46 0.028112679 ubox
21 44 0.021795437 ubox
22 34 0.174628590 ubox
23 33 0.179414147 ubox
23 34 0.007636979 ubox
23 36 0.369080614 ubox
23 47 0.398037729 ubox
24 31 0.069442543 ubox
24 32 0.176838198 ubox
24 33 0.008337935 ubox
24 34 0.007695944 ubox
24 35 0.388444364 ubox
24 37 0.058528757 ubox
24 46 0.421469246 ubox
24 48 0.229733669 ubox
25 30 0.070664225 ubox
25 33 0.009227800 ubox
25 34 0.387522181 ubox
25 36 0.057076428 ubox
25 45 0.418766206 ubox
25 47 0.226533625 ubox
26 33 0.354069797 ubox
26 34 0.022012412 ubox
27 33 0.024806948 ubox
27 34 0.041088566 ubox
28 33 0.038839589 ubox
28 34 0.008104079 ubox
29 33 0.007237348 ubox
29 45 0.206957849 ubox
30 40 0.070192549 ubox
30 44 0.153962062 ubox
31 39 0.070971097 ubox
31 43 0.156120748 ubox
31 44 0.848451198 ubox
32 39 0.052780897 ubox
32 43 0.853880396 ubox
32 44 0.030994886 ubox
33 38 0.049820409 ubox
33 39 0.007288451 ubox
33 40 0.017349356 ubox
33 41 0.250349218 ubox
33 42 0.828545590 ubox
33 43 0.030361106 ubox
33 44 0.004426159 ubox
34 38 0.009436861 ubox
34 39 0.021834374 ubox
34 40 0.323518629 ubox
34 41 0.739756246 ubox
34 42 0.028648695 ubox
34 43 0.004904695 ubox
34 44 0.035765186 ubox
35 39 0.376431989 ubox
35 43 0.048408289 ubox
35 44 0.023476768 ubox
36 42 0.046932151 ubox
36 43 0.021939572 ubox
36 44 0.024307930 ubox
37 43 0.040637302 ubox
38 47 0.176259857 ubox
39 46 0.188338689 ubox
39 48 0.087749792 ubox
40 45 0.172180506 ubox
40 47 0.084375347 ubox
43 49 0.189601034 ubox
44 48 0.186764337 ubox
31 44 0.9500000 lbox
32 43 0.9500000 lbox
33 42 0.9500000 lbox
34 41 0.9500000 lbox
showpage
end
%%EOF
