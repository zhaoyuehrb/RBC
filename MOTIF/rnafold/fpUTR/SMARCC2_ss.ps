%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:17:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGGCGGCGGCCGCGGCGGCGGGAGGCGGCGGGAGGCGGGCGGAGGAGGAGGCGGAGGAGGCGGGAGCUGAGCUGAGUGGGGCGGGCGGCGGCGGGGCCCGAGCCGGAGAAG\
) } def
/len { sequence length } bind def

/coor [
[104.00088501 414.65478516]
[94.17241669 402.97726440]
[90.39227295 388.18966675]
[93.41100311 373.22805786]
[102.62923431 361.06304932]
[116.21667480 354.11007690]
[115.80335999 339.11575317]
[115.39004517 324.12145996]
[114.97673035 309.12713623]
[113.94412994 294.16271973]
[112.29400635 279.25378418]
[110.64388275 264.34481812]
[108.99375916 249.43585205]
[99.90331268 237.63699341]
[106.07552338 223.06941223]
[104.42539978 208.16044617]
[95.33495331 196.36158752]
[101.50716400 181.79400635]
[99.85704041 166.88505554]
[90.76659393 155.08619690]
[96.93880463 140.51861572]
[95.28868103 125.60964966]
[83.24692535 119.93453217]
[75.58364868 109.04945374]
[74.30165863 95.79927826]
[79.73601532 83.64696503]
[90.46642303 75.76857758]
[89.22772980 60.81981277]
[77.45102692 50.62437820]
[76.40776825 35.44655609]
[86.20013428 24.28209496]
[84.96144104 9.33332729]
[71.86228180 1.22665393]
[66.11547852 -12.87397289]
[69.73081970 -27.48196030]
[81.11837769 -37.04550934]
[79.87969208 -51.99427795]
[78.64099884 -66.94304657]
[67.79033661 -81.74094391]
[75.72667694 -97.32629395]
[74.07655334 -112.23525238]
[72.42642975 -127.14421082]
[62.18103790 -129.42523193]
[52.90947342 -134.30862427]
[45.25831223 -141.44363403]
[39.75843048 -150.32279968]
[36.78818893 -160.31809998]
[36.54738998 -170.72535706]
[39.04388809 -180.81387329]
[44.09366226 -189.87765503]
[51.33433914 -197.28492737]
[60.25121307 -202.52207947]
[70.21379089 -205.22927856]
[71.04010773 -220.20651245]
[59.50994492 -230.77009583]
[57.51872635 -246.28038025]
[66.00665283 -259.41387939]
[80.96598053 -263.96939087]
[95.33337402 -257.79589844]
[102.32498932 -243.80834961]
[98.63960266 -228.61125183]
[86.01733398 -219.38018799]
[85.19101715 -204.40296936]
[102.72784424 -194.79415894]
[113.23710632 -177.69546509]
[113.89479828 -157.56269836]
[104.45537567 -139.68476868]
[87.33539581 -128.79434204]
[88.98551178 -113.88537598]
[90.63563538 -98.97641754]
[99.92941284 -91.09896851]
[101.35407257 -78.59406281]
[93.58976746 -68.18173218]
[94.82846069 -53.23296738]
[96.06714630 -38.28419876]
[108.87350464 -30.72541618]
[114.84393311 -16.91172791]
[111.49639893 -2.05752301]
[99.91020966 8.09463787]
[101.14889526 23.04340553]
[112.64531708 32.44382858]
[114.11447906 47.58635712]
[104.17649841 59.58112335]
[105.41519165 74.52989197]
[119.42334747 82.65686798]
[125.91838074 97.49233246]
[122.38793945 113.29778290]
[110.19763947 123.95952606]
[111.84776306 138.86848450]
[121.05623627 151.73373413]
[114.76599884 165.23492432]
[116.41612244 180.14389038]
[125.62459564 193.00914001]
[119.33435822 206.51033020]
[120.98448181 221.41929626]
[130.19294739 234.28454590]
[123.90271759 247.78573608]
[125.55284119 262.69470215]
[127.20296478 277.60363770]
[128.85308838 292.51260376]
[132.12463379 296.93453979]
[133.16735840 301.69406128]
[132.24543762 305.84915161]
[129.97103882 308.71383667]
[130.38435364 323.70812988]
[130.79766846 338.70245361]
[131.21098328 353.69674683]
[145.16081238 359.89068604]
[155.03518677 371.52938843]
[158.87353516 386.30200195]
[155.91374207 401.27539062]
[146.74349976 413.47659302]
[133.18353271 420.48303223]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 107]
[7 106]
[8 105]
[9 104]
[10 100]
[11 99]
[12 98]
[13 97]
[15 95]
[16 94]
[18 92]
[19 91]
[21 89]
[22 88]
[27 84]
[28 83]
[31 80]
[32 79]
[36 75]
[37 74]
[38 73]
[40 70]
[41 69]
[42 68]
[53 63]
[54 62]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
