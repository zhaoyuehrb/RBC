%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:25:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGCGGAACCGGAACCGGCAGUGGCUUGGGGGCGGGACCUCGCGGACUGCUGUGGCGGCAGCUGGAGCGGCGGCCGCGGUGGCAGAACCGGGGGCGGCCGCUGCAGUCUGGAGCCCCAUAGUGCGGGGCCGCGGCCAGGCCACAGGAAGAGCUCGAGGCCCGGGCCGCACCGGCUGAGUGUGCGGGCCCGCGCGGCUCGGAGCCGCCGCCGCCCAUCGAGCCCCUCCGGGCGCGGGUCGGCCCGCC\
) } def
/len { sequence length } bind def

/coor [
[94.34925079 640.75701904]
[94.34925079 625.75701904]
[94.25462341 610.75732422]
[94.06537628 595.75848389]
[93.87612915 580.75970459]
[93.68688202 565.76086426]
[85.78962708 553.13226318]
[93.35219574 539.23553467]
[93.16294861 524.23675537]
[85.26569366 511.60812378]
[92.82826996 497.71142578]
[92.63902283 482.71261597]
[92.44977570 467.71380615]
[80.20394135 459.27713013]
[75.21510315 445.07940674]
[79.59421539 430.49594116]
[91.86262512 421.17971802]
[91.67337799 406.18090820]
[91.48413086 391.18209839]
[91.29488373 376.18331909]
[88.07591248 369.55123901]
[91.19906616 360.99435425]
[91.19906616 345.99435425]
[83.46176910 333.26708984]
[91.19906616 319.46691895]
[91.19906616 304.46691895]
[91.19906616 289.46691895]
[91.19906616 274.46691895]
[91.19906616 259.46691895]
[91.19906616 244.46691895]
[91.19906616 229.46691895]
[91.10443878 214.46720886]
[90.91519165 199.46839905]
[90.72594452 184.46960449]
[90.53669739 169.47079468]
[90.34745026 154.47198486]
[82.28942871 96.98000336]
[69.59216309 88.99380493]
[60.68607330 87.08169556]
[56.78597260 80.82588959]
[44.19047546 72.68013000]
[31.59497643 64.53436279]
[18.99947929 56.38859940]
[6.40398216 48.24283981]
[-6.19151497 40.09707642]
[-5.50209188 55.08122253]
[-16.70143127 65.05994415]
[-31.50714874 62.65354538]
[-38.96979141 49.64166641]
[-33.57041931 35.64714050]
[-19.30170250 31.01955986]
[-31.35861588 22.09594917]
[-43.41553116 13.17234039]
[-55.47244644 4.24873114]
[-67.52935791 -4.67487860]
[-79.58627319 -13.59848785]
[-91.64318848 -22.52209663]
[-100.37916565 -25.10228157]
[-103.79497528 -31.63513374]
[-115.73834991 -40.71014786]
[-127.68171692 -49.78516388]
[-139.79469299 -58.63253784]
[-152.07292175 -67.24909973]
[-164.40525818 -75.78803253]
[-176.79121399 -84.24900055]
[-189.17718506 -92.70996094]
[-204.93673706 -94.10522461]
[-211.08171082 -107.67314911]
[-223.46766663 -116.13411713]
[-235.85362244 -124.59508514]
[-248.23959351 -133.05604553]
[-260.62554932 -141.51701355]
[-273.01150513 -149.97798157]
[-288.77108765 -151.37324524]
[-294.91604614 -164.94117737]
[-307.30200195 -173.40214539]
[-319.68795776 -181.86309814]
[-338.08761597 -182.84049988]
[-345.04302979 -198.96374512]
[-357.53472900 -207.26777649]
[-370.02645874 -215.57179260]
[-382.51818848 -223.87582397]
[-397.96005249 -220.51058960]
[-411.21331787 -229.12022400]
[-414.41510010 -244.59680176]
[-405.66583252 -257.75833130]
[-390.15628052 -260.79629517]
[-377.08798218 -251.90835571]
[-374.21417236 -236.36753845]
[-361.72244263 -228.06352234]
[-349.23071289 -219.75949097]
[-336.73898315 -211.45547485]
[-324.83865356 -213.53686523]
[-314.36889648 -206.74197388]
[-311.22698975 -194.24906921]
[-298.84103394 -185.78810120]
[-286.45507812 -177.32713318]
[-271.58145142 -176.53706360]
[-264.55053711 -162.36395264]
[-252.16458130 -153.90298462]
[-239.77862549 -145.44201660]
[-227.39265442 -136.98104858]
[-215.00669861 -128.52008057]
[-202.62074280 -120.05911255]
[-187.74710083 -119.26903534]
[-180.71621704 -105.09592438]
[-168.33024597 -96.63495636]
[-155.94429016 -88.17399597]
[-148.66653442 -86.99918365]
[-143.45635986 -79.52732849]
[-131.17813110 -70.91076660]
[-127.68327332 -71.14395905]
[-123.90105438 -69.71138000]
[-120.60867310 -66.49581146]
[-118.60670471 -61.72853470]
[-106.66333008 -52.65351868]
[-94.71996307 -43.57850266]
[-82.71958160 -34.57901382]
[-70.66266632 -25.65540314]
[-58.60575104 -16.73179245]
[-46.54883575 -7.80818367]
[-34.49192047 1.11542583]
[-22.43500710 10.03903580]
[-10.37809181 18.96264458]
[1.95424795 27.50157928]
[14.54974461 35.64734268]
[27.14524269 43.79310226]
[39.74073792 51.93886566]
[52.33623505 60.08462906]
[64.93173218 68.23039246]
[77.57836914 76.29653931]
[90.27563477 84.28273773]
[105.07431793 81.83347321]
[114.52147675 70.18224335]
[123.96863556 58.53100967]
[133.41578674 46.87977600]
[142.86294556 35.22854233]
[152.31010437 23.57731247]
[154.79147339 5.31955194]
[171.43029785 -0.29168680]
[180.72970581 -12.06118202]
[190.02911377 -23.83067703]
[199.32852173 -35.60017014]
[196.97908020 -52.94703674]
[207.70097351 -66.35414124]
[224.46626282 -67.81678009]
[233.61645508 -79.70265961]
[231.33000183 -95.34068298]
[240.83786011 -107.96511078]
[256.49917603 -110.08609009]
[269.02239990 -100.44528961]
[270.97766113 -84.76241302]
[261.20498657 -72.34185028]
[245.50233459 -70.55248260]
[236.35215759 -58.66659927]
[239.78472900 -46.26194000]
[235.38749695 -33.95886993]
[224.55215454 -26.31588364]
[211.09802246 -26.30076408]
[201.79861450 -14.53126812]
[192.49920654 -2.76177359]
[183.19979858 9.00772095]
[184.29934692 21.03856659]
[176.66963196 30.91652489]
[163.96133423 33.02447128]
[154.51417542 44.67570114]
[145.06701660 56.32693481]
[135.61987305 67.97816467]
[126.17270660 79.62939453]
[116.72554779 91.28063202]
[119.67199707 98.17761993]
[125.56488037 111.97159576]
[128.51132202 118.86859131]
[143.46092224 120.09735107]
[158.41050720 121.32611847]
[173.36009216 122.55487823]
[188.30967712 123.78363800]
[203.27357483 124.82369232]
[218.24940491 125.67487335]
[233.22523499 126.52605438]
[248.20106506 127.37723541]
[263.18197632 128.13392639]
[278.16735840 128.79609680]
[293.15270996 129.45825195]
[308.13809204 130.12042236]
[323.12347412 130.78259277]
[337.41616821 122.74199677]
[351.38604736 131.33119202]
[350.66210938 147.71435547]
[335.98907471 155.03788757]
[322.46130371 145.76797485]
[307.47592163 145.10580444]
[292.49053955 144.44363403]
[277.50518799 143.78146362]
[262.51980591 143.11929321]
[255.71577454 145.95675659]
[247.34988403 142.35305786]
[232.37405396 141.50187683]
[217.39822388 140.65071106]
[202.42239380 139.79953003]
[198.34205627 142.23785400]
[192.69076538 142.15577698]
[187.08091736 138.73323059]
[172.13133240 137.50447083]
[157.18173218 136.27569580]
[142.23214722 135.04693604]
[127.28256226 133.81817627]
[121.79848480 138.93431091]
[132.03059387 149.90263367]
[121.06209564 160.13455200]
[110.83033752 149.16659546]
[105.34626007 154.28274536]
[105.53550720 169.28153992]
[105.72475433 184.28034973]
[105.91400146 199.27915955]
[106.10324860 214.27796936]
[109.33411407 222.79476929]
[106.19906616 229.46691895]
[106.19906616 244.46691895]
[106.19906616 259.46691895]
[106.19906616 274.46691895]
[106.19906616 289.46691895]
[106.19906616 304.46691895]
[106.19906616 319.46691895]
[113.93636322 333.26708984]
[106.19906616 345.99435425]
[106.19906616 360.99435425]
[106.29369354 375.99404907]
[106.48294067 390.99285889]
[106.67218781 405.99166870]
[106.86143494 420.99047852]
[119.36100006 429.99420166]
[124.10667419 444.46249390]
[119.47764587 458.78158569]
[107.44857788 467.52456665]
[107.63782501 482.52337646]
[107.82707214 497.52218628]
[115.73786926 511.22363281]
[108.16175842 524.04748535]
[108.35100555 539.04632568]
[116.26180267 552.74774170]
[108.68569183 565.57165527]
[108.87493896 580.57043457]
[109.06418610 595.56927490]
[109.25343323 610.56805420]
[112.48429871 619.08489990]
[109.34925079 625.75701904]
[109.34925079 640.75701904]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 248]
[2 247]
[3 245]
[4 244]
[5 243]
[6 242]
[8 240]
[9 239]
[11 237]
[12 236]
[13 235]
[17 231]
[18 230]
[19 229]
[20 228]
[22 227]
[23 226]
[25 224]
[26 223]
[27 222]
[28 221]
[29 220]
[30 219]
[31 218]
[32 216]
[33 215]
[34 214]
[35 213]
[36 212]
[37 132]
[38 131]
[40 130]
[41 129]
[42 128]
[43 127]
[44 126]
[45 125]
[51 124]
[52 123]
[53 122]
[54 121]
[55 120]
[56 119]
[57 118]
[59 117]
[60 116]
[61 115]
[62 111]
[63 110]
[64 108]
[65 107]
[66 106]
[68 104]
[69 103]
[70 102]
[71 101]
[72 100]
[73 99]
[75 97]
[76 96]
[77 95]
[79 92]
[80 91]
[81 90]
[82 89]
[133 170]
[134 169]
[135 168]
[136 167]
[137 166]
[138 165]
[140 162]
[141 161]
[142 160]
[143 159]
[146 155]
[147 154]
[173 207]
[174 206]
[175 205]
[176 204]
[177 203]
[178 200]
[179 199]
[180 198]
[181 197]
[182 195]
[183 194]
[184 193]
[185 192]
[186 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
