%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:36:59 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CCL13)
} def

/sequence { (\
AAAAGGCCGGCGGAACAGCCAGAGGAGCAGAGAGGCAAAGAAACAUUGUGAAAUCUCCAACUCUUAACCUUCAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 65 0.003726861 ubox
1 71 0.012431064 ubox
2 64 0.003368913 ubox
2 65 0.004399159 ubox
2 70 0.008351776 ubox
2 71 0.047466439 ubox
3 64 0.003698021 ubox
3 65 0.022644029 ubox
3 70 0.037208600 ubox
3 71 0.720949829 ubox
4 62 0.006507914 ubox
4 64 0.024076224 ubox
4 65 0.005741420 ubox
4 70 0.800571582 ubox
4 71 0.032651382 ubox
5 20 0.081973924 ubox
5 61 0.006803232 ubox
5 62 0.004511429 ubox
5 63 0.024182810 ubox
5 64 0.005753343 ubox
5 69 0.811012300 ubox
5 70 0.033305344 ubox
5 71 0.004305599 ubox
5 72 0.031483049 ubox
6 19 0.082032910 ubox
6 28 0.017941362 ubox
6 36 0.004432825 ubox
6 61 0.008496609 ubox
6 62 0.017358551 ubox
6 63 0.005554588 ubox
6 68 0.807421069 ubox
6 69 0.033483380 ubox
6 70 0.003904678 ubox
6 71 0.021486450 ubox
7 13 0.009140816 ubox
7 18 0.081808876 ubox
7 25 0.095429165 ubox
7 27 0.016667774 ubox
7 35 0.004464857 ubox
8 12 0.009738133 ubox
8 24 0.096229744 ubox
8 34 0.004461748 ubox
9 20 0.995109161 ubox
9 65 0.004067550 ubox
9 69 0.004256463 ubox
9 72 0.003671304 ubox
10 19 0.996157147 ubox
10 68 0.004175754 ubox
10 71 0.003372811 ubox
11 18 0.995925740 ubox
12 20 0.025694182 ubox
12 69 0.004003322 ubox
13 19 0.025672509 ubox
13 68 0.003998644 ubox
13 72 0.006340833 ubox
14 71 0.006320373 ubox
15 70 0.005631341 ubox
21 56 0.003522687 ubox
21 62 0.031180490 ubox
21 64 0.490830185 ubox
21 65 0.031094558 ubox
21 70 0.043070934 ubox
21 71 0.012084368 ubox
22 55 0.003765502 ubox
22 57 0.005867452 ubox
22 61 0.033217669 ubox
22 63 0.525343740 ubox
22 64 0.008827970 ubox
22 65 0.099428124 ubox
22 69 0.045982573 ubox
22 70 0.010371252 ubox
22 71 0.259963197 ubox
22 72 0.296465692 ubox
23 54 0.003750882 ubox
23 56 0.005847698 ubox
23 62 0.525291036 ubox
23 64 0.100021678 ubox
23 65 0.604372521 ubox
23 70 0.287700279 ubox
23 71 0.284408307 ubox
24 55 0.005724529 ubox
24 58 0.164410506 ubox
24 61 0.517575534 ubox
24 62 0.010179919 ubox
24 63 0.088761880 ubox
24 64 0.661639539 ubox
24 65 0.016024741 ubox
24 69 0.301407954 ubox
24 70 0.270344075 ubox
24 72 0.246743887 ubox
25 54 0.004328314 ubox
25 55 0.003573874 ubox
25 57 0.171816957 ubox
25 61 0.024404083 ubox
25 62 0.067371713 ubox
25 63 0.670802302 ubox
25 65 0.017434070 ubox
25 68 0.300830911 ubox
25 69 0.269285643 ubox
25 71 0.247890483 ubox
25 72 0.021865229 ubox
26 54 0.003704617 ubox
26 56 0.169501673 ubox
26 62 0.672592113 ubox
26 64 0.028913277 ubox
26 65 0.009080172 ubox
26 70 0.248477352 ubox
26 71 0.020420906 ubox
27 36 0.028491376 ubox
27 49 0.005498434 ubox
27 55 0.165182897 ubox
27 61 0.670101642 ubox
27 63 0.029180337 ubox
27 64 0.007273468 ubox
27 69 0.247665518 ubox
27 70 0.016845301 ubox
28 35 0.028571801 ubox
28 48 0.006615297 ubox
28 50 0.016654849 ubox
29 47 0.006369020 ubox
29 49 0.016213522 ubox
29 56 0.444055506 ubox
29 62 0.024564156 ubox
29 64 0.158903303 ubox
29 65 0.029672661 ubox
30 46 0.004631148 ubox
30 55 0.461872026 ubox
30 57 0.703389245 ubox
30 61 0.024284410 ubox
30 63 0.164083525 ubox
30 64 0.019621046 ubox
30 65 0.438067154 ubox
30 72 0.049442811 ubox
31 46 0.003205526 ubox
31 47 0.013647281 ubox
31 54 0.460988785 ubox
31 56 0.705186027 ubox
31 62 0.163975199 ubox
31 64 0.456279789 ubox
31 65 0.013384040 ubox
31 71 0.043720823 ubox
32 46 0.009639820 ubox
32 47 0.005852772 ubox
32 55 0.705177321 ubox
32 57 0.129588791 ubox
32 61 0.159594312 ubox
32 63 0.458301084 ubox
32 65 0.004683929 ubox
32 70 0.026780680 ubox
32 71 0.056048500 ubox
32 72 0.027274676 ubox
33 46 0.006226790 ubox
33 47 0.003668177 ubox
33 54 0.668487726 ubox
33 56 0.132603811 ubox
33 62 0.458212703 ubox
33 64 0.004886327 ubox
33 70 0.070191992 ubox
33 71 0.021764311 ubox
34 46 0.004971238 ubox
34 47 0.004850745 ubox
34 55 0.132600271 ubox
34 56 0.005347882 ubox
34 57 0.018457750 ubox
34 58 0.139384527 ubox
34 61 0.457546612 ubox
34 62 0.004225172 ubox
34 63 0.004908707 ubox
34 69 0.077419120 ubox
34 70 0.014267323 ubox
35 46 0.004025177 ubox
35 49 0.679349552 ubox
35 54 0.082978364 ubox
35 55 0.007021726 ubox
35 56 0.012601700 ubox
35 57 0.139550014 ubox
35 61 0.009344788 ubox
35 62 0.003943193 ubox
35 68 0.077398622 ubox
35 69 0.014103455 ubox
36 48 0.709595682 ubox
36 50 0.336544487 ubox
37 47 0.695915304 ubox
37 49 0.317391170 ubox
38 46 0.637733634 ubox
38 47 0.284090113 ubox
38 65 0.077883012 ubox
39 46 0.298392583 ubox
39 47 0.127844331 ubox
39 56 0.417038998 ubox
39 64 0.080572411 ubox
40 46 0.106111120 ubox
40 47 0.274970593 ubox
40 55 0.431563979 ubox
40 57 0.073502251 ubox
40 63 0.080808769 ubox
41 46 0.250200534 ubox
41 47 0.078117677 ubox
41 54 0.410797308 ubox
41 56 0.072466176 ubox
41 62 0.078745133 ubox
42 46 0.062391888 ubox
43 49 0.112866794 ubox
44 48 0.113782231 ubox
44 50 0.235046355 ubox
45 49 0.191336347 ubox
45 54 0.086426387 ubox
46 52 0.019209304 ubox
46 53 0.137955724 ubox
46 60 0.109249000 ubox
47 51 0.017551131 ubox
47 52 0.136885126 ubox
47 59 0.115314726 ubox
48 54 0.005493904 ubox
48 58 0.116289092 ubox
48 61 0.012785897 ubox
49 53 0.007506051 ubox
49 59 0.012700239 ubox
49 60 0.012091030 ubox
50 57 0.122065231 ubox
50 58 0.020000155 ubox
51 56 0.114328220 ubox
59 65 0.007854342 ubox
60 64 0.006549297 ubox
65 73 0.004014397 ubox
3 71 0.9500000 lbox
4 70 0.9500000 lbox
5 69 0.9500000 lbox
6 68 0.9500000 lbox
9 20 0.9500000 lbox
10 19 0.9500000 lbox
11 18 0.9500000 lbox
21 64 0.9500000 lbox
22 63 0.9500000 lbox
23 62 0.9500000 lbox
24 61 0.9500000 lbox
29 56 0.9500000 lbox
30 55 0.9500000 lbox
31 54 0.9500000 lbox
35 49 0.9500000 lbox
36 48 0.9500000 lbox
37 47 0.9500000 lbox
38 46 0.9500000 lbox
showpage
end
%%EOF
