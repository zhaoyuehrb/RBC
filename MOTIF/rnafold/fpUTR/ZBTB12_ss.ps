%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:57:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCCCACGCGGAGCCGGCCCCGCGCGCGCGCGCGUCCCGUGCAUCCCCGCGCCUGCGCGCUGCCCAGGCCCUGCCCGUGUGUGGGGGUCGCUGCCGGCCCCGGGGGGGGGUGGGGAAAAUAAGGGAUUAAAAAAACAGCGCGCGGAACCGGGCCAGGGUUGCCCACCCCCGCCACA\
) } def
/len { sequence length } bind def

/coor [
[92.36894226 135.83688354]
[82.83949280 132.37333679]
[74.62415314 126.43070221]
[68.35203552 118.46407318]
[64.50344086 109.08350372]
[49.51820755 109.74887848]
[34.53297424 110.41425323]
[19.54773712 111.07962799]
[4.56250143 111.74499512]
[-10.42273331 112.41036987]
[-25.40796852 113.07574463]
[-33.87315369 116.59197998]
[-40.66458511 113.61755371]
[-55.65926743 114.01686096]
[-71.10858917 124.01027679]
[-86.20312500 115.08529663]
[-101.18836212 115.75067139]
[-116.17359161 116.41604614]
[-131.15882874 117.08142090]
[-142.71289062 130.19631958]
[-159.83956909 130.89916992]
[-171.94316101 119.24292755]
[-186.91423035 120.17415619]
[-201.87643433 121.23821259]
[-216.82861328 122.43500519]
[-231.78079224 123.63179779]
[-246.73298645 124.82859039]
[-261.68515015 126.02537537]
[-276.63732910 127.22216797]
[-291.56591797 128.68414307]
[-306.46621704 130.41084290]
[-321.36648560 132.13755798]
[-336.26678467 133.86425781]
[-351.16705322 135.59095764]
[-355.67825317 150.13636780]
[-365.72048950 161.58511353]
[-379.55383301 167.95362854]
[-394.78164673 168.13851929]
[-408.76556396 162.10777283]
[-419.08279419 150.90623474]
[-423.94583130 136.47463989]
[-422.51214600 121.31336975]
[-415.03005981 108.04917908]
[-402.79595947 98.98018646]
[-387.92947388 95.67764282]
[-373.00625610 98.71372986]
[-360.61190796 107.56243896]
[-352.89376831 120.69066620]
[-337.99346924 118.96396637]
[-323.09320068 117.23726654]
[-308.19290161 115.51056671]
[-293.29263306 113.78385925]
[-289.66088867 110.63872528]
[-284.00604248 109.76203156]
[-277.83413696 112.26998901]
[-262.88195801 111.07319641]
[-247.92976379 109.87640381]
[-232.97758484 108.67961884]
[-218.02540588 107.48282623]
[-203.07322693 106.28603363]
[-196.63644409 102.60657501]
[-187.84545898 105.20309448]
[-172.87438965 104.27186584]
[-165.76812744 93.50161743]
[-153.57057190 88.72866821]
[-140.66362000 91.90876770]
[-131.82420349 102.09618378]
[-116.83896637 101.43080902]
[-101.85372925 100.76543427]
[-86.86849976 100.10006714]
[-78.45664978 91.37989807]
[-65.95668030 90.72051239]
[-56.05857468 99.02217865]
[-41.06389236 98.62287140]
[-26.07334137 98.09050751]
[-11.08810711 97.42513275]
[3.89712834 96.75976562]
[18.88236427 96.09439087]
[33.86759949 95.42901611]
[48.85283279 94.76364136]
[63.83806992 94.09826660]
[69.96915436 79.00800323]
[82.03490448 68.06614685]
[97.65089417 63.43502426]
[99.77363586 48.58598709]
[101.89638519 33.73694611]
[104.01912689 18.88790894]
[106.14186859 4.03886986]
[108.26461029 -10.81016922]
[110.38735962 -25.65920830]
[103.78128815 -40.66893768]
[113.69396210 -53.73304367]
[129.92807007 -51.41230011]
[135.78335571 -36.09408188]
[125.23639679 -23.53646469]
[123.11365509 -8.68742561]
[120.99090576 6.16161299]
[118.86816406 21.01065254]
[116.74542236 35.85969162]
[114.62268066 50.70872879]
[112.49993134 65.55776978]
[129.79483032 78.67433167]
[136.63317871 99.27516174]
[151.37344360 102.05449677]
[166.36828613 97.00818634]
[177.44154358 106.96973419]
[192.18180847 109.74906158]
[206.92207336 112.52839661]
[221.66233826 115.30772400]
[236.40258789 118.08705902]
[251.14285278 120.86638641]
[265.88311768 123.64571381]
[280.62338257 126.42504883]
[295.36364746 129.20437622]
[283.81256104 119.63500977]
[275.21780396 107.34151459]
[270.19665527 93.20687103]
[269.10980225 78.24629974]
[272.03524780 63.53434372]
[278.76290894 50.12768173]
[288.80957031 38.98925400]
[301.45361328 30.91906929]
[315.78692627 26.49677277]
[330.77996826 26.03999519]
[345.35586548 29.58154297]
[358.46777344 36.86704636]
[369.17385864 47.37322235]
[376.70516968 60.34547043]
[380.52078247 74.85205078]
[380.34667969 89.85104370]
[376.19528198 104.26513672]
[368.36483765 117.05904388]
[357.41772461 127.31383514]
[344.14025879 134.29298401]
[329.48602295 137.49517822]
[314.51065063 136.69104004]
[327.22668457 144.64735413]
[339.94268799 152.60365295]
[352.65872192 160.55996704]
[365.64910889 168.05996704]
[378.89746094 175.09420776]
[394.71453857 174.73200989]
[402.32717896 187.53422546]
[415.57556152 194.56846619]
[431.93624878 193.44602966]
[440.86288452 207.20272827]
[433.17251587 221.68687439]
[416.77633667 221.99839783]
[408.54132080 207.81684875]
[395.29293823 200.78260803]
[380.42349243 201.64794922]
[371.86325073 188.34259033]
[358.61486816 181.30834961]
[355.87387085 182.02423096]
[352.68005371 181.68019104]
[349.44216919 180.09666443]
[346.62670898 177.24757385]
[344.70239258 173.27598572]
[331.98638916 165.31967163]
[319.27035522 157.36335754]
[306.55435181 149.40704346]
[292.58432007 143.94464111]
[277.84405518 141.16531372]
[263.10379028 138.38598633]
[248.36352539 135.60664368]
[233.62326050 132.82731628]
[218.88299561 130.04798889]
[204.14273071 127.26865387]
[189.40248108 124.48932648]
[174.66221619 121.70999146]
[160.72169495 126.95509338]
[148.59411621 116.79475403]
[133.85385132 114.01542664]
[128.71649170 122.75695038]
[121.38008881 129.75579834]
[112.40645599 134.47601318]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 81]
[6 80]
[7 79]
[8 78]
[9 77]
[10 76]
[11 75]
[13 74]
[14 73]
[16 70]
[17 69]
[18 68]
[19 67]
[22 63]
[23 62]
[24 60]
[25 59]
[26 58]
[27 57]
[28 56]
[29 55]
[30 52]
[31 51]
[32 50]
[33 49]
[34 48]
[84 101]
[85 100]
[86 99]
[87 98]
[88 97]
[89 96]
[90 95]
[103 173]
[104 172]
[106 170]
[107 169]
[108 168]
[109 167]
[110 166]
[111 165]
[112 164]
[113 163]
[114 162]
[136 161]
[137 160]
[138 159]
[139 158]
[140 153]
[141 152]
[143 150]
[144 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
