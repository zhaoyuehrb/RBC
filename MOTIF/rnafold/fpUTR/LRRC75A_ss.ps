%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:40:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCGCCCGGGUAGCCAAGAGGGAGGAGCGCGGGGAGCGCCGACAGCCGCCCGCCCGCCCGCCCCCGCGACGCCCGCGCGCAACAGUUCCCCCAAAGUUGCAGCCCGGGAGGCGAGCGCGCACGGGCGGCCGAGGGGCGGGCGGUUGGCGGGGACGCGGCCUCGCGGCCCAGAGCGGAGAGUCCCGGCGGGCGGCGGCGGC\
) } def
/len { sequence length } bind def

/coor [
[-35.17778397 301.06182861]
[-43.72826767 313.38613892]
[-39.82184982 326.28079224]
[-43.99654007 338.88619995]
[-54.51463318 346.66842651]
[-67.40067291 346.96490479]
[-76.14179230 359.15478516]
[-84.88290405 371.34463501]
[-93.62402344 383.53451538]
[-95.37816620 399.25817871]
[-109.08264923 405.09225464]
[-117.82376862 417.28213501]
[-116.50121307 430.11706543]
[-124.03861237 440.09140015]
[-135.95744324 442.18374634]
[-144.88708496 454.23620605]
[-140.10168457 468.99694824]
[-144.93835449 483.74096680]
[-157.53730774 492.79888916]
[-173.05398560 492.68774414]
[-185.52191162 483.45028687]
[-190.14689636 468.63851929]
[-185.15057373 453.94781494]
[-172.45410156 445.02709961]
[-156.93952942 445.30654907]
[-148.00990295 433.25411987]
[-146.95875549 415.73971558]
[-130.01364136 408.54101562]
[-121.27252197 396.35113525]
[-120.14359283 381.49938965]
[-105.81388855 374.79339600]
[-97.07277679 362.60354614]
[-88.33165741 350.41366577]
[-79.59054565 338.22378540]
[-83.03270721 321.76535034]
[-73.31797791 307.62945557]
[-56.05260468 304.83566284]
[-47.50212097 292.51132202]
[-39.04772949 280.12088013]
[-30.68994713 267.66506958]
[-22.33216286 255.20924377]
[-13.97437859 242.75341797]
[-18.20839882 230.57922363]
[-14.60143089 218.00213623]
[-4.25557852 209.67820740]
[9.19059086 208.82261658]
[17.74107552 196.49827576]
[26.29155922 184.17395020]
[34.84204102 171.84960938]
[43.39252472 159.52526855]
[51.94300842 147.20094299]
[60.49349213 134.87660217]
[69.04397583 122.55226898]
[77.59445953 110.22793579]
[81.73899078 95.81187439]
[81.03938293 80.82819366]
[80.33977509 65.84452057]
[79.64016724 50.86084366]
[78.94056702 35.87716675]
[78.24095917 20.89349174]
[77.54135132 5.90981531]
[76.84174347 -9.07386112]
[76.14214325 -24.05753708]
[75.44253540 -39.04121399]
[74.74292755 -54.02489090]
[73.92682648 -69.00267029]
[72.99428558 -83.97365570]
[61.93453979 -91.66868591]
[57.39450073 -104.14717102]
[60.82188034 -116.77438354]
[70.74836731 -124.99647522]
[70.04875946 -139.98014832]
[69.34915924 -154.96382141]
[68.64955139 -169.94749451]
[67.94994354 -184.93118286]
[67.25033569 -199.91485596]
[58.87781143 -213.33914185]
[66.01308441 -226.41343689]
[65.31348419 -241.39710999]
[64.61387634 -256.38076782]
[63.91426849 -271.36447144]
[61.43111420 -274.94644165]
[60.33207703 -278.74996948]
[60.51628113 -282.31134033]
[61.74223328 -285.24761963]
[63.66648483 -287.29553223]
[63.89976120 -302.29370117]
[64.13303375 -317.29190063]
[64.36631775 -332.29010010]
[64.48295593 -347.28964233]
[64.48295593 -362.28964233]
[64.36631775 -377.28918457]
[64.13303375 -392.28735352]
[51.60709381 -401.25436401]
[46.81897354 -415.70867920]
[51.40593719 -430.04129028]
[63.40929031 -438.81951904]
[63.17601395 -453.81771851]
[54.29681778 -467.60510254]
[62.03704071 -482.06265259]
[78.43420410 -482.31768799]
[86.62031555 -468.10784912]
[78.17420197 -454.05099487]
[78.40747833 -439.05279541]
[90.67802429 -430.65209961]
[95.70851135 -416.46908569]
[91.37223816 -401.87283325]
[79.13122559 -392.52062988]
[79.36450195 -377.52246094]
[82.61418915 -370.87850952]
[79.48295593 -362.28964233]
[79.48295593 -347.28964233]
[82.62892914 -340.59594727]
[79.36450195 -332.05679321]
[79.13122559 -317.05862427]
[78.89794922 -302.06042480]
[78.66466522 -287.06225586]
[78.89794922 -272.06405640]
[79.59754944 -257.08038330]
[80.29715729 -242.09671021]
[80.99676514 -227.11303711]
[89.31925201 -214.76048279]
[82.23401642 -200.61445618]
[82.93361664 -185.63078308]
[83.63322449 -170.64710999]
[84.33283234 -155.66343689]
[85.03244019 -140.67974854]
[85.73204041 -125.69607544]
[98.63713837 -114.91704559]
[99.77940369 -97.80287933]
[87.96527100 -84.90620422]
[88.89781189 -69.93521881]
[92.45384216 -63.45006561]
[89.72660828 -54.72449493]
[90.42620850 -39.74081802]
[91.12581635 -24.75714302]
[91.82542419 -9.77346706]
[92.52503204 5.21020937]
[93.22463226 20.19388580]
[93.92424011 35.17756271]
[94.62384796 50.16123962]
[95.32345581 65.14491272]
[96.02305603 80.12859344]
[96.72266388 95.11226654]
[93.64995575 78.22014618]
[100.91935730 60.52215958]
[118.25431824 46.75160980]
[143.48809814 41.25250244]
[158.48083496 41.71900177]
[173.47358704 42.18549728]
[187.66009521 33.95901489]
[201.74090576 42.36512375]
[201.23089600 58.75633621]
[186.65470886 66.27078247]
[173.00709534 57.17824173]
[158.01434326 56.71174622]
[143.02160645 56.24524689]
[140.00949097 70.93971252]
[153.97665405 76.40948486]
[167.94381714 81.87925720]
[181.91098022 87.34902954]
[198.03527832 84.35920715]
[208.47949219 97.00239563]
[202.49952698 112.27236938]
[186.24703979 114.46067810]
[176.44120789 101.31619263]
[162.47404480 95.84641266]
[148.50688171 90.37664032]
[134.53971863 84.90686798]
[130.07490540 90.93309784]
[142.12736511 99.86273193]
[148.10029602 113.62223816]
[133.19772339 111.91518402]
[121.14527130 102.98554993]
[116.68045807 109.01177979]
[125.98059845 120.78069305]
[135.28074646 132.54960632]
[151.00483704 134.13973999]
[160.93418884 146.43539429]
[159.17791748 162.14179993]
[146.77795410 171.94061279]
[131.09100342 170.01837158]
[121.42384338 157.51550293]
[123.51182556 141.84974670]
[114.21168518 130.08084106]
[104.91153717 118.31192017]
[89.91879272 118.77841949]
[81.36830902 131.10275269]
[72.81782532 143.42709351]
[64.26734161 155.75141907]
[55.71686172 168.07575989]
[47.16637802 180.40010071]
[38.61589432 192.72442627]
[30.06540871 205.04876709]
[21.51492500 217.37309265]
[24.94304466 234.52378845]
[15.10330296 248.57295227]
[-1.51855874 251.11120605]
[-9.87634277 263.56701660]
[-18.23412704 276.02285767]
[-26.59191132 288.47866821]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 38]
[2 37]
[6 34]
[7 33]
[8 32]
[9 31]
[11 29]
[12 28]
[15 26]
[16 25]
[39 201]
[40 200]
[41 199]
[42 198]
[46 195]
[47 194]
[48 193]
[49 192]
[50 191]
[51 190]
[52 189]
[53 188]
[54 187]
[55 144]
[56 143]
[57 142]
[58 141]
[59 140]
[60 139]
[61 138]
[62 137]
[63 136]
[64 135]
[65 134]
[66 132]
[67 131]
[71 128]
[72 127]
[73 126]
[74 125]
[75 124]
[76 123]
[78 121]
[79 120]
[80 119]
[81 118]
[86 117]
[87 116]
[88 115]
[89 114]
[90 112]
[91 111]
[92 109]
[93 108]
[97 104]
[98 103]
[148 157]
[149 156]
[150 155]
[158 169]
[159 168]
[160 167]
[161 166]
[175 186]
[176 185]
[177 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
