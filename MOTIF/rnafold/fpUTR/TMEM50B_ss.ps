%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:12:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGUGCACACGGCGCCUCGCCCCGCCUCACCGGCGCUCUAUCCUCGCGUCUGCUCCCAGCUCCGGGCUCCCGGGGCUGAGGUGGAGCCGCGGGACGCCGGCAGGGUUGUGGCGCAGCAGUCUCCUUCCUGCGCGCGCGCCUGAAGUCGGCGUGGGCGUUUGAGGAAGCUGGGAUACAGCAUUUAAUGAAAAAUUUAUGCUUAAGAAGUAAAA\
) } def
/len { sequence length } bind def

/coor [
[74.25891876 122.72087097]
[59.49107361 120.09205627]
[44.54848862 125.29106903]
[33.37419128 115.44300842]
[18.60634232 112.81419373]
[3.83849382 110.18537903]
[-10.92935467 107.55656433]
[-19.92428398 109.13340759]
[-25.89401436 104.77924347]
[-40.62168121 101.93392181]
[-55.34934616 99.08860016]
[-68.91799927 105.48326111]
[-76.09794617 118.65323639]
[-83.27789307 131.82321167]
[-90.45784760 144.99319458]
[-92.73077393 161.79409790]
[-109.50429535 164.26094055]
[-116.51811218 148.82582092]
[-103.62782288 137.81324768]
[-96.44787598 124.64327240]
[-89.26792908 111.47328949]
[-82.08798218 98.30331421]
[-88.99283600 92.07887268]
[-92.43276215 84.33153534]
[-92.38499451 76.66938782]
[-106.38606262 71.28701782]
[-120.38713837 65.90464783]
[-134.38821411 60.52227783]
[-148.68916321 66.69646454]
[-162.81156921 61.03852463]
[-168.60958862 47.36670685]
[-182.61065674 41.98433685]
[-196.61172485 36.60196304]
[-210.61280823 31.21959305]
[-224.61387634 25.83722115]
[-238.61495972 20.45485115]
[-234.98606873 35.00927353]
[-243.98245239 47.01199341]
[-258.97042847 47.61256790]
[-268.89831543 36.36815262]
[-266.44561768 21.57003784]
[-253.42138672 14.12994671]
[-266.99005127 7.73528814]
[-280.55868530 1.34063017]
[-289.65325928 0.51342583]
[-294.27853394 -5.24878550]
[-307.75186157 -11.84193993]
[-321.22518921 -18.43509483]
[-334.69851685 -25.02824783]
[-339.90148926 -24.66971016]
[-344.28430176 -26.18949127]
[-347.26910400 -28.96116829]
[-348.61016846 -32.21981049]
[-361.78015137 -39.39975739]
[-374.95013428 -46.57970810]
[-388.12011719 -53.75965500]
[-401.29010010 -60.93960190]
[-414.66516113 -67.72983551]
[-428.23382568 -74.12448883]
[-441.80249023 -80.51914978]
[-455.37112427 -86.91381073]
[-468.93978882 -93.30846405]
[-482.50842285 -99.70312500]
[-496.07708740 -106.09777832]
[-509.64575195 -112.49243927]
[-523.21441650 -118.88710022]
[-539.50299072 -116.98597717]
[-549.07525635 -130.30148315]
[-542.08416748 -145.13577271]
[-525.72143555 -146.22860718]
[-516.81976318 -132.45574951]
[-503.25109863 -126.06109619]
[-489.68243408 -119.66643524]
[-476.11376953 -113.27177429]
[-462.54513550 -106.87712097]
[-448.97647095 -100.48246002]
[-435.40780640 -94.08779907]
[-421.83917236 -87.69314575]
[-408.27050781 -81.29848480]
[-405.59158325 -82.11663055]
[-402.42752075 -81.92414093]
[-399.16116333 -80.53105927]
[-396.23696899 -77.88923645]
[-394.11013794 -74.10958099]
[-380.94015503 -66.92963409]
[-367.77017212 -59.74968338]
[-354.60021973 -52.56973648]
[-341.43023682 -45.38978958]
[-328.10534668 -38.50156784]
[-314.63201904 -31.90841293]
[-301.15872192 -25.31525803]
[-287.68539429 -18.72210503]
[-274.16403198 -12.22802258]
[-260.59539795 -5.83336496]
[-247.02673340 0.56129342]
[-233.23258972 6.45377636]
[-219.23150635 11.83614731]
[-205.23043823 17.21851921]
[-191.22935486 22.60088921]
[-177.22828674 27.98326111]
[-163.22721863 33.36563110]
[-149.76406860 27.09829330]
[-135.48832703 32.35733032]
[-129.00584412 46.52120209]
[-115.00476837 51.90357208]
[-101.00369263 57.28594589]
[-87.00261688 62.66831589]
[-63.14117050 58.13333893]
[-52.50402451 84.36093140]
[-37.77635956 87.20625305]
[-23.04869461 90.05157471]
[-8.30053997 92.78871918]
[6.46730852 95.41753387]
[21.23515701 98.04634857]
[36.00300598 100.67516327]
[49.88929367 95.28811646]
[62.11988831 105.32421112]
[76.88773346 107.95302582]
[88.50974274 81.98897552]
[112.68315887 86.82775879]
[126.60370636 81.24043274]
[140.52426147 75.65310669]
[154.44480896 70.06578064]
[168.36537170 64.47846222]
[182.20240784 58.68738556]
[195.95292664 52.69381332]
[209.70346069 46.70023727]
[223.45399475 40.70666122]
[237.20451355 34.71308899]
[250.95504761 28.71951294]
[264.57028198 22.42462349]
[278.04357910 15.83146858]
[291.51690674 9.23831463]
[304.99023438 2.64515996]
[313.98495483 -10.37042522]
[328.81774902 -9.01480865]
[342.29107666 -15.60796356]
[355.76437378 -22.20111847]
[369.23770142 -28.79427147]
[382.71102905 -35.38742828]
[396.18432617 -41.98057938]
[399.77172852 -57.20111084]
[412.33428955 -66.51329803]
[427.94030762 -65.52020264]
[439.22109985 -54.69074631]
[440.85028076 -39.13825989]
[432.05853271 -26.20615196]
[416.99710083 -22.00057030]
[402.77749634 -28.50726318]
[389.30416870 -21.91410828]
[375.83084106 -15.32095337]
[362.35754395 -8.72779942]
[348.88421631 -2.13464475]
[335.41088867 4.45850945]
[327.37988281 17.00250816]
[311.58337402 16.11847878]
[298.11007690 22.71163368]
[284.63674927 29.30478668]
[271.16342163 35.89794159]
[269.68020630 39.09437943]
[266.57626343 41.73196030]
[262.13079834 43.05730438]
[256.94863892 42.47004318]
[243.19808960 48.46361923]
[229.44757080 54.45719147]
[215.69703674 60.45076752]
[201.94650269 66.44434357]
[188.19598389 72.43791962]
[185.64744568 76.47452545]
[180.53710938 78.95424652]
[173.95269775 78.39900970]
[160.03213501 83.98633575]
[146.11158752 89.57366180]
[132.19104004 95.16098785]
[118.27047729 100.74831390]
[118.03684235 109.39709473]
[113.57029724 117.80915070]
[105.13730621 123.89634705]
[115.02059174 135.17999268]
[124.90387726 146.46363831]
[134.78717041 157.74728394]
[144.67045593 169.03092957]
[157.46394348 170.65905762]
[165.46348572 180.25877380]
[164.80039978 192.33570862]
[174.51698303 203.76322937]
[184.23356628 215.19073486]
[200.04402161 217.91265869]
[207.64703369 232.03971863]
[201.21020508 246.73484802]
[185.67132568 250.72520447]
[172.95050049 240.94972229]
[172.80604553 224.90731812]
[163.08946228 213.47981262]
[153.37287903 202.05229187]
[136.54919434 197.05586243]
[133.38681030 178.91421509]
[123.50352478 167.63056946]
[113.62023163 156.34692383]
[103.73694611 145.06327820]
[93.85366058 133.77963257]
[101.66856384 146.58303833]
[103.80628204 161.42993164]
[99.92090607 175.91799927]
[90.64112854 187.70297241]
[77.46846008 194.87797546]
[62.53431702 196.28207397]
[48.25513840 191.68804932]
[36.94137573 181.83924866]
[30.42366219 168.32928467]
[29.75660324 153.34411621]
[35.04813004 139.30845642]
[45.44204712 128.49336243]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 118]
[2 117]
[4 115]
[5 114]
[6 113]
[7 112]
[9 111]
[10 110]
[11 109]
[12 22]
[13 21]
[14 20]
[15 19]
[25 107]
[26 106]
[27 105]
[28 104]
[31 101]
[32 100]
[33 99]
[34 98]
[35 97]
[36 96]
[42 95]
[43 94]
[44 93]
[46 92]
[47 91]
[48 90]
[49 89]
[53 88]
[54 87]
[55 86]
[56 85]
[57 84]
[58 79]
[59 78]
[60 77]
[61 76]
[62 75]
[63 74]
[64 73]
[65 72]
[66 71]
[120 175]
[121 174]
[122 173]
[123 172]
[124 171]
[125 168]
[126 167]
[127 166]
[128 165]
[129 164]
[130 163]
[131 159]
[132 158]
[133 157]
[134 156]
[136 154]
[137 153]
[138 152]
[139 151]
[140 150]
[141 149]
[178 201]
[179 200]
[180 199]
[181 198]
[182 197]
[185 195]
[186 194]
[187 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
