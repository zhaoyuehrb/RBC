%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:02:54 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NLRP7)
} def

/sequence { (\
GAAACACAGGCUGGAAGCAAGACCUGACCUGAGGGAGUUCUUCAGCCUUAACCUAAGGUCUCAUACUCGGAGCACU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 49 0.015597798 ubox
1 60 0.014668325 ubox
1 62 0.045276322 ubox
1 68 0.031485433 ubox
2 48 0.010175977 ubox
2 49 0.026938130 ubox
2 59 0.013085866 ubox
2 61 0.043802416 ubox
2 67 0.029816580 ubox
3 48 0.014055547 ubox
3 49 0.034424854 ubox
4 48 0.018084212 ubox
4 59 0.033096611 ubox
5 26 0.004145693 ubox
5 31 0.008803084 ubox
5 58 0.033732564 ubox
6 30 0.008741300 ubox
6 59 0.013716347 ubox
7 26 0.220369864 ubox
7 31 0.017655276 ubox
7 58 0.014418876 ubox
8 25 0.222886744 ubox
8 30 0.017780815 ubox
8 48 0.901093314 ubox
8 49 0.049091954 ubox
8 54 0.004757700 ubox
8 76 0.084419283 ubox
9 24 0.223579517 ubox
9 29 0.017820621 ubox
9 47 0.964969179 ubox
9 48 0.008879305 ubox
9 53 0.003296643 ubox
9 66 0.003187697 ubox
9 75 0.093535122 ubox
9 76 0.003959353 ubox
10 18 0.019098225 ubox
10 23 0.223526025 ubox
10 28 0.017778439 ubox
10 46 0.965342127 ubox
10 47 0.006423675 ubox
10 73 0.125760299 ubox
10 75 0.004018562 ubox
11 17 0.019374116 ubox
11 21 0.217408477 ubox
11 45 0.965359384 ubox
11 70 0.037169511 ubox
11 72 0.125724785 ubox
12 16 0.017458102 ubox
12 19 0.111775841 ubox
12 20 0.191928356 ubox
12 26 0.008643620 ubox
12 44 0.957044889 ubox
12 69 0.039064003 ubox
12 71 0.123331120 ubox
13 18 0.150958334 ubox
13 24 0.017450067 ubox
13 25 0.008662348 ubox
13 41 0.024561043 ubox
13 42 0.004633200 ubox
13 43 0.859062901 ubox
13 67 0.016966905 ubox
13 68 0.044810606 ubox
14 23 0.017471462 ubox
14 24 0.008691335 ubox
14 40 0.058268736 ubox
14 41 0.020115259 ubox
14 42 0.741232770 ubox
14 43 0.439463959 ubox
14 66 0.019411390 ubox
14 67 0.039904333 ubox
14 68 0.091755173 ubox
15 39 0.055388614 ubox
15 41 0.672413100 ubox
15 42 0.608664049 ubox
15 67 0.085030768 ubox
16 25 0.004227886 ubox
16 38 0.052013886 ubox
16 39 0.541118874 ubox
16 41 0.671834944 ubox
16 42 0.008081772 ubox
16 67 0.069177369 ubox
17 24 0.004279430 ubox
17 38 0.569829213 ubox
17 40 0.727427552 ubox
17 41 0.013281961 ubox
17 66 0.076983260 ubox
17 73 0.003408635 ubox
18 26 0.003478313 ubox
18 37 0.571312459 ubox
18 72 0.003407952 ubox
19 25 0.003354729 ubox
19 39 0.515240237 ubox
19 42 0.031082680 ubox
20 38 0.512953078 ubox
20 39 0.023736691 ubox
20 41 0.046490235 ubox
20 61 0.125706768 ubox
21 38 0.025343182 ubox
21 39 0.053683528 ubox
21 40 0.053697565 ubox
21 60 0.130249317 ubox
21 62 0.013145956 ubox
22 38 0.055628966 ubox
22 39 0.052432004 ubox
22 59 0.130256881 ubox
22 61 0.013028949 ubox
23 34 0.897547007 ubox
23 35 0.348585740 ubox
23 37 0.054147247 ubox
23 58 0.130268264 ubox
24 33 0.898840872 ubox
24 34 0.346237115 ubox
24 35 0.051168888 ubox
24 37 0.032885181 ubox
24 57 0.130251748 ubox
25 31 0.014213228 ubox
25 32 0.894130100 ubox
25 33 0.340289733 ubox
25 34 0.050862277 ubox
25 36 0.032162681 ubox
25 50 0.013908752 ubox
25 55 0.011456577 ubox
25 56 0.127977930 ubox
25 74 0.015280916 ubox
26 30 0.021388609 ubox
26 39 0.006357183 ubox
26 40 0.005603594 ubox
26 49 0.026519896 ubox
26 54 0.015234693 ubox
26 60 0.024053834 ubox
26 73 0.026853542 ubox
27 38 0.006863301 ubox
27 39 0.005477875 ubox
27 48 0.025886152 ubox
27 59 0.029799363 ubox
28 34 0.038294662 ubox
28 35 0.021196720 ubox
28 37 0.006790686 ubox
28 58 0.030495003 ubox
28 70 0.040991941 ubox
29 33 0.038165782 ubox
29 34 0.021334758 ubox
29 35 0.005869870 ubox
29 37 0.005816297 ubox
29 45 0.121594210 ubox
29 57 0.030517552 ubox
29 69 0.040675938 ubox
29 70 0.186789847 ubox
29 72 0.017055988 ubox
30 34 0.005310715 ubox
30 36 0.005977478 ubox
30 44 0.129620890 ubox
30 50 0.088856471 ubox
30 56 0.028746311 ubox
30 63 0.005566339 ubox
30 69 0.187348941 ubox
30 71 0.017074991 ubox
30 74 0.024967506 ubox
31 40 0.003712357 ubox
31 43 0.131059828 ubox
31 49 0.094971071 ubox
31 62 0.005989125 ubox
31 68 0.191272290 ubox
31 73 0.028154982 ubox
32 39 0.003699554 ubox
32 41 0.006524719 ubox
32 42 0.130840827 ubox
32 48 0.095502790 ubox
32 49 0.025320832 ubox
32 54 0.027857411 ubox
32 61 0.005985559 ubox
32 67 0.191194193 ubox
33 38 0.003400803 ubox
33 40 0.008770490 ubox
33 41 0.130545439 ubox
33 47 0.095563880 ubox
33 48 0.026197691 ubox
33 49 0.004011024 ubox
33 53 0.029854355 ubox
33 54 0.004446623 ubox
33 60 0.005962511 ubox
33 62 0.004684258 ubox
33 66 0.190250714 ubox
33 76 0.004936973 ubox
34 39 0.006982386 ubox
34 40 0.130488018 ubox
34 41 0.011837499 ubox
34 43 0.023800317 ubox
34 46 0.095311536 ubox
34 47 0.026380080 ubox
34 48 0.005046798 ubox
34 52 0.029779174 ubox
34 53 0.004606944 ubox
34 61 0.008518518 ubox
34 62 0.005590642 ubox
34 66 0.005104165 ubox
34 75 0.005479502 ubox
34 76 0.004777024 ubox
35 39 0.084536840 ubox
35 40 0.015275030 ubox
35 42 0.024439978 ubox
35 43 0.048430130 ubox
35 46 0.026269606 ubox
35 47 0.007411348 ubox
35 49 0.015109878 ubox
35 52 0.004588657 ubox
35 60 0.008755754 ubox
35 62 0.186153024 ubox
35 68 0.054690591 ubox
35 75 0.005375207 ubox
36 41 0.022777563 ubox
36 42 0.047920358 ubox
36 48 0.016597261 ubox
36 49 0.003173261 ubox
36 59 0.006230413 ubox
36 61 0.186855221 ubox
36 67 0.054838502 ubox
36 76 0.009936333 ubox
37 41 0.032596659 ubox
37 46 0.018597719 ubox
37 47 0.014609631 ubox
37 60 0.186713965 ubox
37 64 0.006376391 ubox
37 66 0.054949503 ubox
37 73 0.011936229 ubox
37 75 0.010872087 ubox
38 45 0.020618112 ubox
38 63 0.006513396 ubox
38 65 0.054376964 ubox
38 72 0.011935104 ubox
38 74 0.010671519 ubox
39 44 0.016524964 ubox
39 58 0.041351082 ubox
39 71 0.011940173 ubox
40 57 0.054237071 ubox
40 58 0.015631739 ubox
40 70 0.011941244 ubox
40 72 0.010943347 ubox
41 56 0.054054768 ubox
41 57 0.015571850 ubox
41 69 0.011409693 ubox
41 71 0.010958962 ubox
42 55 0.052370274 ubox
42 56 0.014952307 ubox
42 70 0.010944267 ubox
43 69 0.010912866 ubox
44 54 0.050624482 ubox
44 61 0.029685545 ubox
44 67 0.005866002 ubox
45 53 0.050819651 ubox
45 59 0.193360252 ubox
45 60 0.031292222 ubox
45 66 0.005163787 ubox
46 58 0.211569000 ubox
47 57 0.212674460 ubox
47 58 0.003605817 ubox
48 56 0.213790784 ubox
48 57 0.008101838 ubox
48 71 0.003297219 ubox
48 72 0.004271144 ubox
49 55 0.214331606 ubox
49 56 0.024196303 ubox
49 57 0.007107921 ubox
49 65 0.007711814 ubox
49 71 0.008489429 ubox
50 54 0.190339894 ubox
50 64 0.008153498 ubox
51 59 0.186673768 ubox
52 58 0.198925251 ubox
52 70 0.156860019 ubox
53 57 0.198220379 ubox
53 69 0.157295473 ubox
53 70 0.164481293 ubox
53 72 0.055134057 ubox
54 65 0.007499329 ubox
54 69 0.160177404 ubox
54 71 0.055411855 ubox
55 64 0.007678698 ubox
56 67 0.207368774 ubox
56 76 0.423889525 ubox
57 66 0.212156825 ubox
57 67 0.096064930 ubox
57 68 0.054222330 ubox
57 75 0.469145386 ubox
57 76 0.671218796 ubox
58 64 0.017951905 ubox
58 66 0.103702233 ubox
58 67 0.040573991 ubox
58 73 0.275359443 ubox
58 75 0.746022566 ubox
59 63 0.017334634 ubox
59 65 0.099034911 ubox
59 70 0.015660256 ubox
59 71 0.064309303 ubox
59 72 0.103368632 ubox
59 74 0.744965744 ubox
60 69 0.025048384 ubox
60 70 0.074338246 ubox
60 72 0.915281575 ubox
61 69 0.061729457 ubox
61 70 0.102318185 ubox
61 71 0.916256838 ubox
62 69 0.136349677 ubox
62 70 0.912840948 ubox
66 72 0.019111409 ubox
67 71 0.017328845 ubox
69 76 0.021233597 ubox
70 75 0.023469569 ubox
8 48 0.9500000 lbox
9 47 0.9500000 lbox
10 46 0.9500000 lbox
11 45 0.9500000 lbox
12 44 0.9500000 lbox
13 43 0.9500000 lbox
14 42 0.9500000 lbox
15 41 0.9500000 lbox
16 39 0.9500000 lbox
17 38 0.9500000 lbox
18 37 0.9500000 lbox
23 34 0.9500000 lbox
24 33 0.9500000 lbox
25 32 0.9500000 lbox
57 76 0.9500000 lbox
58 75 0.9500000 lbox
59 74 0.9500000 lbox
60 72 0.9500000 lbox
61 71 0.9500000 lbox
62 70 0.9500000 lbox
showpage
end
%%EOF
