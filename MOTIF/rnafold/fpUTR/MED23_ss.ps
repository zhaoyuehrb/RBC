%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:54:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCCGUACAGGUUCCUGCUGUUGGCUGGGCUCGGGAGGGAACGCUCCAGGUAAAGCGCUGGGGGAGGAAGCGACGCCGAGGAGCUACGGUUUCCUCCAGAGGUCUCCGCCCCUCUGCCCCUAUAUUCCCAGAGCUCGAGUCUGAUCCGGGCCUUGCCGGGCACCCUGGAAAGGCGGGGGUGAUAGUACAG\
) } def
/len { sequence length } bind def

/coor [
[226.47290039 500.57937622]
[215.80883789 507.47506714]
[203.37376404 509.81094360]
[199.95010376 524.41497803]
[207.14959717 538.75189209]
[200.29879761 553.25866699]
[184.65304565 556.80694580]
[172.21443176 546.67480469]
[172.52479553 530.63470459]
[185.34603882 520.99133301]
[188.76969910 506.38726807]
[175.80422974 495.08004761]
[170.31352234 478.68258667]
[173.89222717 461.67370605]
[185.64468384 448.74740601]
[202.40692139 443.51751709]
[205.34838867 428.80874634]
[208.28987122 414.09997559]
[211.23133850 399.39123535]
[214.17282104 384.68246460]
[217.11430359 369.97369385]
[220.05577087 355.26492310]
[218.21005249 340.37893677]
[211.76538086 326.83395386]
[205.32070923 313.28897095]
[198.87603760 299.74401855]
[192.32019043 286.25250244]
[185.65359497 272.81536865]
[178.98701477 259.37823486]
[172.32043457 245.94108582]
[165.65385437 232.50395203]
[158.98727417 219.06681824]
[152.21041870 205.68495178]
[145.32373047 192.35928345]
[138.43704224 179.03359985]
[131.55035400 165.70793152]
[124.12169647 152.67662048]
[116.16361237 139.96171570]
[108.20552063 127.24681091]
[96.03990173 130.89083862]
[82.38821411 128.88616943]
[69.92630005 120.71878815]
[61.44854355 107.14441681]
[59.27296066 90.17252350]
[44.54050446 87.35211182]
[29.80805016 84.53170013]
[15.07559299 81.71128082]
[0.34313661 78.89086914]
[-14.38931942 76.07045746]
[-25.61522102 86.78301239]
[-40.99829483 88.81785583]
[-54.62343979 81.39255524]
[-61.25150681 67.36228943]
[-58.33386993 52.12198257]
[-46.99242020 41.53184128]
[-31.58817482 39.66399002]
[-18.04438210 47.23666000]
[-11.56890678 61.33800125]
[3.16354990 64.15841675]
[17.89600563 66.97882843]
[32.62846375 69.79924011]
[47.36091995 72.61965179]
[62.09337616 75.44007111]
[70.87018585 63.27587509]
[63.54894257 50.18391418]
[56.22769547 37.09195709]
[48.90645218 24.00000000]
[41.58520508 10.90804100]
[34.26396179 -2.18391752]
[26.94271660 -15.27587605]
[19.62147141 -28.36783409]
[2.80764937 -30.13325119]
[-9.52272797 -41.45556259]
[-12.64961815 -57.73199463]
[-5.53641129 -72.51792908]
[-13.07199383 -85.48770142]
[-28.41120529 -89.29351044]
[-36.49487305 -102.87400818]
[-32.52710342 -118.17211914]
[-18.86190033 -126.11175537]
[-3.60658956 -121.98246765]
[4.18812513 -108.23408508]
[-0.10222197 -93.02328491]
[7.43336105 -80.05351257]
[20.79294014 -79.93061066]
[32.43848038 -73.16448212]
[39.27062988 -61.43205643]
[39.41012573 -47.74771881]
[32.71342850 -35.68907928]
[40.03467560 -22.59712029]
[47.35591888 -9.50516224]
[54.67716599 3.58679605]
[61.99840927 16.67875481]
[69.31965637 29.77071190]
[76.64089966 42.86267090]
[83.96214294 55.95462799]
[98.92107391 54.84539413]
[104.23127747 40.81678772]
[109.54147339 26.78818321]
[114.85167694 12.75957680]
[120.16187286 -1.26902890]
[125.47206879 -15.29763508]
[116.84803772 -28.19746399]
[117.48701477 -43.70137787]
[127.14330292 -55.84780502]
[142.10386658 -59.96619415]
[156.61605835 -54.47294235]
[165.09965515 -41.48031616]
[164.29252625 -25.98424911]
[154.50503540 -13.94328880]
[139.50067139 -9.98743534]
[134.19047546 4.04117060]
[128.88027954 18.06977654]
[123.57007599 32.09838104]
[118.25988007 46.12698746]
[112.94967651 60.15559387]
[134.03065491 91.09782410]
[120.92043304 119.28872681]
[128.87850952 132.00363159]
[136.83660889 144.71853638]
[142.78306580 130.94757080]
[157.21195984 126.84791565]
[169.51092529 135.43484497]
[170.63417053 150.39273071]
[159.75553894 160.72015381]
[144.87603760 158.82124329]
[151.76272583 172.14692688]
[158.64939880 185.47259521]
[165.53608704 198.79826355]
[172.26773071 204.99839783]
[172.42442322 212.40022278]
[179.09100342 225.83737183]
[185.75758362 239.27450562]
[192.42416382 252.71163940]
[199.09074402 266.14877319]
[205.75732422 279.58593750]
[212.38607788 285.89593506]
[212.42100525 293.29934692]
[218.86567688 306.84429932]
[225.31034851 320.38928223]
[231.75502014 333.93423462]
[239.75688171 332.11068726]
[248.91728210 334.10757446]
[257.38037109 340.43023682]
[269.61633301 349.10671997]
[281.85229492 357.78317261]
[294.08825684 366.45965576]
[309.47164917 364.01239014]
[321.75708008 372.98587036]
[323.99536133 387.66665649]
[336.23132324 396.34313965]
[348.46728516 405.01962280]
[360.70324707 413.69610596]
[372.93920898 422.37255859]
[388.67193604 424.04348755]
[394.57846069 437.71688843]
[406.81442261 446.39337158]
[419.05038452 455.06982422]
[431.28634644 463.74630737]
[443.52230835 472.42279053]
[459.94018555 476.65246582]
[460.42071533 493.59960938]
[444.26892090 498.75280762]
[434.84582520 484.65875244]
[422.60986328 475.98226929]
[410.37390137 467.30578613]
[398.13793945 458.62933350]
[385.90197754 449.95285034]
[371.04446411 448.90255737]
[364.26272583 434.60852051]
[352.02676392 425.93206787]
[339.79080200 417.25558472]
[327.55484009 408.57910156]
[315.31887817 399.90261841]
[300.72427368 402.64727783]
[288.19168091 394.02239990]
[285.41180420 378.69561768]
[273.17584229 370.01913452]
[260.93988037 361.34268188]
[248.70390320 352.66619873]
[234.76454163 358.20642090]
[231.82305908 372.91516113]
[228.88159180 387.62393188]
[225.94010925 402.33270264]
[222.99862671 417.04147339]
[220.05715942 431.75021362]
[217.11567688 446.45898438]
[227.59654236 454.03640747]
[234.40327454 464.97836304]
[236.55238342 477.63684082]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 11]
[4 10]
[16 187]
[17 186]
[18 185]
[19 184]
[20 183]
[21 182]
[22 181]
[23 141]
[24 140]
[25 139]
[26 138]
[27 136]
[28 135]
[29 134]
[30 133]
[31 132]
[32 131]
[33 129]
[34 128]
[35 127]
[36 126]
[37 120]
[38 119]
[39 118]
[44 63]
[45 62]
[46 61]
[47 60]
[48 59]
[49 58]
[64 96]
[65 95]
[66 94]
[67 93]
[68 92]
[69 91]
[70 90]
[71 89]
[75 84]
[76 83]
[97 116]
[98 115]
[99 114]
[100 113]
[101 112]
[102 111]
[144 180]
[145 179]
[146 178]
[147 177]
[150 174]
[151 173]
[152 172]
[153 171]
[154 170]
[156 168]
[157 167]
[158 166]
[159 165]
[160 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
