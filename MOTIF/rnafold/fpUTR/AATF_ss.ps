%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:21:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUCCCUUCAACCUUCUGCGCGCUUCCGCCUUCAUGCUAGCAACGCCCGCAGUGACGCGCAGGCCCCGCCCCCUCCCGCGCGCCUCCCGGAAGUGGCCGGUCCAGAGCUGUGGGGUGGCCUCCGCGCGGUCUCUGGCGGAGUCGGGGAAUCGGAUCAAGGCGAGAGGAUCCGGCAGGGAAGGAGCUUCGGGGCCGGGGGUUGGGCCGCACAUUUACGUGCGCGAAGCGGAGUGGACCGGGAGCUGGUGACG\
) } def
/len { sequence length } bind def

/coor [
[-28.04205513 1137.11767578]
[-34.24332809 1150.87292480]
[-43.79417038 1162.55383301]
[-56.04338455 1171.36401367]
[-70.15579987 1176.70275879]
[-85.16921234 1178.20605469]
[-100.05998230 1175.77136230]
[-113.81282043 1169.56481934]
[-125.49005127 1160.00939941]
[-134.29550171 1147.75683594]
[-139.62878418 1133.64233398]
[-141.12628174 1118.62841797]
[-138.68588257 1103.73852539]
[-132.47399902 1089.98815918]
[-122.91413116 1078.31457520]
[-110.65811920 1069.51379395]
[-96.54158020 1064.18603516]
[-81.52701569 1062.69433594]
[-79.10665131 1047.89086914]
[-87.98271942 1035.98498535]
[-85.73900604 1020.93768311]
[-73.19079590 1011.70837402]
[-70.77043152 996.90490723]
[-68.35006714 982.10150146]
[-65.92970276 967.29803467]
[-63.50933456 952.49462891]
[-61.08896637 937.69116211]
[-58.66860199 922.88775635]
[-65.46742249 912.90264893]
[-63.59030914 900.56427002]
[-53.50309372 892.55395508]
[-50.89837265 877.78186035]
[-48.29364777 863.00970459]
[-45.68892670 848.23760986]
[-43.08420181 833.46551514]
[-48.49388885 819.58801270]
[-38.47776031 807.34106445]
[-35.87303925 792.56896973]
[-37.80149460 785.45495605]
[-33.14266968 777.62939453]
[-30.35399437 762.89093018]
[-38.93048477 750.76739502]
[-36.31232834 735.78076172]
[-23.53792763 726.86712646]
[-20.74925423 712.12866211]
[-17.96057892 697.39013672]
[-23.19684410 683.44628906]
[-13.02882004 671.32513428]
[-10.24014568 656.58666992]
[-7.45147181 641.84814453]
[-9.29109192 634.71069336]
[-4.53507280 626.94384766]
[-1.56288064 612.24121094]
[1.40931141 597.53863525]
[4.38150358 582.83605957]
[-7.10980272 571.09619141]
[-9.35215092 554.65417480]
[-1.26363695 539.97448730]
[14.13623619 532.94836426]
[16.92490959 518.20983887]
[15.08528996 511.07235718]
[19.84130859 503.30551147]
[22.81350136 488.60290527]
[25.78569412 473.90032959]
[28.75788498 459.19772339]
[31.73007774 444.49514771]
[26.66804886 430.48712158]
[36.98638916 418.49368286]
[39.95858002 403.79110718]
[42.93077087 389.08850098]
[45.90296555 374.38592529]
[48.87515640 359.68331909]
[51.84734726 344.98074341]
[54.63602448 330.24224854]
[57.24074554 315.47012329]
[59.84546661 300.69799805]
[62.45019150 285.92590332]
[65.05491638 271.15377808]
[58.18000412 254.99530029]
[70.16656494 241.00053406]
[72.58692932 226.19709778]
[67.00466156 212.38813782]
[76.86734009 200.01727295]
[79.28770447 185.21383667]
[81.70806885 170.41040039]
[84.03611755 155.59214783]
[86.27175140 140.75968933]
[88.50738525 125.92723083]
[80.23282623 123.39562988]
[72.57328033 118.16468811]
[66.41297913 110.41471863]
[62.57219315 100.61340332]
[61.71524048 89.49068451]
[64.26856995 77.98468781]
[70.35781097 67.16283417]
[63.68157959 53.73048782]
[57.00535583 40.29813766]
[50.32912827 26.86578941]
[43.65290070 13.43344021]
[30.58202171 4.51925611]
[31.84601974 -10.32161903]
[25.16979218 -23.75396729]
[18.49356461 -37.18631744]
[11.81733894 -50.61866760]
[-3.24191833 -55.41390610]
[-10.42535591 -69.49132538]
[-5.47116804 -84.49904633]
[8.68141365 -91.53324127]
[23.63591385 -86.42066193]
[30.52009201 -72.19450378]
[25.24968719 -57.29489136]
[31.92591476 -43.86254501]
[38.60214233 -30.43019485]
[45.27836609 -16.99784660]
[57.87171936 -9.04443359]
[57.08525085 6.75721312]
[63.76147842 20.18956184]
[70.43770599 33.62191010]
[77.11392975 47.05426025]
[83.79015350 60.48661041]
[98.56227112 57.88188553]
[100.24173737 42.97620392]
[101.92121124 28.07052040]
[103.60067749 13.16483688]
[105.28014374 -1.74084663]
[103.13491821 -10.59195042]
[107.07458496 -16.82146072]
[108.93973541 -31.70504761]
[110.80489349 -46.58863449]
[106.77497864 -63.05666733]
[121.48384094 -71.48789978]
[133.65739441 -59.68786621]
[125.68848419 -44.72348022]
[123.82332611 -29.83989334]
[121.95816803 -14.95630455]
[120.18582153 -0.06137950]
[118.50635529 14.84430408]
[116.82688904 29.74998665]
[115.14742279 44.65567017]
[113.46795654 59.56135178]
[126.98249054 66.06961060]
[137.58909607 55.46300888]
[148.19569397 44.85640717]
[158.80229187 34.24980545]
[169.40888977 23.64320183]
[180.01550293 13.03660011]
[176.65470886 -4.80304480]
[184.62403870 -20.93809891]
[200.55177307 -28.96988678]
[217.95326233 -25.84064293]
[228.29212952 -36.70837784]
[238.63101196 -47.57611465]
[235.68994141 -62.81191635]
[242.29641724 -76.85236359]
[255.91012573 -84.29860687]
[271.29632568 -82.28742218]
[282.53866577 -71.59214783]
[285.31430054 -56.32533646]
[278.55590820 -42.35738754]
[264.86221313 -35.05926132]
[249.49874878 -37.23723984]
[239.15986633 -26.36950302]
[228.82099915 -15.50176907]
[232.75817871 -4.04958725]
[231.45521545 8.06268120]
[225.09759521 18.53869438]
[214.83493042 25.36625481]
[202.57347107 27.20370865]
[190.62210083 23.64320183]
[180.01550293 34.24980545]
[169.40888977 44.85640717]
[158.80229187 55.46300888]
[148.19569397 66.06961060]
[137.58909607 76.67620850]
[132.70556641 115.74628448]
[103.33984375 128.16285706]
[101.10420990 142.99533081]
[98.86857605 157.82778931]
[100.68135071 166.75291443]
[96.51151276 172.83076477]
[94.09114075 187.63420105]
[91.67077637 202.43763733]
[97.07992554 217.30545044]
[87.39036560 228.61746216]
[84.97000122 243.42091370]
[91.84552765 254.31327820]
[89.54217529 266.57928467]
[79.82702637 273.75851440]
[77.22230530 288.53060913]
[74.61758423 303.30273438]
[72.01286316 318.07485962]
[69.40814209 332.84695435]
[71.29447937 339.13912964]
[69.94145966 344.62457275]
[66.54993439 347.95294189]
[63.57774353 362.65551758]
[60.60555267 377.35812378]
[57.63335800 392.06069946]
[54.66116714 406.76327515]
[51.68897629 421.46588135]
[56.53841400 436.52554321]
[46.43266296 447.46734619]
[43.46047211 462.16992188]
[40.48828125 476.87252808]
[37.51608658 491.57510376]
[34.54389572 506.27767944]
[31.66340637 520.99853516]
[28.87473297 535.73699951]
[39.03645706 545.02770996]
[43.25363159 558.02105713]
[40.52837372 571.29663086]
[31.67576027 581.41491699]
[19.08409119 585.80822754]
[16.11189842 600.51086426]
[13.13970661 615.21343994]
[10.16751480 629.91601562]
[7.28702545 644.63684082]
[4.49835110 659.37530518]
[1.70967722 674.11383057]
[6.74647665 689.11187744]
[-3.22208261 700.17883301]
[-6.01075649 714.91729736]
[-8.79943085 729.65582275]
[-0.16458532 742.62023926]
[-3.20265293 757.52746582]
[-15.61549664 765.67956543]
[-18.40417099 780.41809082]
[-21.10092163 795.17364502]
[-23.70564461 809.94580078]
[-18.48226547 824.87988281]
[-28.31208611 836.07019043]
[-30.91680908 850.84234619]
[-33.52153397 865.61444092]
[-36.12625504 880.38659668]
[-38.73097610 895.15869141]
[-32.03923798 912.32702637]
[-43.86516190 925.30810547]
[-46.28552628 940.11151123]
[-48.70589447 954.91497803]
[-51.12625885 969.71838379]
[-53.54662704 984.52185059]
[-55.96699524 999.32531738]
[-58.38735962 1014.12872314]
[-49.43198395 1026.87390137]
[-52.09746170 1041.85217285]
[-64.30320740 1050.31127930]
[-66.72357941 1065.11462402]
[-52.96594238 1071.31066895]
[-41.28133774 1080.85693359]
[-32.46643448 1093.10278320]
[-27.12225151 1107.21313477]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 247]
[19 246]
[22 243]
[23 242]
[24 241]
[25 240]
[26 239]
[27 238]
[28 237]
[31 235]
[32 234]
[33 233]
[34 232]
[35 231]
[37 229]
[38 228]
[40 227]
[41 226]
[44 223]
[45 222]
[46 221]
[48 219]
[49 218]
[50 217]
[52 216]
[53 215]
[54 214]
[55 213]
[59 208]
[60 207]
[62 206]
[63 205]
[64 204]
[65 203]
[66 202]
[68 200]
[69 199]
[70 198]
[71 197]
[72 196]
[73 195]
[74 192]
[75 191]
[76 190]
[77 189]
[78 188]
[80 185]
[81 184]
[83 182]
[84 181]
[85 180]
[86 178]
[87 177]
[88 176]
[95 120]
[96 119]
[97 118]
[98 117]
[99 116]
[101 114]
[102 113]
[103 112]
[104 111]
[121 140]
[122 139]
[123 138]
[124 137]
[125 136]
[127 135]
[128 134]
[129 133]
[141 174]
[142 173]
[143 172]
[144 171]
[145 170]
[146 169]
[150 163]
[151 162]
[152 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
