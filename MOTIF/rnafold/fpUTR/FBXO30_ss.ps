%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:36:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGGCUGCCUCUGGAGCAGGCCGGGAGAAGAGAAAAGGCGGCGGCCCGGCUGGGGAAGAGGGGCGGAGGAGGCGGUUCGGACGGCUGUGUGGGGUACGGAGCGUCGCCGGGACAGAGCGGAGCAGCUGGGCACGGCGUCCAGGGCAGCUAGGGCCUGGGCCGCGGUUCGGCCGCGCCGGCCGAGCUGGACUGGCCAUU\
) } def
/len { sequence length } bind def

/coor [
[334.79138184 481.71188354]
[325.41275024 470.00543213]
[316.03411865 458.29898071]
[306.38226318 446.81674194]
[296.46258545 435.56506348]
[286.54290771 424.31338501]
[276.62322998 413.06173706]
[266.70355225 401.81005859]
[256.78387451 390.55841064]
[246.86419678 379.30673218]
[240.07656860 376.36572266]
[236.87878418 367.79956055]
[227.13705444 356.39346313]
[217.39533997 344.98736572]
[207.65361023 333.58126831]
[197.91189575 322.17520142]
[188.08088684 310.84594727]
[178.16120911 299.59429932]
[167.45562744 302.38040161]
[156.50381470 300.82171631]
[147.00061035 295.15948486]
[134.33569336 303.19689941]
[121.67076874 311.23428345]
[109.00585175 319.27169800]
[111.98877716 334.15344238]
[109.39050293 349.10714722]
[101.56243896 362.11044312]
[89.56325531 371.40475464]
[75.01574707 375.73306274]
[59.88733673 374.51004028]
[46.22402954 367.90109253]
[35.87367249 356.79998779]
[30.23606110 342.70806885]
[30.07364082 327.53118896]
[35.40837479 313.32183838]
[45.51878738 302.00177002]
[59.03752518 295.10189819]
[74.13629150 293.55538940]
[88.77310181 297.57141113]
[100.96844482 306.60678101]
[113.63336945 298.56936646]
[126.29828644 290.53198242]
[138.96321106 282.49456787]
[138.76603699 265.12377930]
[148.90888977 250.65153503]
[143.60676575 236.61987305]
[138.30464172 222.58821106]
[133.00251770 208.55654907]
[127.70039368 194.52488708]
[122.39827728 180.49322510]
[117.09615326 166.46156311]
[111.79402924 152.42991638]
[106.49190521 138.39825439]
[95.95271301 138.73228455]
[85.71025085 136.22669983]
[76.51541901 131.06517029]
[69.04235077 123.62613678]
[63.83890915 114.45496368]
[61.28659439 104.22403717]
[61.57251740 93.68343353]
[64.67572021 83.60591888]
[52.54047012 74.78913879]
[40.40521240 65.97236633]
[24.69276810 64.12042999]
[18.94405937 50.37992096]
[6.80880547 41.56314468]
[-8.31948853 45.52152252]
[-22.43062973 38.78284836]
[-28.86176872 24.52892113]
[-24.57631874 9.49000645]
[-11.59773827 0.76702148]
[3.94588399 2.47869253]
[14.71532536 13.81682110]
[15.62558365 29.42788887]
[27.76083946 38.24466705]
[42.60528946 39.46596146]
[49.22199249 53.83710861]
[61.35724640 62.65388870]
[73.49250031 71.47066498]
[78.87561035 67.28409576]
[84.90648651 64.10074615]
[81.86467743 49.41240692]
[78.82286835 34.72406387]
[75.78105927 20.03572273]
[70.97240448 12.25870228]
[72.80873871 5.09285355]
[69.99801636 -9.64145565]
[59.81187057 -21.74736404]
[65.02726746 -35.69902420]
[62.21654892 -50.43333435]
[59.40583038 -65.16764069]
[56.59511185 -79.90195465]
[47.68791199 -94.32756042]
[59.08400345 -106.88006592]
[74.30070496 -99.40422058]
[71.32942200 -82.71266937]
[74.14013672 -67.97836304]
[76.95085907 -53.24405289]
[79.76158142 -38.50974655]
[89.74668121 -27.45773315]
[84.73232269 -12.45217514]
[87.54304504 2.28213358]
[90.46939850 16.99391365]
[93.51120758 31.68225479]
[96.55301666 46.37059784]
[99.59482574 61.05894089]
[104.88087463 61.36391068]
[110.07669067 62.38310623]
[116.67577362 48.91269302]
[123.27486420 35.44227982]
[115.89522552 21.79235077]
[117.98155975 6.41617441]
[128.73162842 -4.77379847]
[144.01182556 -7.47479439]
[157.94659424 -0.64822537]
[165.17771912 13.08095360]
[162.92469788 28.43359375]
[152.05386353 39.50629044]
[136.74528503 42.04136658]
[130.14619446 55.51177979]
[123.54710388 68.98219299]
[137.47206116 89.39739227]
[136.30795288 114.08198547]
[120.52356720 133.09613037]
[125.82569122 147.12779236]
[131.12780762 161.15945435]
[136.42993164 175.19110107]
[141.73205566 189.22276306]
[147.03417969 203.25442505]
[152.33630371 217.28608704]
[157.63842773 231.31774902]
[162.94055176 245.34941101]
[178.72175598 248.47044373]
[190.30743408 259.43356323]
[194.22683716 274.75427246]
[189.41288757 289.67462158]
[199.33256531 300.92626953]
[207.36270142 305.29916382]
[209.31797791 312.43347168]
[219.05970764 323.83956909]
[228.80142212 335.24563599]
[238.54315186 346.65173340]
[248.28486633 358.05783081]
[258.11587524 369.38705444]
[268.03555298 380.63873291]
[277.95523071 391.89038086]
[287.87490845 403.14205933]
[297.79458618 414.39370728]
[307.71426392 425.64538574]
[317.63394165 436.89706421]
[322.59893799 438.56512451]
[326.07498169 441.66455078]
[327.76586914 445.38604736]
[327.74057007 448.92034912]
[337.11920166 460.62680054]
[346.49783325 472.33325195]
[365.38754272 473.68585205]
[377.09661865 488.16207886]
[374.55932617 506.28503418]
[384.30105591 517.69116211]
[394.04275513 529.09722900]
[403.78448486 540.50329590]
[413.52621460 551.90942383]
[423.53393555 563.08282471]
[433.80215454 574.01733398]
[444.07037354 584.95184326]
[454.33856201 595.88641357]
[464.60678101 606.82092285]
[474.87496948 617.75543213]
[485.14318848 628.69000244]
[495.41140747 639.62451172]
[505.67959595 650.55902100]
[515.94781494 661.49359131]
[526.21600342 672.42810059]
[541.46624756 679.83532715]
[538.57019043 696.54010010]
[521.71655273 698.38153076]
[515.28149414 682.69628906]
[505.01327515 671.76177979]
[494.74505615 660.82727051]
[484.47686768 649.89270020]
[474.20864868 638.95819092]
[463.94046021 628.02368164]
[453.67224121 617.08911133]
[443.40402222 606.15460205]
[433.13583374 595.22009277]
[422.86761475 584.28552246]
[412.59942627 573.35101318]
[409.09683228 572.87811279]
[405.65069580 570.67968750]
[403.07196045 566.80163574]
[402.12011719 561.65112305]
[392.37838745 550.24505615]
[382.63668823 538.83892822]
[372.89495850 527.43286133]
[363.15322876 516.02679443]
[351.84518433 517.61816406]
[341.06301880 513.50689697]
[333.53036499 504.60751343]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 156]
[2 155]
[3 154]
[4 150]
[5 149]
[6 148]
[7 147]
[8 146]
[9 145]
[10 144]
[12 143]
[13 142]
[14 141]
[15 140]
[16 139]
[17 137]
[18 136]
[21 43]
[22 42]
[23 41]
[24 40]
[45 132]
[46 131]
[47 130]
[48 129]
[49 128]
[50 127]
[51 126]
[52 125]
[53 124]
[61 79]
[62 78]
[63 77]
[65 75]
[66 74]
[81 106]
[82 105]
[83 104]
[84 103]
[86 102]
[87 101]
[89 99]
[90 98]
[91 97]
[92 96]
[108 121]
[109 120]
[110 119]
[159 196]
[160 195]
[161 194]
[162 193]
[163 192]
[164 188]
[165 187]
[166 186]
[167 185]
[168 184]
[169 183]
[170 182]
[171 181]
[172 180]
[173 179]
[174 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
