%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:23:43 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PPIL4)
} def

/sequence { (\
GUCGCGCCGAGGGUGACGCGUGGCGUAGACGACGCCGUCGGCCUGCGCCUGUCACCCCCCUCCUCCCGGGGUUUGUAGCGGAGGAGGAGCGGGCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 94 0.067323890 ubox
1 96 0.121020768 ubox
2 92 0.008568796 ubox
2 93 0.067039965 ubox
2 95 0.025658197 ubox
3 91 0.011633894 ubox
3 92 0.066496318 ubox
3 95 0.174323410 ubox
4 90 0.013256370 ubox
4 94 0.180934353 ubox
4 96 0.979069201 ubox
5 89 0.013249675 ubox
5 91 0.066336118 ubox
5 93 0.180806542 ubox
5 95 0.981023533 ubox
6 42 0.004339043 ubox
6 90 0.066667886 ubox
6 94 0.980933790 ubox
7 41 0.004347642 ubox
7 89 0.066512146 ubox
7 92 0.289975940 ubox
7 93 0.954525060 ubox
8 40 0.004347753 ubox
8 91 0.367756950 ubox
8 92 0.924797372 ubox
9 39 0.004347709 ubox
9 90 0.425789702 ubox
10 38 0.004337567 ubox
11 56 0.004572422 ubox
11 57 0.994477970 ubox
11 58 0.078296750 ubox
12 36 0.004346202 ubox
12 55 0.003302492 ubox
12 56 0.997901085 ubox
12 57 0.064146359 ubox
13 35 0.004346752 ubox
13 55 0.998937609 ubox
13 56 0.045487072 ubox
14 34 0.004332461 ubox
14 54 0.999767932 ubox
15 33 0.004290446 ubox
15 53 0.999936430 ubox
16 52 0.997677908 ubox
17 47 0.005524200 ubox
17 51 0.994634210 ubox
18 46 0.008926465 ubox
18 48 0.246401133 ubox
18 50 0.918995676 ubox
18 52 0.062783437 ubox
19 45 0.008976188 ubox
19 47 0.249560559 ubox
19 51 0.087010641 ubox
20 39 0.006656399 ubox
20 44 0.008397660 ubox
20 46 0.249617746 ubox
20 48 0.009294236 ubox
20 50 0.131636921 ubox
21 37 0.008990876 ubox
21 45 0.246918560 ubox
21 47 0.008911557 ubox
21 51 0.003460347 ubox
22 36 0.011828356 ubox
22 43 0.128993489 ubox
22 44 0.212932644 ubox
22 46 0.006856936 ubox
22 49 0.967442892 ubox
22 50 0.005246391 ubox
23 35 0.011849034 ubox
23 42 0.129645295 ubox
23 43 0.213371923 ubox
23 48 0.968167407 ubox
23 49 0.004293555 ubox
24 34 0.011850210 ubox
24 40 0.003590038 ubox
24 41 0.129833025 ubox
24 45 0.004153087 ubox
24 47 0.968168453 ubox
25 33 0.011847352 ubox
25 42 0.211566191 ubox
25 46 0.968160819 ubox
26 32 0.011585364 ubox
26 41 0.201506152 ubox
26 45 0.967919547 ubox
27 44 0.967291226 ubox
28 39 0.253031515 ubox
28 43 0.963615872 ubox
29 38 0.255787410 ubox
30 37 0.255869683 ubox
30 40 0.963000525 ubox
31 36 0.252352730 ubox
31 39 0.963821116 ubox
32 38 0.962569797 ubox
33 37 0.953039103 ubox
33 40 0.012738118 ubox
34 39 0.011935029 ubox
34 42 0.071319130 ubox
35 41 0.071341564 ubox
36 40 0.070822610 ubox
40 49 0.010279722 ubox
41 48 0.010480463 ubox
42 47 0.010452985 ubox
45 96 0.004429275 ubox
46 95 0.004451023 ubox
47 94 0.004456509 ubox
48 93 0.004456607 ubox
49 92 0.004456525 ubox
50 91 0.004452977 ubox
51 90 0.004454103 ubox
52 89 0.004359891 ubox
57 91 0.009495304 ubox
57 92 0.004864878 ubox
58 87 0.063420359 ubox
58 91 0.113750911 ubox
58 92 0.057533857 ubox
59 86 0.045028679 ubox
59 87 0.981813428 ubox
59 91 0.109501816 ubox
60 86 0.985139247 ubox
60 87 0.003484627 ubox
60 89 0.164890680 ubox
61 85 0.986045449 ubox
61 88 0.165443765 ubox
62 84 0.986195621 ubox
62 87 0.165519680 ubox
63 83 0.986187009 ubox
63 86 0.165518319 ubox
64 82 0.985270108 ubox
64 84 0.010638106 ubox
64 85 0.165124578 ubox
65 81 0.873825852 ubox
65 83 0.024585627 ubox
65 84 0.162010427 ubox
66 80 0.745040310 ubox
66 81 0.463852041 ubox
66 83 0.141938027 ubox
66 84 0.021486126 ubox
67 75 0.163669814 ubox
67 80 0.654370022 ubox
67 83 0.030322823 ubox
68 74 0.150776140 ubox
68 79 0.794762410 ubox
69 73 0.098262488 ubox
71 79 0.362638746 ubox
72 78 0.360100325 ubox
72 82 0.015689224 ubox
73 77 0.274575088 ubox
73 81 0.015771772 ubox
73 82 0.005676581 ubox
74 80 0.015732108 ubox
74 81 0.005668029 ubox
75 79 0.019770595 ubox
4 96 0.9500000 lbox
5 95 0.9500000 lbox
6 94 0.9500000 lbox
7 93 0.9500000 lbox
8 92 0.9500000 lbox
11 57 0.9500000 lbox
12 56 0.9500000 lbox
13 55 0.9500000 lbox
14 54 0.9500000 lbox
15 53 0.9500000 lbox
16 52 0.9500000 lbox
17 51 0.9500000 lbox
18 50 0.9500000 lbox
22 49 0.9500000 lbox
23 48 0.9500000 lbox
24 47 0.9500000 lbox
25 46 0.9500000 lbox
26 45 0.9500000 lbox
27 44 0.9500000 lbox
28 43 0.9500000 lbox
30 40 0.9500000 lbox
31 39 0.9500000 lbox
32 38 0.9500000 lbox
33 37 0.9500000 lbox
59 87 0.9500000 lbox
60 86 0.9500000 lbox
61 85 0.9500000 lbox
62 84 0.9500000 lbox
63 83 0.9500000 lbox
64 82 0.9500000 lbox
65 81 0.9500000 lbox
66 80 0.9500000 lbox
showpage
end
%%EOF
