%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:47:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGCAUGAAUGAACAGGAGUCGGUUCUCACCCAACUUCCAUUAAGGACUCGGGGCAGGAGGGGCAGAAGUUGCGCGCAGGCCGGCGGGCGGGAGCGGACACCGAGGCCGGCGUGCAGGCGUGCGGGUGUGCGGGAGCCGGGCUCGGGGGGAUCGGACCGAGAGCGAGAAGCGCGGC\
) } def
/len { sequence length } bind def

/coor [
[63.45298004 179.30015564]
[55.70144272 165.71900940]
[58.54405975 150.34196472]
[70.63864136 140.42959595]
[70.63864136 125.42958832]
[63.44726181 138.59332275]
[60.11823273 153.21925354]
[51.34434128 165.38554382]
[38.51756668 173.16204834]
[23.67287636 175.31498718]
[9.16538239 171.50282288]
[-2.70330191 162.33035278]
[-10.05020905 149.25277710]
[-11.70975113 134.34486389]
[-7.41864204 119.97174835]
[2.14233327 108.41372681]
[15.45632648 101.50449371]
[30.41106987 100.34017944]
[44.63534546 105.10629272]
[59.61869049 105.81300354]
[46.80838394 98.00940704]
[33.99807739 90.20581818]
[18.18719673 89.63423920]
[11.34309578 76.40519714]
[-1.46721077 68.60160065]
[-14.27751732 60.79801178]
[-27.08782387 52.99441910]
[-39.89813232 45.19082642]
[-52.70843887 37.38723373]
[-68.51931763 36.81565475]
[-75.36341858 23.58661270]
[-88.17372131 15.78302097]
[-100.98403168 7.97942877]
[-100.74769592 19.40506744]
[-105.15298462 31.28122139]
[-114.28274536 42.09013748]
[-127.77420807 50.32349014]
[-144.83261108 54.60465240]
[-159.81158447 55.39850616]
[-174.79057312 56.19235611]
[-186.54438782 67.11148071]
[-202.38766479 64.58753967]
[-210.16677856 50.55669022]
[-203.91427612 35.78219604]
[-188.42652893 31.59778214]
[-175.58441162 41.21337891]
[-160.60543823 40.41952515]
[-145.62646484 39.62567520]
[-143.25379944 24.81451416]
[-157.23524475 19.38137054]
[-171.21670532 13.94822788]
[-184.83676147 21.63119316]
[-200.19927979 18.71107674]
[-210.05053711 6.56666803]
[-209.73908997 -9.06781387]
[-199.41197205 -20.81024361]
[-183.94534302 -23.11620712]
[-170.64207458 -14.89689827]
[-165.78355408 -0.03322276]
[-151.80210876 5.39992046]
[-137.82064819 10.83306408]
[-132.56436157 5.48317051]
[-143.26414490 -5.02941942]
[-153.96394348 -15.54200935]
[-164.66355896 -26.05476379]
[-154.15063477 -36.75422668]
[-143.45133972 -26.24179649]
[-132.75155640 -15.72920704]
[-122.05177307 -5.21661711]
[-116.79547882 -10.56651115]
[-122.47452545 -24.44989777]
[-128.15357971 -38.33328247]
[-133.83262634 -52.21666718]
[-139.99653625 -58.99966431]
[-139.48699951 -66.39553833]
[-144.92013550 -80.37698364]
[-158.03887939 -90.21723938]
[-155.80798340 -106.46393585]
[-140.52238464 -112.40386200]
[-127.90661621 -101.92653656]
[-130.93869019 -85.81012726]
[-125.50554657 -71.82868195]
[-119.94923401 -57.89571762]
[-114.27018738 -44.01233292]
[-108.59114075 -30.12894630]
[-102.91208649 -16.24555969]
[-93.18043518 -4.83087778]
[-80.37013245 2.97271395]
[-67.55982208 10.77630520]
[-52.66522598 10.78972244]
[-44.90484619 24.57692909]
[-32.09453964 32.38051987]
[-19.28423309 40.18411255]
[-6.47392559 47.98770523]
[6.33638096 55.79129410]
[19.14668846 63.59488678]
[34.04128647 63.60830307]
[41.80166626 77.39550781]
[54.61197281 85.19910431]
[67.42227936 93.00269318]
[88.42186737 53.92485046]
[147.02900696 60.06901169]
[161.27839661 55.38343048]
[175.52780151 50.69784546]
[189.77719116 46.01226425]
[204.02659607 41.32667923]
[214.71928406 29.66576767]
[229.22659302 33.04024506]
[243.47599792 28.35466385]
[257.72540283 23.66908073]
[271.97479248 18.98349762]
[286.22418213 14.29791451]
[298.93191528 -1.32515991]
[317.67138672 3.36986542]
[331.74655151 -1.81568062]
[345.82171631 -7.00122643]
[359.89685059 -12.18677235]
[370.17135620 -24.21778297]
[384.78872681 -21.35739136]
[398.86389160 -26.54293633]
[405.25845337 -40.99580002]
[420.02972412 -46.61587524]
[434.41415405 -40.06887436]
[439.87774658 -25.23901367]
[433.17904663 -10.92459011]
[418.29223633 -5.61809444]
[404.04943848 -12.46777725]
[389.97427368 -7.28223181]
[380.70651245 4.37787437]
[365.08239746 1.88838708]
[351.00726318 7.07393312]
[336.93209839 12.25947857]
[322.85693359 17.44502449]
[319.40954590 27.10331154]
[311.02966309 33.38851547]
[300.35333252 34.02043152]
[290.90975952 28.54731178]
[276.66036987 33.23289490]
[262.41098022 37.91847610]
[248.16157532 42.60406113]
[233.91217041 47.28964233]
[224.23869324 58.61541367]
[208.71217346 55.57607651]
[194.46276855 60.26166153]
[180.21337891 64.94724274]
[165.96397400 69.63282776]
[151.71458435 74.31840515]
[148.82069397 89.03660583]
[160.23536682 98.76825714]
[175.28839111 95.00177765]
[189.66780090 100.83377838]
[197.84442139 114.02174377]
[196.67417908 129.49462891]
[186.60707092 141.30279541]
[171.51408386 144.90576172]
[157.19879150 138.91810608]
[149.16571045 125.64221954]
[150.50372314 110.18293762]
[139.08903503 100.45128632]
[132.93698120 104.74105835]
[141.51632690 117.04531860]
[129.21192932 125.62447357]
[120.63285065 113.32059479]
[114.48078156 117.61035919]
[119.66632843 131.68551636]
[133.57157898 139.68699646]
[135.84300232 155.56843567]
[124.73816681 167.14695740]
[108.77574921 165.54051208]
[100.20074463 151.98141479]
[105.59117126 136.87106323]
[100.40562439 122.79590607]
[85.63864136 125.42958832]
[85.63864136 140.42959595]
[97.73322296 150.34196472]
[100.57584381 165.71900940]
[92.82430267 179.30015564]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 174]
[5 173]
[20 100]
[21 99]
[22 98]
[24 96]
[25 95]
[26 94]
[27 93]
[28 92]
[29 91]
[31 89]
[32 88]
[33 87]
[38 48]
[39 47]
[40 46]
[49 61]
[50 60]
[51 59]
[70 86]
[71 85]
[72 84]
[73 83]
[75 82]
[76 81]
[102 147]
[103 146]
[104 145]
[105 144]
[106 143]
[108 141]
[109 140]
[110 139]
[111 138]
[112 137]
[114 133]
[115 132]
[116 131]
[117 130]
[119 128]
[120 127]
[148 159]
[149 158]
[164 172]
[165 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
