%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:45:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUGACCUCCUUCUUGGUGCUCUGACAGCGGCAGCCGGUCCUCCCUCAGCUCUGCCCGCCUUCUCUCCUGCUGCUGGCCAAGCCCAUUAAGCUGCUACCUUGGCCACAACUGAAGGCCCCACGCCCUGGGAAGAAAGCUACUGAAGAGGCGUCCCUGCUCCCCAGCACCCCAAACCAUCAAUUAAUAUUAACGAGGGAAGGCUCCUCAUUGCCUAAAGACCCCACUGGGGCUCCAAUGGAAGAGAGGCCCCGCCC\
CCGUGACUCAGGAGGUUAAAGGGCCUGGUGCCGGCUUGUGAGGCCAGUGUCCAG\
) } def
/len { sequence length } bind def

/coor [
[145.80105591 294.66333008]
[148.57916260 284.53988647]
[155.33885193 276.40322876]
[150.27207947 262.28488159]
[145.20532227 248.16651917]
[140.13856506 234.04817200]
[135.07179260 219.92980957]
[130.00503540 205.81146240]
[124.93827057 191.69309998]
[119.87150574 177.57475281]
[114.80474091 163.45639038]
[89.07050323 164.23738098]
[65.04255676 154.98974609]
[46.47209930 137.15721130]
[36.25831604 113.52377319]
[35.99576187 87.77902985]
[21.68367195 83.28858185]
[7.37158346 78.79813385]
[-6.94050503 74.30768585]
[-21.25259399 69.81723785]
[-35.56468201 65.32679749]
[-50.94794846 73.70776367]
[-67.30281830 68.44864655]
[-74.62339020 53.28181458]
[-88.98025513 48.93663788]
[-103.35894775 44.66426086]
[-117.75910187 40.46480179]
[-132.15925598 36.26533890]
[-147.57373047 39.82967377]
[-157.62588501 28.83860588]
[-172.02604675 24.63914299]
[-186.42619324 20.43968010]
[-195.48742676 21.04331970]
[-200.95060730 16.12401009]
[-215.30746460 11.77883148]
[-229.66432190 7.43365431]
[-236.09605408 8.55024052]
[-241.35731506 6.58031988]
[-244.26649475 2.85219502]
[-258.53234863 -1.78305995]
[-274.04803467 1.31106222]
[-283.76144409 -9.98049068]
[-298.02728271 -14.61574554]
[-308.51901245 -5.72169113]
[-321.92645264 -3.18006563]
[-334.74075317 -7.54754305]
[-343.66165161 -17.58668137]
[-346.44732666 -30.61417580]
[-360.66546631 -35.39376068]
[-374.88360596 -40.17334747]
[-389.14944458 -44.80860519]
[-403.46154785 -49.29904938]
[-417.77362061 -53.78949738]
[-433.25717163 -50.53829956]
[-443.08450317 -61.73083496]
[-457.39660645 -66.22128296]
[-471.70867920 -70.71173096]
[-486.22985840 -74.47151947]
[-500.92279053 -77.49099731]
[-515.61572266 -80.51047516]
[-530.30871582 -83.52995300]
[-545.00164795 -86.54943085]
[-559.69458008 -89.56890869]
[-565.17639160 -81.50207520]
[-572.78747559 -75.45030975]
[-581.82720947 -71.94827271]
[-591.47027588 -71.29698944]
[-600.84167480 -73.53802490]
[-609.09637451 -78.45130157]
[-615.49530029 -85.57661438]
[-619.47174072 -94.25665283]
[-620.68115234 -103.69761658]
[-635.20233154 -107.45740509]
[-644.24102783 -106.57859802]
[-649.85119629 -111.32956696]
[-664.33349609 -115.23632050]
[-678.81579590 -119.14307404]
[-693.29809570 -123.04982758]
[-707.78045654 -126.95658112]
[-722.26275635 -130.86332703]
[-736.74505615 -134.77008057]
[-751.22735596 -138.67683411]
[-767.33007812 -128.62008667]
[-785.34606934 -133.49615479]
[-793.87969971 -149.73361206]
[-808.43823242 -153.34605408]
[-821.84490967 -144.97732544]
[-837.22344971 -148.62106323]
[-845.44995117 -162.11550903]
[-841.64379883 -177.45465088]
[-828.06317139 -185.53802490]
[-812.76513672 -181.56993103]
[-804.82580566 -167.90455627]
[-790.26727295 -164.29212952]
[-782.05230713 -172.12155151]
[-770.96893311 -175.06640625]
[-759.71905518 -172.28988647]
[-751.10253906 -164.36465454]
[-747.32061768 -153.15914917]
[-732.83831787 -149.25239563]
[-718.35601807 -145.34564209]
[-703.87365723 -141.43888855]
[-689.39135742 -137.53213501]
[-674.90905762 -133.62538147]
[-660.42675781 -129.71862793]
[-645.94445801 -125.81187439]
[-631.44250488 -121.97856140]
[-616.92138672 -118.21877289]
[-602.16601562 -132.25938416]
[-581.77191162 -134.43025208]
[-564.15057373 -123.66316986]
[-556.67510986 -104.26185608]
[-541.98217773 -101.24237823]
[-527.28918457 -98.22290039]
[-512.59625244 -95.20342255]
[-497.90332031 -92.18394470]
[-483.21035767 -89.16446686]
[-493.66687012 -99.91905975]
[-497.41061401 -114.44435883]
[-493.45523071 -128.91346741]
[-482.84283447 -139.51426697]
[-468.36941528 -143.45382690]
[-453.84820557 -139.69419861]
[-443.10507202 -129.22592163]
[-438.97042847 -114.80702209]
[-442.53359985 -100.23637390]
[-452.85583496 -89.35283661]
[-467.21823120 -85.02381897]
[-452.90615845 -80.53337097]
[-438.59405518 -76.04292297]
[-424.13421631 -79.61531067]
[-413.28317261 -68.10158539]
[-398.97109985 -63.61114120]
[-384.65899658 -59.12069321]
[-380.12756348 -60.47283173]
[-374.69830322 -59.02898026]
[-370.10403442 -54.39149094]
[-355.88589478 -49.61190414]
[-341.66772461 -44.83231735]
[-328.57592773 -54.77519989]
[-311.97073364 -54.93823624]
[-298.41705322 -45.05816650]
[-293.39202881 -28.88159370]
[-279.12619019 -24.24633789]
[-264.63085938 -27.67200470]
[-253.89707947 -16.04890823]
[-239.63124084 -11.41365242]
[-225.31915283 -6.92320585]
[-210.96229553 -2.57802820]
[-196.60542297 1.76714933]
[-182.22673035 6.03952408]
[-167.82658386 10.23898602]
[-153.42642212 14.43844795]
[-139.04194641 10.57373905]
[-127.95980072 21.86518097]
[-113.55963898 26.06464386]
[-99.15948486 30.26410484]
[-91.89649963 29.12614822]
[-84.63507843 34.57977676]
[-70.27821350 38.92495346]
[-59.90945435 31.32618904]
[-46.86269760 31.06694603]
[-35.87790298 38.46474457]
[-31.07423592 51.01470566]
[-16.76214790 55.50515366]
[-2.45005846 59.99559784]
[11.86203003 64.48604584]
[26.17411995 68.97649384]
[40.48620987 73.46694183]
[43.81084442 67.00495148]
[47.83436203 60.95335007]
[52.50671768 55.38741302]
[57.76979446 50.37636948]
[63.55813599 45.98254776]
[69.79973602 42.26059341]
[76.41696930 39.25680542]
[83.32752991 37.00854492]
[90.44546509 35.54376984]
[97.68224335 34.88070297]
[104.94784546 35.02759552]
[112.15190125 35.98261261]
[119.20481873 37.73387909]
[126.01885986 40.25961685]
[132.50927734 43.52840424]
[138.59535217 47.49958420]
[144.20137024 52.12377167]
[149.25761414 57.34344101]
[153.70118713 63.09367371]
[157.47682190 69.30294800]
[160.53756714 75.89403534]
[162.84533691 82.78495026]
[177.67236328 80.51353455]
[192.49938965 78.24211884]
[200.45901489 73.87007141]
[207.48811340 76.02360535]
[222.33738708 73.90255737]
[237.18667603 71.78151703]
[246.66740417 59.42217636]
[261.75689697 57.48266983]
[273.48123169 66.59727478]
[288.33050537 64.47622681]
[297.81124878 52.11688614]
[312.90075684 50.17738342]
[324.62506104 59.29198456]
[339.47433472 57.17094040]
[354.32363892 55.04990005]
[369.17291260 52.92885590]
[381.74035645 43.31791306]
[395.43380737 49.17779922]
[410.28308105 47.05675507]
[422.85052490 37.44581604]
[436.54400635 43.30569839]
[451.39328003 41.18465424]
[457.18621826 27.02877045]
[469.20758057 17.73448563]
[484.16760254 15.71867371]
[498.03524780 21.42346764]
[507.12420654 33.22415543]
[521.97351074 31.10311127]
[536.81182861 28.90685272]
[551.63885498 26.63543701]
[566.46588135 24.36401939]
[581.29290771 22.09260368]
[596.03381348 13.71750355]
[608.16229248 25.56386185]
[600.13641357 40.49775696]
[583.56433105 36.91962814]
[568.73730469 39.19104385]
[553.91027832 41.46245956]
[539.08325195 43.73387909]
[532.97937012 47.83125305]
[524.09454346 45.95239258]
[509.24526978 48.07343674]
[503.82351685 61.94680405]
[492.10760498 71.30590820]
[477.18142700 73.55898285]
[463.03872681 68.00192261]
[453.51431274 56.03393936]
[438.66503906 58.15497971]
[427.15972900 67.61421204]
[412.40414429 61.90603638]
[397.55484009 64.02708435]
[386.04953003 73.48631287]
[371.29394531 67.77813721]
[356.44467163 69.89917755]
[341.59539795 72.02022552]
[326.74609375 74.14126587]
[318.04238892 86.17376709]
[303.01333618 88.53633881]
[290.45153809 79.32550812]
[275.60226440 81.44655609]
[266.89855957 93.47905731]
[251.86949158 95.84162903]
[239.30770874 86.63079834]
[224.45843506 88.75183868]
[209.60914612 90.87288666]
[194.77081299 93.06914520]
[179.94378662 95.34056091]
[165.11676025 97.61197662]
[164.38337708 110.03369141]
[161.30210876 122.08950806]
[155.98530579 133.33976746]
[148.62686157 143.37422180]
[139.49511719 151.82691956]
[128.92309570 158.38963318]
[133.98985291 172.50798035]
[139.05662537 186.62634277]
[144.12338257 200.74468994]
[149.19015503 214.86305237]
[154.25691223 228.98139954]
[159.32366943 243.09976196]
[164.39044189 257.21810913]
[169.45719910 271.33645630]
[188.07907104 279.00527954]
[194.87228394 297.63705444]
[185.84088135 314.94662476]
[191.33447266 328.90441895]
[196.82806396 342.86224365]
[202.32165527 356.82003784]
[207.88589478 370.74984741]
[213.52064514 384.65127563]
[219.15541077 398.55267334]
[224.79016113 412.45410156]
[230.42491150 426.35552979]
[244.70373535 432.58074951]
[250.22013855 446.75903320]
[244.19735718 460.33331299]
[249.83212280 474.23474121]
[263.98709106 481.78567505]
[266.76721191 497.58599854]
[256.03982544 509.51507568]
[240.03405762 508.42193604]
[231.02816772 495.14514160]
[235.93069458 479.86950684]
[230.29594421 465.96807861]
[216.52148438 460.41833496]
[210.60900879 446.40057373]
[216.52349854 431.99029541]
[210.88873291 418.08886719]
[205.25398254 404.18743896]
[199.61923218 390.28601074]
[193.98446655 376.38458252]
[188.58801270 371.39218140]
[188.36383057 362.31362915]
[182.87025452 348.35583496]
[177.37666321 334.39801025]
[171.88307190 320.44021606]
[161.80258179 319.05020142]
[153.12612915 313.58105469]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 273]
[4 272]
[5 271]
[6 270]
[7 269]
[8 268]
[9 267]
[10 266]
[11 265]
[16 169]
[17 168]
[18 167]
[19 166]
[20 165]
[21 164]
[24 160]
[25 159]
[26 157]
[27 156]
[28 155]
[30 153]
[31 152]
[32 151]
[34 150]
[35 149]
[36 148]
[39 147]
[40 146]
[42 144]
[43 143]
[48 139]
[49 138]
[50 137]
[51 134]
[52 133]
[53 132]
[55 130]
[56 129]
[57 128]
[58 117]
[59 116]
[60 115]
[61 114]
[62 113]
[63 112]
[72 108]
[73 107]
[75 106]
[76 105]
[77 104]
[78 103]
[79 102]
[80 101]
[81 100]
[82 99]
[85 94]
[86 93]
[191 259]
[192 258]
[193 257]
[195 256]
[196 255]
[197 254]
[200 251]
[201 250]
[204 247]
[205 246]
[206 245]
[207 244]
[209 242]
[210 241]
[212 239]
[213 238]
[218 233]
[219 232]
[220 230]
[221 229]
[222 228]
[223 227]
[276 307]
[277 306]
[278 305]
[279 304]
[280 302]
[281 301]
[282 300]
[283 299]
[284 298]
[287 295]
[288 294]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
