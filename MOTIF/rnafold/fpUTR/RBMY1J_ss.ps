%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:08:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAUUGGCCGCUGGAGGUAGGCGGGAUUUCCGGGCACGGCUUCCGGCGUCCUUCCCUCUCAGGGUAGCUCCAGCUGUCCCUCCCGCAGUUGGCCCUGUGGUGUUCCGAAGCCGGUUACGUACGCCUGAGGGCCAGGCGAACCUCAGGCUCUUUGUCCUACUAAAAAGCGCAGCACAA\
) } def
/len { sequence length } bind def

/coor [
[102.72959900 383.83682251]
[87.84941864 389.83346558]
[73.95487976 381.81341553]
[71.70468140 365.92895508]
[82.82498169 354.36529541]
[83.87715912 339.40225220]
[84.92934418 324.43917847]
[85.85018158 309.46746826]
[86.63960266 294.48825073]
[87.16602325 279.49749756]
[87.42926788 264.49981689]
[87.69252014 249.50212097]
[87.95576477 234.50444031]
[74.54404449 225.06164551]
[69.34136963 209.33122253]
[74.58183289 193.43844604]
[88.39194489 183.69638062]
[88.39194489 168.69638062]
[88.39194489 153.69638062]
[88.39194489 138.69638062]
[88.39194489 123.69638062]
[79.74642181 111.43853760]
[65.61634064 106.40455627]
[51.48626709 101.37058258]
[37.35618973 96.33660126]
[23.22611237 91.30262756]
[9.09603596 86.26864624]
[12.90944767 100.77581024]
[4.08986139 112.90902710]
[-10.88607788 113.75828552]
[-21.02081871 102.69994354]
[-18.87193489 87.85466003]
[-6.01864576 80.12416840]
[-19.65316582 73.87118530]
[-33.28768539 67.61819458]
[-42.42210007 66.87989044]
[-47.10513306 61.13396454]
[-60.62781143 54.64265442]
[-74.15049744 48.15134430]
[-87.67317200 41.66003799]
[-101.19585419 35.16872787]
[-114.71853638 28.67741966]
[-119.98094177 29.08325005]
[-124.41844940 27.56449127]
[-127.43201447 24.76457977]
[-128.76834106 21.47203445]
[-141.93064880 14.27804947]
[-157.75094604 14.44888687]
[-165.20816040 1.55551302]
[-178.37048340 -5.63847256]
[-188.94183350 -0.12409628]
[-200.74151611 -0.40832347]
[-210.82778931 -6.30415964]
[-216.74223328 -16.24007607]
[-217.10862732 -27.67715645]
[-230.01036072 -35.32863617]
[-242.91210938 -42.98011398]
[-255.81384277 -50.63159180]
[-272.52157593 -53.51055527]
[-274.38027954 -70.36230469]
[-258.70162964 -76.81340027]
[-248.16236877 -63.53332901]
[-235.26063538 -55.88185120]
[-222.35888672 -48.23037338]
[-209.45715332 -40.57889557]
[-192.05146790 -46.18140793]
[-175.78514099 -37.15334320]
[-171.17649841 -18.80078888]
[-158.01417542 -11.60680294]
[-143.13534546 -12.29220200]
[-134.73666382 1.11573350]
[-121.57435608 8.30971909]
[-108.22722626 15.15473843]
[-94.70455170 21.64604759]
[-81.18186951 28.13735580]
[-67.65918732 34.62866592]
[-54.13650513 41.11997223]
[-40.61382294 47.61128235]
[-27.03469849 53.98367691]
[-13.40017891 60.23666382]
[0.23434186 66.48964691]
[14.13001442 72.13857269]
[28.26008987 77.17254639]
[42.39016724 82.20652771]
[56.52024460 87.24050140]
[70.65032196 92.27448273]
[84.78039551 97.30845642]
[85.32910156 89.50947571]
[90.03837585 81.95088959]
[98.64170074 76.84424591]
[109.73109436 76.13198853]
[120.74816132 65.95239258]
[131.76522827 55.77280045]
[142.78230286 45.59320450]
[153.79937744 35.41361237]
[164.81645203 25.23401642]
[175.83352661 15.05442238]
[176.61700439 -0.50269473]
[187.93489075 -10.66930866]
[202.76139832 -9.82650089]
[213.77847290 -20.00609589]
[224.79554749 -30.18568993]
[235.81260681 -40.36528397]
[246.82968140 -50.54487991]
[251.74732971 -73.20623016]
[273.75921631 -77.62162781]
[283.84173584 -88.72760010]
[293.92425537 -99.83358002]
[296.86880493 -115.96620941]
[312.40124512 -121.22690582]
[324.54315186 -110.20391846]
[320.80395508 -94.23674774]
[305.03024292 -89.75105286]
[294.94769287 -78.64508057]
[284.86517334 -67.53910065]
[286.99331665 -60.68371582]
[286.59298706 -53.44841766]
[283.66693115 -46.74453735]
[278.53906250 -41.43305588]
[271.81912231 -38.21407318]
[264.33050537 -37.53475952]
[257.00927734 -39.52780914]
[245.99220276 -29.34821320]
[234.97514343 -19.16861916]
[223.95806885 -8.98902416]
[212.94099426 1.19057024]
[212.61141968 16.03735352]
[201.58355713 26.51785278]
[186.01310730 26.07149315]
[174.99604797 36.25108719]
[163.97897339 46.43068314]
[152.96189880 56.61027908]
[141.94482422 66.78987122]
[130.92776489 76.96946716]
[119.91069031 87.14906311]
[122.27020264 101.96231842]
[135.90472412 108.21530914]
[149.53924561 114.46829224]
[163.17376709 120.72128296]
[176.80828857 126.97427368]
[190.44281006 133.22726440]
[204.23719788 139.11917114]
[218.18191528 144.64593506]
[235.13449097 144.86091614]
[239.62086487 161.21049500]
[225.15217590 170.04754639]
[212.65515137 158.59065247]
[198.71043396 153.06388855]
[195.32394409 154.14010620]
[191.24452209 153.61143494]
[187.24058533 151.16879272]
[184.18981934 146.86178589]
[170.55529785 140.60879517]
[156.92077637 134.35580444]
[143.28625488 128.10281372]
[129.65173340 121.84983063]
[116.01721954 115.59683990]
[103.39194489 123.69638062]
[103.39194489 138.69638062]
[103.39194489 153.69638062]
[103.39194489 168.69638062]
[103.39194489 183.69638062]
[115.12757874 190.95719910]
[121.68437195 202.97694397]
[121.44018555 216.55822754]
[114.56607056 228.14813232]
[102.95345306 234.76768494]
[102.69020844 249.76538086]
[102.42695618 264.76306152]
[102.16371155 279.76074219]
[105.04965210 285.76132202]
[104.52851868 291.45721436]
[101.61882019 295.27767944]
[100.82939911 310.25689697]
[103.50861359 319.02072144]
[99.89239502 325.49136353]
[98.84021759 340.45440674]
[97.78803253 355.41748047]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 178]
[6 177]
[7 176]
[8 174]
[9 173]
[10 170]
[11 169]
[12 168]
[13 167]
[17 162]
[18 161]
[19 160]
[20 159]
[21 158]
[22 87]
[23 86]
[24 85]
[25 84]
[26 83]
[27 82]
[33 81]
[34 80]
[35 79]
[37 78]
[38 77]
[39 76]
[40 75]
[41 74]
[42 73]
[46 72]
[47 71]
[49 69]
[50 68]
[55 65]
[56 64]
[57 63]
[58 62]
[91 135]
[92 134]
[93 133]
[94 132]
[95 131]
[96 130]
[97 129]
[100 126]
[101 125]
[102 124]
[103 123]
[104 122]
[106 115]
[107 114]
[108 113]
[136 157]
[137 156]
[138 155]
[139 154]
[140 153]
[141 152]
[142 148]
[143 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
