%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:04:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUCUCAGCCUCCUUAGUAGCUGGGAUUACAGGCAUGUGCCACCAUACCCUGCUAAUUUUCGUAUUUUUAGUAGAGAUGGGGUUUUGCCACAUUGGCCAGGCUGACAGGUGAUCCACCCGCCUUGGCCUUCCAAAGUGCUGGGAUGACAGAUGUGACCAAAAGCCAGCCCCACUGUGAGUUGAACUCUUUCGUGUUGACCGGCCACUCUCCGUGCUCUGG\
) } def
/len { sequence length } bind def

/coor [
[66.47180176 250.99790955]
[59.02076721 260.75286865]
[48.19469452 266.38378906]
[36.07398987 266.87768555]
[29.70266914 280.45733643]
[23.33134842 294.03695679]
[16.96002960 307.61657715]
[10.58870888 321.19619751]
[4.21738958 334.77584839]
[-2.15393043 348.35546875]
[6.69158554 360.91143799]
[8.05805779 376.20941162]
[1.57791293 390.13433838]
[-11.00572300 398.94046021]
[-26.30791473 400.25897217]
[-40.21245193 393.73519897]
[-48.97908020 381.12402344]
[-50.24962234 365.81777954]
[-43.68230820 351.93374634]
[-31.04371452 343.20669556]
[-15.73355770 341.98413086]
[-9.36223793 328.40451050]
[-2.99091816 314.82489014]
[3.38040161 301.24526978]
[9.75172138 287.66561890]
[16.12304115 274.08599854]
[22.49436188 260.50637817]
[13.25933743 245.44618225]
[14.93425846 227.70147705]
[27.03593254 214.40245056]
[44.85356903 211.00677490]
[50.83805084 197.25228882]
[56.82253265 183.49780273]
[62.70954132 169.70130920]
[68.49878693 155.86351013]
[74.28802490 142.02571106]
[80.07727051 128.18791199]
[85.86651611 114.35012054]
[82.39555359 107.70162964]
[70.68082428 117.06992340]
[58.96609116 126.43822479]
[51.32952881 139.34880066]
[37.12856674 144.17918396]
[23.20369720 138.60263062]
[16.26242638 125.30530548]
[19.64830971 110.69243622]
[31.73039627 101.80294037]
[46.68692780 102.91793823]
[61.07028580 98.66128540]
[75.45364380 94.40464020]
[71.98268127 87.75614929]
[57.31935501 84.59596252]
[42.65602875 81.43576813]
[27.99269867 78.27558136]
[13.32936954 75.11539459]
[-1.33395875 71.95520020]
[-15.99728775 68.79501343]
[-25.75661850 80.58543396]
[-39.88182831 86.47924805]
[-55.12704849 85.12210083]
[-67.98903656 76.82584381]
[-75.51220703 63.49691010]
[-75.96778107 48.19818115]
[-69.25108337 34.44520187]
[-56.90555191 25.39829636]
[-41.76810455 23.13638496]
[-27.31721306 28.17923355]
[-16.87358856 39.36803436]
[-12.83709812 54.13168335]
[1.82623029 57.29187393]
[16.48955917 60.45206451]
[31.15288734 63.61225128]
[45.81621552 66.77243805]
[60.47954559 69.93263245]
[75.14287567 73.09281921]
[88.48864746 66.24516296]
[94.47312164 52.49067307]
[95.02599335 43.38125229]
[100.64083862 38.58483124]
[106.81935883 24.91640472]
[112.99787903 11.24797726]
[119.17639160 -2.42044997]
[125.35491180 -16.08887672]
[131.53343201 -29.75730515]
[137.22462463 -43.63571930]
[142.42135620 -57.70675278]
[147.61808777 -71.77778625]
[152.81481934 -85.84881592]
[149.28514099 -103.92531586]
[163.21711731 -114.60179901]
[168.21420288 -128.74496460]
[173.21130371 -142.88812256]
[178.20840454 -157.03128052]
[183.20550537 -171.17443848]
[188.20259094 -185.31761169]
[174.20739746 -216.21356201]
[174.84400940 -231.20005798]
[175.48063660 -246.18653870]
[176.11724854 -261.17303467]
[176.75387573 -276.15951538]
[177.28443909 -291.15011597]
[177.70892334 -306.14410400]
[178.13340759 -321.13809204]
[171.38964844 -326.02770996]
[167.17112732 -333.10125732]
[166.09909058 -341.17248535]
[168.27421570 -348.92123413]
[173.27207947 -355.10943604]
[180.22358704 -358.77880859]
[181.49568176 -373.72479248]
[182.76776123 -388.67074585]
[184.03985596 -403.61669922]
[179.35855103 -419.91156006]
[193.72065735 -428.92077637]
[206.35362244 -417.61392212]
[198.98580933 -402.34463501]
[197.71372986 -387.39865112]
[196.44163513 -372.45269775]
[195.16954041 -357.50674438]
[206.22773743 -338.89855957]
[193.12739563 -320.71362305]
[192.70291138 -305.71963501]
[192.27842712 -290.72564697]
[195.22879028 -283.95602417]
[191.74035645 -275.52288818]
[191.10374451 -260.53640747]
[190.46711731 -245.54991150]
[189.83050537 -230.56343079]
[189.19387817 -215.57695007]
[203.03167725 -209.78770447]
[213.25648499 -220.76283264]
[223.48127747 -231.73796082]
[233.70608521 -242.71308899]
[243.93087769 -253.68823242]
[243.12145996 -269.47177124]
[253.77165222 -281.14862061]
[269.56286621 -281.79113770]
[281.12646484 -271.01809692]
[281.60198975 -255.22096252]
[270.70727539 -243.77189636]
[254.90600586 -243.46342468]
[244.68121338 -232.48829651]
[234.45640564 -221.51316833]
[224.23161316 -210.53804016]
[214.00680542 -199.56291199]
[228.99525452 -198.97402954]
[238.66976929 -187.51087952]
[236.73173523 -172.63661194]
[224.44290161 -164.03517151]
[209.80398560 -167.30656433]
[202.34576416 -180.32051086]
[197.34866333 -166.17735291]
[192.35156250 -152.03417969]
[187.35446167 -137.89102173]
[182.35737610 -123.74786377]
[177.36027527 -109.60470581]
[182.29025269 -98.56388855]
[178.24906921 -86.74341583]
[166.88584900 -80.65208435]
[161.68911743 -66.58104706]
[156.49238586 -52.51001740]
[151.29565430 -38.43898392]
[165.79223633 -42.29245377]
[177.92951965 -33.47848511]
[178.75128174 -18.50101280]
[167.65112305 -8.41209030]
[152.81997681 -10.65645504]
[145.20185852 -23.57878494]
[139.02334595 -9.91035843]
[132.84481812 3.75806880]
[126.66630554 17.42649651]
[120.48778534 31.09492302]
[114.30926514 44.76335144]
[108.22761536 58.47515106]
[102.24313354 72.22964478]
[138.63999939 101.79874420]
[150.03919983 111.54853058]
[161.43838501 121.29832458]
[169.98661804 124.49440765]
[172.92863464 131.26763916]
[184.18872070 141.17774963]
[195.44880676 151.08787537]
[206.70889282 160.99800110]
[218.17678833 170.66688538]
[229.84732056 180.09017944]
[241.51786804 189.51348877]
[256.46490479 185.34628296]
[270.99496460 190.79214478]
[279.52090454 203.75700378]
[278.76434326 219.25563049]
[269.01620483 231.32847595]
[254.02485657 235.33328247]
[239.55473328 229.73011780]
[231.16992188 216.67352295]
[232.09455872 201.18402100]
[220.42402649 191.76072693]
[208.75349426 182.33741760]
[205.23512268 182.34194946]
[201.53916931 180.64756775]
[198.46188354 177.18899536]
[196.79876709 172.25807190]
[185.53869629 162.34796143]
[174.27861023 152.43783569]
[163.01852417 142.52770996]
[151.68859863 132.69750977]
[140.28939819 122.94772339]
[128.89021301 113.19793701]
[121.59373474 114.93329620]
[125.06420898 129.52630615]
[110.47113800 132.99652100]
[107.00078583 118.40400696]
[99.70431519 120.13935852]
[93.91506958 133.97715759]
[88.12582397 147.81495667]
[82.33657837 161.65275574]
[76.54734039 175.49055481]
[76.12342834 184.60688782]
[70.57701874 189.48228455]
[64.59254456 203.23677063]
[58.60805893 216.99125671]
[66.30994415 226.82582092]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 27]
[5 26]
[6 25]
[7 24]
[8 23]
[9 22]
[10 21]
[31 220]
[32 219]
[33 218]
[34 216]
[35 215]
[36 214]
[37 213]
[38 212]
[51 75]
[52 74]
[53 73]
[54 72]
[55 71]
[56 70]
[57 69]
[76 175]
[77 174]
[79 173]
[80 172]
[81 171]
[82 170]
[83 169]
[84 168]
[85 162]
[86 161]
[87 160]
[88 159]
[90 156]
[91 155]
[92 154]
[93 153]
[94 152]
[95 151]
[96 129]
[97 128]
[98 127]
[99 126]
[100 125]
[101 123]
[102 122]
[103 121]
[109 119]
[110 118]
[111 117]
[112 116]
[130 145]
[131 144]
[132 143]
[133 142]
[134 141]
[176 207]
[177 206]
[178 205]
[180 204]
[181 203]
[182 202]
[183 201]
[184 197]
[185 196]
[186 195]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
