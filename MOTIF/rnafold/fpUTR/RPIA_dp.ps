%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:04:38 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RPIA)
} def

/sequence { (\
CGGGGGCGGGACUUCAGCGGAGGCCGGAGCGAGGCGUCGGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.160988610 ubox
1 19 0.135419778 ubox
1 26 0.019992445 ubox
1 31 0.025310902 ubox
1 36 0.025629551 ubox
1 39 0.310890943 ubox
2 7 0.162562031 ubox
2 13 0.035448445 ubox
2 14 0.035463402 ubox
2 15 0.600643943 ubox
2 18 0.130890088 ubox
2 25 0.020337376 ubox
2 30 0.025954893 ubox
2 35 0.026653639 ubox
2 38 0.275753378 ubox
3 12 0.038257302 ubox
3 13 0.047319308 ubox
3 14 0.603923894 ubox
3 15 0.167919601 ubox
3 24 0.020321927 ubox
3 37 0.222763320 ubox
3 38 0.600280361 ubox
4 12 0.049491468 ubox
4 13 0.606765441 ubox
4 14 0.168496744 ubox
4 15 0.056046471 ubox
4 37 0.614733489 ubox
4 38 0.054524699 ubox
5 12 0.607760663 ubox
5 13 0.169020311 ubox
5 14 0.053877663 ubox
5 15 0.045766753 ubox
5 25 0.015127585 ubox
5 37 0.048876724 ubox
5 38 0.248051846 ubox
6 12 0.169228487 ubox
6 13 0.041780250 ubox
6 14 0.038905051 ubox
6 18 0.183463832 ubox
6 24 0.015317785 ubox
6 30 0.033940973 ubox
6 35 0.666277725 ubox
6 37 0.250157843 ubox
7 17 0.183429208 ubox
7 19 0.046518150 ubox
7 23 0.015367160 ubox
7 26 0.044349809 ubox
7 29 0.033904296 ubox
7 31 0.019129602 ubox
7 34 0.666145961 ubox
7 36 0.250772103 ubox
7 39 0.042427466 ubox
8 14 0.005580849 ubox
8 15 0.080563701 ubox
8 18 0.046931310 ubox
8 25 0.044533975 ubox
8 30 0.022297517 ubox
8 35 0.250056558 ubox
8 38 0.042907929 ubox
9 13 0.005281268 ubox
9 14 0.064599564 ubox
9 15 0.105196044 ubox
9 24 0.043589698 ubox
9 25 0.065516571 ubox
9 37 0.042452249 ubox
10 14 0.069446382 ubox
10 24 0.066519220 ubox
10 38 0.013161508 ubox
11 37 0.013128935 ubox
12 20 0.005622303 ubox
12 22 0.083504135 ubox
12 23 0.155931763 ubox
12 27 0.003338479 ubox
12 29 0.705745307 ubox
12 33 0.024739527 ubox
12 34 0.072029033 ubox
12 36 0.012441050 ubox
12 40 0.010569244 ubox
12 41 0.010171246 ubox
13 19 0.005639416 ubox
13 21 0.083488548 ubox
13 22 0.156819884 ubox
13 26 0.003266459 ubox
13 28 0.708077389 ubox
13 29 0.040341433 ubox
13 32 0.024341329 ubox
13 33 0.072277094 ubox
13 39 0.010282169 ubox
13 40 0.010043089 ubox
13 41 0.005726637 ubox
14 20 0.082984744 ubox
14 21 0.157403805 ubox
14 23 0.005440677 ubox
14 27 0.707723374 ubox
14 28 0.048150104 ubox
14 31 0.022591244 ubox
14 32 0.072535764 ubox
14 34 0.006175589 ubox
14 39 0.008824330 ubox
14 40 0.010753425 ubox
14 41 0.006066901 ubox
15 19 0.080370630 ubox
15 20 0.157376005 ubox
15 22 0.007792665 ubox
15 26 0.704960420 ubox
15 27 0.050584101 ubox
15 31 0.072454843 ubox
15 33 0.006358842 ubox
15 39 0.012771486 ubox
15 40 0.010362975 ubox
17 24 0.710248005 ubox
17 30 0.047718227 ubox
17 35 0.007521375 ubox
17 37 0.010198649 ubox
18 23 0.710881619 ubox
18 26 0.066866904 ubox
18 29 0.047046742 ubox
18 34 0.007529497 ubox
18 36 0.010511926 ubox
18 39 0.244416493 ubox
19 25 0.070532983 ubox
19 35 0.009764678 ubox
19 38 0.193222093 ubox
20 24 0.069401774 ubox
20 37 0.111568113 ubox
20 38 0.621470523 ubox
21 37 0.639546673 ubox
23 30 0.013047176 ubox
23 35 0.652243441 ubox
24 29 0.013014675 ubox
24 34 0.652392585 ubox
24 40 0.233026975 ubox
24 41 0.023140888 ubox
25 31 0.009146034 ubox
25 33 0.652238483 ubox
25 39 0.235900887 ubox
25 40 0.024658374 ubox
26 30 0.019416021 ubox
26 35 0.004243867 ubox
26 38 0.237260854 ubox
27 37 0.230612556 ubox
27 38 0.033511678 ubox
28 37 0.032540195 ubox
29 35 0.238282282 ubox
29 37 0.020314860 ubox
30 34 0.236585540 ubox
30 36 0.025806519 ubox
30 39 0.070149873 ubox
31 35 0.024237868 ubox
31 38 0.071544695 ubox
32 37 0.069701500 ubox
3 38 0.9500000 lbox
4 37 0.9500000 lbox
6 35 0.9500000 lbox
7 34 0.9500000 lbox
12 29 0.9500000 lbox
13 28 0.9500000 lbox
14 27 0.9500000 lbox
15 26 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
showpage
end
%%EOF
