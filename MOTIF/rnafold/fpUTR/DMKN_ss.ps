%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:07:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGGACUCUGAGAAGCCCAGGCAGUUGAGGACAGGAGAGAGAAGGCUGCAGACCCAGAGGGAGGGAGGACAGGGAGUCGGAAGGAGGAGGACAGAGGAGGGCACAGAGACGCAGAGCAAGGGCGGCAAGGAGGAGACCCUGGUGGGAGGAAGACACUCUGGAGAGAGAGGGGGCUGGGCAGAG\
) } def
/len { sequence length } bind def

/coor [
[96.59391785 362.84786987]
[84.56041718 373.09335327]
[68.81368256 371.74578857]
[58.69597626 359.60464478]
[60.20994949 343.87304688]
[72.45738983 333.88427734]
[73.73637390 318.93890381]
[75.01535797 303.99353027]
[76.29434204 289.04815674]
[77.57333374 274.10278320]
[66.21159363 264.50854492]
[62.63564682 249.89086914]
[68.42044067 235.80578613]
[81.54141235 227.73446655]
[82.82039642 212.78909302]
[84.09938049 197.84371948]
[85.37836456 182.89834595]
[86.65734863 167.95297241]
[67.31882477 161.05384827]
[50.85325241 148.78759766]
[38.70808792 132.23249817]
[24.75391388 137.73530579]
[10.79973602 143.23812866]
[-3.15444016 148.74093628]
[-17.10861588 154.24374390]
[-31.06279373 159.74656677]
[-30.36149597 174.87226868]
[-34.61189651 189.40542603]
[-43.35294724 201.76959229]
[-55.63648224 210.62361145]
[-70.13008118 215.00703430]
[-85.26157379 214.44441223]
[-99.38961792 208.99674988]
[-110.98171234 199.25497437]
[-118.78042603 186.27580261]
[-121.93981934 171.46713257]
[-120.11717224 156.43527222]
[-113.51020813 142.81077576]
[-102.83559418 132.07153320]
[-89.25122833 125.38246155]
[-74.23065186 123.46912384]
[-59.40317154 126.53907013]
[-46.37717056 134.25930786]
[-36.56560516 145.79238892]
[-22.61142921 140.28956604]
[-8.65725327 134.78675842]
[5.29692316 129.28395081]
[19.25110054 123.78113556]
[33.20527649 118.27832031]
[31.21875763 108.04814148]
[30.78986931 97.63571167]
[31.92832756 87.27681732]
[34.60834885 77.20606232]
[21.06222534 70.76380920]
[7.51610518 64.32155609]
[-6.62992907 70.98667145]
[-21.73740768 66.94957733]
[-30.67304230 54.11648178]
[-29.21769905 38.54676819]
[-18.05854607 27.59198189]
[-2.46459484 26.42463875]
[10.20116806 35.59592438]
[13.95835686 50.77543640]
[27.50447845 57.21768570]
[41.05059814 63.65993881]
[53.09123993 49.05689240]
[68.63588715 38.25921631]
[86.52338409 32.07347488]
[105.41755676 30.96173477]
[123.90705109 35.00704193]
[130.57963562 21.57288170]
[137.25222778 8.13872433]
[143.92480469 -5.29543304]
[150.59739685 -18.72959137]
[134.58882141 -25.53907967]
[124.73249054 -45.71306992]
[120.68553925 -60.15682983]
[116.63858795 -74.60058594]
[101.65660095 -77.73086548]
[89.85279846 -87.47400665]
[83.93961334 -101.59111786]
[85.27584076 -116.83818054]
[93.55444336 -129.71154785]
[106.87303925 -137.25299072]
[122.17112732 -137.72956848]
[135.93331909 -131.03173828]
[144.99714661 -118.69863892]
[147.27983093 -103.56430817]
[142.25680542 -89.10650635]
[131.08235168 -78.64753723]
[135.12930298 -64.20378113]
[139.17625427 -49.76002121]
[146.36253357 -47.61354065]
[149.73570251 -62.22934341]
[153.10887146 -76.84514618]
[156.48205566 -91.46095276]
[159.85522461 -106.07675171]
[163.22839355 -120.69255829]
[160.66783142 -135.47239685]
[169.64396667 -147.49026489]
[184.54277039 -149.22972107]
[196.04595947 -139.60284424]
[196.95899963 -124.63065338]
[186.71247864 -113.67806244]
[181.51699829 -99.60656738]
[176.32153320 -85.53507233]
[171.12605286 -71.46357727]
[165.93057251 -57.39207840]
[160.73509216 -43.32057953]
[167.92137146 -41.17409897]
[179.22706604 -51.03215408]
[190.53276062 -60.89020920]
[188.18814087 -76.13836670]
[194.48036194 -90.22422791]
[207.40161133 -98.65304565]
[222.82875061 -98.73521423]
[235.83905029 -90.44451141]
[242.28096008 -76.42647552]
[240.09890747 -61.15420914]
[229.98915100 -49.50103378]
[215.17768860 -45.18544006]
[200.39082336 -49.58451462]
[189.08512878 -39.72645950]
[177.77943420 -29.86840630]
[191.76951599 -35.27925873]
[206.73896790 -34.32249451]
[219.92637634 -27.17460251]
[228.89906311 -15.15415764]
[232.00181580 -0.47856930]
[228.66229248 14.14495850]
[219.49652100 26.01882362]
[206.19531250 32.95265579]
[191.21235657 33.66737366]
[177.31153870 28.03112984]
[167.05714417 17.08364487]
[162.34080505 2.84439707]
[164.03155518 -12.05700493]
[157.35896301 1.37715316]
[150.68638611 14.81131077]
[144.01379395 28.24546814]
[137.34121704 41.67962646]
[143.80233765 46.36244583]
[149.68186951 51.75744629]
[154.90173340 57.79299927]
[159.39263916 64.38896179]
[163.09495544 71.45775604]
[165.95950317 78.90553284]
[167.94825745 86.63338470]
[169.03482056 94.53871918]
[169.20475769 102.51657104]
[168.45582581 110.46100616]
[166.79794312 118.26654053]
[164.25314331 125.82953644]
[160.85520935 133.04957581]
[156.64926147 139.83079529]
[151.69114685 146.08316040]
[161.74078369 157.21890259]
[171.79042053 168.35464478]
[181.84007263 179.49038696]
[197.63447571 180.04913330]
[208.34642029 191.66937256]
[207.62071228 207.45698547]
[195.88787842 218.04548645]
[180.10881042 217.15289307]
[169.64495850 205.30876160]
[170.70433044 189.54002380]
[160.65469360 178.40428162]
[150.60504150 167.26853943]
[140.55540466 156.13279724]
[122.07315063 165.63845825]
[101.60272217 169.23194885]
[100.32373810 184.17732239]
[99.04475403 199.12269592]
[97.76576996 214.06806946]
[96.48678589 229.01344299]
[108.04556274 239.19680786]
[111.35304260 254.05998230]
[105.34539032 267.85751343]
[92.51870728 275.38174438]
[91.23972321 290.32711792]
[89.96073151 305.27249146]
[88.68174744 320.21786499]
[87.40276337 335.16323853]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 183]
[7 182]
[8 181]
[9 180]
[10 179]
[14 175]
[15 174]
[16 173]
[17 172]
[18 171]
[21 49]
[22 48]
[23 47]
[24 46]
[25 45]
[26 44]
[53 65]
[54 64]
[55 63]
[70 141]
[71 140]
[72 139]
[73 138]
[74 137]
[76 92]
[77 91]
[78 90]
[110 124]
[111 123]
[112 122]
[156 169]
[157 168]
[158 167]
[159 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
