%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:27:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGCUGCGAGGCCCGAGAGUCAGAACCUGGGGGAGAGGGAUGGUCUCUGCACGGGGGGGAGCCGGAGGAGCCGCCGCCGCUGCCGACGCCACCGCCGCAGCCGCCGCCGCCGCCGCCCCGGCACCCGCCUCCCGGCGCUGACGGUCUCGUACGAAGCCGGCGAGGGGGAGCCAGCAGCGGCGGUCGCCGGCACGCCGCCCAGC\
) } def
/len { sequence length } bind def

/coor [
[135.29835510 202.27088928]
[118.91654205 201.51721191]
[111.61965942 186.83090210]
[120.91412354 173.31999207]
[121.60350037 158.33583069]
[122.29286957 143.35168457]
[122.98224640 128.36753845]
[116.00469971 125.61728668]
[115.08576202 140.58911133]
[100.56273651 144.34167480]
[92.50599670 131.68905640]
[102.04960632 120.11679840]
[95.07205963 117.36655426]
[85.35221100 128.79129028]
[75.63235474 140.21601868]
[72.58308411 155.74060059]
[58.44282913 160.42060852]
[48.72297668 171.84533691]
[45.54349899 180.41375732]
[38.76557541 183.36918640]
[28.87178993 194.64363098]
[26.19973946 210.82362366]
[10.75821781 216.34552002]
[-1.56786168 205.52888489]
[1.90151536 189.50093079]
[17.59735107 184.74984741]
[27.49113846 173.47540283]
[37.29824448 162.12548828]
[47.01810074 150.70075989]
[49.37214279 135.99334717]
[64.20762634 130.49617004]
[73.92747498 119.07143402]
[83.64733124 107.64670563]
[82.16302490 100.29505157]
[69.09660339 107.66178131]
[58.05281067 97.51118469]
[64.29404449 83.87128448]
[79.19440460 85.59173584]
[77.71009827 78.24008179]
[64.31900787 71.48148346]
[55.24303055 70.40749359]
[50.77568436 64.51532745]
[37.48973846 57.55230713]
[24.20379066 50.58929062]
[10.91784477 43.62627029]
[-4.89704275 44.07337189]
[-12.57830238 31.31220055]
[-25.86425018 24.34918213]
[-41.67913818 24.79628372]
[-49.36039734 12.03511143]
[-62.64634323 5.07209349]
[-75.93228912 -1.89092422]
[-89.27120209 -8.75193596]
[-102.66229248 -15.51053905]
[-116.05338287 -22.26914215]
[-129.49586487 -28.92494011]
[-142.98895264 -35.47754288]
[-158.78271484 -34.54600525]
[-166.85142517 -47.06579208]
[-180.34451294 -53.61839294]
[-195.11837769 -48.68170929]
[-208.70893860 -55.51919556]
[-213.32426453 -69.63423157]
[-226.81735229 -76.18683624]
[-243.70655823 -77.66708374]
[-246.95954895 -94.30602264]
[-231.87138367 -102.03800964]
[-220.26475525 -89.67992401]
[-206.77166748 -83.12731934]
[-192.82467651 -88.22801208]
[-179.04742432 -81.77495575]
[-173.79191589 -67.11148071]
[-160.29882812 -60.55887985]
[-145.47018433 -61.95910263]
[-136.43635559 -48.97063065]
[-122.94326019 -42.41802597]
[-115.54962158 -42.32384872]
[-109.29477692 -35.66023254]
[-95.90368652 -28.90162849]
[-82.51259613 -22.14302635]
[-75.12126923 -21.93555641]
[-68.96927643 -15.17687130]
[-55.68332672 -8.21385288]
[-42.39738083 -1.25083530]
[-27.53279114 -2.19597793]
[-18.90123177 11.06323624]
[-5.61528492 18.02625275]
[9.24930286 17.08111191]
[17.88086319 30.34032440]
[31.16680908 37.30334091]
[44.45275497 44.26636124]
[57.73870468 51.22937775]
[71.07761383 58.09038925]
[84.46870422 64.84899139]
[99.34162140 66.79738617]
[114.02175140 63.71619797]
[125.93830109 53.30916214]
[139.98350525 58.26712418]
[154.66365051 55.18593597]
[168.08764648 42.58446884]
[184.53787231 48.69067001]
[199.16906738 45.38488007]
[213.80026245 42.07909012]
[228.43144226 38.77330017]
[240.18711853 28.18487358]
[254.30665588 32.92702103]
[268.93783569 29.62123108]
[283.54327393 26.20342827]
[298.12210083 22.67381477]
[312.70089722 19.14419937]
[327.27972412 15.61458588]
[341.85852051 12.08497143]
[356.43734741 8.55535793]
[371.01617432 5.02574348]
[382.60818481 -5.74158669]
[396.79873657 -1.21636617]
[411.37756348 -4.74598026]
[416.50012207 -14.34797764]
[425.86996460 -19.43846321]
[436.27560425 -18.54765511]
[444.29895020 -12.21063995]
[458.97909546 -15.29183102]
[473.65921021 -18.37302017]
[485.57577515 -28.78005791]
[499.62097168 -23.82209396]
[514.30108643 -26.90328407]
[528.98126221 -29.98447609]
[536.74145508 -34.81207657]
[543.90985107 -32.99858475]
[558.63549805 -35.85445023]
[573.36114502 -38.71031570]
[588.08673096 -41.56618500]
[602.79003906 -44.53480148]
[617.47021484 -47.61598969]
[632.15032959 -50.69718170]
[646.83044434 -53.77836990]
[661.51055908 -56.85956192]
[670.16839600 -69.80867767]
[685.10003662 -72.72431946]
[697.39172363 -64.39059448]
[712.07183838 -67.47178650]
[726.72790527 -70.66536713]
[741.35913086 -73.97116089]
[755.99029541 -77.27694702]
[767.66241455 -88.79624939]
[783.40057373 -84.18726349]
[787.01470947 -68.19132996]
[774.78692627 -57.26368332]
[759.29608154 -62.64575958]
[744.66491699 -59.33996964]
[730.03369141 -56.03417587]
[724.19940186 -51.49155807]
[715.15301514 -52.79165268]
[700.47290039 -49.71046066]
[692.56921387 -37.13797379]
[677.72534180 -33.80408096]
[664.59179688 -42.17942810]
[649.91162109 -39.09823990]
[635.23150635 -36.01704788]
[620.55139160 -32.93585968]
[605.87127686 -29.85466766]
[599.96801758 -25.40198898]
[590.94262695 -26.84055901]
[576.21697998 -23.98469162]
[561.49139404 -21.12882614]
[546.76574707 -18.27295876]
[532.06243896 -15.30434322]
[517.38232422 -12.22315311]
[502.70217896 -9.14196301]
[491.83563232 1.04468608]
[476.74041748 -3.69288921]
[462.06027222 -0.61169893]
[447.38015747 2.46949148]
[433.96548462 16.39167786]
[414.90716553 9.83283424]
[400.32836914 13.36244774]
[389.77908325 23.87731552]
[374.54577637 19.60455704]
[359.96694946 23.13417244]
[345.38815308 26.66378593]
[330.80932617 30.19339943]
[316.23052979 33.72301483]
[301.65170288 37.25262833]
[287.07287598 40.78224182]
[281.30886841 45.41373444]
[272.24362183 44.25242233]
[257.61245728 47.55821228]
[246.90328979 57.91018677]
[231.73724365 53.40449142]
[217.10604858 56.71028137]
[202.47485352 60.01607132]
[187.84365845 63.32186127]
[181.12017822 73.38136292]
[168.95413208 76.25314331]
[157.74482727 69.86606598]
[143.06469727 72.94725800]
[132.19818115 83.13390350]
[117.10294342 78.39633179]
[102.42281342 81.47752380]
[130.70095825 87.24562836]
[137.96640015 129.05691528]
[137.27702332 144.04106140]
[136.58764648 159.02520752]
[135.89826965 174.00935364]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 204]
[5 203]
[6 202]
[7 201]
[13 33]
[14 32]
[15 31]
[17 29]
[18 28]
[20 27]
[21 26]
[39 94]
[40 93]
[42 92]
[43 91]
[44 90]
[45 89]
[47 87]
[48 86]
[50 84]
[51 83]
[52 82]
[53 80]
[54 79]
[55 78]
[56 76]
[57 75]
[59 73]
[60 72]
[63 69]
[64 68]
[95 199]
[96 198]
[98 196]
[99 195]
[101 192]
[102 191]
[103 190]
[104 189]
[106 187]
[107 186]
[108 184]
[109 183]
[110 182]
[111 181]
[112 180]
[113 179]
[114 178]
[116 176]
[117 175]
[121 173]
[122 172]
[123 171]
[125 169]
[126 168]
[127 167]
[129 166]
[130 165]
[131 164]
[132 163]
[133 161]
[134 160]
[135 159]
[136 158]
[137 157]
[140 154]
[141 153]
[142 151]
[143 150]
[144 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
