%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:34:30 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CPNE5)
} def

/sequence { (\
AGUCGCUCCGGAGGAGGCGUGAAUCGCGCAGGGAUUGACUAAUUUGGGGUGGGGGGUGCGGUGGGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 40 0.027452542 ubox
2 18 0.053555830 ubox
2 20 0.016663611 ubox
2 24 0.010629438 ubox
2 39 0.029079125 ubox
2 57 0.011909734 ubox
2 59 0.020512053 ubox
2 66 0.049654130 ubox
3 11 0.004659716 ubox
3 12 0.009065253 ubox
3 14 0.003710323 ubox
3 15 0.006529944 ubox
3 17 0.052642384 ubox
3 19 0.004913258 ubox
3 22 0.214071916 ubox
3 23 0.008260491 ubox
3 38 0.029095931 ubox
3 52 0.725471662 ubox
3 53 0.048839444 ubox
3 54 0.022656440 ubox
3 55 0.016707048 ubox
3 56 0.012597583 ubox
3 58 0.016802517 ubox
3 61 0.006780355 ubox
3 64 0.004117479 ubox
3 65 0.048667512 ubox
4 10 0.005936734 ubox
4 11 0.009678782 ubox
4 13 0.004731885 ubox
4 14 0.006971786 ubox
4 16 0.034965326 ubox
4 19 0.088034747 ubox
4 21 0.229146811 ubox
4 37 0.029099284 ubox
4 51 0.922571372 ubox
4 52 0.045291597 ubox
4 53 0.021304132 ubox
4 54 0.016239117 ubox
4 55 0.014269424 ubox
4 58 0.011506940 ubox
4 60 0.009107800 ubox
4 63 0.005222549 ubox
4 64 0.045239796 ubox
4 67 0.022801279 ubox
5 9 0.005595106 ubox
5 18 0.128705345 ubox
5 20 0.229562148 ubox
5 36 0.027321942 ubox
5 50 0.926327508 ubox
5 57 0.013265226 ubox
5 59 0.009141853 ubox
5 62 0.003827040 ubox
5 66 0.024621268 ubox
6 13 0.009878134 ubox
6 14 0.020593037 ubox
6 16 0.272475553 ubox
6 17 0.097021045 ubox
6 19 0.229459135 ubox
6 49 0.927004814 ubox
6 52 0.006557809 ubox
6 53 0.005393172 ubox
6 54 0.012028635 ubox
6 55 0.004053758 ubox
6 56 0.013402160 ubox
6 58 0.008913013 ubox
6 61 0.003612848 ubox
6 65 0.024491399 ubox
7 12 0.009217644 ubox
7 13 0.019313786 ubox
7 14 0.005374498 ubox
7 15 0.287688430 ubox
7 16 0.045583331 ubox
7 22 0.004332107 ubox
7 34 0.026696253 ubox
7 48 0.926104525 ubox
7 49 0.004504687 ubox
7 51 0.005535778 ubox
7 52 0.004050415 ubox
7 53 0.012260910 ubox
7 54 0.004177519 ubox
7 55 0.013399956 ubox
7 56 0.004718049 ubox
7 64 0.021237407 ubox
8 13 0.008126904 ubox
8 14 0.290936210 ubox
8 16 0.004341560 ubox
8 17 0.229678780 ubox
8 21 0.005167153 ubox
8 33 0.026904601 ubox
8 47 0.926686967 ubox
8 48 0.025372519 ubox
8 52 0.012669554 ubox
8 53 0.004201276 ubox
8 54 0.013366913 ubox
8 55 0.005020710 ubox
8 56 0.006017011 ubox
8 61 0.004675383 ubox
8 63 0.019374728 ubox
8 64 0.011225852 ubox
9 13 0.288828007 ubox
9 16 0.229821176 ubox
9 19 0.014596742 ubox
9 32 0.026891852 ubox
9 46 0.926669986 ubox
9 47 0.025435034 ubox
9 51 0.012688663 ubox
9 52 0.004203864 ubox
9 53 0.013326252 ubox
9 54 0.005016047 ubox
9 55 0.006009839 ubox
9 60 0.004887143 ubox
9 63 0.011246882 ubox
10 18 0.015560092 ubox
10 40 0.005984431 ubox
10 44 0.006294837 ubox
10 45 0.921195313 ubox
10 50 0.012298724 ubox
10 59 0.004419150 ubox
10 62 0.007964588 ubox
11 35 0.004168632 ubox
11 36 0.015229778 ubox
11 39 0.006869029 ubox
11 43 0.007373590 ubox
11 44 0.919083653 ubox
11 45 0.039615826 ubox
12 35 0.017147576 ubox
12 36 0.010180099 ubox
12 40 0.048179007 ubox
12 43 0.912386507 ubox
12 44 0.049984113 ubox
12 45 0.007292933 ubox
13 35 0.018967504 ubox
13 36 0.011043843 ubox
13 39 0.059831158 ubox
13 40 0.064120489 ubox
13 43 0.049777545 ubox
13 44 0.012061157 ubox
13 45 0.027080636 ubox
14 35 0.010272292 ubox
14 36 0.005995723 ubox
14 39 0.066656643 ubox
14 43 0.013387688 ubox
14 44 0.045308730 ubox
14 45 0.016918867 ubox
15 35 0.006186075 ubox
15 36 0.020520987 ubox
15 40 0.827211344 ubox
15 43 0.049129211 ubox
15 44 0.019734505 ubox
15 45 0.004900159 ubox
16 35 0.022305289 ubox
16 36 0.051050080 ubox
16 39 0.804978772 ubox
16 40 0.070263746 ubox
16 43 0.021302555 ubox
16 44 0.006068179 ubox
17 27 0.118808287 ubox
17 29 0.784505964 ubox
17 35 0.005611193 ubox
17 39 0.058434600 ubox
17 43 0.006585576 ubox
17 59 0.006199029 ubox
17 66 0.168135400 ubox
18 26 0.118941418 ubox
18 28 0.785638652 ubox
18 37 0.126052516 ubox
18 58 0.006203515 ubox
18 60 0.007704393 ubox
18 65 0.168257100 ubox
18 67 0.177463451 ubox
19 25 0.118331168 ubox
19 27 0.785671236 ubox
19 29 0.020905705 ubox
19 35 0.014436694 ubox
19 36 0.109132383 ubox
19 39 0.336201531 ubox
19 57 0.005687550 ubox
19 59 0.007987285 ubox
19 66 0.216180294 ubox
20 26 0.783983484 ubox
20 28 0.021057732 ubox
20 30 0.006578603 ubox
20 34 0.016113432 ubox
20 37 0.027845462 ubox
20 38 0.381450976 ubox
20 56 0.003276142 ubox
20 58 0.007915116 ubox
20 63 0.099062602 ubox
20 65 0.214845813 ubox
20 67 0.013145328 ubox
21 25 0.746727160 ubox
21 27 0.020987887 ubox
21 29 0.006635810 ubox
21 36 0.036137962 ubox
21 57 0.005591650 ubox
21 62 0.027073550 ubox
21 66 0.022424584 ubox
22 35 0.034376750 ubox
22 36 0.455341099 ubox
23 35 0.466441350 ubox
23 62 0.356332212 ubox
24 32 0.082592548 ubox
24 33 0.048237558 ubox
24 34 0.467012029 ubox
24 52 0.004885770 ubox
24 54 0.011221037 ubox
24 61 0.364170688 ubox
24 64 0.033405577 ubox
24 65 0.003857330 ubox
25 31 0.084350004 ubox
25 32 0.061755324 ubox
25 33 0.465790482 ubox
25 51 0.005403551 ubox
25 53 0.013195563 ubox
25 60 0.368081283 ubox
25 63 0.044784307 ubox
25 64 0.004783700 ubox
25 67 0.026390931 ubox
26 50 0.005415690 ubox
26 59 0.368191948 ubox
26 62 0.043458857 ubox
26 66 0.028878626 ubox
27 49 0.005416323 ubox
27 51 0.013382056 ubox
27 58 0.368186242 ubox
27 60 0.038307147 ubox
27 61 0.030816719 ubox
27 65 0.028825898 ubox
28 36 0.003219856 ubox
28 50 0.013442713 ubox
28 57 0.367994720 ubox
28 59 0.050577726 ubox
29 37 0.091335746 ubox
29 46 0.003457264 ubox
29 49 0.013435787 ubox
29 56 0.367952281 ubox
29 58 0.050654016 ubox
29 63 0.028520925 ubox
30 36 0.101906044 ubox
30 40 0.092876914 ubox
30 45 0.004119822 ubox
30 57 0.050347805 ubox
30 62 0.028269642 ubox
31 35 0.071740128 ubox
31 39 0.099098795 ubox
31 40 0.176827433 ubox
31 44 0.003944452 ubox
32 39 0.185989264 ubox
32 40 0.048745534 ubox
32 43 0.003791263 ubox
32 45 0.031074044 ubox
33 39 0.050721482 ubox
33 44 0.036643297 ubox
33 45 0.005479739 ubox
34 43 0.038048302 ubox
34 44 0.005433725 ubox
34 50 0.048942665 ubox
34 57 0.027011171 ubox
34 62 0.004530441 ubox
35 42 0.038397350 ubox
35 47 0.007358322 ubox
35 48 0.006378353 ubox
35 49 0.048550510 ubox
35 52 0.080192661 ubox
35 53 0.329052432 ubox
35 54 0.005972124 ubox
35 55 0.006972744 ubox
35 56 0.027165113 ubox
35 61 0.005151260 ubox
36 41 0.034376284 ubox
36 46 0.007897052 ubox
36 47 0.006216202 ubox
36 48 0.041489666 ubox
36 51 0.078496782 ubox
36 52 0.334481700 ubox
36 53 0.006490226 ubox
36 54 0.005815271 ubox
36 55 0.028232666 ubox
36 60 0.005214791 ubox
37 44 0.005293523 ubox
37 45 0.009991857 ubox
37 50 0.029368888 ubox
37 59 0.005252029 ubox
38 43 0.004920377 ubox
38 44 0.009703187 ubox
38 50 0.345347248 ubox
38 57 0.006194636 ubox
39 47 0.086186603 ubox
39 48 0.091326793 ubox
39 49 0.345190088 ubox
39 52 0.037608086 ubox
39 53 0.011754669 ubox
39 55 0.003290793 ubox
39 56 0.006241087 ubox
40 46 0.085926508 ubox
40 47 0.092434434 ubox
40 48 0.338609911 ubox
40 51 0.037530319 ubox
40 52 0.011019453 ubox
40 54 0.003199262 ubox
40 55 0.006017281 ubox
41 45 0.072502011 ubox
41 50 0.036408393 ubox
42 50 0.013064496 ubox
42 57 0.007891485 ubox
43 49 0.014303627 ubox
43 52 0.004767261 ubox
43 53 0.003814373 ubox
43 54 0.004472292 ubox
43 56 0.008122633 ubox
44 48 0.010736359 ubox
44 51 0.005355409 ubox
44 52 0.004246833 ubox
44 53 0.005956798 ubox
44 54 0.003452756 ubox
44 55 0.008700036 ubox
45 51 0.004130149 ubox
45 52 0.006312088 ubox
45 53 0.003689543 ubox
45 54 0.008907877 ubox
49 59 0.004823528 ubox
50 58 0.004806938 ubox
51 57 0.004730806 ubox
51 59 0.004674084 ubox
56 66 0.103911018 ubox
57 63 0.003665847 ubox
57 65 0.103392595 ubox
57 67 0.523413501 ubox
58 62 0.003480698 ubox
58 66 0.893533141 ubox
59 65 0.894040569 ubox
59 67 0.095508299 ubox
60 66 0.103099454 ubox
3 52 0.9500000 lbox
4 51 0.9500000 lbox
5 50 0.9500000 lbox
6 49 0.9500000 lbox
7 48 0.9500000 lbox
8 47 0.9500000 lbox
9 46 0.9500000 lbox
10 45 0.9500000 lbox
11 44 0.9500000 lbox
12 43 0.9500000 lbox
15 40 0.9500000 lbox
16 39 0.9500000 lbox
17 29 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
58 66 0.9500000 lbox
59 65 0.9500000 lbox
showpage
end
%%EOF
