%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:31:07 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CRIM1)
} def

/sequence { (\
GCAGGGGAGGGCGCCCGCCCCGCUCCCGGCCCGGCUGCGAGGAGGAGGCGGCGGCGGCGCAGGAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.181145691 ubox
1 23 0.058820110 ubox
1 58 0.003416528 ubox
1 60 0.006703311 ubox
2 11 0.181288295 ubox
2 22 0.066569950 ubox
2 57 0.003412002 ubox
2 59 0.006535085 ubox
4 16 0.005196974 ubox
4 20 0.006416334 ubox
4 21 0.141404963 ubox
4 25 0.007057573 ubox
4 27 0.003660203 ubox
5 15 0.005375387 ubox
5 16 0.004347413 ubox
5 19 0.006406693 ubox
5 20 0.141556305 ubox
5 21 0.006391240 ubox
5 24 0.007204650 ubox
5 26 0.003659958 ubox
5 27 0.004876852 ubox
6 14 0.005402204 ubox
6 15 0.004486132 ubox
6 18 0.006386358 ubox
6 19 0.141557042 ubox
6 20 0.006341999 ubox
6 23 0.007292264 ubox
6 25 0.003651564 ubox
6 26 0.004886731 ubox
7 14 0.004501925 ubox
7 18 0.141323481 ubox
7 19 0.006281627 ubox
7 24 0.003295747 ubox
7 25 0.004892155 ubox
8 24 0.004862943 ubox
9 15 0.008629190 ubox
9 16 0.139135037 ubox
9 20 0.011230079 ubox
10 14 0.008783490 ubox
10 15 0.138973104 ubox
10 16 0.024115175 ubox
10 19 0.011628295 ubox
11 15 0.023831369 ubox
11 18 0.011711159 ubox
11 58 0.004240550 ubox
11 60 0.968489797 ubox
12 17 0.011750000 ubox
12 57 0.004012695 ubox
12 59 0.969677512 ubox
13 58 0.969820815 ubox
13 60 0.196486635 ubox
14 57 0.792229594 ubox
14 59 0.196672123 ubox
15 54 0.025054755 ubox
15 56 0.560176288 ubox
15 57 0.593250064 ubox
16 50 0.003766977 ubox
16 53 0.035244345 ubox
16 56 0.815407027 ubox
17 49 0.003813940 ubox
17 52 0.035658083 ubox
17 55 0.988995441 ubox
17 58 0.003751939 ubox
18 48 0.003806249 ubox
18 51 0.035629099 ubox
18 54 0.989150829 ubox
18 57 0.003755299 ubox
19 47 0.003794638 ubox
19 50 0.035565832 ubox
19 53 0.989028286 ubox
19 56 0.003754936 ubox
20 45 0.003770767 ubox
20 48 0.035363165 ubox
20 51 0.989026930 ubox
20 54 0.003793080 ubox
21 44 0.003758369 ubox
21 47 0.035332160 ubox
21 50 0.989133174 ubox
21 53 0.003839281 ubox
22 49 0.988881287 ubox
22 52 0.004020740 ubox
22 60 0.004056668 ubox
23 41 0.004297687 ubox
23 44 0.039686088 ubox
23 45 0.005506411 ubox
23 47 0.281784094 ubox
23 48 0.947715071 ubox
23 51 0.004019056 ubox
23 59 0.004059268 ubox
23 65 0.128319997 ubox
23 66 0.005003531 ubox
24 40 0.005928571 ubox
24 43 0.053965889 ubox
24 45 0.006060193 ubox
24 46 0.397802389 ubox
24 47 0.866159982 ubox
24 48 0.020536575 ubox
24 50 0.003830869 ubox
24 64 0.137164635 ubox
24 65 0.006078805 ubox
24 66 0.011949707 ubox
25 39 0.006730271 ubox
25 42 0.061172128 ubox
25 44 0.012341612 ubox
25 45 0.417939604 ubox
25 47 0.184434861 ubox
25 63 0.137704720 ubox
25 65 0.020417250 ubox
26 41 0.061186755 ubox
26 42 0.017126527 ubox
26 44 0.414040637 ubox
26 45 0.893364224 ubox
26 48 0.004103375 ubox
26 57 0.003763068 ubox
26 62 0.137251687 ubox
26 63 0.034885144 ubox
27 37 0.063800174 ubox
27 39 0.024382353 ubox
27 41 0.019958971 ubox
27 44 0.895309976 ubox
27 47 0.004447615 ubox
27 56 0.004022671 ubox
27 59 0.009267876 ubox
27 62 0.036238919 ubox
28 36 0.065018647 ubox
28 38 0.021921065 ubox
28 58 0.007974949 ubox
29 35 0.065983708 ubox
29 38 0.059880687 ubox
29 55 0.007359616 ubox
29 58 0.032195705 ubox
29 60 0.138111864 ubox
30 34 0.065512157 ubox
30 37 0.060386482 ubox
30 42 0.976906464 ubox
30 54 0.007693981 ubox
30 57 0.032212184 ubox
30 59 0.138154650 ubox
31 41 0.977800912 ubox
31 42 0.089630091 ubox
31 53 0.007507308 ubox
31 54 0.009412943 ubox
31 56 0.031117683 ubox
31 57 0.138071857 ubox
32 39 0.979916695 ubox
32 41 0.090483389 ubox
32 53 0.011356862 ubox
32 56 0.138111237 ubox
33 38 0.976128902 ubox
33 52 0.008178209 ubox
33 55 0.128696025 ubox
34 52 0.127047064 ubox
34 55 0.045145100 ubox
35 51 0.127832237 ubox
35 54 0.062519108 ubox
36 50 0.127745394 ubox
36 53 0.062510840 ubox
37 49 0.127845686 ubox
37 52 0.062540689 ubox
38 48 0.127827647 ubox
38 50 0.010379157 ubox
38 51 0.061674283 ubox
39 49 0.014487678 ubox
11 60 0.9500000 lbox
12 59 0.9500000 lbox
13 58 0.9500000 lbox
14 57 0.9500000 lbox
15 56 0.9500000 lbox
17 55 0.9500000 lbox
18 54 0.9500000 lbox
19 53 0.9500000 lbox
20 51 0.9500000 lbox
21 50 0.9500000 lbox
22 49 0.9500000 lbox
23 48 0.9500000 lbox
24 47 0.9500000 lbox
26 45 0.9500000 lbox
27 44 0.9500000 lbox
30 42 0.9500000 lbox
31 41 0.9500000 lbox
32 39 0.9500000 lbox
33 38 0.9500000 lbox
showpage
end
%%EOF
