%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:07:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGAGCCGCCACCGCCCACGGCCCGCCGCUGCGGCAGGGACCUCCCCUUUAACGGCGGCGCUGGGCGCUCCGCUGCCCCCGCGGCGGCUGCUGCAGCGGCUGCUGCUGCUACUGCGGCUCCUGCUGCCGCCGCCGCCGCCGCUCGGCCUCAGGCAGCUGCAUCCUCGGCCGGGCCGGGUCCCCGCCCCGCGCCGCGCCCGGCCCCGCC\
) } def
/len { sequence length } bind def

/coor [
[13.80619144 262.48425293]
[0.65225214 255.27494812]
[-7.72206783 242.83024597]
[-9.44634247 227.92967224]
[-4.13636827 213.90266418]
[-16.44158363 222.48065186]
[-28.74679947 231.05862427]
[-41.05201721 239.63659668]
[-53.35723114 248.21456909]
[-65.66244507 256.79254150]
[-62.58113861 276.08731079]
[-71.11785889 294.61242676]
[-89.24945068 305.70547485]
[-111.34555817 304.80679321]
[-121.42154694 315.91870117]
[-131.49754333 327.03057861]
[-141.48974609 338.21789551]
[-151.39756775 349.48001099]
[-161.22048950 360.81625366]
[-170.95791626 372.22601318]
[-180.69535828 383.63574219]
[-183.14411926 399.85104370]
[-198.50805664 405.58526611]
[-210.98207092 394.93957520]
[-207.73394775 378.86529541]
[-192.10510254 373.89831543]
[-182.36767578 362.48855591]
[-172.63023376 351.07882690]
[-170.67893982 343.94918823]
[-162.65966797 339.57217407]
[-152.75183105 328.31008911]
[-150.69360352 321.21057129]
[-142.60945129 316.95458984]
[-132.53344727 305.84271240]
[-122.45745850 294.73080444]
[-130.56706238 282.11199951]
[-144.86053467 286.66137695]
[-159.15399170 291.21078491]
[-173.44744873 295.76019287]
[-182.06420898 309.29278564]
[-198.03149414 310.85000610]
[-209.10060120 299.23730469]
[-206.78022766 283.36294556]
[-192.85037231 275.40438843]
[-177.99684143 281.46673584]
[-163.70338440 276.91732788]
[-149.40992737 272.36791992]
[-135.11647034 267.81854248]
[-131.02253723 253.92106628]
[-122.28881836 242.83190918]
[-110.38226318 235.96844482]
[-97.14617157 234.07527161]
[-84.51680756 237.15113831]
[-74.24042511 244.48733521]
[-61.93520737 235.90936279]
[-49.62998962 227.33137512]
[-37.32477570 218.75340271]
[-25.01955986 210.17543030]
[-12.71434402 201.59745789]
[-1.15952027 192.03262329]
[9.56597996 181.54626465]
[20.29148102 171.05990601]
[31.01698112 160.57356262]
[41.74248123 150.08720398]
[52.46798325 139.60084534]
[63.19348145 129.11448669]
[73.91898346 118.62813568]
[84.64448547 108.14178467]
[82.15924072 99.72490692]
[84.09946442 90.93044281]
[90.19861603 83.99499512]
[99.10542297 80.79068756]
[103.54726410 66.46343994]
[107.98911285 52.13618851]
[112.43095398 37.80894089]
[116.87279510 23.48169327]
[121.31463623 9.15444565]
[125.21507263 -5.32956696]
[128.56858826 -19.94989395]
[122.75237274 -37.42063522]
[135.19308472 -49.79692078]
[138.32646179 -64.46600342]
[141.45983887 -79.13508606]
[144.59321594 -93.80416107]
[147.72659302 -108.47324371]
[150.85997009 -123.14232635]
[153.99334717 -137.81140137]
[157.12672424 -152.48048401]
[152.44285583 -167.59246826]
[162.66809082 -178.42269897]
[165.80146790 -193.09178162]
[161.11759949 -208.20376587]
[171.34283447 -219.03399658]
[174.47621155 -233.70307922]
[169.79234314 -248.81506348]
[180.01756287 -259.64529419]
[183.15093994 -274.31439209]
[186.28431702 -288.98345947]
[189.41769409 -303.65255737]
[192.55107117 -318.32162476]
[181.26373291 -328.64358521]
[176.68862915 -343.13375854]
[179.95899963 -357.87051392]
[190.09877014 -368.91772461]
[204.31097412 -373.37625122]
[207.44435120 -388.04534912]
[210.57772827 -402.71441650]
[213.71110535 -417.38351440]
[216.84448242 -432.05258179]
[211.28048706 -447.47900391]
[222.06346130 -459.83453369]
[238.10083008 -456.40887451]
[242.89469910 -440.72607422]
[231.51356506 -428.91921997]
[228.38018799 -414.25012207]
[225.24681091 -399.58105469]
[222.11343384 -384.91195679]
[218.98005676 -370.24288940]
[230.13034058 -360.36682129]
[234.87165833 -346.14093018]
[231.83567810 -331.35412598]
[221.73965454 -319.99777222]
[207.22015381 -315.18826294]
[204.08677673 -300.51916504]
[200.95339966 -285.85009766]
[197.82002258 -271.18099976]
[194.68664551 -256.51193237]
[199.59463501 -242.44917297]
[189.14527893 -230.56970215]
[186.01190186 -215.90061951]
[190.91989136 -201.83787537]
[180.47055054 -189.95840454]
[177.33717346 -175.28932190]
[182.24514771 -161.22657776]
[171.79580688 -149.34710693]
[168.66242981 -134.67803955]
[165.52905273 -120.00894928]
[162.39567566 -105.33986664]
[159.26229858 -90.67079163]
[156.12892151 -76.00170898]
[152.99554443 -61.33262634]
[149.86216736 -46.66354370]
[156.17517090 -36.34384537]
[153.68363953 -24.09635735]
[143.18890381 -16.59638023]
[139.83538818 -1.97605336]
[153.74069214 -7.60122252]
[166.88352966 -0.37169781]
[169.57765198 14.38437653]
[159.83749390 25.79180527]
[144.84153748 25.44333839]
[135.64189148 13.59628868]
[131.20004272 27.92353630]
[126.75820160 42.25078583]
[122.31636047 56.57803345]
[117.87451172 70.90528107]
[113.43267059 85.23252869]
[119.31132507 71.43247986]
[131.49414062 62.68152237]
[146.44885254 61.51689148]
[159.83955383 68.27625275]
[167.78379822 80.99981689]
[167.97824097 95.99855804]
[160.36651611 108.92378235]
[147.15553284 116.02800751]
[132.17564392 115.25144196]
[119.77165222 106.82112122]
[131.25427246 116.47252655]
[142.73687744 126.12393188]
[154.29170227 135.68876648]
[165.91809082 145.16648865]
[177.54446411 154.64421082]
[189.17085266 164.12193298]
[204.75605774 166.84442139]
[209.73207092 180.88323975]
[221.35844421 190.36096191]
[232.98483276 199.83868408]
[249.25120544 201.92124939]
[255.33036804 217.15199280]
[244.96861267 229.86285400]
[228.82519531 226.97796631]
[223.50711060 211.46507263]
[211.88073730 201.98735046]
[200.25434875 192.50962830]
[185.50073242 190.46504211]
[179.69313049 175.74832153]
[168.06674194 166.27059937]
[156.44036865 156.79287720]
[144.81398010 147.31515503]
[137.64216614 145.52508545]
[133.08546448 137.60653687]
[121.60285950 127.95513916]
[110.12024689 118.30373383]
[95.13083649 118.86727905]
[84.40533447 129.35363770]
[73.67984009 139.83999634]
[62.95433807 150.32633972]
[52.22883606 160.81269836]
[41.50333405 171.29905701]
[30.77783585 181.78541565]
[20.05233574 192.27177429]
[9.32683468 202.75811768]
[24.10043335 200.16181946]
[38.41643906 204.63977051]
[49.07733154 215.19180298]
[53.70197296 229.46109009]
[51.25743866 244.26055908]
[42.28971863 256.28469849]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 59]
[6 58]
[7 57]
[8 56]
[9 55]
[10 54]
[14 35]
[15 34]
[16 33]
[17 31]
[18 30]
[19 28]
[20 27]
[21 26]
[36 48]
[37 47]
[38 46]
[39 45]
[60 202]
[61 201]
[62 200]
[63 199]
[64 198]
[65 197]
[66 196]
[67 195]
[68 194]
[72 157]
[73 156]
[74 155]
[75 154]
[76 153]
[77 152]
[78 146]
[79 145]
[81 142]
[82 141]
[83 140]
[84 139]
[85 138]
[86 137]
[87 136]
[88 135]
[90 133]
[91 132]
[93 130]
[94 129]
[96 127]
[97 126]
[98 125]
[99 124]
[100 123]
[105 118]
[106 117]
[107 116]
[108 115]
[109 114]
[167 193]
[168 192]
[169 191]
[170 189]
[171 188]
[172 187]
[173 186]
[175 184]
[176 183]
[177 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
