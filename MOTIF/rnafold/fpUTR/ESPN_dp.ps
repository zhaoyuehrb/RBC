%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:32:34 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ESPN)
} def

/sequence { (\
AGCGGAGCGCCAGGCAGCGCGGAGCGGAGGCCAGGCCCACAGCCGCUCCGCCUCCCGGCCCGCAGAUCCCCGACGGCCGCACCGCGGGCUCCUCUGGCCCGCAAGAACACGUGCAUGGCGUCCUGGGGAAGGCGCUGAGUGCGGAGUCGCGGCGCCGCACGCGGCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 8 0.004320652 ubox
2 63 0.998742475 ubox
3 7 0.004294553 ubox
3 62 0.999773357 ubox
4 60 0.003198961 ubox
4 61 0.999805849 ubox
5 60 0.998954674 ubox
7 20 0.013277695 ubox
7 59 0.165071642 ubox
7 63 0.014959833 ubox
8 19 0.013298249 ubox
8 57 0.062506709 ubox
8 58 0.153337453 ubox
8 62 0.014920595 ubox
9 18 0.013659871 ubox
9 56 0.064640301 ubox
9 59 0.983598100 ubox
9 61 0.006285263 ubox
10 17 0.013634278 ubox
10 58 0.986037712 ubox
11 57 0.986419613 ubox
12 53 0.006963544 ubox
13 52 0.007080645 ubox
13 53 0.003472768 ubox
13 54 0.005937754 ubox
13 55 0.866358455 ubox
13 56 0.497677790 ubox
14 51 0.006481799 ubox
14 52 0.003622820 ubox
14 53 0.003255548 ubox
14 54 0.866826678 ubox
14 55 0.497201389 ubox
15 50 0.005923019 ubox
16 53 0.989251546 ubox
17 51 0.005567445 ubox
17 52 0.997288843 ubox
18 50 0.005291001 ubox
19 51 0.999753147 ubox
20 50 0.999854584 ubox
21 49 0.999960064 ubox
21 55 0.005158565 ubox
22 48 0.999977171 ubox
22 54 0.005192905 ubox
23 47 0.999834166 ubox
23 53 0.005207797 ubox
24 46 0.999974370 ubox
24 51 0.003785794 ubox
24 52 0.003683540 ubox
25 45 0.999964952 ubox
25 50 0.005281618 ubox
26 32 0.018324489 ubox
26 44 0.999421608 ubox
26 49 0.005284521 ubox
27 31 0.018050231 ubox
27 43 0.997886212 ubox
27 48 0.005284233 ubox
28 47 0.005036650 ubox
29 37 0.964940827 ubox
29 38 0.202905151 ubox
29 44 0.022967130 ubox
29 46 0.003812202 ubox
30 36 0.972675982 ubox
30 37 0.189895458 ubox
30 43 0.025508106 ubox
30 46 0.003630677 ubox
31 35 0.968294406 ubox
31 42 0.027426273 ubox
31 45 0.004854123 ubox
34 44 0.023106285 ubox
35 43 0.023970861 ubox
36 42 0.024623996 ubox
50 59 0.012530103 ubox
51 58 0.012558150 ubox
52 57 0.012563074 ubox
62 133 0.007040429 ubox
63 132 0.007151533 ubox
67 127 0.004905891 ubox
67 128 0.029420739 ubox
67 129 0.934050668 ubox
68 126 0.006673793 ubox
68 127 0.045581949 ubox
68 128 0.998451494 ubox
68 152 0.003190327 ubox
69 125 0.006678387 ubox
69 126 0.045839416 ubox
69 127 0.998735284 ubox
69 128 0.017018270 ubox
69 151 0.003253826 ubox
69 152 0.003742664 ubox
70 125 0.045968406 ubox
70 126 0.998720811 ubox
70 127 0.017160809 ubox
70 151 0.003804880 ubox
71 125 0.993986107 ubox
71 126 0.017247425 ubox
71 149 0.005826508 ubox
72 122 0.946032069 ubox
72 124 0.287473564 ubox
72 148 0.005896295 ubox
73 121 0.970597413 ubox
73 147 0.005895725 ubox
74 120 0.969707631 ubox
74 146 0.005894181 ubox
75 83 0.007323061 ubox
75 119 0.694467224 ubox
75 122 0.016014551 ubox
75 123 0.024122266 ubox
76 82 0.007317125 ubox
76 114 0.010780552 ubox
76 119 0.718693938 ubox
76 121 0.006523891 ubox
76 122 0.022282967 ubox
76 153 0.005076991 ubox
77 113 0.010743905 ubox
77 118 0.987265687 ubox
77 120 0.005846678 ubox
77 144 0.005927975 ubox
77 152 0.005092957 ubox
78 111 0.010675375 ubox
78 117 0.982539206 ubox
78 120 0.020400582 ubox
78 143 0.005943576 ubox
78 151 0.005096292 ubox
79 83 0.003345500 ubox
79 85 0.004402447 ubox
79 110 0.010665424 ubox
79 112 0.005142414 ubox
79 114 0.986689103 ubox
79 116 0.130315119 ubox
79 119 0.020552198 ubox
79 142 0.005943108 ubox
79 150 0.005096370 ubox
80 84 0.004382857 ubox
80 111 0.005433336 ubox
80 113 0.999186722 ubox
80 118 0.020446073 ubox
80 141 0.005942981 ubox
80 149 0.005091378 ubox
81 112 0.998860932 ubox
81 140 0.005900632 ubox
82 111 0.991981064 ubox
82 139 0.005883472 ubox
83 111 0.088451251 ubox
83 113 0.007259814 ubox
83 137 0.003910435 ubox
84 102 0.997216284 ubox
84 110 0.050689791 ubox
85 101 0.999921676 ubox
86 100 0.999975472 ubox
87 99 0.999992639 ubox
88 98 0.999990344 ubox
89 97 0.999302203 ubox
90 96 0.925000985 ubox
90 97 0.026659892 ubox
91 96 0.234384115 ubox
91 97 0.020686513 ubox
92 96 0.030289506 ubox
101 114 0.006688000 ubox
102 113 0.006791113 ubox
103 112 0.007437156 ubox
105 148 0.004594019 ubox
106 147 0.004404113 ubox
108 117 0.013598684 ubox
109 116 0.012153969 ubox
109 121 0.007315270 ubox
110 117 0.008975376 ubox
110 120 0.007800523 ubox
110 143 0.005315559 ubox
111 116 0.005967061 ubox
111 119 0.007938435 ubox
111 142 0.005406742 ubox
112 118 0.007897993 ubox
112 141 0.005395954 ubox
113 140 0.005434664 ubox
114 139 0.005454931 ubox
116 137 0.005389340 ubox
117 136 0.007725275 ubox
118 135 0.008044006 ubox
119 134 0.008045364 ubox
120 133 0.008042610 ubox
122 132 0.007511668 ubox
123 131 0.007559881 ubox
124 130 0.007572602 ubox
131 156 0.003937935 ubox
131 168 0.981478957 ubox
132 142 0.012790589 ubox
132 155 0.003943321 ubox
132 165 0.004744528 ubox
132 167 0.989812215 ubox
133 141 0.012801595 ubox
133 143 0.005216553 ubox
133 154 0.003943580 ubox
133 163 0.004688835 ubox
133 164 0.003879023 ubox
134 140 0.012749121 ubox
134 142 0.005637239 ubox
134 153 0.003948274 ubox
134 162 0.005396894 ubox
134 165 0.999611034 ubox
135 139 0.012675170 ubox
135 141 0.005636858 ubox
135 152 0.003947871 ubox
135 161 0.005395621 ubox
135 164 0.999824836 ubox
136 151 0.003489099 ubox
136 163 0.998812447 ubox
137 162 0.991114750 ubox
139 160 0.994612426 ubox
140 159 0.999595232 ubox
141 150 0.003651210 ubox
141 158 0.999846149 ubox
142 149 0.003766108 ubox
142 157 0.999837922 ubox
143 148 0.003717753 ubox
143 156 0.999824628 ubox
143 168 0.012209848 ubox
144 155 0.998091934 ubox
144 167 0.012372166 ubox
146 153 0.987353225 ubox
146 155 0.008403033 ubox
146 165 0.014117512 ubox
147 152 0.941418660 ubox
147 154 0.011001264 ubox
147 164 0.014123963 ubox
148 154 0.063815007 ubox
148 163 0.014132227 ubox
149 153 0.059943541 ubox
149 155 0.004856101 ubox
149 162 0.014134140 ubox
150 154 0.006553082 ubox
150 161 0.014134109 ubox
151 160 0.014095051 ubox
151 168 0.003881642 ubox
152 158 0.011793926 ubox
152 167 0.003965253 ubox
153 157 0.011716906 ubox
154 165 0.008171253 ubox
155 164 0.008178598 ubox
156 163 0.008178393 ubox
157 162 0.007968506 ubox
2 63 0.9500000 lbox
3 62 0.9500000 lbox
4 61 0.9500000 lbox
5 60 0.9500000 lbox
9 59 0.9500000 lbox
10 58 0.9500000 lbox
11 57 0.9500000 lbox
13 55 0.9500000 lbox
14 54 0.9500000 lbox
16 53 0.9500000 lbox
17 52 0.9500000 lbox
19 51 0.9500000 lbox
20 50 0.9500000 lbox
21 49 0.9500000 lbox
22 48 0.9500000 lbox
23 47 0.9500000 lbox
24 46 0.9500000 lbox
25 45 0.9500000 lbox
26 44 0.9500000 lbox
27 43 0.9500000 lbox
29 37 0.9500000 lbox
30 36 0.9500000 lbox
31 35 0.9500000 lbox
67 129 0.9500000 lbox
68 128 0.9500000 lbox
69 127 0.9500000 lbox
70 126 0.9500000 lbox
71 125 0.9500000 lbox
72 122 0.9500000 lbox
73 121 0.9500000 lbox
74 120 0.9500000 lbox
75 119 0.9500000 lbox
77 118 0.9500000 lbox
78 117 0.9500000 lbox
79 114 0.9500000 lbox
80 113 0.9500000 lbox
81 112 0.9500000 lbox
82 111 0.9500000 lbox
84 102 0.9500000 lbox
85 101 0.9500000 lbox
86 100 0.9500000 lbox
87 99 0.9500000 lbox
88 98 0.9500000 lbox
89 97 0.9500000 lbox
90 96 0.9500000 lbox
131 168 0.9500000 lbox
132 167 0.9500000 lbox
134 165 0.9500000 lbox
135 164 0.9500000 lbox
136 163 0.9500000 lbox
137 162 0.9500000 lbox
139 160 0.9500000 lbox
140 159 0.9500000 lbox
141 158 0.9500000 lbox
142 157 0.9500000 lbox
143 156 0.9500000 lbox
144 155 0.9500000 lbox
146 153 0.9500000 lbox
147 152 0.9500000 lbox
showpage
end
%%EOF
