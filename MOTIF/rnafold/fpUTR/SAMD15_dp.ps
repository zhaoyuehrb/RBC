%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:03:17 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SAMD15)
} def

/sequence { (\
UGGGGUUGCUAGGAAGCCGCGGCGCGUCUGCUAAGCUGCAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.044614017 ubox
1 19 0.004567407 ubox
1 21 0.122773848 ubox
1 24 0.003790185 ubox
1 26 0.010814379 ubox
1 40 0.256942944 ubox
2 10 0.048735084 ubox
2 18 0.086058328 ubox
2 20 0.167083236 ubox
2 23 0.007696823 ubox
2 25 0.015260963 ubox
2 28 0.080623404 ubox
2 29 0.013836305 ubox
2 37 0.005530328 ubox
2 39 0.285033278 ubox
3 9 0.049075720 ubox
3 10 0.027474209 ubox
3 17 0.081871795 ubox
3 18 0.593843227 ubox
3 27 0.080431038 ubox
3 28 0.017742069 ubox
3 29 0.003804690 ubox
3 36 0.005632042 ubox
3 37 0.023932679 ubox
4 9 0.028545800 ubox
4 10 0.006095706 ubox
4 17 0.593823328 ubox
4 18 0.711323350 ubox
4 27 0.017082455 ubox
4 28 0.004907405 ubox
4 36 0.025777666 ubox
4 37 0.283361772 ubox
5 9 0.006162660 ubox
5 17 0.712450869 ubox
5 20 0.020123320 ubox
5 23 0.050192749 ubox
5 25 0.082156166 ubox
5 27 0.004228251 ubox
5 36 0.283788563 ubox
5 39 0.141190155 ubox
6 12 0.007698764 ubox
6 13 0.011778566 ubox
6 14 0.061105074 ubox
6 15 0.588798101 ubox
6 16 0.710156357 ubox
6 19 0.019998384 ubox
6 22 0.050243650 ubox
6 24 0.058123476 ubox
6 34 0.037952498 ubox
6 35 0.281357850 ubox
6 38 0.137065896 ubox
6 41 0.024036098 ubox
7 11 0.007190280 ubox
7 12 0.019371852 ubox
7 13 0.068044239 ubox
7 14 0.588140922 ubox
7 15 0.699954195 ubox
7 21 0.050622637 ubox
7 24 0.059768239 ubox
7 33 0.046249538 ubox
7 34 0.254409965 ubox
7 38 0.003299954 ubox
7 40 0.032667041 ubox
8 17 0.118201695 ubox
8 18 0.009403342 ubox
8 20 0.051373127 ubox
8 23 0.085800677 ubox
8 31 0.153682391 ubox
8 32 0.036924920 ubox
8 36 0.148108444 ubox
8 39 0.033835827 ubox
9 16 0.120511942 ubox
9 19 0.051222223 ubox
9 22 0.085829130 ubox
9 30 0.152268990 ubox
9 35 0.148462908 ubox
9 38 0.033534981 ubox
10 15 0.115095338 ubox
10 21 0.083220549 ubox
10 30 0.082738214 ubox
10 33 0.101338883 ubox
10 34 0.138943091 ubox
10 38 0.004499625 ubox
11 29 0.146796847 ubox
11 32 0.113558008 ubox
11 37 0.022354644 ubox
12 18 0.099648669 ubox
12 28 0.148240253 ubox
12 29 0.208208596 ubox
12 31 0.113189586 ubox
12 32 0.131687993 ubox
12 36 0.022749995 ubox
12 37 0.004817315 ubox
13 17 0.098147554 ubox
13 27 0.135687309 ubox
13 28 0.212809258 ubox
13 31 0.134083646 ubox
13 36 0.005240417 ubox
14 27 0.202947264 ubox
15 29 0.161933695 ubox
15 32 0.025935698 ubox
15 37 0.018968766 ubox
16 23 0.143773885 ubox
16 25 0.206697816 ubox
16 27 0.024531271 ubox
16 28 0.173717453 ubox
16 31 0.027516299 ubox
16 36 0.019216931 ubox
16 39 0.020746135 ubox
17 22 0.143849906 ubox
17 24 0.204632566 ubox
17 26 0.025198617 ubox
17 30 0.027495507 ubox
17 35 0.019214246 ubox
17 38 0.020747620 ubox
18 24 0.034321984 ubox
18 26 0.194759129 ubox
19 23 0.041808176 ubox
19 25 0.196101417 ubox
19 27 0.020033604 ubox
19 31 0.036258359 ubox
19 36 0.034356449 ubox
19 39 0.923717532 ubox
20 24 0.194680498 ubox
20 26 0.020760206 ubox
20 30 0.036305368 ubox
20 35 0.034325730 ubox
20 38 0.924679934 ubox
21 25 0.019551065 ubox
21 28 0.009814168 ubox
21 29 0.036161526 ubox
21 32 0.046968000 ubox
21 37 0.924451589 ubox
22 27 0.006747887 ubox
22 28 0.035916874 ubox
22 31 0.051411885 ubox
22 36 0.925209964 ubox
22 39 0.092306851 ubox
23 30 0.051467391 ubox
23 35 0.924637905 ubox
23 38 0.092389366 ubox
24 29 0.035366140 ubox
24 31 0.750406910 ubox
24 36 0.073679151 ubox
24 37 0.056848715 ubox
24 39 0.113424929 ubox
25 30 0.749890081 ubox
25 35 0.075360995 ubox
25 38 0.113535120 ubox
26 36 0.055958740 ubox
26 37 0.107544707 ubox
26 39 0.008260912 ubox
27 35 0.024846600 ubox
27 38 0.008161486 ubox
28 35 0.122706472 ubox
29 34 0.122976033 ubox
29 40 0.109785909 ubox
30 36 0.018883592 ubox
30 39 0.119499619 ubox
31 35 0.018764638 ubox
31 38 0.119477725 ubox
33 37 0.003814376 ubox
4 18 0.9500000 lbox
5 17 0.9500000 lbox
6 16 0.9500000 lbox
7 15 0.9500000 lbox
19 39 0.9500000 lbox
20 38 0.9500000 lbox
21 37 0.9500000 lbox
22 36 0.9500000 lbox
23 35 0.9500000 lbox
24 31 0.9500000 lbox
25 30 0.9500000 lbox
showpage
end
%%EOF
