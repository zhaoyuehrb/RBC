%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:53:52 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RPS23)
} def

/sequence { (\
GGGGUCCUUGGCUGGGCGGGGCUUGCUCGCGGUGGCUUGUGGCUCCUUCCUGCGGUGCUUCUCUCUUUCGCUCAGGCCCGUGGCGCCGACAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 45 0.004648422 ubox
1 46 0.992635431 ubox
1 47 0.066221235 ubox
1 48 0.014583508 ubox
1 87 0.038227386 ubox
2 44 0.004112501 ubox
2 45 0.994309626 ubox
2 46 0.075984535 ubox
2 47 0.020945518 ubox
2 86 0.038251007 ubox
2 87 0.006050013 ubox
3 43 0.004173456 ubox
3 44 0.993748166 ubox
3 45 0.075854852 ubox
3 46 0.021638194 ubox
3 86 0.006057543 ubox
3 87 0.004219631 ubox
4 17 0.057559257 ubox
4 43 0.996272172 ubox
4 44 0.041839028 ubox
4 45 0.021594603 ubox
4 84 0.038453266 ubox
4 86 0.004227742 ubox
5 16 0.057521779 ubox
5 42 0.962508398 ubox
5 83 0.035171095 ubox
5 85 0.004193798 ubox
6 15 0.057605967 ubox
6 41 0.954154350 ubox
6 42 0.259336346 ubox
6 82 0.034851343 ubox
6 83 0.016639346 ubox
6 93 0.005454093 ubox
7 14 0.057589688 ubox
7 15 0.003182627 ubox
7 41 0.260452352 ubox
7 42 0.011231413 ubox
7 82 0.016718460 ubox
7 92 0.005570979 ubox
8 41 0.011683776 ubox
8 89 0.004673526 ubox
8 91 0.004470659 ubox
9 39 0.066639955 ubox
9 80 0.015462226 ubox
9 88 0.006347121 ubox
10 37 0.981766135 ubox
10 38 0.061293642 ubox
10 78 0.035796607 ubox
10 79 0.015084320 ubox
10 87 0.007435123 ubox
11 30 0.003294744 ubox
11 33 0.007269258 ubox
11 36 0.997396477 ubox
11 37 0.008438326 ubox
11 77 0.036383803 ubox
11 78 0.013668474 ubox
11 86 0.007437438 ubox
12 29 0.003234021 ubox
12 32 0.007530139 ubox
12 35 0.997408907 ubox
12 75 0.026973445 ubox
12 76 0.028023152 ubox
12 85 0.007409150 ubox
13 29 0.011073399 ubox
13 31 0.007696609 ubox
13 34 0.971481012 ubox
13 74 0.036172127 ubox
13 75 0.014160453 ubox
14 28 0.022773385 ubox
14 30 0.003387342 ubox
14 33 0.790209437 ubox
14 73 0.038745679 ubox
15 27 0.023028514 ubox
15 72 0.038875144 ubox
16 26 0.023121925 ubox
16 30 0.996283689 ubox
16 33 0.003705676 ubox
16 71 0.038934257 ubox
16 81 0.007112114 ubox
17 25 0.023120996 ubox
17 29 0.996860673 ubox
17 31 0.025947956 ubox
17 70 0.038931001 ubox
17 80 0.007135010 ubox
18 24 0.021203301 ubox
18 27 0.007690648 ubox
18 28 0.996518662 ubox
18 30 0.026035356 ubox
18 46 0.057459016 ubox
18 47 0.004222560 ubox
18 61 0.003674160 ubox
18 64 0.004966270 ubox
18 65 0.007975441 ubox
18 66 0.010885043 ubox
18 69 0.035759561 ubox
18 79 0.006219312 ubox
19 23 0.013782093 ubox
19 26 0.046207317 ubox
19 27 0.994600051 ubox
19 28 0.029159555 ubox
19 45 0.057533683 ubox
19 46 0.004511635 ubox
19 60 0.006113322 ubox
19 62 0.003628735 ubox
19 63 0.010788490 ubox
19 64 0.013416621 ubox
19 65 0.023567737 ubox
19 66 0.007526758 ubox
19 67 0.005899485 ubox
19 68 0.022124390 ubox
19 78 0.005142411 ubox
19 79 0.005146740 ubox
20 26 0.994399541 ubox
20 27 0.035512474 ubox
20 28 0.017458820 ubox
20 44 0.057504005 ubox
20 45 0.004498331 ubox
20 59 0.009729232 ubox
20 61 0.004136822 ubox
20 62 0.011546264 ubox
20 63 0.015371536 ubox
20 64 0.025157807 ubox
20 65 0.009238030 ubox
20 66 0.008348161 ubox
20 67 0.014758907 ubox
20 77 0.003769239 ubox
20 78 0.006226252 ubox
21 26 0.041239681 ubox
21 27 0.013653945 ubox
21 43 0.057696381 ubox
21 58 0.010348245 ubox
21 60 0.003816780 ubox
21 61 0.011864084 ubox
21 62 0.014173199 ubox
21 63 0.025853516 ubox
21 64 0.007289616 ubox
21 65 0.010130313 ubox
21 66 0.010863154 ubox
21 77 0.007141816 ubox
22 42 0.057504481 ubox
22 57 0.010328724 ubox
22 76 0.007952535 ubox
23 41 0.043313189 ubox
23 42 0.004715817 ubox
23 55 0.004665923 ubox
23 75 0.007947226 ubox
24 41 0.034569705 ubox
24 54 0.005107327 ubox
24 74 0.007993592 ubox
25 36 0.005922858 ubox
25 40 0.050888393 ubox
25 53 0.005182406 ubox
25 56 0.008921642 ubox
25 58 0.037245662 ubox
25 73 0.008039038 ubox
26 35 0.005939688 ubox
26 39 0.055151073 ubox
26 52 0.005179694 ubox
26 55 0.009261968 ubox
26 57 0.037256122 ubox
27 34 0.005191354 ubox
27 55 0.035285951 ubox
28 41 0.003302056 ubox
28 54 0.038491273 ubox
29 36 0.057270248 ubox
29 40 0.003890579 ubox
29 53 0.038538152 ubox
29 71 0.008060640 ubox
30 35 0.057281996 ubox
30 39 0.003896526 ubox
30 52 0.038532878 ubox
30 70 0.008064339 ubox
31 38 0.003533073 ubox
31 46 0.009757857 ubox
31 47 0.008171268 ubox
31 50 0.016732782 ubox
31 51 0.032587828 ubox
31 69 0.008057671 ubox
32 45 0.009843868 ubox
32 46 0.009357108 ubox
32 49 0.016924506 ubox
32 50 0.032073231 ubox
32 68 0.007785085 ubox
34 44 0.031510489 ubox
34 45 0.012767895 ubox
34 46 0.010858961 ubox
34 47 0.005737456 ubox
34 48 0.004344233 ubox
34 49 0.009470022 ubox
34 66 0.007283470 ubox
35 43 0.036863899 ubox
35 45 0.009363634 ubox
35 46 0.004693338 ubox
35 48 0.004528152 ubox
35 65 0.007303757 ubox
36 42 0.037286994 ubox
37 41 0.033598670 ubox
41 59 0.008019664 ubox
42 58 0.008154389 ubox
43 57 0.008145059 ubox
45 55 0.008097116 ubox
46 54 0.008103281 ubox
47 93 0.003199548 ubox
48 93 0.011043038 ubox
49 92 0.013090207 ubox
49 93 0.976734299 ubox
50 92 0.998889754 ubox
50 93 0.004565675 ubox
51 91 0.998867019 ubox
52 81 0.003183842 ubox
52 90 0.998891962 ubox
53 80 0.003225336 ubox
53 88 0.998730271 ubox
54 79 0.003237289 ubox
54 87 0.999179026 ubox
55 78 0.003236935 ubox
55 86 0.999195401 ubox
56 85 0.998793082 ubox
57 71 0.006764932 ubox
57 77 0.003776579 ubox
57 84 0.999115821 ubox
58 70 0.006775481 ubox
58 76 0.003831829 ubox
58 83 0.998807375 ubox
59 75 0.003923461 ubox
59 82 0.973565163 ubox
59 83 0.004187355 ubox
60 74 0.003944255 ubox
60 76 0.077910104 ubox
60 82 0.021702077 ubox
60 83 0.004356850 ubox
61 75 0.078788775 ubox
61 76 0.027967602 ubox
61 82 0.029812283 ubox
61 83 0.004297951 ubox
62 74 0.075023421 ubox
62 75 0.021156444 ubox
62 76 0.117793590 ubox
62 82 0.007827645 ubox
62 83 0.004385783 ubox
63 75 0.128328931 ubox
63 76 0.115937565 ubox
63 82 0.030767259 ubox
63 83 0.005394876 ubox
64 74 0.122284571 ubox
64 75 0.082395528 ubox
64 76 0.335020733 ubox
64 82 0.009594838 ubox
64 83 0.006631171 ubox
65 75 0.374467949 ubox
65 76 0.788933696 ubox
65 82 0.046691780 ubox
65 83 0.006056028 ubox
66 74 0.360803770 ubox
66 75 0.787874706 ubox
66 76 0.053987002 ubox
66 82 0.012747131 ubox
67 74 0.672817944 ubox
67 75 0.065666897 ubox
67 76 0.027985623 ubox
67 82 0.013395430 ubox
68 74 0.065501117 ubox
68 75 0.026350166 ubox
68 76 0.123148116 ubox
68 82 0.003895485 ubox
68 83 0.018663925 ubox
69 75 0.139754162 ubox
69 80 0.056081916 ubox
69 82 0.131755833 ubox
69 85 0.004316374 ubox
70 77 0.282493584 ubox
70 79 0.049596269 ubox
70 81 0.167063642 ubox
70 84 0.005336934 ubox
71 76 0.283026515 ubox
71 80 0.167325780 ubox
71 83 0.005386236 ubox
73 82 0.019953290 ubox
74 81 0.021165228 ubox
76 84 0.008376856 ubox
77 83 0.008581932 ubox
78 82 0.011284529 ubox
1 46 0.9500000 lbox
2 45 0.9500000 lbox
3 44 0.9500000 lbox
4 43 0.9500000 lbox
5 42 0.9500000 lbox
6 41 0.9500000 lbox
10 37 0.9500000 lbox
11 36 0.9500000 lbox
12 35 0.9500000 lbox
13 34 0.9500000 lbox
14 33 0.9500000 lbox
16 30 0.9500000 lbox
17 29 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
49 93 0.9500000 lbox
50 92 0.9500000 lbox
51 91 0.9500000 lbox
52 90 0.9500000 lbox
53 88 0.9500000 lbox
54 87 0.9500000 lbox
55 86 0.9500000 lbox
56 85 0.9500000 lbox
57 84 0.9500000 lbox
58 83 0.9500000 lbox
59 82 0.9500000 lbox
65 76 0.9500000 lbox
66 75 0.9500000 lbox
67 74 0.9500000 lbox
showpage
end
%%EOF
