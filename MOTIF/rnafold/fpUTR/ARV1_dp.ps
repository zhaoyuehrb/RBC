%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:01:12 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ARV1)
} def

/sequence { (\
GCGUCUGACGUCUUACCCUCCACAGAAUCGGAAGUUCUGGACUGCAGUUGAGUGGAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.558752478 ubox
1 35 0.024174305 ubox
1 45 0.130538918 ubox
1 48 0.010826134 ubox
1 53 0.401953573 ubox
2 10 0.611535254 ubox
2 30 0.003734074 ubox
2 34 0.026785162 ubox
2 44 0.130609879 ubox
2 47 0.009960309 ubox
2 50 0.507392798 ubox
2 52 0.416250744 ubox
2 54 0.049532685 ubox
3 9 0.612190345 ubox
3 16 0.021068089 ubox
3 29 0.003721683 ubox
3 42 0.126010380 ubox
3 43 0.040772017 ubox
3 45 0.003889531 ubox
3 48 0.071073182 ubox
3 49 0.437475578 ubox
3 53 0.043668636 ubox
4 8 0.551534719 ubox
4 10 0.003220619 ubox
4 15 0.019657941 ubox
4 26 0.008145181 ubox
4 32 0.029834127 ubox
4 40 0.004052708 ubox
4 41 0.129382316 ubox
4 44 0.003797610 ubox
4 51 0.048764514 ubox
4 52 0.022766443 ubox
4 55 0.005560980 ubox
4 56 0.049244115 ubox
5 25 0.008737723 ubox
5 31 0.031666587 ubox
5 34 0.004029051 ubox
5 39 0.005674058 ubox
5 40 0.129367538 ubox
5 47 0.722395154 ubox
5 50 0.043006236 ubox
5 52 0.020139542 ubox
5 54 0.005587457 ubox
5 55 0.052523795 ubox
6 15 0.029529814 ubox
6 22 0.006772757 ubox
6 24 0.008740836 ubox
6 30 0.031647225 ubox
6 33 0.004123672 ubox
6 39 0.121583012 ubox
6 46 0.725220661 ubox
6 50 0.013695264 ubox
6 51 0.018878173 ubox
6 54 0.049628744 ubox
7 14 0.033081854 ubox
7 20 0.008066636 ubox
7 21 0.007547408 ubox
7 23 0.008706803 ubox
7 29 0.031627024 ubox
7 36 0.062411712 ubox
7 37 0.072870130 ubox
7 38 0.056752754 ubox
7 45 0.725429759 ubox
7 49 0.035970017 ubox
7 53 0.024429896 ubox
8 13 0.029693333 ubox
8 19 0.007906948 ubox
8 28 0.030861338 ubox
8 35 0.071682601 ubox
8 36 0.068680401 ubox
8 48 0.038210202 ubox
8 53 0.042857426 ubox
9 30 0.005174141 ubox
9 34 0.074834705 ubox
9 39 0.003736902 ubox
9 44 0.244620888 ubox
9 47 0.038192822 ubox
9 50 0.006198183 ubox
9 52 0.046397163 ubox
9 54 0.030341925 ubox
10 16 0.036648656 ubox
10 29 0.005175483 ubox
10 35 0.026738133 ubox
10 38 0.004238543 ubox
10 42 0.724795994 ubox
10 43 0.056186918 ubox
10 45 0.007451565 ubox
10 49 0.005462228 ubox
10 53 0.029635914 ubox
11 15 0.033193294 ubox
11 26 0.029901942 ubox
11 31 0.005108053 ubox
11 32 0.067772121 ubox
11 40 0.010074750 ubox
11 41 0.727794628 ubox
11 44 0.007059140 ubox
11 51 0.044041594 ubox
11 56 0.015149684 ubox
12 25 0.030555443 ubox
12 30 0.005526150 ubox
12 31 0.071568861 ubox
12 34 0.098490196 ubox
12 39 0.015262461 ubox
12 40 0.727752327 ubox
12 47 0.012272647 ubox
12 50 0.045301088 ubox
12 52 0.044907459 ubox
12 54 0.003811634 ubox
12 55 0.018145943 ubox
13 24 0.029052771 ubox
13 30 0.068570434 ubox
13 32 0.003838609 ubox
13 33 0.098579076 ubox
13 34 0.004841183 ubox
13 39 0.701783915 ubox
13 40 0.004936518 ubox
13 46 0.011927818 ubox
13 47 0.003697060 ubox
13 51 0.045229275 ubox
13 54 0.015957048 ubox
13 55 0.011050987 ubox
13 56 0.010989770 ubox
13 57 0.045241782 ubox
14 25 0.003330934 ubox
14 30 0.003931143 ubox
14 31 0.003805514 ubox
14 32 0.091510193 ubox
14 33 0.009080160 ubox
14 39 0.036169082 ubox
14 44 0.006981549 ubox
14 46 0.004002901 ubox
14 50 0.044772374 ubox
14 54 0.015121284 ubox
14 55 0.005278898 ubox
14 56 0.063053253 ubox
15 35 0.274149744 ubox
15 38 0.046267152 ubox
15 43 0.007224311 ubox
15 48 0.031048114 ubox
15 49 0.038810929 ubox
15 53 0.016835798 ubox
16 31 0.089833917 ubox
16 34 0.280134306 ubox
16 40 0.007626905 ubox
16 47 0.036097814 ubox
16 52 0.016090469 ubox
16 55 0.233858135 ubox
17 30 0.089793803 ubox
17 31 0.031095902 ubox
17 39 0.007711394 ubox
17 40 0.008117497 ubox
17 54 0.234841717 ubox
17 55 0.024970829 ubox
18 25 0.058947981 ubox
18 30 0.031421452 ubox
18 31 0.005151009 ubox
18 34 0.514495972 ubox
18 39 0.007823457 ubox
18 40 0.004350616 ubox
18 47 0.032745137 ubox
18 52 0.235688005 ubox
18 54 0.024753317 ubox
18 55 0.003883114 ubox
19 24 0.054069712 ubox
19 26 0.079302500 ubox
19 30 0.004645946 ubox
19 31 0.006897334 ubox
19 32 0.603368994 ubox
19 33 0.364723276 ubox
19 41 0.049649033 ubox
19 46 0.032153544 ubox
19 51 0.235798416 ubox
19 54 0.003250197 ubox
19 56 0.588545071 ubox
20 25 0.079796318 ubox
20 30 0.007664316 ubox
20 31 0.712995631 ubox
20 40 0.053762922 ubox
20 50 0.232867287 ubox
20 55 0.618159073 ubox
21 30 0.712918634 ubox
21 39 0.050313480 ubox
21 44 0.056672131 ubox
21 50 0.035296523 ubox
21 54 0.618283494 ubox
22 38 0.034487159 ubox
22 43 0.055912409 ubox
22 48 0.123811514 ubox
22 49 0.047281017 ubox
22 53 0.613356543 ubox
23 39 0.246640544 ubox
23 44 0.158350481 ubox
23 47 0.107286728 ubox
23 50 0.013107863 ubox
23 52 0.607748306 ubox
24 38 0.268159874 ubox
24 43 0.177483371 ubox
24 49 0.018329477 ubox
25 36 0.004815688 ubox
25 37 0.273945908 ubox
25 42 0.177389953 ubox
25 48 0.019969480 ubox
25 49 0.069021307 ubox
26 35 0.005538804 ubox
26 36 0.273860726 ubox
26 48 0.067531991 ubox
26 49 0.570316158 ubox
27 35 0.272231864 ubox
27 48 0.568675946 ubox
28 34 0.265330039 ubox
28 40 0.206646201 ubox
28 41 0.034362580 ubox
28 47 0.540845658 ubox
28 51 0.124733003 ubox
29 39 0.264138917 ubox
29 40 0.029712825 ubox
29 44 0.121772839 ubox
29 50 0.125485676 ubox
30 37 0.012324892 ubox
30 38 0.265624229 ubox
30 43 0.121721877 ubox
30 49 0.122187676 ubox
31 36 0.009980629 ubox
31 37 0.266080872 ubox
31 42 0.120520033 ubox
31 48 0.113034032 ubox
31 49 0.012253034 ubox
32 36 0.231507892 ubox
32 48 0.016528420 ubox
32 49 0.006792111 ubox
33 43 0.538176624 ubox
33 48 0.008904996 ubox
33 49 0.007343795 ubox
34 42 0.541919738 ubox
34 45 0.079108100 ubox
34 48 0.007927796 ubox
35 41 0.538231555 ubox
35 44 0.079122285 ubox
35 51 0.007052652 ubox
35 55 0.004435168 ubox
35 56 0.004897222 ubox
35 57 0.009068010 ubox
36 40 0.485004877 ubox
36 50 0.006584167 ubox
36 51 0.005925349 ubox
36 54 0.005222033 ubox
36 55 0.005335616 ubox
36 56 0.014368225 ubox
37 47 0.113669831 ubox
37 50 0.005756467 ubox
37 52 0.032595481 ubox
37 54 0.004212294 ubox
37 55 0.014717164 ubox
38 46 0.116943089 ubox
38 51 0.048088906 ubox
38 54 0.013868793 ubox
39 45 0.118935216 ubox
39 49 0.003775992 ubox
39 53 0.004796450 ubox
40 48 0.004343767 ubox
40 49 0.127634392 ubox
41 48 0.134166026 ubox
41 53 0.077161224 ubox
42 47 0.134473865 ubox
42 52 0.084117044 ubox
42 55 0.075102703 ubox
43 50 0.006048917 ubox
43 51 0.084079597 ubox
43 54 0.076172816 ubox
44 49 0.006671996 ubox
44 53 0.080362762 ubox
45 52 0.081241542 ubox
45 54 0.021447006 ubox
46 53 0.021663177 ubox
48 52 0.003209639 ubox
48 55 0.010303214 ubox
48 56 0.028447172 ubox
48 57 0.022381691 ubox
49 54 0.010714001 ubox
49 55 0.030562786 ubox
49 56 0.030328652 ubox
1 11 0.9500000 lbox
2 10 0.9500000 lbox
3 9 0.9500000 lbox
4 8 0.9500000 lbox
19 56 0.9500000 lbox
20 55 0.9500000 lbox
21 54 0.9500000 lbox
22 53 0.9500000 lbox
23 52 0.9500000 lbox
26 49 0.9500000 lbox
27 48 0.9500000 lbox
28 47 0.9500000 lbox
33 43 0.9500000 lbox
34 42 0.9500000 lbox
35 41 0.9500000 lbox
36 40 0.9500000 lbox
showpage
end
%%EOF
