%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:03:28 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CD101)
} def

/sequence { (\
AGCAUUUGUCACUCAACCUCUGAAUGUUAGUGACACUAUUGGGACGAAAAAGGACUGUGCUGGCCCAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.010354990 ubox
1 28 0.004627329 ubox
1 37 0.167563226 ubox
1 40 0.015589839 ubox
1 61 0.203095572 ubox
2 6 0.011653813 ubox
2 9 0.003474526 ubox
2 27 0.006157666 ubox
2 36 0.177243729 ubox
2 39 0.025396399 ubox
2 58 0.003766007 ubox
2 60 0.215188461 ubox
2 64 0.049315774 ubox
3 8 0.004157852 ubox
3 26 0.006259641 ubox
3 32 0.004599480 ubox
3 41 0.036296095 ubox
3 57 0.003974288 ubox
3 59 0.215239957 ubox
3 62 0.005002187 ubox
3 63 0.049279534 ubox
4 25 0.006256916 ubox
4 31 0.004605897 ubox
4 39 0.117244143 ubox
4 40 0.036374987 ubox
4 56 0.003739760 ubox
4 58 0.213671355 ubox
4 61 0.003303245 ubox
5 24 0.006240214 ubox
5 30 0.004460869 ubox
5 38 0.134748769 ubox
5 48 0.005121113 ubox
5 54 0.005337524 ubox
5 57 0.208215985 ubox
5 68 0.003973483 ubox
6 23 0.006002691 ubox
6 29 0.003924697 ubox
6 47 0.007952243 ubox
6 51 0.003667095 ubox
6 52 0.004585881 ubox
6 53 0.007506927 ubox
6 54 0.011332335 ubox
6 67 0.003304623 ubox
7 22 0.005810389 ubox
7 35 0.876521967 ubox
7 38 0.008610850 ubox
7 46 0.007689800 ubox
7 52 0.003167104 ubox
7 53 0.008950180 ubox
8 21 0.003510413 ubox
8 34 0.982724881 ubox
8 36 0.005574892 ubox
8 45 0.007495939 ubox
8 55 0.181997113 ubox
9 33 0.982929258 ubox
9 35 0.003540761 ubox
9 44 0.007389361 ubox
9 53 0.008278710 ubox
9 54 0.182177611 ubox
10 26 0.004642283 ubox
10 32 0.983111494 ubox
10 43 0.007066664 ubox
10 52 0.009191381 ubox
10 53 0.182012905 ubox
11 25 0.004701326 ubox
11 31 0.982919040 ubox
12 30 0.983039889 ubox
12 42 0.005077811 ubox
12 43 0.003770024 ubox
12 52 0.119837804 ubox
13 23 0.054175672 ubox
13 29 0.972688177 ubox
13 42 0.004453919 ubox
13 47 0.084214859 ubox
13 51 0.109723842 ubox
14 22 0.068829395 ubox
14 26 0.082411122 ubox
14 41 0.006442878 ubox
14 46 0.090827824 ubox
15 21 0.065565119 ubox
15 25 0.076829923 ubox
15 28 0.954406721 ubox
15 40 0.006429085 ubox
16 27 0.970111413 ubox
16 39 0.006023039 ubox
17 26 0.970579542 ubox
17 42 0.018812978 ubox
17 43 0.090695100 ubox
18 41 0.018864498 ubox
18 42 0.090664890 ubox
18 43 0.016946128 ubox
19 41 0.084998692 ubox
19 42 0.016457578 ubox
19 43 0.017998318 ubox
19 44 0.150812066 ubox
19 47 0.006719452 ubox
20 30 0.010712896 ubox
20 41 0.026646390 ubox
20 42 0.020684581 ubox
20 43 0.154532006 ubox
20 46 0.006817377 ubox
21 29 0.011651907 ubox
21 35 0.003276291 ubox
21 38 0.016149304 ubox
21 41 0.021022646 ubox
21 42 0.154080964 ubox
22 28 0.013649654 ubox
22 34 0.003367078 ubox
22 37 0.015879651 ubox
22 40 0.026442128 ubox
23 27 0.011676276 ubox
23 39 0.026925686 ubox
23 40 0.151654359 ubox
24 31 0.004273389 ubox
24 39 0.151185049 ubox
25 30 0.004249672 ubox
25 35 0.107957411 ubox
25 38 0.124354117 ubox
25 41 0.008361850 ubox
26 34 0.117678626 ubox
26 36 0.067618549 ubox
26 37 0.080737158 ubox
26 39 0.012335653 ubox
26 40 0.011774589 ubox
26 45 0.003227909 ubox
27 33 0.117310233 ubox
27 35 0.066561986 ubox
27 38 0.010069078 ubox
27 42 0.003759526 ubox
28 32 0.105767661 ubox
28 38 0.067211237 ubox
28 41 0.005836233 ubox
29 37 0.084866013 ubox
29 40 0.007351818 ubox
30 36 0.090516773 ubox
30 39 0.007701992 ubox
30 45 0.004865213 ubox
31 35 0.081560598 ubox
31 38 0.007761379 ubox
31 44 0.004866470 ubox
32 37 0.007172296 ubox
34 41 0.005412568 ubox
35 40 0.005202297 ubox
36 42 0.031206980 ubox
36 43 0.040495563 ubox
36 52 0.055482180 ubox
36 53 0.042868379 ubox
36 57 0.004619094 ubox
36 63 0.028039514 ubox
37 41 0.028212070 ubox
37 42 0.039063425 ubox
37 51 0.054637196 ubox
37 52 0.042262355 ubox
37 62 0.027625338 ubox
38 61 0.015276561 ubox
39 47 0.031372850 ubox
39 48 0.025473118 ubox
39 49 0.039329128 ubox
39 50 0.047422360 ubox
39 51 0.011005976 ubox
39 52 0.005027481 ubox
39 54 0.005996468 ubox
39 63 0.067123859 ubox
39 68 0.705267672 ubox
40 46 0.033135586 ubox
40 47 0.028059612 ubox
40 48 0.040780341 ubox
40 49 0.050278933 ubox
40 50 0.012312501 ubox
40 51 0.006799982 ubox
40 53 0.006429221 ubox
40 57 0.010187039 ubox
40 62 0.096012758 ubox
40 67 0.931506165 ubox
41 45 0.032501880 ubox
41 56 0.037344065 ubox
41 61 0.124537510 ubox
41 65 0.011000703 ubox
41 66 0.964761893 ubox
42 55 0.039101459 ubox
42 56 0.012901995 ubox
42 60 0.128620662 ubox
42 61 0.009710665 ubox
42 64 0.011434885 ubox
42 65 0.964820120 ubox
42 66 0.013522303 ubox
43 55 0.013600619 ubox
43 60 0.014925123 ubox
43 64 0.954301390 ubox
43 65 0.013634228 ubox
44 58 0.254446716 ubox
45 57 0.255604712 ubox
45 59 0.049575012 ubox
45 62 0.710568385 ubox
46 56 0.217960260 ubox
46 58 0.043207403 ubox
46 61 0.581520035 ubox
51 61 0.412691257 ubox
52 60 0.432358193 ubox
52 61 0.284287501 ubox
52 65 0.039579862 ubox
52 66 0.057273917 ubox
53 60 0.293828212 ubox
53 64 0.039932859 ubox
53 65 0.057203902 ubox
55 63 0.091625607 ubox
56 62 0.089461352 ubox
56 67 0.004680528 ubox
57 61 0.041862045 ubox
57 64 0.019353718 ubox
57 66 0.005043675 ubox
58 63 0.022086650 ubox
58 67 0.003487716 ubox
59 66 0.003884616 ubox
61 67 0.008249961 ubox
62 66 0.012599807 ubox
7 35 0.9500000 lbox
8 34 0.9500000 lbox
9 33 0.9500000 lbox
10 32 0.9500000 lbox
11 31 0.9500000 lbox
12 30 0.9500000 lbox
13 29 0.9500000 lbox
15 28 0.9500000 lbox
16 27 0.9500000 lbox
17 26 0.9500000 lbox
39 68 0.9500000 lbox
40 67 0.9500000 lbox
41 66 0.9500000 lbox
42 65 0.9500000 lbox
43 64 0.9500000 lbox
45 62 0.9500000 lbox
46 61 0.9500000 lbox
showpage
end
%%EOF
