%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:49:16 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CYP4A11)
} def

/sequence { (\
GGGUGGUCAGAGAGAGGUAGGGGCACUCAGAGAUCCAGCAGGUGCUGCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.021313770 ubox
1 27 0.003166029 ubox
1 28 0.847882394 ubox
1 35 0.006320058 ubox
1 36 0.318796864 ubox
1 51 0.065744047 ubox
2 7 0.019274465 ubox
2 8 0.007468562 ubox
2 27 0.850676855 ubox
2 28 0.024140048 ubox
2 34 0.005733367 ubox
2 35 0.319082539 ubox
2 36 0.090802478 ubox
2 50 0.064844317 ubox
2 51 0.311228538 ubox
3 7 0.004884096 ubox
3 26 0.852019161 ubox
3 27 0.003424453 ubox
3 34 0.314221599 ubox
3 35 0.089778560 ubox
3 39 0.049237060 ubox
3 48 0.026794053 ubox
3 50 0.315122248 ubox
4 25 0.851557985 ubox
4 33 0.308188329 ubox
4 37 0.157215592 ubox
4 38 0.035937843 ubox
4 47 0.021325839 ubox
4 49 0.312974688 ubox
5 24 0.847356400 ubox
5 35 0.189964489 ubox
5 36 0.178868865 ubox
5 46 0.017439300 ubox
5 48 0.297730456 ubox
5 51 0.027963869 ubox
6 18 0.006259637 ubox
6 24 0.089828371 ubox
6 34 0.264340732 ubox
6 35 0.180858549 ubox
6 39 0.003963546 ubox
6 45 0.017631278 ubox
6 48 0.019183707 ubox
6 50 0.028276246 ubox
7 13 0.045898935 ubox
7 15 0.026228832 ubox
7 17 0.009456930 ubox
7 21 0.066768496 ubox
7 22 0.824476590 ubox
7 23 0.123636992 ubox
7 31 0.312980628 ubox
7 33 0.314357660 ubox
7 38 0.003959282 ubox
7 44 0.013164258 ubox
7 47 0.015399128 ubox
7 49 0.027376633 ubox
8 12 0.048791046 ubox
8 14 0.029836599 ubox
8 16 0.017128139 ubox
8 20 0.082332690 ubox
8 21 0.827772785 ubox
8 22 0.126285824 ubox
8 30 0.316061161 ubox
8 32 0.316191377 ubox
8 44 0.011740079 ubox
8 47 0.045593034 ubox
9 27 0.004088533 ubox
9 43 0.011120924 ubox
9 46 0.044733557 ubox
10 26 0.004282643 ubox
10 28 0.179003232 ubox
10 35 0.047498897 ubox
10 45 0.044148591 ubox
11 27 0.178995625 ubox
11 34 0.047467704 ubox
12 26 0.176742442 ubox
12 28 0.400321862 ubox
12 35 0.024498002 ubox
13 27 0.400787139 ubox
13 34 0.024472232 ubox
14 26 0.400417904 ubox
14 28 0.273414815 ubox
14 35 0.009687491 ubox
15 27 0.273990467 ubox
15 34 0.009664617 ubox
16 26 0.273731646 ubox
16 27 0.017577742 ubox
16 28 0.005928312 ubox
16 35 0.007991854 ubox
16 36 0.005236634 ubox
16 51 0.044322795 ubox
17 24 0.474042137 ubox
17 26 0.024553555 ubox
17 34 0.008059292 ubox
17 35 0.005285406 ubox
17 39 0.035242558 ubox
17 45 0.003490445 ubox
17 48 0.006306704 ubox
17 50 0.044699580 ubox
18 23 0.461995640 ubox
18 25 0.027745421 ubox
18 33 0.008087492 ubox
18 38 0.034245331 ubox
18 44 0.003523293 ubox
18 47 0.006414392 ubox
18 49 0.042388179 ubox
19 27 0.011676153 ubox
19 43 0.003483507 ubox
19 46 0.003847482 ubox
20 26 0.012942725 ubox
20 27 0.014239845 ubox
20 28 0.018039171 ubox
20 36 0.027481058 ubox
20 51 0.005524691 ubox
21 26 0.015904488 ubox
21 27 0.017620172 ubox
21 28 0.008392760 ubox
21 35 0.027648210 ubox
21 36 0.024085596 ubox
21 46 0.011444258 ubox
21 50 0.005563476 ubox
22 26 0.017293272 ubox
22 27 0.006584134 ubox
22 28 0.005789128 ubox
22 34 0.026016314 ubox
22 35 0.024115196 ubox
22 36 0.007509625 ubox
22 45 0.008143629 ubox
22 46 0.048979891 ubox
23 27 0.003774693 ubox
23 34 0.020519843 ubox
23 35 0.007581690 ubox
23 39 0.003692531 ubox
23 45 0.051163844 ubox
23 48 0.003237675 ubox
24 38 0.003690039 ubox
24 44 0.051862186 ubox
24 47 0.003241290 ubox
25 43 0.051846365 ubox
26 32 0.018254947 ubox
26 41 0.003347232 ubox
26 42 0.051707230 ubox
27 31 0.016522061 ubox
27 33 0.011574506 ubox
27 40 0.003826522 ubox
27 41 0.046223542 ubox
28 32 0.012377127 ubox
28 41 0.017585284 ubox
28 47 0.013706255 ubox
29 46 0.025799289 ubox
30 45 0.026592436 ubox
31 46 0.241917883 ubox
32 45 0.248432363 ubox
33 43 0.028781611 ubox
34 42 0.024803814 ubox
35 41 0.024812400 ubox
35 42 0.251473836 ubox
36 41 0.251194410 ubox
36 44 0.008433492 ubox
36 47 0.733694004 ubox
37 43 0.008364312 ubox
37 46 0.742474511 ubox
38 45 0.743612387 ubox
38 48 0.578702252 ubox
39 44 0.742549286 ubox
39 47 0.579372169 ubox
40 46 0.577945114 ubox
41 45 0.565278634 ubox
41 51 0.203902243 ubox
42 48 0.006145920 ubox
42 50 0.205677981 ubox
43 47 0.005768385 ubox
43 49 0.205447246 ubox
44 48 0.202174309 ubox
1 28 0.9500000 lbox
2 27 0.9500000 lbox
3 26 0.9500000 lbox
4 25 0.9500000 lbox
5 24 0.9500000 lbox
7 22 0.9500000 lbox
8 21 0.9500000 lbox
36 47 0.9500000 lbox
37 46 0.9500000 lbox
38 45 0.9500000 lbox
39 44 0.9500000 lbox
showpage
end
%%EOF
