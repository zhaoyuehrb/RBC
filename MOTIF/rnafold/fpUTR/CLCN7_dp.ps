%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:13:27 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CLCN7)
} def

/sequence { (\
GUCGCUCAUCACGUGGCCCCGUCGCGCGUCACGUGGCCGCCGGCGCGGGUCACGAGAACAAACACGGGGGCAGCCGGCGCUUCCCGGCCGGUGUCGCUCCGCGGCGGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.012661963 ubox
1 17 0.096394359 ubox
1 59 0.007843441 ubox
1 63 0.009813196 ubox
1 65 0.013195336 ubox
1 71 0.006519606 ubox
1 105 0.887638304 ubox
1 109 0.174967605 ubox
2 11 0.012501999 ubox
2 16 0.096632185 ubox
2 58 0.007740851 ubox
2 62 0.009525271 ubox
2 64 0.012826961 ubox
2 70 0.006521369 ubox
2 104 0.887911931 ubox
2 107 0.214204244 ubox
2 108 0.143875257 ubox
3 13 0.010135262 ubox
3 15 0.097626691 ubox
3 66 0.005793304 ubox
3 69 0.006516568 ubox
3 103 0.888586288 ubox
3 106 0.279430611 ubox
3 107 0.103782019 ubox
4 12 0.010396761 ubox
4 14 0.098056673 ubox
4 17 0.016537450 ubox
4 65 0.005825166 ubox
4 71 0.005658477 ubox
4 102 0.888568445 ubox
4 105 0.297566312 ubox
4 109 0.326702224 ubox
5 13 0.098072567 ubox
5 16 0.016496386 ubox
5 56 0.012756179 ubox
5 67 0.005382428 ubox
5 68 0.003894079 ubox
5 70 0.005658404 ubox
5 101 0.885538433 ubox
5 104 0.297194623 ubox
5 107 0.003197868 ubox
5 108 0.327350247 ubox
6 15 0.008726461 ubox
6 55 0.017592577 ubox
6 57 0.102198225 ubox
6 66 0.006004981 ubox
6 67 0.004092495 ubox
6 69 0.005640147 ubox
6 103 0.196392573 ubox
6 104 0.016093106 ubox
6 107 0.326785099 ubox
7 15 0.014680674 ubox
7 54 0.015008394 ubox
7 56 0.107095439 ubox
7 66 0.014652712 ubox
7 68 0.005600289 ubox
7 103 0.075826197 ubox
7 106 0.325465826 ubox
7 107 0.010413172 ubox
8 14 0.014716842 ubox
9 13 0.013632929 ubox
9 55 0.067483105 ubox
9 57 0.807665638 ubox
9 104 0.121657241 ubox
10 54 0.056998796 ubox
10 56 0.861252070 ubox
10 66 0.005689210 ubox
10 103 0.116265456 ubox
12 54 0.985071451 ubox
12 101 0.017826863 ubox
13 53 0.993817230 ubox
14 52 0.993712687 ubox
14 72 0.009566471 ubox
15 51 0.993860141 ubox
15 71 0.010626457 ubox
15 110 0.045599405 ubox
16 50 0.993593586 ubox
16 109 0.047813617 ubox
17 48 0.003325320 ubox
17 49 0.993909408 ubox
17 69 0.010859237 ubox
17 108 0.041429045 ubox
18 47 0.004564616 ubox
18 48 0.993896095 ubox
18 49 0.004429602 ubox
18 68 0.011171117 ubox
18 107 0.033843330 ubox
18 108 0.100444801 ubox
19 47 0.993762951 ubox
19 48 0.006235035 ubox
19 67 0.011184815 ubox
19 106 0.023934489 ubox
19 107 0.104046025 ubox
20 45 0.993339681 ubox
20 47 0.007576502 ubox
20 66 0.011196853 ubox
20 106 0.106761969 ubox
21 44 0.993860531 ubox
21 46 0.008499372 ubox
21 65 0.011202563 ubox
21 105 0.109410004 ubox
22 43 0.993525886 ubox
22 45 0.004196951 ubox
22 64 0.010863283 ubox
22 104 0.109377184 ubox
23 42 0.992965844 ubox
23 45 0.007613455 ubox
23 103 0.109379483 ubox
24 40 0.493309000 ubox
24 41 0.862351793 ubox
24 44 0.007764765 ubox
24 102 0.109372399 ubox
25 35 0.013633475 ubox
25 39 0.696662278 ubox
25 43 0.007579295 ubox
25 101 0.109172352 ubox
26 34 0.014425274 ubox
26 37 0.072163129 ubox
26 38 0.693374698 ubox
26 40 0.707266247 ubox
26 65 0.007382346 ubox
26 97 0.022801963 ubox
26 100 0.066216672 ubox
27 33 0.015525193 ubox
27 35 0.005452027 ubox
27 36 0.097266459 ubox
27 39 0.707182557 ubox
27 66 0.020036119 ubox
27 96 0.024963237 ubox
28 32 0.014599316 ubox
28 34 0.004894485 ubox
28 37 0.845708446 ubox
28 38 0.511498469 ubox
28 59 0.069050780 ubox
28 63 0.009328239 ubox
28 65 0.020363364 ubox
28 95 0.024891786 ubox
29 33 0.004303585 ubox
29 36 0.975514269 ubox
29 57 0.081314982 ubox
29 58 0.050765909 ubox
29 62 0.006479753 ubox
29 64 0.014784187 ubox
30 35 0.970792862 ubox
30 56 0.097435626 ubox
30 93 0.024927279 ubox
31 92 0.024941863 ubox
32 54 0.106462079 ubox
32 91 0.024878159 ubox
33 53 0.107066351 ubox
34 52 0.107051001 ubox
34 90 0.022096893 ubox
35 51 0.107061840 ubox
35 89 0.024915173 ubox
36 50 0.105011665 ubox
36 88 0.024915449 ubox
37 48 0.063109064 ubox
37 49 0.086492553 ubox
37 87 0.024915178 ubox
38 47 0.086812013 ubox
38 48 0.062490882 ubox
38 86 0.024824562 ubox
39 46 0.105313659 ubox
39 78 0.004872991 ubox
39 85 0.024211007 ubox
40 45 0.105133349 ubox
40 48 0.004431600 ubox
40 77 0.005245342 ubox
41 47 0.006238810 ubox
41 76 0.005246017 ubox
42 46 0.005901918 ubox
42 75 0.005246017 ubox
42 81 0.023087800 ubox
42 82 0.003304712 ubox
43 74 0.005245504 ubox
43 80 0.024314852 ubox
44 73 0.005241213 ubox
44 79 0.024325911 ubox
45 71 0.004767320 ubox
45 78 0.024321350 ubox
46 70 0.004777183 ubox
46 76 0.005795998 ubox
46 77 0.023613603 ubox
47 75 0.008181662 ubox
48 74 0.008154624 ubox
48 75 0.022528996 ubox
49 71 0.008748139 ubox
49 74 0.022375154 ubox
50 68 0.003928649 ubox
50 69 0.004642734 ubox
50 70 0.009405848 ubox
50 73 0.021099445 ubox
51 56 0.003670454 ubox
51 67 0.007633402 ubox
51 68 0.009914280 ubox
51 69 0.012066004 ubox
53 66 0.020328433 ubox
54 65 0.021480840 ubox
56 99 0.003221350 ubox
62 92 0.009382082 ubox
63 91 0.009673717 ubox
64 92 0.003177444 ubox
65 76 0.004056784 ubox
65 86 0.009822737 ubox
65 90 0.011200752 ubox
65 101 0.213368265 ubox
65 103 0.348520961 ubox
65 106 0.003653403 ubox
66 75 0.004124122 ubox
66 84 0.005582794 ubox
66 85 0.011802121 ubox
66 89 0.011377691 ubox
66 98 0.145274680 ubox
66 99 0.131160795 ubox
66 100 0.313596008 ubox
66 102 0.360004827 ubox
66 105 0.004615271 ubox
67 74 0.004121317 ubox
67 83 0.005630563 ubox
67 84 0.011760686 ubox
67 85 0.011127987 ubox
67 88 0.011285425 ubox
67 97 0.160750925 ubox
67 98 0.126604702 ubox
67 99 0.309631630 ubox
67 100 0.918023193 ubox
68 82 0.005648754 ubox
68 83 0.011708016 ubox
68 84 0.011180576 ubox
68 85 0.014874063 ubox
68 97 0.171407992 ubox
68 98 0.279996170 ubox
68 99 0.920172720 ubox
68 100 0.116254558 ubox
69 81 0.008267826 ubox
69 82 0.009293590 ubox
69 83 0.011200826 ubox
69 84 0.014952354 ubox
69 95 0.245865534 ubox
69 97 0.269061162 ubox
69 98 0.920767102 ubox
69 99 0.115806087 ubox
70 80 0.010301502 ubox
70 82 0.010994520 ubox
70 83 0.014946849 ubox
70 92 0.004055892 ubox
70 94 0.265375006 ubox
70 97 0.929638100 ubox
70 98 0.018322202 ubox
71 79 0.010327553 ubox
71 91 0.004104378 ubox
71 93 0.266762807 ubox
71 96 0.928749701 ubox
72 81 0.019689538 ubox
72 92 0.216474517 ubox
73 80 0.020232408 ubox
73 88 0.013221302 ubox
73 92 0.968751507 ubox
73 94 0.042602986 ubox
74 79 0.020178282 ubox
74 87 0.013291504 ubox
74 91 0.998879550 ubox
74 93 0.026755661 ubox
75 86 0.013294080 ubox
75 90 0.999295404 ubox
76 85 0.013289681 ubox
76 89 0.999311180 ubox
77 84 0.013187275 ubox
77 88 0.999305872 ubox
78 86 0.069973250 ubox
78 87 0.996794899 ubox
79 85 0.096752212 ubox
79 88 0.006230333 ubox
80 87 0.008401386 ubox
81 86 0.012437972 ubox
82 86 0.005131177 ubox
86 110 0.016748742 ubox
87 105 0.007523818 ubox
87 109 0.017653628 ubox
88 104 0.007536324 ubox
88 108 0.017641814 ubox
89 103 0.007515401 ubox
89 107 0.017582414 ubox
90 102 0.006091987 ubox
91 102 0.004322441 ubox
91 105 0.005337898 ubox
92 101 0.006090210 ubox
92 104 0.004827415 ubox
92 106 0.013959140 ubox
93 100 0.006221104 ubox
93 105 0.026906011 ubox
94 104 0.026988671 ubox
95 103 0.027403411 ubox
95 106 0.003371482 ubox
96 102 0.027634290 ubox
96 105 0.008382928 ubox
96 109 0.005223001 ubox
97 101 0.027434228 ubox
97 104 0.008387024 ubox
97 108 0.005210895 ubox
98 103 0.007611574 ubox
99 107 0.007920617 ubox
100 106 0.008033593 ubox
101 105 0.009242045 ubox
101 109 0.017851957 ubox
102 108 0.017930449 ubox
103 110 0.005683644 ubox
104 109 0.006144264 ubox
1 105 0.9500000 lbox
2 104 0.9500000 lbox
3 103 0.9500000 lbox
4 102 0.9500000 lbox
5 101 0.9500000 lbox
9 57 0.9500000 lbox
10 56 0.9500000 lbox
12 54 0.9500000 lbox
13 53 0.9500000 lbox
14 52 0.9500000 lbox
15 51 0.9500000 lbox
16 50 0.9500000 lbox
17 49 0.9500000 lbox
18 48 0.9500000 lbox
19 47 0.9500000 lbox
20 45 0.9500000 lbox
21 44 0.9500000 lbox
22 43 0.9500000 lbox
23 42 0.9500000 lbox
24 41 0.9500000 lbox
25 39 0.9500000 lbox
26 38 0.9500000 lbox
28 37 0.9500000 lbox
29 36 0.9500000 lbox
30 35 0.9500000 lbox
67 100 0.9500000 lbox
68 99 0.9500000 lbox
69 98 0.9500000 lbox
70 97 0.9500000 lbox
71 96 0.9500000 lbox
73 92 0.9500000 lbox
74 91 0.9500000 lbox
75 90 0.9500000 lbox
76 89 0.9500000 lbox
77 88 0.9500000 lbox
78 87 0.9500000 lbox
showpage
end
%%EOF
