%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:05:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCUGGGGGAGGGUAUAUAAGCCGAGUAGGCGACGGUGAGGUCGACGCCGGCCAAGACAGCACAGACAGAUUGACCUAUUGGGGUGUUUCGCGAGUGUGAGAGGGAAGCGCCGCGGCCUGUAUUUCUAGACCUGCCCUUCGCCUGGUUCGUGGCGCCUUGUGACCCCGGGCCCCUGCCGCCUGCAAGUCGGAAAUUGCGCUGUGCUCCUGUGCUACGGCCUGUGGCUGGACUGCCUGCUGCUGCCCAACUGGCU\
GGCAAG\
) } def
/len { sequence length } bind def

/coor [
[-37.38499832 33.33317566]
[-50.34529877 25.78131485]
[-63.30559921 18.22945404]
[-76.26589966 10.67759228]
[-89.22619629 3.12573051]
[-105.04522705 2.86311340]
[-112.14643860 -10.22970867]
[-125.10674286 -17.78157043]
[-138.06704712 -25.33343124]
[-151.02734375 -32.88529205]
[-164.16500854 -40.12420654]
[-177.47247314 -47.04600143]
[-190.77993774 -53.96780014]
[-204.08741760 -60.88959503]
[-217.39488220 -67.81139374]
[-213.71948242 -53.26864624]
[-221.30804443 -40.32980728]
[-235.79464722 -36.43899155]
[-248.84468079 -43.83470917]
[-252.95005798 -58.26197052]
[-245.74882507 -71.42032623]
[-231.38346863 -75.73929596]
[-244.15895081 -83.59976196]
[-256.93444824 -91.46023560]
[-269.84924316 -99.08966064]
[-282.89913940 -106.48558044]
[-298.72018433 -106.55850220]
[-305.97787476 -119.56523132]
[-319.02780151 -126.96115112]
[-332.07772827 -134.35707092]
[-345.12765503 -141.75299072]
[-358.17755127 -149.14891052]
[-371.22747803 -156.54483032]
[-384.27740479 -163.94073486]
[-400.09844971 -164.01365662]
[-407.35614014 -177.02040100]
[-420.40606689 -184.41630554]
[-435.46350098 -180.42742920]
[-448.59262085 -188.11383057]
[-452.30261230 -202.49339294]
[-465.35253906 -209.88929749]
[-478.40246582 -217.28521729]
[-491.45236206 -224.68113708]
[-504.50228882 -232.07705688]
[-517.63995361 -239.31596375]
[-530.86346436 -246.39683533]
[-550.98486328 -244.87387085]
[-560.40093994 -261.78326416]
[-573.79040527 -268.54498291]
[-589.59674072 -267.85928345]
[-597.46972656 -280.50308228]
[-610.85925293 -287.26483154]
[-624.24871826 -294.02655029]
[-637.63824463 -300.78829956]
[-629.12957764 -288.43505859]
[-618.89984131 -277.46453857]
[-613.06744385 -263.64486694]
[-612.34405518 -248.66230774]
[-616.81799316 -234.34504700]
[-625.94323730 -222.44003296]
[-638.60644531 -214.39991760]
[-653.26239014 -211.20576477]
[-668.12286377 -213.24729919]
[-681.37445068 -220.27542114]
[-691.40032959 -231.43257141]
[-696.97711182 -245.35736084]
[-697.42425537 -260.35067749]
[-692.68731689 -274.58309937]
[-683.34155273 -286.32034302]
[-668.48889160 -288.41757202]
[-682.52874756 -293.69781494]
[-695.46282959 -285.33026123]
[-710.66619873 -286.17330933]
[-722.32012939 -295.69439697]
[-726.08782959 -310.07986450]
[-740.12774658 -315.36010742]
[-754.16766357 -320.64035034]
[-768.20758057 -325.92059326]
[-784.28991699 -322.71282959]
[-794.90429688 -335.21350098]
[-789.13153076 -350.56301880]
[-772.91015625 -352.97109985]
[-762.92736816 -339.96051025]
[-748.88745117 -334.68026733]
[-734.84753418 -329.40002441]
[-720.80761719 -324.11978149]
[-708.49401855 -332.45727539]
[-693.45422363 -331.93914795]
[-681.46319580 -322.55468750]
[-677.24853516 -307.73773193]
[-663.20861816 -302.45748901]
[-654.30474854 -314.52899170]
[-663.49554443 -326.38351440]
[-672.68627930 -338.23803711]
[-680.39196777 -343.08264160]
[-681.91516113 -350.29028320]
[-690.96313477 -362.25415039]
[-700.01110840 -374.21801758]
[-709.05902100 -386.18191528]
[-724.43334961 -384.90335083]
[-738.04754639 -392.15991211]
[-745.55737305 -405.63604736]
[-744.56646729 -421.03155518]
[-735.39105225 -433.43380737]
[-720.95898438 -438.88525391]
[-705.87542725 -435.64639282]
[-694.95355225 -424.75073242]
[-691.67840576 -409.67501831]
[-697.09515381 -395.22985840]
[-688.04718018 -383.26599121]
[-678.99926758 -371.30209351]
[-669.95129395 -359.33822632]
[-660.83178711 -347.42880249]
[-651.64099121 -335.57427979]
[-642.45025635 -323.71975708]
[-630.87652588 -314.17779541]
[-617.48699951 -307.41607666]
[-604.09747314 -300.65432739]
[-590.70800781 -293.89260864]
[-575.85937500 -295.06195068]
[-567.02868652 -281.93447876]
[-553.63916016 -275.17276001]
[-544.29656982 -279.21502686]
[-534.05279541 -277.42657471]
[-526.31286621 -270.15792847]
[-523.78259277 -259.62036133]
[-510.55908203 -252.53948975]
[-505.83728027 -253.02963257]
[-500.75308228 -250.58055115]
[-497.10638428 -245.12698364]
[-484.05645752 -237.73106384]
[-471.00653076 -230.33514404]
[-457.95660400 -222.93922424]
[-444.90670776 -215.54330444]
[-430.66403198 -219.74835205]
[-417.32421875 -212.43374634]
[-413.01013184 -197.46623230]
[-399.96020508 -190.07031250]
[-385.07260132 -190.52639771]
[-376.88146973 -176.99066162]
[-363.83157349 -169.59474182]
[-350.78164673 -162.19882202]
[-337.73171997 -154.80290222]
[-324.68179321 -147.40698242]
[-311.63189697 -140.01107788]
[-298.58197021 -132.61515808]
[-283.69433594 -133.07124329]
[-275.50323486 -119.53549957]
[-262.45330811 -112.13957977]
[-259.00296021 -112.70391083]
[-255.10871887 -111.64466858]
[-251.52781677 -108.77155304]
[-249.07397461 -104.23571777]
[-236.29849243 -96.37525177]
[-223.52299500 -88.51477814]
[-210.47308350 -81.11885834]
[-197.16561890 -74.19706726]
[-183.85813904 -67.27526855]
[-170.55067444 -60.35346985]
[-157.24320984 -53.43167496]
[-154.55706787 -54.12145615]
[-151.43989563 -53.80580902]
[-148.26718140 -52.31685638]
[-145.46772766 -49.62344360]
[-143.47547913 -45.84559250]
[-130.51518250 -38.29373169]
[-117.55487823 -30.74187088]
[-104.59458160 -23.19000816]
[-89.70256042 -23.46755219]
[-81.67433929 -9.83456993]
[-68.71403503 -2.28270817]
[-55.75373459 5.26915359]
[-42.79343414 12.82101536]
[-29.83313560 20.37287712]
[-10.52287388 19.06804657]
[-0.84831101 36.77659988]
[12.28935146 44.01551056]
[25.42701340 51.25442123]
[38.56467438 58.49333191]
[51.74550247 65.65335083]
[64.96901703 72.73421478]
[78.19253540 79.81507874]
[103.64938354 59.34141159]
[143.78201294 72.07622528]
[158.67430115 70.28190613]
[173.56660461 68.48759460]
[188.45889282 66.69327545]
[195.89453125 53.07376862]
[209.92980957 46.45634460]
[225.16790771 49.38553619]
[235.74945068 60.73501587]
[237.60560608 76.14067078]
[230.02267456 89.67871857]
[215.91642761 96.14350128]
[200.71101379 93.04917145]
[190.25320435 81.58557129]
[175.36091614 83.37989044]
[160.46862793 85.17420197]
[145.57632446 86.96851349]
[144.05014038 101.89067078]
[158.27087402 106.66255951]
[172.49160767 111.43444824]
[186.71232605 116.20633698]
[200.93305969 120.97821808]
[215.18214417 125.66476440]
[229.45906067 130.26579285]
[243.40745544 122.83490753]
[258.50030518 127.52333832]
[265.78329468 141.54951477]
[260.93557739 156.59194946]
[246.83317566 163.72624207]
[231.84283447 158.71974182]
[224.85803223 144.54270935]
[210.58110046 139.94168091]
[203.27404785 140.87821960]
[196.16116333 135.19894409]
[181.94044495 130.42706299]
[167.71971130 125.65517426]
[153.49899292 120.88328552]
[139.27825928 116.11140442]
[135.08348083 122.32862091]
[126.69393158 134.76307678]
[122.49916077 140.98028564]
[132.24771118 152.38053894]
[141.99627686 163.78079224]
[151.74482727 175.18103027]
[161.49339294 186.58128357]
[176.34265137 192.04113770]
[178.73367310 206.74256897]
[188.48223877 218.14282227]
[204.11592102 223.09457397]
[207.37969971 239.16564941]
[194.91609192 249.82351685]
[179.54655457 244.10427856]
[177.08198547 227.89137268]
[167.33343506 216.49113464]
[153.18144226 211.84669495]
[150.09313965 196.32983398]
[140.34458923 184.92959595]
[130.59602356 173.52934265]
[120.84746552 162.12910461]
[111.09890747 150.72885132]
[100.65258789 149.70317078]
[91.07207489 146.63928223]
[82.73214722 141.84159851]
[75.92127228 135.67840576]
[70.83192444 128.55979919]
[67.55622101 120.91444397]
[66.08689880 113.16650391]
[66.32329559 105.71372986]
[68.08206177 98.90791321]
[71.11167145 93.03858948]
[57.88815308 85.95772552]
[44.66463852 78.87686157]
[35.65366745 77.59249115]
[31.32576561 71.63099670]
[18.18810272 64.39208221]
[5.05044031 57.15317154]
[-8.08722210 49.91426086]
[-18.30428314 53.52732086]
[-28.61475945 50.99074173]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 174]
[2 173]
[3 172]
[4 171]
[5 170]
[7 168]
[8 167]
[9 166]
[10 165]
[11 160]
[12 159]
[13 158]
[14 157]
[15 156]
[22 155]
[23 154]
[24 153]
[25 149]
[26 148]
[28 146]
[29 145]
[30 144]
[31 143]
[32 142]
[33 141]
[34 140]
[36 138]
[37 137]
[40 134]
[41 133]
[42 132]
[43 131]
[44 130]
[45 127]
[46 126]
[48 122]
[49 121]
[51 119]
[52 118]
[53 117]
[54 116]
[70 91]
[71 90]
[75 86]
[76 85]
[77 84]
[78 83]
[92 115]
[93 114]
[94 113]
[96 112]
[97 111]
[98 110]
[99 109]
[176 259]
[177 258]
[178 257]
[179 256]
[180 254]
[181 253]
[182 252]
[184 199]
[185 198]
[186 197]
[187 196]
[200 220]
[201 219]
[202 218]
[203 217]
[204 216]
[205 214]
[206 213]
[223 242]
[224 241]
[225 240]
[226 239]
[227 238]
[229 236]
[230 235]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
