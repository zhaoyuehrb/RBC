%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:00:48 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ABR)
} def

/sequence { (\
GGUCUCUUCGGGGGCCGCGGGGAAGGGUCGGCGCGGACGGAGCUCGGGGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.009908222 ubox
1 8 0.003880254 ubox
1 9 0.060036646 ubox
1 16 0.633627332 ubox
1 44 0.020304432 ubox
1 45 0.039312109 ubox
2 6 0.011261908 ubox
2 7 0.004501619 ubox
2 8 0.056888453 ubox
2 15 0.651268924 ubox
2 38 0.004941426 ubox
2 43 0.026962204 ubox
2 44 0.035164458 ubox
2 50 0.117840434 ubox
3 11 0.025273122 ubox
3 12 0.057704007 ubox
3 13 0.201055085 ubox
3 14 0.658344469 ubox
3 23 0.012421637 ubox
3 37 0.004927205 ubox
3 41 0.014565371 ubox
3 42 0.009748412 ubox
3 47 0.009747119 ubox
3 48 0.018195566 ubox
3 49 0.117570858 ubox
4 10 0.032015529 ubox
4 11 0.073224263 ubox
4 12 0.255446793 ubox
4 13 0.890213520 ubox
4 14 0.045862184 ubox
4 22 0.013282614 ubox
4 36 0.004848256 ubox
4 40 0.016107791 ubox
4 42 0.040482654 ubox
4 46 0.012401645 ubox
4 47 0.023301680 ubox
4 48 0.118087259 ubox
4 49 0.026689255 ubox
5 10 0.066598142 ubox
5 11 0.252800736 ubox
5 12 0.889988253 ubox
5 13 0.067378783 ubox
5 14 0.008717919 ubox
5 21 0.013276763 ubox
5 23 0.003499008 ubox
5 35 0.004574236 ubox
5 39 0.015539053 ubox
5 40 0.006229309 ubox
5 41 0.040661751 ubox
5 46 0.023435564 ubox
5 47 0.113546423 ubox
5 48 0.025400928 ubox
5 49 0.028835162 ubox
6 10 0.244541579 ubox
6 11 0.888361380 ubox
6 12 0.081622590 ubox
6 13 0.048903164 ubox
6 14 0.004230389 ubox
6 20 0.013290709 ubox
6 22 0.004245581 ubox
6 39 0.007455906 ubox
6 40 0.040540885 ubox
6 42 0.086125674 ubox
6 46 0.072782552 ubox
6 47 0.026745161 ubox
6 48 0.038704724 ubox
6 49 0.245654008 ubox
7 11 0.073655694 ubox
7 12 0.045369658 ubox
7 13 0.006426134 ubox
7 19 0.013049678 ubox
7 21 0.004255244 ubox
7 37 0.021943015 ubox
7 39 0.036592921 ubox
7 41 0.098243554 ubox
7 42 0.033808489 ubox
7 46 0.014164788 ubox
7 47 0.027688917 ubox
7 48 0.249543332 ubox
7 49 0.004219211 ubox
8 12 0.005498908 ubox
8 13 0.003684473 ubox
8 20 0.004252049 ubox
8 36 0.027934154 ubox
8 37 0.027501812 ubox
8 40 0.098546694 ubox
8 41 0.035769025 ubox
8 46 0.006723068 ubox
8 47 0.253797390 ubox
8 48 0.005138342 ubox
9 13 0.008306107 ubox
9 17 0.013497013 ubox
9 19 0.004346628 ubox
9 33 0.005037539 ubox
9 35 0.029594004 ubox
9 36 0.027743674 ubox
9 39 0.098999395 ubox
9 40 0.035700499 ubox
9 46 0.261237856 ubox
9 47 0.005217048 ubox
10 16 0.013549092 ubox
10 18 0.004341453 ubox
10 32 0.005036111 ubox
10 34 0.029409345 ubox
10 38 0.098121887 ubox
10 44 0.016934876 ubox
10 45 0.263406295 ubox
11 15 0.013332432 ubox
11 43 0.022150972 ubox
11 44 0.262848536 ubox
11 45 0.006713844 ubox
12 29 0.003337437 ubox
12 43 0.262776203 ubox
12 44 0.006892471 ubox
12 45 0.008829150 ubox
13 28 0.003358919 ubox
13 29 0.011490920 ubox
13 43 0.007096288 ubox
13 44 0.009249056 ubox
14 28 0.011530686 ubox
14 32 0.063042004 ubox
14 34 0.065412612 ubox
14 43 0.009479325 ubox
14 50 0.684873788 ubox
15 26 0.004468773 ubox
15 27 0.011496625 ubox
15 31 0.063097239 ubox
15 33 0.047175497 ubox
15 36 0.271061025 ubox
15 40 0.036527909 ubox
15 42 0.007542025 ubox
15 48 0.021741071 ubox
15 49 0.700965468 ubox
16 25 0.004601785 ubox
16 26 0.011452960 ubox
16 30 0.063102545 ubox
16 33 0.047866422 ubox
16 35 0.271834169 ubox
16 39 0.034189861 ubox
16 47 0.027588754 ubox
16 48 0.716288540 ubox
17 28 0.017597191 ubox
17 29 0.061657570 ubox
17 32 0.102987028 ubox
17 34 0.275780409 ubox
17 38 0.020577287 ubox
17 43 0.008665059 ubox
17 45 0.004107080 ubox
17 50 0.143696747 ubox
18 27 0.063917295 ubox
18 30 0.017194781 ubox
18 31 0.102930276 ubox
18 33 0.275998102 ubox
18 35 0.015172113 ubox
18 42 0.008673368 ubox
18 46 0.925036682 ubox
18 49 0.143354620 ubox
19 29 0.018597224 ubox
19 32 0.274198862 ubox
19 34 0.015469970 ubox
19 44 0.007160771 ubox
19 45 0.928160206 ubox
20 28 0.018317310 ubox
20 29 0.113243985 ubox
20 43 0.020192227 ubox
20 44 0.925155106 ubox
20 45 0.202782544 ubox
21 28 0.106718710 ubox
21 29 0.086775822 ubox
21 43 0.922896999 ubox
21 44 0.213977916 ubox
21 45 0.016999231 ubox
22 28 0.073957306 ubox
22 29 0.232268988 ubox
22 43 0.223816201 ubox
22 44 0.010650932 ubox
22 45 0.044564811 ubox
23 28 0.212894020 ubox
23 44 0.040670179 ubox
24 44 0.015434733 ubox
25 43 0.020829991 ubox
25 44 0.013607462 ubox
25 45 0.025421916 ubox
26 43 0.018056542 ubox
26 44 0.025380658 ubox
27 34 0.006616197 ubox
27 38 0.948670123 ubox
27 43 0.025449648 ubox
27 50 0.007673086 ubox
28 33 0.006252177 ubox
28 36 0.056716609 ubox
28 37 0.948729809 ubox
28 40 0.049190509 ubox
28 41 0.019117104 ubox
28 42 0.022330223 ubox
28 47 0.022563207 ubox
28 49 0.007583611 ubox
29 35 0.074219051 ubox
29 36 0.947514201 ubox
29 39 0.054482803 ubox
29 40 0.018162115 ubox
29 46 0.030801656 ubox
29 48 0.007100263 ubox
30 34 0.081903426 ubox
30 38 0.055071931 ubox
30 44 0.006919168 ubox
30 45 0.030991525 ubox
31 43 0.016862293 ubox
31 44 0.026646447 ubox
31 50 0.005691316 ubox
32 39 0.017137380 ubox
32 42 0.016949599 ubox
32 49 0.005765876 ubox
33 38 0.017124984 ubox
33 43 0.048970777 ubox
33 45 0.003254985 ubox
33 50 0.058057501 ubox
34 42 0.049079937 ubox
34 46 0.018579485 ubox
34 49 0.058466722 ubox
35 44 0.007188589 ubox
35 45 0.018993336 ubox
36 43 0.011866667 ubox
36 44 0.014908157 ubox
36 45 0.013092936 ubox
37 44 0.012402018 ubox
38 46 0.065740112 ubox
39 45 0.065790746 ubox
40 44 0.042624039 ubox
42 50 0.031109593 ubox
43 49 0.031506414 ubox
44 48 0.028393347 ubox
1 16 0.9500000 lbox
2 15 0.9500000 lbox
3 14 0.9500000 lbox
4 13 0.9500000 lbox
5 12 0.9500000 lbox
6 11 0.9500000 lbox
18 46 0.9500000 lbox
19 45 0.9500000 lbox
20 44 0.9500000 lbox
21 43 0.9500000 lbox
27 38 0.9500000 lbox
28 37 0.9500000 lbox
29 36 0.9500000 lbox
showpage
end
%%EOF
