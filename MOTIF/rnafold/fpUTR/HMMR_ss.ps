%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:43:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUCUUUCUUCGUGUUCCUGUGCGGGAUUGGUGUGCCCAGGGGUUUGGCUUUCCAAUUGGCUAACGCCGGGGUGGGUGGGGAAUGUGGGGAGAUUUGAAUUUGAAACCGGUAGGGAGUGAUAAUCCGCAUUCAGUUGUCGAGGAGUGCCAGUCACCUUCAGUUUCUGGAGCUGGCCGUCAAC\
) } def
/len { sequence length } bind def

/coor [
[172.69503784 352.70141602]
[177.98120117 338.66372681]
[188.37098694 327.84466553]
[202.18327332 321.99478149]
[217.18312073 322.06063843]
[230.94561768 328.03308105]
[223.11363220 315.24011230]
[215.28163147 302.44714355]
[207.44964600 289.65417480]
[199.61766052 276.86123657]
[191.78567505 264.06826782]
[183.95368958 251.27529907]
[170.34051514 252.52494812]
[157.45700073 247.75946045]
[147.84152222 237.85690308]
[143.41474915 224.71330261]
[145.09617615 210.87985229]
[152.61378479 199.06768799]
[145.00256348 186.14216614]
[137.39132690 173.21664429]
[129.55934143 160.42367554]
[121.50890350 147.76704407]
[113.45845795 135.11041260]
[105.40801239 122.45377350]
[97.35757446 109.79714203]
[90.70147705 105.21252441]
[89.27973175 96.85341644]
[81.44774628 84.06044769]
[73.61575317 71.26748657]
[65.78376770 58.47452164]
[50.62897873 59.92150879]
[36.40673447 54.66653442]
[25.91936874 43.80212784]
[21.20845032 29.52038193]
[23.15749741 14.67078018]
[31.32682228 2.19169331]
[23.49483299 -10.60127163]
[15.66284466 -23.39423752]
[-1.20389366 -24.49316597]
[-13.97139645 -35.31443787]
[-17.74422264 -51.44963455]
[-11.23052120 -66.50537109]
[-19.28096390 -79.16201019]
[-27.33140755 -91.81864166]
[-35.38185120 -104.47527313]
[-43.43229294 -117.13190460]
[-67.34876251 -119.76248932]
[-81.48579407 -138.91801453]
[-77.04484558 -162.04957581]
[-86.94712830 -173.31655884]
[-96.84941101 -184.58354187]
[-106.75168610 -195.85050964]
[-116.65396881 -207.11749268]
[-126.55625153 -218.38447571]
[-136.45854187 -229.65144348]
[-150.02757263 -226.19850159]
[-163.69427490 -228.92109680]
[-174.79817200 -237.23097229]
[-181.20278931 -249.45794678]
[-181.70668030 -263.18533325]
[-176.26838684 -275.72744751]
[-185.97579956 -287.16275024]
[-198.75962830 -288.99490356]
[-206.60893250 -298.74017334]
[-205.73246765 -310.82058716]
[-215.24215698 -322.42083740]
[-224.75183105 -334.02108765]
[-234.26150513 -345.62136841]
[-250.01158142 -346.92926025]
[-260.15982056 -359.04492188]
[-258.68545532 -374.78027344]
[-246.46319580 -384.79986572]
[-230.74429321 -383.15921021]
[-220.85450745 -370.83169556]
[-222.66123962 -355.13104248]
[-213.15156555 -343.53076172]
[-203.64189148 -331.93051147]
[-194.13221741 -320.33026123]
[-177.40817261 -315.04803467]
[-174.54049683 -296.87017822]
[-164.83308411 -285.43487549]
[-149.02354431 -288.72137451]
[-133.62290955 -283.56369019]
[-122.85771179 -271.27758789]
[-119.73246765 -255.14862061]
[-125.19155884 -239.55372620]
[-115.28927612 -228.28675842]
[-105.38699341 -217.01977539]
[-95.48471069 -205.75279236]
[-85.58242798 -194.48580933]
[-75.68014526 -183.21884155]
[-65.77786255 -171.95185852]
[-59.43209457 -174.31761169]
[-52.69415283 -175.16242981]
[-45.92438889 -174.43264771]
[-39.48681259 -172.15907288]
[-33.72949982 -168.45570374]
[-28.96580696 -163.51408386]
[-25.45729065 -157.59344482]
[-23.39937019 -151.00704956]
[-22.91044998 -144.10565186]
[-24.02514458 -137.25881958]
[-26.69197083 -130.83512878]
[-30.77565956 -125.18235016]
[-22.72521591 -112.52571869]
[-14.67477322 -99.86908722]
[-6.62433052 -87.21244812]
[1.42611241 -74.55581665]
[14.78421211 -74.96884155]
[26.69462013 -68.67131805]
[33.99068451 -57.21641922]
[34.67291260 -43.54396439]
[28.45581055 -31.22622490]
[36.28779984 -18.43325996]
[44.11978912 -5.64029551]
[58.94890976 -7.24110174]
[73.06054688 -2.22402382]
[83.63779449 8.46629524]
[88.54463196 22.74716187]
[86.75716400 37.80345535]
[78.57672882 50.64253235]
[86.40872192 63.43549728]
[94.24070740 76.22846222]
[102.07270050 89.02143097]
[110.01420593 101.74669647]
[118.06465149 114.40332794]
[126.11508942 127.05995941]
[134.16552734 139.71659851]
[142.21597290 152.37322998]
[147.92651367 155.78422546]
[150.63252258 160.81729126]
[150.31686401 165.60540771]
[157.92808533 178.53092957]
[165.53930664 191.45646667]
[182.05906677 191.14036560]
[196.40547180 199.14608765]
[204.71536255 213.20960999]
[204.80580139 229.45069885]
[196.74664307 243.44331360]
[204.57864380 256.23626709]
[212.41062927 269.02923584]
[220.24261475 281.82220459]
[228.07460022 294.61517334]
[235.90658569 307.40814209]
[243.73858643 320.20111084]
[253.47865295 325.84774780]
[255.52482605 335.62966919]
[265.80804443 346.55007935]
[276.09124756 357.47052002]
[286.37448120 368.39093018]
[296.65768433 379.31134033]
[300.91390991 380.42172241]
[304.24841309 382.61862183]
[306.43127441 385.47409058]
[307.39688110 388.52935791]
[307.23980713 391.35186768]
[316.74948120 402.95211792]
[326.25915527 414.55236816]
[335.76882935 426.15264893]
[345.27853394 437.75289917]
[354.78820801 449.35314941]
[369.50579834 457.76910400]
[365.49298096 474.24133301]
[348.55368042 474.94528198]
[343.18792725 458.86282349]
[333.67825317 447.26257324]
[324.16857910 435.66232300]
[314.65890503 424.06204224]
[305.14923096 412.46179199]
[295.63955688 400.86154175]
[285.73727417 389.59454346]
[275.45404053 378.67413330]
[265.17083740 367.75372314]
[254.88761902 356.83331299]
[244.60441589 345.91287231]
[246.74778748 360.75897217]
[242.86795044 375.24850464]
[233.59266663 387.03701782]
[220.42274475 394.21707153]
[205.48913574 395.62686157]
[191.20820618 391.03826904]
[179.89068604 381.19378662]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 140]
[12 139]
[18 134]
[19 133]
[20 132]
[21 129]
[22 128]
[23 127]
[24 126]
[25 125]
[27 124]
[28 123]
[29 122]
[30 121]
[36 115]
[37 114]
[38 113]
[42 108]
[43 107]
[44 106]
[45 105]
[46 104]
[49 92]
[50 91]
[51 90]
[52 89]
[53 88]
[54 87]
[55 86]
[61 81]
[62 80]
[65 78]
[66 77]
[67 76]
[68 75]
[147 175]
[148 174]
[149 173]
[150 172]
[151 171]
[156 170]
[157 169]
[158 168]
[159 167]
[160 166]
[161 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
