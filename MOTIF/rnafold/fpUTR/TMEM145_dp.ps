%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:42:43 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TMEM145)
} def

/sequence { (\
AUUGCCGGGCCAGUGCGGGAGCCGGAGCGGAGCCGGGGCCGGAGCGGGCGGA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 8 0.005745148 ubox
2 20 0.005847555 ubox
2 21 0.049990420 ubox
2 27 0.005214903 ubox
2 30 0.005214063 ubox
2 32 0.004521339 ubox
2 37 0.007324590 ubox
2 38 0.006547719 ubox
2 43 0.005814434 ubox
2 44 0.036838504 ubox
2 47 0.075967082 ubox
2 48 0.007741008 ubox
2 51 0.347064050 ubox
2 52 0.047007869 ubox
3 7 0.005747917 ubox
3 8 0.012165638 ubox
3 12 0.003302610 ubox
3 19 0.005694440 ubox
3 20 0.065760449 ubox
3 26 0.007125730 ubox
3 29 0.008007984 ubox
3 31 0.006019319 ubox
3 37 0.023140437 ubox
3 43 0.047695008 ubox
3 46 0.102777920 ubox
3 47 0.006100387 ubox
3 50 0.534841403 ubox
3 51 0.039045211 ubox
4 16 0.003532668 ubox
4 28 0.009038374 ubox
4 39 0.008314921 ubox
4 45 0.113869950 ubox
4 49 0.611484447 ubox
5 15 0.003264336 ubox
5 18 0.072367342 ubox
5 19 0.007947379 ubox
5 25 0.030879745 ubox
5 27 0.006790226 ubox
5 30 0.025009324 ubox
5 36 0.303200726 ubox
5 37 0.278636632 ubox
5 38 0.009913288 ubox
5 42 0.197612250 ubox
5 44 0.101598875 ubox
5 47 0.313272202 ubox
5 48 0.550526851 ubox
5 51 0.521762788 ubox
6 17 0.072551343 ubox
6 18 0.007868031 ubox
6 24 0.031646795 ubox
6 29 0.025110511 ubox
6 35 0.304351242 ubox
6 36 0.278958776 ubox
6 37 0.009755894 ubox
6 41 0.206188403 ubox
6 46 0.411277311 ubox
6 47 0.481105553 ubox
6 50 0.522095197 ubox
7 16 0.072395887 ubox
7 23 0.031696472 ubox
7 28 0.025093250 ubox
7 34 0.303314379 ubox
7 40 0.202570130 ubox
7 45 0.489333766 ubox
7 49 0.369563108 ubox
8 22 0.031659318 ubox
8 33 0.301875305 ubox
8 34 0.280432134 ubox
8 39 0.196420919 ubox
8 40 0.213337805 ubox
9 16 0.018817399 ubox
9 28 0.010388274 ubox
9 33 0.282023571 ubox
9 39 0.219396793 ubox
9 45 0.223245519 ubox
9 49 0.481740416 ubox
10 15 0.018916797 ubox
10 18 0.012329550 ubox
10 19 0.031044795 ubox
10 21 0.003163785 ubox
10 25 0.025308244 ubox
10 27 0.010334625 ubox
10 30 0.284572422 ubox
10 32 0.281208168 ubox
10 36 0.008312386 ubox
10 37 0.189872631 ubox
10 38 0.224868890 ubox
10 42 0.560045131 ubox
10 44 0.221315581 ubox
10 47 0.327529469 ubox
10 48 0.509708562 ubox
10 51 0.015760378 ubox
11 17 0.013461197 ubox
11 18 0.031137983 ubox
11 24 0.025408067 ubox
11 29 0.285962819 ubox
11 35 0.010189572 ubox
11 36 0.189536843 ubox
11 37 0.224500787 ubox
11 41 0.560463318 ubox
11 46 0.327190693 ubox
11 47 0.508034555 ubox
11 50 0.015759676 ubox
13 22 0.016401025 ubox
13 28 0.365832405 ubox
13 33 0.016688134 ubox
13 39 0.552083039 ubox
13 45 0.572366595 ubox
13 49 0.015659687 ubox
14 21 0.016321326 ubox
14 24 0.008039868 ubox
14 27 0.362926844 ubox
14 29 0.089860914 ubox
14 32 0.016283379 ubox
14 35 0.029575337 ubox
14 38 0.550203223 ubox
14 41 0.010114112 ubox
14 44 0.570267401 ubox
14 46 0.071931019 ubox
14 48 0.015641335 ubox
15 22 0.060186825 ubox
15 23 0.006779390 ubox
15 28 0.094995285 ubox
15 33 0.067833077 ubox
15 34 0.011823504 ubox
15 39 0.080089821 ubox
15 40 0.007074424 ubox
15 45 0.092297911 ubox
16 21 0.061436433 ubox
16 24 0.396438728 ubox
16 27 0.093627721 ubox
16 29 0.014273533 ubox
16 32 0.068136325 ubox
16 35 0.238003718 ubox
16 38 0.080097847 ubox
16 41 0.463844026 ubox
16 44 0.091942631 ubox
16 46 0.016053024 ubox
17 23 0.400102316 ubox
17 28 0.014251522 ubox
17 34 0.215754892 ubox
17 40 0.462169101 ubox
17 45 0.016042217 ubox
18 22 0.393653289 ubox
18 33 0.188848465 ubox
18 34 0.589946940 ubox
18 39 0.457038064 ubox
18 40 0.454717682 ubox
19 33 0.599312824 ubox
19 39 0.459388620 ubox
21 28 0.106948124 ubox
21 39 0.010120216 ubox
21 49 0.011712794 ubox
22 27 0.106628553 ubox
22 30 0.623004087 ubox
22 36 0.652343590 ubox
22 37 0.017828803 ubox
22 38 0.010938465 ubox
22 42 0.011883404 ubox
22 47 0.011309800 ubox
22 48 0.010553828 ubox
22 51 0.007552065 ubox
23 29 0.623126823 ubox
23 35 0.653186208 ubox
23 36 0.013402084 ubox
23 37 0.010778825 ubox
23 41 0.011935450 ubox
23 46 0.012523291 ubox
23 47 0.009209538 ubox
23 50 0.007574828 ubox
24 28 0.582937853 ubox
24 34 0.653239885 ubox
24 40 0.011941654 ubox
24 45 0.013552865 ubox
24 49 0.007490854 ubox
25 33 0.650816701 ubox
25 39 0.011868470 ubox
27 33 0.044266341 ubox
27 45 0.005423306 ubox
27 49 0.012401722 ubox
28 32 0.058224386 ubox
28 35 0.016392627 ubox
28 41 0.015490169 ubox
28 44 0.005387144 ubox
28 46 0.006881665 ubox
28 48 0.012413098 ubox
28 50 0.003246030 ubox
29 34 0.016388926 ubox
29 40 0.015560894 ubox
29 45 0.006898657 ubox
29 49 0.003190840 ubox
30 39 0.015500406 ubox
32 49 0.012982428 ubox
33 38 0.003192218 ubox
33 42 0.015650817 ubox
33 47 0.004369937 ubox
33 48 0.012843673 ubox
33 51 0.027127267 ubox
34 41 0.015826963 ubox
34 46 0.004830487 ubox
34 47 0.012637204 ubox
34 50 0.027215329 ubox
35 40 0.015696008 ubox
35 45 0.005207975 ubox
35 49 0.021298111 ubox
38 45 0.018900915 ubox
38 49 0.412201695 ubox
39 44 0.018868579 ubox
39 47 0.035578605 ubox
39 48 0.412155366 ubox
39 51 0.075236978 ubox
40 46 0.041287813 ubox
40 47 0.411586303 ubox
40 50 0.075706122 ubox
41 45 0.045375855 ubox
41 49 0.075621878 ubox
5 51 0.9500000 lbox
6 50 0.9500000 lbox
9 49 0.9500000 lbox
10 48 0.9500000 lbox
11 47 0.9500000 lbox
13 45 0.9500000 lbox
14 44 0.9500000 lbox
18 40 0.9500000 lbox
19 39 0.9500000 lbox
22 36 0.9500000 lbox
23 35 0.9500000 lbox
24 34 0.9500000 lbox
25 33 0.9500000 lbox
showpage
end
%%EOF
