%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:24:57 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (UBA2)
} def

/sequence { (\
CCCCACCCGCUUCCGGCCGCGGCUCGGUUCUCCCGCCUCCGCCUCCGCCGCGGCUCGUGGUUGUCCCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 60 0.008087649 ubox
2 15 0.004661139 ubox
2 59 0.007935762 ubox
2 60 0.023399768 ubox
3 15 0.005285614 ubox
3 16 0.003695772 ubox
3 59 0.017892152 ubox
3 60 0.330856602 ubox
4 15 0.007928974 ubox
4 59 0.333074803 ubox
4 63 0.707088363 ubox
5 58 0.333003774 ubox
5 61 0.216645532 ubox
5 62 0.696839617 ubox
5 64 0.119831509 ubox
6 16 0.006114747 ubox
6 53 0.008653955 ubox
6 57 0.328654112 ubox
6 60 0.243118749 ubox
6 63 0.127082597 ubox
7 15 0.011158127 ubox
7 16 0.035073979 ubox
7 52 0.006368984 ubox
7 53 0.238471995 ubox
7 59 0.236431627 ubox
7 60 0.778780659 ubox
8 15 0.075476443 ubox
8 52 0.239035102 ubox
8 57 0.230601006 ubox
8 59 0.782459086 ubox
8 63 0.059035788 ubox
8 68 0.030351570 ubox
9 14 0.076929812 ubox
9 51 0.239118216 ubox
9 54 0.202207557 ubox
9 56 0.235994450 ubox
9 58 0.783462329 ubox
9 61 0.156535198 ubox
9 62 0.045716417 ubox
9 64 0.180598623 ubox
9 67 0.027136035 ubox
9 69 0.048231852 ubox
10 50 0.238196804 ubox
10 53 0.202371355 ubox
10 57 0.773790953 ubox
10 60 0.166019569 ubox
10 63 0.189446921 ubox
10 68 0.048160212 ubox
11 15 0.003668969 ubox
11 52 0.200271350 ubox
11 53 0.003460530 ubox
11 59 0.163618378 ubox
11 60 0.017975338 ubox
12 52 0.016505651 ubox
12 53 0.014474166 ubox
12 59 0.023451680 ubox
12 60 0.059479061 ubox
13 52 0.019133137 ubox
13 53 0.005210095 ubox
13 59 0.069323502 ubox
13 60 0.185798204 ubox
14 47 0.234494052 ubox
14 50 0.202680018 ubox
14 52 0.005173492 ubox
14 57 0.215031880 ubox
14 59 0.184708629 ubox
14 63 0.035667161 ubox
15 43 0.006018904 ubox
15 46 0.236520586 ubox
15 49 0.206083467 ubox
15 51 0.003654048 ubox
15 55 0.852660425 ubox
15 56 0.309829122 ubox
15 58 0.088097155 ubox
15 62 0.035942070 ubox
16 42 0.006048163 ubox
16 45 0.236318549 ubox
16 48 0.206089894 ubox
16 51 0.004642149 ubox
16 54 0.947311526 ubox
16 55 0.034606276 ubox
16 61 0.036182239 ubox
17 41 0.005745343 ubox
17 47 0.204184702 ubox
17 50 0.005644415 ubox
17 53 0.948744950 ubox
17 60 0.036287354 ubox
18 41 0.011829962 ubox
18 47 0.025393278 ubox
18 52 0.948738762 ubox
18 59 0.036287157 ubox
19 40 0.011964523 ubox
19 42 0.304663046 ubox
19 46 0.032700155 ubox
19 48 0.006170709 ubox
19 51 0.948740961 ubox
19 58 0.036273123 ubox
20 41 0.305072370 ubox
20 47 0.006275526 ubox
20 50 0.948740552 ubox
20 57 0.036285407 ubox
21 37 0.020228393 ubox
21 39 0.004413693 ubox
21 40 0.304753419 ubox
21 43 0.072570182 ubox
21 46 0.006656813 ubox
21 49 0.948671568 ubox
21 55 0.005938565 ubox
21 56 0.035682336 ubox
22 36 0.021454064 ubox
22 37 0.003377227 ubox
22 38 0.005359402 ubox
22 39 0.304243657 ubox
22 42 0.072777907 ubox
22 45 0.006671221 ubox
22 48 0.948598274 ubox
22 54 0.035849032 ubox
22 55 0.004526347 ubox
23 35 0.022015339 ubox
23 41 0.072632666 ubox
23 47 0.941132027 ubox
23 53 0.036060930 ubox
24 52 0.035410861 ubox
25 35 0.318935914 ubox
25 41 0.487676383 ubox
25 47 0.105501143 ubox
25 50 0.035848035 ubox
26 32 0.016507312 ubox
26 33 0.216381663 ubox
26 34 0.357452099 ubox
26 37 0.270343207 ubox
26 38 0.008050446 ubox
26 39 0.004906360 ubox
26 40 0.489765703 ubox
26 43 0.644032256 ubox
26 44 0.130286815 ubox
26 45 0.037332962 ubox
26 46 0.259462251 ubox
26 49 0.035972190 ubox
27 31 0.010841899 ubox
27 32 0.218145916 ubox
27 33 0.355237236 ubox
27 36 0.271152527 ubox
27 37 0.008369127 ubox
27 38 0.004155745 ubox
27 39 0.488822957 ubox
27 42 0.645315052 ubox
27 43 0.131937052 ubox
27 44 0.029174004 ubox
27 45 0.260249884 ubox
27 48 0.035971235 ubox
28 35 0.262351424 ubox
28 41 0.622615126 ubox
28 47 0.035253354 ubox
34 41 0.150535489 ubox
35 40 0.152249754 ubox
35 42 0.308805369 ubox
35 46 0.008152693 ubox
36 41 0.310206929 ubox
39 53 0.004490508 ubox
40 47 0.011044378 ubox
40 52 0.004777099 ubox
41 46 0.057950179 ubox
41 48 0.008744460 ubox
41 51 0.004830264 ubox
42 47 0.009297189 ubox
42 50 0.004825375 ubox
48 60 0.003733376 ubox
49 59 0.003741224 ubox
50 58 0.003741760 ubox
50 69 0.008836237 ubox
51 57 0.003743456 ubox
51 68 0.008918247 ubox
52 56 0.003504697 ubox
52 67 0.008921855 ubox
53 66 0.008908347 ubox
56 63 0.009381259 ubox
56 68 0.074101811 ubox
57 62 0.008197860 ubox
57 67 0.079382791 ubox
57 69 0.367103141 ubox
58 68 0.369031618 ubox
59 65 0.006671141 ubox
59 66 0.095880684 ubox
59 67 0.370702015 ubox
59 70 0.058013386 ubox
60 64 0.004453205 ubox
60 65 0.100367754 ubox
60 66 0.368331810 ubox
60 69 0.060345349 ubox
61 68 0.058171563 ubox
62 68 0.026706272 ubox
63 67 0.034904104 ubox
63 69 0.069355153 ubox
64 68 0.065379992 ubox
4 63 0.9500000 lbox
5 62 0.9500000 lbox
7 60 0.9500000 lbox
8 59 0.9500000 lbox
9 58 0.9500000 lbox
10 57 0.9500000 lbox
15 55 0.9500000 lbox
16 54 0.9500000 lbox
17 53 0.9500000 lbox
18 52 0.9500000 lbox
19 51 0.9500000 lbox
20 50 0.9500000 lbox
21 49 0.9500000 lbox
22 48 0.9500000 lbox
23 47 0.9500000 lbox
26 43 0.9500000 lbox
27 42 0.9500000 lbox
28 41 0.9500000 lbox
showpage
end
%%EOF
