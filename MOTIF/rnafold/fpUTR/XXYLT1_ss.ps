%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:51:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUUUCAUGGCCGCCGCCUGGCGCCGGGGCUAAGUGGCCGCCGGCGUCCGGGUACCCGAGGGCUCUCCCGCGUUGCUGGCACCGCUGGCGCCGCGGUCUCGUAGCGC\
) } def
/len { sequence length } bind def

/coor [
[204.83673096 198.05766296]
[193.85656738 201.28489685]
[182.39823914 201.50152588]
[171.27337646 198.68388367]
[161.27217102 193.02354431]
[153.10726929 184.91427612]
[147.36296082 174.92466736]
[144.45343018 163.75833130]
[144.59284973 152.20423889]
[147.77964783 141.08103943]
[135.32263184 132.72503662]
[122.86562347 124.36903381]
[110.40861511 116.01302338]
[96.17251587 118.71113586]
[84.13944244 110.63950348]
[81.23538208 96.44398499]
[68.77836609 88.08798218]
[55.86063766 80.46352386]
[42.52510452 73.59594727]
[29.18957520 66.72837830]
[15.85404205 59.86080170]
[2.51851010 52.99322510]
[-10.91460228 46.31853485]
[-24.44250488 39.83811569]
[-37.97040939 33.35769653]
[-51.49831009 26.87727547]
[-65.02621460 20.39685631]
[-78.55411530 13.91643620]
[-92.17400360 7.63163233]
[-105.88304138 1.54375076]
[-119.59207916 -4.54413080]
[-133.30111694 -10.63201237]
[-149.54281616 -8.36504269]
[-159.41217041 -21.46190643]
[-152.75642395 -36.44967651]
[-136.42245483 -37.91021729]
[-127.21323395 -24.34104919]
[-113.50419617 -18.25316811]
[-99.79515839 -12.16528606]
[-86.08612061 -6.07740450]
[-78.58193970 -6.24154234]
[-72.07369995 0.38853285]
[-58.54579544 6.86895275]
[-45.01789093 13.34937286]
[-31.48998833 19.82979202]
[-17.96208572 26.31021118]
[-4.43418217 32.79063034]
[3.07160926 32.84281540]
[9.38608551 39.65769196]
[22.72161674 46.52526855]
[36.05714798 53.39284134]
[49.39268112 60.26041794]
[62.72821426 67.12799072]
[65.55172729 66.27503204]
[68.90653229 66.57760620]
[72.31933594 68.25336456]
[75.24402618 71.33122253]
[77.13437653 75.63096619]
[89.59138489 83.98697662]
[103.82748413 81.28886414]
[115.86055756 89.36049652]
[118.76461792 103.55601501]
[131.22163391 111.91201782]
[143.67864990 120.26802826]
[156.13565063 128.62403870]
[172.04226685 118.19311523]
[190.83334351 115.56380463]
[208.90130615 121.19987488]
[222.79489136 133.98220825]
[229.87838745 151.43075562]
[228.83161926 170.18557739]
[242.35952759 176.66600037]
[255.88743591 183.14642334]
[269.41534424 189.62684631]
[282.94323730 196.10725403]
[296.47113037 202.58767700]
[309.99905396 209.06809998]
[325.78759766 208.05220032]
[333.92309570 220.52870178]
[347.45098877 227.00912476]
[356.69625854 227.92562866]
[361.27127075 233.87617493]
[374.60678101 240.74375916]
[387.94232178 247.61132812]
[401.27786255 254.47889709]
[414.61337280 261.34646606]
[428.96319580 255.13223267]
[443.93539429 259.64523315]
[452.46057129 272.75460815]
[450.51339722 288.27047729]
[439.01324463 298.86676025]
[423.39016724 299.54019165]
[411.02090454 289.97277832]
[407.74581909 274.68200684]
[394.41027832 267.81442261]
[381.07473755 260.94686890]
[367.73922729 254.07928467]
[354.40368652 247.21171570]
[340.97058105 240.53701782]
[327.44265747 234.05659485]
[312.62170410 235.53602600]
[303.51861572 222.59600830]
[289.99072266 216.11558533]
[276.46282959 209.63516235]
[262.93490601 203.15473938]
[249.40701294 196.67433167]
[235.87910461 190.19390869]
[222.35121155 183.71348572]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 65]
[11 64]
[12 63]
[13 62]
[16 59]
[17 58]
[18 53]
[19 52]
[20 51]
[21 50]
[22 49]
[23 47]
[24 46]
[25 45]
[26 44]
[27 43]
[28 42]
[29 40]
[30 39]
[31 38]
[32 37]
[71 108]
[72 107]
[73 106]
[74 105]
[75 104]
[76 103]
[77 102]
[79 100]
[80 99]
[82 98]
[83 97]
[84 96]
[85 95]
[86 94]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
