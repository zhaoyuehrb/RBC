%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:01:10 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PSME2)
} def

/sequence { (\
UGGGGAGUGAAAGCGAAAGCCCGGGCGACUAGCCGGGAGACCAGAGAUCUAGCGACUGAAGCAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.011086054 ubox
1 15 0.031467663 ubox
1 23 0.331587281 ubox
1 31 0.003948451 ubox
1 35 0.005698221 ubox
1 43 0.458424409 ubox
1 51 0.174257055 ubox
1 54 0.045341073 ubox
1 58 0.041665488 ubox
1 63 0.105411580 ubox
2 8 0.016103612 ubox
2 14 0.041210628 ubox
2 21 0.020904983 ubox
2 22 0.436653545 ubox
2 30 0.004243520 ubox
2 34 0.014311033 ubox
2 42 0.510474957 ubox
2 49 0.040424993 ubox
2 50 0.190254503 ubox
2 53 0.059165883 ubox
2 57 0.065616774 ubox
2 62 0.116289609 ubox
3 20 0.025204743 ubox
3 21 0.437000142 ubox
3 22 0.120488674 ubox
3 29 0.004195741 ubox
3 30 0.011252630 ubox
3 33 0.014281647 ubox
3 34 0.005894746 ubox
3 41 0.509160497 ubox
3 42 0.213137903 ubox
3 48 0.038129700 ubox
3 49 0.191703391 ubox
3 50 0.052078602 ubox
3 56 0.066466402 ubox
3 57 0.225197453 ubox
4 20 0.437041809 ubox
4 21 0.121161146 ubox
4 22 0.031219801 ubox
4 29 0.012442144 ubox
4 33 0.005898911 ubox
4 41 0.214333222 ubox
4 42 0.132870668 ubox
4 48 0.179631183 ubox
4 49 0.053221757 ubox
4 50 0.176476170 ubox
4 56 0.236572037 ubox
4 57 0.024217483 ubox
5 20 0.121007277 ubox
5 21 0.031326391 ubox
5 41 0.132615392 ubox
5 48 0.040697532 ubox
5 49 0.182008576 ubox
5 56 0.025465490 ubox
6 30 0.014496641 ubox
6 48 0.177716275 ubox
6 50 0.074420758 ubox
6 57 0.115966134 ubox
7 14 0.445809956 ubox
7 20 0.045753524 ubox
7 26 0.013652199 ubox
7 29 0.014691574 ubox
7 41 0.044326362 ubox
7 48 0.031146166 ubox
7 49 0.076487435 ubox
7 53 0.245749028 ubox
7 56 0.117438136 ubox
7 62 0.321817723 ubox
7 65 0.040192215 ubox
8 13 0.438944068 ubox
8 15 0.257093105 ubox
8 19 0.046286834 ubox
8 23 0.008166273 ubox
8 25 0.013598787 ubox
8 27 0.004284097 ubox
8 28 0.013940780 ubox
8 40 0.045653970 ubox
8 43 0.171973623 ubox
8 47 0.047705149 ubox
8 51 0.028080575 ubox
8 52 0.238613062 ubox
8 54 0.033265467 ubox
8 55 0.108997934 ubox
8 58 0.007153275 ubox
8 61 0.320899542 ubox
8 63 0.058124485 ubox
8 64 0.036536884 ubox
9 14 0.267350162 ubox
9 22 0.011494718 ubox
9 26 0.007167063 ubox
9 42 0.173241192 ubox
9 49 0.154609406 ubox
9 50 0.018132567 ubox
9 53 0.054715373 ubox
9 57 0.007524571 ubox
9 62 0.064692763 ubox
10 48 0.150784460 ubox
12 50 0.040897864 ubox
12 57 0.325331090 ubox
13 20 0.525613022 ubox
13 26 0.003178479 ubox
13 49 0.040441193 ubox
13 53 0.080174185 ubox
13 56 0.327470274 ubox
13 62 0.141192114 ubox
13 65 0.083469905 ubox
14 19 0.536875226 ubox
14 23 0.018869027 ubox
14 25 0.003188239 ubox
14 52 0.080365500 ubox
14 54 0.332232549 ubox
14 58 0.015940026 ubox
14 61 0.141226825 ubox
14 64 0.084044828 ubox
15 22 0.019016745 ubox
15 49 0.028777284 ubox
15 53 0.331502370 ubox
15 57 0.013965014 ubox
16 48 0.028243804 ubox
18 50 0.277836054 ubox
18 57 0.092998162 ubox
19 49 0.279333392 ubox
19 53 0.031903532 ubox
19 56 0.092981201 ubox
19 62 0.033605497 ubox
19 65 0.023772153 ubox
20 36 0.008093912 ubox
20 37 0.690425285 ubox
20 52 0.031431902 ubox
20 61 0.033100096 ubox
20 64 0.023386822 ubox
21 35 0.007852232 ubox
21 36 0.702278348 ubox
21 37 0.543144966 ubox
22 35 0.701882048 ubox
22 36 0.544507734 ubox
22 54 0.008049269 ubox
22 58 0.022737722 ubox
23 30 0.004486245 ubox
23 34 0.632051481 ubox
23 42 0.005272026 ubox
23 49 0.012018224 ubox
23 53 0.010152116 ubox
23 57 0.032065429 ubox
24 29 0.005543907 ubox
24 33 0.552665490 ubox
24 34 0.769749218 ubox
24 41 0.004992493 ubox
24 56 0.033530620 ubox
24 57 0.035182314 ubox
25 29 0.006575221 ubox
25 33 0.829026577 ubox
25 53 0.008345773 ubox
25 56 0.036923326 ubox
25 62 0.051894009 ubox
25 65 0.020076365 ubox
26 32 0.883752272 ubox
26 52 0.008324275 ubox
26 54 0.055918909 ubox
26 61 0.051940447 ubox
26 64 0.020304889 ubox
27 34 0.003435412 ubox
27 49 0.007607839 ubox
27 53 0.056781595 ubox
28 48 0.007601534 ubox
29 36 0.004562113 ubox
29 46 0.008122123 ubox
29 52 0.057065715 ubox
29 61 0.018856662 ubox
30 35 0.004272456 ubox
30 45 0.008064088 ubox
30 51 0.057081945 ubox
30 58 0.048981904 ubox
30 60 0.015869706 ubox
31 50 0.057043197 ubox
31 57 0.054495026 ubox
32 49 0.056804726 ubox
32 53 0.014167410 ubox
32 56 0.054814717 ubox
32 62 0.004390094 ubox
33 52 0.014182562 ubox
33 61 0.004381399 ubox
34 54 0.055710182 ubox
34 58 0.004960968 ubox
35 42 0.421665458 ubox
35 49 0.010551109 ubox
35 50 0.014106421 ubox
35 53 0.060726699 ubox
35 57 0.007835852 ubox
36 41 0.421930133 ubox
36 42 0.065174559 ubox
36 48 0.009898322 ubox
36 49 0.014406114 ubox
36 50 0.082807046 ubox
36 56 0.008058940 ubox
36 57 0.003955708 ubox
37 41 0.064391226 ubox
37 48 0.009959950 ubox
37 49 0.086912600 ubox
37 56 0.004204376 ubox
38 48 0.086629025 ubox
38 50 0.255484824 ubox
38 57 0.012342386 ubox
39 49 0.263409420 ubox
39 56 0.012622793 ubox
40 48 0.250871480 ubox
42 58 0.188976859 ubox
43 50 0.161316894 ubox
43 57 0.189785489 ubox
44 49 0.171781065 ubox
44 56 0.189212066 ubox
45 57 0.141779649 ubox
46 56 0.145844148 ubox
48 55 0.212257450 ubox
48 59 0.131866416 ubox
49 54 0.216406187 ubox
49 58 0.140808562 ubox
49 61 0.016983301 ubox
49 64 0.351137275 ubox
50 58 0.054712850 ubox
50 60 0.016407786 ubox
50 63 0.354913487 ubox
51 57 0.070716271 ubox
52 56 0.070065435 ubox
52 62 0.747098037 ubox
52 65 0.152265571 ubox
53 61 0.747653828 ubox
53 64 0.153314481 ubox
56 64 0.248451279 ubox
57 63 0.250379885 ubox
58 62 0.246984769 ubox
1 43 0.9500000 lbox
2 42 0.9500000 lbox
3 41 0.9500000 lbox
13 20 0.9500000 lbox
14 19 0.9500000 lbox
21 37 0.9500000 lbox
22 36 0.9500000 lbox
24 34 0.9500000 lbox
25 33 0.9500000 lbox
26 32 0.9500000 lbox
52 62 0.9500000 lbox
53 61 0.9500000 lbox
showpage
end
%%EOF
