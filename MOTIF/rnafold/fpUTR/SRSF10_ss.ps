%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:39:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGACGCCUGGUGUUCUCGCGGGAAAGAACCGUUGCGCCCGACUUUGCGCGGAGGUAGGAGGGGGAAGUGGAGGCGGGAGUGAAGUCUCGCGAGAAGAGUCGGUUGCCGUAGCAGAGCCCUCUAGCUGUGUGUGUCUGAGGCUCGGCCGCCUGAGCCGCGGACGGUUUGCUGAGCCCGUUAGUGCGCCCGGCCGAGACACGCCGCCGCC\
) } def
/len { sequence length } bind def

/coor [
[93.76988983 379.88854980]
[93.76988983 364.88854980]
[90.62586212 358.19869995]
[93.88432312 349.66351318]
[94.10978699 334.66522217]
[85.91316986 325.76770020]
[85.97919464 313.26953125]
[94.81793213 303.87454224]
[95.26880646 288.88131714]
[95.71968842 273.88809204]
[96.17056274 258.89486694]
[96.62144470 243.90165710]
[97.07231903 228.90843201]
[97.41049957 213.91224670]
[97.63596344 198.91394043]
[97.86143494 183.91563416]
[98.08689880 168.91732788]
[98.31236267 153.91902161]
[92.25801086 149.49241638]
[84.86958313 162.54656982]
[84.31583405 177.53634644]
[72.53798676 186.82518005]
[57.83189774 183.87034607]
[50.55598831 170.75314331]
[55.83512878 156.71281433]
[69.95091248 151.63885498]
[80.14932251 140.63919067]
[74.09497070 136.21258545]
[59.87150955 140.97631836]
[45.64804459 145.74003601]
[35.01952362 157.45947266]
[20.49390411 154.16467285]
[6.27044153 158.92840576]
[-7.95302153 163.69212341]
[-22.17648506 168.45585632]
[-36.39994812 173.21958923]
[-50.62340927 177.98330688]
[-55.15653992 192.82347107]
[-67.56698608 202.13800049]
[-83.08267212 202.34527588]
[-95.73751068 193.36560059]
[-100.66545105 178.65182495]
[-95.97160339 163.86170959]
[-83.46084595 154.68235779]
[-67.94381714 154.64341736]
[-55.38713837 163.75984192]
[-41.16367340 158.99612427]
[-26.94021225 154.23239136]
[-12.71674824 149.46867371]
[1.50671446 144.70494080]
[15.73017788 139.94120789]
[25.34134293 128.56251526]
[40.88431931 131.51657104]
[55.10778046 126.75285339]
[69.33124542 121.98912048]
[66.41706085 108.70096588]
[68.56262970 96.36844635]
[74.67778015 86.70317841]
[83.17310333 80.76596069]
[77.04460144 67.07503510]
[70.91609955 53.38410568]
[64.78759766 39.69318008]
[58.65909576 26.00225449]
[52.53059387 12.31132698]
[37.48371506 9.01018047]
[27.38389778 -2.38486719]
[25.94751740 -17.36488152]
[33.51679993 -30.16503525]
[27.38829994 -43.85596085]
[14.33429337 -47.17750168]
[5.70313358 -57.26402664]
[4.47595358 -70.28708649]
[10.87774277 -81.47055054]
[4.95572233 -95.25204468]
[-0.96629882 -109.03354645]
[-6.88831997 -122.81504059]
[-12.91375160 -136.55163574]
[-19.04225349 -150.24256897]
[-31.74259758 -159.67716980]
[-29.88048363 -174.45492554]
[-36.00898743 -188.14584351]
[-42.13748550 -201.83677673]
[-53.88874817 -207.15626526]
[-58.71093369 -218.68688965]
[-54.52184296 -230.03596497]
[-60.44386292 -243.81745911]
[-66.46929169 -257.55407715]
[-72.59779358 -271.24499512]
[-86.19420624 -280.41394043]
[-84.78210449 -296.75216675]
[-69.81413269 -303.45233154]
[-56.68806458 -293.62185669]
[-58.90687180 -277.37350464]
[-52.77836990 -263.68255615]
[-47.17546844 -258.86108398]
[-46.66236496 -249.73948669]
[-40.74034500 -235.95799255]
[-26.13331795 -226.23283386]
[-28.44655991 -207.96527100]
[-22.31805992 -194.27435303]
[-16.18955803 -180.58341980]
[-3.92756367 -172.12808228]
[-5.35132599 -156.37106323]
[0.77717537 -142.68014526]
[6.38007545 -137.85867310]
[6.89317751 -128.73706055]
[12.81519890 -114.95556641]
[18.73721886 -101.17406464]
[24.65924072 -87.39257050]
[40.53164291 -81.83540344]
[47.61392975 -66.21070862]
[41.07922745 -49.98446274]
[47.20772934 -36.29353714]
[61.79660416 -33.41209030]
[72.01216888 -22.36192513]
[73.78288269 -7.23850060]
[66.22151947 6.18282604]
[72.35002136 19.87375259]
[78.47852325 33.56467819]
[84.60702515 47.25560760]
[90.73552704 60.94653320]
[96.86402893 74.63745880]
[128.97323608 87.27019501]
[124.45285797 128.74285889]
[139.44905090 129.08103943]
[154.44523621 129.41921997]
[169.44142151 129.75740051]
[183.41252136 122.33319855]
[195.96212769 130.35546875]
[210.95831299 130.69364929]
[225.95449829 131.03182983]
[240.95068359 131.37001038]
[255.94686890 131.70819092]
[264.59844971 128.77270508]
[271.16546631 132.16584778]
[286.15487671 132.72940063]
[301.14428711 133.29295349]
[316.13369751 133.85650635]
[331.12988281 134.19468689]
[346.12945557 134.30741882]
[361.12902832 134.42015076]
[376.12860107 134.53289795]
[391.12817383 134.64562988]
[406.12774658 134.75836182]
[421.12734985 134.87109375]
[436.12692261 134.98382568]
[427.62799072 122.62387848]
[431.84454346 108.22870636]
[445.66894531 102.40753937]
[458.91265869 109.45055389]
[461.81509399 124.16706848]
[452.23760986 135.71083069]
[467.18637085 136.94952393]
[482.13516235 138.18821716]
[497.08392334 139.42689514]
[512.03271484 140.66558838]
[526.98144531 141.90428162]
[541.57312012 134.41998291]
[555.20196533 143.54072571]
[553.84771729 159.88386536]
[538.90356445 166.63697815]
[525.74273682 156.85305786]
[510.79400635 155.61436462]
[495.84524536 154.37567139]
[480.89645386 153.13697815]
[465.94769287 151.89828491]
[450.99893188 150.65960693]
[436.01419067 149.98341370]
[421.01458740 149.87066650]
[406.01501465 149.75793457]
[391.01544189 149.64520264]
[376.01586914 149.53247070]
[361.01629639 149.41973877]
[346.01672363 149.30699158]
[331.01715088 149.19425964]
[327.04556274 151.84928894]
[321.36364746 152.03652954]
[315.57012939 148.84591675]
[300.58071899 148.28236389]
[285.59130859 147.71881104]
[270.60189819 147.15525818]
[255.60868835 146.70439148]
[240.61250305 146.36619568]
[225.61631775 146.02801514]
[210.62013245 145.68983459]
[195.62394714 145.35165405]
[182.72546387 152.80004883]
[169.10324097 144.75358582]
[154.10705566 144.41540527]
[139.11087036 144.07722473]
[124.11467743 143.73904419]
[113.31066895 154.14450073]
[113.08520508 169.14279175]
[112.85973358 184.14109802]
[112.63426971 199.13940430]
[112.40880585 214.13771057]
[115.40924072 222.76698303]
[112.06554413 229.35931396]
[111.61466217 244.35253906]
[111.16378784 259.34576416]
[110.71290588 274.33898926]
[110.26203156 289.33221436]
[109.81114960 304.32543945]
[118.90894318 320.33435059]
[109.10809326 334.89068604]
[108.88262177 349.88897705]
[108.76988983 364.88854980]
[108.76988983 379.88854980]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 208]
[2 207]
[4 206]
[5 205]
[8 203]
[9 202]
[10 201]
[11 200]
[12 199]
[13 198]
[14 196]
[15 195]
[16 194]
[17 193]
[18 192]
[28 55]
[29 54]
[30 53]
[32 51]
[33 50]
[34 49]
[35 48]
[36 47]
[37 46]
[59 122]
[60 121]
[61 120]
[62 119]
[63 118]
[64 117]
[68 113]
[69 112]
[73 109]
[74 108]
[75 107]
[76 106]
[77 104]
[78 103]
[80 101]
[81 100]
[82 99]
[85 97]
[86 96]
[87 94]
[88 93]
[124 191]
[125 190]
[126 189]
[127 188]
[129 186]
[130 185]
[131 184]
[132 183]
[133 182]
[135 181]
[136 180]
[137 179]
[138 178]
[139 175]
[140 174]
[141 173]
[142 172]
[143 171]
[144 170]
[145 169]
[146 168]
[152 167]
[153 166]
[154 165]
[155 164]
[156 163]
[157 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
