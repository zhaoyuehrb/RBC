%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:08:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCACAGCCGCUGACGCGUCGGGAGGCGGAGCCUAGGGAAGCAAAUUCUCCUGGCGGCCUCCGUUCAGACGCGGCAGCUGUGACCCACCUGCCUCCUCCGCAGAGCA\
) } def
/len { sequence length } bind def

/coor [
[166.55442810 211.11920166]
[173.41456604 197.58352661]
[163.69798279 186.15602112]
[153.98141479 174.72850037]
[144.26483154 163.30099487]
[134.54824829 151.87347412]
[124.83166504 140.44596863]
[110.69275665 135.76190186]
[107.64793396 120.23645020]
[97.93135071 108.80893707]
[93.98680115 107.95831299]
[90.47223663 105.29592133]
[88.22208405 101.07363129]
[87.91686249 95.92179108]
[79.24320984 83.68382263]
[70.56954956 71.44586182]
[61.89589691 59.20790100]
[53.22224426 46.96994019]
[44.54858780 34.73197556]
[23.50817108 27.27646255]
[21.48037338 5.79034328]
[11.43251038 -5.34700060]
[1.38464653 -16.48434448]
[-8.66321754 -27.62168884]
[-18.71108055 -38.75903320]
[-28.75894547 -49.89637756]
[-39.83468628 -49.84169388]
[-48.87728500 -55.84562683]
[-52.95487595 -65.66541290]
[-50.91154861 -75.87408447]
[-60.28847122 -87.58191681]
[-69.66539001 -99.28974915]
[-85.12846375 -101.16891479]
[-94.47120667 -113.17589569]
[-92.58442688 -127.90599060]
[-101.96134186 -139.61381531]
[-111.33826447 -151.32165527]
[-120.71518707 -163.02949524]
[-130.09210205 -174.73731995]
[-145.81585693 -177.92221069]
[-153.00085449 -192.26637268]
[-146.13542175 -206.76620483]
[-130.48609924 -210.29867554]
[-118.05772400 -200.15397644]
[-118.38427734 -184.11424255]
[-109.00735474 -172.40640259]
[-99.63043213 -160.69857788]
[-90.25350952 -148.99073792]
[-80.87659454 -137.28291321]
[-66.09005737 -135.90664673]
[-56.41374588 -124.16681671]
[-57.95755768 -108.66667175]
[-48.58063889 -96.95883942]
[-39.20371628 -85.25100708]
[-20.76485825 -79.74904633]
[-17.62160110 -59.94424057]
[-7.57373714 -48.80689621]
[2.47412658 -37.66955185]
[12.52199078 -26.53220940]
[22.56985474 -15.39486504]
[32.61771774 -4.25752068]
[40.73453522 -5.58728361]
[48.78464508 -3.48455262]
[55.36314392 1.76349378]
[59.28979492 9.31406593]
[59.82038116 17.90344048]
[56.78655243 26.05832291]
[65.46020508 38.29628372]
[74.13385773 50.53424835]
[82.80751801 62.77220917]
[91.48117065 75.01016998]
[100.15482330 87.24813080]
[109.35886383 99.09235382]
[119.07544708 110.51986694]
[133.90934753 116.02130890]
[136.25918579 130.72938538]
[145.97576904 142.15690613]
[155.69233704 153.58441162]
[165.40892029 165.01193237]
[175.12550354 176.43943787]
[184.84208679 187.86695862]
[199.30464172 183.27235413]
[214.38380432 184.56144714]
[227.78440857 191.50677490]
[237.47874451 203.02229309]
[242.01336670 217.33320618]
[240.72695923 232.24932861]
[233.84657288 245.50033569]
[243.56315613 256.92785645]
[253.27973938 268.35537720]
[262.99630737 279.78289795]
[278.63134766 279.49993896]
[290.75775146 289.37332153]
[293.64987183 304.74114990]
[285.94207764 318.34716797]
[271.27377319 323.76705933]
[256.57089233 318.44171143]
[248.77569580 304.88558960]
[251.56880188 289.49945068]
[241.85221863 278.07196045]
[232.13563538 266.64443970]
[222.41905212 255.21691895]
[208.23419189 259.87725830]
[193.30529785 258.74868774]
[179.90966797 251.97210693]
[170.10264587 240.55239868]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 81]
[3 80]
[4 79]
[5 78]
[6 77]
[7 76]
[9 74]
[10 73]
[14 72]
[15 71]
[16 70]
[17 69]
[18 68]
[19 67]
[21 61]
[22 60]
[23 59]
[24 58]
[25 57]
[26 56]
[30 54]
[31 53]
[32 52]
[35 49]
[36 48]
[37 47]
[38 46]
[39 45]
[88 102]
[89 101]
[90 100]
[91 99]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
