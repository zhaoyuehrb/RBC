%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:21:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGCCGCCGCCGCUCCCGAGGCCCCUGCCGCCGCCGCUCCCGCUGCUGUCGCCGCGCAGAGCCGGAGCAGGAGCCACGGCCGAGAGGAGGGAGGAGGAGGAGGAGGAGGUGGAGGAGGUGGAGGAGGUGGAGGAGGCGCCGGACCGGGGGGGAUAGAUUCCCAGAAGUGGGAUAACUGGAUCAGAGGGUGAUUACCCUGUGUAUAAGAGUAUGUGUCUCACUGCACCUUCAAUGGCAUUGAGUAGAUCGUCAGU\
AUUUAAACAGAUCACAUC\
) } def
/len { sequence length } bind def

/coor [
[60.72719955 105.25843048]
[45.75184250 104.39897156]
[30.77648544 103.53952026]
[15.80112743 102.68006897]
[0.82576978 101.82061005]
[-14.14958763 100.96115875]
[-28.37041283 107.89504242]
[-40.63345337 99.44121552]
[-55.60881042 98.58176422]
[-69.82963562 105.51564026]
[-82.09267426 97.06182098]
[-97.06803131 96.20236969]
[-112.04338837 95.34291077]
[-127.01874542 94.48345947]
[-141.99411011 93.62400818]
[-156.21493530 100.55788422]
[-168.47796631 92.10406494]
[-183.45332336 91.24460602]
[-193.30860901 103.08435822]
[-208.07321167 106.80725861]
[-222.03376770 101.18881989]
[-229.91465759 88.57814026]
[-244.89001465 87.71868134]
[-259.86538696 86.85923004]
[-274.84542847 86.08563995]
[-289.82965088 85.39794159]
[-304.81387329 84.71024323]
[-313.49230957 87.43521881]
[-319.96566772 83.92778015]
[-334.94100952 83.06832886]
[-349.91638184 82.20887756]
[-364.89172363 81.34941864]
[-379.86709595 80.48996735]
[-394.08792114 87.42385101]
[-406.35095215 78.97002411]
[-421.32632446 78.11057281]
[-437.60098267 86.76222229]
[-451.87243652 76.52260590]
[-466.85665894 75.83490753]
[-481.84088135 75.14720154]
[-496.82510376 74.45950317]
[-508.44601440 84.83218384]
[-523.63232422 83.92131042]
[-533.44952393 72.77863312]
[-548.43371582 72.09093475]
[-562.57409668 79.18740845]
[-574.93328857 70.87474060]
[-589.91748047 70.18704224]
[-604.05792236 77.28351593]
[-616.41705322 68.97084808]
[-631.40130615 68.28314972]
[-645.54168701 75.37962341]
[-657.90081787 67.06696320]
[-672.88507080 66.37926483]
[-678.28863525 78.39343262]
[-687.42285156 87.84149933]
[-699.19049072 93.61956787]
[-712.18841553 95.06276703]
[-724.87493896 92.02165985]
[-735.75268555 84.87740326]
[-743.54534912 74.49413300]
[-747.34722900 62.11446762]
[-762.31176758 61.08337021]
[-777.27630615 60.05227280]
[-792.24078369 59.02117920]
[-804.09649658 69.12467194]
[-819.25793457 67.86582184]
[-828.81701660 56.50097656]
[-843.78155518 55.46987915]
[-858.26794434 63.15597153]
[-872.02203369 54.22526550]
[-870.89477539 37.86491013]
[-856.04577637 30.90503311]
[-842.75042725 40.50535965]
[-827.78594971 41.53645706]
[-816.75842285 31.59008408]
[-801.56762695 32.42258835]
[-791.20971680 44.05665970]
[-776.24517822 45.08775330]
[-761.28063965 46.11885071]
[-746.31616211 47.14994812]
[-738.36022949 32.20929718]
[-724.61798096 22.23174095]
[-707.83880615 19.27365875]
[-691.40631104 23.98095131]
[-678.65576172 35.44878006]
[-672.19738770 51.39503479]
[-657.21313477 52.08273315]
[-644.14453125 44.93706894]
[-630.71356201 53.29892731]
[-615.72937012 53.98662567]
[-602.66076660 46.84096146]
[-589.22979736 55.20281601]
[-574.24560547 55.89051437]
[-561.17694092 48.74485397]
[-547.74603271 57.10670853]
[-532.76177979 57.79440689]
[-521.96527100 47.59779739]
[-506.75933838 48.08176422]
[-496.13742065 59.47527695]
[-481.15319824 60.16297913]
[-466.16894531 60.85067749]
[-451.18472290 61.53837585]
[-442.06170654 53.63076019]
[-429.59564209 54.05790329]
[-420.46685791 63.13521194]
[-405.49151611 63.99466705]
[-392.34182739 56.99931335]
[-379.00762939 65.51461029]
[-364.03228760 66.37406158]
[-349.05691528 67.23352051]
[-334.08157349 68.09297180]
[-319.10620117 68.95242310]
[-304.12615967 69.72601318]
[-289.14193726 70.41371155]
[-274.15771484 71.10140991]
[-267.35748291 68.27944183]
[-259.00592041 71.88387299]
[-244.03056335 72.74332428]
[-229.05520630 73.60277557]
[-219.78332520 61.97651291]
[-205.27165222 57.99213028]
[-191.02990723 63.37974167]
[-182.59387207 76.26924896]
[-167.61851501 77.12870789]
[-154.46882629 70.13334656]
[-141.13465881 78.64864349]
[-126.15929413 79.50810242]
[-111.18393707 80.36755371]
[-96.20858002 81.22701263]
[-81.23322296 82.08646393]
[-68.08353424 75.09111023]
[-54.74935532 83.60640717]
[-39.77399826 84.46585846]
[-26.62431145 77.47050476]
[-13.29013348 85.98580170]
[1.68522382 86.84525299]
[16.66058159 87.70470428]
[31.63593864 88.56416321]
[46.61129761 89.42361450]
[61.58665466 90.28307343]
[66.93737793 75.37832642]
[78.04330444 63.23389053]
[93.53638458 56.04928589]
[111.22226715 55.36565018]
[128.38938904 61.76326370]
[142.22468567 74.70094299]
[150.27215576 92.53280640]
[164.14674377 86.83229828]
[178.02133179 81.13179779]
[188.98643494 70.89623260]
[195.62718201 57.44631195]
[202.26794434 43.99639130]
[208.90870667 30.54647255]
[205.14160156 14.95197105]
[215.09849548 2.37263608]
[231.14132690 2.45825744]
[240.96339417 15.14315319]
[237.03004456 30.69655800]
[222.35862732 37.18722916]
[215.71786499 50.63714981]
[209.07710266 64.08706665]
[202.43635559 77.53698730]
[207.13171387 83.38537598]
[221.95675659 81.10113525]
[216.52241516 95.08214569]
[221.21777344 100.93053436]
[235.78506470 97.35364532]
[250.35235596 93.77675629]
[264.91964722 90.19986725]
[279.48693848 86.62297821]
[294.05422974 83.04608917]
[308.62152100 79.46920013]
[323.18878174 75.89231110]
[337.75607300 72.31542969]
[352.25970459 68.48854065]
[366.69537354 64.41279602]
[381.13101196 60.33705521]
[385.07214355 43.17857742]
[397.11605835 30.46038628]
[413.86294556 25.64076233]
[430.65182495 29.96671867]
[442.85787964 42.15292358]
[457.19628906 37.74724960]
[468.11526489 26.29794121]
[482.55371094 29.95583344]
[496.89212036 25.55016136]
[511.23056030 21.14448738]
[525.56896973 16.73881531]
[539.90734863 12.33314133]
[550.67242432 -0.03802267]
[566.71472168 3.36435866]
[571.53137207 19.04020691]
[560.16735840 30.86355400]
[544.31304932 26.67155266]
[529.97460938 31.07722664]
[515.63623047 35.48289871]
[501.29782104 39.88857269]
[486.95938110 44.29424667]
[477.06600952 55.42843246]
[461.60195923 52.08566284]
[447.26354980 56.49133682]
[445.79016113 68.99804688]
[439.68478394 80.06555176]
[429.81893921 88.04122162]
[417.62854004 91.71898651]
[404.90505981 90.52165222]
[393.53213501 84.59114075]
[385.20675659 74.77271271]
[370.77111816 78.84845734]
[356.33544922 82.92420197]
[354.31118774 85.76820374]
[350.82601929 87.78854370]
[346.27481079 88.31677246]
[341.33297729 86.88271332]
[326.76568604 90.45960236]
[312.19839478 94.03649139]
[297.63110352 97.61338043]
[283.06381226 101.19026947]
[268.49652100 104.76715851]
[253.92924500 108.34404755]
[239.36195374 111.92092896]
[224.79466248 115.49781799]
[208.86366272 117.23755646]
[195.59727478 112.87350464]
[186.95962524 104.57614136]
[183.72184753 95.00638580]
[169.84725952 100.70689392]
[155.97265625 106.40739441]
[153.66012573 121.22806549]
[165.13850403 130.88450623]
[176.61686707 140.54095459]
[188.09524536 150.19740295]
[199.57362366 159.85383606]
[215.58653259 165.42367554]
[214.66717529 182.35267639]
[198.14526367 186.15567017]
[189.91717529 171.33221436]
[178.43879700 161.67576599]
[166.96043396 152.01933289]
[155.48205566 142.36288452]
[144.00367737 132.70643616]
[131.93957520 141.62033081]
[137.79878235 155.42864990]
[144.00845337 162.07550049]
[143.64500427 169.42903137]
[149.34552002 183.30361938]
[155.04602051 197.17820740]
[160.74652100 211.05279541]
[175.92056274 210.71640015]
[190.19010925 215.88787842]
[201.62535095 225.86784363]
[208.67974854 239.30659485]
[210.39926147 254.38662720]
[206.55133057 269.06851196]
[197.65637207 281.36663818]
[184.91734314 289.61779785]
[170.05708313 292.70608521]
[155.08534241 290.21380615]
[142.02691650 282.47805786]
[132.64785767 270.54501343]
[128.21658325 256.02850342]
[129.33241272 240.89183044]
[135.84442139 227.18205261]
[146.87193298 216.75331116]
[141.17143250 202.87872314]
[135.47091675 189.00413513]
[129.77041626 175.12953186]
[123.99047089 161.28785706]
[118.13126373 147.47953796]
[100.20838165 148.58317566]
[83.83901978 143.43438721]
[71.02837372 133.25296021]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 141]
[2 140]
[3 139]
[4 138]
[5 137]
[6 136]
[8 134]
[9 133]
[11 131]
[12 130]
[13 129]
[14 128]
[15 127]
[17 125]
[18 124]
[22 120]
[23 119]
[24 118]
[25 116]
[26 115]
[27 114]
[29 113]
[30 112]
[31 111]
[32 110]
[33 109]
[35 107]
[36 106]
[38 103]
[39 102]
[40 101]
[41 100]
[44 97]
[45 96]
[47 94]
[48 93]
[50 91]
[51 90]
[53 88]
[54 87]
[62 81]
[63 80]
[64 79]
[65 78]
[68 75]
[69 74]
[148 229]
[149 228]
[150 227]
[151 163]
[152 162]
[153 161]
[154 160]
[167 223]
[168 222]
[169 221]
[170 220]
[171 219]
[172 218]
[173 217]
[174 216]
[175 215]
[176 211]
[177 210]
[178 209]
[183 202]
[184 201]
[186 199]
[187 198]
[188 197]
[189 196]
[190 195]
[230 242]
[231 241]
[232 240]
[233 239]
[234 238]
[243 270]
[244 269]
[246 268]
[247 267]
[248 266]
[249 265]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
