%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:28:29 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KIAA0100)
} def

/sequence { (\
CCUGCGCGCGCAGCUGGUCGGCCCGCGGCGGUGCUGCGCGGAUCCGGCGUCGGGGCCCGGCAUGGCGGGGGCCGGGGCCAAGCCGGGCCGGACCCGGACCUAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 41 0.117250489 ubox
2 13 0.007305511 ubox
2 31 0.005113120 ubox
2 40 0.116109511 ubox
2 41 0.571545014 ubox
3 12 0.007597957 ubox
3 30 0.005183998 ubox
3 38 0.016174208 ubox
3 40 0.574415420 ubox
3 102 0.015290731 ubox
4 11 0.007646637 ubox
4 29 0.005327076 ubox
4 34 0.014569306 ubox
4 37 0.020314663 ubox
4 39 0.687420906 ubox
4 101 0.014349548 ubox
5 10 0.007635758 ubox
5 28 0.005311538 ubox
5 33 0.014595913 ubox
5 36 0.020316550 ubox
5 38 0.687619307 ubox
5 40 0.050264103 ubox
6 32 0.014600004 ubox
6 34 0.016490319 ubox
6 35 0.012479966 ubox
6 37 0.687558930 ubox
6 39 0.079442611 ubox
7 27 0.005389566 ubox
7 31 0.014590137 ubox
7 33 0.016945719 ubox
7 36 0.687287970 ubox
7 38 0.079348893 ubox
7 40 0.451713452 ubox
8 26 0.005586035 ubox
8 32 0.017479629 ubox
8 34 0.620510523 ubox
8 35 0.291080455 ubox
8 37 0.078640664 ubox
8 39 0.720692167 ubox
9 25 0.005586590 ubox
9 30 0.034947784 ubox
9 31 0.012640888 ubox
9 33 0.634786635 ubox
9 36 0.078465423 ubox
9 38 0.721168058 ubox
10 24 0.005551195 ubox
10 29 0.039556572 ubox
10 32 0.633899650 ubox
10 34 0.271519748 ubox
10 35 0.029136072 ubox
10 37 0.721312516 ubox
11 28 0.039464018 ubox
11 31 0.632606261 ubox
11 33 0.271699532 ubox
11 36 0.721343999 ubox
12 32 0.231930791 ubox
12 35 0.721251860 ubox
13 22 0.007102274 ubox
13 26 0.044182691 ubox
13 29 0.632209137 ubox
13 32 0.144375866 ubox
13 34 0.721335405 ubox
14 21 0.007135025 ubox
14 25 0.044212541 ubox
14 28 0.634575589 ubox
14 31 0.241810913 ubox
14 33 0.719823657 ubox
14 41 0.003425179 ubox
15 20 0.006728029 ubox
15 25 0.069324486 ubox
15 27 0.625626989 ubox
15 30 0.231248780 ubox
15 33 0.006814001 ubox
15 40 0.003449973 ubox
16 23 0.112214015 ubox
16 24 0.148856588 ubox
16 26 0.594614754 ubox
16 29 0.169405344 ubox
16 32 0.035304941 ubox
16 39 0.004288685 ubox
17 22 0.116614950 ubox
17 23 0.153497648 ubox
17 26 0.111948518 ubox
17 29 0.737158350 ubox
17 32 0.029949931 ubox
18 25 0.122209713 ubox
18 28 0.754847004 ubox
18 31 0.105976103 ubox
19 25 0.180622921 ubox
19 27 0.757482280 ubox
19 30 0.113847579 ubox
19 36 0.005139239 ubox
20 24 0.172930371 ubox
20 26 0.756159287 ubox
20 29 0.085223942 ubox
20 35 0.005367771 ubox
21 29 0.117657197 ubox
21 32 0.015952030 ubox
21 34 0.005454279 ubox
22 28 0.139910552 ubox
22 31 0.015920163 ubox
22 33 0.005462858 ubox
22 41 0.005121676 ubox
23 27 0.138924014 ubox
23 30 0.015748066 ubox
23 31 0.008103090 ubox
23 40 0.005144308 ubox
24 30 0.008539239 ubox
24 38 0.005684808 ubox
25 29 0.008252900 ubox
25 32 0.003492223 ubox
25 37 0.005922901 ubox
26 31 0.003641490 ubox
26 36 0.005925053 ubox
27 35 0.006067664 ubox
28 34 0.006129488 ubox
29 33 0.006085293 ubox
40 100 0.650033939 ubox
40 101 0.141177602 ubox
41 99 0.674454196 ubox
41 100 0.289427424 ubox
43 98 0.958100761 ubox
44 97 0.999767634 ubox
45 96 0.999941049 ubox
46 95 0.999944268 ubox
46 101 0.005206055 ubox
47 94 0.999836968 ubox
47 100 0.005483013 ubox
49 93 0.999660077 ubox
49 99 0.007660374 ubox
50 91 0.009354118 ubox
50 92 0.999657781 ubox
50 98 0.007682327 ubox
51 90 0.015794852 ubox
51 91 0.998792277 ubox
51 97 0.007651261 ubox
52 89 0.011129945 ubox
53 88 0.007389318 ubox
53 89 0.441862765 ubox
53 95 0.007626214 ubox
54 88 0.312823605 ubox
54 89 0.896344741 ubox
54 94 0.007628608 ubox
55 88 0.949730943 ubox
55 93 0.007618176 ubox
56 86 0.012463121 ubox
56 87 0.999812168 ubox
57 85 0.008822262 ubox
57 86 0.999885374 ubox
57 91 0.007664523 ubox
58 85 0.999907758 ubox
58 90 0.007683708 ubox
59 79 0.003555139 ubox
59 84 0.999939917 ubox
59 89 0.007693402 ubox
60 78 0.003939275 ubox
60 83 0.999954759 ubox
60 88 0.007693518 ubox
61 77 0.004232858 ubox
61 82 0.999302621 ubox
61 87 0.007684446 ubox
63 74 0.022425726 ubox
63 80 0.991056052 ubox
63 85 0.006819364 ubox
64 73 0.025644587 ubox
64 79 0.999568697 ubox
64 84 0.007738075 ubox
65 72 0.025919350 ubox
65 78 0.999565447 ubox
65 83 0.007750249 ubox
66 71 0.026135735 ubox
66 74 0.157390189 ubox
66 77 0.986879131 ubox
66 82 0.007756254 ubox
67 73 0.387371303 ubox
68 72 0.381395579 ubox
69 79 0.003814874 ubox
70 78 0.003602423 ubox
70 79 0.009593532 ubox
71 78 0.009757310 ubox
72 77 0.009872497 ubox
8 39 0.9500000 lbox
9 38 0.9500000 lbox
10 37 0.9500000 lbox
11 36 0.9500000 lbox
12 35 0.9500000 lbox
13 34 0.9500000 lbox
14 33 0.9500000 lbox
17 29 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
40 100 0.9500000 lbox
41 99 0.9500000 lbox
43 98 0.9500000 lbox
44 97 0.9500000 lbox
45 96 0.9500000 lbox
46 95 0.9500000 lbox
47 94 0.9500000 lbox
49 93 0.9500000 lbox
50 92 0.9500000 lbox
51 91 0.9500000 lbox
54 89 0.9500000 lbox
55 88 0.9500000 lbox
56 87 0.9500000 lbox
57 86 0.9500000 lbox
58 85 0.9500000 lbox
59 84 0.9500000 lbox
60 83 0.9500000 lbox
61 82 0.9500000 lbox
63 80 0.9500000 lbox
64 79 0.9500000 lbox
65 78 0.9500000 lbox
66 77 0.9500000 lbox
showpage
end
%%EOF
