%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:24:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUCCGUGGCCCCUCCCCCGGCCAACCGUCGAUUGGGCCGGCGCGUGACGUCACUCCGUUUUAGCCAAACAAAUGGGUUUCGGGGCGAGCGUUGGGCGCCGCCGCGCCGCGCUGGGUGCUCGGUCCGACUCAGCGGUGGGGAGUGAGCCAGGCCUCCCGCCACCGCUGCUGCCGCCACCACUGCGUCGGGCUGGUGCAGCCCCGGGCCAGGCCGCGGCCGGGGCAGGAGCGCAGGGGCUUUGUU\
) } def
/len { sequence length } bind def

/coor [
[112.63081360 432.41256714]
[111.67366028 417.44311523]
[108.11861420 410.98355103]
[110.80110931 402.27664185]
[110.03520203 387.29620361]
[109.26929474 372.31576538]
[100.89222717 360.00018311]
[107.91478729 345.82293701]
[107.14888000 330.84249878]
[106.28733063 315.86724854]
[105.33017731 300.89782715]
[96.79651642 288.69021606]
[103.63745880 274.42443848]
[102.68030548 259.45501709]
[101.72315216 244.48558044]
[93.18949127 232.27796936]
[100.03043365 218.01220703]
[99.07328033 203.04277039]
[98.11613464 188.07334900]
[97.15898132 173.10391235]
[96.20182800 158.13447571]
[95.24467468 143.16505432]
[94.28752136 128.19561768]
[93.33037567 113.22618866]
[86.99362183 126.82198334]
[85.45005798 141.74235535]
[77.35161591 154.36833191]
[64.43426514 161.99342346]
[49.46695328 162.98313904]
[35.65804291 157.12532043]
[25.96759415 145.67564392]
[22.47283554 131.08842468]
[25.92289543 116.49058533]
[35.57822418 105.01126862]
[49.36912537 99.11118317]
[64.33835602 100.05472565]
[78.79441071 96.05191040]
[64.18898010 92.63410950]
[49.58354950 89.21630859]
[40.53838730 90.30761719]
[34.81399918 85.66047668]
[20.25340652 82.05643463]
[5.69281244 78.45239258]
[-8.86778164 74.84835052]
[-23.42837524 71.24431610]
[-38.68332672 75.43920135]
[-49.17873001 64.87058258]
[-63.73932648 61.26654053]
[-78.29991913 57.66249847]
[-92.86051178 54.05846024]
[-107.42110443 50.45441818]
[-122.00441742 46.94342422]
[-136.60984802 43.52562332]
[-151.80998230 47.91497803]
[-162.43949890 37.48125076]
[-177.04493713 34.06344986]
[-191.65036011 30.64564705]
[-206.25579834 27.22784424]
[-220.86122131 23.81004143]
[-228.74432373 34.00691223]
[-239.85395813 40.44856644]
[-252.52732849 42.21160889]
[-264.88290405 39.06987000]
[-275.09973145 31.52272606]
[-281.68585205 20.71611214]
[-283.69607544 8.26861668]
[-298.20944214 4.47892666]
[-312.72283936 0.68923599]
[-326.23059082 8.89385986]
[-341.56353760 5.06286383]
[-349.62487793 -8.53088951]
[-345.63198853 -23.82246780]
[-331.95376587 -31.73964882]
[-316.70526123 -27.58530998]
[-308.93313599 -13.82414532]
[-294.41976929 -10.03445530]
[-279.90637207 -6.24476433]
[-268.24337769 -18.93591499]
[-251.66973877 -23.98454094]
[-234.73854065 -19.90906143]
[-222.14929199 -7.74759197]
[-217.44342041 9.20460987]
[-202.83799744 12.62241268]
[-188.23255920 16.04021645]
[-173.62712097 19.45801735]
[-159.02169800 22.87582016]
[-144.86624146 18.24200058]
[-133.19204712 28.92019272]
[-118.58661652 32.33799362]
[-111.37442017 30.80538368]
[-103.81706238 35.89382553]
[-89.25646973 39.49786758]
[-74.69587708 43.10190582]
[-60.13528442 46.70594788]
[-45.57469177 50.30998611]
[-31.36121178 45.85731506]
[-19.82433510 56.68371964]
[-5.26374102 60.28776169]
[9.29685307 63.89179993]
[23.85744667 67.49584198]
[38.41804123 71.09988403]
[53.00135040 74.61087799]
[67.60678101 78.02867889]
[82.21221161 81.44647980]
[106.15361023 86.47370911]
[118.42255402 77.84393311]
[130.69149780 69.21414948]
[142.90507507 60.50620651]
[155.06282043 51.72045135]
[167.10736084 42.78015518]
[179.03675842 33.68677521]
[183.94973755 26.01419067]
[191.17704773 24.55459785]
[203.22160339 15.61430168]
[215.26614380 6.67400455]
[227.31068420 -2.26629281]
[239.35523987 -11.20658970]
[251.28462219 -20.29997063]
[263.09692383 -29.54495239]
[274.90921021 -38.78993607]
[286.66223145 -48.11015320]
[298.35549927 -57.50522995]
[310.04876709 -66.90030670]
[321.74203491 -76.29537964]
[333.43533325 -85.69046021]
[345.12860107 -95.08553314]
[356.82186890 -104.48060608]
[368.51513672 -113.87568665]
[380.20840454 -123.27075958]
[391.90167236 -132.66583252]
[397.81344604 -147.34103394]
[412.58117676 -149.28099060]
[424.27444458 -158.67607117]
[435.96771240 -168.07113647]
[441.87948608 -182.74633789]
[456.64721680 -184.68629456]
[468.34048462 -194.08137512]
[480.03375244 -203.47645569]
[491.72702026 -212.87152100]
[503.42028809 -222.26660156]
[515.05334473 -231.73614502]
[526.62567139 -241.27978516]
[538.13684082 -250.89712524]
[549.58636475 -260.58776855]
[561.03588867 -270.27841187]
[565.55065918 -278.19183350]
[572.69403076 -280.01855469]
[584.26635742 -289.56219482]
[595.83868408 -299.10583496]
[597.19989014 -316.55728149]
[610.50665283 -327.40222168]
[627.20281982 -325.29846191]
[638.65234375 -334.98910522]
[650.10186768 -344.67974854]
[652.85961914 -360.48400879]
[667.00390625 -368.05496216]
[681.68438721 -361.58483887]
[685.63952637 -346.03695679]
[675.83520508 -333.33831787]
[659.79254150 -333.23025513]
[648.34301758 -323.53961182]
[636.89349365 -313.84896851]
[637.63464355 -300.99850464]
[630.74224854 -289.89797974]
[618.53814697 -284.71090698]
[605.38232422 -287.53350830]
[593.80999756 -277.98986816]
[582.23767090 -268.44622803]
[570.72650146 -258.82888794]
[559.27697754 -249.13824463]
[547.82745361 -239.44760132]
[544.75952148 -232.74296570]
[536.16931152 -229.70744324]
[524.59698486 -220.16381836]
[521.44360352 -213.49890137]
[512.81536865 -210.57333374]
[501.12210083 -201.17825317]
[489.42883301 -191.78317261]
[477.73556519 -182.38810730]
[466.04229736 -172.99302673]
[460.96688843 -158.98982239]
[445.36279297 -156.37786865]
[433.66952515 -146.98280334]
[421.97625732 -137.58772278]
[416.90084839 -123.58451843]
[401.29675293 -120.97256470]
[389.60348511 -111.57749176]
[377.91021729 -102.18241119]
[366.21691895 -92.78733826]
[354.52365112 -83.39226532]
[342.83038330 -73.99718475]
[331.13711548 -64.60211182]
[319.44384766 -55.20703506]
[307.75057983 -45.81195831]
[296.05731201 -36.41688538]
[292.81912231 -29.79278755]
[284.15420532 -26.97764015]
[272.34191895 -17.73265839]
[260.52960205 -8.48767662]
[259.07357788 -3.96119690]
[254.77188110 -0.29198739]
[248.29553223 0.83795619]
[236.25099182 9.77825356]
[224.20643616 18.71854973]
[212.16189575 27.65884781]
[200.11735535 36.59914398]
[188.13014221 45.61616898]
[176.20074463 54.70954895]
[174.68702698 59.21706390]
[170.33882141 62.83103943]
[163.84857178 63.87818909]
[151.69084167 72.66394043]
[148.11863708 79.11405182]
[139.32127380 81.48309326]
[127.05233002 90.11286926]
[114.78339386 98.74265289]
[108.29980469 112.26903534]
[109.25695801 127.23846436]
[110.21410370 142.20790100]
[111.17125702 157.17732239]
[112.12841034 172.14675903]
[113.08556366 187.11619568]
[114.04271698 202.08561707]
[114.99987030 217.05505371]
[123.60198975 230.33338928]
[116.69258881 243.52844238]
[117.64973450 258.49786377]
[118.60688782 273.46728516]
[127.20901489 286.74563599]
[120.29960632 299.94067383]
[121.25675964 314.91012573]
[124.92009735 323.25192261]
[122.12931061 330.07659912]
[122.89521790 345.05703735]
[131.32707214 358.44412231]
[124.24972534 371.54986572]
[125.01564026 386.53030396]
[125.78154755 401.51074219]
[126.64309692 416.48596191]
[127.60024261 431.45541382]
[139.62995911 441.70535278]
[140.80511475 457.46591187]
[130.42854309 469.38656616]
[114.65646362 470.39505005]
[102.84617615 459.89300537]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 240]
[2 239]
[4 238]
[5 237]
[6 236]
[8 234]
[9 233]
[10 231]
[11 230]
[13 228]
[14 227]
[15 226]
[17 224]
[18 223]
[19 222]
[20 221]
[21 220]
[22 219]
[23 218]
[24 217]
[37 104]
[38 103]
[39 102]
[41 101]
[42 100]
[43 99]
[44 98]
[45 97]
[47 95]
[48 94]
[49 93]
[50 92]
[51 91]
[52 89]
[53 88]
[55 86]
[56 85]
[57 84]
[58 83]
[59 82]
[66 77]
[67 76]
[68 75]
[105 216]
[106 215]
[107 214]
[108 212]
[109 211]
[110 208]
[111 207]
[113 206]
[114 205]
[115 204]
[116 203]
[117 202]
[118 199]
[119 198]
[120 197]
[121 195]
[122 194]
[123 193]
[124 192]
[125 191]
[126 190]
[127 189]
[128 188]
[129 187]
[130 186]
[132 184]
[133 183]
[134 182]
[136 180]
[137 179]
[138 178]
[139 177]
[140 176]
[141 174]
[142 173]
[143 171]
[144 170]
[145 169]
[147 168]
[148 167]
[149 166]
[152 162]
[153 161]
[154 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
