%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:42:12 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CFHR3)
} def

/sequence { (\
ACACUUGGUAACUAAUAAUGAAAGAUUUCAAACCCCAAACAGUGCAACUGAAACUUUUGUAUUAGCAUACUACUGAGAAUAUCUAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.011499982 ubox
2 8 0.012174141 ubox
2 44 0.005352986 ubox
2 75 0.266301654 ubox
3 9 0.005158663 ubox
3 43 0.005377257 ubox
3 74 0.259270964 ubox
4 8 0.005368810 ubox
4 42 0.005374509 ubox
4 77 0.800709419 ubox
5 15 0.003741941 ubox
5 38 0.008755182 ubox
5 41 0.004576054 ubox
5 76 0.805195805 ubox
5 77 0.015694719 ubox
5 78 0.014324959 ubox
5 79 0.007234274 ubox
5 86 0.009143948 ubox
6 14 0.004285504 ubox
6 37 0.010431076 ubox
6 67 0.008251718 ubox
6 69 0.005770090 ubox
6 72 0.546632440 ubox
6 75 0.790251073 ubox
6 76 0.012730739 ubox
6 77 0.012256183 ubox
6 78 0.005879350 ubox
6 85 0.009983675 ubox
7 13 0.004356523 ubox
7 34 0.004721352 ubox
7 36 0.010565696 ubox
7 66 0.009132840 ubox
7 68 0.006283083 ubox
7 71 0.623371912 ubox
7 74 0.771711717 ubox
7 83 0.010633238 ubox
7 84 0.008993480 ubox
8 12 0.004274218 ubox
8 33 0.004756048 ubox
8 35 0.010525001 ubox
8 66 0.006061470 ubox
8 68 0.010748165 ubox
8 70 0.629963809 ubox
8 73 0.774010071 ubox
8 82 0.010632458 ubox
8 83 0.008637713 ubox
9 32 0.004653462 ubox
9 65 0.003248425 ubox
9 67 0.012557498 ubox
9 69 0.629223832 ubox
9 72 0.771315390 ubox
9 81 0.011187225 ubox
10 68 0.608923207 ubox
10 71 0.742763497 ubox
10 80 0.010625635 ubox
12 65 0.991545853 ubox
13 64 0.994538113 ubox
13 69 0.013378051 ubox
14 27 0.004373661 ubox
14 63 0.994362947 ubox
14 68 0.012806272 ubox
15 26 0.004529911 ubox
15 60 0.003478074 ubox
15 62 0.993313488 ubox
16 25 0.004519386 ubox
16 59 0.004131115 ubox
16 61 0.987917083 ubox
16 64 0.085973456 ubox
17 27 0.007473688 ubox
17 58 0.003702542 ubox
17 60 0.727516369 ubox
17 63 0.086288289 ubox
18 26 0.007858980 ubox
18 57 0.003263317 ubox
18 60 0.668362239 ubox
18 62 0.083068318 ubox
19 25 0.007883385 ubox
19 30 0.032444644 ubox
19 59 0.938559029 ubox
19 61 0.079091333 ubox
20 29 0.036018196 ubox
20 57 0.042375006 ubox
20 58 0.984629855 ubox
20 60 0.059254224 ubox
21 28 0.035615225 ubox
21 56 0.036958127 ubox
21 57 0.992424073 ubox
21 58 0.043264400 ubox
22 27 0.030984508 ubox
22 55 0.028585467 ubox
22 56 0.995022216 ubox
22 57 0.044872075 ubox
22 58 0.033791451 ubox
23 55 0.996326374 ubox
23 56 0.044629310 ubox
23 57 0.035750063 ubox
23 58 0.004341516 ubox
23 84 0.004004677 ubox
24 54 0.996616511 ubox
24 55 0.041199903 ubox
24 56 0.036147788 ubox
24 57 0.004457898 ubox
24 83 0.004152165 ubox
25 55 0.035819220 ubox
25 56 0.004268874 ubox
25 82 0.004138439 ubox
26 32 0.003551930 ubox
26 39 0.009493783 ubox
26 51 0.010454897 ubox
26 52 0.076023471 ubox
26 53 0.981441881 ubox
26 81 0.003449681 ubox
27 31 0.003581073 ubox
27 38 0.011428570 ubox
27 50 0.009644509 ubox
27 51 0.071030356 ubox
27 52 0.991938042 ubox
27 53 0.009834599 ubox
28 37 0.011635461 ubox
28 50 0.041827316 ubox
28 51 0.994773498 ubox
28 52 0.009038076 ubox
28 76 0.003238021 ubox
29 44 0.008074645 ubox
29 50 0.992723936 ubox
29 59 0.004037866 ubox
29 75 0.003250394 ubox
30 43 0.007754425 ubox
30 49 0.930989900 ubox
30 58 0.004071130 ubox
31 57 0.004050004 ubox
32 43 0.244834052 ubox
32 56 0.003761693 ubox
33 42 0.249923583 ubox
36 44 0.570315792 ubox
36 50 0.003654528 ubox
36 59 0.016671032 ubox
37 43 0.535567355 ubox
37 49 0.004687293 ubox
37 58 0.016759174 ubox
38 57 0.016688845 ubox
39 56 0.016275132 ubox
40 50 0.103296642 ubox
40 75 0.012363058 ubox
41 49 0.142023556 ubox
41 55 0.014214371 ubox
41 63 0.009548643 ubox
41 71 0.005923317 ubox
41 74 0.012425036 ubox
42 48 0.171828887 ubox
42 54 0.014513061 ubox
42 62 0.011160596 ubox
42 68 0.011940650 ubox
42 70 0.008161853 ubox
42 73 0.012431211 ubox
43 47 0.154846961 ubox
43 53 0.014446285 ubox
43 61 0.011334684 ubox
43 67 0.012304387 ubox
43 69 0.008119870 ubox
43 72 0.012355506 ubox
44 49 0.003685478 ubox
44 60 0.011476466 ubox
44 66 0.012480090 ubox
44 68 0.007508147 ubox
44 71 0.011534700 ubox
45 59 0.011528253 ubox
45 65 0.011454781 ubox
46 58 0.011335635 ubox
47 57 0.009962918 ubox
48 65 0.017555375 ubox
49 64 0.019993256 ubox
50 63 0.020094018 ubox
51 58 0.003479893 ubox
51 62 0.019946637 ubox
52 57 0.003168550 ubox
53 60 0.021460983 ubox
54 59 0.022285108 ubox
58 67 0.008162517 ubox
59 66 0.010309715 ubox
59 70 0.021092184 ubox
59 82 0.005283757 ubox
60 65 0.010003064 ubox
60 69 0.021159414 ubox
60 81 0.005651268 ubox
61 68 0.020934125 ubox
61 80 0.005874512 ubox
62 67 0.018874704 ubox
62 79 0.005897131 ubox
63 78 0.005890851 ubox
64 71 0.004123568 ubox
65 70 0.007572742 ubox
66 75 0.016098793 ubox
67 74 0.014760957 ubox
67 80 0.005004578 ubox
67 82 0.003558437 ubox
68 79 0.005230719 ubox
68 81 0.003755476 ubox
69 80 0.003516945 ubox
70 77 0.012701754 ubox
71 76 0.012237725 ubox
71 85 0.004751004 ubox
72 84 0.005479253 ubox
74 81 0.013520111 ubox
74 85 0.053555359 ubox
75 80 0.011652014 ubox
75 83 0.202099845 ubox
75 84 0.036128693 ubox
76 82 0.200653742 ubox
76 84 0.284230506 ubox
77 83 0.294262104 ubox
78 82 0.256177428 ubox
4 77 0.9500000 lbox
5 76 0.9500000 lbox
6 75 0.9500000 lbox
7 74 0.9500000 lbox
8 73 0.9500000 lbox
9 72 0.9500000 lbox
10 71 0.9500000 lbox
12 65 0.9500000 lbox
13 64 0.9500000 lbox
14 63 0.9500000 lbox
15 62 0.9500000 lbox
16 61 0.9500000 lbox
17 60 0.9500000 lbox
19 59 0.9500000 lbox
20 58 0.9500000 lbox
21 57 0.9500000 lbox
22 56 0.9500000 lbox
23 55 0.9500000 lbox
24 54 0.9500000 lbox
26 53 0.9500000 lbox
27 52 0.9500000 lbox
28 51 0.9500000 lbox
29 50 0.9500000 lbox
30 49 0.9500000 lbox
showpage
end
%%EOF
