%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:15:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAACGAGUGACAGUCUUAAUGACUAACACACCUCUAACAUUUCACCUCUAGCUCAGAUGAGAGAGAGAAUGGGACUUCUUGGUACUGAUUGUUUUUCCCAUGCCUCAAUUGGUUUCUUUUAGGGAGCUACAAAUUUACGUGUUCACUGGUGAUUGAUCUUUUCAUCCAGCACA\
) } def
/len { sequence length } bind def

/coor [
[106.74588776 214.46554565]
[92.53829956 219.27642822]
[79.04117584 212.73214722]
[74.01950073 198.59770203]
[80.36196899 185.00500488]
[83.54750061 170.34715271]
[86.73303223 155.68931580]
[89.91856384 141.03146362]
[82.43319702 140.56321716]
[72.61028290 151.89945984]
[62.78737259 163.23570251]
[63.73028183 178.78396606]
[53.60696411 190.14060974]
[38.77825546 190.94369507]
[28.95534325 202.27995300]
[19.13243294 213.61619568]
[9.30952168 224.95243835]
[9.01520634 240.99278259]
[-3.79639125 250.64900208]
[-19.29730988 246.51365662]
[-25.59657288 231.75903320]
[-17.86192322 217.70362854]
[-2.02672219 215.12951660]
[7.79618883 203.79327393]
[17.61910057 192.45703125]
[27.44201088 181.12078857]
[26.12659073 166.32872009]
[35.92692947 154.69223022]
[51.45112991 153.41279602]
[61.27404022 142.07655334]
[71.09695435 130.74031067]
[64.00653839 119.22747803]
[61.11566162 106.47721863]
[62.45577621 93.92169189]
[67.59848785 82.88063049]
[75.73080444 74.42263794]
[85.76920319 69.26254272]
[96.49751282 67.70449829]
[98.36688995 52.82143784]
[100.23625946 37.93838120]
[102.10563660 23.05532074]
[103.97500610 8.17226219]
[89.64028931 1.51921391]
[78.07383728 -9.22094536]
[70.39739227 -22.99024582]
[67.35038757 -38.43775558]
[69.21871185 -54.05211639]
[75.80796814 -68.30941010]
[86.46356964 -79.82190704]
[100.13579559 -87.47309875]
[115.48319244 -90.52602386]
[117.08661652 -105.44007874]
[118.69004822 -120.35413361]
[120.29347229 -135.26818848]
[121.89689636 -150.18223572]
[123.50032806 -165.09629822]
[114.02892303 -170.71664429]
[108.07569122 -181.24353027]
[108.11484528 -194.42051697]
[104.40525055 -208.95457458]
[100.69564819 -223.48863220]
[89.78582001 -234.94665527]
[94.13523865 -249.19206238]
[90.42564392 -263.72613525]
[86.71604919 -278.26019287]
[83.00644684 -292.79425049]
[79.29685211 -307.32830811]
[75.58725739 -321.86236572]
[64.67742157 -333.32037354]
[69.02684784 -347.56579590]
[65.31724548 -362.09985352]
[61.60765076 -376.63391113]
[50.69781876 -388.09191895]
[55.04724121 -402.33734131]
[51.33764267 -416.87139893]
[47.49847794 -431.37176514]
[43.53005219 -445.83731079]
[39.56162643 -460.30282593]
[27.52291870 -471.43844604]
[31.41066933 -487.37008667]
[47.22549438 -491.70867920]
[58.69845963 -479.99102783]
[54.02716064 -464.27127075]
[57.99558640 -449.80572510]
[61.96400833 -435.34020996]
[66.78150940 -429.70330811]
[65.87170410 -420.58099365]
[69.58129883 -406.04693604]
[80.22579193 -395.62850952]
[76.14170837 -380.34350586]
[79.85130310 -365.80944824]
[83.56090546 -351.27539062]
[94.20539856 -340.85693359]
[90.12131500 -325.57196045]
[93.83090973 -311.03790283]
[97.54051208 -296.50384521]
[101.25010681 -281.96978760]
[104.95970154 -267.43572998]
[108.66930389 -252.90165710]
[119.31379700 -242.48321533]
[115.22971344 -227.19822693]
[118.93930817 -212.66416931]
[122.64890289 -198.13011169]
[137.14927673 -194.29095459]
[147.56488037 -205.08517456]
[157.98046875 -215.87940979]
[157.44781494 -231.67471313]
[168.30104065 -243.16311646]
[184.10108948 -243.52873230]
[195.47410583 -232.55467224]
[195.67265320 -216.75161743]
[184.57894897 -205.49526978]
[168.77470398 -205.46382141]
[158.35910034 -194.66958618]
[147.94351196 -183.87535095]
[161.10046387 -191.07914734]
[176.10046387 -191.06602478]
[189.24479675 -183.83924866]
[197.29235840 -171.18078613]
[198.25877380 -156.21194458]
[191.90574646 -142.62374878]
[179.79980469 -133.76676941]
[164.92602539 -131.82495117]
[150.95198059 -137.27711487]
[141.32337952 -148.77885437]
[138.41438293 -163.49287415]
[136.81095886 -148.57881165]
[135.20751953 -133.66476440]
[133.60409546 -118.75070953]
[132.00067139 -103.83665466]
[130.39724731 -88.92259979]
[143.55938721 -83.40895081]
[154.64353943 -74.39568329]
[162.74340820 -62.60818863]
[167.19343567 -48.99913788]
[167.62350464 -34.67152786]
[163.98966980 -20.78924370]
[156.57850647 -8.48255062]
[145.98449707 1.24395669]
[133.06234741 7.59334421]
[118.85806274 10.04163456]
[116.98869324 24.92469406]
[115.11932373 39.80775070]
[113.24994659 54.69081116]
[111.38057709 69.57386780]
[131.43594360 83.03549957]
[137.99191284 108.62103271]
[124.84671021 134.10269165]
[133.18026733 146.57473755]
[141.51382446 159.04678345]
[149.84736633 171.51881409]
[158.29190063 183.91598511]
[166.84674072 196.23730469]
[175.40158081 208.55860901]
[190.81510925 207.90522766]
[204.12348938 215.70846558]
[211.08007812 229.47833252]
[209.46505737 244.82092285]
[199.79376221 256.84048462]
[185.15226746 261.70159912]
[170.21264648 257.85308838]
[159.74203491 246.52305603]
[157.08160400 231.32681274]
[163.08027649 217.11344910]
[154.52543640 204.79214478]
[145.97059631 192.47082520]
[139.55220032 188.75772095]
[137.37533569 179.85237122]
[129.04177856 167.38032532]
[120.70822144 154.90827942]
[112.37467194 142.43624878]
[104.88929749 141.96798706]
[106.22326660 156.90855408]
[107.55722809 171.84912109]
[108.89119720 186.78968811]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 31]
[10 30]
[11 29]
[14 26]
[15 25]
[16 24]
[17 23]
[38 145]
[39 144]
[40 143]
[41 142]
[42 141]
[51 131]
[52 130]
[53 129]
[54 128]
[55 127]
[56 126]
[59 103]
[60 102]
[61 101]
[63 99]
[64 98]
[65 97]
[66 96]
[67 95]
[68 94]
[70 92]
[71 91]
[72 90]
[74 88]
[75 87]
[76 85]
[77 84]
[78 83]
[104 115]
[105 114]
[106 113]
[148 171]
[149 170]
[150 169]
[151 168]
[152 166]
[153 165]
[154 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
