%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:41:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCGGUGCGGUGCGGAAGCGGAAGUGAAGGGUGCGCUUGGCGGCGGCGGCGGGAGCUGCGGAGUCGGGAAUCAAAACAAAGGGCCUGGGGGGGGCGGGGGGAAGGCGGCGGGGCCGGAAUGUGAGCGGAGGUGGAGCCGGCGGCAGAGGGUGGAAGAAUGAAAGAAAAGAAAGAUGAAAGGAUGUUGAAUCACUUUGCAUGGCUGU\
) } def
/len { sequence length } bind def

/coor [
[111.10422516 183.93202209]
[119.55664062 169.87896729]
[119.33009338 154.88067627]
[119.10354614 139.88238525]
[111.17490387 127.27342224]
[118.70289612 113.35796356]
[118.47634888 98.35967255]
[118.24980164 83.36138916]
[118.02325439 68.36309814]
[130.58760071 116.37817383]
[85.19891357 129.47482300]
[75.59571838 140.99778748]
[65.99253082 152.52075195]
[56.38933563 164.04371643]
[62.25621033 179.50123596]
[59.54348755 195.71543884]
[49.08483505 208.27719116]
[33.80712128 213.81903076]
[17.91185570 210.91763306]
[8.48379230 222.58432007]
[6.47060680 238.85943604]
[-8.73408604 245.00347900]
[-21.48900223 234.69599915]
[-18.67297745 218.54045105]
[-3.18289661 213.15626526]
[6.24516630 201.48957825]
[0.50825506 189.09445190]
[0.67287004 175.37088013]
[6.76389408 162.99819946]
[17.64361000 154.41651917]
[31.22378540 151.34562683]
[44.86637115 154.44052124]
[54.46956635 142.91755676]
[64.07275391 131.39459229]
[73.67594910 119.87162781]
[66.68930817 90.29207611]
[87.27529907 65.88529205]
[72.28214264 65.43225098]
[57.28899002 64.97920227]
[42.29582977 64.52615356]
[27.30267525 64.07311249]
[12.30951786 63.62006378]
[4.70813608 75.11991119]
[-7.48642731 81.31242371]
[-21.03999329 80.67522430]
[-32.41678238 73.48162079]
[-38.70180893 61.70133209]
[-53.68641281 61.02189255]
[-68.67101288 60.34245300]
[-83.65561676 59.66301346]
[-98.64022827 58.98357773]
[-112.94216919 67.00769806]
[-126.90214539 58.40240479]
[-126.15933228 42.02008820]
[-111.47786713 34.71347046]
[-97.96078491 43.99897003]
[-82.97618103 44.67840958]
[-67.99157715 45.35784912]
[-53.00697327 46.03728867]
[-38.02236938 46.71672821]
[-28.19901085 33.56591415]
[-12.31386185 28.81325722]
[3.43044591 34.52124405]
[12.76256371 48.62690735]
[27.75572014 49.07995605]
[42.74887848 49.53300095]
[57.74203491 49.98604584]
[72.73519135 50.43909073]
[87.72834778 50.89213562]
[91.89512634 44.65611267]
[78.95458984 37.07042694]
[66.01406097 29.48473930]
[53.07352829 21.89905357]
[40.13299942 14.31336594]
[25.57257080 10.70865345]
[20.15468407 -3.27871633]
[28.48780632 -15.75104809]
[43.48376465 -16.09934425]
[52.38712692 -4.02623177]
[64.34751129 5.02634382]
[76.30789948 14.07891941]
[88.26828766 23.13149452]
[100.22867584 32.18407059]
[104.39545441 25.94804764]
[98.23926544 12.26955032]
[92.08306885 -1.40894783]
[85.92687988 -15.08744526]
[71.49660492 -22.09792709]
[68.12122345 -37.78187943]
[78.39002991 -50.10791397]
[94.42568207 -49.62055588]
[103.92699432 -36.69366074]
[99.60537720 -21.24363708]
[105.76156616 -7.56513977]
[111.91776276 6.11335802]
[118.07395172 19.79185486]
[125.52588654 20.63962936]
[126.68113708 5.68418217]
[127.83639526 -9.27126408]
[125.77088928 -24.12837410]
[138.97663879 -31.24230957]
[150.24696350 -21.34383774]
[144.89698792 -7.33035564]
[142.66336060 7.50241041]
[140.42974854 22.33517647]
[147.88168335 23.18294907]
[156.95306396 11.23682785]
[159.13681030 -4.43294811]
[172.99578857 -9.88984489]
[182.06718445 -21.83596802]
[184.25091553 -37.50574112]
[198.10990906 -42.96263885]
[207.18130493 -54.90876389]
[209.06719971 -73.22501373]
[225.49732971 -79.38803101]
[234.38726807 -91.46980286]
[243.27719116 -103.55156708]
[237.92874146 -119.59688568]
[243.14532471 -135.51077271]
[256.68319702 -145.08424377]
[273.09356689 -144.70666504]
[281.79998779 -156.92132568]
[282.82684326 -173.28829956]
[297.63284302 -180.33917236]
[310.98681641 -170.82061768]
[309.15139771 -154.52450562]
[294.01464844 -148.21488953]
[285.30822754 -136.00022888]
[290.70538330 -123.78763580]
[289.35177612 -110.39558411]
[281.49462891 -99.33346558]
[269.09936523 -93.55314636]
[255.35896301 -94.66163635]
[246.46902466 -82.57986450]
[237.57910156 -70.49810028]
[239.08836365 -58.49459076]
[231.77888489 -48.35591888]
[219.12742615 -45.83736801]
[210.05603027 -33.89124680]
[208.52114868 -19.07593918]
[194.01330566 -12.76457500]
[184.94190979 -0.81845254]
[183.40702820 13.99685669]
[168.89918518 20.30821991]
[159.82780457 32.25434113]
[173.51597595 26.11969185]
[187.20414734 19.98504066]
[200.89231873 13.85038853]
[214.58049011 7.71573734]
[223.69099426 -4.20057583]
[235.07235718 -13.97117710]
[248.23083496 -21.17220306]
[262.59558105 -25.49126053]
[277.54342651 -26.74098587]
[292.42590332 -24.86716461]
[306.59744263 -19.95108223]
[319.44320679 -12.20600796]
[330.40594482 -1.96793413]
[339.01010132 10.31899738]
[344.88238525 24.12176132]
[347.76806641 38.84157562]
[347.54193115 53.83987045]
[344.21383667 68.46600342]
[337.92810059 82.08546448]
[328.95745850 94.10742188]
[317.69104004 104.01035309]
[304.61764526 111.36465454]
[290.30435181 115.85128021]
[275.37213135 117.27559662]
[260.46875000 115.57581329]
[246.24073792 110.82566833]
[233.30534363 103.23123932]
[222.22369385 93.12197113]
[213.47454834 80.93288422]
[199.97790527 74.38760376]
[186.48126221 67.84233093]
[172.98461914 61.29705429]
[159.48797607 54.75177765]
[168.19442749 66.96643066]
[176.90086365 79.18108368]
[185.60731506 91.39574432]
[194.40574646 103.54430389]
[203.29568481 115.62606812]
[212.18562317 127.70783234]
[227.76585388 131.53353882]
[234.35781860 146.15972900]
[226.90472412 160.36645508]
[211.12396240 163.25552368]
[199.12115479 152.61070251]
[200.10385132 136.59776306]
[191.21391296 124.51599884]
[182.32398987 112.43423462]
[175.82626343 108.90895844]
[173.39265442 100.10218811]
[164.68621826 87.88753510]
[155.97976685 75.67287445]
[147.27331543 63.45822144]
[133.02154541 68.13655090]
[133.24809265 83.13483429]
[133.47463989 98.13312531]
[133.70118713 113.13141632]
[141.64602661 126.81315613]
[134.10183716 139.65583801]
[134.32838440 154.65412903]
[134.55493164 169.65242004]
[143.42794800 183.44377136]
[135.68122864 197.89785767]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 205]
[3 204]
[4 203]
[6 201]
[7 200]
[8 199]
[9 198]
[11 35]
[12 34]
[13 33]
[14 32]
[19 26]
[20 25]
[37 69]
[38 68]
[39 67]
[40 66]
[41 65]
[42 64]
[47 60]
[48 59]
[49 58]
[50 57]
[51 56]
[84 96]
[85 95]
[86 94]
[87 93]
[106 145]
[107 144]
[109 142]
[110 141]
[112 139]
[113 138]
[115 135]
[116 134]
[117 133]
[121 128]
[122 127]
[178 197]
[179 196]
[180 195]
[181 194]
[182 192]
[183 191]
[184 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
