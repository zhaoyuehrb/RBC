%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:12:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGAGGCCGACUAGCGCAGGCGGACGGGAGAGAAUGGGGGAGGGGUGGGAUGGGAGCAGGGGCAGAGACGGGCAGAGGGCAGAGGGCGGAGCGGCGCCGGAGCGGGCGUC\
) } def
/len { sequence length } bind def

/coor [
[68.59389496 143.44973755]
[54.15587234 139.38235474]
[44.19908142 128.16351318]
[41.87539673 113.34459686]
[47.92038345 99.61659241]
[60.42048264 91.32517242]
[75.41871643 91.09503174]
[88.16576385 98.99728394]
[76.43829346 89.64493561]
[64.71082306 80.29258728]
[49.09728622 77.73758698]
[43.97083282 63.75299835]
[32.24335861 54.40065002]
[14.03481102 52.14875031]
[8.13254261 35.68756866]
[-3.85261440 26.66781235]
[-17.96817780 32.55832291]
[-33.03745270 30.60544777]
[-45.02627182 21.43295479]
[-50.77572250 7.58377552]
[-48.83419418 -7.18429947]
[-60.81935120 -16.20405579]
[-75.58615112 -11.81681824]
[-89.93706512 -16.90648651]
[-98.43866730 -29.32368088]
[-98.00353241 -44.18802261]
[-109.98868561 -53.20777893]
[-121.66757965 -43.67536545]
[-135.28866577 -37.21552277]
[-150.06002808 -34.20381927]
[-165.12287903 -34.81534958]
[-179.60148621 -39.01456070]
[-192.65408325 -46.55731964]
[-203.52180481 -57.00509644]
[-211.57281494 -69.75046539]
[-216.33905029 -84.05244446]
[-217.54339600 -99.07952118]
[-215.11584473 -113.95803833]
[-209.19752502 -127.82299042]
[-200.13250732 -139.86828613]
[-188.44784546 -149.39361572]
[-174.82284546 -155.84519958]
[-160.04966736 -158.84794617]
[-144.98718262 -158.22727966]
[-130.51112366 -154.01928711]
[-117.46310425 -146.46862793]
[-106.60171509 -136.01426697]
[-98.55842590 -123.26400757]
[-93.80086517 -108.95914459]
[-92.60562897 -93.93134308]
[-95.04220581 -79.05429840]
[-100.96893311 -65.19293976]
[-88.98377228 -56.17317963]
[-74.82083130 -60.70628357]
[-60.53538895 -55.97446823]
[-51.67179489 -43.59342957]
[-51.79959488 -28.18921280]
[-39.81443787 -19.16945648]
[-26.16102219 -25.12343407]
[-11.26145363 -23.43263054]
[0.87148327 -14.45163822]
[6.91974831 -0.51193655]
[5.16714191 14.68265533]
[17.15229988 23.70241165]
[29.26209831 22.33751869]
[39.34331512 29.87791824]
[41.59570694 42.67317963]
[53.32317734 52.02552414]
[68.09788513 53.91158295]
[74.06317139 68.56511688]
[85.79064178 77.91746521]
[97.51811218 87.26981354]
[111.80973816 91.82495880]
[126.78614044 90.98390198]
[132.19645691 79.53334045]
[141.94284058 71.56099701]
[154.09751892 68.56304932]
[166.29075623 71.05970001]
[176.17279053 78.50606537]
[181.86669922 89.40964508]
[196.86669922 89.40964508]
[209.18193054 79.12787628]
[224.86941528 82.48675537]
[231.89508057 96.90964508]
[224.86941528 111.33252716]
[209.18193054 114.69141388]
[196.86669922 104.40964508]
[181.86669922 104.40964508]
[172.28321838 119.10613251]
[155.68838501 125.26386261]
[138.53944397 120.28952026]
[127.62719727 105.96030426]
[112.65079498 106.80136108]
[105.57984924 120.03018188]
[113.20097351 132.94987488]
[120.82210541 145.86956787]
[128.44323730 158.78924561]
[136.06436157 171.70893860]
[143.68550110 184.62863159]
[159.04953003 188.33297729]
[167.22276306 201.85975647]
[163.35618591 217.18376160]
[149.74374390 225.21353149]
[134.46147156 221.18515015]
[126.57607269 207.48858643]
[130.76580811 192.24975586]
[123.14467621 179.33007812]
[115.52354431 166.41038513]
[107.90242004 153.49069214]
[100.28128815 140.57099915]
[92.66015625 127.65131378]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 72]
[9 71]
[10 70]
[12 68]
[13 67]
[15 64]
[16 63]
[21 58]
[22 57]
[26 53]
[27 52]
[73 93]
[74 92]
[80 88]
[81 87]
[94 111]
[95 110]
[96 109]
[97 108]
[98 107]
[99 106]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
