%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:56:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCAAAGCGUUACUUCCGGCGGAAAAGGACGCGGGAGAUUCGAUUGGAAGGCUGCCGGCGUGCUACUGAGUUCGGCCGGUCCGAGUCACUGUGCGUCGCCUGGGCCCGUUCCUGGUCUUCUCCCCCAGGGUCUUGCUCUGUCACCCAGGCUGGAGUGCCAUGGCAUCAUCAUAGCUCACUAUGGCCUUGAUCCUCCUGCCUUAGCCUCCCAAGCAGCUGGUAUUACAGACCACGGUGUGAACAC\
) } def
/len { sequence length } bind def

/coor [
[137.94520569 177.07035828]
[123.23689270 180.01406860]
[108.92884064 175.51078796]
[98.55785370 164.67367554]
[94.68755341 150.18159485]
[98.27334595 135.61918640]
[98.27470398 120.61918640]
[91.08213043 133.78227234]
[83.88955688 146.94537354]
[76.69699097 160.10845947]
[69.50441742 173.27154541]
[74.73170471 189.97697449]
[66.41364288 204.99308777]
[50.13319778 209.25071716]
[43.11000061 222.50495911]
[36.08680344 235.75918579]
[29.06360817 249.01342773]
[26.99015808 265.84011841]
[10.24708462 268.50576782]
[3.05064511 253.15495300]
[15.80937386 241.99023438]
[22.83257103 228.73599243]
[29.85576820 215.48176575]
[36.87896347 202.22752380]
[31.41082954 190.57456970]
[33.67978668 177.70649719]
[43.07921219 168.35203552]
[56.34132767 166.07897949]
[63.53389740 152.91587830]
[70.72647095 139.75279236]
[77.91904449 126.58970642]
[85.11161041 113.42662048]
[80.47635651 99.16076660]
[66.92037201 92.73929596]
[53.36439514 86.31781769]
[39.80841064 79.89633942]
[26.25242996 73.47486877]
[12.69644737 67.05339050]
[2.70870900 71.28847504]
[-7.74774218 69.37963867]
[-15.27744579 62.19138336]
[-17.57014275 52.26194382]
[-30.95700073 45.49496460]
[-44.34386063 38.72798920]
[-57.73072052 31.96100998]
[-71.16069031 25.27999878]
[-84.63321686 18.68523026]
[-98.10575104 12.09046078]
[-111.57827759 5.49569225]
[-125.13425446 -0.92578351]
[-138.77146912 -7.17291021]
[-152.40867615 -13.42003632]
[-166.04588318 -19.66716385]
[-183.56123352 -12.40154266]
[-200.52409363 -20.13475227]
[-206.32402039 -37.51492691]
[-220.11694336 -43.41030121]
[-233.90985107 -49.30567551]
[-247.70277405 -55.20105362]
[-261.49569702 -61.09642792]
[-275.28860474 -66.99180603]
[-289.08151245 -72.88717651]
[-302.87445068 -78.78255463]
[-314.70178223 -72.36660767]
[-327.87338257 -73.90425110]
[-337.61480713 -82.61288452]
[-340.52481079 -95.15177155]
[-354.24099731 -101.22352600]
[-367.95718384 -107.29527283]
[-377.04818726 -107.90349579]
[-381.80953979 -113.53382111]
[-395.44674683 -119.78094482]
[-409.08395386 -126.02807617]
[-422.72116089 -132.27519226]
[-436.35836792 -138.52232361]
[-451.83682251 -134.30366516]
[-464.70016479 -143.89083862]
[-465.08074951 -159.92938232]
[-452.68661499 -170.11589050]
[-437.02548218 -166.63615417]
[-430.11123657 -152.15953064]
[-416.47402954 -145.91239929]
[-402.83682251 -139.66528320]
[-389.19961548 -133.41815186]
[-375.56240845 -127.17102814]
[-361.88543701 -121.01145935]
[-348.16925049 -114.93971252]
[-334.45306396 -108.86795807]
[-319.02648926 -115.59113312]
[-303.20309448 -108.93570709]
[-296.97906494 -92.57546997]
[-283.18615723 -86.68009949]
[-269.39321899 -80.78472137]
[-255.60031128 -74.88934326]
[-241.80738831 -68.99397278]
[-228.01448059 -63.09859467]
[-214.22155762 -57.20321655]
[-200.42864990 -51.30784225]
[-191.03582764 -57.73751831]
[-179.58795166 -58.85636902]
[-168.90791321 -54.27259827]
[-161.68518066 -45.01498413]
[-159.79875183 -33.30437088]
[-146.16154480 -27.05724335]
[-132.52433777 -20.81011772]
[-118.88713074 -14.56299019]
[-114.19705963 -15.34861374]
[-108.96154022 -13.21202374]
[-104.98350525 -7.97683620]
[-91.51097870 -1.38206732]
[-78.03845215 5.21270180]
[-64.56591797 11.80747032]
[-57.19319534 11.92506027]
[-50.96374130 18.57415009]
[-37.57688141 25.34112930]
[-24.19002342 32.10810471]
[-10.80316448 38.87508392]
[8.38880539 36.41410446]
[19.11792374 53.49740982]
[32.67390442 59.91888428]
[46.22988892 66.34036255]
[59.78586960 72.76183319]
[73.34185028 79.18331146]
[86.89783478 85.60478973]
[92.15715790 81.55077362]
[98.64957428 79.41522217]
[102.64012909 64.95578003]
[106.63068390 50.49633789]
[110.62123108 36.03689575]
[114.61178589 21.57745361]
[118.60234070 7.11801004]
[116.98768616 -9.75887489]
[132.75804138 -15.98241425]
[143.10401917 -2.55122375]
[133.06178284 11.10856247]
[129.07122803 25.56800461]
[125.08068085 40.02744675]
[121.09012604 54.48689270]
[117.09957123 68.94633484]
[113.10901642 83.40577698]
[121.13017273 96.08099365]
[135.90599060 98.66466522]
[150.68179321 101.24833679]
[165.45761108 103.83200836]
[180.24967957 106.32089996]
[195.05741882 108.71489716]
[212.12637329 101.77836609]
[225.27632141 113.41374207]
[240.11352539 115.61767578]
[254.96455383 117.72643280]
[269.82879639 119.73992920]
[284.69305420 121.75343323]
[297.18783569 112.45191193]
[312.23361206 114.70563507]
[321.02416992 126.67481232]
[335.88842773 128.68830872]
[350.75268555 130.70181274]
[365.61691284 132.71531677]
[380.48117065 134.72880554]
[395.34539795 136.74230957]
[408.15225220 120.20135498]
[435.15249634 121.76136780]
[449.96023560 119.36737061]
[457.91110229 114.91764832]
[464.97308350 117.03887939]
[479.81027222 114.83494568]
[494.64749146 112.63101959]
[509.48471069 110.42708588]
[524.27679443 107.93820190]
[539.01824951 105.16527557]
[553.75970459 102.39234924]
[568.50115967 99.61943054]
[583.24261475 96.84650421]
[597.98413086 94.07358551]
[610.06634521 82.98522949]
[625.62695312 88.16201782]
[628.65850830 104.27851868]
[616.04241943 114.75545502]
[600.75701904 108.81504822]
[586.01556396 111.58797455]
[571.27410889 114.36090088]
[556.53265381 117.13381958]
[541.79113770 119.90674591]
[527.04968262 122.67966461]
[524.77569580 125.34651947]
[521.10656738 127.05473328]
[516.50207520 127.16473389]
[511.68862915 125.26428986]
[496.85140991 127.46822357]
[482.01422119 129.67214966]
[467.17700195 131.87608337]
[452.35424805 134.17509460]
[437.54650879 136.56909180]
[436.01855469 143.91180420]
[432.96261597 158.59721375]
[431.43463135 165.93991089]
[444.05816650 174.04217529]
[456.68170166 182.14442444]
[469.30523682 190.24667358]
[482.00955200 181.84906006]
[497.03222656 179.35116577]
[511.77044678 183.18579102]
[523.67077637 192.68853760]
[530.67138672 206.21302795]
[531.55932617 221.41603088]
[526.18084717 235.66354370]
[515.46777344 246.48710632]
[501.27618408 252.01147461]
[486.06488037 251.27951050]
[472.46929932 244.41802979]
[462.84494019 232.61582947]
[458.85934448 217.91770935]
[461.20297241 202.87020874]
[448.57943726 194.76794434]
[435.95590210 186.66569519]
[423.33239746 178.56344604]
[399.58331299 170.14952087]
[393.33190918 151.60655212]
[378.46765137 149.59306335]
[363.60342407 147.57955933]
[348.73916626 145.56605530]
[333.87493896 143.55256653]
[319.01068115 141.53906250]
[307.35266113 150.73829651]
[292.24951172 148.90806580]
[282.67953491 136.61767578]
[267.81530762 134.60417175]
[252.95104980 132.59068298]
[245.91687012 134.80229187]
[237.90959167 130.45487976]
[223.07238770 128.25094604]
[213.18528748 135.19570923]
[200.81860352 133.49633789]
[192.66342163 123.52262115]
[177.85568237 121.12862396]
[170.76710510 123.15912628]
[162.87393188 118.60782623]
[148.09812927 116.02414703]
[133.32231140 113.44047546]
[118.54650116 110.85680389]
[130.27481079 120.20809174]
[143.89796448 126.48581696]
[152.81416321 138.54821777]
[154.81941223 153.41357422]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 32]
[8 31]
[9 30]
[10 29]
[11 28]
[14 24]
[15 23]
[16 22]
[17 21]
[33 124]
[34 123]
[35 122]
[36 121]
[37 120]
[38 119]
[42 117]
[43 116]
[44 115]
[45 114]
[46 112]
[47 111]
[48 110]
[49 109]
[50 106]
[51 105]
[52 104]
[53 103]
[56 98]
[57 97]
[58 96]
[59 95]
[60 94]
[61 93]
[62 92]
[63 91]
[67 88]
[68 87]
[69 86]
[71 85]
[72 84]
[73 83]
[74 82]
[75 81]
[126 140]
[127 139]
[128 138]
[129 137]
[130 136]
[131 135]
[141 240]
[142 239]
[143 238]
[144 237]
[145 235]
[146 234]
[148 231]
[149 230]
[150 228]
[151 227]
[152 226]
[155 223]
[156 222]
[157 221]
[158 220]
[159 219]
[160 218]
[162 193]
[163 192]
[165 191]
[166 190]
[167 189]
[168 188]
[169 184]
[170 183]
[171 182]
[172 181]
[173 180]
[174 179]
[196 216]
[197 215]
[198 214]
[199 213]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
