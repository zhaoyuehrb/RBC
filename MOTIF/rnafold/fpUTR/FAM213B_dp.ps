%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:09:26 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FAM213B)
} def

/sequence { (\
AAAGGCGGGACCGGGGCAUCUCGGGGCGGGGCUUGGGGCUGGAUCU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 34 0.003946799 ubox
2 33 0.003236272 ubox
2 34 0.025552291 ubox
3 33 0.026502952 ubox
3 34 0.108446373 ubox
3 40 0.015620157 ubox
3 46 0.351308933 ubox
4 12 0.039161228 ubox
4 32 0.025723166 ubox
4 33 0.118697950 ubox
4 39 0.012317554 ubox
4 40 0.133161934 ubox
4 45 0.389244272 ubox
4 46 0.098144531 ubox
5 11 0.039106715 ubox
5 17 0.010609096 ubox
5 27 0.027018292 ubox
5 32 0.120199811 ubox
5 39 0.144318527 ubox
5 44 0.328297297 ubox
5 45 0.108720888 ubox
6 13 0.018772033 ubox
6 16 0.010719998 ubox
6 23 0.013825371 ubox
6 26 0.026823346 ubox
6 28 0.118704592 ubox
6 31 0.120062909 ubox
6 35 0.006446526 ubox
6 38 0.144633000 ubox
6 41 0.829226822 ubox
7 12 0.019049089 ubox
7 22 0.014154593 ubox
7 27 0.121520050 ubox
7 33 0.003469897 ubox
7 34 0.006980461 ubox
7 40 0.835205863 ubox
7 45 0.084116131 ubox
7 46 0.135953937 ubox
8 21 0.014157373 ubox
8 32 0.003569501 ubox
8 33 0.007015757 ubox
8 39 0.832937651 ubox
8 40 0.216573488 ubox
8 44 0.082521374 ubox
8 45 0.149991993 ubox
8 46 0.343376260 ubox
9 20 0.014169677 ubox
9 32 0.007013464 ubox
9 39 0.224668744 ubox
9 44 0.132456007 ubox
9 45 0.376015540 ubox
10 19 0.013901500 ubox
10 44 0.375266338 ubox
11 24 0.179376374 ubox
11 25 0.036240658 ubox
11 26 0.004740703 ubox
11 29 0.004451327 ubox
11 31 0.005788502 ubox
11 36 0.467086638 ubox
11 37 0.751422011 ubox
11 38 0.027011603 ubox
11 42 0.420281350 ubox
12 23 0.179853031 ubox
12 24 0.034960956 ubox
12 25 0.004438308 ubox
12 28 0.004451631 ubox
12 30 0.005778767 ubox
12 35 0.466847245 ubox
12 36 0.752411502 ubox
12 37 0.022999102 ubox
12 41 0.420388623 ubox
13 22 0.180137537 ubox
13 27 0.004298692 ubox
13 33 0.007500398 ubox
13 34 0.432529570 ubox
13 40 0.405163302 ubox
13 45 0.030087453 ubox
13 46 0.027059225 ubox
14 20 0.007995669 ubox
14 21 0.179564185 ubox
14 22 0.033866290 ubox
14 32 0.010463324 ubox
14 33 0.401416896 ubox
14 34 0.762113381 ubox
14 39 0.400178639 ubox
14 40 0.029471083 ubox
14 44 0.028463376 ubox
14 45 0.030814720 ubox
14 46 0.012262389 ubox
15 19 0.005534172 ubox
15 20 0.178902601 ubox
15 21 0.033706865 ubox
15 32 0.368408041 ubox
15 33 0.788246829 ubox
15 34 0.004334407 ubox
15 39 0.038952731 ubox
15 40 0.104705361 ubox
15 44 0.029596134 ubox
15 45 0.013396612 ubox
15 46 0.003672048 ubox
16 20 0.033126664 ubox
16 27 0.034228552 ubox
16 32 0.805934643 ubox
16 33 0.003403066 ubox
16 39 0.126016773 ubox
16 44 0.011241683 ubox
16 45 0.004014355 ubox
17 26 0.034238356 ubox
17 31 0.812113633 ubox
17 35 0.059130365 ubox
17 38 0.127907380 ubox
17 41 0.051499980 ubox
18 34 0.057519594 ubox
18 40 0.051374931 ubox
19 25 0.011185639 ubox
19 26 0.010434120 ubox
19 29 0.121728349 ubox
19 30 0.334765808 ubox
19 31 0.321668349 ubox
19 36 0.007747313 ubox
19 37 0.039270604 ubox
19 38 0.299876674 ubox
20 24 0.011968540 ubox
20 25 0.013333595 ubox
20 26 0.030445360 ubox
20 28 0.148089000 ubox
20 29 0.370604665 ubox
20 30 0.771850538 ubox
20 31 0.103957027 ubox
20 35 0.007928397 ubox
20 36 0.044033085 ubox
20 37 0.329105909 ubox
20 38 0.253252714 ubox
21 25 0.027794070 ubox
21 28 0.275522687 ubox
21 29 0.778833658 ubox
21 30 0.118496667 ubox
21 31 0.007293627 ubox
21 35 0.018553360 ubox
21 36 0.328257829 ubox
21 37 0.254668924 ubox
22 28 0.813638183 ubox
22 29 0.122327088 ubox
22 30 0.013672262 ubox
22 35 0.330828418 ubox
22 36 0.256844132 ubox
23 27 0.762198312 ubox
23 33 0.011400579 ubox
23 34 0.327111222 ubox
24 32 0.013011684 ubox
24 33 0.325362326 ubox
24 34 0.257915910 ubox
24 45 0.006165738 ubox
24 46 0.010506221 ubox
25 32 0.323096020 ubox
25 33 0.264238455 ubox
25 40 0.023336385 ubox
25 44 0.008250946 ubox
25 45 0.031274752 ubox
25 46 0.018244402 ubox
26 32 0.267660643 ubox
26 39 0.024553064 ubox
26 44 0.029232602 ubox
26 45 0.019944438 ubox
27 31 0.268552066 ubox
27 38 0.024562313 ubox
27 41 0.013226648 ubox
28 40 0.011727648 ubox
28 45 0.012357460 ubox
28 46 0.008432292 ubox
29 39 0.011282528 ubox
29 40 0.012796491 ubox
29 44 0.012538886 ubox
29 45 0.013684153 ubox
29 46 0.012240486 ubox
30 39 0.012190722 ubox
30 40 0.122845352 ubox
30 44 0.008005666 ubox
30 45 0.013300223 ubox
31 39 0.128799184 ubox
31 44 0.012644885 ubox
32 38 0.128938981 ubox
32 42 0.015400317 ubox
33 37 0.116160402 ubox
33 41 0.015241205 ubox
33 42 0.003226314 ubox
33 43 0.004235949 ubox
34 41 0.003496331 ubox
34 42 0.004464639 ubox
35 40 0.003203336 ubox
35 45 0.017614057 ubox
35 46 0.047874759 ubox
36 44 0.016872307 ubox
36 45 0.054014725 ubox
36 46 0.024330121 ubox
37 44 0.050126376 ubox
37 45 0.026661225 ubox
37 46 0.010542571 ubox
38 44 0.021709392 ubox
38 45 0.012194580 ubox
6 41 0.9500000 lbox
7 40 0.9500000 lbox
8 39 0.9500000 lbox
11 37 0.9500000 lbox
12 36 0.9500000 lbox
14 34 0.9500000 lbox
15 33 0.9500000 lbox
16 32 0.9500000 lbox
17 31 0.9500000 lbox
20 30 0.9500000 lbox
21 29 0.9500000 lbox
22 28 0.9500000 lbox
23 27 0.9500000 lbox
showpage
end
%%EOF
