%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:20:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGCCAUCUUGCUUCUUUUUCUCGCUCGCUCGCUCCCCCUCGGAAAGCUGCGAAAGUGCUUUGGCGGUUUGUCCAUCCGCAGCUUCGGCUUUUCCAGUCUGGUGGCCCUUCCGGCCACCCCUUUAACCCCAGCUUUCCCUCCCCCUUCUUUCGAUCAGAGAUCGGCGGAGACCCUCGAAGUGCGCAAACUUGACACUCACCCUGACCGGACUGGGGUUUUAAGGGGUGUGGCAGGAGGUUUUGGACUCGAUGAG\
UUUCCACCGAA\
) } def
/len { sequence length } bind def

/coor [
[67.82917023 108.62170410]
[56.82481766 118.81504822]
[45.82046890 129.00839233]
[34.81612015 139.20173645]
[23.81177139 149.39508057]
[12.80742359 159.58843994]
[1.80307436 169.78178406]
[3.66714907 181.48202515]
[-0.29242665 192.52156067]
[-8.98876476 200.21124268]
[-20.19653511 202.73709106]
[-31.12071228 199.58724976]
[-42.36186600 209.51884460]
[-43.92834854 222.29904175]
[-53.46688080 230.33984375]
[-65.52806854 229.75914001]
[-76.88529968 239.55776978]
[-88.24253082 249.35639954]
[-89.50764465 253.42997742]
[-91.76274109 256.58746338]
[-94.60459137 258.63198853]
[-97.60736084 259.51550293]
[-100.37236786 259.33352661]
[-112.17802429 268.58697510]
[-123.98368073 277.84042358]
[-135.78933716 287.09387207]
[-138.10455322 299.75985718]
[-148.09936523 307.22592163]
[-160.10554504 305.93704224]
[-172.01925659 315.05096436]
[-183.93296814 324.16485596]
[-184.73640442 334.96902466]
[-191.20449829 343.38562012]
[-201.02394104 346.79879761]
[-210.89282227 344.31521606]
[-223.01768494 353.14627075]
[-235.14256287 361.97732544]
[-239.04400635 377.53875732]
[-253.70210266 384.05950928]
[-267.87240601 376.53738403]
[-270.68466187 360.74273682]
[-259.98156738 348.79187012]
[-243.97361755 349.85244751]
[-231.84873962 341.02139282]
[-219.72387695 332.19033813]
[-213.15286255 313.98419189]
[-193.04687500 312.25112915]
[-181.13316345 303.13723755]
[-169.21945190 294.02331543]
[-163.34281921 277.47219849]
[-145.04280090 275.28820801]
[-133.23713684 266.03475952]
[-121.43148041 256.78131104]
[-109.62581635 247.52786255]
[-98.04116821 237.99917603]
[-86.68393707 228.20053101]
[-75.32670593 218.40190125]
[-70.43340302 201.53387451]
[-52.29345322 198.27767944]
[-41.05229950 188.34609985]
[-41.00075912 170.01553345]
[-27.30805016 157.35179138]
[-8.39027214 158.77743530]
[2.61407733 148.58407593]
[13.61842632 138.39073181]
[24.62277603 128.19738770]
[35.62712479 118.00404358]
[46.63147354 107.81069946]
[57.63582230 97.61735535]
[74.14835358 81.78522491]
[91.90529633 80.82114410]
[101.57734680 90.11492920]
[110.19303894 77.83609009]
[118.80873108 65.55725098]
[127.42442322 53.27841187]
[136.04011536 40.99957657]
[122.59233856 47.64468765]
[112.60956573 58.84040833]
[98.42449188 63.71726227]
[83.66770172 61.02705383]
[72.11611176 51.45832062]
[66.72626495 37.46012115]
[68.87766266 22.61520767]
[78.01967621 10.72304058]
[91.81245422 4.82734585]
[106.72583008 6.43708992]
[118.94396210 15.14163685]
[133.53030396 18.63999367]
[122.40678406 8.57682991]
[111.28326416 -1.48633349]
[100.15973663 -11.54949665]
[89.38903809 -10.38008213]
[79.93893433 -15.21440601]
[74.80143738 -24.25194740]
[75.45391846 -34.40759659]
[64.57026672 -44.72971344]
[53.68661118 -55.05183029]
[38.03337097 -61.56430817]
[39.95808411 -78.40864563]
[56.67695618 -81.22212982]
[64.00872803 -65.93548584]
[74.89237976 -55.61336517]
[85.77603149 -45.29124832]
[104.87203217 -42.13122940]
[110.22290039 -22.67301941]
[121.34642792 -12.60985565]
[132.46994019 -2.54669213]
[143.59347534 7.51647139]
[158.56752014 8.39843178]
[170.79545593 -0.28934672]
[183.02339172 -8.97712517]
[195.25132751 -17.66490364]
[207.47927856 -26.35268402]
[214.24778748 -40.65295410]
[229.10433960 -41.71698761]
[241.33227539 -50.40476608]
[253.56021118 -59.09254456]
[265.78814697 -67.78032684]
[278.01608276 -76.46810150]
[290.19271851 -85.22766876]
[302.31759644 -94.05872345]
[314.44244385 -102.88977051]
[326.56732178 -111.72082520]
[338.69219971 -120.55187225]
[350.81707764 -129.38291931]
[362.94195557 -138.21397400]
[374.96206665 -147.18707275]
[386.87579346 -156.30099487]
[398.78952026 -165.41490173]
[410.70321655 -174.52880859]
[422.61694336 -183.64271545]
[434.53067017 -192.75662231]
[446.44436646 -201.87052917]
[448.42459106 -206.62698364]
[451.69238281 -209.84609985]
[455.45553589 -211.29547119]
[458.94320679 -211.08699036]
[471.17117310 -219.77476501]
[483.39910889 -228.46253967]
[493.46224976 -239.58605957]
[500.88571167 -252.62034607]
[508.30914307 -265.65463257]
[515.73260498 -278.68890381]
[523.07922363 -291.76663208]
[530.34881592 -304.88735962]
[526.21472168 -319.90557861]
[533.77398682 -333.10830688]
[548.11706543 -336.95697021]
[555.38665771 -350.07769775]
[562.65618896 -363.19839478]
[569.92578125 -376.31912231]
[577.19537354 -389.43984985]
[574.17016602 -405.19509888]
[584.71099854 -417.28933716]
[600.73181152 -416.44491577]
[609.94281006 -403.30957031]
[605.27813721 -387.95965576]
[590.31610107 -382.17028809]
[583.04650879 -369.04956055]
[575.77691650 -355.92883301]
[568.50738525 -342.80810547]
[561.23779297 -329.68740845]
[565.58013916 -315.48599243]
[558.39471436 -302.07617188]
[543.46954346 -297.61776733]
[536.19995117 -284.49707031]
[535.70892334 -277.14846802]
[528.76690674 -271.26544189]
[521.34344482 -258.23117065]
[513.91998291 -245.19689941]
[506.49655151 -232.16261292]
[511.08847046 -226.23266602]
[522.94836426 -235.41650391]
[534.80822754 -244.60035706]
[546.66827393 -253.78401184]
[555.85174561 -241.92382812]
[543.99206543 -232.74046326]
[532.13220215 -223.55662537]
[520.27227783 -214.37277222]
[524.86419678 -208.44282532]
[539.34161377 -212.36772156]
[553.81903076 -216.29260254]
[568.29644775 -220.21749878]
[582.75048828 -224.22749329]
[597.18072510 -228.32244873]
[604.66088867 -242.24447632]
[619.81835938 -246.71951294]
[633.66052246 -239.09259033]
[637.97503662 -223.88862610]
[630.20220947 -210.12786865]
[614.95349121 -205.97433472]
[601.27569580 -213.89222717]
[586.84545898 -209.79727173]
[581.28778076 -204.96456909]
[572.22131348 -205.74009705]
[557.74389648 -201.81520081]
[543.26654053 -197.89031982]
[528.78912354 -193.96542358]
[543.37591553 -190.46900940]
[543.96484375 -175.48057556]
[537.90972900 -161.75704956]
[526.44146729 -152.08854675]
[511.89178467 -148.44073486]
[497.21868896 -151.55525208]
[485.40533447 -160.79888916]
[478.85348511 -174.29234314]
[478.89517212 -189.29228210]
[485.52099609 -202.74797058]
[492.08688354 -216.23460388]
[479.85894775 -207.54682922]
[467.63101196 -198.85903931]
[455.55828857 -189.95681763]
[443.64456177 -180.84291077]
[431.73086548 -171.72900391]
[419.81713867 -162.61508179]
[407.90341187 -153.50117493]
[395.98971558 -144.38726807]
[384.07598877 -135.27336121]
[382.57058716 -130.77352905]
[378.24188232 -127.15763092]
[371.77301025 -126.08910370]
[359.64813232 -117.25805664]
[347.52325439 -108.42700195]
[335.39837646 -99.59595490]
[323.27349854 -90.76490021]
[311.14865112 -81.93384552]
[299.02377319 -73.10279846]
[295.47940063 -66.64675140]
[286.70388794 -64.24016571]
[274.47592163 -55.55238724]
[262.24798584 -46.86460495]
[250.02005005 -38.17682648]
[237.79211426 -29.48904800]
[231.89822388 -15.81018448]
[216.16705322 -14.12474442]
[203.93911743 -5.43696547]
[191.71118164 3.25081372]
[179.48323059 11.93859291]
[167.25529480 20.62637138]
[171.03866577 29.26513100]
[168.99522400 39.53750229]
[160.71467590 47.54550934]
[148.31895447 49.61526489]
[139.70326233 61.89410400]
[131.08757019 74.17294312]
[122.47187805 86.45178223]
[113.85618591 98.73062134]
[111.13567352 113.48184967]
[114.80444336 128.02627563]
[118.47322083 142.57069397]
[129.35083008 154.05929565]
[124.96142578 168.29243469]
[128.63020325 182.83685303]
[142.32620239 190.72323608]
[146.35350037 206.00578308]
[138.32275391 219.61764526]
[122.99848175 223.48313904]
[109.47228241 215.30892944]
[105.76902771 199.94464111]
[114.08578491 186.50563049]
[110.41700745 171.96121216]
[99.80181122 161.51292419]
[103.92880249 146.23945618]
[100.26002502 131.69503784]
[96.59125519 117.15061951]
[89.40073395 115.01839447]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 69]
[2 68]
[3 67]
[4 66]
[5 65]
[6 64]
[7 63]
[12 60]
[13 59]
[16 57]
[17 56]
[18 55]
[23 54]
[24 53]
[25 52]
[26 51]
[29 49]
[30 48]
[31 47]
[35 45]
[36 44]
[37 43]
[72 247]
[73 246]
[74 245]
[75 244]
[76 243]
[88 108]
[89 107]
[90 106]
[91 105]
[95 103]
[96 102]
[97 101]
[109 239]
[110 238]
[111 237]
[112 236]
[113 235]
[115 233]
[116 232]
[117 231]
[118 230]
[119 229]
[120 227]
[121 226]
[122 225]
[123 224]
[124 223]
[125 222]
[126 221]
[127 218]
[128 217]
[129 216]
[130 215]
[131 214]
[132 213]
[133 212]
[137 211]
[138 210]
[139 209]
[140 171]
[141 170]
[142 169]
[143 168]
[144 166]
[145 165]
[148 162]
[149 161]
[150 160]
[151 159]
[152 158]
[180 198]
[181 197]
[182 196]
[183 195]
[184 193]
[185 192]
[248 265]
[249 264]
[250 263]
[252 261]
[253 260]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
