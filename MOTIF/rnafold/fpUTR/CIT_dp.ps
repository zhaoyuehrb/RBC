%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:04:26 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CIT)
} def

/sequence { (\
GGCGCGGGGCGGAACAGAUCGCAGACCUGGGGGUUCGCAGAGCCGCCAGUGGGGAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 20 0.010308045 ubox
1 27 0.097773872 ubox
1 28 0.005005109 ubox
1 44 0.023555512 ubox
1 47 0.183543330 ubox
2 10 0.374733135 ubox
2 19 0.009775114 ubox
2 22 0.065263002 ubox
2 26 0.107110030 ubox
2 27 0.006662830 ubox
2 43 0.023571425 ubox
2 46 0.183676387 ubox
2 50 0.027248299 ubox
3 9 0.375042694 ubox
3 11 0.408742430 ubox
3 21 0.065222672 ubox
3 29 0.005206285 ubox
3 42 0.023554691 ubox
3 45 0.183603814 ubox
3 49 0.027753487 ubox
3 51 0.320265511 ubox
4 10 0.413631593 ubox
4 20 0.062136270 ubox
4 22 0.441284028 ubox
4 28 0.007591671 ubox
4 38 0.017683808 ubox
4 43 0.113731714 ubox
4 44 0.118697080 ubox
4 46 0.007726198 ubox
4 50 0.321185724 ubox
5 9 0.410646491 ubox
5 11 0.034962028 ubox
5 21 0.441776812 ubox
5 29 0.096016415 ubox
5 37 0.017735568 ubox
5 42 0.160787739 ubox
5 45 0.007869163 ubox
5 49 0.320361320 ubox
5 51 0.042343619 ubox
6 10 0.032994241 ubox
6 20 0.440718292 ubox
6 27 0.207927052 ubox
6 28 0.129059072 ubox
6 36 0.016699050 ubox
6 44 0.008178446 ubox
6 47 0.024003544 ubox
6 50 0.033390903 ubox
7 19 0.411921056 ubox
7 20 0.022983810 ubox
7 26 0.214343955 ubox
7 27 0.148005189 ubox
7 28 0.006312235 ubox
7 35 0.011278722 ubox
7 36 0.007447469 ubox
7 43 0.008205571 ubox
7 46 0.024014504 ubox
7 47 0.027635647 ubox
8 19 0.030329248 ubox
8 20 0.005828710 ubox
8 26 0.150207439 ubox
8 27 0.008224854 ubox
8 34 0.007789535 ubox
8 35 0.009349456 ubox
8 44 0.024616389 ubox
8 46 0.019789914 ubox
8 47 0.260242211 ubox
9 19 0.007064670 ubox
9 22 0.617298309 ubox
9 26 0.006193761 ubox
9 34 0.011148455 ubox
9 38 0.164324693 ubox
9 43 0.024757211 ubox
9 46 0.261282472 ubox
10 21 0.618207861 ubox
10 33 0.012557945 ubox
10 37 0.164250765 ubox
10 42 0.024741923 ubox
10 45 0.262003772 ubox
11 20 0.616098989 ubox
11 27 0.006577094 ubox
11 36 0.143015517 ubox
11 44 0.261849115 ubox
12 19 0.416552238 ubox
12 20 0.082822298 ubox
12 26 0.007412742 ubox
12 34 0.005799833 ubox
12 35 0.115002014 ubox
12 36 0.081651524 ubox
12 43 0.261030830 ubox
13 19 0.092496091 ubox
13 34 0.091965880 ubox
13 35 0.114844507 ubox
14 34 0.127053478 ubox
15 29 0.067334368 ubox
15 33 0.137666043 ubox
15 51 0.017556813 ubox
16 28 0.068573344 ubox
16 35 0.006119909 ubox
16 50 0.017336170 ubox
17 27 0.068507137 ubox
17 34 0.008570182 ubox
17 35 0.015267795 ubox
17 36 0.035847524 ubox
18 34 0.019417650 ubox
18 35 0.033456357 ubox
19 25 0.061633813 ubox
19 30 0.065709891 ubox
19 31 0.036533328 ubox
19 32 0.123477500 ubox
19 33 0.020367146 ubox
19 41 0.139595308 ubox
19 52 0.035045275 ubox
19 53 0.048488216 ubox
19 54 0.326338720 ubox
19 55 0.132391958 ubox
20 24 0.062519666 ubox
20 29 0.067561414 ubox
20 30 0.038784609 ubox
20 31 0.130741928 ubox
20 32 0.018575631 ubox
20 37 0.052690715 ubox
20 40 0.148856212 ubox
20 51 0.047652013 ubox
20 52 0.065662298 ubox
20 53 0.505722705 ubox
20 54 0.132408404 ubox
21 28 0.051516058 ubox
21 34 0.003887445 ubox
21 36 0.052375459 ubox
21 38 0.252328416 ubox
21 50 0.047342308 ubox
22 29 0.136663228 ubox
22 33 0.004005302 ubox
22 37 0.252648584 ubox
22 49 0.038443224 ubox
22 51 0.517953672 ubox
23 28 0.123169531 ubox
23 35 0.016626282 ubox
23 50 0.508738041 ubox
24 34 0.010946046 ubox
24 35 0.250054130 ubox
24 36 0.039135803 ubox
25 34 0.258239710 ubox
25 35 0.028047222 ubox
25 50 0.212658738 ubox
26 32 0.016112039 ubox
26 33 0.260074919 ubox
26 49 0.158011084 ubox
26 52 0.224978409 ubox
26 53 0.206351406 ubox
26 54 0.098317274 ubox
27 31 0.017176492 ubox
27 32 0.259154799 ubox
27 33 0.005966195 ubox
27 40 0.008748553 ubox
27 49 0.838818941 ubox
27 51 0.199419911 ubox
27 52 0.192350346 ubox
27 53 0.091598728 ubox
27 54 0.006295952 ubox
28 32 0.005604529 ubox
28 39 0.008823965 ubox
28 48 0.919584403 ubox
28 51 0.136964937 ubox
28 52 0.064485646 ubox
28 53 0.004522142 ubox
29 38 0.008842463 ubox
29 47 0.944488892 ubox
29 50 0.018132912 ubox
30 36 0.004140633 ubox
30 46 0.944642957 ubox
30 47 0.059419923 ubox
31 44 0.017772906 ubox
31 46 0.059645545 ubox
32 43 0.016771985 ubox
32 44 0.950018369 ubox
33 43 0.950247407 ubox
34 41 0.017589421 ubox
34 42 0.949702293 ubox
35 40 0.017197721 ubox
35 41 0.947751454 ubox
36 40 0.940184723 ubox
37 43 0.005856277 ubox
38 42 0.005954623 ubox
43 54 0.003602256 ubox
44 53 0.003648128 ubox
46 52 0.007406248 ubox
46 53 0.017776890 ubox
46 54 0.015116209 ubox
47 51 0.007441066 ubox
47 52 0.017993658 ubox
47 53 0.015319587 ubox
9 22 0.9500000 lbox
10 21 0.9500000 lbox
11 20 0.9500000 lbox
27 49 0.9500000 lbox
28 48 0.9500000 lbox
29 47 0.9500000 lbox
30 46 0.9500000 lbox
32 44 0.9500000 lbox
33 43 0.9500000 lbox
34 42 0.9500000 lbox
35 41 0.9500000 lbox
36 40 0.9500000 lbox
showpage
end
%%EOF
