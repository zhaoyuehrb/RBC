%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:34:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACUCCAGGGCUAGUGAGCUGGACCGGAAGUAGGUUUCUACCCGACCGCAUUUUACGUGGUGCUGCAUUUCCGGUAGCGGCGGCGGGAAAUCGGCUGUGGGAGAGAGGCUAGGCCUCUGAGGAGGCGAAUCCGGCGGGUAUCAGAGCCAUCAGAACCGCCACC\
) } def
/len { sequence length } bind def

/coor [
[104.54467773 154.33973694]
[97.04605865 154.48339844]
[88.18285370 166.58477783]
[79.31964111 178.68617249]
[70.57274628 190.87188721]
[61.94297028 203.14082336]
[59.54824448 212.00523376]
[53.02852249 215.55998230]
[44.16531372 227.66136169]
[42.25320053 243.36659241]
[28.49076653 249.06262207]
[19.62755966 261.16400146]
[10.76435280 273.26541138]
[1.90114653 285.36679077]
[0.66336477 301.71914673]
[-14.23229694 308.57855225]
[-27.46245956 298.88861084]
[-25.41706467 282.61752319]
[-10.20024014 276.50357056]
[-1.33703387 264.40219116]
[7.52617264 252.30079651]
[16.38937950 240.19941711]
[17.66753769 225.35975647]
[32.06392670 218.79815674]
[40.92713547 206.69677734]
[49.67403030 194.51104736]
[58.30381012 182.24211121]
[59.58589172 174.92778015]
[67.21825409 169.82295227]
[76.08146667 157.72157288]
[84.94467163 145.62017822]
[62.09819412 106.62184143]
[82.16689301 77.24346161]
[76.29417419 63.44087982]
[70.42145538 49.63830566]
[64.54873657 35.83572769]
[58.67601395 22.03314781]
[52.80329514 8.23056984]
[46.93057632 -5.57200766]
[31.96793747 -16.26813126]
[34.71442413 -33.58075714]
[28.57839394 -47.26831055]
[22.44236374 -60.95586395]
[16.30633354 -74.64341736]
[-0.54866928 -85.64516449]
[2.13887119 -104.76625824]
[-4.51692629 -118.20874023]
[-11.17272377 -131.65122986]
[-17.81620026 -137.98971558]
[-17.82448959 -145.41555786]
[-24.22157860 -158.98306274]
[-30.61866570 -172.55056763]
[-37.01575089 -186.11807251]
[-51.61785126 -191.54176331]
[-57.91213608 -205.39227295]
[-52.65148544 -219.27972412]
[-59.04857254 -232.84722900]
[-65.44566345 -246.41473389]
[-78.32944489 -255.59725952]
[-76.75888824 -270.40881348]
[-83.15597534 -283.97634888]
[-89.68271637 -297.48196411]
[-96.33851624 -310.92443848]
[-102.99430847 -324.36691284]
[-109.65010834 -337.80938721]
[-116.30590820 -351.25189209]
[-131.54296875 -354.76840210]
[-140.91352844 -367.28744507]
[-139.99308777 -382.89791870]
[-129.21626282 -394.22903442]
[-113.67152405 -395.93057251]
[-100.69863129 -387.19912720]
[-96.42298889 -372.15740967]
[-102.86342621 -357.90768433]
[-96.20762634 -344.46520996]
[-89.55182648 -331.02270508]
[-82.89602661 -317.58023071]
[-76.24023438 -304.13775635]
[-70.42698669 -299.51724243]
[-69.58846283 -290.37341309]
[-63.19137955 -276.80590820]
[-50.76515579 -268.59384155]
[-51.87815475 -252.81182861]
[-45.48106766 -239.24432373]
[-39.08398056 -225.67681885]
[-25.02291679 -220.89956665]
[-18.34208679 -207.23130798]
[-23.44824409 -192.51516724]
[-17.05115700 -178.94766235]
[-10.65406990 -165.38014221]
[-4.25698233 -151.81263733]
[2.26975942 -138.30702209]
[8.92555714 -124.86454010]
[15.58135414 -111.42205811]
[25.57086945 -109.01601410]
[32.71833801 -101.33057404]
[34.46655273 -90.75863647]
[29.99388885 -80.77944946]
[36.12991714 -67.09189606]
[42.26594925 -53.40433884]
[48.40197754 -39.71678543]
[59.61457825 -35.10036469]
[64.82572174 -23.70851517]
[60.73315430 -11.44472790]
[66.60587311 2.35784984]
[72.47859192 16.16042709]
[78.35131073 29.96300507]
[84.22403717 43.76558304]
[90.09675598 57.56816101]
[95.96947479 71.37074280]
[115.14306641 68.12655640]
[135.65235901 78.44079590]
[148.00271606 101.89810944]
[162.86807251 99.89274597]
[177.73341370 97.88738251]
[192.59875488 95.88201904]
[207.46411133 93.87665558]
[220.10466003 83.42923737]
[235.37614441 89.40535736]
[237.56855774 105.65728760]
[224.42654419 115.46644592]
[209.46946716 108.74199677]
[194.60412598 110.74736023]
[179.73878479 112.75272369]
[164.87342834 114.75808716]
[150.00808716 116.76345062]
[147.20445251 123.71971893]
[161.21145630 129.08666992]
[175.02537537 134.93266296]
[169.41793823 148.84512329]
[155.41116333 143.47814941]
[141.59719849 137.63226318]
[138.79357910 144.58853149]
[148.11380005 156.34155273]
[157.43400574 168.09457397]
[166.75422668 179.84759521]
[176.07444763 191.60061646]
[186.99201965 192.22956848]
[195.56904602 198.65270996]
[199.09629822 208.53758240]
[196.62846375 218.51200867]
[205.49166870 230.61340332]
[219.88806152 237.17498779]
[221.16621399 252.01464844]
[230.02941895 264.11602783]
[245.24624634 270.22998047]
[247.29164124 286.50106812]
[234.06147766 296.19100952]
[219.16581726 289.33160400]
[217.92803955 272.97924805]
[209.06483459 260.87786865]
[195.30239868 255.18183899]
[193.39027405 239.47660828]
[184.52706909 227.37521362]
[166.31863403 220.94932556]
[164.32142639 200.92083740]
[155.00120544 189.16781616]
[145.68098450 177.41479492]
[136.36077881 165.66177368]
[127.04055023 153.90875244]
[119.54193115 154.05241394]
[124.44956970 168.22685242]
[112.48539734 177.27442932]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 31]
[3 30]
[4 29]
[5 27]
[6 26]
[8 25]
[9 24]
[11 22]
[12 21]
[13 20]
[14 19]
[33 110]
[34 109]
[35 108]
[36 107]
[37 106]
[38 105]
[39 104]
[41 101]
[42 100]
[43 99]
[44 98]
[46 94]
[47 93]
[48 92]
[50 91]
[51 90]
[52 89]
[53 88]
[56 85]
[57 84]
[58 83]
[60 81]
[61 80]
[62 78]
[63 77]
[64 76]
[65 75]
[66 74]
[113 126]
[114 125]
[115 124]
[116 123]
[117 122]
[133 160]
[134 159]
[135 158]
[136 157]
[137 156]
[141 154]
[142 153]
[144 151]
[145 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
