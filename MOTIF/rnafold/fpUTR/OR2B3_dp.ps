%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:34:51 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR2B3)
} def

/sequence { (\
AUAAACAAACAUUGAUUGCUUUCCUAUCUUACAUUUUUUUAGGAGUGCGAAAUAAGUGAGUCAUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.008156959 ubox
1 57 0.003314591 ubox
1 61 0.017149732 ubox
1 64 0.043564380 ubox
2 11 0.009532157 ubox
2 14 0.011208276 ubox
2 15 0.004484089 ubox
2 56 0.003346435 ubox
2 60 0.018638516 ubox
2 63 0.048588158 ubox
3 13 0.013524736 ubox
3 17 0.009534126 ubox
4 12 0.013012621 ubox
4 13 0.014941548 ubox
4 16 0.011456717 ubox
4 17 0.008520050 ubox
5 12 0.013771145 ubox
5 16 0.009733786 ubox
5 57 0.032316359 ubox
5 61 0.505119077 ubox
6 14 0.083243076 ubox
6 56 0.033029793 ubox
6 58 0.106213593 ubox
6 60 0.534102802 ubox
7 13 0.081874741 ubox
7 57 0.103614503 ubox
8 12 0.062488072 ubox
8 17 0.003880169 ubox
9 16 0.003837488 ubox
9 57 0.438650798 ubox
9 61 0.042046503 ubox
10 56 0.440850372 ubox
10 58 0.815309070 ubox
10 60 0.036013433 ubox
11 17 0.003751405 ubox
11 53 0.134418185 ubox
11 57 0.818328748 ubox
11 61 0.039732195 ubox
11 64 0.019378950 ubox
12 50 0.004950352 ubox
12 51 0.012943412 ubox
12 52 0.144700737 ubox
12 55 0.304464050 ubox
12 56 0.812694306 ubox
12 59 0.009468104 ubox
12 60 0.041675591 ubox
12 63 0.014846492 ubox
13 49 0.004593203 ubox
13 50 0.008855091 ubox
13 51 0.131989510 ubox
13 54 0.317069689 ubox
13 55 0.780239940 ubox
13 58 0.009394094 ubox
13 59 0.042818835 ubox
13 63 0.142536000 ubox
14 53 0.309612993 ubox
14 57 0.006578997 ubox
14 62 0.158829280 ubox
14 65 0.025586995 ubox
15 53 0.268156499 ubox
15 57 0.042944241 ubox
15 61 0.158367895 ubox
15 64 0.025905372 ubox
16 50 0.903079604 ubox
16 51 0.138790067 ubox
16 52 0.229516892 ubox
16 55 0.006615797 ubox
16 56 0.035795652 ubox
16 59 0.033645742 ubox
16 60 0.132712053 ubox
16 63 0.023752197 ubox
17 47 0.003163864 ubox
17 49 0.959864537 ubox
17 50 0.116755241 ubox
17 51 0.149907028 ubox
17 54 0.006243575 ubox
17 55 0.024381756 ubox
17 58 0.039723553 ubox
17 59 0.095385228 ubox
17 63 0.005324290 ubox
18 46 0.006245845 ubox
18 48 0.995769104 ubox
18 53 0.004323464 ubox
18 57 0.077911069 ubox
18 61 0.023908676 ubox
18 62 0.006280118 ubox
19 45 0.006328470 ubox
19 47 0.995654260 ubox
19 56 0.079981493 ubox
19 60 0.024978604 ubox
20 44 0.003925247 ubox
20 45 0.033393151 ubox
20 52 0.022718125 ubox
20 55 0.077744936 ubox
20 56 0.004763671 ubox
20 59 0.024848495 ubox
21 44 0.025532359 ubox
21 45 0.828096785 ubox
21 50 0.003729976 ubox
21 51 0.038255004 ubox
21 52 0.003634659 ubox
21 54 0.060767487 ubox
21 55 0.004844910 ubox
21 58 0.024163834 ubox
22 43 0.004085138 ubox
22 44 0.995507640 ubox
22 49 0.003872015 ubox
22 50 0.049133746 ubox
22 51 0.003892095 ubox
22 54 0.004027647 ubox
22 59 0.003993139 ubox
23 42 0.003291892 ubox
23 43 0.997849925 ubox
23 49 0.049297112 ubox
23 58 0.004293099 ubox
24 42 0.997849506 ubox
24 56 0.012831240 ubox
25 41 0.996690549 ubox
25 47 0.031925471 ubox
25 54 0.023223549 ubox
25 55 0.009960378 ubox
26 34 0.011076555 ubox
26 40 0.985158397 ubox
26 46 0.030155204 ubox
26 53 0.026524996 ubox
27 33 0.016297464 ubox
27 44 0.048329514 ubox
27 45 0.015756726 ubox
27 50 0.025756993 ubox
27 52 0.025533057 ubox
28 43 0.051020280 ubox
28 45 0.004232113 ubox
28 49 0.026358465 ubox
29 41 0.003291032 ubox
29 42 0.050972733 ubox
29 44 0.004242572 ubox
29 50 0.025673878 ubox
29 51 0.005420479 ubox
30 41 0.051166795 ubox
30 43 0.004122135 ubox
30 47 0.017974074 ubox
30 49 0.025163789 ubox
30 50 0.005591589 ubox
31 40 0.051090095 ubox
31 46 0.018306117 ubox
32 45 0.018302708 ubox
32 47 0.035632002 ubox
33 46 0.035681620 ubox
34 43 0.014589521 ubox
34 44 0.008285246 ubox
34 45 0.035624347 ubox
35 41 0.003390479 ubox
35 42 0.014389245 ubox
35 43 0.008307846 ubox
35 44 0.035584180 ubox
36 41 0.013509541 ubox
36 42 0.007963628 ubox
36 43 0.034885670 ubox
37 41 0.006194739 ubox
37 42 0.027475600 ubox
45 53 0.006591993 ubox
46 52 0.006805572 ubox
46 58 0.004124867 ubox
47 57 0.007481562 ubox
48 56 0.007724251 ubox
49 62 0.011518172 ubox
49 65 0.003964496 ubox
50 61 0.010968609 ubox
50 64 0.003857376 ubox
52 61 0.018547813 ubox
52 64 0.005554265 ubox
53 60 0.019028251 ubox
53 63 0.005672955 ubox
56 64 0.071306471 ubox
57 63 0.074397537 ubox
58 62 0.074642740 ubox
58 65 0.070364148 ubox
59 64 0.073968044 ubox
10 58 0.9500000 lbox
11 57 0.9500000 lbox
12 56 0.9500000 lbox
13 55 0.9500000 lbox
16 50 0.9500000 lbox
17 49 0.9500000 lbox
18 48 0.9500000 lbox
19 47 0.9500000 lbox
21 45 0.9500000 lbox
22 44 0.9500000 lbox
23 43 0.9500000 lbox
24 42 0.9500000 lbox
25 41 0.9500000 lbox
26 40 0.9500000 lbox
showpage
end
%%EOF
