%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:03:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACCGCGCGCGGCUAGCCGCUGGGGAAGCGACUCUGAGUCCCGGGCUCGGAGCGCAGGCUCAGCUCCGCGCUGCGAGCGCUACGGGCGCAGGGGCGGGGAGCCGGCCCGGAGCGCAGUUUCCAGUGGGGCCGGGGUUUCACCCGGGCCCUCUCUGUUUGAACCGAACCCGACAAAUGGGCGC\
) } def
/len { sequence length } bind def

/coor [
[61.75265121 180.93730164]
[60.60975266 165.98091125]
[68.86123657 153.45442200]
[83.05525208 148.59996033]
[68.39929199 151.79415894]
[53.74333954 154.98835754]
[39.11533737 158.30824280]
[24.51637077 161.75355530]
[9.91740608 165.19886780]
[-4.68155956 168.64418030]
[-19.28052521 172.08949280]
[-33.87948990 175.53482056]
[-36.31613541 182.70901489]
[-41.05685043 188.53161621]
[-47.47055054 192.30276489]
[-54.72917557 193.59071350]
[-61.91452789 192.28079224]
[-68.13438416 188.58396912]
[-72.63330078 183.00451660]
[-87.47388458 185.18557739]
[-102.31447601 187.36663818]
[-117.15505981 189.54768372]
[-131.99565125 191.72874451]
[-146.83622742 193.90979004]
[-154.09875488 207.49514771]
[-167.80796814 214.12168884]
[-182.61524963 211.43688965]
[-192.87944031 200.67655945]
[-207.72001648 202.85762024]
[-222.56060791 205.03866577]
[-230.61968994 209.39244080]
[-237.67445374 207.12751770]
[-252.55029297 209.05349731]
[-267.42611694 210.97946167]
[-282.30197144 212.90544128]
[-297.17779541 214.83142090]
[-312.05364990 216.75740051]
[-326.92950439 218.68336487]
[-341.80532837 220.60934448]
[-356.68118286 222.53532410]
[-371.61285400 230.56533813]
[-383.46255493 218.44010925]
[-375.09152222 203.69689941]
[-358.60714722 207.65948486]
[-343.73129272 205.73350525]
[-328.85546875 203.80752563]
[-313.97961426 201.88156128]
[-299.10379028 199.95558167]
[-284.22793579 198.02960205]
[-269.35211182 196.10362244]
[-254.47625732 194.17765808]
[-239.60041809 192.25167847]
[-224.74166870 190.19808960]
[-209.90107727 188.01702881]
[-195.06048584 185.83598328]
[-188.32624817 172.57746887]
[-174.91754150 165.74588013]
[-159.88145447 168.14785767]
[-149.01728821 179.06921387]
[-134.17669678 176.88815308]
[-119.33611298 174.70710754]
[-104.49552917 172.52604675]
[-89.65494537 170.34498596]
[-74.81435394 168.16394043]
[-58.87007523 152.35865784]
[-37.32480621 160.93585205]
[-22.72584152 157.49053955]
[-8.12687588 154.04521179]
[6.47208977 150.59989929]
[21.07105637 147.15458679]
[35.67002106 143.70927429]
[41.47232819 139.10136414]
[50.54914093 140.33239746]
[65.20510101 137.13819885]
[79.86105347 133.94400024]
[67.87435913 93.51685333]
[96.43293762 74.16717529]
[98.74129486 59.34585953]
[101.04965210 44.52453995]
[103.35800934 29.70322418]
[105.66637421 14.88190460]
[100.14495850 0.05542399]
[109.74869537 -11.32954216]
[112.05705261 -26.15085983]
[114.36540985 -40.97217941]
[116.67376709 -55.79349518]
[118.98213196 -70.61481476]
[112.85277557 -76.36311340]
[109.54567719 -83.98557281]
[109.53556824 -92.20038605]
[112.74943542 -99.65805054]
[118.59077454 -105.16301727]
[126.04875183 -107.86525726]
[129.36863708 -122.49326324]
[132.68850708 -137.12126160]
[125.38740540 -151.40669250]
[132.13502502 -165.96173096]
[147.75517273 -169.62100220]
[160.26542664 -159.57742310]
[160.06896973 -143.53556824]
[147.31651306 -133.80137634]
[143.99662781 -119.17337799]
[140.67675781 -104.54537964]
[149.13510132 -84.63227844]
[133.80345154 -68.30645752]
[131.49508667 -53.48513794]
[129.18673706 -38.66381836]
[126.87837219 -23.84250069]
[124.57001495 -9.02118301]
[130.25654602 4.74517775]
[120.48768616 17.19026375]
[118.17932892 32.01158142]
[115.87097168 46.83290100]
[113.56261444 61.65422058]
[111.25425720 76.47554016]
[130.69358826 88.51126099]
[136.22494507 115.66925049]
[151.18020630 116.82688141]
[166.13548279 117.98451233]
[181.09074402 119.14214325]
[198.83680725 109.61412048]
[214.32194519 121.17008209]
[229.30813599 121.81365204]
[244.29432678 122.45722198]
[260.40460205 113.56243134]
[274.84063721 123.52216339]
[289.83566284 123.90837860]
[304.83068848 124.29460144]
[319.82571411 124.68081665]
[334.82073975 125.06703949]
[349.81576538 125.45325470]
[363.81057739 118.07384491]
[376.33441162 126.13628387]
[391.32943726 126.52249908]
[406.32446289 126.90872192]
[421.31948853 127.29493713]
[437.30905151 121.65842438]
[447.15164185 135.46276855]
[436.61148071 148.74212646]
[420.93328857 142.28996277]
[405.93823242 141.90374756]
[390.94320679 141.51753235]
[375.94818115 141.13130188]
[363.02590942 148.53834534]
[349.42953491 140.44828796]
[334.43450928 140.06205750]
[319.43948364 139.67584229]
[304.44445801 139.28962708]
[289.44943237 138.90341187]
[274.45440674 138.51719666]
[265.45596313 146.62471008]
[252.94450378 146.41052246]
[243.65075684 137.44340515]
[228.66456604 136.79983521]
[213.67837524 136.15626526]
[206.77799988 143.73384094]
[196.62968445 146.30331421]
[186.53945923 142.77770996]
[179.93310547 134.09741211]
[164.97784424 132.93977356]
[150.02258301 131.78215027]
[135.06732178 130.62451172]
[130.51438904 136.58444214]
[142.43411255 145.69049072]
[133.32788086 157.61007690]
[121.40852356 148.50431824]
[116.85559082 154.46424866]
[121.90515137 168.58876038]
[126.95471191 182.71328735]
[132.00427246 196.83779907]
[145.83169556 204.97300720]
[147.94985962 220.87561035]
[136.73387146 232.34649658]
[120.78768158 230.58618164]
[112.34384918 216.94502258]
[117.87975311 201.88735962]
[112.83019257 187.76283264]
[107.78063202 173.63832092]
[102.73107147 159.51380920]
[106.12771606 174.12417603]
[99.87020874 187.75662231]
[86.57721710 194.70619202]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 75]
[5 74]
[6 73]
[7 71]
[8 70]
[9 69]
[10 68]
[11 67]
[12 66]
[19 64]
[20 63]
[21 62]
[22 61]
[23 60]
[24 59]
[28 55]
[29 54]
[30 53]
[32 52]
[33 51]
[34 50]
[35 49]
[36 48]
[37 47]
[38 46]
[39 45]
[40 44]
[77 115]
[78 114]
[79 113]
[80 112]
[81 111]
[83 109]
[84 108]
[85 107]
[86 106]
[87 105]
[93 103]
[94 102]
[95 101]
[117 162]
[118 161]
[119 160]
[120 159]
[122 155]
[123 154]
[124 153]
[126 150]
[127 149]
[128 148]
[129 147]
[130 146]
[131 145]
[133 143]
[134 142]
[135 141]
[136 140]
[167 179]
[168 178]
[169 177]
[170 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
