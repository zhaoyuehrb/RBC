%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:25:21 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (C10orf53)
} def

/sequence { (\
GGGCCGGAAGAGAGGUUGCUUAGCAGCGUGUGUUUCUCCCUUGCCUCUGCGGCGGCGGAGGCCUGGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 38 0.006940562 ubox
1 39 0.016574603 ubox
1 40 0.174039653 ubox
1 41 0.027836127 ubox
1 42 0.011754613 ubox
1 64 0.012669437 ubox
2 17 0.006034737 ubox
2 37 0.006622492 ubox
2 38 0.017935260 ubox
2 39 0.174938178 ubox
2 40 0.032146303 ubox
2 41 0.013879648 ubox
2 63 0.013411385 ubox
3 16 0.007856923 ubox
3 36 0.005895493 ubox
3 37 0.013151582 ubox
3 38 0.174559720 ubox
3 39 0.032032325 ubox
3 40 0.014034143 ubox
3 62 0.012950816 ubox
3 67 0.980097605 ubox
4 15 0.008037121 ubox
4 61 0.012598511 ubox
4 66 0.980963502 ubox
5 14 0.008138699 ubox
5 60 0.011865860 ubox
5 65 0.980618165 ubox
5 68 0.004757929 ubox
6 35 0.012158261 ubox
6 36 0.104165529 ubox
6 37 0.152777336 ubox
6 38 0.018107595 ubox
6 39 0.285612734 ubox
6 40 0.310312314 ubox
6 41 0.017693613 ubox
6 42 0.006092991 ubox
6 45 0.003782341 ubox
6 63 0.025697782 ubox
6 64 0.881158072 ubox
6 67 0.004841327 ubox
7 34 0.012981545 ubox
7 35 0.105002627 ubox
7 36 0.167819966 ubox
7 37 0.004307118 ubox
7 38 0.288008974 ubox
7 39 0.310442769 ubox
7 40 0.020958601 ubox
7 41 0.007944848 ubox
7 42 0.010459097 ubox
7 44 0.003787733 ubox
7 62 0.017039836 ubox
7 63 0.877832630 ubox
8 21 0.006683763 ubox
8 33 0.014201423 ubox
8 34 0.108428212 ubox
8 35 0.169218658 ubox
8 37 0.208701691 ubox
8 41 0.033062643 ubox
8 42 0.457366560 ubox
9 20 0.007070163 ubox
9 33 0.107876410 ubox
9 34 0.168154503 ubox
9 35 0.042186127 ubox
9 37 0.496189889 ubox
9 41 0.477809478 ubox
9 42 0.025734535 ubox
10 19 0.007113008 ubox
10 21 0.009098001 ubox
10 33 0.162592261 ubox
10 34 0.046934197 ubox
10 35 0.050741981 ubox
10 36 0.552077209 ubox
10 38 0.632566334 ubox
10 40 0.474460987 ubox
10 41 0.008456247 ubox
10 42 0.040776277 ubox
11 20 0.009440914 ubox
11 33 0.047831093 ubox
11 34 0.055273377 ubox
11 35 0.551452282 ubox
11 37 0.636905034 ubox
11 41 0.044019366 ubox
11 42 0.006304925 ubox
12 19 0.009453459 ubox
12 21 0.016685660 ubox
12 33 0.056419382 ubox
12 34 0.548357534 ubox
12 35 0.011688025 ubox
12 36 0.637587697 ubox
12 38 0.474435578 ubox
12 40 0.044015820 ubox
12 41 0.005010970 ubox
12 42 0.048625763 ubox
13 20 0.017561284 ubox
13 33 0.539545368 ubox
13 34 0.048682360 ubox
13 35 0.631961344 ubox
13 37 0.475059218 ubox
13 41 0.052626661 ubox
13 42 0.004477449 ubox
14 19 0.017909398 ubox
14 20 0.003245231 ubox
14 33 0.066371621 ubox
14 34 0.609638084 ubox
14 35 0.008699340 ubox
14 36 0.474423816 ubox
14 37 0.006803755 ubox
14 38 0.009060777 ubox
14 39 0.043273618 ubox
14 40 0.053096076 ubox
14 41 0.004568366 ubox
15 19 0.003570249 ubox
15 24 0.012195010 ubox
15 27 0.738454284 ubox
15 29 0.010971608 ubox
15 31 0.402584189 ubox
15 33 0.249236005 ubox
15 34 0.020129585 ubox
15 35 0.247440212 ubox
15 36 0.012648996 ubox
15 37 0.003840073 ubox
15 38 0.042966452 ubox
15 39 0.052379860 ubox
15 40 0.004517696 ubox
16 23 0.012162704 ubox
16 26 0.748094164 ubox
16 28 0.019865040 ubox
16 30 0.159538152 ubox
16 32 0.146043585 ubox
17 22 0.010191104 ubox
17 25 0.749038438 ubox
17 28 0.575608266 ubox
17 30 0.075738908 ubox
17 32 0.081794989 ubox
18 24 0.749888730 ubox
18 27 0.609881679 ubox
18 29 0.094702167 ubox
18 31 0.103010443 ubox
18 33 0.157261566 ubox
19 23 0.744438692 ubox
19 26 0.609775412 ubox
19 28 0.095524977 ubox
19 30 0.104427755 ubox
19 32 0.158754899 ubox
20 25 0.557007919 ubox
20 26 0.013033281 ubox
21 25 0.021084413 ubox
21 30 0.096579013 ubox
21 32 0.014874854 ubox
22 29 0.101904372 ubox
22 31 0.016384209 ubox
22 34 0.109207374 ubox
22 37 0.011727169 ubox
23 29 0.072272465 ubox
23 31 0.089158210 ubox
23 33 0.114978235 ubox
23 34 0.003280841 ubox
23 36 0.012316386 ubox
24 28 0.073166996 ubox
24 30 0.090034386 ubox
24 32 0.115537608 ubox
25 29 0.072985131 ubox
25 31 0.113376113 ubox
25 34 0.026164154 ubox
26 33 0.034927611 ubox
27 32 0.036224724 ubox
32 42 0.003380835 ubox
32 62 0.003528593 ubox
33 61 0.003302935 ubox
35 61 0.010276754 ubox
36 60 0.014170412 ubox
37 59 0.015823559 ubox
38 58 0.016229195 ubox
38 66 0.007626147 ubox
39 57 0.016217476 ubox
39 65 0.007550558 ubox
39 66 0.056840091 ubox
40 55 0.006151603 ubox
40 65 0.066414850 ubox
40 66 0.022211711 ubox
41 54 0.004314013 ubox
41 55 0.014864111 ubox
41 65 0.032003018 ubox
41 66 0.014631552 ubox
42 54 0.015855696 ubox
42 65 0.014782357 ubox
43 53 0.017047434 ubox
43 56 0.003245856 ubox
43 62 0.996386466 ubox
44 52 0.017050050 ubox
44 55 0.003248269 ubox
44 61 0.999765846 ubox
45 51 0.017036776 ubox
45 54 0.003247025 ubox
45 60 0.999798933 ubox
46 59 0.999690753 ubox
47 58 0.999826565 ubox
48 57 0.999079967 ubox
49 56 0.999801914 ubox
50 55 0.999495737 ubox
54 63 0.004305821 ubox
55 62 0.004362746 ubox
56 61 0.004374012 ubox
3 67 0.9500000 lbox
4 66 0.9500000 lbox
5 65 0.9500000 lbox
6 64 0.9500000 lbox
7 63 0.9500000 lbox
10 38 0.9500000 lbox
11 37 0.9500000 lbox
12 36 0.9500000 lbox
13 35 0.9500000 lbox
14 34 0.9500000 lbox
15 27 0.9500000 lbox
16 26 0.9500000 lbox
17 25 0.9500000 lbox
18 24 0.9500000 lbox
19 23 0.9500000 lbox
43 62 0.9500000 lbox
44 61 0.9500000 lbox
45 60 0.9500000 lbox
46 59 0.9500000 lbox
47 58 0.9500000 lbox
48 57 0.9500000 lbox
49 56 0.9500000 lbox
50 55 0.9500000 lbox
showpage
end
%%EOF
