%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:02:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUUUCCUUGGUCUGGGGCUCCCCACAGUUCCCCACCAUCACUCCUCCCAUUCCUUCCAACUUUAUUUUUAGCUGCCAUUGGGAGGGGGCAGGAUGGGAGGGAAAGUGAAGAAAACAGAAAAGGAGAGGGACAGAGGCCAGAGGACUUCUCAUACUGGACAGAAACCGAUCAGGC\
) } def
/len { sequence length } bind def

/coor [
[64.34584808 100.23722839]
[71.31365204 83.53943634]
[60.33523178 73.31816864]
[49.35681152 63.09690094]
[38.37839508 52.87563324]
[27.39997673 42.65436172]
[16.42156029 32.43309402]
[5.44314194 22.21182442]
[-5.53527594 11.99055576]
[-18.45049286 11.66526413]
[-27.38642693 2.89880776]
[-27.92234993 -9.20615101]
[-38.71657944 -19.62174606]
[-49.51081085 -30.03734016]
[-60.30503845 -40.45293427]
[-73.68080902 -37.04936981]
[-86.88471985 -40.67880630]
[-96.48834229 -50.28771210]
[-100.05316925 -63.28464127]
[-96.74925232 -76.23854828]
[-107.35585785 -86.84514618]
[-122.93177795 -87.01384735]
[-133.53727722 -97.92153931]
[-133.28047180 -112.76976013]
[-143.88706970 -123.37636566]
[-154.49366760 -133.98297119]
[-167.38905334 -134.76902771]
[-176.00639343 -143.84884644]
[-176.10992432 -155.96520996]
[-186.52551270 -166.75944519]
[-196.94111633 -177.55366516]
[-207.35670471 -188.34790039]
[-217.77230835 -199.14213562]
[-233.34272766 -199.58882141]
[-243.75186157 -210.68406677]
[-243.23005676 -225.52534485]
[-253.64564514 -236.31956482]
[-264.06124878 -247.11380005]
[-274.47683716 -257.90802002]
[-284.89242554 -268.70227051]
[-293.13153076 -272.72235107]
[-295.39547729 -279.78335571]
[-305.61672974 -290.76174927]
[-320.68331909 -295.58969116]
[-323.69302368 -310.17706299]
[-333.91427612 -321.15545654]
[-344.13555908 -332.13388062]
[-354.35681152 -343.11230469]
[-364.57809448 -354.09072876]
[-372.74414062 -358.25723267]
[-374.88165283 -365.35751343]
[-384.90533447 -376.51663208]
[-394.92904663 -387.67572021]
[-404.95272827 -398.83483887]
[-422.89483643 -396.41247559]
[-438.57427979 -405.14678955]
[-445.83062744 -421.39093018]
[-441.94213867 -438.59127808]
[-452.35772705 -449.38549805]
[-467.50808716 -453.94372559]
[-470.77767944 -468.47503662]
[-481.19326782 -479.26928711]
[-496.54092407 -476.98254395]
[-510.28594971 -484.18347168]
[-517.14312744 -498.10321045]
[-514.47570801 -513.38928223]
[-503.30938721 -524.16394043]
[-487.93783569 -526.28405762]
[-474.27172852 -518.93444824]
[-467.56594849 -504.94113159]
[-470.39904785 -489.68487549]
[-459.98342896 -478.89065552]
[-445.57809448 -475.10449219]
[-441.56350708 -459.80108643]
[-431.14791870 -449.00686646]
[-419.47204590 -452.46115112]
[-407.36584473 -450.59988403]
[-397.14691162 -443.71701050]
[-390.79803467 -433.07376099]
[-389.58258057 -420.66781616]
[-393.79360962 -408.85852051]
[-383.76992798 -397.69940186]
[-373.74624634 -386.54031372]
[-363.72256470 -375.38119507]
[-353.59967041 -364.31198120]
[-343.37838745 -353.33358765]
[-333.15713501 -342.35516357]
[-322.93585205 -331.37673950]
[-312.71459961 -320.39831543]
[-298.37911987 -316.35562134]
[-294.63830566 -300.98303223]
[-284.41705322 -290.00460815]
[-274.09820557 -279.11785889]
[-263.68261719 -268.32363892]
[-253.26701355 -257.52938843]
[-242.85142517 -246.73516846]
[-232.43582153 -235.94093323]
[-217.58538818 -235.93267822]
[-206.86872864 -225.13417053]
[-206.97807312 -209.55772400]
[-196.56248474 -198.76348877]
[-186.14688110 -187.96926880]
[-175.73129272 -177.17503357]
[-165.31568909 -166.38081360]
[-148.22195435 -162.47084045]
[-143.88706970 -144.58956909]
[-133.28047180 -133.98297119]
[-122.67386627 -123.37636566]
[-107.82564545 -123.63317871]
[-96.91795349 -113.02767181]
[-96.74925232 -97.45175171]
[-86.14265442 -86.84514618]
[-70.03541565 -89.93520355]
[-55.10565567 -82.75425720]
[-47.31018448 -67.94810486]
[-49.88944244 -51.24716568]
[-39.09521484 -40.83156967]
[-28.30098534 -30.41597366]
[-17.50675583 -20.00037956]
[-0.28435311 -16.70301437]
[4.68599319 1.01213777]
[15.66441059 11.23340702]
[26.64282799 21.45467567]
[37.62124634 31.67594528]
[48.59966278 41.89721298]
[59.57808304 52.11848450]
[70.55650330 62.33975220]
[81.53491974 72.56101990]
[95.41015625 65.16239929]
[112.06794739 64.80784607]
[127.94164276 72.40805817]
[139.26487732 87.08575439]
[142.95262146 106.21027374]
[157.09819031 111.20054626]
[171.24375916 116.19081879]
[185.38932800 121.18109131]
[199.53489685 126.17136383]
[213.72444153 131.03518677]
[227.95683289 135.77218628]
[244.89485168 135.03726196]
[250.28996277 151.10987854]
[236.33898926 160.74348450]
[223.21984863 150.00457764]
[208.98745728 145.26757812]
[201.62406921 146.14149475]
[194.54463196 140.31694031]
[180.39906311 135.32666016]
[166.25349426 130.33639526]
[152.10791016 125.34611511]
[137.96234131 120.35584259]
[132.33828735 125.31769562]
[142.35972595 136.47882080]
[152.38116455 147.63993835]
[162.40260315 158.80107117]
[172.42405701 169.96218872]
[182.44549561 181.12332153]
[195.06108093 189.23793030]
[191.60997009 203.83552551]
[176.69621277 205.44177246]
[170.21611023 191.91271973]
[160.39093018 180.57846069]
[150.56573486 169.24418640]
[140.74053955 157.90992737]
[130.91534424 146.57565308]
[121.09015656 135.24137878]
[115.46609497 140.20323181]
[118.65457916 154.86044312]
[131.31916809 164.70867920]
[131.37165833 180.75163269]
[118.77179718 190.68254089]
[103.18510437 186.88325500]
[96.56836700 172.26824951]
[103.99737549 158.04891968]
[100.80889893 143.39170837]
[80.11092377 135.64433289]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 128]
[3 127]
[4 126]
[5 125]
[6 124]
[7 123]
[8 122]
[9 121]
[12 119]
[13 118]
[14 117]
[15 116]
[20 112]
[21 111]
[24 108]
[25 107]
[26 106]
[29 104]
[30 103]
[31 102]
[32 101]
[33 100]
[36 97]
[37 96]
[38 95]
[39 94]
[40 93]
[42 92]
[43 91]
[45 89]
[46 88]
[47 87]
[48 86]
[49 85]
[51 84]
[52 83]
[53 82]
[54 81]
[58 75]
[59 74]
[61 72]
[62 71]
[133 150]
[134 149]
[135 148]
[136 147]
[137 146]
[138 144]
[139 143]
[166 174]
[167 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
