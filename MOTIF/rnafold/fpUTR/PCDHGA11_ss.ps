%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:40:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAUGGGCUCUAGGCGCCGCUGCUCACCAAUCAGGGAAUGGGAAGCUGCGCGCCAUUGAGUCCCUCCCUCCCCCGCCUCUACCACACAAAGCGGAAUGAGAUGGAUACUCACAGAUCCUGACACUGGAGACUUAGAAGUAUUUUCCUUCGCUUUCUGAUAUAUUUUGGAUGUAGUCGGCCUAGGACUUCAUAGAUACAUAAGCCGAUUCACAACCAACCAGCUCGAGAAACCGCGGAAUAUCGGCUUAGAGCCU\
GCC\
) } def
/len { sequence length } bind def

/coor [
[90.62914276 346.36315918]
[75.93997192 341.64810181]
[66.14945221 329.72546387]
[64.38170624 314.39971924]
[71.20081329 300.56124878]
[84.43082428 292.62585449]
[84.79467773 277.63024902]
[85.15853882 262.63467407]
[85.52239227 247.63908386]
[85.88624573 232.64350891]
[86.25009918 217.64791870]
[86.61396027 202.65232849]
[86.97781372 187.65673828]
[87.34166718 172.66116333]
[87.70552063 157.66557312]
[88.06938171 142.66998291]
[74.51562500 136.24380493]
[63.13616180 146.01663208]
[51.81618118 155.85827637]
[40.55609894 165.76840210]
[29.29601288 175.67851257]
[24.04844475 190.60411072]
[9.38259602 193.20452881]
[-1.87748873 203.11465454]
[-13.13757324 213.02476501]
[-14.29714584 228.55838013]
[-25.85764694 238.44825745]
[-40.65942764 237.24703979]
[-51.91950989 247.15716553]
[-63.17959595 257.06729126]
[-68.42716217 271.99288940]
[-83.09300995 274.59329224]
[-94.35309601 284.50341797]
[-102.24843597 299.50674438]
[-118.85107422 296.07330322]
[-120.14788055 279.16903687]
[-104.26322174 273.24334717]
[-93.00313568 263.33322144]
[-88.56095886 249.11645508]
[-73.08971405 245.80720520]
[-61.82963181 235.89707947]
[-50.56954575 225.98696899]
[-49.88093185 211.15249634]
[-38.60277939 200.94181824]
[-23.04769516 201.76467896]
[-11.78761005 191.85456848]
[-0.52752507 181.94444275]
[3.91464686 167.72767639]
[19.38589287 164.41842651]
[30.64597702 154.50831604]
[41.90606308 144.59819031]
[44.84191895 137.84040833]
[53.36334991 134.63716125]
[64.74281311 124.86434937]
[55.06289673 113.10715485]
[49.57844162 97.64777374]
[49.65991211 80.06615448]
[56.06359863 62.42897415]
[42.83746338 55.35300827]
[29.61132431 48.27704620]
[16.38518715 41.20108032]
[3.15904951 34.12511444]
[-7.01441717 37.86470795]
[-17.35707664 35.45436859]
[-24.52675056 27.91986847]
[-26.34269524 17.90167999]
[-39.39329910 10.50697136]
[-52.44390488 3.11226153]
[-65.58324432 -4.12360811]
[-78.80937958 -11.19957352]
[-92.03551483 -18.27553749]
[-108.69818878 -12.90174389]
[-123.78751373 -21.09358978]
[-128.18066406 -37.34151077]
[-141.49166870 -44.25652695]
[-154.80265808 -51.17154694]
[-168.11364746 -58.08656693]
[-179.72746277 -48.27902603]
[-194.21191406 -43.66721725]
[-209.35826111 -44.95440674]
[-222.85676575 -51.94430542]
[-232.64901733 -63.57101059]
[-237.24177551 -78.06152344]
[-235.93466187 -93.20616150]
[-228.92700195 -106.69545746]
[-217.28742981 -116.47241211]
[-202.79089355 -121.04609680]
[-187.64799500 -119.71906281]
[-174.16792297 -112.69367218]
[-164.40628052 -101.04125214]
[-159.85166931 -86.53869629]
[-161.19862366 -71.39756012]
[-147.88763428 -64.48253632]
[-134.57664490 -57.56752014]
[-121.26564789 -50.65250015]
[-109.66203308 -56.21439362]
[-96.77971649 -54.05444336]
[-87.34805298 -44.73887253]
[-84.95954895 -31.50167656]
[-71.73341370 -24.42571068]
[-58.50727463 -17.34974670]
[-53.78431320 -17.84216118]
[-48.69775009 -15.39361286]
[-45.04919434 -9.93834305]
[-31.99859047 -2.54363322]
[-18.94798470 4.85107660]
[0.34410924 3.31146479]
[10.23501396 20.89897728]
[23.46115303 27.97494125]
[36.68729019 35.05090714]
[49.91342926 42.12687302]
[63.13956451 49.20283508]
[74.69494629 39.63867188]
[70.21569824 25.32307434]
[65.73645020 11.00747681]
[55.23616409 -2.30343151]
[65.12010956 -16.07819176]
[81.09268951 -10.39374924]
[80.05205536 6.52823114]
[84.53129578 20.84383011]
[89.01054382 35.15942764]
[96.49674988 34.70484161]
[95.58758545 19.73242188]
[102.28639984 6.31132555]
[110.56000519 18.82325172]
[111.46917725 33.79567337]
[118.95538330 33.34108734]
[121.66953278 18.58868599]
[124.38368225 3.83628225]
[127.09783173 -10.91612053]
[129.81198120 -25.66852379]
[123.15515900 -36.69309235]
[125.69943237 -48.90898895]
[135.55149841 -55.89513397]
[138.44439697 -70.61353302]
[132.62866211 -85.94680786]
[143.20800781 -98.47716522]
[159.29928589 -95.31443787]
[164.34916687 -79.71217346]
[153.16278076 -67.72064209]
[150.26989746 -53.00224686]
[156.82670593 -36.71041107]
[144.56439209 -22.95437431]
[141.85023499 -8.20197105]
[139.13609314 6.55043221]
[136.42193604 21.30283546]
[133.70779419 36.05523682]
[143.48060608 47.43469620]
[158.47370911 46.97990417]
[173.46681213 46.52510834]
[188.45991516 46.07031631]
[203.45301819 45.61552048]
[218.43949890 44.97890472]
[233.41716003 44.16055679]
[248.39482117 43.34220505]
[263.37249756 42.52385712]
[278.35012817 41.70550919]
[282.27365112 27.10881424]
[290.50561523 14.45664024]
[302.22924805 4.98119164]
[316.28860474 -0.39935771]
[331.30221558 -1.16982698]
[345.79916382 2.73267126]
[358.36297607 10.91380215]
[367.77008057 22.56181526]
[373.10903931 36.52807999]
[388.08670044 35.70973206]
[403.06436157 34.89138412]
[418.04202271 34.07303619]
[431.39953613 25.59436798]
[444.52996826 32.62578964]
[459.50762939 31.80744171]
[474.48529053 30.98909187]
[489.45770264 30.07992172]
[504.42434692 29.07996368]
[519.39099121 28.08000565]
[534.35760498 27.08004761]
[549.32421875 26.08008957]
[564.29089355 25.08013153]
[579.25750732 24.08017349]
[594.15802002 22.35551262]
[608.95733643 19.91021156]
[623.75671387 17.46490860]
[630.58825684 3.53259254]
[644.32000732 -3.69362378]
[659.67187500 -1.43511176]
[670.74066162 9.43968487]
[673.27026367 24.74918365]
[666.28796387 38.60657120]
[652.47863770 45.68339920]
[637.15216064 43.25848389]
[626.20202637 32.26425171]
[611.40264893 34.70955276]
[596.60333252 37.15485382]
[609.48315430 44.84316254]
[615.47045898 58.59641647]
[612.32232666 73.26232910]
[601.21801758 83.34672546]
[586.31756592 85.07176208]
[573.20294189 77.79119873]
[566.78717041 64.23250580]
[569.47381592 49.47506332]
[580.25744629 39.04680634]
[565.29083252 40.04676437]
[550.32421875 41.04672241]
[535.35754395 42.04668045]
[520.39093018 43.04663849]
[505.42428589 44.04659653]
[490.45767212 45.04655457]
[484.01281738 48.61737442]
[475.30361938 45.96675110]
[460.32595825 46.78510284]
[445.34829712 47.60345078]
[433.06210327 56.02358246]
[418.86038208 49.05069351]
[403.88272095 49.86904526]
[388.90505981 50.68739319]
[373.92739868 51.50574112]
[370.14184570 65.97055054]
[362.05978394 78.57413483]
[350.46212769 88.07540131]
[336.47665405 93.53411865]
[321.46844482 94.40397644]
[306.90658569 90.58722687]
[294.22036743 82.44548798]
[284.65896606 70.76550293]
[279.16848755 56.68317032]
[264.19082642 57.50151825]
[249.21316528 58.31986618]
[234.23550415 59.13821411]
[219.25785828 59.95656204]
[215.47679138 62.82927322]
[209.85821533 63.37712097]
[203.90780640 60.60862732]
[188.91470337 61.06341934]
[173.92160034 61.51821518]
[158.92849731 61.97300720]
[143.93539429 62.42780304]
[151.48477173 78.70587158]
[153.46102905 95.88265228]
[150.06620789 112.16969299]
[142.04179382 125.99400330]
[130.55546570 136.14994812]
[117.04885864 141.90258789]
[103.06496429 143.03384399]
[102.70111084 158.02943420]
[102.33725739 173.02500916]
[101.97339630 188.02059937]
[101.60954285 203.01618958]
[101.24568939 218.01177979]
[100.88183594 233.00735474]
[100.51797485 248.00294495]
[100.15412140 262.99853516]
[99.79026794 277.99411011]
[99.42641449 292.98971558]
[112.25598907 301.55740356]
[118.39591217 315.71032715]
[115.88694763 330.93228149]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 255]
[7 254]
[8 253]
[9 252]
[10 251]
[11 250]
[12 249]
[13 248]
[14 247]
[15 246]
[16 245]
[17 54]
[18 53]
[19 51]
[20 50]
[21 49]
[23 47]
[24 46]
[25 45]
[28 42]
[29 41]
[30 40]
[32 38]
[33 37]
[58 112]
[59 111]
[60 110]
[61 109]
[62 108]
[66 106]
[67 105]
[68 104]
[69 101]
[70 100]
[71 99]
[74 95]
[75 94]
[76 93]
[77 92]
[113 121]
[114 120]
[115 119]
[127 147]
[128 146]
[129 145]
[130 144]
[131 143]
[134 141]
[135 140]
[148 238]
[149 237]
[150 236]
[151 235]
[152 234]
[153 231]
[154 230]
[155 229]
[156 228]
[157 227]
[166 218]
[167 217]
[168 216]
[169 215]
[171 213]
[172 212]
[173 211]
[174 209]
[175 208]
[176 207]
[177 206]
[178 205]
[179 204]
[180 203]
[181 194]
[182 193]
[183 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
