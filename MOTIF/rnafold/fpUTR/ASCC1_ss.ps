%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:15:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGAGGGGAGCGCUCAGAACACCAGCGGCUCCCAAGCUAACUCCUAGCCACUUUUCCCACCCAGCUGGGUCCCCAGGAAACUACGCCAUCGGCGCUGUCCCACUGCGCAGGCGCCAGCCCUCGGCCCGCAUGCGCACUCGGUCAAACCCGGCCUGGGGAAAUUUCCUAUCGCACGUCUGCUGCAGCAGUCUCCUGUUUCUCCUCCUACCUUCUCCAUUUUUCUAGUCCCUGCAGGGCAUAAUUGGAAUAUCAUU\
UGGAGAAAGUGUC\
) } def
/len { sequence length } bind def

/coor [
[384.08459473 382.87936401]
[373.50900269 372.24185181]
[362.93341064 361.60433960]
[352.35781860 350.96679688]
[341.78222656 340.32928467]
[327.32196045 336.75860596]
[323.07934570 321.51684570]
[312.50375366 310.87933350]
[301.92816162 300.24179077]
[291.35260010 289.60427856]
[280.77700806 278.96676636]
[261.78176880 275.24575806]
[257.00744629 255.63749695]
[246.18629456 245.24987793]
[235.36514282 234.86224365]
[224.48352051 224.53799438]
[213.54180908 214.27745056]
[202.60008240 204.01690674]
[188.03063965 206.99504089]
[174.33929443 200.74913025]
[166.86366272 187.48382568]
[168.65318298 172.18338013]
[157.71145630 161.92283630]
[142.87913513 162.65631104]
[131.63652039 152.40652466]
[130.96774292 136.84405518]
[120.02602386 126.58351898]
[109.08430481 116.32297516]
[94.08660126 116.58573151]
[83.51101685 127.22325897]
[72.93542480 137.86077881]
[69.26261902 153.84335327]
[53.50767136 158.39456177]
[41.87791443 146.83251953]
[46.33705139 131.05126953]
[62.29790115 127.28519440]
[72.87348938 116.64767456]
[83.44908142 106.01014709]
[79.76246643 99.47876740]
[66.69971466 106.85198975]
[51.70041656 106.70631409]
[59.32649231 93.78923035]
[72.38924408 86.41600800]
[68.70263672 79.88463593]
[54.13048553 83.44165039]
[39.55833054 86.99866486]
[24.98617935 90.55567932]
[10.41402626 94.11269379]
[-4.15812635 97.66971588]
[-6.09936237 112.72281647]
[-13.35075665 126.05629730]
[-24.93161774 135.86691284]
[-39.27573013 140.82785034]
[-54.44316864 140.26818848]
[-68.38266754 134.26361084]
[-79.20901489 123.62619019]
[-85.45803833 109.79455566]
[-86.28461456 94.63932037]
[-81.57695007 80.21010590]
[-71.97172546 68.45833588]
[-58.76795959 60.97335052]
[-43.75135803 58.76742935]
[-28.95278931 62.13890457]
[-16.37364197 70.63181305]
[-7.71514225 83.09755707]
[6.85701036 79.54054260]
[21.42916298 75.98352814]
[36.00131607 72.42651367]
[50.57346725 68.86949921]
[65.14562225 65.31247711]
[71.58615112 51.76554108]
[65.14562225 38.21860123]
[58.70508957 24.67166328]
[52.26455688 11.12472534]
[45.82402420 -2.42221379]
[39.38349533 -15.96915245]
[32.94296265 -29.51609039]
[26.50242996 -43.06303024]
[11.20781612 -24.52493095]
[-17.46013641 -18.22628021]
[-51.08293152 -30.98822212]
[-64.01452637 -38.58913422]
[-79.13303375 -34.83833313]
[-92.13922882 -42.73095703]
[-95.62187195 -57.16725540]
[-108.55346680 -64.76816559]
[-121.48506165 -72.36907959]
[-134.41665649 -79.96999359]
[-151.13551331 -82.78353119]
[-153.06018066 -99.62787628]
[-137.40690613 -106.14029694]
[-126.81574249 -92.90158844]
[-113.88414764 -85.30067444]
[-100.95255280 -77.69976044]
[-88.02095795 -70.09884644]
[-73.71372986 -74.07864380]
[-60.49097824 -66.55445099]
[-56.41361237 -51.52072906]
[-43.48201752 -43.91981506]
[-37.63783646 -48.62040710]
[-50.19068909 -56.83172989]
[-46.26012039 -71.30759430]
[-31.27813530 -72.04250336]
[-25.94947433 -58.02158737]
[-20.10529327 -62.72217941]
[-24.75720596 -76.98260498]
[-29.40911865 -91.24302673]
[-34.06103134 -105.50344849]
[-38.71294403 -119.76387787]
[-43.36485672 -134.02430725]
[-55.00048065 -144.74450684]
[-51.59174728 -159.24380493]
[-56.24365997 -173.50422668]
[-60.89557266 -187.76466370]
[-70.82225037 -192.10176086]
[-76.62033844 -200.99176025]
[-76.58850861 -211.38626099]
[-70.97747040 -219.87480164]
[-75.29505157 -234.23999023]
[-79.61264038 -248.60516357]
[-89.96221161 -262.03359985]
[-79.92361450 -275.69607544]
[-64.01612854 -269.83193970]
[-65.24745941 -252.92276001]
[-60.92987061 -238.55757141]
[-56.61228561 -224.19238281]
[-41.60960007 -211.96197510]
[-46.63514709 -192.41656494]
[-41.98323441 -178.15614319]
[-37.33132172 -163.89572144]
[-26.02843285 -154.19551086]
[-29.10443115 -138.67620850]
[-24.45252037 -124.41578674]
[-19.80060768 -110.15536499]
[-15.14869404 -95.89494324]
[-10.49678230 -81.63451385]
[-5.84486914 -67.37409210]
[1.65193415 -67.59304047]
[24.14234543 -68.24987793]
[27.95407867 -82.75748444]
[31.76581383 -97.26509094]
[35.57754898 -111.77269745]
[27.39345551 -125.29290771]
[31.24774170 -140.62001038]
[44.85372543 -148.66070557]
[60.13922119 -144.64459229]
[68.03561401 -130.95434570]
[63.85811234 -115.71217346]
[50.08515549 -107.96096039]
[46.27342224 -93.45335388]
[42.46168518 -78.94574738]
[38.64995193 -64.43814087]
[40.04936981 -49.50356293]
[46.48989868 -35.95662308]
[52.93043137 -22.40968513]
[59.37096405 -8.86274529]
[65.81149292 4.68419313]
[72.25202942 18.23113251]
[78.69255829 31.77807045]
[85.13309479 45.32500839]
[95.08908081 34.10546112]
[108.49370575 27.37373734]
[123.43852234 26.08823776]
[137.79580688 30.43198586]
[149.52151489 39.78655243]
[156.94621277 52.82011414]
[159.01286316 67.67707062]
[155.42720032 82.24220276]
[146.69975281 94.44185638]
[134.07304382 102.53914642]
[119.34484100 105.38125610]
[130.28656006 115.64179230]
[141.22828674 125.90233612]
[156.80158997 125.57078552]
[167.75189209 136.13230896]
[167.97200012 150.98110962]
[178.91372681 161.24165344]
[194.06774902 158.47370911]
[207.78555298 165.08244324]
[214.89741516 178.34461975]
[212.86062622 193.07518005]
[223.80235291 203.33572388]
[234.74406433 213.59626770]
[243.11302185 217.16621399]
[245.75277710 224.04110718]
[256.57391357 234.42872620]
[267.39508057 244.81634521]
[278.19442749 243.96588135]
[287.49673462 249.07635498]
[292.36523438 258.26025391]
[291.41452026 268.39117432]
[301.99011230 279.02868652]
[312.56570435 289.66622925]
[323.14129639 300.30374146]
[333.71688843 310.94125366]
[348.93359375 315.27279663]
[352.41976929 329.75369263]
[362.99536133 340.39120483]
[373.57095337 351.02874756]
[384.14654541 361.66625977]
[394.72210693 372.30377197]
[406.67410278 368.77999878]
[418.92111206 370.64733887]
[429.16003418 377.49285889]
[435.49160767 387.97323608]
[436.77267456 400.07809448]
[432.82208252 411.51541138]
[443.14633179 422.39703369]
[453.47058105 433.27865601]
[468.58200073 437.96441650]
[471.72900391 452.52276611]
[482.05328369 463.40435791]
[492.37753296 474.28598022]
[502.70178223 485.16760254]
[513.02606201 496.04922485]
[523.35028076 506.93084717]
[533.67456055 517.81250000]
[553.37945557 514.19287109]
[571.11407471 523.19665527]
[579.69415283 540.97888184]
[575.76409912 560.17950439]
[586.58526611 570.56713867]
[597.40637207 580.95477295]
[608.22753906 591.34240723]
[619.04870605 601.72998047]
[629.86981201 612.11761475]
[640.69097900 622.50524902]
[651.75177002 632.63732910]
[663.04620361 642.50830078]
[674.34063721 652.37927246]
[690.52600098 655.01855469]
[696.07910156 670.44891357]
[685.28741455 682.79681396]
[669.25250244 679.35986328]
[664.46966553 663.67364502]
[653.17523193 653.80273438]
[641.88079834 643.93176270]
[639.11096191 643.96520996]
[636.16082764 642.92285156]
[633.43316650 640.73071289]
[631.35009766 637.45928955]
[630.30334473 633.32641602]
[619.48217773 622.93878174]
[608.66107178 612.55114746]
[597.83990479 602.16351318]
[587.01873779 591.77587891]
[576.19763184 581.38830566]
[565.37646484 571.00067139]
[555.92108154 574.99499512]
[545.63848877 575.63641357]
[535.68670654 572.82739258]
[527.19470215 566.86035156]
[521.13464355 558.38751221]
[518.21044922 548.34973145]
[518.77606201 537.87182617]
[522.79296875 528.13671875]
[512.46868896 517.25512695]
[502.14443970 506.37350464]
[491.82015991 495.49188232]
[481.49591064 484.61026001]
[471.17166138 473.72863770]
[460.84738159 462.84701538]
[446.47445679 458.93957520]
[442.58898926 443.60290527]
[432.26470947 432.72128296]
[421.94046021 421.83966064]
[404.52743530 424.94253540]
[388.60931396 416.87658691]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 201]
[2 200]
[3 199]
[4 198]
[5 197]
[7 195]
[8 194]
[9 193]
[10 192]
[11 191]
[13 187]
[14 186]
[15 185]
[16 183]
[17 182]
[18 181]
[22 177]
[23 176]
[26 173]
[27 172]
[28 171]
[29 38]
[30 37]
[31 36]
[44 70]
[45 69]
[46 68]
[47 67]
[48 66]
[49 65]
[71 160]
[72 159]
[73 158]
[74 157]
[75 156]
[76 155]
[77 154]
[78 153]
[81 99]
[82 98]
[85 95]
[86 94]
[87 93]
[88 92]
[105 137]
[106 136]
[107 135]
[108 134]
[109 133]
[110 132]
[112 130]
[113 129]
[114 128]
[118 126]
[119 125]
[120 124]
[139 152]
[140 151]
[141 150]
[142 149]
[207 266]
[208 265]
[209 264]
[211 262]
[212 261]
[213 260]
[214 259]
[215 258]
[216 257]
[217 256]
[221 248]
[222 247]
[223 246]
[224 245]
[225 244]
[226 243]
[227 242]
[228 237]
[229 236]
[230 235]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
