%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:36:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUCACUCCAGUGACCAUCCCUGAGAUCUUUUUAUAAAAAACCCAGUCUUUGCUGACCAGACAAAGCAUACCAGAUCUCACCAGAGAGUCCUAGGGGACUACAGAAGGAAAAAGACAAGAGGCAGUAGGAUAUCUGUGUGUCCUCCCGCUGACCACACUUCCUUUAGUGACCCGAUUGCCUCCUCAAGUCGCAGACACU\
) } def
/len { sequence length } bind def

/coor [
[66.52253723 134.83361816]
[62.01015091 129.84783936]
[58.23375702 124.28379822]
[55.26651382 118.24930573]
[53.16590500 111.86125946]
[51.97262955 105.24342346]
[36.98928070 104.53682709]
[22.00593376 103.83023071]
[7.02258587 103.12363434]
[-7.96584988 102.53473663]
[-22.95844841 102.06357574]
[-31.64314651 104.92385101]
[-38.18231964 101.46542358]
[-53.16566849 100.75882721]
[-68.14901733 100.05223083]
[-79.78298187 110.41024780]
[-94.96816254 109.48021698]
[-104.77125549 98.32517242]
[-119.75460052 97.61857605]
[-132.47067261 109.62570953]
[-149.59941101 108.74309540]
[-160.57298279 96.00402069]
[-175.56558228 95.53285980]
[-190.55818176 95.06169891]
[-205.55078125 94.59053802]
[-220.54338074 94.11937714]
[-235.53598022 93.64821625]
[-250.52857971 93.17705536]
[-265.52117920 92.70589447]
[-274.21728516 102.99845123]
[-287.06671143 106.35154724]
[-299.31869507 101.75714111]
[-306.57583618 91.10364532]
[-321.55920410 90.39704895]
[-336.54254150 89.69045258]
[-341.15921021 104.04738617]
[-349.32858276 116.71019745]
[-360.48870850 126.81896210]
[-373.87484741 133.68905640]
[-388.57174683 136.85751343]
[-403.57629395 136.11421204]
[-417.86599731 131.51582336]
[-430.46859741 123.38151550]
[-440.52825928 112.27083588]
[-447.36376953 98.94518280]
[-450.51443481 84.31567383]
[-465.49780273 83.60907745]
[-480.48114014 82.90248108]
[-492.00033569 93.72299957]
[-507.79406738 93.14546204]
[-518.49218750 81.51251221]
[-517.74768066 65.72576904]
[-506.00228882 55.15122986]
[-490.22430420 56.06257629]
[-479.77453613 67.91912842]
[-464.79119873 68.62572479]
[-449.80783081 69.33232117]
[-445.29437256 55.06424332]
[-437.23516846 42.44100571]
[-426.17453003 32.32633591]
[-412.86236572 25.41414452]
[-398.20333862 22.18094254]
[-383.19543457 22.85299110]
[-368.86193848 27.39048004]
[-356.18176270 35.48983002]
[-346.02246094 46.60399628]
[-339.08102417 59.97941589]
[-335.83593750 74.70709991]
[-320.85260010 75.41369629]
[-305.86923218 76.12029266]
[-293.92999268 64.28147125]
[-276.78482056 64.74548340]
[-265.05001831 77.71329498]
[-250.05741882 78.18445587]
[-235.06481934 78.65561676]
[-220.07221985 79.12677765]
[-205.07962036 79.59793854]
[-190.08702087 80.06909943]
[-175.09442139 80.54026794]
[-160.10182190 81.01142883]
[-152.03117371 70.96015930]
[-139.45649719 67.34119415]
[-126.90975189 71.69210815]
[-119.04800415 82.63522339]
[-104.06465912 83.34181976]
[-93.25529480 73.15883636]
[-78.04998016 73.66197968]
[-67.44242096 85.06888580]
[-52.45907211 85.77548218]
[-37.47572327 86.48207855]
[-22.48728752 87.07097626]
[-7.49468851 87.54213715]
[-0.70432860 84.60742950]
[7.72918224 88.14028168]
[22.71253014 88.84687805]
[37.69587708 89.55347443]
[52.67922592 90.26007080]
[58.33893204 75.53620911]
[68.43983459 63.42025757]
[81.90514374 55.20381546]
[97.29942322 51.76278687]
[112.98159790 53.46399307]
[127.27988434 60.12607956]
[138.67005920 71.03884888]
[151.92654419 64.01989746]
[165.18302917 57.00094986]
[178.43951416 49.98200607]
[191.69599915 42.96305847]
[204.95248413 35.94411087]
[218.20896912 28.92516327]
[216.62203979 18.97023773]
[217.63343811 8.95760059]
[221.16712952 -0.44699159]
[226.97970581 -8.62045479]
[234.67704773 -15.02365780]
[243.74111938 -19.23698044]
[253.56475830 -20.98780441]
[263.49240112 -20.16814232]
[272.86376953 -16.84125137]
[281.05783081 -11.23684311]
[287.53399658 -3.73525000]
[301.39218140 -9.47550106]
[315.20486450 -15.32441711]
[328.97119141 -21.28163528]
[342.73751831 -27.23885345]
[356.50384521 -33.19607162]
[370.12597656 -39.47596741]
[383.59640503 -46.07505417]
[397.06680298 -52.67414474]
[410.53723145 -59.27323151]
[424.00762939 -65.87231445]
[437.47805786 -72.47140503]
[450.94845581 -79.07049561]
[459.64093018 -92.97636414]
[476.01828003 -92.13107300]
[483.23291016 -77.40419006]
[473.86300659 -63.94546127]
[457.54754639 -65.60008240]
[444.07714844 -59.00099182]
[430.60671997 -52.40190506]
[417.13632202 -45.80281830]
[403.66589355 -39.20372772]
[390.19549561 -32.60464096]
[376.72506714 -26.00555420]
[375.24313354 -22.79685593]
[372.12863159 -20.14948082]
[367.66375732 -18.82506943]
[362.46105957 -19.42975235]
[348.69473267 -13.47253418]
[334.92840576 -7.51531601]
[321.16207886 -1.55809748]
[316.26751709 3.98850060]
[307.13244629 4.38269138]
[293.27426147 10.12294292]
[292.00610352 30.28010750]
[280.65307617 47.07639694]
[262.28411865 55.83343124]
[241.93498230 54.06483459]
[225.22790527 42.18164825]
[211.97142029 49.20059586]
[198.71493530 56.21954346]
[185.45845032 63.23848724]
[172.20198059 70.25743866]
[158.94549561 77.27638245]
[145.68901062 84.29533386]
[147.14921570 110.53910065]
[134.65393066 133.66343689]
[143.66023254 145.65870667]
[152.66653442 157.65397644]
[161.67283630 169.64924622]
[170.67913818 181.64451599]
[186.07589722 184.00619507]
[195.03869629 196.29940796]
[192.69230652 210.96331787]
[201.69860840 222.95858765]
[217.21107483 222.58021545]
[229.96417236 231.41978455]
[235.05407715 246.07832336]
[230.52362061 260.91928101]
[218.11485291 270.23605347]
[202.59919739 270.44613647]
[189.94274902 261.46871948]
[185.01216125 246.75584412]
[189.70333862 231.96488953]
[180.69703674 219.96961975]
[165.96076965 218.13172913]
[156.65621948 206.09512329]
[158.68386841 190.65081787]
[149.67756653 178.65554810]
[140.67126465 166.66027832]
[131.66496277 154.66500854]
[122.65865326 142.66973877]
[116.51445007 145.40258789]
[110.05030823 147.25582886]
[103.39145660 148.19357300]
[96.66690063 148.19763184]
[90.00691986 147.26795959]
[83.54053497 145.42254639]
[77.39302063 142.69714355]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 97]
[7 96]
[8 95]
[9 94]
[10 92]
[11 91]
[13 90]
[14 89]
[15 88]
[18 85]
[19 84]
[22 80]
[23 79]
[24 78]
[25 77]
[26 76]
[27 75]
[28 74]
[29 73]
[33 70]
[34 69]
[35 68]
[46 57]
[47 56]
[48 55]
[104 165]
[105 164]
[106 163]
[107 162]
[108 161]
[109 160]
[110 159]
[121 154]
[122 153]
[123 151]
[124 150]
[125 149]
[126 148]
[127 144]
[128 143]
[129 142]
[130 141]
[131 140]
[132 139]
[133 138]
[167 192]
[168 191]
[169 190]
[170 189]
[171 188]
[174 185]
[175 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
