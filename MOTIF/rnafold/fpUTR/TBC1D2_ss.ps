%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:56:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCUUUGAGGCGCGCGCACCGCACCCGGUCCCGACUCUGUGGCUUCCUGGGGGCGGGUUCGCCGUCGGCCCCGCCCCCGCCCAGGUGUCUCCCUUUGGGAAGCUGCCCGCCGAGUCUCCGAGAUUUGUCCCUGGUGGUCCCGCGGACCCCUCGUCCCUCCGCAGUCUCCGGCUGGCAGCG\
) } def
/len { sequence length } bind def

/coor [
[118.17790985 131.16839600]
[110.84007263 134.41510010]
[102.96614075 135.95980835]
[94.94552612 135.72615051]
[87.17487335 133.72569275]
[79.04536438 146.33168030]
[70.91584778 158.93766785]
[68.88594818 167.87200928]
[62.53424835 171.69020081]
[54.18716812 184.15319824]
[52.93642426 199.92488098]
[39.42539215 206.19395447]
[31.07831383 218.65695190]
[22.73123550 231.11994934]
[24.42093658 247.07377625]
[12.90050411 258.23886108]
[-2.99257040 256.05032349]
[-11.06648064 242.18699646]
[-5.12761450 227.28366089]
[10.26823902 222.77287292]
[18.61531830 210.30987549]
[26.96239662 197.84687805]
[27.61610222 182.96662903]
[41.72417450 175.80612183]
[50.07125092 163.34312439]
[58.30985641 150.80815125]
[66.43936920 138.20216370]
[74.56888580 125.59616852]
[67.51267242 117.94248962]
[62.78045273 108.34526825]
[60.90434647 97.51557159]
[62.19773865 86.30835724]
[66.71708679 75.65509033]
[53.90373993 67.85649109]
[41.09038925 60.05789948]
[28.20984459 52.37079620]
[15.26307297 44.79576492]
[2.31630111 37.22073364]
[-10.63047028 29.64570045]
[-19.64444923 28.00527191]
[-23.73457909 21.82517624]
[-36.54792786 14.02658176]
[-49.36127853 6.22798729]
[-48.56108475 21.20662880]
[-59.65382004 31.30371666]
[-74.49143982 29.10254097]
[-82.17511749 16.21995163]
[-77.06089020 2.11872101]
[-62.90552902 -2.84325910]
[-74.99471283 -11.72310734]
[-87.08389282 -20.60295486]
[-99.17307281 -29.48280334]
[-111.26225281 -38.36265182]
[-123.35143280 -47.24250031]
[-135.44061279 -56.12234879]
[-147.52980042 -65.00219727]
[-159.61897278 -73.88204193]
[-164.86141968 -74.45603943]
[-168.93908691 -76.76645660]
[-171.38308716 -80.07183838]
[-172.09007263 -83.55214691]
[-183.70069885 -93.04916382]
[-195.31132507 -102.54618835]
[-211.39961243 -107.89437103]
[-210.71412659 -124.83444977]
[-194.24630737 -128.86523438]
[-185.81430054 -114.15680695]
[-174.20367432 -104.65979004]
[-162.59304810 -95.16277313]
[-150.73913574 -85.97122192]
[-138.64994812 -77.09137726]
[-126.56076813 -68.21152496]
[-114.47158813 -59.33168030]
[-102.38240814 -50.45183182]
[-90.29322052 -41.57198334]
[-78.20404053 -32.69213486]
[-66.11486053 -23.81228828]
[-54.02568054 -14.93244076]
[-41.56268311 -6.58536196]
[-28.74933434 1.21323252]
[-15.93598461 9.01182747]
[-3.05543900 16.69892883]
[9.89133263 24.27396202]
[22.83810425 31.84899330]
[35.78487778 39.42402267]
[43.16588974 40.08990097]
[48.88898468 47.24454880]
[61.70233536 55.04314423]
[74.51568604 62.84173965]
[88.12554169 56.53525543]
[90.45919800 41.71789932]
[92.79286194 26.90054321]
[95.12651825 12.08318710]
[91.61801147 -4.50375652]
[106.58547974 -12.46687508]
[118.38079834 -0.28875226]
[109.94387817 14.41684532]
[107.61021423 29.23420143]
[105.27655792 44.05155945]
[102.94290161 58.86891174]
[127.70169830 73.03446198]
[136.04621887 98.39500427]
[150.84275818 100.85716248]
[165.63931274 103.31932068]
[180.43585205 105.78148651]
[195.23239136 108.24364471]
[210.02894592 110.70580292]
[224.91197205 105.33866882]
[236.19657898 115.06012726]
[250.99313354 117.52228546]
[265.78967285 119.98445129]
[280.58621216 122.44660950]
[295.40356445 124.78026581]
[310.24063110 126.98525238]
[325.02825928 121.36061096]
[336.47988892 130.88475037]
[351.31695557 133.08973694]
[366.10458374 127.46508789]
[377.55621338 136.98922729]
[392.39324951 139.19421387]
[401.36932373 137.35752869]
[407.46780396 141.56837463]
[422.26434326 144.03053284]
[428.43725586 131.85894775]
[437.78173828 121.93550873]
[449.53167725 115.05991364]
[462.72769165 111.78253174]
[476.29550171 112.36038971]
[489.13320923 116.73706818]
[500.20095825 124.54800415]
[508.60507202 135.15087891]
[513.67022705 147.67840576]
[514.99377441 161.10926819]
[529.69598389 164.08349609]
[538.75543213 162.71647644]
[544.62646484 167.23901367]
[559.27484131 170.46795654]
[573.92315674 173.69689941]
[588.57153320 176.92584229]
[603.21984863 180.15478516]
[619.98919678 177.65975952]
[627.02893066 193.08308411]
[614.15716553 204.11729431]
[599.99090576 194.80313110]
[585.34259033 191.57418823]
[570.69421387 188.34524536]
[556.04589844 185.11630249]
[541.39758301 181.88735962]
[526.72174072 178.78565979]
[512.01959229 175.81144714]
[503.72851562 190.00253296]
[491.06671143 200.52153015]
[475.54800415 206.08798218]
[459.03573608 206.01490784]
[443.51882935 200.29362488]
[430.87231445 189.59678650]
[422.63082886 175.19946289]
[419.80218506 158.82708740]
[405.00564575 156.36491394]
[390.18829346 154.03126526]
[375.35122681 151.82627869]
[361.62484741 157.60864258]
[349.11196899 147.92678833]
[334.27490234 145.72180176]
[320.54852295 151.50415039]
[308.03564453 141.82229614]
[293.19857788 139.61732483]
[286.10104370 141.74984741]
[278.12405396 137.24314880]
[263.32751465 134.78099060]
[248.53096008 132.31883240]
[233.73442078 129.85667419]
[219.90974426 135.39991760]
[207.56678772 125.50234985]
[192.77023315 123.04019165]
[177.97369385 120.57803345]
[163.17713928 118.11586761]
[148.38059998 115.65370941]
[133.58406067 113.19155121]
[129.83822632 120.28758240]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 28]
[6 27]
[7 26]
[9 25]
[10 24]
[12 22]
[13 21]
[14 20]
[33 89]
[34 88]
[35 87]
[36 85]
[37 84]
[38 83]
[39 82]
[41 81]
[42 80]
[43 79]
[49 78]
[50 77]
[51 76]
[52 75]
[53 74]
[54 73]
[55 72]
[56 71]
[57 70]
[61 69]
[62 68]
[63 67]
[90 100]
[91 99]
[92 98]
[93 97]
[102 179]
[103 178]
[104 177]
[105 176]
[106 175]
[107 174]
[109 172]
[110 171]
[111 170]
[112 169]
[113 167]
[114 166]
[116 164]
[117 163]
[119 161]
[120 160]
[122 159]
[123 158]
[133 150]
[134 149]
[136 148]
[137 147]
[138 146]
[139 145]
[140 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
