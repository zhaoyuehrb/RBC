%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:24:47 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SIRT1)
} def

/sequence { (\
GUCGAGCGGGAGCAGAGGAGGCGAGGGAGGAGGGCCAGAGAGGCAGUUGGAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.043469188 ubox
1 13 0.052133073 ubox
1 22 0.285678490 ubox
1 35 0.005523452 ubox
1 44 0.217826212 ubox
2 6 0.040756580 ubox
2 9 0.024380408 ubox
2 10 0.046270695 ubox
2 11 0.128898346 ubox
2 12 0.030195517 ubox
2 16 0.251181152 ubox
2 18 0.088030391 ubox
2 19 0.104979400 ubox
2 21 0.284594099 ubox
2 24 0.053663988 ubox
2 26 0.159351104 ubox
2 27 0.048690354 ubox
2 28 0.093700431 ubox
2 30 0.016278098 ubox
2 31 0.039580093 ubox
2 33 0.015897753 ubox
2 34 0.005932782 ubox
2 39 0.019556604 ubox
2 41 0.019409006 ubox
2 43 0.217555061 ubox
2 50 0.079766709 ubox
2 51 0.677864326 ubox
3 8 0.031104591 ubox
3 9 0.059691983 ubox
3 10 0.139245425 ubox
3 15 0.269100149 ubox
3 17 0.114274847 ubox
3 18 0.113288653 ubox
3 20 0.282318853 ubox
3 23 0.057309133 ubox
3 25 0.202534606 ubox
3 26 0.061235631 ubox
3 27 0.100066026 ubox
3 29 0.022278822 ubox
3 30 0.042479844 ubox
3 32 0.020131716 ubox
3 33 0.010091536 ubox
3 38 0.020989254 ubox
3 40 0.021163359 ubox
3 42 0.215952561 ubox
3 49 0.101352511 ubox
3 50 0.724357623 ubox
4 22 0.052878175 ubox
4 48 0.093282148 ubox
5 47 0.087292162 ubox
5 48 0.716474788 ubox
6 13 0.525395106 ubox
6 22 0.236121805 ubox
6 35 0.005442030 ubox
6 44 0.018527485 ubox
6 47 0.720735833 ubox
7 12 0.525830620 ubox
7 21 0.236323026 ubox
7 23 0.071119561 ubox
7 34 0.005467798 ubox
7 43 0.018551890 ubox
7 46 0.720068924 ubox
7 49 0.261080747 ubox
8 22 0.072457812 ubox
8 36 0.010131861 ubox
8 48 0.261882446 ubox
9 35 0.010130084 ubox
9 36 0.010257666 ubox
9 47 0.260660866 ubox
9 48 0.015491798 ubox
10 35 0.010106430 ubox
10 47 0.019127136 ubox
10 48 0.011894492 ubox
11 47 0.011717357 ubox
11 48 0.007909710 ubox
12 22 0.251799248 ubox
12 44 0.736095969 ubox
12 47 0.007697918 ubox
13 21 0.251976382 ubox
13 34 0.003285714 ubox
13 43 0.740993624 ubox
13 46 0.007739713 ubox
13 49 0.014255568 ubox
14 48 0.014434019 ubox
15 47 0.013859409 ubox
15 48 0.007392845 ubox
16 47 0.008141644 ubox
16 48 0.008411159 ubox
17 36 0.017386849 ubox
17 47 0.008971483 ubox
17 48 0.014091556 ubox
18 35 0.016792147 ubox
18 47 0.017399606 ubox
18 48 0.016058546 ubox
19 47 0.016714793 ubox
19 48 0.006771654 ubox
20 36 0.826405449 ubox
20 47 0.006226483 ubox
20 48 0.009384613 ubox
21 35 0.827764469 ubox
21 44 0.071220695 ubox
21 47 0.011897138 ubox
22 34 0.827650726 ubox
22 43 0.071290379 ubox
22 46 0.012038647 ubox
22 49 0.054388110 ubox
23 48 0.054547200 ubox
24 47 0.053874601 ubox
24 48 0.009229224 ubox
25 36 0.072512559 ubox
25 47 0.009557376 ubox
25 48 0.005199249 ubox
26 35 0.072591126 ubox
26 36 0.032493001 ubox
26 47 0.006352938 ubox
26 48 0.010430708 ubox
27 35 0.032482903 ubox
27 47 0.011487046 ubox
27 48 0.044183312 ubox
28 47 0.046040634 ubox
28 48 0.062564489 ubox
29 36 0.068344850 ubox
29 47 0.066101402 ubox
29 48 0.025314775 ubox
30 35 0.068147125 ubox
30 47 0.023547625 ubox
30 48 0.269331333 ubox
31 47 0.281270649 ubox
31 48 0.076284042 ubox
32 47 0.079225428 ubox
32 48 0.016226120 ubox
33 47 0.015816365 ubox
33 48 0.008088329 ubox
34 44 0.541917648 ubox
34 47 0.003295089 ubox
35 43 0.542439072 ubox
35 46 0.003216855 ubox
35 50 0.091857677 ubox
36 42 0.542100995 ubox
36 49 0.092353115 ubox
37 48 0.091939187 ubox
38 47 0.087407946 ubox
38 48 0.014963836 ubox
39 47 0.017230410 ubox
39 48 0.014298496 ubox
40 47 0.013192570 ubox
40 48 0.018148917 ubox
41 47 0.019673884 ubox
41 48 0.021102394 ubox
42 47 0.021101070 ubox
42 48 0.005013888 ubox
43 47 0.004233217 ubox
47 53 0.007483997 ubox
48 52 0.008897448 ubox
2 51 0.9500000 lbox
3 50 0.9500000 lbox
5 48 0.9500000 lbox
6 47 0.9500000 lbox
7 46 0.9500000 lbox
12 44 0.9500000 lbox
13 43 0.9500000 lbox
20 36 0.9500000 lbox
21 35 0.9500000 lbox
22 34 0.9500000 lbox
showpage
end
%%EOF
