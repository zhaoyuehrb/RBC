%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:36:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCCUGGGCGGAAACUUUGCGAGAGUAGCGCGGGAGCUGAGAAGUUGCAGGGUUGAGUUGGUCCCGGCAAGUCCUUGAGCAGUUUGUUCCUCUGUCUUCCCGCUUCCUGGUGCCCCGACUGCGUCCCCACGAACGCCCCGUCCUUACCGCCGGCUGCUGUGGAGUGCCUCGCUGUCUCCCAGGUCCCCGAGUUCCUGGUUUCAGAGAAG\
) } def
/len { sequence length } bind def

/coor [
[271.30737305 751.37866211]
[275.07257080 733.39215088]
[287.50442505 719.74383545]
[282.46749878 705.61480713]
[277.43057251 691.48577881]
[272.39367676 677.35675049]
[267.35675049 663.22772217]
[262.31982422 649.09869385]
[257.28292847 634.96966553]
[252.07588196 629.72485352]
[252.27789307 620.59265137]
[247.45190430 606.39019775]
[242.62590027 592.18774414]
[233.36938477 590.83593750]
[225.19068909 586.17700195]
[219.23423767 578.81420898]
[216.35104370 569.73248291]
[216.97738647 560.16668701]
[221.06927490 551.43359375]
[228.10279846 544.75079346]
[224.13070679 530.28625488]
[220.15859985 515.82171631]
[216.18650818 501.35720825]
[212.21441650 486.89270020]
[207.41189575 481.27508545]
[208.29257202 472.18319702]
[204.53627014 457.66113281]
[200.77996826 443.13909912]
[186.25402832 430.37649536]
[191.93827820 411.03607178]
[187.75126648 396.63229370]
[183.56425476 382.22851562]
[179.37724304 367.82473755]
[175.19023132 353.42092896]
[164.20785522 343.35928345]
[167.78550720 327.94790649]
[163.59849548 313.54412842]
[159.41149902 299.14035034]
[155.22448730 284.73657227]
[151.03747559 270.33279419]
[133.32209778 262.22845459]
[127.18376923 243.41822815]
[137.00732422 225.89175415]
[132.18132019 211.68930054]
[127.35532379 197.48684692]
[116.64684296 191.86058044]
[112.50999451 180.06776428]
[117.67713928 168.24984741]
[113.06313324 153.97711182]
[108.01455688 148.57954407]
[108.48838806 139.45741272]
[104.08738708 125.11756134]
[99.68639374 110.77771759]
[92.48919678 112.41732788]
[84.09641266 108.93569183]
[78.02822876 99.93428040]
[77.66865540 87.27639771]
[70.59155273 74.05087280]
[63.51444244 60.82534790]
[56.43733978 47.59981918]
[49.36023331 34.37429047]
[42.28312683 21.14876366]
[23.95500946 16.35351944]
[15.10396862 -0.03464648]
[20.94077110 -17.38536453]
[13.47303009 -30.39431763]
[6.00528860 -43.40327072]
[-1.46245265 -56.41222000]
[-15.04313850 -64.52859497]
[-14.66912556 -79.41850281]
[-22.13686562 -92.42745972]
[-29.60460663 -105.43640900]
[-37.07234955 -118.44536591]
[-50.84868240 -118.89637756]
[-62.51068497 -126.03894043]
[-69.06809998 -137.91622925]
[-68.90174866 -151.37417603]
[-62.16202927 -162.89886475]
[-69.43525696 -176.01754761]
[-76.70848846 -189.13624573]
[-84.07917786 -202.20042419]
[-91.54692078 -215.20938110]
[-99.01465607 -228.21833801]
[-114.42748260 -228.88792419]
[-127.01838684 -237.80267334]
[-132.76965332 -252.11793518]
[-129.84606934 -267.26574707]
[-119.18054199 -278.41250610]
[-104.17640686 -282.00131226]
[-89.62142944 -276.88699341]
[-80.16004944 -264.70153809]
[-78.81135559 -249.33323669]
[-86.00570679 -235.68608093]
[-78.53796387 -222.67712402]
[-71.07022095 -209.66816711]
[-65.01396179 -205.43220520]
[-63.58979416 -196.40946960]
[-56.31656265 -183.29078674]
[-49.04333496 -170.17208862]
[-32.69408417 -168.69577026]
[-20.32245255 -157.65472412]
[-16.93602943 -141.25248718]
[-24.06339645 -125.91310120]
[-16.59565544 -112.90415192]
[-9.12791443 -99.89520264]
[-1.66017282 -86.88624573]
[11.38636971 -79.70035553]
[11.54649925 -63.87996292]
[19.01424026 -50.87100983]
[26.48198128 -37.86205673]
[33.94972229 -24.85310555]
[45.34679794 -24.33070946]
[55.17820358 -18.30915260]
[60.94107056 -8.18574905]
[61.10320282 3.58177471]
[55.50865555 14.07165813]
[62.58576202 27.29718590]
[69.66286469 40.52271271]
[76.73997498 53.74824142]
[83.81707764 66.97377014]
[90.89418030 80.19929504]
[105.80075836 81.87083435]
[115.63134003 70.54124451]
[125.46191406 59.21165085]
[135.29249573 47.88205719]
[131.65710449 32.79684830]
[137.61398315 18.46871758]
[150.87257385 10.40712452]
[166.33468628 11.71191692]
[178.05484009 21.88137436]
[181.52636719 37.00513458]
[175.41441345 51.26779938]
[162.06915283 59.18508911]
[146.62208557 57.71263885]
[136.79150391 69.04222870]
[126.96092987 80.37182617]
[117.13034821 91.70141602]
[114.02623749 106.37671661]
[118.42723846 120.71656799]
[122.82823181 135.05641174]
[127.33586121 149.36309814]
[131.94987488 163.63583374]
[145.89863586 175.65721130]
[141.55778503 192.66085815]
[146.38377380 206.86331177]
[151.20977783 221.06576538]
[161.65341187 223.24621582]
[170.18467712 229.51713562]
[175.30392456 238.69302368]
[176.14596558 249.08551025]
[172.62565613 258.81396484]
[165.44125366 266.14578247]
[169.62826538 280.54956055]
[173.81527710 294.95333862]
[178.00228882 309.35711670]
[182.18930054 323.76089478]
[193.47116089 334.85278320]
[189.59400940 349.23391724]
[193.78102112 363.63772583]
[197.96803284 378.04150391]
[202.15504456 392.44528198]
[206.34205627 406.84906006]
[216.16123962 411.52798462]
[221.67094421 420.65066528]
[221.25875854 431.08035278]
[215.30203247 439.38278198]
[219.05833435 453.90484619]
[222.81463623 468.42691040]
[226.67893982 482.92059326]
[230.65103149 497.38513184]
[234.62313843 511.84963989]
[238.59523010 526.31414795]
[242.56732178 540.77868652]
[261.47906494 549.97198486]
[267.37176514 569.85089111]
[256.82836914 587.36169434]
[261.65435791 601.56420898]
[266.48034668 615.76666260]
[271.41195679 629.93280029]
[276.44885254 644.06182861]
[281.48577881 658.19085693]
[286.52270508 672.31988525]
[291.55960083 686.44891357]
[296.59652710 700.57794189]
[301.63345337 714.70697021]
[313.63540649 715.34008789]
[324.68908691 719.96978760]
[333.50869751 728.03228760]
[339.07699585 738.56591797]
[340.76235962 750.32598877]
[338.39047241 761.93176270]
[332.26205444 772.02844238]
[323.11486816 779.44549561]
[327.51586914 793.78533936]
[331.91683960 808.12518311]
[336.42446899 822.43188477]
[341.03848267 836.70458984]
[345.65249634 850.97729492]
[358.17910767 861.56109619]
[355.01071167 877.65124512]
[339.40667725 882.69561768]
[327.41909790 871.50500488]
[331.37976074 855.59130859]
[326.76574707 841.31860352]
[322.15173340 827.04583740]
[317.10317993 821.64831543]
[317.57699585 812.52618408]
[313.17599487 798.18634033]
[308.77499390 783.84649658]
[290.94628906 780.60498047]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 185]
[4 184]
[5 183]
[6 182]
[7 181]
[8 180]
[9 179]
[11 178]
[12 177]
[13 176]
[20 173]
[21 172]
[22 171]
[23 170]
[24 169]
[26 168]
[27 167]
[28 166]
[30 162]
[31 161]
[32 160]
[33 159]
[34 158]
[36 156]
[37 155]
[38 154]
[39 153]
[40 152]
[43 146]
[44 145]
[45 144]
[48 142]
[49 141]
[51 140]
[52 139]
[53 138]
[57 121]
[58 120]
[59 119]
[60 118]
[61 117]
[62 116]
[65 111]
[66 110]
[67 109]
[68 108]
[70 106]
[71 105]
[72 104]
[73 103]
[78 99]
[79 98]
[80 97]
[81 95]
[82 94]
[83 93]
[122 137]
[123 136]
[124 135]
[125 134]
[193 209]
[194 208]
[195 207]
[196 205]
[197 204]
[198 203]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
