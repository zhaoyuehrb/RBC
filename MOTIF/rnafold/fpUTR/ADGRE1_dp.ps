%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:39:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ADGRE1)
} def

/sequence { (\
ACUGAAAACCCAGCGUUAGUAGAAAAGUUUCUUUUCUUUGAAUGACAGAACUACAGCAUA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 16 0.003829405 ubox
1 20 0.034317056 ubox
2 13 0.651088375 ubox
2 15 0.004009064 ubox
2 19 0.036348825 ubox
2 22 0.006137455 ubox
2 48 0.056542050 ubox
2 56 0.678248537 ubox
3 12 0.659222795 ubox
3 18 0.036335906 ubox
3 21 0.006259424 ubox
3 47 0.056793647 ubox
3 53 0.006403762 ubox
3 55 0.682081523 ubox
3 58 0.035427179 ubox
4 11 0.659453226 ubox
4 14 0.007316163 ubox
4 17 0.035275552 ubox
4 20 0.006143733 ubox
4 36 0.003309963 ubox
4 46 0.055981665 ubox
4 52 0.006721754 ubox
4 54 0.680325439 ubox
4 57 0.039250310 ubox
5 16 0.032438529 ubox
5 35 0.003317167 ubox
6 34 0.003299814 ubox
7 17 0.019087573 ubox
7 33 0.003240850 ubox
8 16 0.022345275 ubox
8 20 0.003402782 ubox
9 15 0.023435247 ubox
9 19 0.003519140 ubox
11 40 0.009802152 ubox
11 44 0.027748822 ubox
12 39 0.009689716 ubox
12 43 0.026675949 ubox
12 52 0.016634867 ubox
13 20 0.024668651 ubox
13 28 0.003237040 ubox
13 38 0.008883262 ubox
13 51 0.017461147 ubox
13 57 0.228193937 ubox
14 19 0.027041863 ubox
14 27 0.003295855 ubox
14 40 0.006999704 ubox
14 44 0.876496976 ubox
14 56 0.230373549 ubox
15 39 0.005923259 ubox
15 43 0.880484558 ubox
15 46 0.311697167 ubox
15 51 0.033654786 ubox
15 54 0.094706400 ubox
15 57 0.199800931 ubox
15 59 0.006427989 ubox
16 41 0.185824939 ubox
16 42 0.868419254 ubox
16 45 0.311950558 ubox
16 49 0.003203177 ubox
16 50 0.033416635 ubox
16 53 0.068571406 ubox
16 56 0.199444633 ubox
16 58 0.006417590 ubox
17 40 0.237772978 ubox
17 41 0.841341998 ubox
17 44 0.311228502 ubox
17 48 0.003345705 ubox
17 49 0.032424516 ubox
17 53 0.222680199 ubox
17 55 0.190043660 ubox
18 35 0.003540124 ubox
18 37 0.006108888 ubox
18 38 0.012511353 ubox
18 39 0.271499894 ubox
18 43 0.307282547 ubox
18 52 0.241015150 ubox
19 34 0.003773877 ubox
19 36 0.006117365 ubox
19 37 0.005921043 ubox
19 38 0.262259011 ubox
19 43 0.012554059 ubox
19 46 0.029749706 ubox
19 51 0.242113171 ubox
19 54 0.202303150 ubox
19 57 0.009642452 ubox
20 40 0.044908628 ubox
20 42 0.021031289 ubox
20 44 0.006711261 ubox
20 45 0.029337027 ubox
20 50 0.238400539 ubox
20 53 0.202373389 ubox
20 56 0.009504307 ubox
21 32 0.021725876 ubox
21 37 0.959578786 ubox
21 38 0.031348284 ubox
21 39 0.026028655 ubox
21 43 0.007878253 ubox
21 52 0.201008212 ubox
22 31 0.023238243 ubox
22 35 0.004873594 ubox
22 36 0.977608144 ubox
22 37 0.004424145 ubox
22 38 0.011294361 ubox
22 39 0.009553925 ubox
22 51 0.197966483 ubox
23 30 0.023045688 ubox
23 34 0.008959937 ubox
23 35 0.977484550 ubox
23 37 0.010341870 ubox
23 38 0.009240951 ubox
23 39 0.004968883 ubox
24 29 0.020077025 ubox
24 33 0.011113101 ubox
24 34 0.976394730 ubox
24 35 0.011643689 ubox
24 37 0.007980763 ubox
24 38 0.004307574 ubox
24 39 0.030497112 ubox
25 32 0.011747119 ubox
25 33 0.976010556 ubox
25 34 0.015204273 ubox
25 35 0.007952723 ubox
25 37 0.003347470 ubox
25 38 0.031569380 ubox
26 32 0.973820797 ubox
26 33 0.017253707 ubox
26 34 0.008863290 ubox
26 35 0.005957202 ubox
26 37 0.032086866 ubox
26 52 0.021750426 ubox
27 31 0.952818118 ubox
27 32 0.014921691 ubox
27 33 0.009300843 ubox
27 34 0.006140560 ubox
27 36 0.032354403 ubox
27 43 0.030683132 ubox
27 46 0.172509356 ubox
27 51 0.023884914 ubox
27 54 0.004207842 ubox
27 57 0.004593824 ubox
28 42 0.026342017 ubox
28 45 0.170552825 ubox
28 48 0.007758520 ubox
28 49 0.004217098 ubox
28 50 0.022136843 ubox
28 53 0.004059764 ubox
28 56 0.004576092 ubox
29 41 0.020844187 ubox
29 42 0.108426335 ubox
29 44 0.144693586 ubox
29 45 0.011215671 ubox
29 47 0.007413233 ubox
29 48 0.004304511 ubox
29 49 0.018535748 ubox
29 50 0.058041200 ubox
29 55 0.003833263 ubox
30 40 0.012612543 ubox
30 41 0.160098810 ubox
30 44 0.012925929 ubox
30 45 0.025949240 ubox
30 47 0.003354753 ubox
30 48 0.012657850 ubox
30 49 0.060851169 ubox
31 40 0.163729079 ubox
31 44 0.028153928 ubox
31 48 0.062035113 ubox
32 41 0.050048072 ubox
32 42 0.060893317 ubox
32 45 0.004652965 ubox
32 47 0.059280022 ubox
32 50 0.004885286 ubox
33 40 0.051360467 ubox
33 41 0.063177442 ubox
33 42 0.026848758 ubox
33 44 0.005514622 ubox
33 45 0.012564689 ubox
33 47 0.010667567 ubox
33 48 0.003241245 ubox
33 49 0.005358514 ubox
34 40 0.062825447 ubox
34 41 0.027987278 ubox
34 42 0.025863243 ubox
34 44 0.012151672 ubox
34 45 0.026082572 ubox
34 47 0.003516769 ubox
34 48 0.005300583 ubox
34 50 0.016421490 ubox
35 40 0.025184723 ubox
35 41 0.029293168 ubox
35 44 0.023943487 ubox
35 45 0.051805425 ubox
35 47 0.004338530 ubox
35 49 0.018980977 ubox
36 40 0.029440897 ubox
36 44 0.053834798 ubox
36 48 0.019420533 ubox
37 45 0.008714695 ubox
37 47 0.018136992 ubox
37 48 0.003734274 ubox
37 49 0.089955188 ubox
37 50 0.009061000 ubox
38 44 0.011667843 ubox
38 45 0.015404057 ubox
38 47 0.006190457 ubox
38 48 0.118462540 ubox
38 49 0.026901062 ubox
38 50 0.004767435 ubox
38 56 0.006332823 ubox
39 44 0.015344613 ubox
39 47 0.127738016 ubox
39 48 0.027775600 ubox
39 49 0.008215584 ubox
39 55 0.008185985 ubox
39 58 0.008015348 ubox
40 46 0.129174113 ubox
40 54 0.008460539 ubox
40 57 0.008918216 ubox
42 59 0.029102766 ubox
43 53 0.004172957 ubox
43 55 0.013879594 ubox
43 58 0.030375246 ubox
44 52 0.004759196 ubox
44 54 0.015414856 ubox
44 57 0.030897587 ubox
52 60 0.015173481 ubox
53 59 0.016961552 ubox
2 56 0.9500000 lbox
3 55 0.9500000 lbox
4 54 0.9500000 lbox
14 44 0.9500000 lbox
15 43 0.9500000 lbox
16 42 0.9500000 lbox
17 41 0.9500000 lbox
21 37 0.9500000 lbox
22 36 0.9500000 lbox
23 35 0.9500000 lbox
24 34 0.9500000 lbox
25 33 0.9500000 lbox
26 32 0.9500000 lbox
27 31 0.9500000 lbox
showpage
end
%%EOF
