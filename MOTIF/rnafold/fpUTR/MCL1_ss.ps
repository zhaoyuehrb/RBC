%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:26:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCAACCCUCCGGAAGCUGCCGCCCCUUUCCCCUUUUAUGGGAAUACUUUUUUUAAAAAAAAAGAGUUCGCUGGCGCCACCCCGUAGGACUGGCCGCCCUAAAACCGUGAUAAAGGAGCUGCUCGCCACUUCUCACUUCCGCUUCCUUCCAGUAAGGAGUCGGGGUCUUCCCCAGUUUUCUCAGCCAGGCGGCGGCGGCGACUGGCA\
) } def
/len { sequence length } bind def

/coor [
[100.38361359 456.49157715]
[91.25498199 468.68124390]
[77.95442200 476.09844971]
[62.78632355 477.45809937]
[48.37865448 472.52462769]
[37.22763062 462.15283203]
[31.26523781 448.13961792]
[31.52449417 432.91290283]
[37.96047974 419.11080933]
[49.45812607 409.12460327]
[64.02539062 404.68450928]
[65.82482910 389.79281616]
[67.62427521 374.90115356]
[69.42371368 360.00946045]
[60.05771255 348.48498535]
[61.67046356 333.35708618]
[73.82189941 323.61129761]
[75.62133789 308.71963501]
[77.42078400 293.82794189]
[79.22022247 278.93627930]
[81.01966095 264.04458618]
[82.81910706 249.15292358]
[84.61854553 234.26124573]
[86.41798401 219.36956787]
[88.21743011 204.47789001]
[89.90489960 189.57310486]
[91.48030090 174.65606689]
[93.05570221 159.73902893]
[80.75048065 151.16105652]
[67.29946899 157.79959106]
[53.84845734 164.43814087]
[40.39744568 171.07667542]
[26.94643211 177.71522522]
[23.41036415 192.94776917]
[10.87929916 202.30224609]
[-4.72997761 201.36178589]
[-16.04724312 190.57041931]
[-17.72883034 175.02351379]
[-8.98074436 162.06184387]
[6.06643486 157.80549622]
[20.30788994 164.26420593]
[33.75890350 157.62567139]
[47.20991516 150.98712158]
[60.66092682 144.34858704]
[74.11193848 137.71003723]
[57.15114975 123.30803680]
[48.20426559 101.40924835]
[33.39070892 99.05159760]
[18.57715225 96.69394684]
[3.76359463 94.33629608]
[-11.04996300 91.97864532]
[-25.86351967 89.62099457]
[-40.67707825 87.26334381]
[-55.49063492 84.90569305]
[-70.30419159 82.54804230]
[-85.41666412 88.91555786]
[-98.32213593 78.79722595]
[-95.74457550 62.60190964]
[-80.33554840 56.98996735]
[-67.94654083 67.73448181]
[-53.13298416 70.09213257]
[-38.31942749 72.44978333]
[-23.50586891 74.80743408]
[-8.69231129 77.16508484]
[6.12124586 79.52274323]
[20.93480301 81.88039398]
[35.74835968 84.23804474]
[50.56191635 86.59569550]
[54.75794220 80.37931061]
[40.34045029 76.23975372]
[39.82233810 61.24870682]
[53.91963196 56.12364197]
[63.14999008 67.94654846]
[67.34600830 61.73017120]
[59.61936569 48.87330627]
[51.89272308 36.01644135]
[44.16607666 23.15957832]
[36.34302139 10.36114788]
[28.42399979 -2.37812495]
[20.50497627 -15.11739731]
[5.37483215 -18.82097816]
[-2.47470760 -31.85322189]
[1.14933169 -46.25467682]
[-6.76969147 -58.99394989]
[-20.26678658 -69.25381470]
[-14.14425182 -85.06364441]
[2.74261570 -83.55698395]
[5.96958113 -66.91297150]
[13.88860416 -54.17369843]
[28.40677261 -51.04985428]
[36.61926270 -38.24322891]
[33.24424744 -23.03642082]
[41.16327286 -10.29714775]
[49.08229446 2.44212484]
[55.28428268 6.46387625]
[57.02294159 15.43293285]
[64.74958801 28.28979683]
[72.47623444 41.14666367]
[80.20287323 54.00352478]
[87.70287323 54.00352478]
[87.08601379 39.01621628]
[79.99914551 25.79591751]
[87.70300293 12.92538643]
[102.70300293 12.92552948]
[110.40661621 25.79620743]
[103.31973267 39.01621628]
[102.70287323 54.00352478]
[110.20287323 54.00352478]
[117.92951965 41.14666367]
[125.65616608 28.28979683]
[133.38281250 15.43293285]
[131.02650452 2.75078440]
[137.72798157 -7.79904413]
[149.43377686 -10.85267639]
[157.35279846 -23.59194946]
[165.27182007 -36.33122253]
[161.89680481 -51.53803253]
[170.10929871 -64.34465790]
[184.62745667 -67.46849823]
[192.54649353 -80.20777130]
[190.31597900 -96.09501648]
[201.45059204 -107.64488983]
[217.40882874 -105.99733734]
[225.94886780 -92.41620636]
[220.51954651 -77.31977844]
[205.28576660 -72.28874969]
[197.36672974 -59.54947662]
[200.99076843 -45.14802170]
[193.14123535 -32.11577988]
[178.01109314 -28.41219902]
[170.09207153 -15.67292595]
[162.17304993 -2.93365312]
[162.54829407 14.61065960]
[146.23966980 23.15957832]
[138.51303101 36.01644135]
[130.78639221 48.87330627]
[123.05973816 61.73017120]
[127.20892334 67.97791290]
[139.70440674 59.67954254]
[152.20002747 51.38138199]
[160.49798584 63.87714005]
[148.00277710 72.17502594]
[135.50729370 80.47339630]
[139.65647888 86.72113800]
[154.50379944 84.58641052]
[169.35112000 82.45169067]
[184.19844055 80.31697083]
[199.04576111 78.18224335]
[213.89308167 76.04752350]
[224.61970520 64.11776733]
[240.62554932 65.20989990]
[249.63229370 78.48612213]
[244.73072815 93.76206207]
[229.68093872 99.31932068]
[216.02781677 90.89484406]
[201.18048096 93.02956390]
[186.33316040 95.16429138]
[171.48583984 97.29901123]
[156.63851929 99.43373108]
[141.79119873 101.56845856]
[141.00349426 109.02697754]
[139.42810059 123.94401550]
[138.64039612 131.40254211]
[152.71424866 136.59164429]
[166.78808594 141.78076172]
[180.86193848 146.96987915]
[196.92315674 143.65791321]
[207.61834717 156.08952332]
[201.94522095 171.47612000]
[185.73979187 173.98930359]
[175.67282104 161.04371643]
[161.59898376 155.85461426]
[147.52513123 150.66549683]
[133.45129395 145.47637939]
[127.08164978 149.43589783]
[136.94482422 160.73713684]
[146.80798340 172.03836060]
[156.67115784 183.33959961]
[168.52783203 192.52760315]
[170.63694763 207.37858582]
[161.80723572 219.50442505]
[147.02587891 222.05622864]
[134.64167786 213.59268188]
[131.64958191 198.89358521]
[125.88050842 185.04736328]
[120.11144257 171.20114136]
[114.34237671 157.35491943]
[107.97274017 161.31442261]
[106.39733887 176.23147583]
[104.82193756 191.14851379]
[107.03296661 200.01295471]
[103.10910797 206.27732849]
[101.30966187 221.16900635]
[99.51022339 236.06068420]
[97.71078491 250.95236206]
[95.91133881 265.84402466]
[94.11190033 280.73571777]
[92.31246185 295.62738037]
[90.51301575 310.51907349]
[88.71357727 325.41073608]
[98.19389343 337.77041626]
[96.15686798 352.84704590]
[84.31539154 361.80889893]
[82.51594543 376.70059204]
[80.71650696 391.59225464]
[78.91706848 406.48394775]
[92.00745392 414.26608276]
[100.79553223 426.70352173]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 206]
[12 205]
[13 204]
[14 203]
[17 200]
[18 199]
[19 198]
[20 197]
[21 196]
[22 195]
[23 194]
[24 193]
[25 192]
[26 190]
[27 189]
[28 188]
[29 45]
[30 44]
[31 43]
[32 42]
[33 41]
[47 68]
[48 67]
[49 66]
[50 65]
[51 64]
[52 63]
[53 62]
[54 61]
[55 60]
[74 99]
[75 98]
[76 97]
[77 96]
[78 94]
[79 93]
[80 92]
[83 89]
[84 88]
[108 137]
[109 136]
[110 135]
[111 134]
[114 132]
[115 131]
[116 130]
[119 127]
[120 126]
[144 160]
[145 159]
[146 158]
[147 157]
[148 156]
[149 155]
[163 174]
[164 173]
[165 172]
[166 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
