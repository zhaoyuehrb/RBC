%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:51:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGUGCGUCCAGGCUGGCGCCGCGCUGCGCCCCCUCUGCGCCGGCCUCUGCGGCUGCGCGCUGGCGGGGCUGAGGCCGAGGGGUGGGGGUCGCGCCGGGGGCCGGCGGAGCUCCUGUGGUGGUAGCAGCGGUAGCGGGAGACGGAGCGAGUCCAGCGGCCGCGGGCAGACCCGGAGGGAACGGAGGAAGCGGUC\
) } def
/len { sequence length } bind def

/coor [
[131.46170044 272.64398193]
[128.81732178 257.87890625]
[126.17294312 243.11384583]
[123.52856445 228.34877014]
[108.53766632 221.67420959]
[100.39329529 207.23724365]
[102.47469330 190.62524414]
[114.15867615 178.40371704]
[111.27677155 163.68316650]
[108.39487457 148.96261597]
[79.87213898 140.81620789]
[63.42071915 119.26323700]
[63.20701218 94.69378662]
[49.09789658 89.60135651]
[34.98878479 84.50891876]
[20.87966919 79.41648102]
[6.77055550 74.32404327]
[-7.33855820 69.23161316]
[-22.94588470 71.82427216]
[-32.29047394 60.22565460]
[-46.39958954 55.13322067]
[-60.58890915 50.26874161]
[-74.85475922 45.63348770]
[-89.12060547 40.99823380]
[-103.38645172 36.36297989]
[-118.90215302 39.45709991]
[-128.61555481 28.16554832]
[-142.88139343 23.53029251]
[-158.39709473 26.62441444]
[-168.11050415 15.33286190]
[-182.37634277 10.69760704]
[-196.64219666 6.06235170]
[-210.94491577 1.54216254]
[-225.28358459 -2.86266756]
[-239.62225342 -7.26749754]
[-253.96092224 -11.67232800]
[-268.29959106 -16.07715797]
[-272.52307129 -14.94585323]
[-276.48580933 -15.19990253]
[-279.78231812 -16.58541298]
[-282.13201904 -18.74239922]
[-283.40316772 -21.25506210]
[-297.42840576 -26.57413483]
[-311.45364380 -31.89320755]
[-325.47888184 -37.21228027]
[-339.50415039 -42.53135300]
[-353.52938843 -47.85042953]
[-367.55462646 -53.16950226]
[-372.73269653 -52.32479095]
[-377.26010132 -53.44683456]
[-380.49456787 -55.95547104]
[-382.11865234 -59.09928513]
[-395.87051392 -65.08975220]
[-409.62240601 -71.08022308]
[-423.37429810 -77.07069397]
[-439.11618042 -75.48849487]
[-447.69445801 -87.66481018]
[-461.44631958 -93.65528107]
[-475.19821167 -99.64575195]
[-491.42343140 -97.26361084]
[-501.38543701 -110.29012299]
[-494.83621216 -125.32473755]
[-478.51300049 -126.90112305]
[-469.20773315 -113.39763641]
[-455.45587158 -107.40716553]
[-441.70397949 -101.41669464]
[-426.94570923 -103.42736816]
[-417.38381958 -90.82257080]
[-403.63192749 -84.83210754]
[-389.88006592 -78.84163666]
[-376.12817383 -72.85116577]
[-362.23556519 -67.19474792]
[-348.21029663 -61.87567139]
[-334.18505859 -56.55659866]
[-320.15982056 -51.23752594]
[-306.13458252 -45.91845322]
[-292.10934448 -40.59937668]
[-278.08410645 -35.28030396]
[-263.89477539 -30.41582870]
[-249.55609131 -26.01099777]
[-235.21742249 -21.60616875]
[-220.87875366 -17.20133781]
[-206.54008484 -12.79650784]
[-199.21315002 -13.83892441]
[-192.00694275 -8.20349598]
[-177.74108887 -3.56824112]
[-163.47525024 1.06701374]
[-148.97993469 -2.35865283]
[-138.24613953 9.26444530]
[-123.98030090 13.89970016]
[-109.48498535 10.47403336]
[-98.75119781 22.09713173]
[-84.48535156 26.73238564]
[-70.21950531 31.36764145]
[-55.95365524 36.00289536]
[-51.35643387 34.66475677]
[-45.86999512 36.20980453]
[-41.30715179 41.02410507]
[-27.19803810 46.11654282]
[-12.59988880 43.15963364]
[-2.24612236 55.12249756]
[11.86299133 60.21493149]
[25.97210503 65.30736542]
[40.08121872 70.39980316]
[54.19033432 75.49224091]
[68.29944611 80.58467865]
[77.45565033 70.44273376]
[89.65764618 64.29404449]
[103.25691223 62.96930313]
[116.41616821 66.64749908]
[125.61931610 54.80258179]
[134.82246399 42.95766830]
[143.92990112 31.03900146]
[152.94104004 19.04735947]
[150.47262573 3.43702698]
[159.83282471 -9.29727077]
[175.46838379 -11.60050011]
[188.10299683 -2.10619569]
[190.24079895 13.55283928]
[180.61343384 26.08637810]
[164.93267822 28.05849457]
[155.92153931 40.05013657]
[154.41458130 47.29580307]
[146.66738892 52.16081619]
[137.46423340 64.00572968]
[128.26107788 75.85064697]
[140.35414124 83.95925903]
[149.61601257 97.53746033]
[164.60383606 96.93347168]
[179.59167480 96.32948303]
[194.57951355 95.72549438]
[209.56735229 95.12150574]
[223.04476929 86.83480072]
[236.07327271 94.05335236]
[251.06111145 93.44936371]
[264.53854370 85.16265869]
[277.56704712 92.38121033]
[292.55487061 91.77722168]
[307.54272461 91.17323303]
[318.22811890 79.83922577]
[333.43652344 79.44020844]
[344.17590332 89.69696808]
[359.16375732 89.09297943]
[374.74658203 82.41376495]
[385.47851562 95.53861237]
[375.83749390 109.48446655]
[359.76773071 104.08081055]
[344.77990723 104.68479919]
[334.90066528 115.77246094]
[319.70947266 116.59850311]
[308.14669800 106.16106415]
[293.15887451 106.76506042]
[278.17102051 107.36904907]
[265.76562500 115.61254883]
[251.66510010 108.43719482]
[236.67726135 109.04119110]
[224.27186584 117.28469086]
[210.17134094 110.10933685]
[195.18350220 110.71332550]
[180.19566345 111.31732178]
[165.20782471 111.92131042]
[150.22000122 112.52529907]
[145.46997070 126.75334167]
[157.08905029 136.24002075]
[168.70812988 145.72669983]
[184.97288513 147.82180786]
[191.04031372 163.05723572]
[180.66874695 175.76010132]
[164.52757263 172.86277771]
[159.22143555 157.34577942]
[147.60237122 147.85910034]
[135.98329163 138.37242126]
[123.11542511 146.08071899]
[125.99732208 160.80126953]
[128.87922668 175.52182007]
[141.78344727 180.38803101]
[150.52609253 190.91371155]
[152.90374756 204.27854919]
[148.40014648 216.96954346]
[138.29364014 225.70439148]
[140.93801880 240.46946716]
[143.58239746 255.23454285]
[146.22677612 269.99960327]
[160.94419861 274.04434204]
[172.44355774 284.08065796]
[178.44161987 298.11584473]
[177.74748230 313.36315918]
[170.49896240 326.79528809]
[158.13525391 335.74523926]
[143.11119080 338.43600464]
[128.40980530 334.33331299]
[116.95006561 324.25180054]
[111.00731659 310.19311523]
[111.76148987 294.94863892]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 183]
[2 182]
[3 181]
[4 180]
[8 175]
[9 174]
[10 173]
[13 106]
[14 105]
[15 104]
[16 103]
[17 102]
[18 101]
[20 99]
[21 98]
[22 95]
[23 94]
[24 93]
[25 92]
[27 90]
[28 89]
[30 87]
[31 86]
[32 85]
[33 83]
[34 82]
[35 81]
[36 80]
[37 79]
[42 78]
[43 77]
[44 76]
[45 75]
[46 74]
[47 73]
[48 72]
[52 71]
[53 70]
[54 69]
[55 68]
[57 66]
[58 65]
[59 64]
[110 126]
[111 125]
[112 124]
[113 122]
[114 121]
[128 162]
[129 161]
[130 160]
[131 159]
[132 158]
[134 156]
[135 155]
[137 153]
[138 152]
[139 151]
[142 148]
[143 147]
[163 172]
[164 171]
[165 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
