%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:04:09 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MFSD1)
} def

/sequence { (\
AGUCACCCAGGAAAAGCGAACCGCGCCAGGCCCUGUCAUCGACCGCUGGGUCCGUCCUCCCAGCGCUCGCGGCCGCUCAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 34 0.007752815 ubox
1 77 0.122968353 ubox
2 17 0.011696303 ubox
2 21 0.008221054 ubox
2 24 0.007923235 ubox
2 26 0.011190542 ubox
2 31 0.006331739 ubox
2 33 0.008189571 ubox
2 39 0.009777217 ubox
2 43 0.031956976 ubox
2 70 0.005305374 ubox
2 73 0.091938138 ubox
2 76 0.141283718 ubox
2 80 0.026143494 ubox
3 11 0.124623282 ubox
3 12 0.303810177 ubox
3 16 0.011101868 ubox
3 19 0.011152337 ubox
3 20 0.006524414 ubox
3 23 0.007724479 ubox
3 25 0.010975126 ubox
3 30 0.006102812 ubox
3 38 0.009965160 ubox
3 42 0.032053292 ubox
3 69 0.003852058 ubox
3 72 0.092008605 ubox
3 75 0.138807902 ubox
3 79 0.024552845 ubox
4 10 0.159912989 ubox
4 11 0.324477277 ubox
4 18 0.012731242 ubox
4 29 0.006106525 ubox
4 35 0.003432137 ubox
4 41 0.032004453 ubox
4 71 0.091683988 ubox
5 34 0.003715470 ubox
5 36 0.011488431 ubox
6 30 0.011801763 ubox
6 35 0.010347213 ubox
6 72 0.130713467 ubox
7 29 0.012085523 ubox
7 30 0.024791335 ubox
7 71 0.130547308 ubox
7 72 0.013143178 ubox
8 29 0.026431934 ubox
8 35 0.204378670 ubox
8 71 0.012851989 ubox
9 34 0.211723462 ubox
9 77 0.025744492 ubox
10 22 0.050348180 ubox
10 27 0.132383791 ubox
10 32 0.068011499 ubox
10 33 0.210168993 ubox
10 74 0.019901945 ubox
10 76 0.027171716 ubox
10 77 0.025595154 ubox
10 78 0.096796076 ubox
11 21 0.050247820 ubox
11 26 0.130319628 ubox
11 31 0.075096446 ubox
11 32 0.207428731 ubox
11 73 0.019862333 ubox
11 76 0.028086033 ubox
11 77 0.055789520 ubox
11 78 0.168671524 ubox
12 77 0.136695267 ubox
15 77 0.793593588 ubox
16 24 0.368370969 ubox
16 26 0.356874495 ubox
16 31 0.018760417 ubox
16 70 0.019366347 ubox
16 76 0.849677739 ubox
17 23 0.368999515 ubox
17 25 0.357898207 ubox
17 30 0.018608564 ubox
17 69 0.019368178 ubox
17 75 0.849869892 ubox
18 22 0.345244033 ubox
18 24 0.354965378 ubox
18 37 0.004026890 ubox
18 68 0.019191009 ubox
18 74 0.844259108 ubox
18 78 0.027793265 ubox
19 36 0.003889570 ubox
19 67 0.018305872 ubox
19 77 0.027495171 ubox
20 36 0.006460434 ubox
21 30 0.068009315 ubox
21 35 0.006967223 ubox
21 72 0.842610543 ubox
22 29 0.068637449 ubox
22 71 0.843816966 ubox
22 75 0.020296140 ubox
23 31 0.069144889 ubox
23 36 0.004445630 ubox
23 66 0.004630792 ubox
23 70 0.843248960 ubox
23 73 0.012380759 ubox
23 74 0.021208754 ubox
23 76 0.060324285 ubox
24 30 0.069787022 ubox
24 35 0.007470983 ubox
24 41 0.003358712 ubox
24 65 0.004630627 ubox
24 69 0.839061319 ubox
24 71 0.019377840 ubox
24 72 0.010024349 ubox
24 75 0.060375357 ubox
25 31 0.187700720 ubox
25 34 0.009327674 ubox
25 36 0.094476064 ubox
25 40 0.050472056 ubox
25 64 0.004245688 ubox
25 66 0.041370876 ubox
25 68 0.641258717 ubox
25 70 0.021633474 ubox
25 73 0.053213547 ubox
25 74 0.036131276 ubox
25 76 0.286806336 ubox
26 30 0.187326460 ubox
26 35 0.084882755 ubox
26 63 0.004230966 ubox
26 65 0.044227094 ubox
26 69 0.021420528 ubox
26 72 0.061133692 ubox
26 75 0.285892490 ubox
27 35 0.359070670 ubox
27 71 0.061017057 ubox
28 34 0.366415043 ubox
28 67 0.198135206 ubox
28 77 0.014432931 ubox
29 33 0.358871127 ubox
29 37 0.448955392 ubox
29 40 0.057530481 ubox
29 44 0.043916843 ubox
29 52 0.004719505 ubox
29 66 0.209894809 ubox
29 67 0.454888890 ubox
29 68 0.011303285 ubox
29 74 0.447556747 ubox
29 76 0.011397860 ubox
29 77 0.133545305 ubox
29 78 0.047206279 ubox
30 36 0.450266338 ubox
30 39 0.053363345 ubox
30 43 0.044768122 ubox
30 51 0.004826977 ubox
30 64 0.013227808 ubox
30 66 0.462190638 ubox
30 67 0.008616135 ubox
30 70 0.011732953 ubox
30 73 0.449415777 ubox
30 76 0.149362879 ubox
30 77 0.008099715 ubox
31 35 0.447857594 ubox
31 50 0.005660813 ubox
31 63 0.013017620 ubox
31 65 0.447985457 ubox
31 69 0.010948389 ubox
31 72 0.447765854 ubox
31 75 0.149607371 ubox
32 49 0.005661760 ubox
32 71 0.444232468 ubox
32 72 0.037898205 ubox
33 48 0.005647464 ubox
33 63 0.104735479 ubox
33 71 0.051592182 ubox
33 72 0.047446505 ubox
34 41 0.097133228 ubox
34 62 0.104829902 ubox
34 69 0.047296051 ubox
34 71 0.055759234 ubox
34 75 0.009058529 ubox
35 40 0.134714856 ubox
35 43 0.504908105 ubox
35 44 0.048124578 ubox
35 46 0.005200946 ubox
35 61 0.104438291 ubox
35 66 0.007588026 ubox
35 68 0.037049075 ubox
35 70 0.210655244 ubox
35 73 0.186594485 ubox
35 74 0.012017098 ubox
35 76 0.008093504 ubox
36 42 0.509346216 ubox
36 45 0.005165247 ubox
36 65 0.004461693 ubox
36 69 0.124402679 ubox
36 72 0.190419446 ubox
36 75 0.008337516 ubox
37 41 0.505821668 ubox
37 71 0.192347848 ubox
38 55 0.042794493 ubox
39 54 0.042315631 ubox
39 72 0.014756597 ubox
40 54 0.080516921 ubox
40 65 0.003564893 ubox
40 69 0.513140037 ubox
40 71 0.018899613 ubox
41 52 0.088654846 ubox
41 53 0.057173013 ubox
41 56 0.003346056 ubox
41 68 0.746710837 ubox
41 70 0.019197795 ubox
42 51 0.105542815 ubox
42 55 0.003204429 ubox
42 67 0.740559288 ubox
43 50 0.105661860 ubox
44 49 0.105626822 ubox
44 65 0.882253656 ubox
45 64 0.994126295 ubox
46 63 0.994352487 ubox
47 62 0.994130942 ubox
48 60 0.003234601 ubox
48 61 0.994358721 ubox
49 57 0.004869765 ubox
49 59 0.004508204 ubox
49 60 0.994348291 ubox
50 56 0.006529100 ubox
50 57 0.005327827 ubox
50 58 0.004279942 ubox
50 59 0.993935225 ubox
53 65 0.003710732 ubox
54 64 0.003986346 ubox
55 63 0.003900586 ubox
65 73 0.008928265 ubox
65 76 0.007472776 ubox
66 72 0.009225250 ubox
66 75 0.007600073 ubox
67 71 0.008314417 ubox
68 75 0.003347682 ubox
69 74 0.003961225 ubox
69 76 0.060724619 ubox
70 75 0.061282321 ubox
71 77 0.007682169 ubox
71 78 0.020523952 ubox
72 76 0.008576832 ubox
72 77 0.014459193 ubox
15 77 0.9500000 lbox
16 76 0.9500000 lbox
17 75 0.9500000 lbox
18 74 0.9500000 lbox
21 72 0.9500000 lbox
22 71 0.9500000 lbox
23 70 0.9500000 lbox
24 69 0.9500000 lbox
25 68 0.9500000 lbox
29 67 0.9500000 lbox
30 66 0.9500000 lbox
31 65 0.9500000 lbox
35 43 0.9500000 lbox
36 42 0.9500000 lbox
37 41 0.9500000 lbox
45 64 0.9500000 lbox
46 63 0.9500000 lbox
47 62 0.9500000 lbox
48 61 0.9500000 lbox
49 60 0.9500000 lbox
50 59 0.9500000 lbox
showpage
end
%%EOF
