%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:16:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGCCUCGGGUUCCGGACAGGCCCCUUGUGACGUGGCCGCGCGCCGGGGGCGGCCCCGGGCCGGGGGCCGGGCGGCCGGGCGGCCGGGCGGGGCAGAGCCUGGGCGGGGCGCGGCACCGCAGCUGGAUGGCUGGGGCCGCCCGGAUCGCCGCCGCCGCCGCCGCACGGUGGCCUUUUGUGUUUUUCAGUACGUGGC\
) } def
/len { sequence length } bind def

/coor [
[-53.49707031 372.63012695]
[-67.04096985 379.07705688]
[-80.58486938 385.52398682]
[-86.99692535 392.04495239]
[-94.39517975 391.96383667]
[-108.03966522 398.19506836]
[-121.68414307 404.42626953]
[-135.32862854 410.65750122]
[-148.97309875 416.88873291]
[-162.61758423 423.11996460]
[-166.76797485 428.28851318]
[-172.10563660 430.27832031]
[-176.79525757 429.32473755]
[-190.63056946 435.11993408]
[-204.46588135 440.91510010]
[-218.30119324 446.71026611]
[-232.13652039 452.50546265]
[-234.17459106 467.66439819]
[-243.46534729 479.68850708]
[-257.43435669 485.40975952]
[-272.29214478 483.38430786]
[-284.06192017 474.25537109]
[-297.89724731 480.05056763]
[-311.73257446 485.84573364]
[-325.56787109 491.64089966]
[-339.40319824 497.43609619]
[-353.23849487 503.23126221]
[-362.97787476 515.69940186]
[-377.70620728 513.47998047]
[-391.54153442 519.27520752]
[-405.37683105 525.07037354]
[-412.09191895 531.27886963]
[-419.47793579 530.84582520]
[-433.40344238 536.42071533]
[-447.32897949 541.99566650]
[-457.03540039 555.21374512]
[-473.30392456 553.14801025]
[-479.39886475 537.92358398]
[-469.05029297 525.20202637]
[-452.90390015 528.07012939]
[-438.97839355 522.49523926]
[-425.05285645 516.92028809]
[-411.17199707 511.23504639]
[-397.33670044 505.43988037]
[-383.50137329 499.64468384]
[-374.75158691 487.59103394]
[-359.03369141 489.39593506]
[-345.19836426 483.60076904]
[-331.36306763 477.80560303]
[-317.52774048 472.01040649]
[-303.69241333 466.21524048]
[-289.85711670 460.42007446]
[-288.10705566 445.62808228]
[-279.12820435 433.61822510]
[-265.25177002 427.67590332]
[-250.16503906 429.48904419]
[-237.93168640 438.67013550]
[-224.09637451 432.87496948]
[-210.26106262 427.07977295]
[-196.42575073 421.28460693]
[-182.59043884 415.48944092]
[-168.84880066 409.47546387]
[-155.20433044 403.24426270]
[-141.55984497 397.01303101]
[-127.91536713 390.78179932]
[-114.27088928 384.55056763]
[-100.62640381 378.31933594]
[-87.03179169 371.98007202]
[-73.48789215 365.53314209]
[-59.94399261 359.08624268]
[-55.00499725 345.10537720]
[-40.53630066 339.28927612]
[-33.45223618 326.06747437]
[-26.36816978 312.84567261]
[-19.28410339 299.62387085]
[-12.20003796 286.40206909]
[-5.11597204 273.18026733]
[-5.61945677 268.42123413]
[-3.13128376 263.29690552]
[2.40839863 259.65658569]
[9.90839863 246.66621399]
[17.40839767 233.67582703]
[24.90839767 220.68545532]
[32.40839767 207.69506836]
[39.80510712 194.64559937]
[47.09805679 181.53785706]
[54.39101028 168.43011475]
[61.68395996 155.32237244]
[68.97691345 142.21463013]
[76.26985931 129.10688782]
[83.56281281 115.99915314]
[90.85576630 102.89141083]
[71.93520355 94.11738586]
[64.07842255 68.52695465]
[66.91719055 53.79801941]
[56.48970032 42.45898819]
[54.75866318 27.33097076]
[62.17969894 14.23928642]
[75.72452545 8.10123158]
[78.56329346 -6.62769938]
[81.40206146 -21.35663033]
[84.24082947 -36.08555984]
[76.47553253 -50.12407303]
[82.74259949 -64.89240265]
[98.23445892 -69.06154633]
[111.06709290 -59.43330002]
[111.39639282 -43.39362717]
[98.96975708 -33.24679184]
[96.13098907 -18.51786041]
[93.29222107 -3.78893065]
[90.45345306 10.93999958]
[100.74674988 21.67247581]
[102.77051544 36.58449554]
[95.54095459 49.98550034]
[81.64611816 56.63678741]
[78.80735016 71.36572266]
[85.21145630 75.26922607]
[104.42378998 86.97975159]
[116.21458435 77.70736694]
[122.27937317 63.09473801]
[137.06655884 61.30919266]
[148.85736084 52.03680801]
[160.64816284 42.76441956]
[172.43894958 33.49203491]
[184.22975159 24.21965218]
[189.81904602 8.80239773]
[206.01055908 6.20104790]
[216.14784241 19.09164810]
[209.80253601 34.21345520]
[193.50213623 36.01044846]
[181.71133423 45.28283310]
[169.92054749 54.55521774]
[158.12974548 63.82760239]
[146.33894348 73.09999084]
[141.11752319 87.04939270]
[125.48696899 89.49816895]
[113.69617462 98.77055359]
[103.96350098 110.18436432]
[96.67055511 123.29210663]
[89.37760162 136.39984131]
[82.08464813 149.50758362]
[74.79170227 162.61532593]
[67.49874878 175.72306824]
[60.20579910 188.83081055]
[52.91284561 201.93855286]
[51.47228241 210.96974182]
[45.39878082 215.19506836]
[37.89878082 228.18545532]
[30.39877892 241.17582703]
[22.89877892 254.16621399]
[15.39877987 267.15658569]
[8.10582829 280.26434326]
[1.02176249 293.48614502]
[-6.06230354 306.70794678]
[-13.14636993 319.92974854]
[-20.23043633 333.15155029]
[-27.31450272 346.37332153]
[-23.31739426 360.83096313]
[-10.44764328 368.53613281]
[2.42210746 376.24130249]
[15.29185867 383.94644165]
[28.16160965 391.65161133]
[41.03136063 399.35678101]
[57.42810059 399.07580566]
[65.63667297 413.27267456]
[57.21280289 427.34286499]
[40.82224274 426.81219482]
[33.32619858 412.22653198]
[20.45644951 404.52136230]
[7.58669806 396.81619263]
[-5.28305340 389.11105347]
[-18.15280533 381.40588379]
[-31.02255630 373.70071411]
[-23.42233658 386.63272095]
[-15.82211876 399.56472778]
[-3.73328710 408.44503784]
[5.85912371 419.97698975]
[12.38966465 433.48077393]
[15.47337723 448.16036987]
[14.92848301 463.15048218]
[10.78710270 477.56744385]
[3.29336047 490.56143188]
[-7.11100626 501.36648560]
[-19.81268501 509.34567261]
[-34.06294632 514.02862549]
[-49.02176666 515.13928223]
[-63.80736923 512.61224365]
[-77.54817200 506.59640503]
[-89.43418884 497.44641113]
[-98.76477814 485.70159912]
[-104.98991394 472.05435181]
[-107.74264526 457.30911255]
[-106.86070251 442.33505249]
[-102.39607239 428.01489258]
[-94.61193848 415.19274902]
[-83.96715546 404.62445068]
[-71.08721161 396.93212891]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 70]
[2 69]
[3 68]
[5 67]
[6 66]
[7 65]
[8 64]
[9 63]
[10 62]
[13 61]
[14 60]
[15 59]
[16 58]
[17 57]
[22 52]
[23 51]
[24 50]
[25 49]
[26 48]
[27 47]
[29 45]
[30 44]
[31 43]
[33 42]
[34 41]
[35 40]
[72 157]
[73 156]
[74 155]
[75 154]
[76 153]
[77 152]
[80 151]
[81 150]
[82 149]
[83 148]
[84 147]
[85 145]
[86 144]
[87 143]
[88 142]
[89 141]
[90 140]
[91 139]
[92 138]
[94 116]
[95 115]
[99 111]
[100 110]
[101 109]
[102 108]
[118 137]
[119 136]
[121 134]
[122 133]
[123 132]
[124 131]
[125 130]
[158 173]
[159 172]
[160 171]
[161 170]
[162 169]
[163 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
