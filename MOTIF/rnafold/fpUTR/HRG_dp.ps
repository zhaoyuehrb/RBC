%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:10:31 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (HRG)
} def

/sequence { (\
UUAAUCAAUUGCGUGUGUUUCAGAAAGUCUGUAUAAAAUUCUCUGCAGUGGCAGAUCAUAGCAAGGGAUGGUUUAACAAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 68 0.004129791 ubox
1 71 0.145742847 ubox
1 76 0.106033487 ubox
1 79 0.011251850 ubox
1 80 0.005849953 ubox
2 11 0.003358601 ubox
2 67 0.004074975 ubox
2 70 0.174965790 ubox
2 75 0.130109868 ubox
2 78 0.010654394 ubox
2 79 0.007366448 ubox
3 10 0.003682660 ubox
3 19 0.003213814 ubox
3 69 0.128594411 ubox
3 73 0.074026706 ubox
3 74 0.129184625 ubox
4 18 0.003657262 ubox
4 69 0.926599326 ubox
4 72 0.084455841 ubox
4 73 0.084611308 ubox
5 17 0.003215220 ubox
5 24 0.005652896 ubox
5 51 0.006365111 ubox
5 66 0.011276529 ubox
5 67 0.031218099 ubox
5 68 0.983645153 ubox
5 71 0.086160795 ubox
6 15 0.007184634 ubox
6 17 0.005284995 ubox
6 23 0.006026419 ubox
6 31 0.003286092 ubox
6 50 0.008651734 ubox
6 65 0.014377276 ubox
6 66 0.041064985 ubox
6 67 0.992506982 ubox
6 70 0.085995359 ubox
7 14 0.006613527 ubox
7 16 0.005125181 ubox
7 19 0.003364816 ubox
7 30 0.003253429 ubox
7 49 0.006200671 ubox
7 69 0.073835503 ubox
8 16 0.004272793 ubox
8 18 0.003941494 ubox
8 28 0.006907716 ubox
8 39 0.004802701 ubox
8 49 0.019162434 ubox
8 69 0.012103989 ubox
9 15 0.004492464 ubox
9 17 0.003959555 ubox
9 27 0.007139234 ubox
9 38 0.005013380 ubox
9 48 0.021715696 ubox
9 64 0.993176846 ubox
9 65 0.015004583 ubox
9 66 0.013700570 ubox
9 67 0.016003249 ubox
9 68 0.014379825 ubox
9 79 0.004783434 ubox
10 26 0.007150438 ubox
10 33 0.003832419 ubox
10 37 0.004920435 ubox
10 47 0.022883812 ubox
10 53 0.003534483 ubox
10 63 0.997416019 ubox
10 64 0.011292155 ubox
10 65 0.006259218 ubox
10 66 0.007159571 ubox
10 67 0.011696544 ubox
10 78 0.005470046 ubox
11 18 0.011268425 ubox
11 28 0.004107488 ubox
11 32 0.004220635 ubox
11 46 0.023089204 ubox
11 52 0.004365116 ubox
11 62 0.998385945 ubox
11 77 0.005535630 ubox
12 17 0.011836730 ubox
12 27 0.004299641 ubox
12 31 0.004210448 ubox
12 45 0.023081985 ubox
12 51 0.004361378 ubox
12 61 0.997183828 ubox
13 30 0.003626768 ubox
13 34 0.020580699 ubox
13 39 0.076534527 ubox
13 44 0.020619379 ubox
13 56 0.021776564 ubox
13 59 0.290052690 ubox
13 62 0.003881911 ubox
13 77 0.004276793 ubox
14 22 0.015000063 ubox
14 33 0.021264069 ubox
14 35 0.088996139 ubox
14 38 0.079887040 ubox
14 55 0.021780883 ubox
14 58 0.321584004 ubox
14 60 0.847208494 ubox
14 63 0.009084033 ubox
14 76 0.004142709 ubox
14 78 0.007563179 ubox
15 21 0.017213487 ubox
15 32 0.021195854 ubox
15 34 0.097636569 ubox
15 39 0.031112604 ubox
15 56 0.013686388 ubox
15 57 0.320643161 ubox
15 59 0.904732585 ubox
15 62 0.009176206 ubox
15 77 0.008388709 ubox
16 22 0.008535456 ubox
16 33 0.098889517 ubox
16 35 0.236430115 ubox
16 38 0.036170384 ubox
16 47 0.004597633 ubox
16 53 0.026350958 ubox
16 55 0.027405176 ubox
16 58 0.907401537 ubox
16 60 0.019120321 ubox
16 61 0.008337835 ubox
16 63 0.004888463 ubox
16 76 0.008055253 ubox
16 78 0.018587646 ubox
17 21 0.010028008 ubox
17 32 0.096918317 ubox
17 34 0.261017286 ubox
17 39 0.083724724 ubox
17 46 0.004659256 ubox
17 52 0.026532663 ubox
17 56 0.044030278 ubox
17 57 0.898705849 ubox
17 59 0.019393805 ubox
17 62 0.004971865 ubox
17 77 0.020657472 ubox
18 24 0.008916370 ubox
18 25 0.010102016 ubox
18 26 0.014804087 ubox
18 27 0.013842888 ubox
18 31 0.006716507 ubox
18 33 0.273152462 ubox
18 36 0.125084193 ubox
18 37 0.143630721 ubox
18 38 0.120510083 ubox
18 45 0.004083347 ubox
18 48 0.004387531 ubox
18 51 0.026100299 ubox
18 54 0.008529866 ubox
18 55 0.073116073 ubox
18 58 0.018706138 ubox
18 61 0.004903577 ubox
18 76 0.020467619 ubox
19 23 0.008688714 ubox
19 24 0.010089953 ubox
19 25 0.016628092 ubox
19 26 0.017715635 ubox
19 27 0.005724860 ubox
19 35 0.134754180 ubox
19 36 0.162512829 ubox
19 37 0.132288249 ubox
19 38 0.035159679 ubox
19 47 0.006525894 ubox
19 48 0.009875699 ubox
19 50 0.019393246 ubox
19 53 0.008704888 ubox
19 54 0.034768868 ubox
19 55 0.113860655 ubox
19 60 0.004114586 ubox
19 75 0.018501857 ubox
20 24 0.014251123 ubox
20 25 0.016210538 ubox
20 26 0.006878324 ubox
20 35 0.162381306 ubox
20 36 0.132076898 ubox
20 37 0.039828247 ubox
20 47 0.014505800 ubox
20 51 0.018548419 ubox
20 53 0.026466536 ubox
20 54 0.039959056 ubox
20 55 0.073951223 ubox
21 31 0.977788476 ubox
21 45 0.028012223 ubox
21 50 0.022852246 ubox
21 54 0.066768643 ubox
22 30 0.984928339 ubox
22 42 0.049561190 ubox
22 44 0.028464739 ubox
22 49 0.022633171 ubox
22 74 0.014871648 ubox
23 29 0.985443323 ubox
23 40 0.004358731 ubox
23 41 0.069506335 ubox
23 43 0.028657565 ubox
23 57 0.004407878 ubox
23 73 0.017304251 ubox
23 74 0.003651332 ubox
24 28 0.857354581 ubox
24 39 0.004486063 ubox
24 40 0.068699227 ubox
24 42 0.027848391 ubox
24 56 0.004841885 ubox
24 72 0.017410916 ubox
24 73 0.003693876 ubox
25 39 0.060440865 ubox
25 40 0.011915220 ubox
25 72 0.003490256 ubox
26 39 0.013715060 ubox
26 40 0.024482593 ubox
26 42 0.009989391 ubox
26 44 0.007048570 ubox
27 34 0.015437085 ubox
27 39 0.026595495 ubox
27 41 0.013680582 ubox
27 43 0.007138700 ubox
27 49 0.039171138 ubox
27 52 0.022008830 ubox
27 56 0.083946139 ubox
27 69 0.019100699 ubox
28 33 0.014709993 ubox
28 38 0.026217919 ubox
28 51 0.021419973 ubox
28 55 0.084844520 ubox
28 68 0.019214849 ubox
29 48 0.085406045 ubox
29 50 0.012262409 ubox
29 54 0.084988455 ubox
29 67 0.019213197 ubox
30 47 0.086201771 ubox
30 53 0.084961190 ubox
30 66 0.018983264 ubox
30 78 0.017039246 ubox
31 39 0.018426609 ubox
31 46 0.086351317 ubox
31 52 0.084939803 ubox
31 77 0.018612425 ubox
32 38 0.035134708 ubox
32 45 0.086062173 ubox
32 50 0.026305914 ubox
32 51 0.079080835 ubox
32 60 0.004701272 ubox
32 75 0.005549473 ubox
32 76 0.018088807 ubox
33 39 0.043308587 ubox
33 44 0.080411574 ubox
33 49 0.037076510 ubox
33 56 0.007520601 ubox
33 59 0.004917982 ubox
33 74 0.006291341 ubox
34 38 0.042067455 ubox
34 45 0.005909650 ubox
34 48 0.037378248 ubox
34 50 0.013158037 ubox
34 55 0.003795332 ubox
34 58 0.004634825 ubox
34 60 0.006067045 ubox
34 75 0.016066327 ubox
35 44 0.008800225 ubox
35 49 0.014870970 ubox
35 59 0.006026129 ubox
35 73 0.010021896 ubox
35 74 0.016584463 ubox
36 72 0.010559525 ubox
36 73 0.016330811 ubox
36 74 0.014711255 ubox
37 72 0.014456038 ubox
37 73 0.015733501 ubox
38 49 0.010851788 ubox
38 56 0.032239815 ubox
38 59 0.074831837 ubox
38 69 0.019719384 ubox
38 72 0.015922357 ubox
39 48 0.012015306 ubox
39 55 0.016724587 ubox
39 58 0.076519053 ubox
39 68 0.020576103 ubox
39 71 0.015257707 ubox
40 47 0.010566070 ubox
40 51 0.006117805 ubox
40 54 0.005725744 ubox
40 55 0.021073692 ubox
40 60 0.004010317 ubox
40 67 0.020518344 ubox
40 68 0.037148092 ubox
40 70 0.004723617 ubox
41 48 0.019445685 ubox
41 50 0.013934592 ubox
41 54 0.020588327 ubox
41 66 0.020660716 ubox
41 67 0.039620703 ubox
42 47 0.017815879 ubox
42 51 0.006067307 ubox
42 53 0.015522643 ubox
42 55 0.916693788 ubox
42 65 0.019834708 ubox
42 66 0.039608317 ubox
43 50 0.013381501 ubox
43 51 0.009347118 ubox
43 54 0.989409605 ubox
43 65 0.039804026 ubox
44 50 0.009233530 ubox
44 53 0.990250988 ubox
44 63 0.034529916 ubox
44 64 0.028172243 ubox
45 49 0.004318997 ubox
45 52 0.990777644 ubox
45 62 0.044616814 ubox
46 51 0.989100392 ubox
46 61 0.044416306 ubox
48 59 0.040313989 ubox
49 58 0.044659501 ubox
49 78 0.010158005 ubox
50 57 0.044709119 ubox
50 77 0.019877391 ubox
51 56 0.030311330 ubox
53 74 0.022170782 ubox
54 73 0.023371894 ubox
55 72 0.023848407 ubox
56 71 0.024067223 ubox
57 70 0.024283654 ubox
58 69 0.024228539 ubox
59 68 0.024031538 ubox
67 74 0.006083511 ubox
68 73 0.007044243 ubox
69 75 0.007500134 ubox
69 78 0.173600294 ubox
70 74 0.011375597 ubox
70 77 0.335377615 ubox
71 77 0.154877644 ubox
72 76 0.140000134 ubox
72 79 0.032737653 ubox
72 80 0.031619589 ubox
73 78 0.032063291 ubox
73 79 0.042041211 ubox
73 80 0.025967825 ubox
74 78 0.036852027 ubox
74 79 0.032334832 ubox
4 69 0.9500000 lbox
5 68 0.9500000 lbox
6 67 0.9500000 lbox
9 64 0.9500000 lbox
10 63 0.9500000 lbox
11 62 0.9500000 lbox
12 61 0.9500000 lbox
14 60 0.9500000 lbox
15 59 0.9500000 lbox
16 58 0.9500000 lbox
17 57 0.9500000 lbox
21 31 0.9500000 lbox
22 30 0.9500000 lbox
23 29 0.9500000 lbox
24 28 0.9500000 lbox
42 55 0.9500000 lbox
43 54 0.9500000 lbox
44 53 0.9500000 lbox
45 52 0.9500000 lbox
46 51 0.9500000 lbox
showpage
end
%%EOF
