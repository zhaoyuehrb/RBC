%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:08:09 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (HDAC3)
} def

/sequence { (\
GGGAGGGGCUGGCGGCGGCCGCGGGCGGCGGGCGGCGGAGGUGCGGGGCCUGCUCCCGCCGGCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.034922937 ubox
1 20 0.003166750 ubox
1 57 0.065583422 ubox
1 60 0.034001040 ubox
1 66 0.085609422 ubox
2 9 0.040258595 ubox
2 10 0.014334977 ubox
2 20 0.004327073 ubox
2 56 0.065633737 ubox
2 59 0.032872567 ubox
2 60 0.070751071 ubox
2 65 0.086358556 ubox
2 66 0.067732498 ubox
3 9 0.016304899 ubox
3 19 0.004269096 ubox
3 55 0.065633616 ubox
3 59 0.070408544 ubox
3 65 0.068156835 ubox
4 10 0.009326026 ubox
4 54 0.065370337 ubox
5 9 0.009775407 ubox
5 20 0.005382111 ubox
5 51 0.010185131 ubox
5 53 0.063728047 ubox
5 56 0.018418282 ubox
5 57 0.074959099 ubox
5 60 0.016928273 ubox
5 66 0.645226283 ubox
6 19 0.005059055 ubox
6 20 0.019043128 ubox
6 50 0.024517051 ubox
6 51 0.053833648 ubox
6 55 0.018425297 ubox
6 56 0.075115722 ubox
6 59 0.011115738 ubox
6 60 0.018943953 ubox
6 65 0.647364568 ubox
6 66 0.545263559 ubox
7 19 0.013540888 ubox
7 20 0.304534201 ubox
7 49 0.024624256 ubox
7 50 0.059644752 ubox
7 51 0.006634099 ubox
7 54 0.017075781 ubox
7 55 0.074911837 ubox
7 60 0.016472714 ubox
7 65 0.551588833 ubox
7 66 0.327349439 ubox
8 16 0.059868168 ubox
8 19 0.305147350 ubox
8 22 0.024858056 ubox
8 26 0.144857091 ubox
8 42 0.004238122 ubox
8 49 0.059740118 ubox
8 50 0.005412771 ubox
8 53 0.018023278 ubox
8 59 0.016359848 ubox
8 63 0.849976734 ubox
8 65 0.331350695 ubox
9 15 0.059905744 ubox
9 18 0.305460719 ubox
9 21 0.024323221 ubox
9 25 0.145909236 ubox
9 41 0.004803197 ubox
9 47 0.033778351 ubox
9 48 0.055303550 ubox
9 52 0.017999929 ubox
9 58 0.016122565 ubox
9 62 0.857913178 ubox
10 14 0.053968890 ubox
10 17 0.305209666 ubox
10 21 0.009467548 ubox
10 24 0.145518072 ubox
10 40 0.005317585 ubox
10 46 0.040623124 ubox
10 47 0.049742002 ubox
10 61 0.855958006 ubox
10 64 0.361220988 ubox
11 16 0.304487566 ubox
11 20 0.076395251 ubox
11 50 0.014244540 ubox
11 56 0.008749436 ubox
11 57 0.010841863 ubox
11 60 0.853821095 ubox
11 63 0.368984452 ubox
11 66 0.004238260 ubox
12 19 0.080262582 ubox
12 22 0.146604235 ubox
12 44 0.053303751 ubox
12 49 0.014282644 ubox
12 55 0.008750767 ubox
12 56 0.010837355 ubox
12 59 0.853276723 ubox
12 63 0.010500226 ubox
12 65 0.004260859 ubox
13 18 0.080262153 ubox
13 21 0.147960436 ubox
13 37 0.042845214 ubox
13 43 0.052237176 ubox
13 45 0.009451644 ubox
13 48 0.014135052 ubox
13 58 0.852846595 ubox
13 61 0.371833646 ubox
13 62 0.007700540 ubox
14 20 0.149048295 ubox
14 22 0.004794832 ubox
14 36 0.066572934 ubox
14 42 0.038042276 ubox
14 44 0.009133522 ubox
14 54 0.095733910 ubox
14 55 0.024315177 ubox
14 56 0.023295255 ubox
14 57 0.842803778 ubox
14 60 0.372651295 ubox
14 66 0.050563534 ubox
15 19 0.146645178 ubox
15 22 0.059785090 ubox
15 26 0.009511261 ubox
15 29 0.021661078 ubox
15 33 0.006443537 ubox
15 36 0.078567133 ubox
15 42 0.028395221 ubox
15 44 0.007138600 ubox
15 53 0.207359081 ubox
15 54 0.005868677 ubox
15 55 0.028458028 ubox
15 56 0.813692538 ubox
15 59 0.372721785 ubox
15 65 0.050911111 ubox
16 21 0.059821158 ubox
16 23 0.026178851 ubox
16 25 0.009964077 ubox
16 27 0.022622117 ubox
16 28 0.023494204 ubox
16 32 0.006490785 ubox
16 34 0.153327936 ubox
16 35 0.072367825 ubox
16 37 0.005838307 ubox
16 41 0.038535831 ubox
16 43 0.007256076 ubox
16 52 0.266783027 ubox
16 58 0.372769717 ubox
17 22 0.027082905 ubox
17 26 0.018555553 ubox
17 33 0.161420317 ubox
17 36 0.004312575 ubox
17 42 0.006430661 ubox
17 50 0.323023074 ubox
17 51 0.061848849 ubox
17 54 0.150153704 ubox
17 55 0.708625387 ubox
17 56 0.065193572 ubox
17 57 0.372950097 ubox
17 66 0.003495975 ubox
18 26 0.254960863 ubox
18 29 0.036835210 ubox
18 33 0.066474890 ubox
18 36 0.031454944 ubox
18 49 0.326523049 ubox
18 50 0.043839421 ubox
18 53 0.138087040 ubox
18 54 0.566452945 ubox
18 55 0.091261464 ubox
18 56 0.372645717 ubox
18 63 0.081361783 ubox
19 25 0.255742403 ubox
19 28 0.037992027 ubox
19 31 0.165802887 ubox
19 32 0.056653340 ubox
19 35 0.031774575 ubox
19 38 0.047681538 ubox
19 46 0.003996066 ubox
19 48 0.329449942 ubox
19 52 0.131095993 ubox
19 62 0.081506041 ubox
20 24 0.253885063 ubox
20 27 0.038724253 ubox
20 30 0.170468045 ubox
20 31 0.044628147 ubox
20 34 0.031811948 ubox
20 37 0.050636808 ubox
20 45 0.004577893 ubox
20 47 0.329422000 ubox
20 52 0.011508959 ubox
20 61 0.081571140 ubox
21 26 0.037795502 ubox
21 29 0.174234227 ubox
21 33 0.031807025 ubox
21 36 0.050698444 ubox
21 44 0.005777568 ubox
21 51 0.007392218 ubox
21 53 0.797167332 ubox
21 59 0.166095580 ubox
21 60 0.058508612 ubox
21 63 0.263392138 ubox
22 28 0.174234815 ubox
22 30 0.027517853 ubox
22 32 0.031724263 ubox
22 35 0.050653191 ubox
22 43 0.005786235 ubox
22 45 0.329365531 ubox
22 52 0.799556074 ubox
22 58 0.178104476 ubox
22 61 0.003633466 ubox
22 62 0.263555063 ubox
23 29 0.028003306 ubox
23 42 0.005628067 ubox
23 44 0.329348802 ubox
23 50 0.007293300 ubox
23 51 0.808956378 ubox
23 55 0.008885521 ubox
23 56 0.011142977 ubox
23 57 0.188027752 ubox
23 60 0.003536852 ubox
23 66 0.068266601 ubox
24 49 0.006374101 ubox
24 50 0.809863434 ubox
24 54 0.008802777 ubox
24 55 0.012036592 ubox
24 56 0.189318993 ubox
24 57 0.013526811 ubox
24 60 0.262788749 ubox
24 65 0.068697102 ubox
24 66 0.010761442 ubox
25 33 0.050757414 ubox
25 42 0.328238502 ubox
25 49 0.809874952 ubox
25 53 0.008799149 ubox
25 54 0.005960142 ubox
25 55 0.189349372 ubox
25 56 0.014118053 ubox
25 59 0.262923542 ubox
25 63 0.069346323 ubox
25 65 0.010884583 ubox
26 32 0.050780581 ubox
26 34 0.004818235 ubox
26 37 0.009484284 ubox
26 41 0.328020556 ubox
26 48 0.808741791 ubox
26 52 0.008768115 ubox
26 58 0.262927637 ubox
26 61 0.061163712 ubox
26 62 0.049162464 ubox
27 33 0.006465268 ubox
27 36 0.012212754 ubox
27 50 0.008500640 ubox
27 54 0.310160943 ubox
27 55 0.041247195 ubox
27 56 0.005017415 ubox
27 57 0.261172450 ubox
27 60 0.097807119 ubox
27 66 0.007916463 ubox
28 36 0.100703772 ubox
28 44 0.021743328 ubox
28 49 0.008654836 ubox
28 53 0.334212799 ubox
28 54 0.004868608 ubox
28 55 0.004846764 ubox
28 56 0.255302099 ubox
28 59 0.097945481 ubox
28 63 0.108479109 ubox
28 65 0.006817246 ubox
29 35 0.101773748 ubox
29 37 0.307553203 ubox
29 43 0.021775409 ubox
29 45 0.796316961 ubox
29 48 0.008778689 ubox
29 52 0.338374304 ubox
29 58 0.097947411 ubox
29 62 0.108632162 ubox
30 36 0.308319755 ubox
30 42 0.015927306 ubox
30 44 0.801753686 ubox
30 51 0.338681778 ubox
30 54 0.013124801 ubox
30 55 0.251977313 ubox
30 56 0.008084868 ubox
30 57 0.098894047 ubox
30 66 0.012597776 ubox
31 50 0.339486790 ubox
31 53 0.013552267 ubox
31 54 0.252095116 ubox
31 55 0.008305862 ubox
31 56 0.098991398 ubox
31 60 0.108608875 ubox
31 65 0.012678332 ubox
32 42 0.800790294 ubox
32 44 0.105580849 ubox
32 49 0.339497126 ubox
32 53 0.252522454 ubox
32 55 0.098915893 ubox
32 59 0.108664735 ubox
32 63 0.013158015 ubox
33 41 0.802061481 ubox
33 43 0.105774326 ubox
33 45 0.019052980 ubox
33 48 0.338864538 ubox
33 52 0.252433924 ubox
33 58 0.108668712 ubox
33 61 0.011954280 ubox
33 62 0.009327553 ubox
34 42 0.081007999 ubox
34 44 0.018604990 ubox
34 50 0.237579273 ubox
34 51 0.078446475 ubox
34 54 0.103081355 ubox
34 55 0.009397480 ubox
34 56 0.008058686 ubox
34 57 0.108673109 ubox
34 60 0.015280789 ubox
35 42 0.073831000 ubox
35 44 0.224612294 ubox
35 49 0.241012329 ubox
35 50 0.063708103 ubox
35 53 0.130162848 ubox
35 54 0.003411280 ubox
35 55 0.022068222 ubox
35 56 0.108616687 ubox
35 59 0.015349724 ubox
36 41 0.100072816 ubox
36 43 0.225350724 ubox
36 45 0.265808365 ubox
36 48 0.243564399 ubox
36 52 0.130033026 ubox
36 58 0.015373587 ubox
37 42 0.199820106 ubox
37 44 0.270137658 ubox
37 50 0.008850943 ubox
37 51 0.072805700 ubox
37 54 0.114130332 ubox
37 55 0.033811108 ubox
37 56 0.054582862 ubox
37 57 0.029469381 ubox
38 49 0.009235299 ubox
38 50 0.045762653 ubox
38 53 0.120252397 ubox
38 54 0.019804440 ubox
38 55 0.055794738 ubox
38 56 0.029117648 ubox
39 51 0.173460593 ubox
39 54 0.053665998 ubox
40 50 0.189850920 ubox
40 51 0.011118243 ubox
40 53 0.043530036 ubox
40 54 0.004943220 ubox
40 55 0.029804701 ubox
40 56 0.068890670 ubox
40 57 0.011038339 ubox
40 60 0.004061391 ubox
40 66 0.003293639 ubox
41 49 0.193226210 ubox
41 50 0.016168638 ubox
41 53 0.006925110 ubox
41 54 0.028245783 ubox
41 55 0.070664528 ubox
41 56 0.010953341 ubox
41 59 0.004344043 ubox
41 65 0.003351730 ubox
42 48 0.192240774 ubox
42 52 0.008093519 ubox
42 58 0.004453885 ubox
42 64 0.003352450 ubox
43 49 0.042082643 ubox
43 51 0.003665743 ubox
43 53 0.086730713 ubox
43 57 0.005886194 ubox
43 59 0.014014431 ubox
43 63 0.003328061 ubox
44 48 0.041881572 ubox
44 52 0.087752613 ubox
44 58 0.018168648 ubox
44 62 0.003254772 ubox
45 51 0.087126349 ubox
45 54 0.008181530 ubox
45 55 0.048481214 ubox
45 56 0.043716147 ubox
45 57 0.023776343 ubox
46 50 0.085270660 ubox
46 53 0.009060841 ubox
46 54 0.048923735 ubox
46 55 0.048514038 ubox
46 56 0.024139572 ubox
46 57 0.006507331 ubox
47 53 0.049132107 ubox
47 54 0.048301289 ubox
47 55 0.024211322 ubox
47 56 0.006720077 ubox
48 53 0.048673038 ubox
48 54 0.018899387 ubox
48 55 0.006714487 ubox
5 66 0.9500000 lbox
6 65 0.9500000 lbox
8 63 0.9500000 lbox
9 62 0.9500000 lbox
10 61 0.9500000 lbox
11 60 0.9500000 lbox
12 59 0.9500000 lbox
13 58 0.9500000 lbox
14 57 0.9500000 lbox
15 56 0.9500000 lbox
17 55 0.9500000 lbox
18 54 0.9500000 lbox
21 53 0.9500000 lbox
22 52 0.9500000 lbox
23 51 0.9500000 lbox
24 50 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
29 45 0.9500000 lbox
30 44 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
showpage
end
%%EOF
