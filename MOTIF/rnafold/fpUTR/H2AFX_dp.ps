%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:32:21 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (H2AFX)
} def

/sequence { (\
ACAGCAGUUACACUGCGGCGGGCGUCUGUUCUAGUGUUUGAGCCGUCGUGCUUCACCGGUCUACCUCGCUAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.004880732 ubox
1 29 0.049957515 ubox
1 46 0.008642092 ubox
1 49 0.006992016 ubox
2 7 0.005602386 ubox
2 15 0.025729680 ubox
2 28 0.057407168 ubox
2 40 0.004930953 ubox
2 45 0.009949254 ubox
2 48 0.007388790 ubox
2 59 0.003276367 ubox
3 14 0.025954406 ubox
3 27 0.053684226 ubox
3 30 0.075283485 ubox
3 39 0.004940111 ubox
3 52 0.004795504 ubox
3 70 0.061536311 ubox
4 13 0.025951189 ubox
4 16 0.990693868 ubox
4 19 0.010672313 ubox
4 23 0.003375532 ubox
4 26 0.017964205 ubox
4 29 0.090278496 ubox
4 38 0.004848043 ubox
4 43 0.012518685 ubox
4 46 0.007747240 ubox
4 51 0.005128303 ubox
4 69 0.064611043 ubox
4 73 0.021706057 ubox
5 15 0.991993532 ubox
5 18 0.010654210 ubox
5 22 0.003429690 ubox
5 24 0.006084237 ubox
5 28 0.091336460 ubox
5 40 0.018848494 ubox
5 42 0.012546452 ubox
5 45 0.007840062 ubox
5 50 0.005073317 ubox
5 68 0.064567396 ubox
5 72 0.021840449 ubox
6 14 0.991732726 ubox
6 27 0.091307839 ubox
6 39 0.019070083 ubox
6 49 0.004428048 ubox
6 52 0.004213441 ubox
6 66 0.051451682 ubox
6 70 0.021289569 ubox
7 13 0.991244070 ubox
7 16 0.013192155 ubox
7 19 0.003587386 ubox
7 23 0.010653033 ubox
7 26 0.090918416 ubox
7 38 0.016204231 ubox
7 43 0.008492433 ubox
7 51 0.004485895 ubox
7 56 0.004798595 ubox
7 64 0.013213660 ubox
7 65 0.051305674 ubox
7 69 0.021474147 ubox
7 73 0.003695321 ubox
8 12 0.893006437 ubox
8 15 0.013076843 ubox
8 18 0.003574721 ubox
8 22 0.010586359 ubox
8 24 0.005602881 ubox
8 41 0.005813494 ubox
8 42 0.008421541 ubox
8 55 0.004685575 ubox
8 63 0.013007462 ubox
8 68 0.020409421 ubox
8 72 0.003697397 ubox
9 17 0.003268762 ubox
9 21 0.008232554 ubox
9 40 0.006306078 ubox
9 41 0.008227633 ubox
9 63 0.040676828 ubox
9 71 0.003546591 ubox
10 25 0.058984284 ubox
10 29 0.009230973 ubox
10 37 0.054317131 ubox
10 60 0.006554575 ubox
10 62 0.040673285 ubox
11 24 0.062726668 ubox
11 28 0.009964666 ubox
11 36 0.058398555 ubox
11 50 0.020304312 ubox
11 59 0.006740116 ubox
12 25 0.041242707 ubox
12 27 0.009603767 ubox
12 29 0.004088724 ubox
12 35 0.058431355 ubox
12 49 0.020717261 ubox
12 60 0.042997306 ubox
13 21 0.044843743 ubox
13 22 0.056233708 ubox
13 24 0.040514458 ubox
13 28 0.004366546 ubox
13 34 0.058446648 ubox
13 48 0.020753046 ubox
13 59 0.043919132 ubox
13 72 0.003685444 ubox
14 20 0.044853726 ubox
14 21 0.055481962 ubox
14 24 0.021270597 ubox
14 33 0.058361860 ubox
14 55 0.011280667 ubox
14 58 0.042663135 ubox
14 71 0.003587026 ubox
15 19 0.042872269 ubox
15 23 0.051554562 ubox
15 25 0.028473037 ubox
15 29 0.005756335 ubox
15 32 0.056940283 ubox
15 46 0.021015774 ubox
15 49 0.010126085 ubox
15 54 0.014637846 ubox
15 57 0.040330955 ubox
15 73 0.010726496 ubox
16 22 0.051585579 ubox
16 24 0.029485162 ubox
16 28 0.009209414 ubox
16 45 0.021544700 ubox
16 48 0.013415340 ubox
16 58 0.006720446 ubox
16 72 0.012752523 ubox
17 23 0.034490092 ubox
17 26 0.260691463 ubox
17 27 0.019532271 ubox
17 30 0.679231513 ubox
17 31 0.054317766 ubox
17 44 0.022284778 ubox
17 47 0.022093559 ubox
17 52 0.067549148 ubox
17 53 0.006353865 ubox
17 54 0.006055730 ubox
17 57 0.013138108 ubox
17 61 0.007992272 ubox
17 65 0.006851720 ubox
17 67 0.003285935 ubox
17 70 0.390330089 ubox
18 25 0.262018601 ubox
18 26 0.020207968 ubox
18 29 0.837695155 ubox
18 30 0.044459836 ubox
18 31 0.003939710 ubox
18 43 0.022282294 ubox
18 46 0.022163407 ubox
18 49 0.010681574 ubox
18 51 0.072018112 ubox
18 56 0.013103310 ubox
18 60 0.007948552 ubox
18 64 0.006844294 ubox
18 69 0.409994675 ubox
18 73 0.084407928 ubox
19 24 0.262554088 ubox
19 28 0.849715303 ubox
19 40 0.007968414 ubox
19 42 0.021813742 ubox
19 45 0.022157794 ubox
19 48 0.011093430 ubox
19 50 0.072046159 ubox
19 58 0.005135497 ubox
19 59 0.007200944 ubox
19 68 0.410080276 ubox
19 72 0.085329184 ubox
20 26 0.022807206 ubox
20 27 0.847402227 ubox
20 30 0.003859220 ubox
20 31 0.074112876 ubox
20 39 0.016880203 ubox
20 44 0.019577407 ubox
20 47 0.009196974 ubox
20 49 0.063664006 ubox
20 52 0.004328200 ubox
20 53 0.004496106 ubox
20 54 0.011612330 ubox
20 57 0.006306377 ubox
20 62 0.005814093 ubox
20 65 0.005005506 ubox
20 66 0.011441793 ubox
20 67 0.409739437 ubox
21 25 0.015042153 ubox
21 26 0.844157933 ubox
21 27 0.016415387 ubox
21 29 0.004052296 ubox
21 30 0.085522963 ubox
21 31 0.003906444 ubox
21 38 0.022415591 ubox
21 43 0.016337877 ubox
21 44 0.013517102 ubox
21 46 0.006377322 ubox
21 47 0.087373001 ubox
21 51 0.005188108 ubox
21 52 0.009889647 ubox
21 53 0.009468518 ubox
21 56 0.006209760 ubox
21 57 0.005929853 ubox
21 61 0.006239270 ubox
21 64 0.005410828 ubox
21 65 0.068847518 ubox
21 66 0.400338053 ubox
21 70 0.079999437 ubox
22 26 0.021285110 ubox
22 29 0.090425556 ubox
22 30 0.003340076 ubox
22 35 0.003375204 ubox
22 37 0.027671472 ubox
22 43 0.017054463 ubox
22 46 0.088522589 ubox
22 49 0.022882167 ubox
22 51 0.012467183 ubox
22 56 0.005575579 ubox
22 60 0.006216106 ubox
22 64 0.068755226 ubox
22 65 0.399805954 ubox
22 69 0.086204331 ubox
23 28 0.091036780 ubox
23 34 0.005263518 ubox
23 36 0.032292631 ubox
23 40 0.005457354 ubox
23 42 0.019954992 ubox
23 45 0.089307079 ubox
23 48 0.029415488 ubox
23 50 0.012451240 ubox
23 58 0.004643998 ubox
23 59 0.006291891 ubox
23 68 0.086226187 ubox
24 35 0.031129280 ubox
24 39 0.004902328 ubox
24 44 0.088984088 ubox
24 47 0.030091054 ubox
24 49 0.010927952 ubox
24 57 0.004723526 ubox
24 60 0.010903891 ubox
24 64 0.386613061 ubox
24 67 0.085842058 ubox
25 34 0.003672942 ubox
25 41 0.019194228 ubox
25 48 0.004675977 ubox
25 59 0.005484363 ubox
25 63 0.371677682 ubox
26 34 0.039201087 ubox
26 40 0.020626953 ubox
26 42 0.011859607 ubox
26 58 0.007728316 ubox
26 59 0.136643525 ubox
27 33 0.039003848 ubox
27 41 0.011441274 ubox
27 45 0.005923901 ubox
27 58 0.136616744 ubox
27 63 0.067232226 ubox
28 32 0.032493273 ubox
28 37 0.003656262 ubox
28 43 0.101317091 ubox
28 44 0.005129091 ubox
28 56 0.010958835 ubox
28 57 0.135554589 ubox
28 60 0.058884612 ubox
28 62 0.113073570 ubox
28 64 0.048588980 ubox
28 73 0.023656199 ubox
29 36 0.004682241 ubox
29 42 0.102632221 ubox
29 55 0.013029524 ubox
29 59 0.031586790 ubox
29 63 0.047624952 ubox
29 72 0.014308606 ubox
30 41 0.112847105 ubox
30 58 0.032714573 ubox
30 59 0.089415749 ubox
30 71 0.007222537 ubox
31 40 0.114401124 ubox
31 58 0.091638825 ubox
31 59 0.360663922 ubox
31 72 0.881690739 ubox
32 40 0.006214990 ubox
32 41 0.003419618 ubox
32 58 0.354450171 ubox
32 63 0.014704958 ubox
32 71 0.900222399 ubox
33 39 0.011237135 ubox
33 52 0.069944512 ubox
33 53 0.010984802 ubox
33 62 0.020797948 ubox
33 66 0.015339540 ubox
33 70 0.901877939 ubox
34 38 0.008098564 ubox
34 51 0.070865230 ubox
34 52 0.011101255 ubox
34 56 0.394955020 ubox
34 61 0.020815021 ubox
34 64 0.011294475 ubox
34 65 0.015622124 ubox
34 69 0.902302200 ubox
35 50 0.070064568 ubox
35 55 0.395430136 ubox
35 58 0.010668835 ubox
35 59 0.007660832 ubox
35 63 0.011300929 ubox
35 68 0.901764225 ubox
36 43 0.003536870 ubox
36 49 0.044450199 ubox
36 51 0.035910203 ubox
36 54 0.394587749 ubox
36 56 0.023181792 ubox
36 57 0.012404506 ubox
36 62 0.010687511 ubox
36 64 0.039905013 ubox
36 67 0.897118504 ubox
37 42 0.003411197 ubox
37 48 0.008921639 ubox
37 50 0.037333787 ubox
37 55 0.022220936 ubox
37 63 0.042878519 ubox
39 45 0.005768403 ubox
39 48 0.087512113 ubox
39 55 0.025761353 ubox
39 63 0.231248587 ubox
39 68 0.010310443 ubox
40 44 0.005763624 ubox
40 47 0.093049007 ubox
40 53 0.382543333 ubox
40 54 0.028911300 ubox
40 61 0.242549441 ubox
40 62 0.250043627 ubox
40 67 0.023955533 ubox
41 46 0.090660899 ubox
41 52 0.389349859 ubox
41 53 0.021579482 ubox
41 60 0.206513621 ubox
41 62 0.743297229 ubox
41 66 0.024682948 ubox
41 70 0.005930314 ubox
42 49 0.046337398 ubox
42 51 0.391423573 ubox
42 52 0.006792854 ubox
42 60 0.469765247 ubox
42 61 0.743714338 ubox
42 65 0.021071242 ubox
42 69 0.006135188 ubox
43 48 0.046499224 ubox
43 50 0.389099710 ubox
43 59 0.907106192 ubox
43 68 0.004667677 ubox
44 50 0.031948609 ubox
44 58 0.907390567 ubox
44 68 0.005014289 ubox
45 49 0.027614014 ubox
45 51 0.007467637 ubox
45 56 0.068772830 ubox
45 57 0.885474117 ubox
45 60 0.008118034 ubox
45 64 0.003196877 ubox
45 67 0.006492815 ubox
46 50 0.007660665 ubox
46 55 0.095711591 ubox
46 59 0.026288378 ubox
47 58 0.031749947 ubox
48 56 0.869717833 ubox
48 57 0.028610035 ubox
48 64 0.010604664 ubox
49 55 0.877263072 ubox
49 58 0.003341678 ubox
49 63 0.010339552 ubox
50 54 0.863476623 ubox
50 57 0.006393889 ubox
50 60 0.019002381 ubox
50 62 0.006253421 ubox
50 73 0.024716084 ubox
51 59 0.020325978 ubox
51 72 0.025368191 ubox
52 58 0.019480925 ubox
52 71 0.025051067 ubox
53 59 0.003810072 ubox
54 58 0.004596434 ubox
57 68 0.030903783 ubox
58 65 0.071380915 ubox
58 66 0.007935940 ubox
58 67 0.031975664 ubox
58 70 0.015098316 ubox
59 64 0.071083570 ubox
59 65 0.010908725 ubox
59 66 0.025308627 ubox
59 69 0.015849553 ubox
59 73 0.006177129 ubox
60 68 0.015501617 ubox
61 72 0.015309351 ubox
62 71 0.015553856 ubox
63 70 0.014715998 ubox
65 72 0.004857753 ubox
66 71 0.004476675 ubox
4 16 0.9500000 lbox
5 15 0.9500000 lbox
6 14 0.9500000 lbox
7 13 0.9500000 lbox
8 12 0.9500000 lbox
17 30 0.9500000 lbox
18 29 0.9500000 lbox
19 28 0.9500000 lbox
20 27 0.9500000 lbox
21 26 0.9500000 lbox
31 72 0.9500000 lbox
32 71 0.9500000 lbox
33 70 0.9500000 lbox
34 69 0.9500000 lbox
35 68 0.9500000 lbox
36 67 0.9500000 lbox
41 62 0.9500000 lbox
42 61 0.9500000 lbox
43 59 0.9500000 lbox
44 58 0.9500000 lbox
45 57 0.9500000 lbox
48 56 0.9500000 lbox
49 55 0.9500000 lbox
50 54 0.9500000 lbox
showpage
end
%%EOF
