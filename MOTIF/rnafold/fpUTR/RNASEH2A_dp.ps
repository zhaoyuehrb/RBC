%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:57:55 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RNASEH2A)
} def

/sequence { (\
GCGCCGAGACCCGCUCCUGCAGUAUUAGUUCUUGCAGCUGGUGGUGGCGGCUGAGGCGGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 48 0.004389268 ubox
1 51 0.076116221 ubox
1 57 0.299224777 ubox
1 60 0.255107079 ubox
2 46 0.015623535 ubox
2 47 0.003283339 ubox
2 49 0.355443828 ubox
2 50 0.054021141 ubox
2 53 0.083749796 ubox
2 56 0.299151240 ubox
2 58 0.788879336 ubox
2 59 0.184416500 ubox
3 45 0.016010389 ubox
3 48 0.363678274 ubox
3 51 0.416020586 ubox
3 52 0.018727380 ubox
3 57 0.817924694 ubox
3 60 0.140762791 ubox
4 44 0.016055453 ubox
4 47 0.363722605 ubox
4 50 0.416879840 ubox
4 56 0.818073851 ubox
4 59 0.141791834 ubox
5 43 0.016045360 ubox
5 46 0.363666105 ubox
5 49 0.416928342 ubox
5 53 0.015195948 ubox
5 55 0.817648640 ubox
5 58 0.141793516 ubox
6 16 0.021721365 ubox
6 42 0.010473841 ubox
6 45 0.342767819 ubox
6 48 0.416360775 ubox
6 52 0.015126036 ubox
6 57 0.141283118 ubox
7 15 0.021835784 ubox
7 32 0.003166101 ubox
7 52 0.485670434 ubox
8 14 0.021795443 ubox
8 31 0.003182889 ubox
8 51 0.496718591 ubox
9 42 0.113943540 ubox
9 45 0.345694817 ubox
10 41 0.116469996 ubox
10 44 0.287302017 ubox
10 47 0.029852866 ubox
10 50 0.253015761 ubox
10 56 0.053800954 ubox
10 59 0.009844197 ubox
11 40 0.115933584 ubox
11 41 0.032603130 ubox
11 43 0.207214302 ubox
11 44 0.452529434 ubox
11 46 0.021505484 ubox
11 47 0.237066055 ubox
11 49 0.180158557 ubox
11 50 0.758872441 ubox
11 55 0.053572952 ubox
11 56 0.041528645 ubox
11 58 0.009087310 ubox
11 59 0.061129575 ubox
12 40 0.035929211 ubox
12 43 0.495496195 ubox
12 46 0.261505780 ubox
12 49 0.773427482 ubox
12 53 0.044384736 ubox
12 55 0.041551004 ubox
12 58 0.061792199 ubox
13 20 0.008413112 ubox
13 38 0.111310138 ubox
13 39 0.035110077 ubox
13 42 0.533649104 ubox
13 45 0.263321524 ubox
13 48 0.785772850 ubox
13 51 0.031388299 ubox
13 52 0.036324718 ubox
13 57 0.061934152 ubox
14 19 0.008719676 ubox
14 37 0.104614690 ubox
14 41 0.534450177 ubox
14 44 0.263488466 ubox
14 47 0.785513536 ubox
14 50 0.031189944 ubox
14 55 0.030156003 ubox
14 56 0.055258217 ubox
15 36 0.073820012 ubox
15 40 0.513054538 ubox
15 41 0.022061577 ubox
15 43 0.248976288 ubox
15 44 0.024342098 ubox
15 46 0.715107770 ubox
15 47 0.011710939 ubox
15 49 0.028747835 ubox
15 50 0.003443560 ubox
15 54 0.041685941 ubox
15 55 0.046523532 ubox
16 40 0.083891096 ubox
16 41 0.372686682 ubox
16 43 0.049228082 ubox
16 44 0.542563308 ubox
16 46 0.094242471 ubox
16 47 0.012344443 ubox
16 49 0.007567023 ubox
16 50 0.064303039 ubox
16 53 0.043428244 ubox
16 55 0.005455558 ubox
17 28 0.003855557 ubox
17 37 0.547381793 ubox
17 40 0.370445307 ubox
17 41 0.062641078 ubox
17 43 0.540192760 ubox
17 44 0.405944049 ubox
17 46 0.015462376 ubox
17 47 0.022675352 ubox
17 49 0.064728301 ubox
17 50 0.065745078 ubox
18 27 0.003888710 ubox
18 36 0.562582937 ubox
18 40 0.060667900 ubox
18 43 0.402034715 ubox
18 46 0.025911338 ubox
18 49 0.066459936 ubox
19 26 0.003565667 ubox
19 29 0.003552516 ubox
19 35 0.568050707 ubox
19 38 0.385125123 ubox
19 39 0.008852818 ubox
19 42 0.359629437 ubox
19 45 0.075967487 ubox
19 48 0.068743085 ubox
20 28 0.003623996 ubox
20 34 0.568016263 ubox
20 37 0.385555154 ubox
20 40 0.599285995 ubox
20 41 0.274373673 ubox
20 43 0.018212784 ubox
20 44 0.076249465 ubox
20 46 0.246965952 ubox
20 47 0.050596101 ubox
21 30 0.007646958 ubox
21 32 0.295977554 ubox
21 33 0.478793457 ubox
21 39 0.643846923 ubox
21 42 0.016730146 ubox
21 45 0.273269520 ubox
22 29 0.014980647 ubox
22 31 0.419308911 ubox
22 32 0.321342081 ubox
22 35 0.389499856 ubox
22 38 0.646258750 ubox
22 42 0.004432688 ubox
23 28 0.027819475 ubox
23 34 0.390858104 ubox
23 37 0.633096066 ubox
23 40 0.015790484 ubox
23 43 0.284590657 ubox
24 33 0.395197749 ubox
24 39 0.014405222 ubox
24 42 0.301721404 ubox
25 37 0.049224217 ubox
25 41 0.302452719 ubox
26 34 0.348529971 ubox
26 36 0.146182652 ubox
26 40 0.321814724 ubox
27 33 0.351130411 ubox
27 39 0.322850465 ubox
28 32 0.240130805 ubox
28 35 0.337620589 ubox
28 38 0.323152524 ubox
29 34 0.332824511 ubox
29 37 0.321503739 ubox
30 36 0.285163435 ubox
31 37 0.015323032 ubox
32 36 0.016214877 ubox
33 54 0.003348439 ubox
35 53 0.010272513 ubox
36 52 0.011178763 ubox
37 45 0.005675404 ubox
37 51 0.011649054 ubox
38 44 0.012165814 ubox
38 50 0.011727028 ubox
39 43 0.011021777 ubox
39 49 0.011659288 ubox
40 45 0.003680354 ubox
40 48 0.011437036 ubox
42 47 0.003598122 ubox
44 51 0.003294276 ubox
45 50 0.003431238 ubox
47 51 0.003180458 ubox
47 57 0.006078024 ubox
47 60 0.016271081 ubox
48 56 0.006366600 ubox
48 59 0.016581975 ubox
50 57 0.123685384 ubox
50 60 0.318256198 ubox
51 56 0.123414984 ubox
51 59 0.322030751 ubox
52 58 0.321422364 ubox
53 57 0.306535557 ubox
2 58 0.9500000 lbox
3 57 0.9500000 lbox
4 56 0.9500000 lbox
5 55 0.9500000 lbox
11 50 0.9500000 lbox
12 49 0.9500000 lbox
13 48 0.9500000 lbox
14 47 0.9500000 lbox
15 46 0.9500000 lbox
16 44 0.9500000 lbox
17 43 0.9500000 lbox
20 40 0.9500000 lbox
21 39 0.9500000 lbox
22 38 0.9500000 lbox
23 37 0.9500000 lbox
showpage
end
%%EOF
