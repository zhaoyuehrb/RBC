%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:14:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUAGGGGAGGAUGGUGAGGACUACAAAGGUCUCCCCACCUCCCGGGGGCCGCGGAGGCGGGGCUGGAUGAAGGUCGACGUGCCUCCUCCGGGCGGGGCGCUGCCAGGCUCUCAGCCUCUCUGUGGAAGGGCAGCCUGCGCCUGGGUACCGAGGCUGCUGCGCGGCGGACAGCGGGCGCG\
) } def
/len { sequence length } bind def

/coor [
[20.70901489 292.42858887]
[6.64781904 297.65188599]
[-3.53846622 286.64102173]
[2.76169181 273.02789307]
[8.15574932 259.03131104]
[0.86070180 257.28997803]
[-10.58334446 266.98709106]
[-22.02739143 276.68417358]
[-33.47143936 286.38128662]
[-44.91548538 296.07836914]
[-56.35953140 305.77548218]
[-60.89984131 313.73339844]
[-68.08738708 315.53948975]
[-79.69801331 325.03649902]
[-91.30863953 334.53353882]
[-97.09179688 349.25988770]
[-111.84198761 351.32897949]
[-123.45261383 360.82598877]
[-135.06323242 370.32299805]
[-136.78302002 385.80459595]
[-148.69313049 395.27053833]
[-163.44187927 393.53558350]
[-175.05250549 403.03259277]
[-180.34481812 418.55432129]
[-196.48341370 421.46600342]
[-206.86628723 408.77236938]
[-200.81242371 393.53155518]
[-184.54953003 391.42196655]
[-172.93890381 381.92495728]
[-171.71501160 367.12503052]
[-160.07548523 357.32830811]
[-144.56025696 358.71237183]
[-132.94963074 349.21536255]
[-121.33900452 339.71835327]
[-116.38631439 325.67126465]
[-100.80565643 322.92291260]
[-89.19503021 313.42587280]
[-77.58440399 303.92886353]
[-66.05663300 294.33145142]
[-54.61258698 284.63433838]
[-43.16854095 274.93722534]
[-31.72449493 265.24014282]
[-20.28044701 255.54302979]
[-8.83640099 245.84593201]
[30.04089165 237.59469604]
[35.87121964 223.77415466]
[33.68925858 209.04023743]
[46.18213654 199.33259583]
[52.01246643 185.51205444]
[57.84279633 171.69151306]
[63.67312622 157.87097168]
[61.49116516 143.13705444]
[73.98404694 133.42941284]
[79.81437683 119.60887146]
[85.64470673 105.78833008]
[83.82671356 90.89891052]
[74.84228516 78.88724518]
[65.85785675 66.87557983]
[51.39622498 60.45906067]
[49.96893311 45.63299942]
[40.98450470 33.62133789]
[26.52287102 27.20481491]
[25.09557724 12.37875366]
[16.11115074 0.36709008]
[-1.23418009 -1.80271780]
[-11.45344162 -15.56687927]
[-8.62583637 -32.13295364]
[-17.81738472 -43.98687744]
[-27.00893211 -55.84079742]
[-42.38761139 -61.53538513]
[-44.87818909 -77.74430084]
[-31.91857719 -87.79320526]
[-16.84050941 -81.34464264]
[-15.15501213 -65.03234100]
[-5.96346378 -53.17842484]
[3.22808456 -41.32450485]
[16.12766266 -41.50830841]
[26.93432999 -34.11156082]
[31.56785393 -21.65502548]
[28.12281418 -8.61733723]
[37.10724258 3.39432645]
[50.92624664 8.95169258]
[52.99616623 24.63690948]
[61.98059464 36.64857101]
[75.79959869 42.20594025]
[77.86952209 57.89115524]
[86.85395050 69.90281677]
[95.83837891 81.91448212]
[110.69400024 83.99062347]
[122.62724304 74.90229034]
[134.56048584 65.81395721]
[146.49372864 56.72562790]
[158.42697144 47.63729858]
[170.36021423 38.54896927]
[182.29345703 29.46063805]
[188.58422852 14.94386578]
[203.39735413 13.38796043]
[215.33058167 4.29963017]
[220.27893066 -3.41119003]
[227.55073547 -4.84073687]
[239.63990784 -13.72058487]
[251.72909546 -22.60043335]
[263.81826782 -31.48027992]
[275.90747070 -40.36013031]
[287.99664307 -49.23997498]
[299.18435669 -59.23170853]
[309.36877441 -70.24433899]
[319.55316162 -81.25696564]
[329.73757935 -92.26959229]
[339.92196655 -103.28221893]
[346.23703003 -119.01614380]
[363.10424805 -117.30345917]
[366.12780762 -100.62129211]
[350.93460083 -93.09782410]
[340.75021362 -82.08518982]
[330.56579590 -71.07256317]
[320.38140869 -60.05993652]
[310.19699097 -49.04730606]
[324.87896729 -52.11966324]
[339.33602905 -48.12046814]
[350.35177612 -37.93944931]
[355.47549438 -23.84165573]
[353.56719971 -8.96353436]
[345.05151367 3.38486695]
[331.82296753 10.45630360]
[316.82458496 10.67753983]
[303.39321899 3.99935508]
[294.51702881 -8.09250355]
[292.17074585 -22.90786743]
[296.87649536 -37.15079498]
[284.78729248 -28.27094650]
[272.69812012 -19.39109993]
[260.60894775 -10.51125145]
[248.51976013 -1.63140345]
[236.43058777 7.24844456]
[224.41891479 16.23287201]
[212.48567200 25.32120132]
[207.04844666 39.18791580]
[191.38179016 41.39387894]
[179.44854736 50.48221207]
[167.51530457 59.57054138]
[155.58206177 68.65887451]
[143.64881897 77.74720001]
[131.71557617 86.83553314]
[119.78233337 95.92385864]
[117.48680878 104.49853516]
[112.10211945 110.33480072]
[105.47736359 112.63668060]
[99.46524048 111.61865997]
[93.63491058 125.43920135]
[87.80458069 139.25973511]
[89.56951904 154.98219299]
[77.49366760 163.70130920]
[71.66333771 177.52185059]
[65.83300781 191.34237671]
[60.00267410 205.16291809]
[61.76761627 220.88537598]
[49.69175720 229.60449219]
[43.86142731 243.42501831]
[43.86142731 258.42501831]
[49.69175720 272.24557495]
[55.52208710 286.06610107]
[61.35241699 299.88662720]
[76.28463745 310.64077759]
[73.46167755 327.94961548]
[79.53099823 341.66687012]
[93.91651917 348.76873779]
[97.19236755 364.47375488]
[86.84559631 376.73443604]
[70.81336212 376.14538574]
[61.39422226 363.15850830]
[65.81373596 347.73617554]
[59.74441528 334.01892090]
[48.56444550 329.35589600]
[43.40328598 317.95510864]
[47.53187943 305.71697998]
[41.70154953 291.89642334]
[35.87121964 278.07589722]
[30.04089165 264.25534058]
[22.74584389 262.51400757]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 44]
[7 43]
[8 42]
[9 41]
[10 40]
[11 39]
[13 38]
[14 37]
[15 36]
[17 34]
[18 33]
[19 32]
[22 29]
[23 28]
[45 159]
[46 158]
[48 156]
[49 155]
[50 154]
[51 153]
[53 151]
[54 150]
[55 149]
[56 88]
[57 87]
[58 86]
[60 84]
[61 83]
[63 81]
[64 80]
[67 76]
[68 75]
[69 74]
[89 145]
[90 144]
[91 143]
[92 142]
[93 141]
[94 140]
[95 139]
[97 137]
[98 136]
[100 135]
[101 134]
[102 133]
[103 132]
[104 131]
[105 130]
[106 118]
[107 117]
[108 116]
[109 115]
[110 114]
[160 179]
[161 178]
[162 177]
[163 176]
[165 173]
[166 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
