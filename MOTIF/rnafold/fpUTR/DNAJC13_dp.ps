%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:37:35 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DNAJC13)
} def

/sequence { (\
GUGGUGAGGGUGAGGAGGCCGGAGGGCGCCUCAUCCCACUCUGGAAGCUGAGCCGGCGGCGGGAGGAGCUAGGGCUGGAGCCUCUCCAGCCUCCCGCGAAGGUUUGAGCACAAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 39 0.049918333 ubox
1 48 0.010503504 ubox
1 109 0.007420358 ubox
1 111 0.144955701 ubox
2 38 0.049897234 ubox
2 43 0.055664907 ubox
2 47 0.010493076 ubox
2 108 0.006745985 ubox
2 110 0.138913052 ubox
2 112 0.041066303 ubox
3 37 0.049751506 ubox
3 40 0.882334250 ubox
3 41 0.285724192 ubox
3 42 0.027125799 ubox
3 109 0.048173483 ubox
3 111 0.044895737 ubox
4 36 0.036202701 ubox
4 39 0.996961627 ubox
4 40 0.035730511 ubox
4 41 0.022155432 ubox
4 111 0.004055498 ubox
5 38 0.997956781 ubox
5 110 0.003851883 ubox
6 35 0.011324589 ubox
6 37 0.998031646 ubox
6 41 0.010026056 ubox
7 34 0.009404997 ubox
7 40 0.009936525 ubox
8 35 0.006229750 ubox
8 36 0.999040948 ubox
8 37 0.015675892 ubox
8 39 0.005998580 ubox
9 34 0.004485776 ubox
9 35 0.999735618 ubox
9 36 0.016282556 ubox
9 37 0.003967415 ubox
10 34 0.999142935 ubox
10 35 0.016242174 ubox
10 36 0.003843283 ubox
11 33 0.999731773 ubox
12 32 0.999981969 ubox
13 31 0.999837743 ubox
14 30 0.999930022 ubox
14 31 0.004366972 ubox
15 29 0.999544636 ubox
15 30 0.010069367 ubox
18 27 0.999732190 ubox
19 25 0.019069601 ubox
19 26 0.999805312 ubox
20 24 0.020436706 ubox
20 25 0.999444569 ubox
36 44 0.003460582 ubox
37 43 0.004859517 ubox
38 42 0.003949108 ubox
39 108 0.003364629 ubox
40 46 0.006688249 ubox
40 51 0.006889120 ubox
40 107 0.004762548 ubox
41 47 0.008337384 ubox
41 50 0.008372790 ubox
41 56 0.005200363 ubox
41 106 0.005019444 ubox
41 108 0.029325118 ubox
42 46 0.014213900 ubox
42 55 0.005289942 ubox
42 107 0.029778788 ubox
42 110 0.016266095 ubox
42 112 0.346127255 ubox
43 49 0.006001926 ubox
43 54 0.005351984 ubox
43 109 0.013091620 ubox
43 111 0.373603805 ubox
44 48 0.006333705 ubox
44 53 0.005346369 ubox
44 105 0.029675021 ubox
45 104 0.029739182 ubox
46 103 0.029321690 ubox
47 57 0.004856486 ubox
47 103 0.003212937 ubox
47 109 0.995612324 ubox
48 56 0.004863321 ubox
48 101 0.029440413 ubox
48 102 0.003381207 ubox
48 108 0.997257824 ubox
49 55 0.004846032 ubox
49 100 0.029355898 ubox
49 101 0.003337543 ubox
49 106 0.289100606 ubox
49 107 0.945900380 ubox
50 54 0.004619403 ubox
50 104 0.010391405 ubox
50 105 0.876339024 ubox
51 103 0.009199255 ubox
51 104 0.938214062 ubox
51 105 0.317822970 ubox
52 97 0.029456417 ubox
52 103 0.972145621 ubox
52 104 0.225381412 ubox
53 96 0.029264804 ubox
53 102 0.999468871 ubox
54 96 0.003313887 ubox
54 101 0.999280283 ubox
55 94 0.029105373 ubox
55 95 0.004552688 ubox
56 93 0.029123666 ubox
56 94 0.004453959 ubox
56 97 0.011530363 ubox
57 96 0.011530917 ubox
57 98 0.768676205 ubox
58 91 0.029424119 ubox
58 95 0.011308227 ubox
58 97 0.544784665 ubox
59 90 0.029436726 ubox
59 94 0.011122976 ubox
59 97 0.837688751 ubox
60 89 0.029372494 ubox
60 96 0.998503937 ubox
61 86 0.012697925 ubox
61 87 0.020749493 ubox
61 91 0.005416070 ubox
61 92 0.007156423 ubox
61 93 0.005415328 ubox
61 94 0.004801424 ubox
61 95 0.999461685 ubox
62 85 0.013206391 ubox
62 86 0.020744618 ubox
62 87 0.016052357 ubox
62 90 0.005423029 ubox
62 91 0.007466211 ubox
62 92 0.003480958 ubox
62 93 0.005133240 ubox
62 94 0.999443466 ubox
63 69 0.003611834 ubox
63 84 0.024537987 ubox
63 86 0.016110606 ubox
63 90 0.007457914 ubox
63 93 0.999237813 ubox
64 70 0.076561472 ubox
64 83 0.024624424 ubox
64 85 0.016084088 ubox
64 92 0.861351515 ubox
65 69 0.079576017 ubox
65 82 0.024643584 ubox
65 84 0.015999336 ubox
65 87 0.028838778 ubox
65 91 0.585359797 ubox
65 92 0.018839109 ubox
65 93 0.005837989 ubox
65 94 0.008062122 ubox
66 81 0.024643495 ubox
66 82 0.004795721 ubox
66 83 0.013860847 ubox
66 86 0.032669427 ubox
66 90 0.460641184 ubox
66 91 0.025943572 ubox
66 92 0.008503591 ubox
66 93 0.011376466 ubox
67 76 0.083436736 ubox
67 85 0.038936748 ubox
67 92 0.013064356 ubox
68 75 0.097788135 ubox
68 81 0.015314856 ubox
68 84 0.038982233 ubox
68 90 0.054222542 ubox
68 91 0.008639544 ubox
69 74 0.101729114 ubox
69 78 0.024471408 ubox
69 80 0.015398259 ubox
69 89 0.071774090 ubox
70 77 0.024293320 ubox
70 79 0.015279000 ubox
70 88 0.068339931 ubox
71 76 0.022227445 ubox
71 83 0.019011168 ubox
71 85 0.243988676 ubox
71 92 0.042788749 ubox
72 82 0.018775270 ubox
72 83 0.176734117 ubox
72 84 0.251567753 ubox
72 85 0.003763865 ubox
72 86 0.011169178 ubox
72 87 0.011892416 ubox
72 91 0.056649699 ubox
72 92 0.498826796 ubox
72 93 0.006018853 ubox
73 81 0.017696138 ubox
73 82 0.309321933 ubox
73 83 0.035328641 ubox
73 85 0.004858571 ubox
73 86 0.010864944 ubox
73 87 0.003974998 ubox
73 90 0.043862368 ubox
73 91 0.806981936 ubox
74 81 0.310235257 ubox
74 82 0.027714535 ubox
74 84 0.004809407 ubox
74 85 0.007296539 ubox
74 86 0.003987251 ubox
74 90 0.883560741 ubox
75 80 0.310061009 ubox
75 89 0.944224338 ubox
76 88 0.945389327 ubox
77 83 0.004128487 ubox
77 84 0.005061473 ubox
77 85 0.005269433 ubox
77 87 0.949545251 ubox
78 82 0.004268182 ubox
78 83 0.004026017 ubox
78 84 0.006150870 ubox
78 86 0.949553945 ubox
79 83 0.005471712 ubox
79 85 0.948108259 ubox
80 84 0.927240855 ubox
104 113 0.004039157 ubox
105 112 0.004956399 ubox
106 111 0.005826662 ubox
3 40 0.9500000 lbox
4 39 0.9500000 lbox
5 38 0.9500000 lbox
6 37 0.9500000 lbox
8 36 0.9500000 lbox
9 35 0.9500000 lbox
10 34 0.9500000 lbox
11 33 0.9500000 lbox
12 32 0.9500000 lbox
13 31 0.9500000 lbox
14 30 0.9500000 lbox
15 29 0.9500000 lbox
18 27 0.9500000 lbox
19 26 0.9500000 lbox
20 25 0.9500000 lbox
47 109 0.9500000 lbox
48 108 0.9500000 lbox
49 107 0.9500000 lbox
50 105 0.9500000 lbox
51 104 0.9500000 lbox
52 103 0.9500000 lbox
53 102 0.9500000 lbox
54 101 0.9500000 lbox
59 97 0.9500000 lbox
60 96 0.9500000 lbox
61 95 0.9500000 lbox
62 94 0.9500000 lbox
63 93 0.9500000 lbox
64 92 0.9500000 lbox
73 91 0.9500000 lbox
74 90 0.9500000 lbox
75 89 0.9500000 lbox
76 88 0.9500000 lbox
77 87 0.9500000 lbox
78 86 0.9500000 lbox
79 85 0.9500000 lbox
80 84 0.9500000 lbox
showpage
end
%%EOF
