%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:02:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCAAACGGCGAGGGCGUGGCUACCAGCCGCUGCGCUCCGCUCUGGGGUCUCCUCACCCCAGAAGGCCCUCAGGUGGAGGAAGGGCCUCAGGUGGAGGUAGGACCUGUGCUGGCCGCGGGAGAGGUAAACAGAACACCAGGACAUCCCAGAGUCUGGGAA\
) } def
/len { sequence length } bind def

/coor [
[96.11411285 162.82632446]
[88.61975861 163.11712646]
[84.59716797 177.56770325]
[80.57457733 192.01826477]
[87.17713165 206.63967896]
[79.73432159 220.85179138]
[63.95564270 223.75228882]
[51.94514465 213.11614990]
[52.91625214 197.10250854]
[66.12401581 187.99566650]
[70.14660645 173.54510498]
[74.16918945 159.09454346]
[55.67008209 141.10552979]
[46.75001526 118.63526917]
[47.76667023 96.10663605]
[57.24482727 77.44481659]
[72.33965302 65.39472198]
[65.09296417 52.26134872]
[57.84627533 39.12797546]
[50.59958649 25.99460220]
[43.35289764 12.86122894]
[36.10620880 -0.27214426]
[28.85951805 -13.40551758]
[21.61282921 -26.53889084]
[3.90619731 -36.10632706]
[4.99717283 -55.38300705]
[-2.75331783 -68.22550964]
[-10.50380802 -81.06801605]
[-25.84074593 -82.51179504]
[-37.25333023 -92.59178925]
[-40.50365448 -107.28530884]
[-34.54985428 -120.91213226]
[-42.30034637 -133.75463867]
[-50.05083466 -146.59713745]
[-57.80132675 -159.43963623]
[-64.95072937 -165.20565796]
[-65.57480621 -172.60717773]
[-73.07480621 -185.59756470]
[-80.57480621 -198.58793640]
[-88.07480621 -211.57832336]
[-95.57480621 -224.56871033]
[-103.07480621 -237.55908203]
[-110.11106110 -243.46264648]
[-110.59149170 -250.87489319]
[-117.83818054 -264.00827026]
[-125.08486938 -277.14163208]
[-132.33155823 -290.27499390]
[-139.57824707 -303.40838623]
[-146.82493591 -316.54174805]
[-154.07162476 -329.67514038]
[-161.31831360 -342.80850220]
[-168.81831360 -355.79888916]
[-176.56880188 -368.64138794]
[-184.31929016 -381.48388672]
[-192.06977844 -394.32638550]
[-199.82028198 -407.16888428]
[-207.69493103 -419.93563843]
[-215.69299316 -432.62545776]
[-223.69105530 -445.31524658]
[-238.84393311 -448.92468262]
[-246.77433777 -461.90786743]
[-243.23989868 -476.33157349]
[-251.23796082 -489.02139282]
[-266.70434570 -492.27197266]
[-275.27215576 -505.55233765]
[-271.85824585 -520.98352051]
[-258.48803711 -529.41040039]
[-243.09382629 -525.83355713]
[-234.80874634 -512.37500000]
[-238.54817200 -497.01943970]
[-230.55010986 -484.32965088]
[-216.01280212 -481.29611206]
[-207.72085571 -468.54080200]
[-211.00126648 -453.31329346]
[-203.00318909 -440.62350464]
[-195.00512695 -427.93371582]
[-188.74739075 -423.93212891]
[-186.97776794 -414.91937256]
[-179.22727966 -402.07687378]
[-171.47679138 -389.23437500]
[-163.72630310 -376.39187622]
[-155.97581482 -363.54937744]
[-151.59097290 -361.54629517]
[-148.44148254 -356.74139404]
[-148.18493652 -350.05517578]
[-140.93824768 -336.92181396]
[-133.69155884 -323.78845215]
[-126.44487000 -310.65505981]
[-119.19818115 -297.52169800]
[-111.95149231 -284.38833618]
[-104.70480347 -271.25494385]
[-97.45811462 -258.12158203]
[-90.08442688 -245.05908203]
[-82.58442688 -232.06871033]
[-75.08442688 -219.07832336]
[-67.58442688 -206.08793640]
[-60.08442688 -193.09756470]
[-52.58442688 -180.10717773]
[-44.95882416 -167.19012451]
[-37.20833206 -154.34762573]
[-29.45784187 -141.50512695]
[-21.70734978 -128.66261292]
[-6.87612963 -127.57962036]
[4.60933924 -117.85604095]
[8.20897198 -103.06090546]
[2.33869505 -88.81850433]
[10.08918571 -75.97600555]
[17.83967590 -63.13349915]
[27.99771118 -61.56549454]
[35.76057053 -54.49745560]
[38.37931824 -44.10355377]
[34.74620438 -33.78557968]
[41.99289322 -20.65220642]
[49.23958206 -7.51883316]
[56.48627090 5.61454010]
[63.73295975 18.74791336]
[70.97964478 31.88128662]
[78.22633362 45.01465988]
[85.47302246 58.14803314]
[102.03389740 52.37662506]
[120.78353882 53.39184570]
[138.87919617 61.95413589]
[153.25256348 77.62369537]
[161.11456299 98.71537781]
[160.45498657 122.46308136]
[174.22822571 128.40428162]
[188.00148010 134.34547424]
[200.74276733 125.64701843]
[216.16477966 125.24071503]
[229.34640503 133.25621033]
[236.08143616 147.13578796]
[234.22074890 162.45053101]
[224.35809326 174.31356812]
[209.64057922 178.93942261]
[194.76454163 174.85202026]
[184.47685242 163.35563660]
[182.06027222 148.11871338]
[168.28703308 142.17752075]
[154.51379395 136.23632812]
[149.05848694 141.38313293]
[159.35211182 152.29373169]
[169.64555359 163.20451355]
[158.73461914 173.49777222]
[148.44151306 162.58735657]
[138.14788818 151.67675781]
[132.69258118 156.82357788]
[137.82289124 170.91896057]
[142.95318604 185.01434326]
[148.08349609 199.10974121]
[153.21379089 213.20512390]
[158.34410095 227.30052185]
[169.44309998 240.11647034]
[160.20051575 254.32951355]
[143.98431396 249.38270569]
[144.24870300 232.43081665]
[139.11840820 218.33543396]
[133.98809814 204.24003601]
[128.85780334 190.14465332]
[123.72750092 176.04925537]
[118.59719849 161.95387268]
[111.10283661 162.24468994]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 12]
[3 11]
[4 10]
[17 119]
[18 118]
[19 117]
[20 116]
[21 115]
[22 114]
[23 113]
[24 112]
[26 108]
[27 107]
[28 106]
[32 102]
[33 101]
[34 100]
[35 99]
[37 98]
[38 97]
[39 96]
[40 95]
[41 94]
[42 93]
[44 92]
[45 91]
[46 90]
[47 89]
[48 88]
[49 87]
[50 86]
[51 85]
[52 82]
[53 81]
[54 80]
[55 79]
[56 78]
[57 76]
[58 75]
[59 74]
[62 71]
[63 70]
[125 139]
[126 138]
[127 137]
[146 160]
[147 159]
[148 158]
[149 157]
[150 156]
[151 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
