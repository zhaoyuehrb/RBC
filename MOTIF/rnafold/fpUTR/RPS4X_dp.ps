%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:20:28 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RPS4X)
} def

/sequence { (\
GGGCGGAGCAGCUGAAAAUCCGGCGCGCGCAGUCUCCAGCCCCAAUUUCUACGCGCACCGGAAGACGGAGGUCCUCUUUCCUUGCCUAACGCAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 13 0.006970679 ubox
1 42 0.071741475 ubox
1 43 0.012670646 ubox
1 74 0.024645217 ubox
1 75 0.011449468 ubox
1 76 0.027969706 ubox
1 77 0.088361222 ubox
1 78 0.153536371 ubox
1 79 0.014487150 ubox
1 80 0.040233124 ubox
1 81 0.750063655 ubox
1 82 0.095787133 ubox
1 83 0.009381407 ubox
1 86 0.023375041 ubox
1 87 0.415892551 ubox
1 96 0.126081962 ubox
2 12 0.005674384 ubox
2 13 0.105983239 ubox
2 41 0.072298561 ubox
2 42 0.010683808 ubox
2 73 0.024515404 ubox
2 74 0.014059688 ubox
2 75 0.025260724 ubox
2 76 0.101589924 ubox
2 77 0.227779213 ubox
2 78 0.018656321 ubox
2 79 0.034527563 ubox
2 80 0.751080688 ubox
2 81 0.125343187 ubox
2 82 0.014203533 ubox
2 85 0.021910259 ubox
2 86 0.440404295 ubox
2 87 0.003623668 ubox
2 95 0.126313358 ubox
2 96 0.221052492 ubox
3 9 0.032918655 ubox
3 12 0.117489374 ubox
3 40 0.072621725 ubox
3 41 0.008207968 ubox
3 72 0.023850824 ubox
3 73 0.013935585 ubox
3 74 0.019553497 ubox
3 75 0.100584613 ubox
3 76 0.246863056 ubox
3 77 0.022981783 ubox
3 78 0.035178888 ubox
3 79 0.710522793 ubox
3 80 0.125209328 ubox
3 81 0.015416355 ubox
3 85 0.440589335 ubox
3 86 0.003218647 ubox
3 92 0.270023849 ubox
3 95 0.223731315 ubox
4 8 0.032723102 ubox
4 11 0.117650718 ubox
4 14 0.030910111 ubox
4 39 0.072908726 ubox
4 71 0.023755743 ubox
4 84 0.439482031 ubox
4 91 0.270573123 ubox
4 94 0.222994982 ubox
5 13 0.045589268 ubox
5 21 0.039728942 ubox
5 35 0.004134593 ubox
5 37 0.072622321 ubox
5 59 0.005110766 ubox
5 73 0.015846873 ubox
5 74 0.374468009 ubox
5 75 0.095495671 ubox
5 76 0.031376289 ubox
5 77 0.753463655 ubox
5 78 0.026819435 ubox
5 79 0.028977581 ubox
5 80 0.031609870 ubox
5 81 0.322716704 ubox
5 82 0.036931313 ubox
5 83 0.196070687 ubox
5 86 0.005715221 ubox
5 87 0.069026802 ubox
5 90 0.268085653 ubox
5 96 0.008033853 ubox
6 12 0.047786786 ubox
6 20 0.039877334 ubox
6 34 0.004349729 ubox
6 36 0.072895523 ubox
6 58 0.005099614 ubox
6 72 0.008099044 ubox
6 73 0.375441569 ubox
6 74 0.103973098 ubox
6 75 0.017272051 ubox
6 76 0.766339766 ubox
6 77 0.005012524 ubox
6 78 0.044046475 ubox
6 79 0.032470253 ubox
6 80 0.327298531 ubox
6 81 0.050502984 ubox
6 82 0.124957115 ubox
6 83 0.061987455 ubox
6 85 0.005181978 ubox
6 86 0.096948957 ubox
6 95 0.007934510 ubox
7 13 0.042433337 ubox
7 19 0.039458718 ubox
7 33 0.004372537 ubox
7 35 0.072741779 ubox
7 72 0.330286829 ubox
7 75 0.762417321 ubox
7 77 0.050398919 ubox
7 78 0.037858495 ubox
7 79 0.322912653 ubox
7 82 0.088197063 ubox
7 83 0.003369712 ubox
7 87 0.110585336 ubox
8 12 0.043251099 ubox
8 26 0.024669829 ubox
8 28 0.033614610 ubox
8 30 0.007565945 ubox
8 34 0.060568988 ubox
8 72 0.418819809 ubox
8 74 0.702904349 ubox
8 76 0.052746829 ubox
8 77 0.026760535 ubox
8 78 0.204122342 ubox
8 81 0.092609813 ubox
8 82 0.004216919 ubox
8 85 0.258682373 ubox
8 86 0.085015093 ubox
8 92 0.035645576 ubox
8 95 0.016295201 ubox
9 25 0.026849267 ubox
9 27 0.037768457 ubox
9 29 0.008430391 ubox
9 32 0.019511681 ubox
9 71 0.693680251 ubox
9 84 0.270018400 ubox
9 91 0.035686693 ubox
9 94 0.016331050 ubox
10 75 0.069846687 ubox
10 77 0.111856624 ubox
10 78 0.011637035 ubox
10 79 0.030684574 ubox
10 82 0.043667622 ubox
10 83 0.260572114 ubox
10 87 0.015011833 ubox
11 24 0.080750610 ubox
11 28 0.005849859 ubox
11 30 0.012453693 ubox
11 33 0.033710915 ubox
11 72 0.268646641 ubox
11 74 0.070344457 ubox
11 76 0.110731248 ubox
11 77 0.011328720 ubox
11 78 0.027902264 ubox
11 81 0.059078173 ubox
11 82 0.216630855 ubox
11 85 0.063606313 ubox
11 86 0.012487854 ubox
11 92 0.013856909 ubox
11 95 0.058117220 ubox
12 23 0.080835785 ubox
12 27 0.005789288 ubox
12 29 0.012401013 ubox
12 32 0.035140802 ubox
12 64 0.041053118 ubox
12 68 0.772514756 ubox
12 70 0.310995318 ubox
12 71 0.272611597 ubox
12 84 0.064280104 ubox
12 91 0.013839358 ubox
12 94 0.058267538 ubox
13 22 0.080808207 ubox
13 25 0.004387834 ubox
13 27 0.008195966 ubox
13 31 0.035127945 ubox
13 63 0.041420058 ubox
13 67 0.772086495 ubox
13 69 0.309214920 ubox
13 70 0.269328995 ubox
13 84 0.004615083 ubox
13 93 0.057870474 ubox
14 20 0.008900328 ubox
14 21 0.080305962 ubox
14 24 0.004507273 ubox
14 26 0.008398597 ubox
14 30 0.034932896 ubox
14 66 0.766720669 ubox
14 73 0.025488601 ubox
14 76 0.045783571 ubox
14 78 0.014130858 ubox
14 79 0.035456499 ubox
14 80 0.209160321 ubox
14 83 0.010968737 ubox
14 90 0.003858832 ubox
14 92 0.057016925 ubox
15 19 0.009851634 ubox
15 72 0.024496012 ubox
15 75 0.043826682 ubox
15 77 0.013229199 ubox
15 78 0.036296525 ubox
15 79 0.208525832 ubox
15 82 0.011231994 ubox
15 83 0.004578718 ubox
16 77 0.031015107 ubox
16 78 0.200403905 ubox
16 79 0.011939005 ubox
16 82 0.004926364 ubox
16 83 0.003580256 ubox
17 77 0.169060078 ubox
17 78 0.014526321 ubox
17 79 0.004069058 ubox
17 82 0.003599135 ubox
18 77 0.013587724 ubox
18 78 0.004352135 ubox
19 62 0.962461891 ubox
19 65 0.006695044 ubox
20 61 0.994667648 ubox
20 64 0.004017406 ubox
21 27 0.008605883 ubox
21 29 0.024905511 ubox
21 60 0.995007989 ubox
22 26 0.008110883 ubox
22 28 0.024935105 ubox
22 59 0.995964760 ubox
23 30 0.003482493 ubox
23 58 0.995860233 ubox
24 29 0.003829713 ubox
25 33 0.017607323 ubox
25 56 0.996987544 ubox
26 32 0.018405909 ubox
26 55 0.997178359 ubox
27 33 0.004920630 ubox
27 54 0.997182453 ubox
27 56 0.014904651 ubox
28 32 0.005110903 ubox
28 53 0.997175968 ubox
28 55 0.014924429 ubox
29 40 0.050597590 ubox
29 52 0.993547904 ubox
29 54 0.014958272 ubox
30 39 0.055367998 ubox
30 53 0.014935523 ubox
31 47 0.028044091 ubox
31 48 0.046659141 ubox
31 50 0.942681300 ubox
32 40 0.034239951 ubox
32 46 0.032849690 ubox
32 47 0.045440758 ubox
32 49 0.961596193 ubox
32 52 0.012039286 ubox
33 39 0.035637902 ubox
33 45 0.038731843 ubox
33 51 0.013040588 ubox
38 47 0.035902180 ubox
38 48 0.034022855 ubox
38 50 0.012650079 ubox
39 46 0.035643881 ubox
39 47 0.030266612 ubox
39 49 0.013047248 ubox
49 94 0.019791521 ubox
50 88 0.007906902 ubox
50 93 0.019506956 ubox
51 87 0.008146400 ubox
52 91 0.022952099 ubox
53 85 0.007702367 ubox
53 90 0.022933775 ubox
53 92 0.043518103 ubox
53 95 0.019527677 ubox
54 84 0.007707236 ubox
54 91 0.043555646 ubox
54 94 0.019549084 ubox
55 83 0.006945938 ubox
55 85 0.063292133 ubox
55 90 0.023230167 ubox
55 92 0.009663103 ubox
55 95 0.012759675 ubox
56 84 0.065445941 ubox
56 91 0.009656401 ubox
56 94 0.012769798 ubox
57 83 0.064259930 ubox
58 68 0.019465003 ubox
59 67 0.019741214 ubox
59 91 0.010777530 ubox
60 66 0.019809958 ubox
60 77 0.015516654 ubox
60 80 0.074695387 ubox
60 81 0.055709688 ubox
60 86 0.015616674 ubox
60 87 0.004847565 ubox
60 90 0.010897715 ubox
61 76 0.022916545 ubox
61 79 0.076153784 ubox
61 80 0.055925947 ubox
61 85 0.015623072 ubox
61 86 0.005016848 ubox
62 75 0.028810427 ubox
62 77 0.004033085 ubox
62 78 0.113852904 ubox
62 79 0.048124406 ubox
62 82 0.005589671 ubox
62 83 0.020277440 ubox
63 75 0.047852635 ubox
63 77 0.192154812 ubox
63 78 0.038570181 ubox
63 79 0.006977183 ubox
63 82 0.032639142 ubox
63 83 0.007344415 ubox
63 87 0.035121387 ubox
64 73 0.325352216 ubox
64 74 0.036129802 ubox
64 76 0.206956427 ubox
64 77 0.016722971 ubox
64 78 0.008368109 ubox
64 79 0.009758367 ubox
64 80 0.117763803 ubox
64 81 0.032094954 ubox
64 82 0.007279253 ubox
64 83 0.024118151 ubox
64 86 0.036141446 ubox
65 72 0.328252563 ubox
65 75 0.206156358 ubox
65 77 0.007391400 ubox
65 78 0.010788713 ubox
65 79 0.117464711 ubox
65 82 0.029040449 ubox
66 71 0.328373134 ubox
66 84 0.029887101 ubox
66 91 0.021018724 ubox
67 73 0.026141691 ubox
67 74 0.214753860 ubox
67 75 0.009225159 ubox
67 76 0.009298173 ubox
67 77 0.139865899 ubox
67 78 0.003947352 ubox
67 79 0.016570845 ubox
67 80 0.110356900 ubox
67 81 0.171164888 ubox
67 83 0.021826434 ubox
67 86 0.025271328 ubox
67 90 0.021461051 ubox
67 96 0.003654376 ubox
68 72 0.017023029 ubox
68 73 0.214150968 ubox
68 74 0.010667970 ubox
68 75 0.007378058 ubox
68 76 0.147361280 ubox
68 78 0.023889532 ubox
68 79 0.111738257 ubox
68 80 0.171333017 ubox
68 81 0.003388060 ubox
68 82 0.010278675 ubox
68 83 0.064158050 ubox
68 85 0.024845697 ubox
68 95 0.003649132 ubox
69 75 0.147289739 ubox
69 77 0.030413186 ubox
69 78 0.127491097 ubox
69 79 0.159940184 ubox
69 82 0.099076317 ubox
69 83 0.006675574 ubox
69 87 0.026004652 ubox
70 74 0.144079346 ubox
70 76 0.033281633 ubox
70 77 0.141293849 ubox
70 78 0.144125000 ubox
70 79 0.004180725 ubox
70 80 0.004946563 ubox
70 81 0.106310610 ubox
70 82 0.004246687 ubox
70 86 0.026897442 ubox
71 75 0.021750664 ubox
71 76 0.153206577 ubox
71 77 0.112603462 ubox
71 78 0.008860632 ubox
71 79 0.004802448 ubox
71 80 0.106309778 ubox
71 81 0.004250074 ubox
71 85 0.026895925 ubox
72 84 0.025948305 ubox
81 94 0.070038463 ubox
82 89 0.007059293 ubox
82 93 0.054821438 ubox
82 94 0.600623848 ubox
83 88 0.007394176 ubox
83 91 0.017017988 ubox
83 93 0.792678404 ubox
84 90 0.023218727 ubox
84 92 0.822886833 ubox
84 95 0.122339886 ubox
85 91 0.821954664 ubox
85 94 0.121748879 ubox
86 94 0.025108499 ubox
87 93 0.028753730 ubox
1 81 0.9500000 lbox
2 80 0.9500000 lbox
3 79 0.9500000 lbox
5 77 0.9500000 lbox
6 76 0.9500000 lbox
7 75 0.9500000 lbox
8 74 0.9500000 lbox
12 70 0.9500000 lbox
13 69 0.9500000 lbox
19 62 0.9500000 lbox
20 61 0.9500000 lbox
21 60 0.9500000 lbox
22 59 0.9500000 lbox
23 58 0.9500000 lbox
25 56 0.9500000 lbox
26 55 0.9500000 lbox
27 54 0.9500000 lbox
28 53 0.9500000 lbox
29 52 0.9500000 lbox
31 50 0.9500000 lbox
32 49 0.9500000 lbox
82 94 0.9500000 lbox
83 93 0.9500000 lbox
84 92 0.9500000 lbox
85 91 0.9500000 lbox
showpage
end
%%EOF
