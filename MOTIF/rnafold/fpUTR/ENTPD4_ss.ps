%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:55:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCGCGCUCCCGCCGCCAGCGGGCGCGCUCCGGGCGCAGGCGGUGACGUGUUGCCGGCGGGGGCCGGGCGGGGGUGCGGCUCCAGGAAAGGAGCGCGGCCUCCAGGAAGCCGGCUGGCCGUGAUGCUGCCCACUGGUGGUCCCCCGCUCCCGGGGUCCCCGGCCGGCCAAGCAGGAGGGCUCUAACUCCGUGAGGACCCCAGCAUUAUUUCUAUAAUUGUUUGUGAGAAGGACUGAAUCCCAGAGCAUUGCCUU\
GUUGCUGACCUUUCAGU\
) } def
/len { sequence length } bind def

/coor [
[324.07788086 429.92123413]
[331.55868530 416.91772461]
[333.54663086 402.05004883]
[324.67407227 414.14459229]
[315.80154419 426.23913574]
[306.92898560 438.33367920]
[298.05645752 450.42822266]
[295.51791382 459.16348267]
[289.01156616 462.61010742]
[280.00042725 474.60174561]
[271.05844116 486.64501953]
[262.18588257 498.73956299]
[253.31335449 510.83410645]
[244.44081116 522.92864990]
[235.56826782 535.02319336]
[227.69769287 547.79248047]
[220.88014221 561.15362549]
[214.06260681 574.51483154]
[215.45133972 590.85504150]
[201.84182739 600.00457764]
[187.23437500 592.55108643]
[186.65586853 576.16217041]
[200.70143127 567.69726562]
[207.51896667 554.33612061]
[214.33651733 540.97491455]
[201.99176025 532.45397949]
[191.91638184 543.56640625]
[181.84098816 554.67883301]
[171.76560974 565.79132080]
[161.69023132 576.90374756]
[155.53051758 592.69915771]
[138.64724731 591.15277100]
[135.45944214 574.50122070]
[150.57777405 566.82836914]
[160.65315247 555.71594238]
[170.72854614 544.60345459]
[180.80392456 533.49102783]
[190.87930298 522.37854004]
[210.54293823 518.04827881]
[223.47372437 526.15063477]
[232.34626770 514.05609131]
[241.21881104 501.96157837]
[250.09135437 489.86703491]
[258.96389771 477.77249146]
[260.38119507 470.54733276]
[268.00878906 465.59060669]
[277.01992798 453.59896851]
[285.96191406 441.55566406]
[294.83444214 429.46112061]
[303.70700073 417.36657715]
[312.57952881 405.27206421]
[321.45208740 393.17752075]
[306.99234009 372.59301758]
[314.09576416 351.35153198]
[305.78915405 338.86154175]
[297.48251343 326.37152100]
[289.17590332 313.88153076]
[280.86926270 301.39154053]
[272.56265259 288.90155029]
[264.18429565 276.45953369]
[255.73449707 264.06597900]
[247.28469849 251.67237854]
[238.83489990 239.27880859]
[230.38510132 226.88522339]
[221.93530273 214.49163818]
[213.48550415 202.09805298]
[204.75271606 189.90222168]
[195.74157715 177.91056824]
[186.73045349 165.91893005]
[177.71931458 153.92729187]
[168.70817566 141.93565369]
[159.69705200 129.94401550]
[150.68591309 117.95236969]
[141.67477417 105.96072388]
[132.66365051 93.96908569]
[131.20982361 112.74913025]
[119.67110443 127.99006653]
[101.46442413 134.67779541]
[82.25712585 130.40852356]
[68.20338440 116.24045563]
[54.65163040 109.81006622]
[41.09987259 103.37967682]
[27.54811668 96.94928741]
[13.99635983 90.51889801]
[-0.80475378 96.05989075]
[-15.15397835 89.43605042]
[-20.53817368 74.57717896]
[-13.76299381 60.29878998]
[1.15196979 55.07199097]
[15.35793209 61.99775314]
[20.42674828 76.96714020]
[33.97850418 83.39752960]
[47.53026199 89.82791901]
[61.08201599 96.25830841]
[74.63377380 102.68869781]
[84.18714905 91.12439728]
[75.31460571 79.02985382]
[66.44206238 66.93531799]
[57.56951904 54.84077072]
[48.69697189 42.74623108]
[39.82442856 30.65168762]
[22.79080200 23.61152458]
[21.59888077 6.08736706]
[12.58774757 -5.90427446]
[4.96016693 -10.86099434]
[3.54285932 -18.08615494]
[-5.32968521 -30.18069649]
[-19.57375908 -39.37540817]
[-14.68153572 -55.60816574]
[2.27114391 -55.40080643]
[6.76485729 -39.05324173]
[15.63740158 -26.95870018]
[24.57938957 -14.91540813]
[33.59052277 -2.92376685]
[45.49723053 -0.92451948]
[53.10576248 8.95996094]
[51.91897202 21.77914238]
[60.79151535 33.87368393]
[69.66406250 45.96822739]
[78.53660583 58.06277084]
[87.40914917 70.15731049]
[96.28169250 82.25185394]
[103.32445526 79.67319489]
[105.90053558 64.89604950]
[117.40998077 74.51586151]
[124.45274353 71.93720245]
[123.41787720 56.97294235]
[122.38300323 42.00868225]
[121.34813690 27.04442406]
[120.31327057 12.08016491]
[119.27840424 -2.88409472]
[109.67472839 -16.17700195]
[116.63085938 -31.02773476]
[132.99093628 -32.15913010]
[141.92510986 -18.40730667]
[134.24266052 -3.91896176]
[135.27752686 11.04529762]
[136.31239319 26.00955582]
[137.34725952 40.97381592]
[138.38212585 55.93807602]
[139.41700745 70.90233612]
[144.65528870 84.95794678]
[153.66642761 96.94959259]
[162.67755127 108.94123077]
[171.68869019 120.93287659]
[180.69982910 132.92451477]
[189.71095276 144.91615295]
[198.72209167 156.90779114]
[207.73323059 168.89944458]
[216.74435425 180.89108276]
[220.71737671 182.42597961]
[223.71231079 184.88446045]
[225.56040955 187.85258484]
[226.24223328 190.90385437]
[225.87907410 193.64825439]
[234.32887268 206.04183960]
[242.77868652 218.43542480]
[251.22848511 230.82899475]
[259.67828369 243.22257996]
[268.12808228 255.61616516]
[276.57788086 268.00973511]
[283.96929932 273.31219482]
[285.05264282 280.59490967]
[293.35928345 293.08489990]
[301.66589355 305.57492065]
[309.97253418 318.06491089]
[318.27914429 330.55490112]
[326.58575439 343.04489136]
[345.26989746 343.51608276]
[359.20666504 358.22671509]
[358.60311890 380.05770874]
[373.10311890 383.89828491]
[387.60311890 387.73889160]
[402.10311890 391.57946777]
[416.60311890 395.42004395]
[431.92431641 391.47406006]
[442.24630737 402.21212769]
[456.74630737 406.05270386]
[471.24627686 409.89328003]
[485.74627686 413.73388672]
[500.24627686 417.57446289]
[509.56488037 407.16943359]
[522.39312744 401.81265259]
[536.21197510 402.49429321]
[548.33435059 409.02490234]
[556.42755127 420.08319092]
[558.96209717 433.48297119]
[573.41693115 437.49017334]
[587.87176514 441.49737549]
[594.29913330 440.22546387]
[599.61968994 442.08676147]
[602.61114502 445.76666260]
[616.96990967 450.10543823]
[626.05200195 449.59033203]
[631.46844482 454.57766724]
[645.77636719 459.08139038]
[660.08428955 463.58511353]
[671.21179199 456.03543091]
[684.46246338 456.25778198]
[695.01611328 463.94772339]
[699.16223145 476.12503052]
[713.41735840 480.79309082]
[727.67254639 485.46118164]
[735.63641357 478.45910645]
[745.70550537 475.39880371]
[756.05914307 476.76400757]
[764.85406494 482.24453735]
[770.55212402 490.80343628]
[772.18951416 500.87280273]
[786.27502441 506.03012085]
[800.36059570 511.18746948]
[814.44610596 516.34478760]
[828.53161621 521.50213623]
[842.64660645 526.57830811]
[856.79052734 531.57318115]
[870.93444824 536.56811523]
[885.07836914 541.56298828]
[901.09252930 538.03027344]
[911.95782471 550.31347656]
[906.49700928 565.77673340]
[890.32769775 568.51275635]
[880.08349609 555.70697021]
[865.93957520 550.71203613]
[851.79559326 545.71716309]
[837.65167236 540.72222900]
[830.32543945 541.45544434]
[823.37426758 535.58764648]
[809.28875732 530.43029785]
[795.20324707 525.27301025]
[781.11773682 520.11566162]
[767.03216553 514.95831299]
[749.96307373 524.41101074]
[731.17285156 518.10968018]
[723.00445557 499.71630859]
[708.74932861 495.04824829]
[694.49414062 490.38015747]
[679.81042480 498.61337280]
[663.39727783 493.56256104]
[655.58056641 477.89303589]
[641.27264404 473.38931274]
[626.96472168 468.88555908]
[612.63116455 464.46423340]
[598.27233887 460.12545776]
[583.86456299 455.95220947]
[569.40972900 451.94500732]
[554.95489502 447.93783569]
[543.69470215 459.55108643]
[528.02117920 463.91595459]
[512.19720459 459.74676514]
[500.57650757 448.09237671]
[496.40570068 432.07446289]
[481.90570068 428.23388672]
[467.40570068 424.39328003]
[452.90570068 420.55270386]
[438.40570068 416.71212769]
[424.12164307 420.93283081]
[412.76251221 409.92004395]
[398.26251221 406.07946777]
[383.76254272 402.23889160]
[369.26254272 398.39828491]
[354.76254272 394.55770874]
[365.64620972 404.87979126]
[379.63238525 410.30078125]
[390.34707642 420.79818726]
[396.05343628 434.67037964]
[395.82641602 449.66864014]
[389.70288086 463.36178589]
[378.67544556 473.53015137]
[364.53161621 478.52539062]
[349.56414795 477.53778076]
[336.19931030 470.72744751]
[326.60351562 459.19833374]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 52]
[4 51]
[5 50]
[6 49]
[7 48]
[9 47]
[10 46]
[11 44]
[12 43]
[13 42]
[14 41]
[15 40]
[16 25]
[17 24]
[18 23]
[26 38]
[27 37]
[28 36]
[29 35]
[30 34]
[54 168]
[55 167]
[56 166]
[57 165]
[58 164]
[59 163]
[60 161]
[61 160]
[62 159]
[63 158]
[64 157]
[65 156]
[66 155]
[67 150]
[68 149]
[69 148]
[70 147]
[71 146]
[72 145]
[73 144]
[74 143]
[75 142]
[80 95]
[81 94]
[82 93]
[83 92]
[84 91]
[96 122]
[97 121]
[98 120]
[99 119]
[100 118]
[101 117]
[103 114]
[104 113]
[106 112]
[107 111]
[126 141]
[127 140]
[128 139]
[129 138]
[130 137]
[131 136]
[171 261]
[172 260]
[173 259]
[174 258]
[175 257]
[177 255]
[178 254]
[179 253]
[180 252]
[181 251]
[187 246]
[188 245]
[189 244]
[192 243]
[193 242]
[195 241]
[196 240]
[197 239]
[201 236]
[202 235]
[203 234]
[209 231]
[210 230]
[211 229]
[212 228]
[213 227]
[214 225]
[215 224]
[216 223]
[217 222]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
