%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:40:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCCCCAGUAGAACUACAGCAAGAAACUUCUGAUUGAGGCUCUAAGAAGCGGCAGGAAUGAGAAAACUCUUCAGCCAAUAAGAGUAAGCCACGCCCAGCCGAGGGACGUAUAAAAGGCAGGUCUAGCAGACUAACCCACACUCUGCCUUUGGACAUGUGAGAGAGCGCACCUUUCACUUGAGCUUCAAC\
) } def
/len { sequence length } bind def

/coor [
[63.15879059 241.67071533]
[76.96217346 247.54154968]
[88.35202026 257.30224609]
[96.26748657 270.04373169]
[99.97134399 284.57925415]
[99.11860657 299.55499268]
[93.78870392 313.57614136]
[84.47806549 325.33673096]
[72.05385590 333.74145508]
[57.67327499 338.00747681]
[42.67570496 337.73742676]
[28.45801163 332.95651245]
[16.34441376 324.11001587]
[7.46316385 312.02185059]
[2.64145231 297.81793213]
[2.32836914 282.82119751]
[6.55340052 268.42773438]
[-4.31297731 278.76803589]
[-15.17935562 289.10833740]
[-19.24872208 297.30679321]
[-26.31192589 299.52795410]
[-37.34778595 309.68716431]
[-48.38364410 319.84637451]
[-55.94179535 335.02236938]
[-72.61700439 331.96072388]
[-74.29116821 315.08966064]
[-58.54286575 308.81051636]
[-47.50700760 298.65130615]
[-36.47114944 288.49209595]
[-25.51965714 278.24197388]
[-14.65327835 267.90167236]
[-3.78690052 257.56137085]
[-1.46442735 248.54495239]
[7.57065773 243.21545410]
[15.14214039 230.26661682]
[22.71362305 217.31776428]
[30.28510666 204.36891174]
[37.85659027 191.42007446]
[45.42807388 178.47122192]
[52.99955750 165.52236938]
[60.57103729 152.57353210]
[68.14252472 139.62467957]
[61.11825562 133.90118408]
[55.13145828 126.92700958]
[50.40547562 118.89192963]
[47.12862015 110.02567291]
[45.44704437 100.59140015]
[45.45879745 90.87787628]
[47.20938110 81.19068146]
[50.68888855 71.84255981]
[55.83093643 63.14337540]
[42.88209152 55.57189178]
[29.93324280 48.00040817]
[17.26938629 50.50896454]
[6.63552141 43.92166901]
[3.45340443 32.23948669]
[-9.36848640 24.45494270]
[-22.19037628 16.67039871]
[-31.16765404 14.88634205]
[-35.15840530 8.64965820]
[-47.84983444 0.65418202]
[-60.54126358 -7.34129381]
[-76.94015503 -7.43280506]
[-84.82416534 -21.81245804]
[-76.08290100 -35.68769836]
[-59.70862198 -34.78487015]
[-52.54578781 -20.03272247]
[-39.85435867 -12.03724670]
[-27.16292953 -4.04177094]
[-14.40583324 3.84850860]
[-1.58394265 11.63305187]
[11.23794842 19.41759491]
[28.77011108 18.85025787]
[37.50472641 35.05155945]
[50.45357132 42.62304306]
[63.40242004 50.19452667]
[70.34332275 47.35306931]
[62.60960007 34.50045776]
[54.87588120 21.64785004]
[43.52630234 11.84034920]
[42.89631271 -3.14641571]
[53.38276291 -13.87182426]
[68.37991333 -13.57961559]
[78.44060516 -2.45385981]
[77.22686005 12.49783039]
[80.72599030 27.08399010]
[84.22512817 41.67015076]
[91.16602325 38.82869339]
[95.08822632 24.35055923]
[99.01042175 9.87242508]
[102.20991516 -4.78237772]
[104.67884064 -19.57779694]
[107.14775848 -34.37321854]
[109.49427032 -49.18854141]
[111.71823120 -64.02275848]
[113.94218445 -78.85697937]
[104.34690857 -91.41509247]
[106.52473450 -107.06861115]
[119.18359375 -116.53057861]
[134.81321716 -114.18737793]
[144.14080811 -101.42918396]
[141.63249207 -85.82521820]
[128.77639771 -76.63302612]
[126.55244446 -61.79880524]
[124.32849121 -46.96458817]
[126.44981384 -39.87076569]
[121.94317627 -31.90429688]
[119.47425842 -17.10887909]
[117.00534058 -2.31345868]
[129.87236023 -10.02317142]
[144.45878601 -6.52512264]
[152.42958069 6.18182182]
[149.23004150 20.83661652]
[136.68847656 29.06517029]
[121.97142029 26.16549492]
[113.48855591 13.79462433]
[109.56636047 28.27275848]
[105.64415741 42.75089264]
[125.76347351 51.06944275]
[140.59857178 65.81991577]
[148.36651611 84.32534790]
[163.16194153 81.85643005]
[177.95735168 79.38751221]
[192.75277710 76.91859436]
[207.54818726 74.44967651]
[222.27783203 71.61460114]
[236.93263245 68.41510010]
[251.58743286 65.21560669]
[266.24224854 62.01611328]
[280.89703369 58.81661987]
[284.89392090 44.04220200]
[295.30752563 32.82543564]
[309.74484253 27.74385834]
[324.88830566 29.96517372]
[337.25802612 38.97894287]
[344.01159668 52.71386719]
[343.59704590 68.01375580]
[336.10961914 81.36281586]
[323.26992798 89.69352722]
[308.02841187 91.09155273]
[293.88745117 85.23563385]
[284.09652710 73.47142029]
[269.44174194 76.67091370]
[254.78692627 79.87041473]
[240.13212585 83.06990814]
[225.47732544 86.26940155]
[223.27127075 89.04167175]
[219.60490417 90.87507629]
[214.93792725 91.09137726]
[210.01710510 89.24509430]
[195.22169495 91.71401215]
[180.42626953 94.18292999]
[165.63085938 96.65185547]
[150.83543396 99.12077332]
[149.73466492 110.55827332]
[146.09373474 121.45652008]
[140.09858704 131.25889587]
[150.43888855 142.12527466]
[160.77919006 152.99165344]
[171.11947632 163.85801697]
[181.45977783 174.72439575]
[191.80007935 185.59077454]
[202.14038086 196.45715332]
[217.73513794 195.30049133]
[230.39462280 204.48043823]
[234.14141846 219.66252136]
[227.20640564 233.67820740]
[212.86408997 239.90974426]
[197.88647461 235.41476440]
[189.34552002 222.31567383]
[191.27400208 206.79745483]
[180.93370056 195.93107605]
[170.59341431 185.06469727]
[160.25311279 174.19831848]
[149.91281128 163.33193970]
[139.57250977 152.46557617]
[129.23220825 141.59919739]
[114.11636353 148.84407043]
[97.46616364 150.77986145]
[81.09136963 147.19616699]
[73.51988983 160.14501953]
[65.94840240 173.09385681]
[58.37691879 186.04270935]
[50.80543900 198.99156189]
[43.23395538 211.94039917]
[35.66247177 224.88925171]
[28.09098816 237.83808899]
[20.51950455 250.78694153]
[33.55900955 243.37268066]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 32]
[18 31]
[19 30]
[21 29]
[22 28]
[23 27]
[34 188]
[35 187]
[36 186]
[37 185]
[38 184]
[39 183]
[40 182]
[41 181]
[42 180]
[51 76]
[52 75]
[53 74]
[56 72]
[57 71]
[58 70]
[60 69]
[61 68]
[62 67]
[88 118]
[89 117]
[90 116]
[91 109]
[92 108]
[93 107]
[94 105]
[95 104]
[96 103]
[121 154]
[122 153]
[123 152]
[124 151]
[125 150]
[126 146]
[127 145]
[128 144]
[129 143]
[130 142]
[157 177]
[158 176]
[159 175]
[160 174]
[161 173]
[162 172]
[163 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
