%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:12:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUUAUCCGCGGGUCACAUUGCCGUUCGCCUCAGUCUUUGGCCCCUCCCGCCGGGUGAGGUUGGCACCCCGUUUUUCCUGCUCUGAGAGGGACCGGUUGCCACCGCCAUACUUCUGUCGCCCUGUCGUCUGUGUUGUGACUGCUUUGGACGUGGGAGUCACCUGAAAGCCAGGAA\
) } def
/len { sequence length } bind def

/coor [
[49.78958511 140.61894226]
[59.42909241 129.12644958]
[52.47465897 126.31827545]
[39.18325806 133.27087402]
[25.89185905 140.22348022]
[12.60046005 147.17608643]
[-0.69093955 154.12869263]
[-13.98233891 161.08129883]
[-27.27373886 168.03390503]
[-40.50255585 175.10484314]
[-53.66774368 182.29357910]
[-66.83292389 189.48231506]
[-79.99811554 196.67105103]
[-78.74073792 208.67768860]
[-81.61106110 220.36807251]
[-88.24781036 230.36924744]
[-97.84881592 237.51484680]
[-109.26788330 240.98103333]
[-121.15163422 240.38153076]
[-132.09988403 235.81048584]
[-140.83062744 227.82856750]
[-154.36172485 234.30233765]
[-167.89280701 240.77610779]
[-181.42388916 247.24987793]
[-184.34234619 262.37564087]
[-195.47755432 272.76123047]
[-210.41632080 274.57708740]
[-223.40434265 267.33489990]
[-236.93542480 273.80865479]
[-245.75657654 287.63323975]
[-262.12536621 286.63598633]
[-269.20300293 271.84277344]
[-259.70858765 258.47158813]
[-243.40919495 260.27758789]
[-229.87811279 253.80380249]
[-227.36761475 239.14653015]
[-216.58009338 228.65399170]
[-201.50645447 226.50027466]
[-187.89765930 233.71879578]
[-174.36657715 227.24502563]
[-160.83549500 220.77125549]
[-147.30441284 214.29747009]
[-146.75685120 196.22015381]
[-137.08905029 180.83520508]
[-120.88845062 172.42147827]
[-102.57308197 173.37013245]
[-87.18684387 183.50587463]
[-74.02165985 176.31713867]
[-60.85647583 169.12840271]
[-47.69129181 161.93966675]
[-43.31336212 155.95495605]
[-34.22634125 154.74249268]
[-20.93494225 147.78990173]
[-7.64354372 140.83729553]
[5.64785576 133.88468933]
[18.93925476 126.93208313]
[32.23065567 119.97947693]
[45.52205276 113.02687836]
[52.11633301 99.55410767]
[49.45303345 84.79243469]
[46.78973770 70.03076935]
[43.86338043 55.31898880]
[40.67490005 40.66178894]
[37.48642349 26.00458527]
[34.29794312 11.34738159]
[31.10946465 -3.30982137]
[20.68615723 -10.94286346]
[18.34570312 -23.24017715]
[24.80921745 -33.48908997]
[21.88286209 -48.20087051]
[18.95650673 -62.91265106]
[9.54504967 -68.44626617]
[4.84588099 -78.05663300]
[6.20139122 -88.44631958]
[12.92100525 -96.19671631]
[10.52161312 -111.00357056]
[8.12222004 -125.81042480]
[5.72282791 -140.61727905]
[3.32343554 -155.42413330]
[-10.58762741 -162.29885864]
[-17.77122116 -176.05297852]
[-15.46510983 -191.39773560]
[-4.55603743 -202.43275452]
[10.76123333 -204.91485596]
[24.59689903 -197.88961792]
[31.63086510 -184.05839539]
[29.15842819 -168.73956299]
[18.13028908 -157.82351685]
[20.52968216 -143.01666260]
[22.92907333 -128.20982361]
[25.32846642 -113.40296173]
[27.72785950 -98.59610748]
[41.02548218 -84.58415222]
[33.66828537 -65.83900452]
[36.59464264 -51.12722397]
[39.52099609 -36.41544724]
[51.78727341 -23.88459587]
[45.76666641 -6.49830055]
[48.95514679 8.15890217]
[52.14362717 22.81610489]
[55.33210373 37.47330856]
[58.52058411 52.13051224]
[62.00963593 55.43468857]
[63.43994904 60.97690201]
[61.55140305 67.36746979]
[64.21469879 82.12914276]
[66.87799835 96.89080811]
[84.37818909 74.04244232]
[110.48131561 74.76622772]
[123.64451599 94.17192841]
[138.60629272 95.24201965]
[153.56808472 96.31210327]
[168.52986145 97.38219452]
[183.49163818 98.45228577]
[198.45343018 99.52236938]
[213.41520691 100.59246063]
[222.23101807 98.07741547]
[228.63372803 101.81752014]
[243.57402039 103.15448761]
[258.52566528 104.35806274]
[273.48742676 105.42815399]
[286.47851562 93.73582458]
[303.57128906 95.01515961]
[314.24813843 107.99026489]
[329.22662354 108.79312897]
[343.42114258 101.80556488]
[355.71603394 110.21298981]
[370.69454956 111.01585388]
[385.67303467 111.81871796]
[395.34768677 99.68689728]
[410.31445312 95.59111786]
[424.81832886 101.10629272]
[433.28228760 114.11171722]
[432.45172119 129.60655212]
[422.64605713 141.63270569]
[407.63574219 145.56588745]
[393.19253540 139.89370728]
[384.87017822 126.79721832]
[369.89169312 125.99435425]
[354.91317749 125.19149017]
[341.79000854 132.23648071]
[328.42376709 123.77162933]
[313.44525146 122.96876526]
[305.14294434 132.84725952]
[292.47525024 136.18023682]
[280.02127075 131.53070068]
[272.41735840 120.38993835]
[257.45556641 119.31984711]
[250.53704834 121.98761749]
[242.23704529 118.09478760]
[227.29675293 116.75781250]
[212.34512329 115.55423737]
[197.38333130 114.48415375]
[182.42155457 113.41406250]
[167.45977783 112.34397888]
[152.49798584 111.27388763]
[137.53620911 110.20380402]
[122.57442474 109.13371277]
[118.33879852 120.25559998]
[108.52429962 129.07185364]
[94.52478790 132.81396484]
[99.26178741 147.04635620]
[103.99877930 161.27873230]
[108.73577118 175.51112366]
[122.38052368 183.94915771]
[124.14763641 199.89459229]
[112.68152618 211.11546326]
[96.77801514 209.00407410]
[88.63691711 195.18009949]
[94.50337982 180.24812317]
[89.76638794 166.01573181]
[85.02939606 151.78334045]
[80.29240417 137.55094910]
[73.33796692 134.74278259]
[72.29456329 149.70645142]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 58]
[4 57]
[5 56]
[6 55]
[7 54]
[8 53]
[9 52]
[10 50]
[11 49]
[12 48]
[13 47]
[21 42]
[22 41]
[23 40]
[24 39]
[28 35]
[29 34]
[59 107]
[60 106]
[61 105]
[62 102]
[63 101]
[64 100]
[65 99]
[66 98]
[69 96]
[70 95]
[71 94]
[75 92]
[76 91]
[77 90]
[78 89]
[79 88]
[110 158]
[111 157]
[112 156]
[113 155]
[114 154]
[115 153]
[116 152]
[118 151]
[119 150]
[120 148]
[121 147]
[124 143]
[125 142]
[127 140]
[128 139]
[129 138]
[161 173]
[162 172]
[163 171]
[164 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
