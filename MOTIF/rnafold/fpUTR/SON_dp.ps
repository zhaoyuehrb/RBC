%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:07:46 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SON)
} def

/sequence { (\
AUGCUGGGAGCCUGGAGGACUAGCGAGGAGGAGUUGAGAGAACGGAGCGGACGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 34 0.005993804 ubox
2 25 0.507800381 ubox
2 33 0.006009815 ubox
2 49 0.039695500 ubox
2 53 0.034054648 ubox
3 11 0.042412992 ubox
3 24 0.824035552 ubox
3 34 0.013866612 ubox
3 48 0.056868262 ubox
3 52 0.047914403 ubox
3 54 0.475853220 ubox
4 10 0.042604826 ubox
4 15 0.027785907 ubox
4 17 0.004407414 ubox
4 23 0.824653475 ubox
4 27 0.014651144 ubox
4 28 0.017759544 ubox
4 30 0.027687849 ubox
4 31 0.016572386 ubox
4 33 0.014612882 ubox
4 38 0.034570062 ubox
4 40 0.005382346 ubox
4 45 0.013897232 ubox
4 47 0.056862659 ubox
4 50 0.059317604 ubox
4 53 0.469295582 ubox
5 9 0.038427939 ubox
5 14 0.027762932 ubox
5 16 0.004344597 ubox
5 22 0.824178830 ubox
5 25 0.011506740 ubox
5 26 0.013716893 ubox
5 27 0.017662513 ubox
5 29 0.027729275 ubox
5 30 0.016493574 ubox
5 32 0.014513733 ubox
5 37 0.034667588 ubox
5 39 0.005336280 ubox
5 44 0.014220944 ubox
5 46 0.055930083 ubox
5 49 0.059280663 ubox
5 53 0.173308706 ubox
6 12 0.010734837 ubox
6 13 0.027732919 ubox
6 21 0.821722726 ubox
6 24 0.017896311 ubox
6 43 0.015136115 ubox
6 48 0.046628208 ubox
6 52 0.457208534 ubox
6 55 0.130317198 ubox
7 11 0.010737286 ubox
7 12 0.027786408 ubox
7 20 0.818137856 ubox
7 21 0.035758167 ubox
7 35 0.033784548 ubox
7 54 0.131784139 ubox
7 55 0.018908203 ubox
8 12 0.004929442 ubox
8 20 0.048817872 ubox
8 34 0.033232959 ubox
8 35 0.003628408 ubox
8 54 0.019016744 ubox
9 21 0.057846675 ubox
9 34 0.003808872 ubox
9 35 0.005268527 ubox
10 20 0.065951402 ubox
10 24 0.043784737 ubox
10 34 0.005421810 ubox
10 48 0.553014839 ubox
10 54 0.005951997 ubox
11 18 0.704138365 ubox
11 23 0.031296221 ubox
11 28 0.022071051 ubox
11 31 0.036183983 ubox
11 33 0.005312535 ubox
11 45 0.037384318 ubox
11 47 0.553211047 ubox
11 50 0.011238352 ubox
11 53 0.005946164 ubox
12 17 0.703747918 ubox
12 18 0.032442504 ubox
12 23 0.039419185 ubox
12 27 0.022123492 ubox
12 30 0.036187670 ubox
12 31 0.003773102 ubox
12 38 0.028045932 ubox
12 40 0.020023358 ubox
12 44 0.037071163 ubox
12 45 0.556061748 ubox
12 47 0.005440408 ubox
12 49 0.010826170 ubox
12 50 0.011797963 ubox
13 17 0.030100906 ubox
13 22 0.050919443 ubox
13 25 0.006267809 ubox
13 26 0.021082151 ubox
13 29 0.035820796 ubox
13 30 0.003700222 ubox
13 37 0.028109278 ubox
13 39 0.020005056 ubox
13 44 0.555754937 ubox
13 46 0.007160806 ubox
13 49 0.011859880 ubox
14 21 0.051618075 ubox
14 24 0.012536676 ubox
14 43 0.555698307 ubox
14 48 0.012597124 ubox
15 20 0.051508885 ubox
15 35 0.027818999 ubox
16 34 0.027613085 ubox
17 34 0.003321124 ubox
17 35 0.003348981 ubox
17 55 0.007651859 ubox
18 35 0.061217809 ubox
18 54 0.007690778 ubox
19 34 0.061820149 ubox
20 27 0.009578828 ubox
20 28 0.007055232 ubox
20 30 0.025697722 ubox
20 31 0.009840800 ubox
20 33 0.061873261 ubox
20 38 0.264046001 ubox
20 40 0.154598816 ubox
20 50 0.003167067 ubox
21 26 0.009164110 ubox
21 27 0.006947598 ubox
21 29 0.025239151 ubox
21 30 0.009972408 ubox
21 32 0.060240403 ubox
21 36 0.448629524 ubox
21 37 0.218159731 ubox
21 39 0.154145662 ubox
22 35 0.512649272 ubox
23 34 0.532015193 ubox
23 48 0.007721563 ubox
23 54 0.036491231 ubox
24 33 0.532743039 ubox
24 36 0.155582851 ubox
24 47 0.007743551 ubox
24 49 0.009689521 ubox
24 53 0.037213412 ubox
25 35 0.155620613 ubox
25 43 0.007058143 ubox
25 48 0.025971493 ubox
25 52 0.044943791 ubox
26 34 0.154000680 ubox
26 35 0.035882172 ubox
27 34 0.036871865 ubox
27 35 0.008224263 ubox
27 55 0.257734388 ubox
28 34 0.008958029 ubox
28 35 0.035329689 ubox
28 54 0.259731936 ubox
29 34 0.036136873 ubox
29 35 0.012747879 ubox
30 34 0.009372854 ubox
30 55 0.541428171 ubox
31 54 0.545154317 ubox
33 43 0.400222203 ubox
33 48 0.279998485 ubox
33 52 0.548958379 ubox
33 54 0.014524015 ubox
34 40 0.008511538 ubox
34 41 0.035132473 ubox
34 42 0.400408433 ubox
34 45 0.059757096 ubox
34 46 0.025847423 ubox
34 47 0.278920447 ubox
34 50 0.079115122 ubox
34 51 0.545851949 ubox
34 53 0.013069785 ubox
35 39 0.008423598 ubox
35 40 0.040286827 ubox
35 41 0.397317134 ubox
35 44 0.088281370 ubox
35 45 0.027392083 ubox
35 46 0.270345880 ubox
35 49 0.137003330 ubox
35 50 0.527723388 ubox
35 53 0.009302726 ubox
36 43 0.107407252 ubox
36 48 0.176280008 ubox
36 52 0.011901533 ubox
43 49 0.106028436 ubox
43 53 0.179564475 ubox
44 48 0.100161732 ubox
44 52 0.188580440 ubox
44 55 0.177428118 ubox
45 54 0.177328001 ubox
47 54 0.369715349 ubox
48 53 0.370642860 ubox
49 55 0.080586572 ubox
50 54 0.079893020 ubox
3 24 0.9500000 lbox
4 23 0.9500000 lbox
5 22 0.9500000 lbox
6 21 0.9500000 lbox
7 20 0.9500000 lbox
11 18 0.9500000 lbox
12 17 0.9500000 lbox
30 55 0.9500000 lbox
31 54 0.9500000 lbox
33 52 0.9500000 lbox
34 51 0.9500000 lbox
35 50 0.9500000 lbox
showpage
end
%%EOF
