%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:07:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUACCAAAGAUACAUCCCCAGGCGGCACCAUUCACUUCACAUGAAAGCCGCUGCUCUUGGUUCCUGAGAUGAUCUCAUCUGAACAUGGCUCCAGCGACCUCAGCCACAGGAACUAGAGACAGCUUGCUUUCUGUCGUGGCAAUGUUUUGAAACUGGCAAAAUCAGAUUUUAUC\
) } def
/len { sequence length } bind def

/coor [
[131.19877625 703.48059082]
[116.20023346 703.27166748]
[102.35213470 697.50708008]
[91.63561249 687.01159668]
[85.58377838 673.28662109]
[85.06241608 658.29565430]
[90.14611816 644.18341064]
[100.10759735 632.96868896]
[113.52175140 626.25604248]
[128.46954346 625.00561523]
[142.81253052 629.39642334]
[154.49990845 638.80157471]
[149.96780396 624.50262451]
[145.43569946 610.20367432]
[140.90359497 595.90472412]
[127.60451508 589.29638672]
[122.80461884 574.85980225]
[129.82623291 560.95532227]
[125.29412842 546.65637207]
[121.51213074 543.68865967]
[119.57458496 538.29974365]
[120.86661530 531.75872803]
[116.85369110 517.30548096]
[112.84076691 502.85220337]
[108.82784271 488.39895630]
[104.81491852 473.94570923]
[100.80199432 459.49246216]
[96.68237305 473.91567993]
[87.70104980 485.92965698]
[75.03319550 493.96243286]
[60.33636475 496.96295166]
[45.53357697 494.53860474]
[32.56172562 487.00659180]
[23.11813164 475.35247803]
[18.43845367 461.10113525]
[19.13500977 446.11734009]
[25.11666298 432.36160278]
[35.60073090 421.63388062]
[49.21541214 415.33779907]
[64.17927551 414.29724121]
[78.53435516 418.64828491]
[90.40232849 427.82168579]
[98.23023987 440.61685181]
[98.23023987 425.61685181]
[98.23023987 410.61685181]
[98.23023987 395.61685181]
[98.23023987 380.61685181]
[98.23023987 365.61685181]
[88.64394379 350.93511963]
[97.93781281 335.05694580]
[97.66699982 320.05938721]
[97.39618683 305.06182861]
[97.12537384 290.06427002]
[96.71918488 275.06979370]
[96.17765045 260.07955933]
[95.63610840 245.08934021]
[95.09457397 230.09912109]
[91.69900513 223.50531006]
[94.68105316 214.83389282]
[94.41024017 199.83633423]
[94.13942719 184.83877563]
[93.86861420 169.84123230]
[93.59780121 154.84367371]
[93.32698822 139.84611511]
[93.05617523 124.84856415]
[92.78536224 109.85100555]
[89.03403473 95.32765961]
[82.00791168 82.07498169]
[74.98178101 68.82230377]
[67.95565796 55.56961823]
[60.92952728 42.31694031]
[46.75301743 34.07324219]
[47.07458115 17.67724800]
[61.56342697 9.99574947]
[75.31466675 18.93081284]
[74.18220520 35.29081345]
[81.20833588 48.54349518]
[88.23445892 61.79617310]
[95.26058960 75.04885101]
[102.28671265 88.30153656]
[109.76197052 87.69284821]
[103.98423767 73.85024261]
[115.36392975 64.07769775]
[128.17466736 71.88057709]
[124.71249390 86.47546387]
[132.18774414 85.86677551]
[136.97727966 71.65197754]
[141.76679993 57.43717957]
[146.55632019 43.22238159]
[151.34584045 29.00758362]
[140.72801208 17.98395729]
[136.46046448 3.28543186]
[139.52384949 -11.71037674]
[149.21421814 -23.55754280]
[163.30479431 -29.53367424]
[178.55767822 -28.26549911]
[191.46784973 -20.04443359]
[199.06866455 -6.75962257]
[199.61351013 8.53618526]
[192.97717285 22.32812500]
[180.68463135 31.44690704]
[165.56063843 33.79710770]
[160.77111816 48.01190567]
[155.98159790 62.22669983]
[151.19207764 76.44149780]
[146.40254211 90.65629578]
[107.78292084 109.58019257]
[108.05373383 124.57775116]
[108.32454681 139.57530212]
[108.59535980 154.57286072]
[108.86616516 169.57041931]
[109.13697815 184.56796265]
[109.40779114 199.56552124]
[109.67860413 214.56307983]
[110.08479309 229.55758667]
[110.62633514 244.54780579]
[111.16786957 259.53802490]
[111.70940399 274.52822876]
[115.15653992 283.02551270]
[112.12293243 289.79345703]
[112.39373779 304.79101562]
[112.66455078 319.78857422]
[112.93536377 334.78613281]
[121.67198181 344.30548096]
[121.56970215 356.82455444]
[113.23023987 365.61685181]
[113.23023987 380.61685181]
[113.23023987 395.61685181]
[113.23023987 410.61685181]
[113.23023987 425.61685181]
[113.23023987 440.61685181]
[115.25524139 455.47955322]
[119.26816559 469.93280029]
[123.28108978 484.38604736]
[127.29401398 498.83929443]
[131.30694580 513.29254150]
[135.31987000 527.74578857]
[139.59307861 542.12420654]
[144.12518311 556.42321777]
[157.87432861 563.74432373]
[162.26684570 578.31005859]
[155.20254517 591.37261963]
[159.73464966 605.67156982]
[164.26675415 619.97052002]
[168.79885864 634.26947021]
[175.10935974 639.03887939]
[177.70855713 645.66448975]
[176.56758118 651.88928223]
[184.06758118 664.87963867]
[191.56758118 677.87005615]
[199.06758118 690.86041260]
[206.56758118 703.85076904]
[214.18453979 716.77294922]
[221.91784668 729.62579346]
[229.65116882 742.47863770]
[237.38447571 755.33154297]
[252.54364014 760.58312988]
[257.75329590 775.75671387]
[249.01705933 789.21246338]
[233.03659058 790.62829590]
[222.07077026 778.91802979]
[224.53161621 763.06481934]
[216.79830933 750.21197510]
[209.06500244 737.35913086]
[201.33169556 724.50622559]
[195.16760254 720.38165283]
[193.57719421 711.35076904]
[186.07719421 698.36041260]
[178.57719421 685.37005615]
[171.07719421 672.37963867]
[163.57719421 659.38928223]
[162.63850403 674.35986328]
[156.20675659 687.91094971]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 145]
[13 144]
[14 143]
[15 142]
[18 139]
[19 138]
[22 137]
[23 136]
[24 135]
[25 134]
[26 133]
[27 132]
[43 131]
[44 130]
[45 129]
[46 128]
[47 127]
[48 126]
[50 123]
[51 122]
[52 121]
[53 120]
[54 118]
[55 117]
[56 116]
[57 115]
[59 114]
[60 113]
[61 112]
[62 111]
[63 110]
[64 109]
[65 108]
[66 107]
[67 80]
[68 79]
[69 78]
[70 77]
[71 76]
[86 106]
[87 105]
[88 104]
[89 103]
[90 102]
[148 171]
[149 170]
[150 169]
[151 168]
[152 167]
[153 165]
[154 164]
[155 163]
[156 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
