%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:14:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCGAGCGGUGUCAGCGGCGGAGCCGGAUGCGGGCGGCAUCGCGGCGGUCGCGGCCUUGGGGAUGGGCGGAGCCCCAGCCGCUAGUGCUGGUGGCCGCCGCUGCUGCCCCAGCUGGAGCCCGAGCCGCCGCCUCUGCGUCCGCGCGUCGCUGCUUCCCAGGGCGGCGGU\
) } def
/len { sequence length } bind def

/coor [
[272.31106567 417.60571289]
[264.93069458 404.54699707]
[257.55035400 391.48828125]
[250.16999817 378.42953491]
[242.78962708 365.37081909]
[235.28962708 352.38043213]
[227.67062378 339.45950317]
[214.54112244 332.42630005]
[214.19642639 316.60885620]
[206.57742310 303.68792725]
[198.95840454 290.76699829]
[191.33940125 277.84603882]
[187.99574280 276.61843872]
[185.09164429 273.68881226]
[183.43028259 269.28692627]
[183.67921448 263.99673462]
[176.78355408 250.67568970]
[169.88790894 237.35466003]
[162.99224854 224.03361511]
[156.09658813 210.71258545]
[148.83650208 197.58660889]
[141.21748352 184.66567993]
[126.77632904 181.20324707]
[118.86550140 168.20811462]
[122.59513855 153.08436584]
[114.97612762 140.16342163]
[107.35711670 127.24249268]
[99.73810577 114.32154846]
[87.66141510 107.27561951]
[87.34095764 93.29746246]
[79.72194672 80.37651825]
[72.63983917 74.54601288]
[72.08415985 67.14748383]
[64.70380402 54.08876038]
[57.32344818 41.03003311]
[49.94308853 27.97130585]
[42.56273270 14.91257954]
[35.18237686 1.85385251]
[27.80202103 -11.20487404]
[20.42166519 -24.26360130]
[14.87877274 -27.97918892]
[12.43931770 -33.16508102]
[13.02014732 -37.94040680]
[6.12449169 -51.26144028]
[-0.77116436 -64.58247375]
[-7.66682005 -77.90351105]
[-14.56247616 -91.22454071]
[-21.45813179 -104.54557800]
[-28.35378838 -117.86660767]
[-35.24944305 -131.18763733]
[-42.14509964 -144.50866699]
[-49.04075623 -157.82971191]
[-55.93641281 -171.15074158]
[-62.95413971 -184.40786743]
[-70.09335327 -197.59997559]
[-77.23255920 -210.79208374]
[-90.60546875 -219.24642944]
[-89.85823059 -234.12226868]
[-96.99744415 -247.31437683]
[-104.13665009 -260.50650024]
[-111.27586365 -273.69857788]
[-118.53594971 -286.82455444]
[-125.91630554 -299.88330078]
[-139.44227600 -308.09054565]
[-138.96844482 -322.97760010]
[-146.34880066 -336.03631592]
[-153.72915649 -349.09506226]
[-161.10951233 -362.15377808]
[-176.40223694 -366.14227295]
[-184.32336426 -379.81820679]
[-180.17340088 -395.06790161]
[-166.41447449 -402.84399414]
[-151.20950317 -398.53305054]
[-143.57933044 -384.69268799]
[-148.05078125 -369.53414917]
[-140.67042542 -356.47540283]
[-133.29006958 -343.41668701]
[-125.90971375 -330.35794067]
[-112.91164398 -323.08474731]
[-112.85758209 -307.26364136]
[-105.47722626 -294.20492554]
[-99.42559052 -289.91253662]
[-98.08375549 -280.83779907]
[-90.94454956 -267.64569092]
[-83.80533600 -254.45359802]
[-76.66612244 -241.26148987]
[-63.80385971 -233.75073242]
[-64.04045868 -217.93128967]
[-56.90124512 -204.73918152]
[-49.76203537 -191.54708862]
[-43.79027176 -187.14424133]
[-42.61537933 -178.04640198]
[-35.71972275 -164.72535706]
[-28.82406616 -151.40432739]
[-21.92840958 -138.08329773]
[-15.03275394 -124.76226044]
[-8.13709831 -111.44123077]
[-1.24144268 -98.12019348]
[5.65421295 -84.79916382]
[12.54986858 -71.47812653]
[19.44552422 -58.15709686]
[26.34118080 -44.83606339]
[33.48039246 -31.64395714]
[40.86074829 -18.58522987]
[48.24110413 -5.52650404]
[55.62145996 7.53222275]
[63.00181580 20.59095001]
[70.38217163 33.64967728]
[77.76252747 46.70840073]
[85.14288330 59.76712799]
[92.64288330 72.75750732]
[100.26189423 85.67845154]
[112.33858490 92.72438049]
[112.65904236 106.70253754]
[120.27805328 119.62348175]
[127.89706421 132.54441833]
[135.51606750 145.46536255]
[150.55549622 149.52166748]
[158.09819031 162.73387146]
[154.13842773 177.04666138]
[161.75744629 189.96760559]
[166.37094116 192.56835938]
[169.21669006 196.31515503]
[170.15481567 200.33216858]
[169.41761780 203.81692505]
[176.31327820 217.13796997]
[183.20893860 230.45899963]
[190.10459900 243.78002930]
[197.00024414 257.10107422]
[204.26034546 270.22702026]
[211.87934875 283.14797974]
[219.49836731 296.06890869]
[227.11737061 308.98983765]
[240.79182434 316.94723511]
[240.59156799 331.84048462]
[248.21057129 344.76141357]
[255.29267883 350.59194946]
[255.84835815 357.99044800]
[263.22872925 371.04919434]
[270.60906982 384.10791016]
[277.98944092 397.16662598]
[285.36978149 410.22537231]
[296.10296631 410.43206787]
[305.70007324 415.05886841]
[312.44329834 423.20269775]
[315.15701294 433.33795166]
[313.41238403 443.60202026]
[307.59353638 452.13763428]
[314.24331665 465.58309937]
[320.89309692 479.02856445]
[327.54284668 492.47402954]
[334.19262695 505.91949463]
[340.84240723 519.36492920]
[347.49218750 532.81042480]
[354.14193726 546.25585938]
[360.79171753 559.70135498]
[374.73022461 568.34136963]
[373.94662476 584.72180176]
[359.24700928 591.99182129]
[345.75311279 582.67272949]
[347.34625244 566.35113525]
[340.69647217 552.90563965]
[334.04672241 539.46020508]
[327.39694214 526.01470947]
[320.74716187 512.56927490]
[314.09738159 499.12380981]
[307.44763184 485.67834473]
[300.79785156 472.23287964]
[294.14807129 458.78741455]
[275.30599976 453.96688843]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 142]
[2 141]
[3 140]
[4 139]
[5 138]
[6 136]
[7 135]
[9 133]
[10 132]
[11 131]
[12 130]
[16 129]
[17 128]
[18 127]
[19 126]
[20 125]
[21 121]
[22 120]
[25 117]
[26 116]
[27 115]
[28 114]
[30 112]
[31 111]
[33 110]
[34 109]
[35 108]
[36 107]
[37 106]
[38 105]
[39 104]
[40 103]
[43 102]
[44 101]
[45 100]
[46 99]
[47 98]
[48 97]
[49 96]
[50 95]
[51 94]
[52 93]
[53 92]
[54 90]
[55 89]
[56 88]
[58 86]
[59 85]
[60 84]
[61 83]
[62 81]
[63 80]
[65 78]
[66 77]
[67 76]
[68 75]
[148 169]
[149 168]
[150 167]
[151 166]
[152 165]
[153 164]
[154 163]
[155 162]
[156 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
