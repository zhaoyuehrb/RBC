%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:55:57 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PLA2G4D)
} def

/sequence { (\
GCUGGUCCUAUCCCACUGGGACCGUCGCUGCCACUCAGCCAGAGAGCCAGCAUCUUGGCAAGGGCUGGGCCUGGAGUGAAGCUGGAAGGGCUAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 25 0.034030170 ubox
1 28 0.005224307 ubox
1 82 0.009897853 ubox
1 91 0.008073345 ubox
1 95 0.946321690 ubox
2 24 0.054366577 ubox
2 27 0.005235125 ubox
2 81 0.010192246 ubox
2 90 0.008075343 ubox
2 94 0.957571446 ubox
3 24 0.217522806 ubox
3 80 0.009689660 ubox
3 89 0.006895023 ubox
3 93 0.956232352 ubox
4 23 0.304333714 ubox
4 92 0.952050620 ubox
5 22 0.304501379 ubox
5 91 0.952495523 ubox
6 21 0.304462619 ubox
6 90 0.951432711 ubox
7 20 0.304493341 ubox
7 89 0.951710856 ubox
7 90 0.037839762 ubox
8 19 0.304479051 ubox
8 88 0.951591665 ubox
8 89 0.038054871 ubox
9 18 0.303906123 ubox
9 84 0.005649747 ubox
9 87 0.923616510 ubox
9 88 0.037376093 ubox
10 17 0.281354607 ubox
10 25 0.003212238 ubox
10 83 0.008991117 ubox
11 20 0.031130311 ubox
11 21 0.738093438 ubox
11 85 0.034123976 ubox
11 86 0.461747476 ubox
12 18 0.004024789 ubox
12 19 0.048422680 ubox
12 20 0.808185050 ubox
12 84 0.029746487 ubox
12 85 0.461153352 ubox
13 18 0.048480640 ubox
13 19 0.808520991 ubox
13 20 0.065836857 ubox
13 84 0.456241822 ubox
13 85 0.181532417 ubox
14 18 0.802684513 ubox
14 19 0.068350243 ubox
14 78 0.011441849 ubox
14 84 0.191395633 ubox
15 25 0.009267687 ubox
15 77 0.011428245 ubox
15 83 0.184783883 ubox
16 24 0.014175603 ubox
16 76 0.011320057 ubox
16 81 0.305170154 ubox
16 85 0.028996680 ubox
17 24 0.026234322 ubox
17 73 0.003372914 ubox
17 75 0.010697718 ubox
17 80 0.302946459 ubox
17 84 0.031788892 ubox
18 23 0.050062120 ubox
18 26 0.005843776 ubox
18 29 0.004535421 ubox
18 72 0.008963084 ubox
18 83 0.244599301 ubox
19 25 0.006568145 ubox
19 26 0.004503671 ubox
19 28 0.004749792 ubox
19 71 0.009382363 ubox
19 82 0.251335570 ubox
19 83 0.262576931 ubox
20 25 0.003878473 ubox
20 26 0.005615394 ubox
20 70 0.009285294 ubox
20 82 0.270085911 ubox
21 25 0.005114353 ubox
21 77 0.004330905 ubox
22 68 0.006835732 ubox
22 69 0.005506709 ubox
22 76 0.004302474 ubox
22 85 0.762842885 ubox
23 67 0.006886468 ubox
23 68 0.005471119 ubox
23 78 0.003628870 ubox
23 84 0.765959180 ubox
24 65 0.005912748 ubox
24 66 0.003918310 ubox
24 82 0.239574674 ubox
24 83 0.707259378 ubox
25 64 0.005918132 ubox
25 75 0.004515488 ubox
25 79 0.965173549 ubox
25 81 0.174440906 ubox
25 85 0.006991268 ubox
25 86 0.004934242 ubox
26 63 0.005920081 ubox
26 74 0.004671773 ubox
26 78 0.997379147 ubox
26 84 0.008866129 ubox
26 85 0.005160047 ubox
27 77 0.998164280 ubox
27 82 0.049539122 ubox
27 95 0.004184409 ubox
28 76 0.998564106 ubox
28 81 0.049677542 ubox
28 94 0.004215298 ubox
29 60 0.005622148 ubox
29 75 0.994743539 ubox
29 80 0.049207643 ubox
29 93 0.004124301 ubox
30 59 0.005782164 ubox
30 65 0.006245987 ubox
30 70 0.018544433 ubox
30 91 0.004110819 ubox
31 58 0.005782391 ubox
31 64 0.006253224 ubox
31 69 0.018494456 ubox
31 74 0.995798853 ubox
31 85 0.004356310 ubox
31 90 0.004180695 ubox
32 57 0.005781410 ubox
32 63 0.006247370 ubox
32 68 0.018223973 ubox
32 73 0.996761532 ubox
32 78 0.048433175 ubox
32 84 0.004371985 ubox
32 89 0.004125274 ubox
33 56 0.005558731 ubox
33 72 0.923425018 ubox
33 77 0.048581919 ubox
33 83 0.004338748 ubox
34 44 0.003851308 ubox
34 62 0.005892123 ubox
34 68 0.024561165 ubox
34 69 0.990274703 ubox
34 76 0.048560590 ubox
34 81 0.003892955 ubox
35 43 0.003870512 ubox
35 61 0.005723386 ubox
35 67 0.003826063 ubox
35 68 0.997108003 ubox
35 69 0.008243854 ubox
35 74 0.008206121 ubox
35 75 0.047617992 ubox
35 79 0.003996196 ubox
36 42 0.003874809 ubox
36 67 0.998650564 ubox
36 68 0.006657712 ubox
36 73 0.018905016 ubox
36 74 0.036956793 ubox
36 78 0.004837625 ubox
37 66 0.998515607 ubox
37 72 0.025332730 ubox
37 77 0.004811143 ubox
37 83 0.003212710 ubox
38 51 0.003222686 ubox
38 59 0.009922288 ubox
38 65 0.998753814 ubox
38 70 0.022994061 ubox
38 71 0.022543215 ubox
38 82 0.003225189 ubox
39 50 0.003221903 ubox
39 58 0.009938921 ubox
39 63 0.017331527 ubox
39 64 0.998607948 ubox
39 68 0.028483615 ubox
39 69 0.022344081 ubox
39 74 0.025425682 ubox
40 57 0.009931062 ubox
40 62 0.024457761 ubox
40 63 0.997996708 ubox
40 67 0.031553285 ubox
40 68 0.017561270 ubox
40 73 0.031041497 ubox
41 55 0.003345314 ubox
41 56 0.008318374 ubox
41 66 0.034252413 ubox
41 72 0.030827793 ubox
42 54 0.004011637 ubox
42 55 0.004962205 ubox
42 56 0.007143883 ubox
42 65 0.034429984 ubox
42 71 0.030561623 ubox
43 53 0.003973533 ubox
43 55 0.009982302 ubox
43 66 0.003452571 ubox
43 72 0.005244057 ubox
44 54 0.011198280 ubox
44 56 0.003639241 ubox
44 65 0.003396302 ubox
44 71 0.006673516 ubox
45 53 0.011104650 ubox
45 55 0.003684305 ubox
45 66 0.008127633 ubox
46 54 0.003660004 ubox
46 59 0.997887197 ubox
46 65 0.009301346 ubox
46 70 0.015676454 ubox
47 58 0.999331489 ubox
47 64 0.009325550 ubox
47 68 0.029008607 ubox
47 69 0.012912215 ubox
48 57 0.999311777 ubox
48 63 0.009310376 ubox
48 67 0.030518634 ubox
48 68 0.009336173 ubox
49 55 0.111241139 ubox
49 56 0.961946965 ubox
49 66 0.031788418 ubox
50 54 0.154289692 ubox
50 55 0.703289415 ubox
50 59 0.009842672 ubox
50 65 0.031904105 ubox
51 58 0.009827311 ubox
51 64 0.031827636 ubox
52 56 0.003221392 ubox
53 63 0.027171652 ubox
54 62 0.030151286 ubox
54 63 0.009596046 ubox
55 61 0.029717403 ubox
55 62 0.009673222 ubox
56 60 0.024743153 ubox
56 61 0.009714848 ubox
61 72 0.004001965 ubox
62 71 0.004142593 ubox
62 72 0.006450899 ubox
63 70 0.004111129 ubox
63 71 0.007057173 ubox
64 70 0.007079801 ubox
65 69 0.007045798 ubox
75 83 0.004406274 ubox
76 82 0.004527947 ubox
77 81 0.004237226 ubox
80 92 0.156697937 ubox
81 91 0.162459272 ubox
81 95 0.254763404 ubox
82 88 0.003246784 ubox
82 89 0.008253659 ubox
82 90 0.162332399 ubox
82 94 0.256969040 ubox
83 87 0.003542485 ubox
83 88 0.010553918 ubox
83 89 0.160805022 ubox
83 93 0.256914482 ubox
84 92 0.256874517 ubox
85 91 0.256288620 ubox
1 95 0.9500000 lbox
2 94 0.9500000 lbox
3 93 0.9500000 lbox
4 92 0.9500000 lbox
5 91 0.9500000 lbox
6 90 0.9500000 lbox
7 89 0.9500000 lbox
8 88 0.9500000 lbox
9 87 0.9500000 lbox
11 21 0.9500000 lbox
12 20 0.9500000 lbox
13 19 0.9500000 lbox
14 18 0.9500000 lbox
22 85 0.9500000 lbox
23 84 0.9500000 lbox
24 83 0.9500000 lbox
25 79 0.9500000 lbox
26 78 0.9500000 lbox
27 77 0.9500000 lbox
28 76 0.9500000 lbox
29 75 0.9500000 lbox
31 74 0.9500000 lbox
32 73 0.9500000 lbox
33 72 0.9500000 lbox
34 69 0.9500000 lbox
35 68 0.9500000 lbox
36 67 0.9500000 lbox
37 66 0.9500000 lbox
38 65 0.9500000 lbox
39 64 0.9500000 lbox
40 63 0.9500000 lbox
46 59 0.9500000 lbox
47 58 0.9500000 lbox
48 57 0.9500000 lbox
49 56 0.9500000 lbox
50 55 0.9500000 lbox
showpage
end
%%EOF
