%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:10:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUGGACACUGGGAGAAGGAAGUGAGAUGGAAAAGUUCUUUGAUUGCAUCCAAGAAGUGAAUGGUCCUCAAGGGCGACCAUUGGCUGGGUAGUGGAGUGUUGACCAAUCACAGCUCAGGGGCGUGAUUGUCUCGUCCUGGGAUCGCGAGAGGGGUAUAUACAGGGAGGCCAGGCAGCCUGGAGUUAGCCGACCGUUGCGAGACGUUGAGCUGCGGAAG\
) } def
/len { sequence length } bind def

/coor [
[290.48458862 120.01136780]
[281.81399536 112.60841370]
[276.50561523 102.46070099]
[261.51171875 102.88903809]
[249.01058960 110.98662567]
[234.99510193 103.64656067]
[220.00122070 104.07489777]
[205.00732422 104.50324249]
[190.01344299 104.93157959]
[175.01956177 105.35992432]
[160.02568054 105.78826141]
[155.73875427 123.01689911]
[146.62063599 138.25053406]
[133.46163940 150.16877747]
[117.40232849 157.73860168]
[99.83465576 160.30389404]
[82.28131866 157.64230347]
[66.26376343 149.98452759]
[53.17031860 137.99430847]
[40.43700027 145.92289734]
[27.70368385 153.85150146]
[20.07861328 167.71400452]
[5.18485928 167.87318420]
[-7.54845810 175.80178833]
[-20.28177643 183.73037720]
[-33.01509476 191.65898132]
[-33.99365616 208.54820251]
[-44.74137115 221.39703369]
[-60.86867523 225.26669312]
[-75.97068787 218.82412720]
[-88.58949280 226.93374634]
[-101.20829773 235.04335022]
[-113.82709503 243.15296936]
[-123.88292694 256.80276489]
[-139.78300476 250.91854858]
[-138.53033447 234.01094055]
[-121.93670654 230.53416443]
[-109.31790924 222.42454529]
[-96.69910431 214.31494141]
[-84.08029938 206.20532227]
[-84.55883789 192.86685181]
[-78.33560944 180.93722534]
[-66.94057465 173.58047485]
[-53.29074478 172.80706787]
[-40.94368744 178.92565918]
[-28.21037102 170.99707031]
[-15.47705364 163.06846619]
[-2.74373603 155.13987732]
[3.97056198 141.84448242]
[19.77508926 141.11817932]
[32.50840759 133.18959045]
[45.24172211 125.26099396]
[41.93918610 116.29503632]
[40.09424210 106.92000580]
[39.75320435 97.37125397]
[40.92464447 87.88848877]
[43.57914352 78.70977783]
[30.31264877 71.70977020]
[17.04615402 64.70976257]
[1.23008275 65.11279297]
[-6.41559029 52.33026886]
[-19.68208504 45.33026123]
[-32.94857788 38.33024979]
[-46.21507263 31.33024025]
[-59.48156738 24.33023071]
[-72.74806213 17.33022118]
[-86.01455688 10.33021164]
[-99.33068848 3.42510152]
[-112.69578552 -3.38475585]
[-129.03523254 -1.98661470]
[-138.19255066 -15.59085655]
[-130.74749756 -30.20260429]
[-114.35889435 -30.79054451]
[-105.88593292 -16.74985313]
[-92.52082825 -9.93999672]
[-85.13895416 -9.70422935]
[-79.01454163 -2.93628263]
[-65.74804688 4.06372690]
[-52.48155594 11.06373692]
[-39.21506119 18.06374741]
[-25.94856834 25.06375694]
[-12.68207455 32.06376648]
[0.58441943 39.06377792]
[15.45158291 38.16005325]
[24.04616547 51.44326782]
[37.31266022 58.44327927]
[50.57915115 65.44329071]
[60.11086273 54.77342224]
[71.88789368 46.64931107]
[85.24732208 41.52825546]
[99.43716431 39.69850922]
[113.65868378 41.26307297]
[127.11138153 46.13387299]
[139.03799438 54.03673935]
[148.76721191 64.52683258]
[155.75137329 77.01366425]
[159.59733582 90.79438019]
[174.59121704 90.36604309]
[189.58511353 89.93769836]
[204.57899475 89.50936127]
[219.57287598 89.08101654]
[234.56675720 88.65267944]
[248.14035034 80.52445221]
[261.08337402 87.89515686]
[276.07727051 87.46681976]
[286.20791626 71.21953583]
[303.94674683 64.42208862]
[322.05187988 69.65540314]
[333.24838257 84.62798309]
[348.21017456 83.55789185]
[361.42321777 74.85581207]
[374.67004395 81.66544342]
[389.63180542 80.59535980]
[404.59359741 79.52526855]
[419.55538940 78.45518494]
[434.51715088 77.38509369]
[449.47894287 76.31501007]
[464.44073486 75.24491882]
[477.23031616 67.40744019]
[484.97628784 54.56220627]
[492.72225952 41.71697235]
[500.46820068 28.87173462]
[508.21417236 16.02650070]
[515.96014404 3.18126464]
[516.46069336 -12.63202190]
[529.65881348 -19.53548622]
[537.40478516 -32.38072205]
[540.40631104 -49.06686020]
[557.27124023 -50.80183411]
[563.60711670 -35.07627106]
[550.25006104 -24.63475990]
[542.50408936 -11.78952503]
[542.55755615 3.10498452]
[528.80535889 10.92722607]
[521.05938721 23.77246284]
[513.31341553 36.61769867]
[505.56747437 49.46293259]
[497.82153320 62.30816650]
[490.07556152 75.15340424]
[493.04434204 82.04080963]
[506.81924438 76.10348511]
[512.75634766 89.87849426]
[498.98190308 95.81562042]
[501.95065308 102.70302582]
[516.60784912 105.89151001]
[531.26507568 109.07998657]
[545.92230225 112.26846313]
[560.57946777 115.45694733]
[575.23669434 118.64542389]
[588.40905762 106.17765045]
[606.27258301 104.13588715]
[621.64703369 113.15063477]
[628.46673584 129.44625854]
[643.20904541 132.21488953]
[658.20019531 127.15769958]
[669.28070068 137.11120605]
[684.02294922 139.87982178]
[694.06182861 128.33996582]
[708.43408203 123.40692902]
[723.24737549 126.31082916]
[734.54266357 136.17350769]
[739.35229492 150.27078247]
[754.09460449 153.03941345]
[768.83685303 155.80802917]
[783.57916260 158.57666016]
[793.74487305 149.74687195]
[806.94696045 148.40161133]
[818.34545898 154.80897522]
[823.89074707 166.43565369]
[838.59204102 169.41450500]
[855.31640625 166.63409424]
[862.61791992 181.93521118]
[849.93609619 193.18716431]
[835.61315918 184.11575317]
[820.91192627 181.13688660]
[807.30145264 191.02096558]
[790.42175293 187.93927002]
[780.81048584 173.31893921]
[766.06823730 170.55030823]
[751.32598877 167.78167725]
[736.58367920 165.01306152]
[726.98718262 176.40483093]
[712.88323975 181.49749756]
[698.02569580 178.82914734]
[686.42248535 169.01785278]
[681.25433350 154.62210083]
[666.51208496 151.85346985]
[652.57537842 157.10870361]
[640.44042969 146.95716858]
[625.69812012 144.18853760]
[618.21105957 153.73513794]
[607.31219482 159.22737122]
[595.04028320 159.56922913]
[583.72033691 154.63459778]
[575.52288818 145.30281067]
[572.04821777 133.30262756]
[557.39099121 130.11415100]
[542.73382568 126.92566681]
[528.07659912 123.73719025]
[513.41937256 120.54871368]
[498.76217651 117.36022949]
[489.15762329 116.76226807]
[480.67724609 113.82570648]
[473.83892822 109.06845093]
[468.97579956 103.10885620]
[466.22113037 96.60721588]
[465.51080322 90.20670319]
[450.54904175 91.27678680]
[435.58724976 92.34687805]
[420.62545776 93.41696167]
[405.66369629 94.48705292]
[390.70190430 95.55714417]
[375.74011230 96.62722778]
[363.59725952 105.25276947]
[349.28027344 98.51967621]
[334.31848145 99.58975983]
[330.32159424 109.99295807]
[322.69869995 118.19287109]
[312.52145386 122.98054504]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 105]
[4 104]
[6 102]
[7 101]
[8 100]
[9 99]
[10 98]
[11 97]
[19 52]
[20 51]
[21 50]
[23 48]
[24 47]
[25 46]
[26 45]
[30 40]
[31 39]
[32 38]
[33 37]
[57 87]
[58 86]
[59 85]
[61 83]
[62 82]
[63 81]
[64 80]
[65 79]
[66 78]
[67 77]
[68 75]
[69 74]
[109 216]
[110 215]
[112 213]
[113 212]
[114 211]
[115 210]
[116 209]
[117 208]
[118 207]
[119 139]
[120 138]
[121 137]
[122 136]
[123 135]
[124 134]
[126 132]
[127 131]
[144 201]
[145 200]
[146 199]
[147 198]
[148 197]
[149 196]
[153 190]
[154 189]
[156 187]
[157 186]
[162 181]
[163 180]
[164 179]
[165 178]
[169 175]
[170 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
