%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:22:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUACGUCUGAGAGGCGGACCGCCCUGCACCCUCCAAGCCUGCACCUCUUAGUCCAGCACCAGGAAGAGUGGCUCUAGGAGGGAGAGGAGCCCAGGGACUGACCCAAG\
) } def
/len { sequence length } bind def

/coor [
[94.72439575 189.39065552]
[79.87711334 187.25564575]
[72.71328735 174.07688904]
[78.99529266 160.45634460]
[83.42348480 146.12487793]
[87.85167694 131.79339600]
[80.42801666 130.72604370]
[69.67103577 141.18009949]
[58.91405869 151.63417053]
[48.15708160 162.08822632]
[37.40010452 172.54229736]
[35.73421860 188.49862671]
[22.14328384 197.02307129]
[7.05310917 191.57640076]
[2.03958154 176.33683777]
[10.94865131 162.99487305]
[26.94604111 161.78532410]
[37.70301819 151.33125305]
[48.45999527 140.87719727]
[59.21697235 130.42312622]
[69.97395325 119.96906281]
[72.37798309 88.16797638]
[95.82667542 76.32607269]
[97.96139526 61.47874832]
[99.88388824 46.60245895]
[101.59375763 31.70023155]
[103.30362701 16.79800606]
[93.71800232 7.20939541]
[91.48561096 -5.96554089]
[97.20764160 -17.82446480]
[108.56752777 -24.08693123]
[110.70224762 -38.93425369]
[112.83696747 -53.78157425]
[114.97169495 -68.62889862]
[117.10641479 -83.47621918]
[119.24113464 -98.32353973]
[110.81761169 -116.52780151]
[123.08010101 -131.36357117]
[124.36372375 -146.30854797]
[125.64734650 -161.25352478]
[126.93097687 -176.19850159]
[120.20134735 -181.68273926]
[116.31436157 -189.33869934]
[115.86818695 -197.81803894]
[118.86244965 -205.66191101]
[124.71144104 -211.55200195]
[132.35694885 -214.53196716]
[135.33580017 -229.23320007]
[138.31465149 -243.93444824]
[141.29351807 -258.63568115]
[139.51918030 -263.86614990]
[139.98663330 -268.73468018]
[142.15019226 -272.41665649]
[145.20808411 -274.44299316]
[149.43408203 -288.83538818]
[153.66006470 -303.22778320]
[144.84803772 -316.14605713]
[146.45277405 -331.70108032]
[157.71658325 -342.54824829]
[173.32101440 -343.56582642]
[185.89814758 -334.27337646]
[189.50944519 -319.05850220]
[182.44976807 -305.10519409]
[168.05245972 -299.00180054]
[163.82647705 -284.60940552]
[159.60047913 -270.21701050]
[155.99475098 -255.65682983]
[153.01589966 -240.95558167]
[150.03703308 -226.25434875]
[147.05818176 -211.55311584]
[156.23303223 -192.01445007]
[141.87594604 -174.91487122]
[140.59233093 -159.96989441]
[139.30870056 -145.02491760]
[138.02507019 -130.07994080]
[145.39337158 -122.73973846]
[147.46864319 -112.32248688]
[143.30607605 -102.30985260]
[134.08845520 -96.18881226]
[131.95373535 -81.34149170]
[129.81901550 -66.49417114]
[127.68429565 -51.64685059]
[125.54956818 -36.79953003]
[123.41484833 -21.95220757]
[134.05087280 -9.01233673]
[132.07015991 7.95830917]
[118.20585632 18.50787735]
[116.49598694 33.41010284]
[114.78611755 48.31232834]
[117.18597412 55.42200851]
[112.80871582 63.61347198]
[110.67399597 78.46079254]
[122.09045410 84.39863586]
[129.83659363 96.42928314]
[130.73722839 112.15898895]
[123.18384552 127.61949158]
[130.55984497 140.68067932]
[137.93583679 153.74188232]
[152.94444275 159.40942383]
[157.73376465 174.72091675]
[148.62985229 187.93069458]
[132.61642456 188.90533447]
[121.97763824 176.89718628]
[124.87464142 161.11787415]
[117.49864960 148.05667114]
[110.12265778 134.99548340]
[102.69899750 133.92813110]
[102.91017151 148.92663574]
[103.12134552 163.92515564]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 21]
[8 20]
[9 19]
[10 18]
[11 17]
[23 92]
[24 91]
[25 89]
[26 88]
[27 87]
[31 84]
[32 83]
[33 82]
[34 81]
[35 80]
[36 79]
[38 75]
[39 74]
[40 73]
[41 72]
[47 70]
[48 69]
[49 68]
[50 67]
[54 66]
[55 65]
[56 64]
[96 106]
[97 105]
[98 104]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
