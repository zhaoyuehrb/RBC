%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:07:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUCAACUAUCCACGCUGCUCGAAUCACAGCAUGCUGGAGGGCCUGGCUGGGUGCUCUGACUGACUGAUCACCUGACAGACGGUGCGGUCAGUCGGAUGCUGAGAAUGACUGACGAUGUGAUGAGGGGCGGAUUGAACGAGUCACAGGCCAGCUGGCCAGGAGCAAAAUCGGCAUAGCUGUCUGACUCGAUGGCUGUACGUGGUUACGGACUGUCUGCCCUGAUAGAAUCUCAGCUUCAACGCAUCAGAGGAGAC\
UGACUUGACCA\
) } def
/len { sequence length } bind def

/coor [
[90.08060455 294.99493408]
[97.90983582 281.84344482]
[110.96013641 273.84667969]
[109.90205383 258.88406372]
[108.84397125 243.92141724]
[96.92470551 237.94900513]
[89.44583893 226.78207397]
[88.44477081 213.27098083]
[94.28875732 200.92831421]
[105.55154419 193.01577759]
[104.66957855 178.04173279]
[103.78762054 163.06767273]
[96.54891968 161.10523987]
[82.07151031 157.18034363]
[74.83280945 155.21789551]
[66.50843048 167.69607544]
[58.25760651 180.22299194]
[50.08061981 192.79824829]
[41.90363693 205.37348938]
[33.72665024 217.94874573]
[39.40449142 232.38972473]
[35.47718811 247.40158081]
[23.45486832 257.21194458]
[7.96036243 258.04855347]
[-5.04837751 249.58970642]
[-10.56922626 235.08798218]
[-6.47930336 220.11961365]
[5.64873123 210.44023132]
[21.15140152 209.77175903]
[29.32838631 197.19650269]
[37.50537109 184.62126160]
[45.68235779 172.04600525]
[46.69054031 164.75035095]
[54.03026199 159.37168884]
[62.35464096 146.89352417]
[52.48891449 135.59362793]
[42.62407684 124.29473877]
[29.13701248 130.85972595]
[15.64994717 137.42472839]
[2.16288257 143.98971558]
[-6.85901833 156.98648071]
[-21.68894005 155.59986877]
[-35.17600632 162.16485596]
[-48.66307068 168.72984314]
[-62.15013504 175.29484558]
[-70.87773895 189.17868042]
[-87.25289917 188.29196167]
[-94.43024445 173.54687500]
[-85.02634430 160.11189270]
[-68.71512604 161.80776978]
[-55.22805786 155.24278259]
[-41.74099350 148.67779541]
[-28.25393105 142.11280823]
[-20.19671440 129.58561707]
[-4.40210724 130.50263977]
[9.08495712 123.93766022]
[22.57202148 117.37266541]
[36.05908585 110.80767822]
[34.38588333 95.90129089]
[19.77898216 92.48977661]
[5.17208052 89.07826233]
[-9.43482018 85.66674805]
[-24.04172134 82.25522614]
[-38.64862442 78.84371185]
[-53.25552368 75.43219757]
[-67.86242676 72.02068329]
[-82.46932983 68.60916901]
[-88.84358978 70.14443207]
[-94.23877716 68.49994659]
[-97.37783813 64.94170380]
[-111.90042114 61.18743134]
[-126.42300415 57.43315506]
[-140.94558716 53.67887878]
[-152.83186340 63.65365601]
[-168.31340027 64.70326233]
[-181.43722534 56.42409515]
[-187.15698242 41.99967194]
[-183.27328491 26.97646904]
[-171.27951050 17.13122177]
[-155.78750610 16.24962425]
[-142.75424194 24.67067146]
[-137.19131470 39.15629578]
[-122.66872406 42.91057205]
[-108.14614868 46.66484833]
[-93.62356567 50.41912460]
[-79.05781555 54.00226974]
[-64.45091248 57.41378403]
[-49.84400940 60.82529831]
[-35.23710632 64.23681641]
[-20.63020706 67.64833069]
[-6.02330542 71.05984497]
[8.58359623 74.47135925]
[23.19049644 77.88287354]
[37.79739761 81.29438782]
[84.88783264 54.60668182]
[118.25203705 75.27609253]
[129.83668518 65.74740601]
[141.42134094 56.21872330]
[153.00599670 46.69004059]
[164.59065247 37.16135406]
[163.79804993 21.77701378]
[172.11895752 9.02492142]
[186.18684387 3.68088937]
[200.53225708 7.59843111]
[212.11691284 -1.93025279]
[223.70156860 -11.45893669]
[224.12319946 -22.28472710]
[230.29023743 -30.92434120]
[239.98309326 -34.68193054]
[249.93347168 -32.54819870]
[261.73913574 -41.80165482]
[273.54479980 -51.05510712]
[285.35046387 -60.30856323]
[290.15258789 -68.03779602]
[297.34988403 -69.60046387]
[309.26361084 -78.71437073]
[321.17733765 -87.82827759]
[320.42123413 -99.65193176]
[325.40087891 -110.27043915]
[334.78149414 -117.10869598]
[346.17706299 -118.56993103]
[356.75680542 -114.40726471]
[368.88168335 -123.23831177]
[375.97854614 -140.24697876]
[393.50527954 -141.38197327]
[405.52542114 -150.35508728]
[417.54553223 -159.32818604]
[429.56567383 -168.30128479]
[441.58581543 -177.27438354]
[453.60592651 -186.24748230]
[465.62606812 -195.22058105]
[477.64617920 -204.19367981]
[489.66632080 -213.16679382]
[484.20336914 -218.66343689]
[480.67889404 -226.77436829]
[480.08883667 -236.75711060]
[483.14367676 -247.53239441]
[490.16384888 -257.79080200]
[499.89547729 -269.20547485]
[509.62713623 -280.62014771]
[519.35876465 -292.03485107]
[529.09045410 -303.44952393]
[538.82208252 -314.86419678]
[548.55377197 -326.27886963]
[550.11340332 -332.64721680]
[554.04949951 -336.68701172]
[558.65118408 -337.84417725]
[568.64874268 -349.02670288]
[578.64630127 -360.20922852]
[582.01672363 -368.66156006]
[588.82781982 -371.46362305]
[598.95629883 -382.52777100]
[609.08471680 -393.59188843]
[619.21313477 -404.65600586]
[629.34155273 -415.72015381]
[639.40472412 -426.84365845]
[649.40228271 -438.02618408]
[659.39984131 -449.20874023]
[661.10888672 -455.53860474]
[665.13891602 -459.48464966]
[669.76660156 -460.53320312]
[680.02453613 -471.47741699]
[679.26275635 -487.26333618]
[689.94818115 -498.90795898]
[705.74127197 -499.50274658]
[717.27227783 -488.69482422]
[717.70007324 -472.89633179]
[706.77081299 -461.48022461]
[690.96868896 -461.21951294]
[680.71081543 -450.27529907]
[670.58233643 -439.21118164]
[660.58483887 -428.02865601]
[650.58728027 -416.84613037]
[648.47924805 -409.78924561]
[640.40570068 -405.59170532]
[630.27728271 -394.52758789]
[620.14880371 -383.46347046]
[610.02038574 -372.39932251]
[599.89196777 -361.33520508]
[589.82879639 -350.21166992]
[579.83123779 -339.02914429]
[569.83374023 -327.84661865]
[559.96844482 -316.54724121]
[550.23675537 -305.13253784]
[540.50512695 -293.71786499]
[530.77349854 -282.30319214]
[521.04180908 -270.88848877]
[511.31018066 -259.47381592]
[501.57852173 -248.05914307]
[504.58059692 -241.18618774]
[510.58474731 -227.44027710]
[513.58685303 -220.56732178]
[528.57409668 -219.94976807]
[543.56475830 -219.42039490]
[558.55828857 -218.97921753]
[573.55181885 -218.53804016]
[588.54528809 -218.09687805]
[603.53881836 -217.65570068]
[614.86462402 -228.67849731]
[630.66607666 -228.38072205]
[641.56854248 -216.93902588]
[641.10369873 -201.14158630]
[629.54736328 -190.36071777]
[613.75573730 -190.99253845]
[603.09765625 -202.66220093]
[588.10412598 -203.10336304]
[573.11059570 -203.54454041]
[558.11712646 -203.98570251]
[543.12359619 -204.42687988]
[536.36846924 -201.49240112]
[527.95654297 -204.96247864]
[512.96929932 -205.58003235]
[498.63940430 -201.14666748]
[486.61929321 -192.17355347]
[474.59915161 -183.20045471]
[462.57904053 -174.22735596]
[450.55889893 -165.25425720]
[438.53878784 -156.28115845]
[426.51864624 -147.30805969]
[414.49853516 -138.33494568]
[402.47839355 -129.36184692]
[400.44064331 -117.45987701]
[390.52966309 -109.88292694]
[377.71273804 -111.11344147]
[365.58786011 -102.28238678]
[363.81362915 -84.03781891]
[348.99127197 -72.71713257]
[330.29122925 -75.91456604]
[318.37753296 -66.80065155]
[306.46380615 -57.68674469]
[294.60391235 -48.50290298]
[282.79824829 -39.24945068]
[270.99258423 -29.99599457]
[259.18692017 -20.74254036]
[253.26254272 -2.31581020]
[233.23023987 0.12571612]
[221.64559937 9.65439987]
[210.06094360 19.18308449]
[211.13728333 34.01478958]
[203.17958069 46.78738022]
[189.06173706 52.49175644]
[174.11933899 48.74600983]
[162.53468323 58.27469254]
[150.95002747 67.80337524]
[139.36537170 77.33206177]
[127.78072357 86.86074066]
[139.28422546 99.53270721]
[143.72370911 119.42080688]
[137.31155396 142.29235840]
[118.76167297 162.18571472]
[119.64363098 177.15975952]
[120.52558899 192.13381958]
[134.90335083 201.07392883]
[141.04641724 216.67202759]
[136.71305847 232.69413757]
[123.80660248 242.86334229]
[124.86468506 257.82595825]
[125.92277527 272.78860474]
[139.96856689 278.86926270]
[149.57063293 290.78811646]
[152.52252197 305.80624390]
[148.14587402 320.47265625]
[137.44644165 331.41711426]
[122.88285828 336.12460327]
[107.80172729 333.51342773]
[95.66859436 324.18359375]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 258]
[4 257]
[5 256]
[10 252]
[11 251]
[12 250]
[15 35]
[16 34]
[17 32]
[18 31]
[19 30]
[20 29]
[37 58]
[38 57]
[39 56]
[40 55]
[42 53]
[43 52]
[44 51]
[45 50]
[59 94]
[60 93]
[61 92]
[62 91]
[63 90]
[64 89]
[65 88]
[66 87]
[67 86]
[70 85]
[71 84]
[72 83]
[73 82]
[96 246]
[97 245]
[98 244]
[99 243]
[100 242]
[104 238]
[105 237]
[106 236]
[110 234]
[111 233]
[112 232]
[113 231]
[115 230]
[116 229]
[117 228]
[122 225]
[123 224]
[125 221]
[126 220]
[127 219]
[128 218]
[129 217]
[130 216]
[131 215]
[132 214]
[133 213]
[138 189]
[139 188]
[140 187]
[141 186]
[142 185]
[143 184]
[144 183]
[147 182]
[148 181]
[149 180]
[151 179]
[152 178]
[153 177]
[154 176]
[155 175]
[156 173]
[157 172]
[158 171]
[161 170]
[162 169]
[192 212]
[193 211]
[194 209]
[195 208]
[196 207]
[197 206]
[198 205]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
