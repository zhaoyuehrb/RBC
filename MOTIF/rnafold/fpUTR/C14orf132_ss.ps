%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:15:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGCUCGGGGCCCUCCGCCUAGUAGAGAUCUGGAGCCAGAAGCCCAGAGACAGCCGAGUGCGCCGUGCGGUCUCCGGACGCUCGCUGCUCAGCCCGAUCCCCGCCAACUGUGCAGGCGGCUGACCCGCAGCGGCAGCGGCAGCAGCGAGGACUCGAGCGCUGGCUGCAGCGACACCAUGGAUCUCUCCUUUAUGGCCGCGCAGGUCAAGUGAGCCUGGGGAAUAACAAGUGAGGAUGCCAAAUCAUGC\
) } def
/len { sequence length } bind def

/coor [
[71.29150391 138.05830383]
[60.48686600 148.46310425]
[49.68223190 158.86790466]
[38.87759399 169.27270508]
[28.07295990 179.67750549]
[17.26832390 190.08230591]
[6.46368933 200.48710632]
[-4.34094620 210.89190674]
[-15.14558125 221.29670715]
[-23.49871635 233.75564575]
[-29.02058411 247.70230103]
[-34.54245377 261.64892578]
[-29.51624107 276.88430786]
[-38.41420364 290.23370361]
[-54.41058350 291.45657349]
[-65.23432922 279.61486816]
[-62.58238220 263.79251099]
[-48.48910141 256.12707520]
[-42.96723175 242.18041992]
[-37.44536209 228.23377991]
[-43.25413513 223.48950195]
[-52.74268723 235.10704041]
[-62.23123932 246.72459412]
[-71.71979523 258.34213257]
[-85.74588013 263.65896606]
[-83.33734131 248.85359192]
[-73.84878540 237.23603821]
[-64.36023712 225.61849976]
[-54.87168121 214.00094604]
[-60.68045425 209.25666809]
[-73.24337769 217.45259094]
[-85.80629730 225.64849854]
[-98.36921692 233.84442139]
[-110.93213654 242.04032898]
[-116.39192200 249.33108521]
[-123.70481873 250.25915527]
[-136.36973572 258.29653931]
[-141.25857544 273.57656860]
[-156.30374146 279.14633179]
[-169.96388245 270.73324585]
[-171.76008606 254.79106140]
[-160.31448364 243.54927063]
[-144.40713501 245.63163757]
[-131.74221802 237.59423828]
[-119.12805176 229.47741699]
[-106.56513214 221.28149414]
[-94.00221252 213.08558655]
[-81.43929291 204.88966370]
[-68.87637329 196.69375610]
[-58.67369461 193.63801575]
[-48.93368149 193.31590271]
[-40.30827332 195.37927246]
[-33.32112885 199.33689880]
[-28.33845901 204.59312439]
[-25.55038071 210.49206543]
[-14.74574566 200.08728027]
[-3.94111037 189.68247986]
[6.86352491 179.27767944]
[17.66815948 168.87287903]
[28.47279549 158.46807861]
[39.27743149 148.06327820]
[50.08206558 137.65847778]
[60.88670349 127.25367737]
[53.82577133 111.85552979]
[52.59519577 94.96039581]
[38.11447144 91.04777527]
[23.63374901 87.13515472]
[8.29310608 91.00494385]
[-1.97535956 80.21569061]
[-16.45608330 76.30307007]
[-30.93680954 72.39044952]
[-47.80475235 74.09597015]
[-54.11313248 58.35936737]
[-40.73785782 47.94119644]
[-27.02418518 57.90972519]
[-12.54346180 61.82234573]
[1.93726301 65.73497009]
[16.24214745 61.58532333]
[27.54637146 72.65442657]
[42.02709579 76.56704712]
[56.50782013 80.47967529]
[72.46599579 61.08353043]
[96.06756592 52.49053955]
[97.19746399 37.53315735]
[98.32736969 22.57577133]
[99.45726776 7.61838865]
[100.58717346 -7.33899498]
[101.71707153 -22.29637909]
[102.84697723 -37.25376129]
[103.78883362 -52.22416306]
[104.54249573 -67.20521545]
[105.29616547 -82.18627167]
[106.04982758 -97.16732788]
[106.80348969 -112.14837646]
[96.82776642 -129.68438721]
[108.07979584 -145.42738342]
[108.45674896 -160.42263794]
[108.83369446 -175.41790771]
[109.11642456 -190.41523743]
[109.30491638 -205.41404724]
[109.49340820 -220.41287231]
[101.93013000 -234.30917358]
[109.82675171 -246.93821716]
[110.01524353 -261.93704224]
[110.20372772 -276.93585205]
[99.76255035 -285.42037964]
[96.15906525 -298.18069458]
[100.49101257 -310.50656128]
[110.96887207 -317.98080444]
[111.34582520 -332.97607422]
[111.72277069 -347.97134399]
[112.09972382 -362.96658325]
[112.38245392 -377.96392822]
[112.57094574 -392.96273804]
[104.14939880 -402.71017456]
[104.60073853 -415.18310547]
[113.13941956 -423.72903442]
[113.51637268 -438.72430420]
[106.12831116 -452.71456909]
[114.18300629 -465.24337769]
[114.55995941 -480.23864746]
[114.93691254 -495.23388672]
[115.31386566 -510.22915649]
[105.34482574 -522.79888916]
[109.09687042 -538.39703369]
[123.69175720 -545.05798340]
[137.93353271 -537.67211914]
[140.89712524 -521.90515137]
[130.30912781 -509.85220337]
[129.93217468 -494.85693359]
[129.55522156 -479.86169434]
[129.17826843 -464.86642456]
[136.59329224 -451.94873047]
[128.51162720 -438.34735107]
[128.13468933 -423.35208130]
[137.33831787 -408.39755249]
[127.56975555 -392.77426147]
[127.38127136 -377.77545166]
[130.43203735 -371.06481934]
[127.09498596 -362.58966064]
[126.71804047 -347.59439087]
[126.34108734 -332.59912109]
[125.96413422 -317.60385132]
[138.06661987 -305.90972900]
[137.95219421 -288.74276733]
[125.20254517 -276.74734497]
[125.01405334 -261.74853516]
[124.82556915 -246.74972534]
[132.40232849 -233.92623901]
[124.49221802 -220.22438049]
[124.30372620 -205.22555542]
[124.11524200 -190.22674561]
[127.16601562 -183.51611328]
[123.82895660 -175.04095459]
[123.45201111 -160.04568481]
[123.07505798 -145.05043030]
[130.73362732 -138.33277893]
[133.50164795 -128.30114746]
[130.23727417 -118.18924713]
[121.78454590 -111.39471436]
[121.03088379 -96.41365814]
[120.27721405 -81.43260956]
[119.52355194 -66.45155334]
[118.76988983 -51.47049713]
[121.23435211 -47.40647888]
[121.18928528 -41.75545883]
[117.80435944 -36.12385941]
[116.67445374 -21.16647530]
[115.54455566 -6.20909262]
[114.41464996 8.74829102]
[113.28475189 23.70567513]
[112.15484619 38.66305923]
[111.02494812 53.62044144]
[123.86078644 58.72923660]
[134.69274902 67.30403900]
[142.61114502 78.62471008]
[146.95097351 91.74051666]
[147.34776306 105.54997253]
[143.76818848 118.89333344]
[156.43310547 126.93074036]
[169.09803772 134.96813965]
[181.81320190 142.92581177]
[194.57812500 150.80342102]
[207.34303284 158.68104553]
[216.26457214 160.51695251]
[220.21798706 166.73870850]
[232.88290405 174.77610779]
[245.54782104 182.81352234]
[258.26300049 190.77117920]
[271.02792358 198.64880371]
[283.79281616 206.52642822]
[296.65573120 214.24301147]
[309.61459351 221.79736328]
[322.57342529 229.35171509]
[337.67834473 225.54655457]
[350.71286011 233.39233398]
[354.24740601 247.81602478]
[367.20626831 255.37036133]
[372.37567139 255.39283752]
[376.60668945 257.20114136]
[379.37911987 260.14483643]
[380.50347900 263.46154785]
[393.16839600 271.49896240]
[405.83331299 279.53637695]
[418.49822998 287.57376099]
[431.16314697 295.61117554]
[446.01303101 290.71069336]
[460.51947021 296.55001831]
[467.83291626 310.37200928]
[464.50021362 325.65032959]
[452.09497070 335.17102051]
[436.47454834 334.43872070]
[425.01443481 323.79919434]
[423.12573242 308.27609253]
[410.46081543 300.23867798]
[397.79589844 292.20129395]
[385.13098145 284.16387939]
[372.46606445 276.12646484]
[359.65191650 268.32922363]
[346.69305420 260.77487183]
[332.40023804 264.80609131]
[319.15051270 257.32952881]
[315.01907349 242.31056213]
[302.06024170 234.75621033]
[289.10137939 227.20187378]
[284.35934448 227.52290344]
[279.36120605 224.88578796]
[275.91522217 219.29133606]
[263.15029907 211.41372681]
[250.38537598 203.53610229]
[243.06138611 202.70001221]
[237.51042175 195.47843933]
[224.84550476 187.44104004]
[212.18058777 179.40362549]
[199.46540833 171.44596863]
[186.70050049 163.56834412]
[173.93557739 155.69071960]
[166.61160278 154.85462952]
[161.06062317 147.63305664]
[148.39570618 139.59565735]
[135.73078918 131.55825806]
[130.63696289 136.52381897]
[124.86096191 140.67610168]
[118.53137970 143.92266846]
[111.78916168 146.19122314]
[104.78443909 147.43122864]
[97.67317963 147.61511230]
[90.61373138 146.73875427]
[83.76328278 144.82167053]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 63]
[2 62]
[3 61]
[4 60]
[5 59]
[6 58]
[7 57]
[8 56]
[9 55]
[10 20]
[11 19]
[12 18]
[30 49]
[31 48]
[32 47]
[33 46]
[34 45]
[36 44]
[37 43]
[65 81]
[66 80]
[67 79]
[69 77]
[70 76]
[71 75]
[83 173]
[84 172]
[85 171]
[86 170]
[87 169]
[88 168]
[89 167]
[90 164]
[91 163]
[92 162]
[93 161]
[94 160]
[96 156]
[97 155]
[98 154]
[99 152]
[100 151]
[101 150]
[103 148]
[104 147]
[105 146]
[109 143]
[110 142]
[111 141]
[112 140]
[113 138]
[114 137]
[117 135]
[118 134]
[120 132]
[121 131]
[122 130]
[123 129]
[179 241]
[180 240]
[181 239]
[182 237]
[183 236]
[184 235]
[186 234]
[187 233]
[188 232]
[189 230]
[190 229]
[191 228]
[192 225]
[193 224]
[194 223]
[197 220]
[198 219]
[202 218]
[203 217]
[204 216]
[205 215]
[206 214]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
