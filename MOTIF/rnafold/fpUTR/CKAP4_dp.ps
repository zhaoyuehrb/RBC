%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:08:08 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CKAP4)
} def

/sequence { (\
GGGGGAGCCCCUGCAAGUUUCCCGGGCCGCGCGCCGCGCUCGCUCGCCUCCCAGCCCGCGGCCCGAGCCGCCGCCGCGCCCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.038746705 ubox
1 11 0.155284341 ubox
1 12 0.073878723 ubox
1 22 0.011424716 ubox
1 23 0.144078551 ubox
1 81 0.004650772 ubox
1 84 0.039472881 ubox
2 9 0.038947837 ubox
2 10 0.155531489 ubox
2 11 0.078215228 ubox
2 12 0.028276491 ubox
2 21 0.011378211 ubox
2 22 0.137455698 ubox
2 23 0.957469575 ubox
2 80 0.003620512 ubox
2 83 0.036739753 ubox
2 84 0.004276987 ubox
3 8 0.038983099 ubox
3 9 0.155505876 ubox
3 10 0.078229545 ubox
3 11 0.029898299 ubox
3 12 0.005985465 ubox
3 20 0.010504108 ubox
3 21 0.128748306 ubox
3 22 0.971320679 ubox
3 23 0.066541006 ubox
3 81 0.005346298 ubox
3 83 0.003355131 ubox
4 8 0.152998465 ubox
4 9 0.077968820 ubox
4 10 0.029955331 ubox
4 11 0.007319368 ubox
4 19 0.010251205 ubox
4 20 0.118485353 ubox
4 21 0.972548176 ubox
4 22 0.067432910 ubox
4 80 0.005351576 ubox
4 81 0.003979908 ubox
5 9 0.029498586 ubox
5 10 0.007327855 ubox
5 18 0.009861381 ubox
5 19 0.107378678 ubox
5 20 0.972916748 ubox
5 21 0.067430393 ubox
5 79 0.005330451 ubox
5 80 0.003970018 ubox
6 18 0.103458240 ubox
6 19 0.974377408 ubox
6 20 0.058469277 ubox
7 14 0.090656461 ubox
7 18 0.975125530 ubox
7 19 0.041942160 ubox
7 27 0.004147243 ubox
7 77 0.004983573 ubox
8 13 0.090393051 ubox
8 17 0.976317566 ubox
8 26 0.004149242 ubox
8 76 0.004985523 ubox
9 25 0.004140853 ubox
10 24 0.004124938 ubox
11 17 0.023779177 ubox
12 16 0.026593146 ubox
13 71 0.004606519 ubox
13 83 0.009511661 ubox
14 70 0.004620257 ubox
14 82 0.008725611 ubox
17 68 0.004752838 ubox
17 83 0.010684277 ubox
18 67 0.004720769 ubox
18 82 0.006271890 ubox
19 66 0.004505256 ubox
23 65 0.006871848 ubox
23 82 0.232006720 ubox
24 64 0.010615459 ubox
24 80 0.006777469 ubox
24 81 0.994857739 ubox
24 84 0.018010606 ubox
25 63 0.010648338 ubox
25 75 0.005611598 ubox
25 79 0.006409238 ubox
25 80 0.995844851 ubox
25 81 0.045325154 ubox
25 83 0.017438222 ubox
25 84 0.074246721 ubox
26 62 0.010648635 ubox
26 74 0.005623627 ubox
26 77 0.003465418 ubox
26 79 0.995787270 ubox
26 80 0.045251045 ubox
26 83 0.075228006 ubox
27 61 0.010648753 ubox
27 73 0.005620386 ubox
27 76 0.003424015 ubox
27 78 0.751130166 ubox
27 82 0.074937922 ubox
28 60 0.010648246 ubox
28 76 0.368087700 ubox
28 78 0.655333810 ubox
28 82 0.007222992 ubox
29 59 0.010644734 ubox
29 71 0.006228481 ubox
29 74 0.037727806 ubox
29 75 0.366815033 ubox
29 77 0.925625687 ubox
29 79 0.074537787 ubox
29 81 0.009577602 ubox
30 58 0.010644024 ubox
30 70 0.006410499 ubox
30 73 0.048508646 ubox
30 76 0.925796187 ubox
30 78 0.074954934 ubox
31 57 0.010517813 ubox
31 69 0.006256101 ubox
31 71 0.012325740 ubox
31 72 0.047207078 ubox
31 74 0.455333671 ubox
31 75 0.884973161 ubox
31 77 0.076500964 ubox
31 79 0.010218438 ubox
32 70 0.016573869 ubox
32 73 0.529626835 ubox
32 76 0.076491915 ubox
32 78 0.010234089 ubox
33 55 0.010451607 ubox
33 62 0.008056058 ubox
33 68 0.013466000 ubox
33 69 0.012338942 ubox
33 71 0.061764157 ubox
33 72 0.526464874 ubox
33 74 0.844053885 ubox
33 75 0.059802498 ubox
33 77 0.010246337 ubox
34 54 0.010446898 ubox
34 61 0.008413054 ubox
34 67 0.017196187 ubox
34 70 0.057607515 ubox
34 73 0.844468164 ubox
34 76 0.010229421 ubox
35 60 0.008431951 ubox
35 65 0.017762075 ubox
35 70 0.519136695 ubox
35 73 0.045951116 ubox
36 43 0.005718849 ubox
36 47 0.010864438 ubox
36 59 0.008581024 ubox
36 64 0.017752454 ubox
36 68 0.008180689 ubox
36 69 0.522219137 ubox
36 71 0.849405198 ubox
36 72 0.042797857 ubox
36 74 0.011937040 ubox
37 42 0.005721174 ubox
37 46 0.010881438 ubox
37 58 0.008585087 ubox
37 67 0.008347501 ubox
37 70 0.850423944 ubox
37 73 0.011957278 ubox
38 45 0.010435988 ubox
38 47 0.005661804 ubox
38 57 0.008590858 ubox
38 62 0.019066934 ubox
38 68 0.793659342 ubox
38 69 0.606856030 ubox
38 71 0.022361677 ubox
38 72 0.010602461 ubox
39 46 0.005666783 ubox
39 61 0.018992840 ubox
39 67 0.992370709 ubox
39 70 0.022801117 ubox
40 60 0.003268504 ubox
40 61 0.007266931 ubox
40 66 0.992279018 ubox
41 60 0.022690521 ubox
41 65 0.991639684 ubox
42 55 0.011473469 ubox
42 59 0.027747680 ubox
42 62 0.307846529 ubox
42 64 0.938961448 ubox
42 68 0.119364481 ubox
43 54 0.011670410 ubox
43 58 0.028572145 ubox
43 61 0.335656170 ubox
43 67 0.119479487 ubox
44 53 0.011597025 ubox
44 60 0.066638729 ubox
44 61 0.573721404 ubox
44 66 0.119457383 ubox
45 58 0.029891578 ubox
45 60 0.701739918 ubox
45 65 0.119196933 ubox
46 55 0.041589415 ubox
46 57 0.026103757 ubox
46 59 0.704597309 ubox
46 62 0.699133010 ubox
46 64 0.098201498 ubox
47 54 0.042215644 ubox
47 58 0.703615971 ubox
47 61 0.700039217 ubox
48 54 0.205042164 ubox
48 60 0.699330966 ubox
48 61 0.008769579 ubox
49 53 0.185271430 ubox
49 60 0.009224004 ubox
49 61 0.010457248 ubox
50 60 0.012097718 ubox
50 61 0.067423998 ubox
51 60 0.067830588 ubox
51 61 0.038405592 ubox
52 60 0.038821603 ubox
54 62 0.064903259 ubox
55 61 0.065012613 ubox
56 60 0.064550189 ubox
58 71 0.010628714 ubox
59 70 0.010681365 ubox
60 69 0.011324209 ubox
61 68 0.011441389 ubox
62 67 0.011406452 ubox
65 81 0.004474315 ubox
67 74 0.004305382 ubox
67 79 0.006503659 ubox
67 83 0.004507084 ubox
68 73 0.004302070 ubox
68 78 0.005046901 ubox
68 82 0.004509457 ubox
69 78 0.007111622 ubox
70 77 0.008365801 ubox
71 76 0.008344081 ubox
76 83 0.004571612 ubox
77 82 0.004574225 ubox
2 23 0.9500000 lbox
3 22 0.9500000 lbox
4 21 0.9500000 lbox
5 20 0.9500000 lbox
6 19 0.9500000 lbox
7 18 0.9500000 lbox
8 17 0.9500000 lbox
24 81 0.9500000 lbox
25 80 0.9500000 lbox
26 79 0.9500000 lbox
27 78 0.9500000 lbox
29 77 0.9500000 lbox
30 76 0.9500000 lbox
31 75 0.9500000 lbox
33 74 0.9500000 lbox
34 73 0.9500000 lbox
36 71 0.9500000 lbox
37 70 0.9500000 lbox
38 69 0.9500000 lbox
39 67 0.9500000 lbox
40 66 0.9500000 lbox
41 65 0.9500000 lbox
42 64 0.9500000 lbox
46 62 0.9500000 lbox
47 61 0.9500000 lbox
48 60 0.9500000 lbox
showpage
end
%%EOF
