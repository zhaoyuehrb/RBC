%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:45:47 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MAN2B1)
} def

/sequence { (\
CCCGGCCGGGUCUGGGGGCGGGGCGUUUGCCCGGCCUUUCCAGGGCCGGGGAACCCCAGGAGGAAGCUGCUGAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.003266318 ubox
1 16 0.011749656 ubox
1 22 0.026840356 ubox
1 23 0.005083293 ubox
1 49 0.005045554 ubox
1 50 0.980958884 ubox
1 51 0.095591431 ubox
1 60 0.013670985 ubox
1 63 0.003708294 ubox
2 9 0.003302016 ubox
2 15 0.011790006 ubox
2 21 0.030167651 ubox
2 22 0.005193120 ubox
2 48 0.003608282 ubox
2 49 0.985918893 ubox
2 50 0.088017047 ubox
2 51 0.094254043 ubox
2 59 0.013716944 ubox
2 60 0.010980870 ubox
2 62 0.003607252 ubox
2 63 0.007773584 ubox
3 8 0.003300573 ubox
3 14 0.011791112 ubox
3 20 0.030256952 ubox
3 21 0.005195571 ubox
3 48 0.986700188 ubox
3 49 0.062337437 ubox
3 50 0.094032879 ubox
3 59 0.011029487 ubox
3 62 0.007789687 ubox
3 72 0.006118884 ubox
4 12 0.003322435 ubox
4 13 0.011308870 ubox
4 19 0.030219591 ubox
4 47 0.987448662 ubox
4 55 0.036120034 ubox
4 56 0.026128384 ubox
4 57 0.014431649 ubox
4 71 0.006087856 ubox
4 76 0.055371023 ubox
5 11 0.003384395 ubox
5 12 0.011172212 ubox
5 19 0.005477435 ubox
5 46 0.987466257 ubox
5 54 0.036205734 ubox
5 55 0.026134390 ubox
5 56 0.014445994 ubox
5 70 0.006081631 ubox
5 75 0.055750959 ubox
6 10 0.005905377 ubox
6 17 0.030149733 ubox
6 18 0.005693774 ubox
6 44 0.029650969 ubox
6 45 0.987011965 ubox
6 49 0.134678965 ubox
6 50 0.009858935 ubox
6 60 0.005089072 ubox
6 69 0.005760161 ubox
6 74 0.053056354 ubox
7 16 0.030142380 ubox
7 17 0.005667099 ubox
7 43 0.041695527 ubox
7 44 0.975918000 ubox
7 48 0.150280417 ubox
7 49 0.009245564 ubox
7 59 0.005061940 ubox
7 72 0.008438682 ubox
8 40 0.004708407 ubox
8 41 0.105246955 ubox
8 47 0.153824488 ubox
9 39 0.004275152 ubox
9 40 0.105694080 ubox
9 41 0.338158760 ubox
9 46 0.153846355 ubox
9 47 0.011182447 ubox
10 38 0.003572654 ubox
10 39 0.087826130 ubox
10 40 0.338120751 ubox
10 46 0.011292188 ubox
11 44 0.207058833 ubox
11 45 0.009605894 ubox
12 43 0.929348956 ubox
12 44 0.007849928 ubox
12 59 0.003526037 ubox
13 42 0.930427161 ubox
13 43 0.005038326 ubox
13 58 0.003546013 ubox
14 37 0.006996498 ubox
14 38 0.055825024 ubox
14 39 0.310417832 ubox
14 40 0.020264234 ubox
14 41 0.930764192 ubox
14 57 0.003553321 ubox
15 36 0.005384865 ubox
15 37 0.059154618 ubox
15 38 0.347447729 ubox
15 39 0.022071128 ubox
15 40 0.925192183 ubox
15 41 0.009001010 ubox
15 56 0.003552664 ubox
16 35 0.004348365 ubox
16 36 0.059398840 ubox
16 37 0.827509093 ubox
16 38 0.078780003 ubox
16 39 0.459007198 ubox
16 40 0.011055399 ubox
16 55 0.003551419 ubox
17 35 0.055696478 ubox
17 36 0.995497611 ubox
17 37 0.016505210 ubox
17 38 0.048116348 ubox
17 54 0.003528922 ubox
17 76 0.010987165 ubox
18 35 0.997755452 ubox
18 36 0.014276779 ubox
18 37 0.005034115 ubox
18 75 0.011117326 ubox
19 33 0.053072328 ubox
19 34 0.997628290 ubox
19 74 0.011104467 ubox
20 32 0.050562357 ubox
20 56 0.003667697 ubox
20 57 0.007472982 ubox
21 31 0.046244959 ubox
21 32 0.997702970 ubox
21 55 0.003668459 ubox
21 56 0.008778989 ubox
21 57 0.006198145 ubox
22 30 0.041456409 ubox
22 31 0.998372900 ubox
22 54 0.003630203 ubox
22 55 0.008835458 ubox
22 56 0.014382778 ubox
22 76 0.005477926 ubox
23 30 0.998572762 ubox
23 54 0.008792439 ubox
23 55 0.017857632 ubox
23 56 0.010651314 ubox
23 75 0.011658112 ubox
24 29 0.997339046 ubox
24 74 0.011666628 ubox
25 54 0.028960680 ubox
26 53 0.027973092 ubox
27 52 0.026753034 ubox
27 53 0.015579086 ubox
28 51 0.024154635 ubox
28 52 0.018431197 ubox
30 50 0.032965935 ubox
31 49 0.033053887 ubox
32 48 0.033090360 ubox
33 47 0.033138877 ubox
34 46 0.033139496 ubox
35 45 0.033122290 ubox
36 44 0.033103585 ubox
37 43 0.032550921 ubox
38 42 0.024821574 ubox
48 55 0.012004884 ubox
48 56 0.027386303 ubox
48 57 0.012357638 ubox
49 54 0.013101986 ubox
49 55 0.029878241 ubox
49 56 0.036015223 ubox
49 57 0.019133521 ubox
50 54 0.029555544 ubox
50 55 0.036889865 ubox
50 56 0.047354899 ubox
50 57 0.017544290 ubox
50 75 0.003586300 ubox
50 76 0.034443927 ubox
51 55 0.054115878 ubox
51 56 0.080430648 ubox
51 67 0.003867590 ubox
51 75 0.062920922 ubox
54 60 0.028437180 ubox
54 63 0.063080318 ubox
55 59 0.028358196 ubox
55 62 0.063194886 ubox
55 63 0.068567878 ubox
56 62 0.068478294 ubox
56 63 0.111327585 ubox
57 62 0.111548908 ubox
57 69 0.023155167 ubox
57 72 0.983366525 ubox
58 68 0.023469207 ubox
58 71 0.985748120 ubox
59 67 0.023481054 ubox
59 70 0.985961755 ubox
59 71 0.006773011 ubox
59 76 0.005063741 ubox
60 67 0.004681005 ubox
60 70 0.008740392 ubox
60 75 0.005012428 ubox
61 68 0.982627923 ubox
61 71 0.005067715 ubox
62 67 0.984367038 ubox
62 68 0.013886337 ubox
62 70 0.005199533 ubox
62 71 0.003409074 ubox
62 76 0.004596472 ubox
63 67 0.016438523 ubox
63 70 0.003602148 ubox
63 75 0.003683457 ubox
65 71 0.004102863 ubox
66 70 0.004088453 ubox
66 75 0.160562222 ubox
67 74 0.160957212 ubox
68 73 0.159349614 ubox
69 75 0.009176545 ubox
70 74 0.009164084 ubox
1 50 0.9500000 lbox
2 49 0.9500000 lbox
3 48 0.9500000 lbox
4 47 0.9500000 lbox
5 46 0.9500000 lbox
6 45 0.9500000 lbox
7 44 0.9500000 lbox
12 43 0.9500000 lbox
13 42 0.9500000 lbox
14 41 0.9500000 lbox
15 40 0.9500000 lbox
16 37 0.9500000 lbox
17 36 0.9500000 lbox
18 35 0.9500000 lbox
19 34 0.9500000 lbox
21 32 0.9500000 lbox
22 31 0.9500000 lbox
23 30 0.9500000 lbox
24 29 0.9500000 lbox
57 72 0.9500000 lbox
58 71 0.9500000 lbox
59 70 0.9500000 lbox
61 68 0.9500000 lbox
62 67 0.9500000 lbox
showpage
end
%%EOF
