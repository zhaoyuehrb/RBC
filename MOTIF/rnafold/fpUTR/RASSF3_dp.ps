%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:47:32 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RASSF3)
} def

/sequence { (\
GCUGCAUAAGGACUGCCCGGGGCUGCGCGCCGGGAACCUCGCGGGGCUGGCGGGCGCCGCACCCCCUCCCUGGCCGCCUGCGCCCCGGGGAGGCCGCCCGCGCGCGACGGGACCGGCAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 16 0.010937673 ubox
1 117 0.004310073 ubox
1 120 0.250978388 ubox
2 10 0.449037067 ubox
2 11 0.328995130 ubox
2 15 0.010966029 ubox
2 116 0.004090900 ubox
2 119 0.253817117 ubox
3 9 0.449133873 ubox
3 10 0.324602429 ubox
3 118 0.253518116 ubox
4 16 0.029861819 ubox
4 117 0.252939393 ubox
4 120 0.015739281 ubox
5 15 0.032177481 ubox
5 116 0.243671936 ubox
5 119 0.014162580 ubox
6 14 0.030536948 ubox
7 15 0.009005160 ubox
8 14 0.009797625 ubox
10 17 0.223750413 ubox
10 18 0.048572731 ubox
10 95 0.024741374 ubox
10 114 0.020082861 ubox
11 16 0.223358769 ubox
11 17 0.051226727 ubox
11 94 0.024346077 ubox
11 113 0.020083626 ubox
13 92 0.025587616 ubox
13 119 0.959373815 ubox
14 91 0.025854869 ubox
14 115 0.003595525 ubox
14 118 0.965277756 ubox
15 23 0.004931558 ubox
15 114 0.003535235 ubox
15 117 0.966489061 ubox
15 120 0.017300283 ubox
16 22 0.004989935 ubox
16 89 0.026038906 ubox
16 111 0.028153086 ubox
16 116 0.789575429 ubox
16 119 0.017425925 ubox
17 21 0.004954165 ubox
17 88 0.026043917 ubox
17 110 0.028217492 ubox
17 115 0.558968265 ubox
17 116 0.562919593 ubox
18 87 0.026044499 ubox
18 109 0.028221908 ubox
18 115 0.825964142 ubox
19 86 0.026044548 ubox
19 108 0.028135647 ubox
19 114 0.998187658 ubox
20 85 0.026044060 ubox
20 113 0.998226799 ubox
20 114 0.038874219 ubox
21 84 0.026043037 ubox
21 113 0.040080969 ubox
21 114 0.008420879 ubox
22 83 0.026032256 ubox
22 105 0.016581085 ubox
22 113 0.008421772 ubox
23 82 0.025704978 ubox
23 104 0.016137977 ubox
23 110 0.998666381 ubox
23 111 0.017680093 ubox
24 80 0.006715121 ubox
24 82 0.003898744 ubox
24 104 0.003400580 ubox
24 106 0.027021891 ubox
24 109 0.997933458 ubox
24 110 0.014089013 ubox
25 77 0.017113685 ubox
25 81 0.018580464 ubox
25 103 0.015950678 ubox
25 105 0.049146999 ubox
25 108 0.997374187 ubox
26 76 0.017153354 ubox
26 80 0.018504509 ubox
26 102 0.015957140 ubox
26 104 0.050345197 ubox
26 106 0.997773613 ubox
27 47 0.003838117 ubox
27 75 0.017167191 ubox
27 77 0.018833063 ubox
27 101 0.015948887 ubox
27 103 0.050536531 ubox
27 105 0.998230441 ubox
28 46 0.003850221 ubox
28 76 0.019057642 ubox
28 100 0.015901742 ubox
28 102 0.050541638 ubox
28 104 0.998231337 ubox
29 74 0.021947623 ubox
29 75 0.013478625 ubox
29 99 0.015475318 ubox
29 101 0.050555380 ubox
29 103 0.998228859 ubox
30 44 0.003854256 ubox
30 73 0.025759043 ubox
30 100 0.037848255 ubox
30 102 0.998134930 ubox
31 43 0.003859274 ubox
31 72 0.025749029 ubox
31 96 0.012708304 ubox
31 100 0.998171834 ubox
32 42 0.003859048 ubox
32 70 0.022773776 ubox
32 71 0.011998689 ubox
32 95 0.012822424 ubox
32 98 0.023358833 ubox
32 99 0.999197757 ubox
33 69 0.023104050 ubox
33 70 0.011381678 ubox
33 94 0.012788184 ubox
33 95 0.008299500 ubox
33 97 0.026009400 ubox
33 98 0.999134643 ubox
33 99 0.010313845 ubox
34 40 0.003929254 ubox
34 68 0.023416118 ubox
34 69 0.010696273 ubox
34 94 0.009422308 ubox
34 97 0.997155286 ubox
34 98 0.010449328 ubox
35 39 0.003449232 ubox
35 67 0.023222085 ubox
37 90 0.012408633 ubox
37 93 0.990708127 ubox
38 89 0.012385323 ubox
38 90 0.024199372 ubox
38 92 0.997899323 ubox
38 93 0.032350045 ubox
39 88 0.009046231 ubox
39 89 0.024489651 ubox
39 90 0.259194298 ubox
39 91 0.963016773 ubox
39 92 0.025277197 ubox
40 87 0.005886970 ubox
40 88 0.029281563 ubox
40 89 0.595066819 ubox
40 90 0.801512742 ubox
41 60 0.030987731 ubox
41 86 0.003217332 ubox
42 59 0.031028932 ubox
42 87 0.997560595 ubox
43 58 0.031029421 ubox
43 64 0.004484410 ubox
43 65 0.003552174 ubox
43 66 0.006598302 ubox
43 86 0.999424560 ubox
44 57 0.031025030 ubox
44 63 0.004495029 ubox
44 64 0.003615732 ubox
44 65 0.006598793 ubox
44 85 0.999455363 ubox
45 62 0.004493388 ubox
45 63 0.003631144 ubox
45 64 0.006598632 ubox
45 84 0.999455840 ubox
46 55 0.031027138 ubox
46 60 0.004179693 ubox
46 62 0.003626939 ubox
46 63 0.006573733 ubox
46 83 0.999432373 ubox
47 54 0.031023893 ubox
47 59 0.004102498 ubox
47 82 0.994167995 ubox
48 53 0.030433683 ubox
48 59 0.003867347 ubox
48 61 0.003855140 ubox
48 80 0.007394598 ubox
48 82 0.042441325 ubox
49 58 0.005788766 ubox
49 78 0.031558103 ubox
49 81 0.143661446 ubox
50 57 0.005793411 ubox
50 60 0.006133411 ubox
50 77 0.031586630 ubox
50 81 0.984151815 ubox
51 56 0.005785066 ubox
51 59 0.006718998 ubox
51 76 0.031593326 ubox
51 80 0.998807912 ubox
52 58 0.006721506 ubox
52 75 0.031317723 ubox
52 78 0.004406515 ubox
52 79 0.998200974 ubox
53 57 0.006613019 ubox
53 74 0.030374247 ubox
53 75 0.004114027 ubox
53 77 0.004261530 ubox
53 78 0.998953570 ubox
54 60 0.004108033 ubox
54 74 0.005751734 ubox
54 77 0.998961207 ubox
55 59 0.004083625 ubox
55 72 0.028589247 ubox
55 73 0.006981541 ubox
55 76 0.998724870 ubox
56 71 0.021790152 ubox
56 74 0.703366344 ubox
56 75 0.708869441 ubox
57 73 0.994690449 ubox
58 72 0.994293501 ubox
59 71 0.782357232 ubox
59 74 0.073909696 ubox
60 72 0.030249150 ubox
60 73 0.071706893 ubox
61 71 0.035381027 ubox
62 73 0.029866245 ubox
63 72 0.032158724 ubox
63 73 0.011859483 ubox
64 72 0.013161619 ubox
64 73 0.015996110 ubox
65 72 0.017308137 ubox
65 73 0.032032125 ubox
65 93 0.019275369 ubox
66 72 0.034048469 ubox
66 92 0.019566703 ubox
67 91 0.019600001 ubox
68 90 0.019606679 ubox
69 89 0.019612963 ubox
70 88 0.019612637 ubox
71 87 0.019570048 ubox
72 86 0.019341663 ubox
73 85 0.019194110 ubox
75 82 0.009382473 ubox
76 81 0.009255800 ubox
76 83 0.016772384 ubox
77 82 0.016754639 ubox
88 95 0.004135026 ubox
89 94 0.004136406 ubox
93 117 0.006468400 ubox
94 116 0.006614275 ubox
95 115 0.007170084 ubox
96 114 0.007628165 ubox
97 111 0.025793647 ubox
98 110 0.025881866 ubox
99 109 0.025879905 ubox
100 108 0.025613786 ubox
108 115 0.004303523 ubox
109 114 0.004282957 ubox
13 119 0.9500000 lbox
14 118 0.9500000 lbox
15 117 0.9500000 lbox
16 116 0.9500000 lbox
17 115 0.9500000 lbox
19 114 0.9500000 lbox
20 113 0.9500000 lbox
23 110 0.9500000 lbox
24 109 0.9500000 lbox
25 108 0.9500000 lbox
26 106 0.9500000 lbox
27 105 0.9500000 lbox
28 104 0.9500000 lbox
29 103 0.9500000 lbox
30 102 0.9500000 lbox
31 100 0.9500000 lbox
32 99 0.9500000 lbox
33 98 0.9500000 lbox
34 97 0.9500000 lbox
37 93 0.9500000 lbox
38 92 0.9500000 lbox
39 91 0.9500000 lbox
40 90 0.9500000 lbox
42 87 0.9500000 lbox
43 86 0.9500000 lbox
44 85 0.9500000 lbox
45 84 0.9500000 lbox
46 83 0.9500000 lbox
47 82 0.9500000 lbox
50 81 0.9500000 lbox
51 80 0.9500000 lbox
52 79 0.9500000 lbox
53 78 0.9500000 lbox
54 77 0.9500000 lbox
55 76 0.9500000 lbox
56 75 0.9500000 lbox
57 73 0.9500000 lbox
58 72 0.9500000 lbox
59 71 0.9500000 lbox
showpage
end
%%EOF
