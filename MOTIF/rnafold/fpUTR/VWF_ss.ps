%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:34:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGGCAGCUCACAGCUAUUGUGGUGGGAAAGGGAGGGUGGUUGGUGGAUGUCACAGCUUGGGCUUUAUCUCCCCCAGCAGUGGGGACUCCACAGCCCCUGGGCUACAUAACAGCAAGACAGUCCGGAGCUGUAGCAGACCUGAUUGAGCCUUUGCAGCAGCUGAGAGCAUGGCCUAGGGUGGGCGGCACCAUUGUCCAGCAGCUGAGUUUCCCAGGGACCUUGGAGAUAGCCGCAGCCCUCAUUUGCAGGGGAAG\
) } def
/len { sequence length } bind def

/coor [
[248.25938416 819.75146484]
[244.43640137 805.24682617]
[240.61341858 790.74218750]
[236.79043579 776.23754883]
[232.96745300 761.73291016]
[227.24142456 761.94036865]
[221.53276062 761.44873047]
[215.92649841 760.26538086]
[209.68005371 773.90289307]
[203.43360901 787.54046631]
[197.18716431 801.17797852]
[190.94071960 814.81549072]
[192.22842407 830.58416748]
[179.89390564 838.93341064]
[173.64746094 852.57092285]
[175.72595215 868.83782959]
[162.51551819 878.55462646]
[147.60594177 871.72552490]
[146.33489990 855.37573242]
[160.00994873 846.32446289]
[166.25639343 832.68695068]
[164.52189636 817.89367676]
[177.30320740 808.56903076]
[183.54965210 794.93151855]
[189.79609680 781.29400635]
[196.04252625 767.65649414]
[202.28897095 754.01898193]
[185.39060974 734.18255615]
[181.63732910 708.31256104]
[192.26864624 684.34100342]
[214.09999084 669.66503906]
[211.89903259 654.82739258]
[209.69807434 639.98974609]
[207.49713135 625.15209961]
[205.29617310 610.31445312]
[203.09521484 595.47680664]
[191.46290588 582.32073975]
[198.41090393 565.25347900]
[196.02804565 550.44396973]
[193.64517212 535.63439941]
[191.26229858 520.82489014]
[188.87942505 506.01538086]
[186.49655151 491.20587158]
[176.83567810 479.86932373]
[182.28245544 465.01528931]
[179.89958191 450.20574951]
[177.51670837 435.39624023]
[175.13383484 420.58670044]
[172.75096130 405.77719116]
[169.55430603 391.12176514]
[165.55361938 376.66513062]
[161.55291748 362.20849609]
[156.75381470 356.61630249]
[157.59300232 347.54986572]
[153.77001953 333.04522705]
[143.04449463 322.71020508]
[147.00909424 307.39379883]
[143.18609619 292.88916016]
[139.36311340 278.38449097]
[135.54013062 263.87985229]
[131.71714783 249.37521362]
[127.89416504 234.87055969]
[124.07117462 220.36592102]
[120.24819183 205.86126709]
[104.75409698 200.39874268]
[95.48474884 186.63354492]
[96.26484680 169.89010620]
[106.98461914 156.78884888]
[102.98393250 142.33219910]
[98.98323822 127.87556458]
[94.98255157 113.41892242]
[84.84115601 102.36667633]
[70.78107452 97.14039612]
[56.72098541 91.91411591]
[42.66090012 86.68783569]
[28.60081673 81.46155548]
[12.53089714 84.73106384]
[1.86858606 72.27124786]
[7.58235550 56.89968491]
[23.79436874 54.42932892]
[33.82709503 67.40146637]
[47.88718033 72.62774658]
[61.94726562 77.85402679]
[76.00735474 83.08030701]
[90.06743622 88.30658722]
[95.27222443 82.90657043]
[84.47218323 72.49700165]
[73.67214966 62.08742523]
[62.87211227 51.67785263]
[52.07207489 41.26828384]
[41.27220917 30.85853195]
[51.68214035 20.05883980]
[62.48164368 30.46824455]
[73.28168488 40.87781525]
[84.08171844 51.28738785]
[94.88175964 61.69696045]
[105.68179321 72.10652924]
[110.88658142 66.70651245]
[105.14633179 52.84832001]
[99.40608215 38.99012756]
[93.66582489 25.13193512]
[87.92557526 11.27374172]
[82.18532562 -2.58445120]
[76.44507599 -16.44264412]
[61.27206802 -16.06274414]
[46.98774719 -21.19330025]
[35.52394485 -31.14044762]
[28.43105507 -44.55891800]
[26.66832352 -59.63396835]
[30.47415161 -74.32682800]
[39.33382797 -86.65040588]
[52.04915619 -94.93804169]
[66.90048981 -98.06889343]
[81.87931824 -95.61954498]
[94.95986176 -87.92124939]
[104.37309265 -76.01514435]
[108.84595490 -61.51141739]
[107.77352142 -46.37159348]
[101.30083466 -32.64319992]
[90.30326843 -22.18289566]
[96.04351807 -8.32470226]
[101.78376770 5.53349018]
[107.52401733 19.39168358]
[113.26427460 33.24987793]
[119.00452423 47.10807037]
[124.74477386 60.96626282]
[139.74449158 61.05830002]
[145.65437317 47.27159119]
[151.56425476 33.48488617]
[157.47413635 19.69817734]
[163.38401794 5.91146946]
[169.29389954 -7.87523842]
[167.61959839 -23.60760307]
[179.74549866 -32.25698090]
[185.65538025 -46.04368591]
[191.56526184 -59.83039474]
[197.47514343 -73.61710358]
[203.38502502 -87.40380859]
[200.79225159 -105.64783478]
[215.27261353 -115.58321381]
[221.01286316 -129.44140625]
[216.22657776 -144.75386047]
[225.33312988 -157.96182251]
[241.34674072 -158.93328857]
[251.98313904 -146.92301941]
[249.08300781 -131.14427185]
[234.87104797 -123.70115662]
[229.13079834 -109.84296417]
[233.46694946 -98.56949615]
[228.82073975 -86.98765564]
[217.17172241 -81.49392700]
[211.26184082 -67.70722198]
[205.35195923 -53.92051315]
[199.44209290 -40.13380814]
[193.53221130 -26.34709930]
[195.62922668 -11.60085297]
[183.08059692 -1.96535766]
[177.17071533 11.82135010]
[171.26084900 25.60805702]
[165.35096741 39.39476395]
[159.44108582 53.18147278]
[153.53120422 66.96817780]
[109.43918610 109.41822815]
[113.43988037 123.87487030]
[117.44057465 138.33151245]
[121.44126129 152.78814697]
[134.65861511 156.64123535]
[144.17596436 166.43913269]
[147.58901978 179.55349731]
[144.11143494 192.53898621]
[134.75283813 202.03828430]
[138.57582092 216.54293823]
[142.39880371 231.04757690]
[146.22180176 245.55223083]
[150.04478455 260.05688477]
[153.86776733 274.56152344]
[157.69075012 289.06616211]
[161.51373291 303.57080078]
[172.51271057 314.94329834]
[168.27467346 329.22222900]
[172.09765625 343.72686768]
[176.00956726 358.20779419]
[180.01025391 372.66442871]
[184.01094055 387.12106323]
[189.61375427 373.20675659]
[201.79873657 364.45883179]
[216.77410889 363.59954834]
[229.87973022 370.89630127]
[237.03730774 384.07846069]
[236.01950073 399.04388428]
[227.14305115 411.13555908]
[213.17018127 416.59072876]
[198.44903564 413.71179199]
[187.56048584 403.39431763]
[189.94335938 418.20382690]
[192.32623291 433.01336670]
[194.70910645 447.82287598]
[197.09196472 462.63241577]
[206.92329407 475.02819824]
[201.30607605 488.82299805]
[203.68894958 503.63250732]
[206.07182312 518.44201660]
[208.45468140 533.25152588]
[210.83755493 548.06109619]
[213.22042847 562.87060547]
[223.18547058 571.03015137]
[224.87828064 583.39385986]
[217.93286133 593.27587891]
[220.13381958 608.11352539]
[222.33477783 622.95117188]
[224.53573608 637.78881836]
[226.73667908 652.62646484]
[228.93763733 667.46411133]
[236.47795105 668.18658447]
[243.80229187 670.09649658]
[250.72505188 673.14355469]
[257.07113647 677.24865723]
[262.68023682 682.30615234]
[267.41110229 688.18621826]
[271.14492798 694.73840332]
[273.78839111 701.79528809]
[275.27600098 709.17706299]
[275.57174683 716.69586182]
[274.66983032 724.16064453]
[272.59497070 731.38189697]
[269.40158081 738.17675781]
[265.17233276 744.37335205]
[260.01617432 749.81530762]
[254.06533813 754.36553955]
[247.47209167 757.90991211]
[251.29508972 772.41455078]
[255.11807251 786.91918945]
[258.94104004 801.42382812]
[262.76403809 815.92846680]
[279.49475098 824.86364746]
[284.27026367 842.88867188]
[274.49951172 858.39349365]
[278.67730713 872.79998779]
[282.85510254 887.20642090]
[287.03289795 901.61285400]
[301.67514038 906.74938965]
[310.47412109 919.53051758]
[310.04641724 935.04168701]
[300.55648804 947.31854248]
[285.65341187 951.64038086]
[271.06771851 946.34533691]
[262.40792847 933.46948242]
[263.00387573 917.96386719]
[272.62643433 905.79064941]
[268.44863892 891.38421631]
[264.27084351 876.97778320]
[260.09304810 862.57128906]
[249.17393494 859.38085938]
[241.05752563 851.24041748]
[237.83291626 840.08197021]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 234]
[2 233]
[3 232]
[4 231]
[5 230]
[8 27]
[9 26]
[10 25]
[11 24]
[12 23]
[14 21]
[15 20]
[31 213]
[32 212]
[33 211]
[34 210]
[35 209]
[36 208]
[38 205]
[39 204]
[40 203]
[41 202]
[42 201]
[43 200]
[45 198]
[46 197]
[47 196]
[48 195]
[49 194]
[50 184]
[51 183]
[52 182]
[54 181]
[55 180]
[57 178]
[58 177]
[59 176]
[60 175]
[61 174]
[62 173]
[63 172]
[64 171]
[68 166]
[69 165]
[70 164]
[71 163]
[72 85]
[73 84]
[74 83]
[75 82]
[76 81]
[98 126]
[99 125]
[100 124]
[101 123]
[102 122]
[103 121]
[104 120]
[127 162]
[128 161]
[129 160]
[130 159]
[131 158]
[132 157]
[134 155]
[135 154]
[136 153]
[137 152]
[138 151]
[140 148]
[141 147]
[237 252]
[238 251]
[239 250]
[240 249]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
