%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:18:29 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (F7)
} def

/sequence { (\
GUCAGUCCCAUGGGGAAUGUCAACAGGCAGGGGCAGCACUGCAGAGAUUUCAUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.014211936 ubox
1 18 0.027086788 ubox
1 20 0.056082618 ubox
1 24 0.271777249 ubox
1 28 0.012431482 ubox
1 34 0.029052607 ubox
1 37 0.103518171 ubox
1 39 0.039726645 ubox
1 42 0.044944548 ubox
1 48 0.071235499 ubox
1 53 0.010951315 ubox
2 10 0.014440929 ubox
2 13 0.344206150 ubox
2 14 0.006756364 ubox
2 16 0.009673146 ubox
2 17 0.028131651 ubox
2 19 0.009659925 ubox
2 23 0.268293955 ubox
2 27 0.012435330 ubox
2 31 0.004869697 ubox
2 32 0.004959140 ubox
2 33 0.029004626 ubox
2 36 0.101908841 ubox
2 38 0.038430243 ubox
2 41 0.016284032 ubox
2 45 0.040395844 ubox
2 47 0.079029197 ubox
2 52 0.011562154 ubox
3 12 0.438848902 ubox
3 13 0.033102718 ubox
3 14 0.005484403 ubox
3 15 0.010649061 ubox
3 19 0.484178580 ubox
3 26 0.015250996 ubox
3 30 0.006214112 ubox
3 31 0.006329904 ubox
3 32 0.028980031 ubox
3 41 0.046996954 ubox
3 44 0.043039724 ubox
3 46 0.080215934 ubox
4 11 0.429652594 ubox
4 18 0.480895202 ubox
4 40 0.047795416 ubox
4 49 0.020167580 ubox
4 50 0.005591690 ubox
5 11 0.022401828 ubox
5 18 0.064706489 ubox
5 20 0.021617991 ubox
5 24 0.017194933 ubox
5 28 0.006518145 ubox
5 34 0.190823319 ubox
5 37 0.004196864 ubox
5 39 0.044844935 ubox
5 42 0.004412844 ubox
5 48 0.023927100 ubox
5 49 0.004776043 ubox
5 53 0.011133719 ubox
6 10 0.025247099 ubox
6 13 0.038605546 ubox
6 14 0.051770494 ubox
6 15 0.039677828 ubox
6 16 0.618785768 ubox
6 17 0.049232986 ubox
6 23 0.012629756 ubox
6 27 0.005794924 ubox
6 32 0.004503694 ubox
6 33 0.191307568 ubox
6 36 0.003968296 ubox
6 38 0.039574570 ubox
6 45 0.004251033 ubox
6 47 0.024079852 ubox
6 52 0.010987737 ubox
7 12 0.048132601 ubox
7 13 0.270767913 ubox
7 14 0.086522458 ubox
7 15 0.682057010 ubox
7 26 0.006515484 ubox
7 27 0.004764837 ubox
7 31 0.005817376 ubox
7 32 0.194024416 ubox
7 33 0.025870772 ubox
7 44 0.004385205 ubox
7 46 0.023813258 ubox
8 12 0.269431828 ubox
8 13 0.093010084 ubox
8 14 0.683214660 ubox
8 15 0.042750951 ubox
8 26 0.006145733 ubox
8 27 0.015546569 ubox
8 30 0.005800925 ubox
8 31 0.194016275 ubox
8 32 0.025893667 ubox
9 13 0.678490846 ubox
9 14 0.043679334 ubox
9 19 0.013507991 ubox
9 26 0.019901005 ubox
9 30 0.193587698 ubox
9 31 0.025720982 ubox
10 18 0.017420061 ubox
10 53 0.073004343 ubox
11 17 0.019343736 ubox
11 22 0.014204921 ubox
11 25 0.078930700 ubox
11 29 0.085052173 ubox
11 35 0.015926282 ubox
11 43 0.018731744 ubox
11 52 0.077555605 ubox
12 18 0.003456691 ubox
12 21 0.015048303 ubox
12 24 0.082537632 ubox
12 28 0.085189290 ubox
12 34 0.016019222 ubox
12 42 0.018917574 ubox
12 51 0.073742019 ubox
12 54 0.133135305 ubox
13 20 0.014165602 ubox
13 21 0.009236372 ubox
13 40 0.004742765 ubox
13 50 0.054506327 ubox
13 51 0.042574306 ubox
13 53 0.129452473 ubox
13 54 0.023931242 ubox
14 20 0.008868106 ubox
14 21 0.010330056 ubox
14 39 0.004992653 ubox
14 40 0.018504342 ubox
14 49 0.036887065 ubox
14 50 0.036088857 ubox
14 51 0.679805899 ubox
14 53 0.016819316 ubox
14 54 0.005231738 ubox
15 20 0.007676114 ubox
15 21 0.083718339 ubox
15 39 0.018493755 ubox
15 48 0.019929921 ubox
15 49 0.027146095 ubox
15 50 0.689410892 ubox
15 51 0.084500212 ubox
15 53 0.003786630 ubox
15 54 0.008814613 ubox
16 20 0.072849854 ubox
16 48 0.020212181 ubox
16 49 0.709506176 ubox
16 50 0.079738869 ubox
16 53 0.008967503 ubox
17 48 0.739563409 ubox
17 49 0.068380853 ubox
17 53 0.195647182 ubox
18 25 0.070992496 ubox
18 29 0.171410996 ubox
18 35 0.021691500 ubox
18 43 0.010316365 ubox
18 47 0.740038682 ubox
18 52 0.209088398 ubox
19 24 0.074850624 ubox
19 28 0.177364877 ubox
19 34 0.022435174 ubox
19 42 0.011360670 ubox
19 48 0.180095272 ubox
19 51 0.212654753 ubox
19 53 0.007036220 ubox
20 27 0.177370695 ubox
20 33 0.022389034 ubox
20 41 0.008327025 ubox
20 45 0.750681964 ubox
20 47 0.217067412 ubox
20 52 0.008108841 ubox
21 26 0.185229753 ubox
21 30 0.004179401 ubox
21 32 0.022262177 ubox
21 41 0.004243601 ubox
21 44 0.752066705 ubox
21 46 0.222278970 ubox
22 40 0.004129429 ubox
22 49 0.033584655 ubox
22 50 0.013751136 ubox
23 48 0.033172592 ubox
23 49 0.014348212 ubox
24 41 0.715400312 ubox
25 40 0.716128919 ubox
25 49 0.007383479 ubox
25 50 0.005866082 ubox
26 39 0.715155570 ubox
26 48 0.008711254 ubox
26 49 0.006798355 ubox
26 51 0.012090653 ubox
26 54 0.004829924 ubox
27 34 0.074311283 ubox
27 37 0.707107708 ubox
27 42 0.662253688 ubox
27 50 0.003700635 ubox
28 33 0.074349580 ubox
28 36 0.707242312 ubox
28 41 0.662972712 ubox
29 40 0.662654686 ubox
30 39 0.662370366 ubox
30 40 0.012835077 ubox
30 48 0.003389895 ubox
30 51 0.007075557 ubox
31 39 0.024157296 ubox
31 40 0.014384633 ubox
31 50 0.006911928 ubox
31 51 0.003677934 ubox
32 39 0.017775000 ubox
32 40 0.003271845 ubox
32 49 0.006667661 ubox
32 50 0.003585800 ubox
33 39 0.003790409 ubox
33 42 0.079694343 ubox
34 41 0.079793587 ubox
35 40 0.071932091 ubox
35 49 0.004039561 ubox
35 50 0.006245494 ubox
36 42 0.085048047 ubox
36 48 0.004298327 ubox
36 49 0.006735426 ubox
37 41 0.084517886 ubox
39 46 0.068010499 ubox
40 45 0.067810433 ubox
40 52 0.015709792 ubox
41 51 0.017356110 ubox
43 49 0.013990967 ubox
43 50 0.021240278 ubox
44 48 0.010935241 ubox
44 49 0.019791287 ubox
44 50 0.017136226 ubox
44 51 0.207021821 ubox
44 54 0.086735040 ubox
45 49 0.016162690 ubox
45 50 0.193860849 ubox
45 53 0.086863098 ubox
46 54 0.100718619 ubox
47 53 0.100452580 ubox
48 52 0.089205668 ubox
14 51 0.9500000 lbox
15 50 0.9500000 lbox
16 49 0.9500000 lbox
17 48 0.9500000 lbox
18 47 0.9500000 lbox
20 45 0.9500000 lbox
21 44 0.9500000 lbox
24 41 0.9500000 lbox
25 40 0.9500000 lbox
26 39 0.9500000 lbox
27 37 0.9500000 lbox
28 36 0.9500000 lbox
showpage
end
%%EOF
