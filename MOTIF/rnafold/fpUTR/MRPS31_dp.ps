%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:58:05 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MRPS31)
} def

/sequence { (\
AGAGAGGGCGGGGACGUGUUUGGCAGCGGGACGCACCAUUUCAGUUGUGUUCUUGGUUCAUUUCGUGUCUCGGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 21 0.005658596 ubox
2 63 0.003403541 ubox
2 64 0.015187312 ubox
2 71 0.027681264 ubox
3 20 0.005572315 ubox
3 21 0.016906023 ubox
3 62 0.003673925 ubox
3 63 0.015234702 ubox
3 70 0.027648774 ubox
4 19 0.003694232 ubox
4 20 0.016415642 ubox
4 21 0.116279522 ubox
4 59 0.003166048 ubox
4 61 0.003696483 ubox
4 62 0.015209477 ubox
4 69 0.027523196 ubox
4 71 0.023932145 ubox
5 19 0.015408825 ubox
5 20 0.125738036 ubox
5 21 0.007640643 ubox
5 61 0.015070673 ubox
5 68 0.026938444 ubox
5 70 0.023231951 ubox
6 19 0.128514946 ubox
6 20 0.007211139 ubox
6 21 0.005880597 ubox
6 58 0.005497534 ubox
6 59 0.016042240 ubox
6 69 0.019885119 ubox
6 70 0.015326038 ubox
6 71 0.005855308 ubox
7 19 0.005056999 ubox
7 20 0.007414362 ubox
7 57 0.006665874 ubox
7 58 0.016001772 ubox
7 68 0.014383083 ubox
7 69 0.020732005 ubox
7 70 0.003695648 ubox
8 17 0.131858767 ubox
8 19 0.007953051 ubox
8 24 0.010876177 ubox
8 57 0.015836444 ubox
8 66 0.027362168 ubox
8 68 0.024278283 ubox
8 69 0.003656669 ubox
8 74 0.988736737 ubox
9 16 0.132061321 ubox
9 18 0.008016330 ubox
9 23 0.010840860 ubox
9 55 0.011235832 ubox
9 56 0.014151581 ubox
9 65 0.027718720 ubox
9 67 0.027596593 ubox
9 72 0.033579059 ubox
9 73 0.988988209 ubox
9 75 0.004986572 ubox
10 15 0.131708055 ubox
10 17 0.007396106 ubox
10 54 0.013302027 ubox
10 64 0.027601114 ubox
10 66 0.027447165 ubox
10 70 0.014310941 ubox
10 71 0.039199223 ubox
10 74 0.005275084 ubox
11 21 0.010208069 ubox
11 53 0.015199009 ubox
11 54 0.009738381 ubox
11 63 0.026605351 ubox
11 69 0.021003452 ubox
11 70 0.035638632 ubox
11 71 0.987257748 ubox
12 20 0.009920229 ubox
12 52 0.016021683 ubox
12 53 0.008550369 ubox
12 59 0.020228836 ubox
12 62 0.017283526 ubox
12 64 0.027297211 ubox
12 68 0.021048804 ubox
12 69 0.035156366 ubox
12 70 0.988611400 ubox
12 71 0.004807162 ubox
13 19 0.008475186 ubox
13 51 0.016026020 ubox
13 52 0.008501072 ubox
13 58 0.021100037 ubox
13 59 0.004359214 ubox
13 61 0.010057263 ubox
13 63 0.027036009 ubox
13 64 0.004342233 ubox
13 68 0.030772893 ubox
13 69 0.989305742 ubox
14 50 0.016858075 ubox
14 51 0.006394391 ubox
14 57 0.021422318 ubox
14 58 0.003772851 ubox
14 62 0.026296543 ubox
14 63 0.005002724 ubox
14 66 0.046261229 ubox
14 68 0.988899610 ubox
15 28 0.007915811 ubox
15 49 0.017644326 ubox
15 56 0.021454034 ubox
15 65 0.054965409 ubox
15 67 0.988397373 ubox
16 24 0.027362492 ubox
16 27 0.020390801 ubox
16 34 0.029023866 ubox
16 48 0.016131341 ubox
16 61 0.048885050 ubox
16 64 0.065565516 ubox
16 66 0.930221693 ubox
17 23 0.027262902 ubox
17 25 0.026437416 ubox
17 26 0.018098528 ubox
17 28 0.009132899 ubox
17 33 0.029064928 ubox
17 43 0.004018041 ubox
17 47 0.010368800 ubox
17 60 0.056448054 ubox
17 65 0.888777037 ubox
18 24 0.030454704 ubox
18 27 0.023870871 ubox
18 32 0.029146277 ubox
18 42 0.004078227 ubox
18 46 0.012432733 ubox
18 59 0.056512552 ubox
18 61 0.023254895 ubox
18 64 0.927231373 ubox
18 66 0.003508620 ubox
18 74 0.003320359 ubox
19 23 0.028510786 ubox
19 26 0.023625830 ubox
19 30 0.006998233 ubox
19 31 0.028283887 ubox
19 56 0.003942644 ubox
19 60 0.027636447 ubox
19 65 0.006903408 ubox
19 73 0.003303860 ubox
20 25 0.018646350 ubox
20 29 0.012511721 ubox
20 30 0.026166466 ubox
20 44 0.016120547 ubox
20 55 0.004217427 ubox
20 56 0.005225510 ubox
21 28 0.017129424 ubox
21 29 0.023293768 ubox
21 38 0.005379106 ubox
21 43 0.016541718 ubox
21 55 0.005021833 ubox
21 60 0.776174231 ubox
21 65 0.015936359 ubox
22 27 0.022943198 ubox
22 37 0.005628074 ubox
22 42 0.016587724 ubox
22 53 0.012347371 ubox
22 54 0.005318175 ubox
22 58 0.255652147 ubox
22 59 0.803268515 ubox
22 62 0.032790236 ubox
22 63 0.014789622 ubox
22 64 0.016508406 ubox
22 69 0.008274580 ubox
22 74 0.005519432 ubox
23 34 0.003702538 ubox
23 36 0.005623376 ubox
23 41 0.016050836 ubox
23 48 0.018824701 ubox
23 52 0.012726697 ubox
23 53 0.004746626 ubox
23 57 0.428180740 ubox
23 58 0.653646094 ubox
23 61 0.031675056 ubox
23 62 0.014636534 ubox
23 63 0.014780167 ubox
23 68 0.008451203 ubox
23 74 0.105631848 ubox
24 33 0.003714567 ubox
24 47 0.019091516 ubox
24 55 0.222801237 ubox
24 56 0.528681831 ubox
24 67 0.008538586 ubox
24 73 0.105373543 ubox
25 40 0.014557698 ubox
25 46 0.019077742 ubox
25 51 0.020774715 ubox
25 53 0.007121519 ubox
25 54 0.222462377 ubox
25 58 0.279938674 ubox
25 66 0.007015412 ubox
26 34 0.014928338 ubox
26 39 0.014814499 ubox
26 45 0.019083184 ubox
26 50 0.022911929 ubox
26 52 0.007138193 ubox
26 53 0.091228761 ubox
26 57 0.389935228 ubox
26 66 0.028061707 ubox
26 74 0.057692985 ubox
27 33 0.014943649 ubox
27 44 0.019059870 ubox
27 49 0.023200901 ubox
27 55 0.561392754 ubox
27 56 0.385528834 ubox
27 65 0.030958322 ubox
27 72 0.123264778 ubox
27 73 0.042341982 ubox
28 32 0.013981083 ubox
28 37 0.017730643 ubox
28 42 0.007233417 ubox
28 48 0.023145570 ubox
28 51 0.004221725 ubox
28 52 0.033619779 ubox
28 53 0.786947986 ubox
28 54 0.516151737 ubox
28 64 0.031009075 ubox
28 71 0.131511614 ubox
29 36 0.017731508 ubox
29 41 0.007227125 ubox
29 42 0.015207488 ubox
29 50 0.004103384 ubox
29 51 0.025942793 ubox
29 52 0.867973968 ubox
29 53 0.465694562 ubox
29 54 0.067565880 ubox
29 59 0.003477612 ubox
29 63 0.030675277 ubox
29 70 0.131717318 ubox
29 71 0.013747722 ubox
30 40 0.007155583 ubox
30 41 0.015390388 ubox
30 42 0.003366739 ubox
30 46 0.023162064 ubox
30 50 0.014383748 ubox
30 51 0.870100713 ubox
30 52 0.467333338 ubox
30 53 0.032034602 ubox
30 58 0.003531224 ubox
30 62 0.030322608 ubox
30 69 0.132519560 ubox
31 39 0.006784124 ubox
31 40 0.015122067 ubox
31 41 0.003180739 ubox
31 45 0.023212619 ubox
31 48 0.004957648 ubox
31 50 0.909056035 ubox
31 51 0.385148627 ubox
31 57 0.003526224 ubox
31 61 0.029277150 ubox
31 68 0.132511787 ubox
32 44 0.023216204 ubox
32 47 0.005428447 ubox
32 49 0.945890644 ubox
32 56 0.003511395 ubox
32 67 0.132519399 ubox
33 45 0.005812098 ubox
33 46 0.004897047 ubox
33 48 0.945597519 ubox
33 50 0.286146704 ubox
33 66 0.132446866 ubox
34 44 0.006564845 ubox
34 47 0.945736561 ubox
34 49 0.289656711 ubox
34 65 0.132420333 ubox
35 45 0.464643387 ubox
35 46 0.776418586 ubox
35 48 0.289517148 ubox
35 50 0.012491422 ubox
35 57 0.137423077 ubox
36 44 0.657584536 ubox
36 47 0.278854994 ubox
36 49 0.012483317 ubox
36 56 0.139141851 ubox
37 47 0.078748743 ubox
37 49 0.005486192 ubox
37 55 0.139145352 ubox
38 45 0.300031942 ubox
38 46 0.109097879 ubox
38 48 0.006107655 ubox
38 54 0.137377718 ubox
38 61 0.004740995 ubox
39 44 0.291310641 ubox
39 47 0.006325680 ubox
39 60 0.004739752 ubox
41 56 0.011671104 ubox
42 49 0.127959685 ubox
42 55 0.012307994 ubox
43 48 0.122845303 ubox
43 51 0.004277516 ubox
43 53 0.019282729 ubox
43 54 0.011828609 ubox
44 50 0.003986226 ubox
44 52 0.019671566 ubox
44 53 0.010926708 ubox
54 60 0.006535739 ubox
54 65 0.020408384 ubox
55 59 0.007148061 ubox
55 64 0.029443470 ubox
56 62 0.003544624 ubox
56 63 0.027405717 ubox
60 66 0.004347689 ubox
61 65 0.004173575 ubox
64 72 0.003703196 ubox
64 75 0.005464888 ubox
65 71 0.003948158 ubox
65 74 0.010751947 ubox
66 73 0.010660927 ubox
67 74 0.004868844 ubox
68 73 0.004638581 ubox
8 74 0.9500000 lbox
9 73 0.9500000 lbox
11 71 0.9500000 lbox
12 70 0.9500000 lbox
13 69 0.9500000 lbox
14 68 0.9500000 lbox
15 67 0.9500000 lbox
16 66 0.9500000 lbox
17 65 0.9500000 lbox
18 64 0.9500000 lbox
21 60 0.9500000 lbox
22 59 0.9500000 lbox
23 58 0.9500000 lbox
28 53 0.9500000 lbox
29 52 0.9500000 lbox
30 51 0.9500000 lbox
31 50 0.9500000 lbox
32 49 0.9500000 lbox
33 48 0.9500000 lbox
34 47 0.9500000 lbox
35 46 0.9500000 lbox
showpage
end
%%EOF
