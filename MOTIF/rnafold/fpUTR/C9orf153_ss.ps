%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:26:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCUGGGCCUUGGGGCUGCUGGAUGAAUGAGACCCAGCCUCUGCCCUGGGAGUGCAGAGACUCAAGACAGAUAUGACCACGUGAAGAGACAACUGUAAAACAAGUGUGGUUGCCCUAGAGUUUGCAGUAUAUGUUUACAACUAACCCAAGACCACUUUCAAAUUACACUACACCUUGCAGGCAGUGAAUUAGAGAAUAAAAUCCCAGCACG\
) } def
/len { sequence length } bind def

/coor [
[104.37551880 260.15805054]
[96.62397766 246.57688904]
[99.46659851 231.19984436]
[111.56118011 221.28747559]
[111.56118011 206.28747559]
[111.56118011 191.28747559]
[111.56118011 176.28747559]
[111.56118011 161.28747559]
[111.56118011 146.28747559]
[83.82057190 138.48205566]
[69.12889099 118.08913422]
[70.37327576 96.64582825]
[56.37220001 91.26345825]
[42.37112808 85.88108063]
[28.37005424 80.49871063]
[14.36897945 75.11634064]
[0.36790487 69.73397064]
[-13.63316917 64.35160065]
[-13.76995087 87.95397949]
[-32.87558746 110.50763702]
[-44.44450760 120.05541229]
[-56.01342773 129.60319519]
[-67.58235168 139.15097046]
[-79.15126801 148.69874573]
[-75.94838715 163.66539001]
[-80.07889557 178.40301514]
[-90.59362030 189.52502441]
[-105.07635498 194.47566223]
[-120.19908142 192.11732483]
[-132.48669434 182.99192810]
[-139.11561584 169.19641113]
[-138.56253052 153.90089417]
[-130.95457458 140.62017822]
[-118.03997040 132.40606689]
[-102.78640747 131.14611816]
[-88.69905090 137.12983704]
[-77.13012695 127.58205414]
[-65.56121063 118.03427124]
[-53.99228668 108.48649597]
[-42.42337036 98.93871307]
[-48.01069260 85.01815796]
[-62.97030258 86.11819458]
[-77.92990875 87.21823883]
[-92.88951874 88.31827545]
[-107.84912872 89.41831207]
[-122.80873871 90.51834869]
[-136.00433350 99.24685669]
[-149.26475525 92.46376038]
[-164.22436523 93.56379700]
[-179.57743835 100.75543213]
[-190.73817444 87.99320221]
[-181.56430054 73.73570251]
[-165.32440186 78.60418701]
[-150.36479187 77.50415039]
[-138.23921204 68.85431671]
[-123.90877533 75.55873871]
[-108.94916534 74.45870209]
[-93.98955536 73.35866547]
[-79.02994537 72.25862885]
[-64.07034302 71.15859222]
[-49.11072922 70.05854797]
[-45.04750824 63.75456619]
[-58.70318604 57.54792023]
[-72.35886383 51.34127426]
[-86.01454163 45.13463211]
[-100.98428345 46.08686066]
[-113.63697815 38.03022003]
[-119.10674286 24.06305695]
[-115.29008484 9.55674553]
[-103.65476227 0.08999523]
[-88.67539978 -0.69655365]
[-76.11262512 7.49958324]
[-70.79772949 21.52614594]
[-59.50550842 31.39962959]
[-48.21328354 41.27311325]
[-36.92106247 51.14659882]
[-32.85783768 44.84261322]
[-38.03409576 30.76403618]
[-43.21035385 16.68545914]
[-48.38661194 2.60688043]
[-53.56287003 -11.47169685]
[-58.73912811 -25.55027580]
[-65.43099976 -38.97483444]
[-73.55744934 -51.58280563]
[-89.05603790 -54.67623901]
[-97.75817871 -67.86897278]
[-94.50106049 -83.33398438]
[-81.21706390 -91.89616394]
[-65.78734589 -88.47572327]
[-57.36609268 -75.10194397]
[-60.94947815 -59.70925140]
[-52.82303238 -47.10128021]
[-45.86275482 -49.89494324]
[-24.98192596 -58.27593231]
[-27.82724571 -73.00359344]
[-30.67256737 -87.73126221]
[-44.78483963 -94.18288422]
[-52.38039780 -107.71385193]
[-50.53859711 -123.12123108]
[-39.96764755 -134.48057556]
[-24.73229408 -137.42398071]
[-10.69084167 -130.81964111]
[-3.24251390 -117.20707703]
[-5.25134611 -101.82057953]
[-15.94490051 -90.57658386]
[-13.09957981 -75.84891510]
[-10.25425911 -61.12125015]
[-44.66055298 -30.72653389]
[-39.48429489 -16.64795494]
[-34.30803680 -2.56937766]
[-29.13177681 11.50920010]
[-23.95551872 25.58777809]
[-18.77926064 39.66635513]
[-8.25079823 50.35052490]
[5.75027609 55.73289490]
[19.75135040 61.11526871]
[33.75242615 66.49764252]
[47.75349808 71.88001251]
[61.75457382 77.26238251]
[75.75564575 82.64475250]
[103.01768494 61.35492325]
[142.63465881 78.58789825]
[152.35122681 67.16038513]
[151.26312256 51.62160492]
[161.27989197 40.17089844]
[176.10046387 39.22930527]
[185.81703186 27.80179214]
[195.53361511 16.37427902]
[195.67807007 0.33187553]
[208.39891052 -9.44360447]
[223.93777466 -5.45324993]
[230.37460327 9.24188042]
[222.77159119 23.36894035]
[206.96113586 26.09085846]
[197.24455261 37.51837158]
[187.52796936 48.94588470]
[188.98152161 63.72501755]
[179.29031372 75.45256042]
[163.77874756 76.87696838]
[154.06216431 88.30448151]
[155.43074036 95.67855835]
[169.43647766 90.30834961]
[183.44223022 84.93814087]
[197.44796753 79.56793213]
[211.45370483 74.19772339]
[223.21070862 64.88251495]
[238.16003418 63.65052414]
[251.28340149 70.91529846]
[258.17550659 84.23816681]
[256.52279663 99.14683533]
[246.88000488 110.63669586]
[232.48411560 114.85075378]
[218.16786194 110.37460327]
[203.16786194 110.38763428]
[188.16786194 110.40065765]
[173.16787720 110.41368866]
[158.16787720 110.42671204]
[159.53645325 117.80078888]
[172.70642090 124.98073578]
[185.87640381 132.16069031]
[199.04638672 139.34063721]
[214.86648560 139.15293884]
[222.33744812 152.03834534]
[235.50741577 159.21829224]
[248.67739868 166.39823914]
[261.84738159 173.57818604]
[270.87771606 174.93771362]
[275.15686035 180.96144104]
[288.22003174 188.33393860]
[301.28317261 195.70645142]
[314.34634399 203.07896423]
[324.63568115 199.56109619]
[334.95043945 202.23049927]
[341.94689941 209.97254944]
[343.49487305 220.07006836]
[356.33596802 227.82287598]
[369.17706299 235.57569885]
[385.86160278 238.58612061]
[387.58755493 255.45198059]
[371.85861206 261.77941895]
[361.42425537 248.41679382]
[348.58312988 240.66398621]
[335.74203491 232.91116333]
[316.43225098 233.94551086]
[306.97384644 216.14212036]
[293.91067505 208.76960754]
[280.84750366 201.39709473]
[267.78436279 194.02459717]
[254.66743469 186.74816895]
[241.49745178 179.56822205]
[228.32746887 172.38827515]
[215.15750122 165.20832825]
[200.27940369 165.90959167]
[191.86643982 152.51062012]
[178.69645691 145.33067322]
[165.52647400 138.15071106]
[152.35650635 130.97076416]
[145.90766907 134.79994202]
[154.02316284 147.41496277]
[164.97848511 157.66098022]
[158.90270996 171.37538147]
[143.95326233 170.14501953]
[140.20140076 155.62203979]
[133.01000977 142.45829773]
[126.56118011 146.28747559]
[126.56118011 161.28747559]
[126.56118011 176.28747559]
[126.56118011 191.28747559]
[126.56118011 206.28747559]
[126.56118011 221.28747559]
[138.65576172 231.19984436]
[141.49838257 246.57688904]
[133.74684143 260.15805054]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 210]
[5 209]
[6 208]
[7 207]
[8 206]
[9 205]
[12 120]
[13 119]
[14 118]
[15 117]
[16 116]
[17 115]
[18 114]
[20 40]
[21 39]
[22 38]
[23 37]
[24 36]
[41 61]
[42 60]
[43 59]
[44 58]
[45 57]
[46 56]
[48 54]
[49 53]
[77 113]
[78 112]
[79 111]
[80 110]
[81 109]
[82 108]
[83 92]
[84 91]
[94 107]
[95 106]
[96 105]
[122 140]
[123 139]
[126 136]
[127 135]
[128 134]
[158 197]
[159 196]
[160 195]
[161 194]
[163 192]
[164 191]
[165 190]
[166 189]
[168 188]
[169 187]
[170 186]
[171 185]
[175 183]
[176 182]
[177 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
