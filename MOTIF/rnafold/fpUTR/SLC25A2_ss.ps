%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:00:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGGGGGCGGCCCGCGGCGGAGCGUAGGGUUGAGCGGCUUCCCCCGCACUGGGGUGAGAGCCCAGAACAGGCGGUAGAGCCACCCCACCACCCCCAACUCCAUUCCCCGCGCUCGCUGCGGCUGGACGUGAAAAGCCGGUCUCACGCUCUGGGGAGUUAGUCGCCUUCCACUGGGACCCUCAGACGAGUGAGCGAAC\
) } def
/len { sequence length } bind def

/coor [
[216.43028259 110.85385895]
[201.45317078 110.02546692]
[186.47607422 109.19708252]
[171.48355103 108.72354889]
[156.48400879 108.60514832]
[141.48448181 108.48674774]
[126.48494720 108.36834717]
[111.48541260 108.24994659]
[97.97822571 114.77343750]
[88.74537659 126.59522247]
[79.51252747 138.41700745]
[70.27967834 150.23878479]
[61.04683304 162.06056213]
[51.81398392 173.88233948]
[42.67473602 185.77664185]
[33.62966156 197.74269104]
[24.58458519 209.70875549]
[27.00875092 225.32601929]
[17.61251259 238.03375244]
[1.97049081 240.29266357]
[-10.63718033 230.76258850]
[-12.73059273 215.09756470]
[-3.06776285 202.59135437]
[12.61852455 200.66368103]
[21.66360092 188.69761658]
[30.70867729 176.73156738]
[32.23568726 169.49281311]
[39.99220276 164.64949036]
[49.22505188 152.82771301]
[58.45790100 141.00593567]
[67.69075012 129.18415833]
[76.92359924 117.36237335]
[86.15644836 105.54059601]
[83.94039917 98.37545776]
[69.31390381 95.04894257]
[79.50829315 84.04519653]
[77.29224396 76.88006592]
[62.99740982 72.33498383]
[48.70257568 67.78990936]
[34.40774155 63.24483109]
[20.11290932 58.69975281]
[8.93739891 66.22841644]
[-4.33985949 65.94694519]
[-14.87281704 58.18231964]
[-18.94620132 45.95187378]
[-33.16750336 41.18169785]
[-47.38880539 36.41152573]
[-61.61011124 31.64135361]
[-70.75150299 31.87847328]
[-76.01721954 26.68199921]
[-90.16145325 21.68791962]
[-104.30567932 16.69384003]
[-118.60050964 12.14876270]
[-133.03170776 8.05721760]
[-147.46289062 3.96567273]
[-161.89408875 -0.12587252]
[-177.65307617 4.41130590]
[-189.27253723 -7.16109037]
[-184.79934692 -22.93837166]
[-168.83514404 -26.69022369]
[-157.80253601 -14.55706310]
[-143.37135315 -10.46551800]
[-128.94015503 -6.37397242]
[-114.50896454 -2.28242731]
[-111.99249268 -3.53851771]
[-108.82447815 -3.86848450]
[-105.35700226 -3.01826143]
[-102.02780914 -0.86647409]
[-99.31159973 2.54961348]
[-85.16737366 7.54369307]
[-71.02313995 12.53777218]
[-56.83993530 17.42005157]
[-42.61863327 22.19022369]
[-28.39733124 26.96039772]
[-14.17602825 31.73056984]
[0.54120654 23.60079765]
[16.90827179 28.72699356]
[24.65798569 44.40491867]
[38.95281982 48.94999695]
[53.24765396 53.49507523]
[67.54248810 58.04015350]
[81.83731842 62.58523178]
[85.00298309 47.92308426]
[94.57756042 36.37633133]
[108.40018463 30.55094910]
[123.35124207 31.76165390]
[136.05645752 39.73520660]
[143.64840698 52.67206573]
[144.41366577 67.65253448]
[138.17955017 81.29568481]
[126.35299683 90.52242279]
[111.60381317 93.25041962]
[126.60334778 93.36882019]
[141.60287476 93.48722076]
[156.60241699 93.60562134]
[171.60194397 93.72402191]
[176.15859985 91.13777924]
[180.78797913 90.61684418]
[184.68898010 91.84156036]
[187.30445862 94.21997070]
[202.28157043 95.04836273]
[217.25868225 95.87675476]
[221.90016174 85.59302521]
[229.43766785 77.23331451]
[239.14167786 71.58245087]
[250.08039856 69.16426849]
[261.20916748 70.19309998]
[271.47018433 74.55487061]
[279.89315796 81.81948090]
[285.68695068 91.28318787]
[288.31393433 102.03673553]
[303.20889282 103.80861664]
[318.10388184 105.58049774]
[332.99887085 107.35237885]
[347.89385986 109.12425232]
[362.78881836 110.89613342]
[377.68380737 112.66801453]
[392.57879639 114.43989563]
[390.88793945 97.28853607]
[402.81893921 79.23399353]
[414.99581909 70.47478485]
[427.17269897 61.71557999]
[439.34957886 52.95637131]
[451.52645874 44.19716644]
[449.91354370 28.92319679]
[456.16839600 14.89562988]
[468.60842896 5.88781166]
[483.88739014 4.32279873]
[497.89529419 10.62157249]
[506.86407471 23.08979416]
[508.38116455 38.37357330]
[502.03851318 52.36165237]
[489.54226685 61.29130936]
[474.25378418 62.76050568]
[460.28567505 56.37404251]
[448.10879517 65.13324738]
[435.93191528 73.89245605]
[423.75503540 82.65166473]
[411.57815552 91.41086578]
[411.87408447 98.90502930]
[424.55847168 90.89839935]
[437.83456421 97.88018799]
[438.42611694 112.86852264]
[425.74154663 120.87487030]
[412.46594238 113.89334869]
[412.76187134 121.38750458]
[425.59152222 129.15925598]
[434.56253052 130.93190002]
[438.56097412 137.15632629]
[451.26632690 145.12965393]
[463.97171021 153.10296631]
[476.67706299 161.07627869]
[489.38241577 169.04960632]
[502.08776855 177.02291870]
[514.79315186 184.99624634]
[514.09924316 170.01229858]
[525.27398682 160.00607300]
[540.09063721 162.34403992]
[547.64135742 175.30503845]
[542.36724854 189.34727478]
[528.15100098 194.13294983]
[540.18811035 203.08328247]
[552.22521973 212.03363037]
[560.98834229 214.64680481]
[564.38018799 221.22149658]
[576.27447510 230.36074829]
[591.50354004 226.80975342]
[605.42877197 233.92466736]
[611.47509766 248.34603882]
[606.78759766 263.26452637]
[593.57965088 271.63610840]
[578.08752441 269.50793457]
[567.62622070 257.88491821]
[567.13519287 242.25503540]
[555.24090576 233.11578369]
[543.27484131 224.07070923]
[531.23779297 215.12037659]
[519.20068359 206.17002869]
[506.81982422 197.70159912]
[494.11447144 189.72828674]
[481.40911865 181.75495911]
[468.70373535 173.78164673]
[455.99838257 165.80833435]
[443.29302979 157.83500671]
[430.58767700 149.86169434]
[417.81976318 141.98890686]
[404.99011230 134.21714783]
[390.80691528 129.33486938]
[375.91192627 127.56299591]
[361.01693726 125.79111481]
[346.12197876 124.01923370]
[331.22698975 122.24736023]
[316.33200073 120.47547913]
[301.43701172 118.70359802]
[286.54205322 116.93171692]
[276.07122803 132.65728760]
[258.99465942 140.92861938]
[240.00154114 139.38232422]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 102]
[2 101]
[3 100]
[4 96]
[5 95]
[6 94]
[7 93]
[8 92]
[9 33]
[10 32]
[11 31]
[12 30]
[13 29]
[14 28]
[15 26]
[16 25]
[17 24]
[37 82]
[38 81]
[39 80]
[40 79]
[41 78]
[45 75]
[46 74]
[47 73]
[48 72]
[50 71]
[51 70]
[52 69]
[53 64]
[54 63]
[55 62]
[56 61]
[111 195]
[112 194]
[113 193]
[114 192]
[115 191]
[116 190]
[117 189]
[118 188]
[120 139]
[121 138]
[122 137]
[123 136]
[124 135]
[146 187]
[147 186]
[149 185]
[150 184]
[151 183]
[152 182]
[153 181]
[154 180]
[155 179]
[161 178]
[162 177]
[163 176]
[165 175]
[166 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
