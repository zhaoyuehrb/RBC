%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:08:01 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PON2)
} def

/sequence { (\
GGACUCGGCCUAGGCGGAGGACGGGGCGGAGCGCGGCCGGCACCAUCGAGCCGGGAAGAUGGCACCGCCCACGGAGCUGCUGGCCAGGCCGGAGCGAGGCAGCGCGCCCGGCUCCCGCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.003948171 ubox
1 85 0.006589296 ubox
1 90 0.468997509 ubox
1 115 0.027318519 ubox
1 116 0.068235513 ubox
1 121 0.097049396 ubox
2 9 0.003945978 ubox
2 84 0.006355255 ubox
2 89 0.466704771 ubox
2 114 0.027438387 ubox
2 115 0.067456578 ubox
2 120 0.097842092 ubox
3 113 0.021821033 ubox
4 19 0.011867172 ubox
4 83 0.005100409 ubox
4 87 0.482663685 ubox
4 88 0.385814785 ubox
4 92 0.018822576 ubox
4 94 0.006978254 ubox
5 18 0.011906996 ubox
5 86 0.488914933 ubox
5 87 0.381148185 ubox
5 88 0.022130236 ubox
5 91 0.003233009 ubox
5 92 0.057817126 ubox
5 93 0.010116187 ubox
6 17 0.011902098 ubox
6 82 0.005367193 ubox
6 87 0.100323460 ubox
6 91 0.112800775 ubox
6 92 0.007380539 ubox
6 117 0.005665054 ubox
6 119 0.008633455 ubox
7 81 0.005364418 ubox
7 85 0.982008739 ubox
7 90 0.183546973 ubox
7 121 0.003993142 ubox
8 15 0.011910630 ubox
8 80 0.005363782 ubox
8 84 0.982859095 ubox
8 89 0.183701088 ubox
8 120 0.004011924 ubox
9 14 0.011906825 ubox
9 79 0.005355671 ubox
9 83 0.982231956 ubox
9 88 0.183701940 ubox
9 119 0.003999148 ubox
10 82 0.978509991 ubox
10 83 0.034907286 ubox
10 87 0.183708480 ubox
11 82 0.047742983 ubox
11 86 0.181983071 ubox
12 81 0.215278195 ubox
13 78 0.037822666 ubox
13 80 0.155934032 ubox
13 81 0.886898039 ubox
13 85 0.181357707 ubox
14 77 0.038599923 ubox
14 80 0.969889002 ubox
14 84 0.181328290 ubox
15 76 0.038620449 ubox
15 79 0.982355468 ubox
15 82 0.104933648 ubox
15 83 0.148176579 ubox
16 78 0.981227110 ubox
16 81 0.147918799 ubox
17 77 0.980989629 ubox
17 80 0.157273777 ubox
18 78 0.164834347 ubox
18 81 0.015937191 ubox
19 77 0.166299784 ubox
19 78 0.064521367 ubox
19 80 0.016133890 ubox
20 77 0.068777092 ubox
22 73 0.983068144 ubox
23 70 0.005205290 ubox
23 72 0.980579203 ubox
23 121 0.007279904 ubox
24 69 0.004314639 ubox
24 70 0.999068929 ubox
24 120 0.007332253 ubox
25 69 0.999941943 ubox
25 70 0.004428803 ubox
26 68 0.999954759 ubox
26 69 0.003185702 ubox
26 118 0.007374898 ubox
27 67 0.999950497 ubox
27 117 0.007374856 ubox
28 66 0.999939201 ubox
28 115 0.003548304 ubox
28 116 0.006464189 ubox
29 65 0.997983210 ubox
29 114 0.005017033 ubox
29 115 0.005266341 ubox
30 113 0.006135052 ubox
31 41 0.004237488 ubox
31 63 0.987868845 ubox
31 112 0.006135968 ubox
32 40 0.004213321 ubox
32 61 0.090957825 ubox
32 62 0.985696390 ubox
32 111 0.006105402 ubox
33 41 0.007546995 ubox
33 60 0.107879177 ubox
33 63 0.133101451 ubox
34 40 0.007554011 ubox
34 53 0.032256860 ubox
34 61 0.308415687 ubox
34 62 0.132976564 ubox
35 52 0.033740128 ubox
35 60 0.220032847 ubox
35 85 0.004404812 ubox
36 51 0.033753826 ubox
36 84 0.004414805 ubox
37 50 0.033750179 ubox
37 54 0.993886919 ubox
37 55 0.097758092 ubox
37 83 0.004415220 ubox
38 48 0.033718313 ubox
38 53 0.996923692 ubox
38 54 0.069308598 ubox
38 67 0.003324426 ubox
38 82 0.004415040 ubox
39 47 0.033673104 ubox
39 52 0.999324809 ubox
39 66 0.003904991 ubox
39 81 0.004411126 ubox
40 46 0.027293266 ubox
40 51 0.999358925 ubox
40 65 0.003904031 ubox
40 80 0.004414391 ubox
41 50 0.999156089 ubox
41 79 0.004413277 ubox
42 78 0.003898420 ubox
43 62 0.007910244 ubox
44 61 0.009463516 ubox
45 60 0.009469910 ubox
46 59 0.009468895 ubox
47 58 0.009467167 ubox
50 63 0.004854945 ubox
51 62 0.004860985 ubox
52 61 0.004875280 ubox
53 60 0.004544088 ubox
62 77 0.003699622 ubox
63 76 0.003941802 ubox
65 74 0.005774501 ubox
66 73 0.005801002 ubox
67 72 0.005651545 ubox
72 110 0.005624136 ubox
73 109 0.005731514 ubox
74 108 0.005730337 ubox
76 84 0.003185645 ubox
76 107 0.005596091 ubox
76 120 0.006529799 ubox
77 83 0.003209582 ubox
77 106 0.005595190 ubox
77 119 0.006402795 ubox
78 104 0.005528369 ubox
79 103 0.006228673 ubox
79 118 0.007176026 ubox
80 102 0.006250554 ubox
80 117 0.007109025 ubox
81 101 0.006117773 ubox
82 100 0.004329364 ubox
82 115 0.005355356 ubox
82 116 0.005061270 ubox
82 121 0.003617440 ubox
83 100 0.004566532 ubox
83 114 0.005356524 ubox
83 115 0.005058915 ubox
83 120 0.003665153 ubox
84 99 0.006289528 ubox
84 119 0.003662880 ubox
85 98 0.006290031 ubox
87 113 0.044920685 ubox
87 114 0.009868747 ubox
87 121 0.702001904 ubox
88 95 0.006292026 ubox
88 112 0.058146646 ubox
88 118 0.467278380 ubox
88 120 0.722160499 ubox
89 94 0.006271866 ubox
89 111 0.058299370 ubox
89 117 0.467422864 ubox
89 119 0.722130497 ubox
90 110 0.058306239 ubox
90 117 0.666829459 ubox
90 119 0.007293565 ubox
91 108 0.005541313 ubox
91 109 0.058281653 ubox
91 115 0.823305971 ubox
91 116 0.546957582 ubox
91 118 0.005540690 ubox
91 121 0.068937281 ubox
92 107 0.006830676 ubox
92 108 0.058122524 ubox
92 114 0.914080367 ubox
92 115 0.387494898 ubox
92 120 0.071325051 ubox
93 113 0.992200836 ubox
94 103 0.003916315 ubox
94 105 0.033345513 ubox
94 107 0.048269145 ubox
94 112 0.992879431 ubox
94 118 0.082936410 ubox
94 120 0.059368560 ubox
95 102 0.003926289 ubox
95 104 0.033355964 ubox
95 106 0.048272020 ubox
95 110 0.150594449 ubox
95 111 0.981424998 ubox
95 117 0.083110034 ubox
95 119 0.059658925 ubox
96 103 0.032973758 ubox
96 105 0.048036137 ubox
96 109 0.212587324 ubox
96 116 0.083039239 ubox
96 118 0.059473287 ubox
98 108 0.992473621 ubox
98 109 0.021752526 ubox
98 115 0.083324582 ubox
98 116 0.059126492 ubox
98 121 0.003700106 ubox
99 105 0.007052529 ubox
99 107 0.992787037 ubox
99 108 0.017299176 ubox
99 114 0.083350769 ubox
99 115 0.059179873 ubox
99 120 0.003730122 ubox
100 104 0.007564138 ubox
100 106 0.992236069 ubox
100 119 0.003716416 ubox
101 113 0.101148398 ubox
102 112 0.102154059 ubox
102 118 0.003697583 ubox
102 120 0.003848478 ubox
103 110 0.012422899 ubox
103 111 0.101450221 ubox
103 117 0.003698919 ubox
103 119 0.003860275 ubox
104 109 0.016349229 ubox
104 112 0.004279222 ubox
104 116 0.003565770 ubox
104 118 0.003872071 ubox
104 120 0.003774208 ubox
105 111 0.004386820 ubox
105 117 0.003864628 ubox
105 119 0.003783342 ubox
106 112 0.003497252 ubox
106 116 0.003687626 ubox
106 118 0.003776878 ubox
106 120 0.003631683 ubox
107 111 0.003483549 ubox
107 117 0.003541781 ubox
107 119 0.003636975 ubox
109 117 0.004137724 ubox
110 116 0.005104081 ubox
110 121 0.006413690 ubox
111 115 0.005037082 ubox
111 120 0.006710018 ubox
112 119 0.006706909 ubox
1 90 0.9500000 lbox
2 89 0.9500000 lbox
4 88 0.9500000 lbox
5 87 0.9500000 lbox
7 85 0.9500000 lbox
8 84 0.9500000 lbox
9 83 0.9500000 lbox
10 82 0.9500000 lbox
13 81 0.9500000 lbox
14 80 0.9500000 lbox
15 79 0.9500000 lbox
16 78 0.9500000 lbox
17 77 0.9500000 lbox
22 73 0.9500000 lbox
23 72 0.9500000 lbox
24 70 0.9500000 lbox
25 69 0.9500000 lbox
26 68 0.9500000 lbox
27 67 0.9500000 lbox
28 66 0.9500000 lbox
29 65 0.9500000 lbox
31 63 0.9500000 lbox
32 62 0.9500000 lbox
37 54 0.9500000 lbox
38 53 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
91 115 0.9500000 lbox
92 114 0.9500000 lbox
93 113 0.9500000 lbox
94 112 0.9500000 lbox
95 111 0.9500000 lbox
98 108 0.9500000 lbox
99 107 0.9500000 lbox
100 106 0.9500000 lbox
showpage
end
%%EOF
