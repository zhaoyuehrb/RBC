%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:19:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGGGGGAGGGCGAGCCCAAGCGCGGGGGAGGGAGUGUAAAUAGAGCGAAGGCUGCUCUGUGUCAGCCCCGUCACCGCCGGGCGGCCCGCGCGGAGUCUGAGGGAG\
) } def
/len { sequence length } bind def

/coor [
[137.33520508 205.48831177]
[131.39401245 191.71507263]
[125.45281219 177.94183350]
[113.30728149 169.32003784]
[114.94583130 153.58390808]
[109.00463104 139.81066895]
[103.06343842 126.03742218]
[97.21563721 126.06874084]
[91.50636292 124.80302429]
[86.21969604 122.30325317]
[75.01432037 132.27519226]
[63.80894089 142.24713135]
[59.16710663 157.97561646]
[43.16365814 161.55635071]
[32.26156998 149.30578613]
[37.67597961 133.82623291]
[53.83700562 131.04174805]
[65.04238129 121.06981659]
[76.24775696 111.09787750]
[73.95948029 96.96299744]
[79.43908691 83.73405457]
[91.05200958 75.35724640]
[90.17984009 60.38262177]
[81.65322113 47.05567932]
[88.63740540 33.90005493]
[87.76523590 18.92543411]
[86.89305878 3.95081162]
[85.80319214 -11.00954247]
[84.49585724 -25.95246315]
[82.97132874 -40.87479019]
[81.22993469 -55.77336502]
[79.27204132 -70.64503479]
[77.09806824 -85.48666382]
[74.92408752 -100.32828522]
[70.52290344 -108.51367188]
[72.90924072 -115.63254547]
[71.16784668 -130.53111267]
[57.16441345 -136.68344116]
[48.17994308 -148.93806458]
[46.54657364 -163.94468689]
[52.60341644 -177.66221619]
[64.63220978 -186.44706726]
[62.89081955 -201.34564209]
[61.14942551 -216.24421692]
[59.40803146 -231.14279175]
[57.66663742 -246.04136658]
[55.92524338 -260.93994141]
[54.18384933 -275.83853149]
[52.44245529 -290.73709106]
[40.80049896 -301.77542114]
[42.31546402 -317.74676514]
[55.82519913 -326.39932251]
[70.96619415 -321.09555054]
[76.12356567 -305.90408325]
[67.34103394 -292.47848511]
[69.08242798 -277.57992554]
[70.82382202 -262.68133545]
[72.56521606 -247.78276062]
[74.30661011 -232.88418579]
[76.04800415 -217.98561096]
[77.78939056 -203.08703613]
[79.53078461 -188.18846130]
[93.26127625 -182.41444397]
[102.31833649 -170.46347046]
[104.18975067 -155.48468018]
[98.27357483 -141.48840332]
[86.06642151 -132.27250671]
[87.80781555 -117.37393951]
[89.76570892 -102.50226593]
[91.93968964 -87.66063690]
[94.11367035 -72.81901550]
[98.26119232 -66.56034088]
[96.12850952 -57.51475906]
[97.86990356 -42.61618423]
[101.83364105 -36.23952484]
[99.43877411 -27.25979805]
[100.74610901 -12.31687832]
[104.52271271 -5.82763386]
[101.86768341 3.07863927]
[102.73985291 18.05326080]
[103.61203003 33.02788544]
[112.07626343 45.28374100]
[105.15446472 59.51044846]
[106.02663422 74.48506927]
[121.61675262 85.16598511]
[125.97492981 103.55457306]
[116.83667755 120.09622192]
[122.77787018 133.86946106]
[128.71907043 147.64271545]
[141.28955078 157.24966431]
[139.22605896 172.00064087]
[145.16725159 185.77388000]
[151.10844421 199.54711914]
[166.27432251 198.94657898]
[180.63174438 203.86885071]
[192.23901367 213.64820862]
[199.52630615 226.96211243]
[201.50810242 242.00993347]
[197.91636658 256.75659180]
[189.23686218 269.20770264]
[176.64341736 277.67941284]
[161.83918762 281.02590942]
[146.82632446 278.79467773]
[133.63519287 271.28744507]
[124.04979706 259.51950073]
[119.36647034 245.08236694]
[120.21859741 229.92854309]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 93]
[2 92]
[3 91]
[5 89]
[6 88]
[7 87]
[10 19]
[11 18]
[12 17]
[22 84]
[23 83]
[25 81]
[26 80]
[27 79]
[28 77]
[29 76]
[30 74]
[31 73]
[32 71]
[33 70]
[34 69]
[36 68]
[37 67]
[42 62]
[43 61]
[44 60]
[45 59]
[46 58]
[47 57]
[48 56]
[49 55]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
