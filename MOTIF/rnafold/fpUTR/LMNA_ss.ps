%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:27:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGACCUAUUAGAGCCUUUGCCCCGGCGUCGGUGACUCAGUGUUCGCGGGAGCGCCGCACCUACACCAGCCAACCCAGAUCCCGAGGUCCGACAGCGCCCGGCCCAGAUCCCCACGCCUGCCAGGAGCAAGCCGAGAGCCAGCCGGCCGGCGCACUCCGACUCCGAGCAGUCUCUGUCCUUCGACCCGAGCCCCGCGCCCUUUCCGGGACCCCUGCCCCGCGGGCAGCGCUGCCAACCUGCCGGCC\
) } def
/len { sequence length } bind def

/coor [
[351.75579834 391.70611572]
[359.38763428 368.96469116]
[348.71459961 358.42495728]
[338.04156494 347.88519287]
[327.36853027 337.34545898]
[316.69549561 326.80569458]
[306.02246094 316.26596069]
[295.34942627 305.72619629]
[292.97653198 320.53732300]
[279.98126221 328.02886963]
[265.97497559 322.66012573]
[261.31668091 308.40176392]
[269.45169067 295.79931641]
[284.36337280 294.17355347]
[274.37319946 282.98443604]
[264.38299561 271.79531860]
[254.39282227 260.60620117]
[244.21142578 260.95190430]
[235.32650757 255.53399658]
[230.78405762 245.92811584]
[232.29464722 235.18882751]
[222.58880615 223.75219727]
[212.88296509 212.31555176]
[203.17713928 200.87892151]
[191.16589355 199.58589172]
[182.98538208 190.15948486]
[183.42285156 177.28533936]
[173.86149597 165.72764587]
[164.30014038 154.16995239]
[150.22578430 149.29536438]
[147.39091492 133.73020935]
[137.82954407 122.17250061]
[128.26818848 110.61480713]
[75.75996399 135.29907227]
[60.95967865 137.73863220]
[46.15938950 140.17819214]
[42.64539337 154.94055176]
[33.77112198 167.19984436]
[20.91409302 175.10620117]
[6.04983139 177.48135376]
[-8.55167198 173.99409485]
[-20.67260933 165.20613098]
[-28.48421669 152.48182678]
[-43.28450394 154.92138672]
[-58.08479309 157.36093140]
[-72.88508606 159.80049133]
[-83.35348511 175.61415100]
[-101.74500275 178.67530823]
[-116.26383972 167.49557495]
[-130.99815369 170.30630493]
[-145.73245239 173.11701965]
[-160.46676636 175.92773438]
[-170.63725281 188.33503723]
[-186.67626953 187.97518921]
[-196.28005981 175.12425232]
[-192.08142090 159.64035034]
[-177.30119324 153.40142822]
[-163.27748108 161.19343567]
[-148.54318237 158.38270569]
[-133.80886841 155.57199097]
[-119.07456207 152.76127625]
[-114.87405396 142.18550110]
[-106.00532532 134.86596680]
[-94.58961487 132.70289612]
[-83.43034363 136.34483337]
[-75.32463837 145.00019836]
[-60.52435303 142.56065369]
[-45.72406387 140.12109375]
[-30.92377472 137.68153381]
[-27.60919952 123.12327576]
[-18.94992065 110.91007233]
[-6.24007511 102.92103577]
[8.60013008 100.39994049]
[23.31449318 103.76165771]
[35.65384674 112.52427673]
[43.71983337 125.37789917]
[58.52012253 122.93833923]
[73.32041168 120.49877930]
[75.90523529 113.45827484]
[81.07487488 99.37727356]
[83.65969849 92.33676910]
[73.95385742 80.90013123]
[64.24801636 69.46349335]
[54.54217911 58.02685165]
[44.55200195 46.83773422]
[34.28379440 35.90320587]
[24.01558876 24.96867752]
[15.88178444 20.86922073]
[13.68811989 13.83163261]
[3.55812812 2.76893568]
[-6.57186413 -8.29376125]
[-21.97402763 -6.40882063]
[-35.52621460 -13.96645832]
[-42.01733017 -28.06060600]
[-38.95141220 -43.27177811]
[-27.50736427 -53.75096893]
[-12.08565998 -55.46871567]
[1.38374281 -47.76450729]
[7.72158337 -33.60077286]
[4.49083281 -18.42375374]
[14.62082481 -7.36105633]
[24.75081635 3.70164037]
[34.95011902 14.70047092]
[45.21832275 25.63500023]
[55.48653030 36.56953049]
[58.25582504 36.80432510]
[61.10041809 38.13622284]
[63.60704803 40.59980011]
[65.35734558 44.08129120]
[65.97882080 48.32101440]
[75.68465424 59.75765228]
[85.39049530 71.19429016]
[95.09633636 82.63092804]
[102.54842377 81.78450012]
[99.51376343 67.09468079]
[96.47910309 52.40486145]
[93.44444275 37.71504211]
[84.91819000 25.37392807]
[88.19653320 10.73656178]
[101.17227936 3.21126580]
[115.50512695 7.63500309]
[121.98249054 21.16436958]
[116.44116974 35.10302734]
[116.77831268 50.09923553]
[117.11544800 65.09544373]
[117.45259094 80.09165955]
[124.90467834 79.24523163]
[131.79837036 65.92318726]
[138.69207764 52.60114288]
[145.58576965 39.27909470]
[138.79629517 25.45125198]
[141.42028809 10.45231628]
[152.24501038 -0.00184027]
[166.97360229 -2.05281043]
[173.86729431 -15.37485695]
[180.76100159 -28.69690323]
[187.65469360 -42.01895142]
[187.41740417 -47.18298340]
[189.01084900 -51.49950027]
[191.81152344 -54.41634750]
[195.06755066 -55.70590591]
[202.45846558 -68.75866699]
[209.84938049 -81.81141663]
[209.17100525 -98.19653320]
[223.16471863 -106.74684906]
[237.43498230 -98.66654205]
[237.30178833 -82.26793671]
[222.90213013 -74.42050934]
[215.51121521 -61.36775208]
[208.12031555 -48.31499863]
[200.97674561 -35.12525177]
[194.08303833 -21.80320549]
[187.18934631 -8.48115921]
[180.29563904 4.84088755]
[187.12818909 18.04900169]
[184.84611511 32.92368317]
[174.11744690 43.72872162]
[158.90782166 46.17279434]
[152.01411438 59.49483871]
[145.12042236 72.81688690]
[138.22671509 86.13893127]
[139.82588196 101.05344391]
[149.38725281 112.61114502]
[158.94860840 124.16883850]
[173.70686340 129.87011719]
[175.85783386 144.60859680]
[185.41920471 156.16629028]
[194.98056030 167.72398376]
[212.39161682 173.75450134]
[214.61376953 191.17308044]
[224.31961060 202.60971069]
[234.02545166 214.04635620]
[243.73129272 225.48298645]
[263.00750732 231.43733215]
[265.58193970 250.61602783]
[275.57211304 261.80514526]
[285.56228638 272.99426270]
[295.55249023 284.18338013]
[305.88919067 295.05316162]
[316.56222534 305.59292603]
[327.23526001 316.13265991]
[337.90829468 326.67242432]
[348.58132935 337.21215820]
[359.25436401 347.75192261]
[369.92739868 358.29165649]
[378.54727173 353.55694580]
[387.99353027 350.86428833]
[397.79022217 350.34375000]
[407.44488525 352.01614380]
[416.47348022 355.79217529]
[424.42449951 361.47717285]
[430.90164185 368.78121948]
[435.58355713 377.33380127]
[438.23974609 386.70272827]
[438.74197388 396.41589355]
[437.07034302 405.98507690]
[433.31411743 414.93048096]
[444.99105835 424.34585571]
[456.66796875 433.76123047]
[468.40383911 443.10302734]
[480.19818115 452.37094116]
[491.99249268 461.63882446]
[503.78683472 470.90670776]
[512.87219238 468.55838013]
[521.88873291 470.60815430]
[528.85577393 476.47668457]
[532.30224609 484.76037598]
[531.57641602 493.56521606]
[543.01306152 503.27105713]
[554.44970703 512.97686768]
[565.88635254 522.68273926]
[580.93078613 518.88226318]
[595.32336426 524.68176270]
[603.52972412 537.85119629]
[602.39447021 553.32672119]
[592.35406494 565.15759277]
[577.26922607 568.79461670]
[562.94042969 562.83935547]
[554.87738037 549.58160400]
[556.18048096 534.11938477]
[544.74383545 524.41351318]
[533.30725098 514.70770264]
[521.87060547 505.00186157]
[501.31170654 503.04217529]
[494.51892090 482.70104980]
[482.72460938 473.43316650]
[470.93026733 464.16525269]
[459.13595581 454.89736938]
[451.95312500 453.24005127]
[447.25262451 445.43814087]
[435.57568359 436.02279663]
[423.89874268 426.60742188]
[420.14889526 429.53546143]
[416.10015869 432.03405762]
[411.80157471 434.07293701]
[414.98168945 448.73196411]
[418.16177368 463.39099121]
[432.41738892 469.51943970]
[440.31921387 482.87384033]
[438.82891846 498.31918335]
[428.51950073 509.91641235]
[413.35516357 513.20611572]
[399.16687012 506.92340088]
[391.41036987 493.48406982]
[393.06814575 478.05578613]
[403.50277710 466.57110596]
[400.32266235 451.91207886]
[397.14254761 437.25305176]
[374.05126953 431.81515503]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 185]
[3 184]
[4 183]
[5 182]
[6 181]
[7 180]
[8 179]
[14 178]
[15 177]
[16 176]
[17 175]
[21 173]
[22 172]
[23 171]
[24 170]
[27 168]
[28 167]
[29 166]
[31 164]
[32 163]
[33 162]
[34 78]
[35 77]
[36 76]
[43 69]
[44 68]
[45 67]
[46 66]
[49 61]
[50 60]
[51 59]
[52 58]
[81 113]
[82 112]
[83 111]
[84 110]
[85 105]
[86 104]
[87 103]
[89 102]
[90 101]
[91 100]
[127 161]
[128 160]
[129 159]
[130 158]
[134 154]
[135 153]
[136 152]
[137 151]
[141 150]
[142 149]
[143 148]
[197 232]
[198 231]
[199 230]
[200 228]
[201 227]
[202 226]
[203 225]
[208 223]
[209 222]
[210 221]
[211 220]
[235 248]
[236 247]
[237 246]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
