%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:54:28 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KRT13)
} def

/sequence { (\
CACAGUCCUCGGCCCAGGCCAAGCAAGCUUCUAUCUGCACCUGCUCUCAAUCCUGCUCUCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 43 0.004282575 ubox
1 55 0.034033815 ubox
2 42 0.004007316 ubox
2 54 0.030850574 ubox
3 37 0.017927610 ubox
3 43 0.059079091 ubox
3 55 0.525639018 ubox
4 29 0.078277365 ubox
4 30 0.003718131 ubox
4 32 0.003382096 ubox
4 36 0.018034554 ubox
4 42 0.059599850 ubox
4 45 0.017220527 ubox
4 47 0.033713423 ubox
4 54 0.527260583 ubox
4 57 0.149397481 ubox
4 59 0.044669802 ubox
5 13 0.123034215 ubox
5 19 0.029227445 ubox
5 24 0.041795712 ubox
5 28 0.083792956 ubox
5 31 0.003429480 ubox
5 35 0.017921958 ubox
5 40 0.011908402 ubox
5 41 0.058652366 ubox
5 44 0.018310432 ubox
5 46 0.035630687 ubox
5 51 0.019747985 ubox
5 53 0.523783242 ubox
5 56 0.159595648 ubox
5 58 0.047272216 ubox
5 62 0.101235123 ubox
6 12 0.123051647 ubox
6 18 0.011373866 ubox
6 23 0.035067674 ubox
6 27 0.083285907 ubox
6 39 0.013605835 ubox
6 43 0.017376029 ubox
6 50 0.027141975 ubox
6 55 0.150916653 ubox
6 61 0.097535617 ubox
7 11 0.119063912 ubox
7 17 0.010865758 ubox
7 18 0.041369090 ubox
8 17 0.041775265 ubox
8 23 0.156169328 ubox
9 16 0.039558439 ubox
9 18 0.005873517 ubox
9 22 0.164334531 ubox
10 17 0.008034880 ubox
10 37 0.007268750 ubox
10 55 0.022845312 ubox
11 20 0.907740190 ubox
11 29 0.009472891 ubox
11 36 0.007298066 ubox
11 41 0.013656035 ubox
11 45 0.015090689 ubox
11 46 0.012513605 ubox
11 47 0.072581387 ubox
11 48 0.015956597 ubox
11 52 0.004914612 ubox
11 53 0.022611175 ubox
11 54 0.013407867 ubox
11 57 0.147683430 ubox
11 58 0.104056712 ubox
11 59 0.245882110 ubox
11 60 0.122461547 ubox
11 63 0.040242179 ubox
12 19 0.908727121 ubox
12 28 0.009839894 ubox
12 35 0.007287508 ubox
12 40 0.013673852 ubox
12 44 0.016680658 ubox
12 45 0.010087138 ubox
12 46 0.076129997 ubox
12 47 0.009346324 ubox
12 51 0.004079709 ubox
12 52 0.022565973 ubox
12 53 0.013322151 ubox
12 56 0.163479313 ubox
12 57 0.086446299 ubox
12 58 0.278073519 ubox
12 59 0.072881730 ubox
12 62 0.040354065 ubox
13 18 0.908312654 ubox
13 27 0.009828427 ubox
13 43 0.015094236 ubox
13 55 0.147947513 ubox
15 37 0.014046186 ubox
15 43 0.084919580 ubox
15 55 0.373677146 ubox
16 30 0.007725807 ubox
16 36 0.014070167 ubox
16 42 0.086131643 ubox
16 47 0.012747711 ubox
16 54 0.397678025 ubox
16 59 0.011867918 ubox
17 29 0.008732161 ubox
17 35 0.014035186 ubox
17 41 0.086337546 ubox
17 45 0.006888028 ubox
17 46 0.013184425 ubox
17 47 0.015598370 ubox
17 48 0.018278276 ubox
17 52 0.012059937 ubox
17 53 0.401502545 ubox
17 54 0.004137403 ubox
17 57 0.014809372 ubox
17 58 0.012504519 ubox
17 63 0.005064133 ubox
18 24 0.010733927 ubox
18 28 0.009103851 ubox
18 34 0.012404246 ubox
18 38 0.003436064 ubox
18 40 0.086046997 ubox
18 44 0.010036461 ubox
18 45 0.006749589 ubox
18 46 0.016683223 ubox
18 47 0.017633870 ubox
18 51 0.011914013 ubox
18 52 0.400790280 ubox
18 53 0.004240111 ubox
18 56 0.017843109 ubox
18 57 0.008248705 ubox
18 62 0.005103451 ubox
19 23 0.010896096 ubox
19 27 0.009118158 ubox
19 37 0.003882845 ubox
19 43 0.009919718 ubox
19 55 0.016750129 ubox
20 37 0.014521320 ubox
20 43 0.005592601 ubox
20 55 0.011391519 ubox
21 30 0.020191385 ubox
21 36 0.012419670 ubox
21 42 0.006038656 ubox
21 54 0.014564816 ubox
22 29 0.022614807 ubox
22 32 0.006692038 ubox
22 36 0.043574903 ubox
22 42 0.025176751 ubox
22 45 0.896685044 ubox
22 47 0.034374162 ubox
22 54 0.003202541 ubox
22 57 0.202053472 ubox
22 59 0.025787953 ubox
23 28 0.022673431 ubox
23 31 0.006809727 ubox
23 35 0.044233571 ubox
23 38 0.097691897 ubox
23 41 0.025943327 ubox
23 44 0.947171047 ubox
23 46 0.029424304 ubox
23 56 0.214288106 ubox
23 58 0.026990236 ubox
24 37 0.097869045 ubox
24 43 0.947660572 ubox
24 55 0.214351176 ubox
25 36 0.088661411 ubox
25 42 0.935752002 ubox
25 54 0.192184598 ubox
26 32 0.049249904 ubox
26 36 0.034886432 ubox
26 42 0.034027137 ubox
26 45 0.143533517 ubox
26 47 0.005313378 ubox
26 54 0.086801840 ubox
26 57 0.096793325 ubox
27 31 0.048889565 ubox
27 35 0.046101501 ubox
27 38 0.955001422 ubox
27 41 0.032699907 ubox
27 44 0.146183602 ubox
27 46 0.004647921 ubox
27 53 0.122089129 ubox
27 56 0.102629213 ubox
28 37 0.955578133 ubox
28 43 0.146149539 ubox
28 55 0.102602067 ubox
29 50 0.031754924 ubox
30 49 0.031417939 ubox
33 42 0.004663032 ubox
33 51 0.013594004 ubox
34 50 0.013631690 ubox
36 43 0.003756626 ubox
36 49 0.005970267 ubox
36 61 0.010655496 ubox
37 42 0.003415864 ubox
37 44 0.202003104 ubox
37 48 0.005617042 ubox
37 56 0.047425551 ubox
37 60 0.011952904 ubox
38 43 0.201869164 ubox
38 55 0.047508634 ubox
39 54 0.043409028 ubox
42 49 0.038062876 ubox
42 61 0.008891770 ubox
43 48 0.040017574 ubox
43 56 0.102501494 ubox
43 60 0.009879121 ubox
44 55 0.102738717 ubox
48 55 0.100159426 ubox
49 54 0.091584925 ubox
54 61 0.069785888 ubox
55 60 0.077699024 ubox
11 20 0.9500000 lbox
12 19 0.9500000 lbox
13 18 0.9500000 lbox
22 45 0.9500000 lbox
23 44 0.9500000 lbox
24 43 0.9500000 lbox
25 42 0.9500000 lbox
27 38 0.9500000 lbox
28 37 0.9500000 lbox
showpage
end
%%EOF
