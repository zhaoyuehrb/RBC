%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:25:21 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NDUFA7)
} def

/sequence { (\
CAGCCCCAGCGGUGGAGACGUCACCGGCUGCGCCCUUCAGUAUCGCGGACGGAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 14 0.046413482 ubox
1 30 0.380402785 ubox
2 13 0.038338448 ubox
2 29 0.385898935 ubox
2 36 0.016220298 ubox
2 37 0.003162545 ubox
3 10 0.048513004 ubox
3 13 0.067463032 ubox
3 21 0.006193051 ubox
3 28 0.386619285 ubox
3 31 0.097115013 ubox
3 33 0.799380720 ubox
3 35 0.017324013 ubox
3 41 0.013633623 ubox
3 46 0.009034787 ubox
4 9 0.048577538 ubox
4 12 0.078783837 ubox
4 15 0.119671495 ubox
4 20 0.006393423 ubox
4 27 0.385845489 ubox
4 30 0.088121688 ubox
4 32 0.801186361 ubox
4 40 0.013918320 ubox
4 45 0.009027363 ubox
4 48 0.014955924 ubox
4 52 0.082633490 ubox
5 11 0.078638535 ubox
5 12 0.023146694 ubox
5 14 0.120022151 ubox
5 15 0.019968485 ubox
5 26 0.348587183 ubox
5 27 0.024810863 ubox
5 47 0.014637758 ubox
5 48 0.020707380 ubox
5 51 0.082366386 ubox
5 52 0.074191283 ubox
6 11 0.023715552 ubox
6 12 0.118572082 ubox
6 14 0.018381970 ubox
6 15 0.169775467 ubox
6 26 0.031131305 ubox
6 27 0.011350026 ubox
6 47 0.020361312 ubox
6 48 0.062632792 ubox
6 51 0.073850266 ubox
6 52 0.052605673 ubox
7 11 0.117741756 ubox
7 14 0.170357251 ubox
7 26 0.011360730 ubox
7 30 0.873210644 ubox
7 47 0.062473083 ubox
7 51 0.052437363 ubox
8 13 0.163527308 ubox
8 29 0.880417978 ubox
8 36 0.020859829 ubox
8 37 0.003169927 ubox
9 21 0.077300083 ubox
9 28 0.880484626 ubox
9 31 0.020656409 ubox
9 35 0.022185420 ubox
9 36 0.003458969 ubox
9 46 0.067831611 ubox
10 20 0.078735417 ubox
10 26 0.653417902 ubox
10 27 0.623726525 ubox
10 30 0.020656485 ubox
10 45 0.067820578 ubox
11 19 0.077624914 ubox
11 22 0.013856030 ubox
11 25 0.964689976 ubox
11 29 0.020497994 ubox
11 34 0.050211287 ubox
11 44 0.063822537 ubox
12 19 0.025355141 ubox
12 21 0.013269126 ubox
12 24 0.966295671 ubox
12 28 0.020499018 ubox
12 33 0.051137054 ubox
12 41 0.003453746 ubox
12 43 0.062241553 ubox
13 18 0.028277665 ubox
13 20 0.015559474 ubox
13 23 0.965057658 ubox
13 26 0.016004380 ubox
13 27 0.014599665 ubox
13 32 0.051164322 ubox
13 39 0.039546248 ubox
13 42 0.048601672 ubox
14 19 0.022537730 ubox
14 22 0.951118170 ubox
14 25 0.023585689 ubox
14 31 0.051226673 ubox
14 38 0.051611604 ubox
14 41 0.033192966 ubox
15 21 0.799139582 ubox
15 22 0.168974907 ubox
15 24 0.023598984 ubox
15 34 0.003171757 ubox
15 37 0.053641734 ubox
15 38 0.014969305 ubox
16 21 0.228038975 ubox
16 29 0.051014744 ubox
16 36 0.053845893 ubox
16 37 0.014467278 ubox
17 28 0.049428534 ubox
17 35 0.053872941 ubox
17 36 0.013205179 ubox
17 38 0.024824521 ubox
18 37 0.024450263 ubox
18 41 0.006956087 ubox
19 26 0.050432675 ubox
19 32 0.050645314 ubox
19 40 0.007925650 ubox
19 51 0.214794743 ubox
20 25 0.049813812 ubox
20 28 0.005566079 ubox
20 31 0.050877645 ubox
20 33 0.008928471 ubox
20 50 0.216944326 ubox
21 27 0.005744103 ubox
21 30 0.044027682 ubox
21 32 0.008546849 ubox
21 49 0.216916163 ubox
21 53 0.003250242 ubox
22 26 0.006047059 ubox
22 30 0.026212634 ubox
22 48 0.216829710 ubox
23 29 0.024683368 ubox
24 48 0.007337647 ubox
24 52 0.075483340 ubox
25 32 0.009936199 ubox
25 45 0.216482665 ubox
25 47 0.008746185 ubox
25 51 0.075939098 ubox
26 31 0.010153254 ubox
26 34 0.038153774 ubox
26 35 0.003740599 ubox
26 44 0.216280253 ubox
26 46 0.008287011 ubox
26 50 0.076257422 ubox
27 33 0.038939622 ubox
27 34 0.003534294 ubox
27 41 0.063523550 ubox
27 43 0.203594555 ubox
27 46 0.018690141 ubox
28 32 0.038684836 ubox
28 40 0.071115950 ubox
28 45 0.018883113 ubox
28 48 0.118313356 ubox
28 52 0.010721548 ubox
28 55 0.003604031 ubox
29 39 0.071159942 ubox
29 42 0.203535024 ubox
29 47 0.119768878 ubox
29 51 0.010770276 ubox
29 54 0.003741149 ubox
30 38 0.070740098 ubox
30 41 0.206585043 ubox
30 46 0.122847312 ubox
30 50 0.010992954 ubox
31 40 0.207025546 ubox
31 45 0.122995449 ubox
31 47 0.168374387 ubox
31 51 0.155961480 ubox
32 41 0.030177435 ubox
32 44 0.116674520 ubox
32 46 0.170870839 ubox
32 50 0.158097514 ubox
33 40 0.045122066 ubox
33 45 0.170629169 ubox
33 48 0.098678427 ubox
33 52 0.275834990 ubox
34 47 0.098398506 ubox
34 48 0.140009586 ubox
34 51 0.279715711 ubox
34 52 0.742302735 ubox
35 47 0.140226867 ubox
35 48 0.013950943 ubox
35 51 0.743616996 ubox
35 52 0.049521259 ubox
35 55 0.451293599 ubox
36 47 0.013468678 ubox
36 48 0.005694005 ubox
36 49 0.545696842 ubox
36 51 0.047657056 ubox
36 52 0.003299544 ubox
36 53 0.036349891 ubox
36 54 0.461209476 ubox
37 47 0.005471033 ubox
37 48 0.549217765 ubox
37 49 0.560365734 ubox
37 52 0.039032030 ubox
37 53 0.463436143 ubox
37 54 0.003855145 ubox
38 47 0.548085318 ubox
38 48 0.562796515 ubox
38 51 0.040972583 ubox
38 52 0.459942439 ubox
40 46 0.606431184 ubox
40 50 0.437398882 ubox
41 45 0.568395266 ubox
41 49 0.430988406 ubox
43 49 0.076409157 ubox
43 52 0.050617072 ubox
43 53 0.044723542 ubox
44 48 0.084219824 ubox
44 51 0.101639677 ubox
44 52 0.047226317 ubox
45 50 0.099735624 ubox
3 33 0.9500000 lbox
4 32 0.9500000 lbox
7 30 0.9500000 lbox
8 29 0.9500000 lbox
9 28 0.9500000 lbox
10 27 0.9500000 lbox
11 25 0.9500000 lbox
12 24 0.9500000 lbox
13 23 0.9500000 lbox
14 22 0.9500000 lbox
15 21 0.9500000 lbox
34 52 0.9500000 lbox
35 51 0.9500000 lbox
37 49 0.9500000 lbox
38 48 0.9500000 lbox
40 46 0.9500000 lbox
41 45 0.9500000 lbox
showpage
end
%%EOF
