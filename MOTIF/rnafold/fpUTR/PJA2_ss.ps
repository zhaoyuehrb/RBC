%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:17:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCGCCGCCGCCGCCGCCACAGCCGCCAGCCGCUUCGCGUUCGGCGGGGGAGGAGUUGGAGGCGGAGAAGAAGGCGGUGGUGGCGGGUGGAGGUUCGAGCGCUGUUCUCGCUCCGGAGCCGCUGCACAUUUCGGAAUCUUCUGCGGCUUGUCCAUAGUGUGAAUAAAAACUAAAUCACAUCUAUAAUUCUACUGAACUGGUCACACAGACGCUGCCAUAU\
) } def
/len { sequence length } bind def

/coor [
[-39.48394012 164.90238953]
[-42.04176712 163.77252197]
[-56.28102875 168.48881531]
[-70.52028656 173.20512390]
[-84.75955200 177.92141724]
[-98.99880981 182.63771057]
[-113.23806763 187.35400391]
[-127.47733307 192.07031250]
[-141.71659851 196.78660583]
[-155.95585632 201.50289917]
[-170.19511414 206.21919250]
[-184.43437195 210.93550110]
[-198.67362976 215.65179443]
[-212.91288757 220.36808777]
[-227.15216064 225.08439636]
[-228.03366089 242.64749146]
[-235.58168030 258.49133301]
[-248.61251831 270.19427490]
[-265.10678101 275.97924805]
[-282.52233887 274.98333740]
[-298.18612671 267.38662720]
[-309.70431519 254.38023376]
[-323.72955322 259.69931030]
[-337.75479126 265.01837158]
[-347.91448975 277.14648438]
[-362.55838013 274.42514038]
[-376.58361816 279.74420166]
[-390.60888672 285.06329346]
[-404.63412476 290.38235474]
[-418.65936279 295.70141602]
[-425.93255615 314.43783569]
[-444.36004639 321.66192627]
[-461.87930298 313.12792969]
[-475.66503906 319.04010010]
[-489.45074463 324.95227051]
[-503.23648071 330.86444092]
[-517.02221680 336.77664185]
[-530.80792236 342.68881226]
[-538.07373047 356.99224854]
[-553.81512451 360.08840942]
[-565.95678711 349.60220337]
[-565.18457031 333.57775879]
[-552.09088135 324.30761719]
[-536.72009277 328.90307617]
[-522.93438721 322.99090576]
[-509.14865112 317.07873535]
[-495.36294556 311.16656494]
[-481.57720947 305.25436401]
[-467.79147339 299.34219360]
[-466.69223022 289.14889526]
[-461.42309570 280.26016235]
[-452.87567139 274.31127930]
[-442.55133057 272.42874146]
[-432.29782104 275.01751709]
[-423.97842407 281.67617798]
[-409.95318604 276.35711670]
[-395.92794800 271.03802490]
[-381.90270996 265.71896362]
[-367.87747192 260.39990234]
[-358.72094727 248.65223694]
[-343.07388306 250.99313354]
[-329.04861450 245.67405701]
[-315.02337646 240.35498047]
[-315.71417236 227.80165100]
[-312.84799194 215.54203796]
[-306.64572144 204.56498718]
[-297.59768677 195.75880432]
[-286.42507935 189.83935547]
[-274.02221680 187.29188538]
[-261.38525391 188.33123779]
[-249.53192139 192.88378906]
[-239.41969299 200.59252930]
[-231.86845398 210.84512329]
[-217.62919617 206.12882996]
[-203.38993835 201.41253662]
[-189.15066528 196.69624329]
[-174.91140747 191.97993469]
[-160.67214966 187.26364136]
[-146.43289185 182.54734802]
[-132.19363403 177.83105469]
[-117.95436859 173.11474609]
[-103.71511078 168.39845276]
[-89.47584534 163.68215942]
[-75.23658752 158.96586609]
[-60.99732590 154.24955750]
[-46.75806427 149.53326416]
[-32.65863037 144.41409302]
[-18.71041107 138.89619446]
[-4.76219559 133.37829590]
[9.18602085 127.86038971]
[18.17462540 115.98376465]
[33.85338974 118.10199738]
[47.80160904 112.58409119]
[61.74982452 107.06619263]
[62.67182541 89.06316376]
[71.61106110 73.40911102]
[86.64759064 63.46617889]
[84.31160736 48.64918900]
[81.97561646 33.83219910]
[79.63963318 19.01520920]
[77.30364990 4.19822073]
[63.81295013 -3.70969367]
[58.61030579 -18.45643997]
[64.15225220 -33.07905579]
[77.82203674 -40.67319107]
[93.16522217 -37.65312195]
[102.93721008 -25.44483948]
[102.52397919 -9.81271648]
[92.12063599 1.86223435]
[94.45661926 16.67922401]
[96.79261017 31.49621201]
[99.12859344 46.31320190]
[101.46457672 61.13019180]
[114.50672150 61.14416885]
[127.59709930 65.66156769]
[136.88978577 53.88676834]
[146.18247986 42.11196518]
[142.13560486 27.24828529]
[147.55358887 13.01807499]
[160.16279602 4.80395126]
[175.01321411 5.58041763]
[184.30590820 -6.19438410]
[193.59858704 -17.96918678]
[202.89128113 -29.74398804]
[212.18395996 -41.51879120]
[221.47665405 -53.29359055]
[213.73829651 -66.35047913]
[211.24304199 -81.32172394]
[214.32835388 -96.18258667]
[222.57698059 -108.92326355]
[234.87333679 -117.82067108]
[249.55445862 -121.67152405]
[264.63485718 -119.95500946]
[278.07498169 -112.90328217]
[288.05725098 -101.47003174]
[293.23156738 -87.20150757]
[292.89816284 -72.02740479]
[287.10217285 -57.99990845]
[276.62741089 -47.01610947]
[262.89050293 -40.56148911]
[247.74928284 -39.50897217]
[233.25144958 -44.00090408]
[223.95877075 -32.22610092]
[214.66607666 -20.45129967]
[205.37339783 -8.67649841]
[196.08070374 3.09830332]
[186.78802490 14.87310505]
[190.99458313 29.13644218]
[185.93586731 43.30942154]
[173.35449219 51.88626862]
[157.95727539 51.40465546]
[148.66459656 63.17945480]
[139.37190247 74.95425415]
[145.28407288 88.73998260]
[160.22009277 90.12400818]
[175.15609741 91.50803375]
[190.09211731 92.89205933]
[205.03759766 94.16989136]
[219.99176025 95.34146118]
[234.94593811 96.51303101]
[249.90011597 97.68460083]
[264.85430908 98.85617828]
[272.48599243 85.63800049]
[285.10186768 77.04718781]
[300.19708252 74.78945923]
[314.77444458 79.31308746]
[325.93963623 89.71990204]
[331.47573853 103.94361115]
[330.28363037 119.16010284]
[322.59994507 132.34812927]
[309.95031738 140.88919067]
[294.84634399 143.08744812]
[280.28689575 138.50645447]
[269.16281128 128.05575562]
[263.68273926 113.81035614]
[248.72854614 112.63877869]
[233.77436829 111.46720886]
[218.82019043 110.29563904]
[203.86601257 109.12406921]
[196.95724487 111.73342133]
[188.70809937 107.82807159]
[173.77207947 106.44404602]
[158.83605957 105.06002045]
[143.90005493 103.67599487]
[143.61544800 107.85641479]
[142.93135071 112.01552582]
[141.84925842 116.11502838]
[153.00593567 126.14141846]
[164.16262817 136.16781616]
[180.30989075 139.03097534]
[185.64884949 154.53669739]
[174.68724060 166.73402405]
[158.70141602 163.07539368]
[154.13623047 147.32449341]
[142.97955322 137.29809570]
[131.82287598 127.27171326]
[120.18135834 136.73083496]
[127.71211243 149.70341492]
[135.24287415 162.67597961]
[150.58065796 166.48750305]
[158.65927124 180.07099915]
[154.68580627 195.36764526]
[141.01765442 203.30220032]
[125.76388550 199.16722107]
[117.97428131 185.41593933]
[122.27029419 170.20674133]
[114.73953247 157.23416138]
[107.20877838 144.26159668]
[90.40707397 141.77503967]
[76.48453522 133.43928528]
[67.26772308 121.01440430]
[53.31951141 126.53231049]
[39.37129211 132.05021667]
[29.38501930 144.32151794]
[14.70392418 141.80860901]
[0.75570756 147.32650757]
[-13.19250870 152.84440613]
[-27.14072609 158.36231995]
[-29.70714569 161.84417725]
[-32.92294312 164.10516357]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 86]
[3 85]
[4 84]
[5 83]
[6 82]
[7 81]
[8 80]
[9 79]
[10 78]
[11 77]
[12 76]
[13 75]
[14 74]
[15 73]
[22 63]
[23 62]
[24 61]
[26 59]
[27 58]
[28 57]
[29 56]
[30 55]
[33 49]
[34 48]
[35 47]
[36 46]
[37 45]
[38 44]
[87 218]
[88 217]
[89 216]
[90 215]
[92 213]
[93 212]
[94 211]
[97 113]
[98 112]
[99 111]
[100 110]
[101 109]
[115 153]
[116 152]
[117 151]
[121 147]
[122 146]
[123 145]
[124 144]
[125 143]
[126 142]
[154 184]
[155 183]
[156 182]
[157 181]
[158 179]
[159 178]
[160 177]
[161 176]
[162 175]
[187 196]
[188 195]
[189 194]
[197 208]
[198 207]
[199 206]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
