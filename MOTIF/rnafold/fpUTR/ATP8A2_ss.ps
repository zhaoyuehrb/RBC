%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:36:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGAUGCUGCCGCAUUGGCCGCUGCGGCACGGACGGCGCAGCCUCGGGCGCGGCCCGGCACAGGCGCCGGCGGUCCCCGCCAGCUAGCAGCCCGGCGAGGCGCUGGCCCACCCAUGGUCCUCGGGCGGCGGCCCCUGCGCCCAGCCCUGCGCGUAGCCUCCGUCUCUCGCCCGGGGCCGCCGAGCCCCCGACACGGGCGAG\
) } def
/len { sequence length } bind def

/coor [
[364.09750366 443.61676025]
[355.77603149 431.13665771]
[347.45455933 418.65655518]
[339.13305664 406.17645264]
[330.81158447 393.69635010]
[317.31344604 387.39956665]
[316.09506226 371.62533569]
[307.77355957 359.14526367]
[299.45208740 346.66516113]
[291.13058472 334.18505859]
[282.80911255 321.70495605]
[274.39129639 309.28961182]
[265.87768555 296.93978882]
[257.36407471 284.58996582]
[248.85043335 272.24014282]
[244.39265442 270.51013184]
[240.97715759 265.95788574]
[240.27139282 259.37377930]
[232.14404297 246.76638794]
[227.74192810 244.89926147]
[224.46894836 240.24348450]
[223.96728516 233.64070129]
[216.23397827 220.78784180]
[208.50067139 207.93498230]
[200.76736450 195.08212280]
[194.62129211 190.96884155]
[193.01559448 181.96998596]
[185.48211670 168.99899292]
[177.94863892 156.02799988]
[164.86589050 148.90823364]
[164.62570190 133.08885193]
[157.09222412 120.11785126]
[149.55874634 107.14685822]
[121.96918488 139.34094238]
[84.07386017 136.74453735]
[65.99822998 108.44802094]
[51.02022934 107.63593292]
[36.04222870 106.82385254]
[21.06422615 106.01176453]
[6.08622456 105.19968414]
[-2.79842830 119.14079285]
[-17.41667747 126.65766144]
[-33.73707581 125.78371429]
[-47.31212616 116.85189056]
[-54.49028397 102.37807465]
[-69.47905731 101.79787445]
[-84.46783447 101.21768188]
[-99.45660400 100.63748169]
[-114.44538116 100.05728149]
[-129.43415833 99.47708130]
[-145.49531555 104.90624237]
[-155.15846252 90.97570801]
[-144.44737244 77.83383942]
[-128.85395813 84.48831177]
[-113.86518097 85.06850433]
[-98.87641144 85.64870453]
[-83.88763428 86.22890472]
[-68.89885712 86.80910492]
[-53.91008377 87.38930511]
[-47.40447235 75.37732697]
[-36.30397034 67.30255890]
[-22.74228287 64.78763580]
[-9.35678196 68.37963867]
[1.22438979 77.43235016]
[6.89830828 90.22167969]
[21.87630844 91.03376770]
[36.85430908 91.84584808]
[51.83231354 92.65793610]
[66.81031036 93.47001648]
[72.89722443 79.76055145]
[62.24966431 69.19506073]
[51.60210419 58.62957764]
[40.95454407 48.06409073]
[30.30698586 37.49860382]
[14.80494595 30.63397980]
[17.10990715 13.83744812]
[33.88809967 11.40258694]
[40.87247086 26.85104561]
[51.52003098 37.41653061]
[62.16759109 47.98201752]
[72.81514740 58.54750443]
[83.46270752 69.11299133]
[84.42960358 60.39745712]
[87.24239349 51.58109665]
[84.70120239 36.79792023]
[82.16000366 22.01474380]
[79.61880493 7.23156691]
[77.07761383 -7.55161047]
[74.53641510 -22.33478737]
[69.99572754 -30.26825142]
[72.07212830 -37.36626053]
[69.76000977 -52.18699265]
[67.44789124 -67.00772858]
[54.53737259 -76.12331390]
[51.93631744 -91.71209717]
[61.18789673 -104.52552032]
[76.80330658 -106.96161652]
[89.51820374 -97.57508087]
[91.78906250 -81.93479156]
[82.26862335 -69.31984711]
[84.58074188 -54.49911499]
[86.89286041 -39.67837906]
[89.31959534 -24.87598228]
[91.86078644 -10.09280586]
[94.40198517 4.69037104]
[96.94318390 19.47354889]
[99.48437500 34.25672531]
[102.02557373 49.03990173]
[116.94974518 50.54625320]
[122.39382935 36.56905746]
[127.83790588 22.59186172]
[124.81844330 6.47308826]
[137.44241333 -3.99436450]
[152.72334290 1.95752251]
[154.94154358 18.20595741]
[141.81510925 28.03594398]
[136.37101746 42.01313782]
[130.92694092 55.99033356]
[137.03523254 60.34219360]
[145.73895264 48.12559509]
[159.38476562 41.89728546]
[157.95555115 56.82931137]
[149.25183105 69.04591370]
[155.36013794 73.39777374]
[166.79257202 63.68697739]
[178.22500610 53.97618103]
[189.65742493 44.26538849]
[194.66085815 28.64816284]
[210.74266052 25.43755722]
[221.35923767 37.93636322]
[215.58918762 53.28688431]
[199.36822510 55.69781876]
[187.93579102 65.40861511]
[176.50335693 75.11940765]
[165.07093811 84.83020020]
[162.52973938 99.61338043]
[170.06321716 112.58437347]
[177.59669495 125.55536652]
[191.21829224 133.60290527]
[190.91963196 148.49452209]
[198.45310974 161.46551514]
[205.98658752 174.43650818]
[213.62022400 187.34881592]
[221.35353088 200.20167542]
[229.08683777 213.05453491]
[236.82014465 225.90739441]
[244.75141907 238.63903809]
[252.87878418 251.24641418]
[261.20025635 263.72650146]
[269.71389771 276.07635498]
[278.22750854 288.42617798]
[286.74111938 300.77600098]
[294.19332886 306.06964111]
[295.28921509 313.38345337]
[303.61068726 325.86355591]
[311.93218994 338.34365845]
[320.25366211 350.82376099]
[328.57516479 363.30386353]
[342.66848755 370.49331665]
[343.29165649 385.37487793]
[351.61315918 397.85498047]
[359.93463135 410.33508301]
[368.25613403 422.81515503]
[376.57760620 435.29525757]
[389.05316162 438.58636475]
[395.72647095 449.15771484]
[393.47949219 461.04785156]
[401.60684204 473.65521240]
[409.73422241 486.26260376]
[417.86157227 498.86999512]
[425.98892212 511.47735596]
[434.11627197 524.08477783]
[442.24365234 536.69213867]
[450.94735718 548.90875244]
[460.20867920 560.70819092]
[469.47000122 572.50769043]
[478.73132324 584.30718994]
[487.99264526 596.10668945]
[503.71142578 597.74859619]
[513.60021973 610.07690430]
[511.79220581 625.77746582]
[499.36004639 635.53533936]
[483.67950439 633.56146240]
[474.05358887 621.02679443]
[476.19314575 605.36798096]
[466.93182373 593.56854248]
[457.67050171 581.76904297]
[448.40917969 569.96954346]
[439.14785767 558.17004395]
[436.24066162 572.88562012]
[423.85983276 581.35406494]
[409.09136963 578.72857666]
[400.38790894 566.51177979]
[402.73074341 551.69592285]
[414.77896118 542.76055908]
[429.63626099 544.81945801]
[421.50891113 532.21209717]
[413.38153076 519.60473633]
[405.25418091 506.99734497]
[397.12683105 494.38995361]
[388.99948120 481.78259277]
[380.87210083 469.17520142]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 164]
[2 163]
[3 162]
[4 161]
[5 160]
[7 158]
[8 157]
[9 156]
[10 155]
[11 154]
[12 152]
[13 151]
[14 150]
[15 149]
[18 148]
[19 147]
[22 146]
[23 145]
[24 144]
[25 143]
[27 142]
[28 141]
[29 140]
[31 138]
[32 137]
[33 136]
[36 69]
[37 68]
[38 67]
[39 66]
[40 65]
[45 59]
[46 58]
[47 57]
[48 56]
[49 55]
[50 54]
[70 82]
[71 81]
[72 80]
[73 79]
[74 78]
[84 108]
[85 107]
[86 106]
[87 105]
[88 104]
[89 103]
[91 102]
[92 101]
[93 100]
[109 118]
[110 117]
[111 116]
[124 135]
[125 134]
[126 133]
[127 132]
[167 202]
[168 201]
[169 200]
[170 199]
[171 198]
[172 197]
[173 196]
[174 189]
[175 188]
[176 187]
[177 186]
[178 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
