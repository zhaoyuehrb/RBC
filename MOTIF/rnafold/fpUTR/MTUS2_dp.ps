%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:24:25 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MTUS2)
} def

/sequence { (\
AUUUCCUCUUAAUCUGAUUGCAGCUUGAAGGCAGCCCAUUUCCAUUAAGUAGGACUGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 30 0.008867310 ubox
2 34 0.007739264 ubox
2 54 0.009255548 ubox
3 29 0.011601521 ubox
3 30 0.004164655 ubox
3 33 0.009877743 ubox
3 34 0.006959298 ubox
3 53 0.004022690 ubox
3 54 0.069877208 ubox
4 28 0.011843135 ubox
4 29 0.004644088 ubox
4 31 0.004375777 ubox
4 33 0.008945855 ubox
4 53 0.061795358 ubox
4 54 0.897671348 ubox
5 27 0.011732011 ubox
5 30 0.023887704 ubox
5 31 0.115882445 ubox
5 52 0.063915354 ubox
5 53 0.970977223 ubox
6 30 0.164080783 ubox
6 31 0.021605222 ubox
6 52 0.971295704 ubox
6 53 0.005974024 ubox
7 17 0.006525272 ubox
7 28 0.022867068 ubox
7 29 0.161619290 ubox
7 30 0.028932390 ubox
7 31 0.019783303 ubox
7 51 0.957901539 ubox
7 52 0.005481149 ubox
8 16 0.007153780 ubox
8 23 0.005307892 ubox
8 27 0.026105213 ubox
8 30 0.111533979 ubox
8 49 0.972912950 ubox
9 22 0.005277797 ubox
9 28 0.196829616 ubox
9 29 0.097232778 ubox
9 30 0.003179877 ubox
9 48 0.972743816 ubox
9 49 0.007112366 ubox
10 20 0.005886610 ubox
10 27 0.209104717 ubox
10 28 0.079086187 ubox
10 47 0.972430774 ubox
10 48 0.006007167 ubox
11 19 0.006189415 ubox
11 26 0.216027208 ubox
11 41 0.003407287 ubox
11 46 0.971618466 ubox
12 18 0.006191680 ubox
12 25 0.208777236 ubox
12 39 0.003358644 ubox
12 40 0.005618030 ubox
12 45 0.961691243 ubox
13 17 0.005548422 ubox
13 28 0.003779656 ubox
13 44 0.899512568 ubox
14 23 0.229297295 ubox
14 27 0.004091701 ubox
14 30 0.003867606 ubox
14 34 0.034371268 ubox
15 22 0.230109201 ubox
15 29 0.003845980 ubox
15 33 0.034367659 ubox
15 38 0.129436968 ubox
15 44 0.062152826 ubox
16 21 0.229217308 ubox
16 32 0.034198842 ubox
16 37 0.133393098 ubox
16 40 0.572905746 ubox
16 41 0.444064936 ubox
16 42 0.462133311 ubox
16 43 0.066681970 ubox
17 39 0.588681548 ubox
17 40 0.447315013 ubox
17 41 0.457996816 ubox
18 29 0.014291316 ubox
18 30 0.012359709 ubox
18 31 0.006418688 ubox
18 34 0.054255574 ubox
18 38 0.564406872 ubox
19 28 0.014501861 ubox
19 29 0.016317243 ubox
19 30 0.006249901 ubox
19 33 0.062753183 ubox
19 38 0.360634029 ubox
20 32 0.063132907 ubox
20 35 0.888485698 ubox
20 37 0.325958376 ubox
20 58 0.008083371 ubox
21 27 0.028703676 ubox
21 31 0.063056805 ubox
21 34 0.892793759 ubox
21 57 0.008178173 ubox
22 26 0.023340988 ubox
22 56 0.008159692 ubox
23 32 0.904661859 ubox
23 35 0.344142744 ubox
23 50 0.010796651 ubox
23 55 0.007311157 ubox
24 30 0.038735636 ubox
24 31 0.905250985 ubox
24 34 0.343479809 ubox
24 49 0.012906449 ubox
24 53 0.004069163 ubox
25 29 0.043373621 ubox
25 30 0.837030961 ubox
25 31 0.007371956 ubox
25 33 0.279548545 ubox
25 34 0.035013675 ubox
25 48 0.012933500 ubox
25 52 0.003996091 ubox
26 30 0.028020731 ubox
26 33 0.194051496 ubox
26 38 0.003588598 ubox
26 47 0.012993063 ubox
26 51 0.003718353 ubox
27 32 0.271392024 ubox
27 37 0.003814886 ubox
27 40 0.005999688 ubox
27 41 0.006776466 ubox
27 42 0.021202194 ubox
27 46 0.013004072 ubox
28 39 0.006282889 ubox
28 40 0.007625902 ubox
28 41 0.021349890 ubox
28 45 0.012896726 ubox
29 39 0.007757461 ubox
29 40 0.020631770 ubox
30 36 0.010254663 ubox
30 37 0.020036532 ubox
30 39 0.018254124 ubox
30 43 0.017221746 ubox
31 35 0.010136298 ubox
31 36 0.019854324 ubox
31 42 0.017189260 ubox
31 58 0.192327646 ubox
32 57 0.226992971 ubox
33 40 0.011863145 ubox
33 41 0.008367799 ubox
33 56 0.227224468 ubox
34 39 0.008932403 ubox
34 40 0.007285672 ubox
34 55 0.227117779 ubox
34 58 0.006168484 ubox
35 53 0.188879156 ubox
35 57 0.006211443 ubox
36 52 0.188642458 ubox
36 53 0.122996717 ubox
37 52 0.123235331 ubox
37 57 0.007703648 ubox
38 50 0.210495928 ubox
38 56 0.007589951 ubox
39 48 0.044087471 ubox
39 49 0.211549516 ubox
40 47 0.044934289 ubox
40 48 0.207990449 ubox
40 49 0.015886848 ubox
40 51 0.003644082 ubox
40 54 0.003371322 ubox
41 47 0.190520935 ubox
41 48 0.016920004 ubox
41 54 0.035709369 ubox
42 53 0.036708687 ubox
43 52 0.036708294 ubox
44 50 0.006858792 ubox
45 49 0.006398159 ubox
4 54 0.9500000 lbox
5 53 0.9500000 lbox
6 52 0.9500000 lbox
7 51 0.9500000 lbox
8 49 0.9500000 lbox
9 48 0.9500000 lbox
10 47 0.9500000 lbox
11 46 0.9500000 lbox
12 45 0.9500000 lbox
13 44 0.9500000 lbox
16 40 0.9500000 lbox
17 39 0.9500000 lbox
18 38 0.9500000 lbox
20 35 0.9500000 lbox
21 34 0.9500000 lbox
23 32 0.9500000 lbox
24 31 0.9500000 lbox
25 30 0.9500000 lbox
showpage
end
%%EOF
