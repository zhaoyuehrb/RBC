%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:51:32 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (VPS16)
} def

/sequence { (\
GGAAGCGGAAGUGCCGGCCUGGAGCCCGCUCUAGGUGGGUGUCCCCUCGGUGCUUCCCAGCUGCCGUCUGCACCAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 57 0.022301904 ubox
1 58 0.008356095 ubox
1 62 0.007170079 ubox
1 65 0.989993967 ubox
1 68 0.009087139 ubox
1 69 0.038158201 ubox
1 74 0.035928294 ubox
1 78 0.011469756 ubox
2 48 0.004821142 ubox
2 56 0.022473514 ubox
2 57 0.005927356 ubox
2 61 0.007913695 ubox
2 64 0.987233658 ubox
2 67 0.007072699 ubox
2 68 0.040410923 ubox
2 73 0.035777245 ubox
2 77 0.011434228 ubox
3 47 0.003543562 ubox
3 55 0.022564445 ubox
3 67 0.040212665 ubox
4 47 0.005362191 ubox
4 54 0.022556558 ubox
4 62 0.883303514 ubox
5 46 0.006469151 ubox
5 53 0.022566334 ubox
5 61 0.995018802 ubox
5 64 0.012711590 ubox
5 71 0.011589634 ubox
5 77 0.013725186 ubox
6 52 0.022546827 ubox
6 60 0.990806189 ubox
6 63 0.012749399 ubox
6 70 0.011573135 ubox
6 76 0.013745772 ubox
7 44 0.019061396 ubox
7 45 0.004612149 ubox
7 46 0.009638592 ubox
7 51 0.007854591 ubox
7 57 0.974996608 ubox
7 58 0.196135143 ubox
7 69 0.008961380 ubox
8 43 0.019301852 ubox
8 44 0.004546858 ubox
8 45 0.009722086 ubox
8 48 0.004214449 ubox
8 56 0.989781323 ubox
8 57 0.139838157 ubox
8 68 0.008924674 ubox
9 42 0.018977836 ubox
9 47 0.003792709 ubox
9 55 0.999133808 ubox
9 67 0.008355619 ubox
10 47 0.004953289 ubox
10 54 0.999090526 ubox
10 55 0.003759326 ubox
11 42 0.006264248 ubox
11 46 0.005505737 ubox
11 53 0.999653130 ubox
12 41 0.015870824 ubox
12 52 0.997622585 ubox
13 40 0.026019935 ubox
13 51 0.997600060 ubox
14 39 0.026433190 ubox
14 50 0.999637061 ubox
15 38 0.026447306 ubox
15 49 0.999601553 ubox
16 45 0.005367747 ubox
16 46 0.051156057 ubox
16 47 0.054148147 ubox
16 48 0.994006195 ubox
17 36 0.418843379 ubox
17 44 0.005613758 ubox
17 45 0.056872993 ubox
17 46 0.325715562 ubox
17 47 0.759742913 ubox
18 35 0.448898234 ubox
19 34 0.449180651 ubox
20 33 0.448971938 ubox
21 32 0.448971805 ubox
21 43 0.146482035 ubox
21 44 0.859073933 ubox
21 45 0.153282076 ubox
21 46 0.025178951 ubox
22 31 0.449181779 ubox
22 42 0.109142717 ubox
22 43 0.861487722 ubox
22 44 0.146680408 ubox
22 45 0.024382078 ubox
23 30 0.448788810 ubox
23 42 0.805230892 ubox
24 29 0.445020597 ubox
24 40 0.846080035 ubox
24 42 0.007936948 ubox
25 39 0.893289395 ubox
25 41 0.006133348 ubox
26 38 0.893376701 ubox
26 39 0.006696671 ubox
27 37 0.893359587 ubox
27 38 0.005235706 ubox
27 41 0.006534518 ubox
28 36 0.892937853 ubox
28 40 0.006745852 ubox
29 35 0.893076785 ubox
29 39 0.006770014 ubox
30 34 0.804561161 ubox
30 38 0.006755972 ubox
31 37 0.006760573 ubox
35 46 0.004402913 ubox
37 44 0.030905482 ubox
37 45 0.158034411 ubox
37 46 0.413215869 ubox
37 47 0.052166863 ubox
37 48 0.008013728 ubox
38 43 0.030934366 ubox
38 44 0.158847620 ubox
38 45 0.413798086 ubox
38 46 0.056711490 ubox
38 47 0.009147782 ubox
39 43 0.156593303 ubox
39 44 0.410685860 ubox
39 45 0.056491973 ubox
39 46 0.009300221 ubox
43 50 0.005468830 ubox
44 49 0.005504532 ubox
44 50 0.003519053 ubox
45 49 0.003714361 ubox
48 66 0.009180617 ubox
49 65 0.009593726 ubox
49 74 0.006654973 ubox
50 64 0.009594295 ubox
50 73 0.006661720 ubox
51 63 0.009260713 ubox
51 72 0.006660277 ubox
52 61 0.009516009 ubox
52 71 0.006660686 ubox
53 60 0.009584686 ubox
53 70 0.006624686 ubox
54 59 0.008755409 ubox
58 70 0.011781166 ubox
59 69 0.012253879 ubox
60 67 0.005669267 ubox
60 68 0.012177075 ubox
60 71 0.027791438 ubox
60 77 0.085855016 ubox
61 66 0.012434544 ubox
61 70 0.027818641 ubox
61 76 0.086064248 ubox
62 72 0.032572306 ubox
62 75 0.084036902 ubox
63 71 0.060484964 ubox
63 74 0.081400084 ubox
63 77 0.018850705 ubox
64 70 0.061143167 ubox
64 76 0.018824340 ubox
66 73 0.117199726 ubox
66 77 0.412295458 ubox
67 72 0.107561091 ubox
67 76 0.152793837 ubox
68 76 0.502150144 ubox
69 75 0.508021121 ubox
70 74 0.500634000 ubox
70 77 0.613241061 ubox
71 76 0.614357945 ubox
1 65 0.9500000 lbox
2 64 0.9500000 lbox
4 62 0.9500000 lbox
5 61 0.9500000 lbox
6 60 0.9500000 lbox
7 57 0.9500000 lbox
8 56 0.9500000 lbox
9 55 0.9500000 lbox
10 54 0.9500000 lbox
11 53 0.9500000 lbox
12 52 0.9500000 lbox
13 51 0.9500000 lbox
14 50 0.9500000 lbox
15 49 0.9500000 lbox
16 48 0.9500000 lbox
17 47 0.9500000 lbox
21 44 0.9500000 lbox
22 43 0.9500000 lbox
23 42 0.9500000 lbox
24 40 0.9500000 lbox
25 39 0.9500000 lbox
26 38 0.9500000 lbox
27 37 0.9500000 lbox
28 36 0.9500000 lbox
29 35 0.9500000 lbox
30 34 0.9500000 lbox
70 77 0.9500000 lbox
71 76 0.9500000 lbox
showpage
end
%%EOF
