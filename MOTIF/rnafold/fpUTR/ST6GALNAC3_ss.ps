%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:04:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCCGCGGCUCGGGGGGCGGGGUCUGUGGCGGCGCAGCUUACACCGCGGUCCCCUUAUUUGGAUCUGCGGGAAUGUGGGCUGGAGAGGUCCUGCCGUGGUACCAGCCUCCAGCCUGCCCCCAGGACUGCCCCUGACCCAGGCGCGCCCGCUGCUCGGUGGCAGGAGGGCCGGCGGAGCGCC\
) } def
/len { sequence length } bind def

/coor [
[324.63720703 482.25579834]
[324.52157593 476.98950195]
[316.72781372 464.17318726]
[308.93405151 451.35690308]
[301.14028931 438.54061890]
[294.96371460 434.44937134]
[293.32501221 425.43829346]
[285.75122070 412.49081421]
[278.17739868 399.54333496]
[265.07257080 392.46432495]
[264.78314209 376.64575195]
[257.20935059 363.69827271]
[244.10450745 356.61923218]
[243.81507874 340.80068970]
[236.24127197 327.85321045]
[228.33839417 315.10391235]
[220.11161804 302.56118774]
[211.88482666 290.01843262]
[203.65805054 277.47570801]
[195.43127441 264.93298340]
[187.20449829 252.39024353]
[178.97772217 239.84751892]
[167.18835449 237.07272339]
[160.23519897 226.66986084]
[162.30749512 213.92343140]
[154.29605103 201.24208069]
[146.28462219 188.56071472]
[138.27317810 175.87936401]
[132.02766418 171.89418030]
[130.23536682 162.91238403]
[122.44160461 150.09609985]
[116.26503754 146.00486755]
[114.62634277 136.99378967]
[107.05253601 124.04630280]
[99.47872162 111.09882355]
[99.91801453 126.09238434]
[101.18646240 141.03865051]
[95.51037598 154.92326355]
[84.13481140 164.70060730]
[69.55498505 168.22602844]
[54.96897888 164.72624207]
[43.57623291 154.96891785]
[37.87574005 141.09432983]
[39.11790466 126.14585114]
[47.03059006 113.40209961]
[62.00700760 112.56134796]
[48.46088791 106.11910248]
[34.91476822 99.67684937]
[21.36864471 93.23459625]
[7.82252455 86.79234314]
[-5.72359657 80.35009003]
[-19.32422066 74.02371979]
[-32.97835541 67.81367493]
[-46.63249207 61.60363770]
[-60.06515503 69.37172699]
[-75.49484253 67.72724152]
[-86.98852539 57.30251694]
[-90.12664795 42.10607529]
[-83.70253754 27.98126030]
[-70.18640137 20.35934830]
[-54.77545929 22.17111969]
[-43.39553833 32.71991348]
[-40.42245102 47.94950485]
[-26.76831627 54.15954208]
[-13.11418056 60.36958313]
[-5.70611095 60.27655411]
[0.71865529 66.80397034]
[14.26477623 73.24622345]
[27.81089783 79.68847656]
[41.35701752 86.13072968]
[54.90314102 92.57297516]
[68.44925690 99.01522827]
[75.16633606 95.67893982]
[62.67069244 87.38082123]
[63.60935974 72.41021729]
[77.04366302 65.73792267]
[89.53913116 74.03631592]
[88.60049438 89.00634766]
[95.31757355 85.67005920]
[98.36941528 70.98379517]
[101.42125702 56.29753494]
[104.47309875 41.61127472]
[107.52493286 26.92501259]
[110.57677460 12.23875141]
[113.62861633 -2.44750977]
[116.68045807 -17.13377190]
[119.73229980 -31.82003212]
[112.54135132 -50.63554764]
[125.97660828 -64.52246857]
[128.52526855 -79.30435944]
[131.07392883 -94.08625793]
[133.49629211 -108.88936615]
[135.79220581 -123.71261597]
[126.25798035 -136.31715393]
[128.51174927 -151.95991516]
[141.21636963 -161.36033630]
[156.83442688 -158.94132996]
[166.10000610 -146.13801575]
[163.51600647 -130.54640198]
[150.61546326 -121.41670990]
[148.31954956 -106.59345245]
[150.40779114 -99.48519135]
[145.85581970 -91.53759766]
[143.30715942 -76.75570679]
[140.75849915 -61.97381592]
[147.39398193 -54.16484451]
[148.64942932 -43.77312088]
[143.86810303 -34.21517563]
[134.41856384 -28.76819229]
[131.36671448 -14.08193111]
[128.31488037 0.60433054]
[125.26303864 15.29059219]
[122.21119690 29.97685242]
[119.15935516 44.66311264]
[116.10752106 59.34937668]
[113.05567932 74.03563690]
[110.00383759 88.72190094]
[112.42620850 103.52500916]
[120.00002289 116.47249603]
[127.57382965 129.41998291]
[135.25788879 142.30233765]
[143.05165100 155.11863708]
[150.95454407 167.86791992]
[158.96597290 180.54928589]
[166.97741699 193.23063660]
[174.98884583 205.91200256]
[191.47906494 214.08195496]
[191.52044678 231.62074280]
[199.74723816 244.16346741]
[207.97401428 256.70620728]
[216.20079041 269.24893188]
[224.42756653 281.79165649]
[232.65434265 294.33441162]
[240.88111877 306.87713623]
[245.58732605 309.24334717]
[248.59931946 312.82745361]
[249.73699951 316.77352905]
[249.18876648 320.27938843]
[256.76257324 333.22686768]
[270.40914917 341.23199463]
[270.15682983 356.12445068]
[277.73065186 369.07192993]
[291.37719727 377.07705688]
[291.12487793 391.96951294]
[298.69869995 404.91702271]
[306.27252197 417.86450195]
[313.95657349 430.74685669]
[321.75033569 443.56314087]
[329.54409790 456.37942505]
[337.33786011 469.19573975]
[345.45724487 481.80822754]
[353.89697266 494.20867920]
[361.33087158 499.55865479]
[362.37280273 506.89367676]
[370.59960938 519.43640137]
[378.82638550 531.97912598]
[387.05316162 544.52185059]
[401.09167480 551.81781006]
[401.60217285 566.70361328]
[409.82894897 579.24639893]
[418.16250610 591.71844482]
[426.60223389 604.11883545]
[435.04196167 616.51928711]
[450.61315918 619.22351074]
[459.64306641 632.19415283]
[456.77435303 647.73590088]
[443.70901489 656.62817383]
[428.19845581 653.59527588]
[419.44482422 640.43664551]
[422.64151001 624.95904541]
[414.20178223 612.55859375]
[405.76205444 600.15814209]
[399.38412476 596.38848877]
[397.28622437 587.47314453]
[389.05944824 574.93041992]
[375.60934448 568.53161621]
[374.51040649 552.74865723]
[366.28363037 540.20593262]
[358.05685425 527.66320801]
[349.83007812 515.12042236]
[341.49652100 502.64840698]
[333.05682373 490.24795532]
[329.65530396 489.23736572]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 150]
[3 149]
[4 148]
[5 147]
[7 146]
[8 145]
[9 144]
[11 142]
[12 141]
[14 139]
[15 138]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[21 129]
[22 128]
[25 126]
[26 125]
[27 124]
[28 123]
[30 122]
[31 121]
[33 120]
[34 119]
[35 118]
[46 72]
[47 71]
[48 70]
[49 69]
[50 68]
[51 67]
[52 65]
[53 64]
[54 63]
[79 117]
[80 116]
[81 115]
[82 114]
[83 113]
[84 112]
[85 111]
[86 110]
[87 109]
[89 105]
[90 104]
[91 103]
[92 101]
[93 100]
[151 182]
[152 181]
[154 180]
[155 179]
[156 178]
[157 177]
[159 175]
[160 174]
[161 172]
[162 171]
[163 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
