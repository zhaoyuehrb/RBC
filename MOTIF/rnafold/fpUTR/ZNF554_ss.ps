%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:16:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGUUUACCUCUGCGCGCGUCGGGGUUGGUGGCGGCGGCUGCGGCGAGUUCCUGAGGGGCGCCUGCGGGGGGCGUCCGCUCCGAGCGCCGAGGAGCCGAGCGGAGGAGGCGUCCCAGGGACACGCAGGGGAGGCCGGCCGGCCUGCACGGGGCGCUCCCGCCUCGGGGGCCCUGUCUGGCGCCUCAGCGCGCGCCCCG\
) } def
/len { sequence length } bind def

/coor [
[186.27867126 235.41342163]
[171.82824707 231.39030457]
[161.13143921 220.87467957]
[156.86204529 206.49510193]
[160.08728027 191.84594727]
[170.00094604 180.58897400]
[184.12496948 175.53804016]
[198.93019104 177.95626831]
[186.61654663 169.39038086]
[174.30291748 160.82449341]
[161.98928833 152.25860596]
[149.67565918 143.69271851]
[137.36201477 135.12683105]
[125.04838562 126.56094360]
[112.73475647 117.99505615]
[104.15264130 121.65067291]
[94.82701111 121.42979431]
[86.42758179 117.37197113]
[73.72222137 125.34529114]
[61.01686478 133.31861877]
[48.31150436 141.29193115]
[35.60614395 149.26524353]
[28.02986336 163.15447998]
[13.13675976 163.36602783]
[0.43139958 171.33935547]
[-12.27396107 179.31266785]
[-24.97932053 187.28599548]
[-37.68468094 195.25930786]
[-39.65176773 210.77267456]
[-51.16548538 221.35418701]
[-66.78941345 222.00756836]
[-79.14640808 212.42431641]
[-82.40187836 197.12934875]
[-75.01868439 183.34448242]
[-60.48294830 177.57850647]
[-45.65800095 182.55395508]
[-32.95264053 174.58062744]
[-20.24728012 166.60731506]
[-7.54191923 158.63398743]
[5.16344118 150.66067505]
[11.83094883 137.34175110]
[27.63282394 136.55989075]
[40.33818436 128.58656311]
[53.04354477 120.61325073]
[65.74890900 112.63993073]
[78.45426941 104.66661072]
[78.74385071 94.15430450]
[83.87045288 84.97223663]
[77.02896881 71.62329865]
[70.18747711 58.27436829]
[63.34599304 44.92543411]
[56.50450516 31.57649803]
[49.66301727 18.22756386]
[44.31330490 14.31581402]
[42.08421326 9.07476616]
[42.82378769 4.34747553]
[36.40711975 -9.21078110]
[29.99044609 -22.76903915]
[23.57377625 -36.32729721]
[17.15710449 -49.88555145]
[10.74043369 -63.44380951]
[4.32376289 -77.00206757]
[-2.09290814 -90.56032562]
[-8.50957870 -104.11858368]
[-18.20169067 -115.56685638]
[-30.51532364 -124.13274384]
[-46.49649811 -122.72506714]
[-57.45638275 -134.44088745]
[-54.98748779 -150.29283142]
[-40.98373795 -158.12065125]
[-26.18761444 -151.91949463]
[-21.94943428 -136.44638062]
[-9.63580132 -127.88048553]
[2.40181208 -136.83123779]
[14.43836498 -145.78117371]
[9.78059387 -160.03968811]
[5.12282372 -174.29820251]
[0.46505320 -188.55671692]
[-4.19271708 -202.81521606]
[-8.85048771 -217.07373047]
[-14.49534321 -224.26795959]
[-13.46731758 -231.59423828]
[-17.89941978 -245.92449951]
[-23.43000221 -253.20693970]
[-22.28644943 -260.51608276]
[-26.49177742 -274.91452026]
[-41.14383316 -280.02304077]
[-49.96722031 -292.78732300]
[-49.56916046 -308.29931641]
[-40.10271835 -320.59426880]
[-25.20793533 -324.94454956]
[-10.61215878 -319.67739868]
[-1.92776120 -306.81814575]
[-2.49407196 -291.31140137]
[-12.09333324 -279.11984253]
[-7.88800430 -264.72140503]
[-3.56915474 -250.35659790]
[0.86294687 -236.02633667]
[5.40802479 -221.73150635]
[10.06579494 -207.47299194]
[14.72356510 -193.21447754]
[19.38133621 -178.95596313]
[24.03910637 -164.69744873]
[28.69687653 -150.43894958]
[27.94530296 -129.32423401]
[18.12785149 -115.08735657]
[5.04867792 -110.53524780]
[11.46534920 -96.97699738]
[17.88201904 -83.41873932]
[24.29869080 -69.86048126]
[30.71536255 -56.30222321]
[37.13203430 -42.74396515]
[43.54870224 -29.18570900]
[49.96537399 -15.62745285]
[56.38204575 -2.06919527]
[63.01195145 11.38607693]
[69.85343933 24.73501205]
[76.69492340 38.08394623]
[83.53641510 51.43288040]
[90.37789917 64.78181458]
[97.21939087 78.13075256]
[116.59842682 85.49179077]
[121.30064392 105.68141937]
[133.61427307 114.24730682]
[145.92790222 122.81319427]
[158.24154663 131.37908936]
[170.55517578 139.94497681]
[182.86880493 148.51086426]
[195.18244934 157.07675171]
[207.49607849 165.64263916]
[222.39105225 167.41452026]
[236.37057495 161.97640991]
[250.35009766 156.53831482]
[264.32962036 151.10020447]
[278.30914307 145.66210938]
[288.14474487 132.53987122]
[304.39224243 134.76501465]
[310.33758545 150.04849243]
[299.86471558 162.66798401]
[283.74725342 159.64163208]
[269.76773071 165.07972717]
[255.78820801 170.51783752]
[241.80868530 175.95593262]
[227.82916260 181.39404297]
[226.41682434 188.75985718]
[237.76266479 198.57168579]
[223.59214783 203.49150085]
[222.17980957 210.85731506]
[233.15638733 221.08055115]
[244.13298035 231.30378723]
[255.10955811 241.52703857]
[266.08615112 251.75027466]
[277.06271362 261.97351074]
[288.03930664 272.19674683]
[299.01589966 282.41998291]
[309.85791016 281.40594482]
[319.27182007 286.42785645]
[324.25799561 295.61148071]
[323.37966919 305.80395508]
[334.02804565 316.36862183]
[344.67645264 326.93328857]
[358.05566406 325.33044434]
[369.74310303 331.63668823]
[375.57525635 343.35070801]
[373.62197876 356.09280396]
[384.10226440 366.82424927]
[394.58251953 377.55569458]
[409.76000977 382.02279663]
[413.11685181 396.53421021]
[423.59713745 407.26562500]
[434.07742310 417.99707031]
[449.88156128 417.93356323]
[461.04272461 429.12304688]
[460.93914795 444.92697144]
[449.63229370 455.96920776]
[433.83032227 455.69854736]
[422.90826416 444.27557373]
[423.34597778 428.47735596]
[412.86569214 417.74591064]
[402.38540649 407.01446533]
[387.95758057 403.31494141]
[383.85110474 388.03598022]
[373.37081909 377.30453491]
[362.89053345 366.57308960]
[346.08526611 367.09548950]
[333.85778809 355.06854248]
[334.11178589 337.58166504]
[323.46340942 327.01699829]
[312.81503296 316.45233154]
[293.81118774 312.91372681]
[288.79266357 293.39657593]
[277.81607056 283.17333984]
[266.83947754 272.95010376]
[255.86289978 262.72686768]
[244.88632202 252.50361633]
[233.90974426 242.28038025]
[222.93315125 232.05714417]
[211.95657349 221.83390808]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 130]
[9 129]
[10 128]
[11 127]
[12 126]
[13 125]
[14 124]
[15 123]
[18 46]
[19 45]
[20 44]
[21 43]
[22 42]
[24 40]
[25 39]
[26 38]
[27 37]
[28 36]
[48 121]
[49 120]
[50 119]
[51 118]
[52 117]
[53 116]
[56 115]
[57 114]
[58 113]
[59 112]
[60 111]
[61 110]
[62 109]
[63 108]
[64 107]
[65 73]
[66 72]
[75 104]
[76 103]
[77 102]
[78 101]
[79 100]
[80 99]
[82 98]
[83 97]
[85 96]
[86 95]
[131 144]
[132 143]
[133 142]
[134 141]
[135 140]
[148 198]
[149 197]
[150 196]
[151 195]
[152 194]
[153 193]
[154 192]
[155 191]
[159 189]
[160 188]
[161 187]
[165 184]
[166 183]
[167 182]
[169 180]
[170 179]
[171 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
