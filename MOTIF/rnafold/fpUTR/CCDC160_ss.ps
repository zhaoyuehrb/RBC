%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:14:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGGCUCAGCCCGGAGCCGGCCCGGCGGGGUCGCGGUGGCCAGAGCCGAACGGGGGGCUGCCGCGCGCGGGUGGUGGUUGUCUUUGAGGAAGAGAGGUUCGGGCUCUCCAGACGGCAUCCACGCUUCCAGGGAGGGAGGCGGAAUUUUCUUUUUUCCAGUUCAAACUGGAGAAGGAGGGCAGAGAUAUCCAGUAGACAGAAGAUCUUGGACCCCAGGAAGUAUAUUGGAAGAGGUGCCUGGAGAA\
) } def
/len { sequence length } bind def

/coor [
[287.75515747 140.78509521]
[284.81088257 155.49328613]
[275.43014526 167.19807434]
[261.71627808 173.27503967]
[246.74411011 172.36161804]
[233.87066650 164.66264343]
[225.98236084 151.90432739]
[224.84790039 136.94728088]
[230.72161865 123.14513397]
[242.28820801 113.59172821]
[227.37577820 115.21024323]
[212.46336365 116.82875824]
[197.55093384 118.44727325]
[182.63850403 120.06578827]
[176.34289551 123.90292358]
[167.52629089 121.60881805]
[152.59449768 123.03753662]
[137.66268921 124.46625519]
[122.73088837 125.89497375]
[109.53878021 133.03417969]
[100.17578125 144.75315857]
[90.81278229 156.47212219]
[81.44979095 168.19110107]
[72.08679199 179.91006470]
[70.16419983 196.19612122]
[54.99393082 202.42468262]
[42.18185425 192.18833923]
[44.90793991 176.01736450]
[60.36782074 170.54707336]
[69.73081970 158.82809448]
[79.09381104 147.10913086]
[88.45681000 135.39015198]
[97.81980896 123.67118835]
[89.29883575 111.32642365]
[75.02124786 115.92537689]
[60.74365234 120.52433014]
[46.46606064 125.12327576]
[32.18846893 129.72222900]
[17.91087532 134.32118225]
[3.63328218 138.92013550]
[-10.64431000 143.51907349]
[-24.92190361 148.11802673]
[-28.17279053 159.52403259]
[-36.43331909 167.86688232]
[-47.57693100 171.16278076]
[-58.81266022 168.70649719]
[-67.38404083 161.21870422]
[-81.77398682 165.45301819]
[-92.68585968 177.69487000]
[-108.68643951 174.10134888]
[-113.31571198 158.36915588]
[-101.81147003 146.68222046]
[-86.00830078 151.06306458]
[-71.61834717 146.82875061]
[-63.81588745 130.24981689]
[-46.06065750 124.56438446]
[-29.52085304 133.84043884]
[-15.24326134 129.24148560]
[-0.96566820 124.64253998]
[13.31192493 120.04358673]
[27.58951759 115.44463348]
[41.86711121 110.84568787]
[56.14470291 106.24673462]
[70.42229462 101.64778137]
[84.69989014 97.04883575]
[84.31833649 82.05302429]
[83.93682861 67.05854034]
[69.44384003 63.19161224]
[54.95084381 59.32468796]
[40.40128708 66.08412170]
[26.10993958 58.79461288]
[23.03989983 43.04804611]
[33.54623795 30.92383957]
[49.56939316 31.72264671]
[58.81776810 44.83169174]
[73.31076050 48.69861984]
[87.80375671 52.56554413]
[91.24687958 45.90259552]
[77.92108154 39.01614761]
[84.80773163 25.69045830]
[98.13311768 32.57669067]
[101.57624054 25.91374016]
[90.03802490 16.32888031]
[78.49980927 6.74401999]
[66.96158600 -2.84084058]
[55.42337036 -12.42570114]
[39.38036728 -12.38613033]
[29.45961571 -24.99399376]
[33.27146530 -40.57761765]
[47.89179611 -47.18257904]
[62.10513687 -39.74211884]
[65.00823212 -23.96391869]
[76.54644775 -14.37905788]
[88.08466339 -4.79419708]
[99.62288666 4.79066324]
[111.16110229 14.37552357]
[121.30216980 110.96316528]
[136.23397827 109.53444672]
[151.16577148 108.10572815]
[166.09757996 106.67700958]
[181.01998901 105.15336609]
[195.93241882 103.53485107]
[210.84484863 101.91633606]
[225.75726318 100.29782104]
[240.66969299 98.67930603]
[255.43251038 96.02240753]
[269.97351074 92.34012604]
[284.51452637 88.65784454]
[299.05554199 84.97556305]
[313.59652710 81.29328156]
[328.13754272 77.61100006]
[331.84576416 74.00449371]
[336.13525391 72.33224487]
[340.17788696 72.49385071]
[343.30352783 74.07690430]
[357.97442627 70.95200348]
[372.64532471 67.82711029]
[387.31619263 64.70221710]
[401.98709106 61.57732010]
[416.65798950 58.45242310]
[417.58074951 34.92828751]
[434.52157593 13.65269947]
[464.25006104 5.30831957]
[467.65426636 -9.30028629]
[471.05847168 -23.90889168]
[474.46267700 -38.51749802]
[477.86688232 -53.12610245]
[481.27108765 -67.73471069]
[484.67532349 -82.34331512]
[476.11602783 -95.62918091]
[479.53982544 -111.05815125]
[492.91543579 -119.47648621]
[508.30734253 -115.88974762]
[516.58380127 -102.42588043]
[512.83453369 -87.07275391]
[499.28390503 -78.93910980]
[495.87969971 -64.33049774]
[492.47549438 -49.72189331]
[489.07128906 -35.11328888]
[485.66708374 -20.50468445]
[482.26287842 -5.89607763]
[478.85867310 8.71252823]
[484.97634888 13.05117321]
[498.60867310 6.79338264]
[497.21173096 21.72846413]
[503.32943726 26.06711006]
[515.99023438 18.02326584]
[528.65106201 9.97942066]
[541.31188965 1.93557668]
[553.97271729 -6.10826778]
[566.63354492 -14.15211201]
[579.29437256 -22.19595528]
[591.95520020 -30.23979950]
[604.61608887 -38.28364563]
[617.27691650 -46.32748795]
[622.82537842 -53.55312729]
[630.15026855 -54.39193726]
[642.91241455 -62.27410126]
[655.67449951 -70.15626526]
[668.43664551 -78.03842926]
[681.19873047 -85.92060089]
[688.49261475 -100.60839081]
[704.87426758 -101.36539459]
[713.49169922 -87.41287994]
[705.47998047 -73.10398865]
[689.08087158 -73.15848541]
[676.31878662 -65.27632141]
[663.55670166 -57.39415741]
[650.79455566 -49.51198959]
[638.03247070 -41.62982559]
[625.32073975 -33.66666031]
[612.65991211 -25.62281609]
[599.99908447 -17.57897186]
[587.33825684 -9.53512764]
[574.67742920 -1.49128377]
[562.01660156 6.55256081]
[549.35577393 14.59640503]
[536.69494629 22.64024925]
[524.03411865 30.68409348]
[511.37329102 38.72793961]
[511.18252563 46.22550964]
[526.14984131 45.23629761]
[539.79351807 39.00332642]
[552.30865479 47.27203751]
[551.92700195 62.26718140]
[539.00738525 69.88849640]
[525.69866943 62.96974182]
[510.80099487 61.22065735]
[510.61022949 68.71823120]
[522.84558105 77.39552307]
[535.08099365 86.07281494]
[547.31634521 94.75010681]
[559.55175781 103.42739105]
[571.78717041 112.10468292]
[584.02252197 120.78197479]
[599.75512695 122.45392609]
[605.66076660 136.12773132]
[617.89611816 144.80502319]
[624.77581787 141.94586182]
[632.15155029 141.63711548]
[639.11669922 143.86990356]
[644.83123779 148.32575989]
[648.62280273 154.42115784]
[650.06616211 161.38365173]
[649.03002930 168.34962463]
[660.68920898 177.78697205]
[672.34838867 187.22430420]
[684.00756836 196.66163635]
[695.66674805 206.09896851]
[707.32598877 215.53630066]
[723.44146729 220.80187988]
[722.84289551 237.74526978]
[706.39599609 241.86047363]
[697.88861084 227.19549561]
[686.22943115 217.75816345]
[674.57025146 208.32083130]
[662.91107178 198.88348389]
[651.25189209 189.44615173]
[639.59265137 180.00881958]
[617.17230225 178.83451843]
[609.21887207 157.04040527]
[596.98345947 148.36311340]
[582.12603760 147.31182861]
[575.34521484 133.01736450]
[563.10986328 124.34007263]
[550.87445068 115.66278076]
[538.63909912 106.98548889]
[526.40368652 98.30819702]
[514.16833496 89.63090515]
[501.93292236 80.95361328]
[479.17932129 100.40380096]
[452.11685181 103.60782623]
[430.26010132 92.36923218]
[419.78286743 73.12331390]
[405.11199951 76.24820709]
[390.44110107 79.37310791]
[375.77020264 82.49800110]
[361.09930420 85.62289429]
[346.42843628 88.74779510]
[331.81982422 92.15200043]
[317.27880859 95.83428192]
[302.73782349 99.51656342]
[288.19680786 103.19884491]
[273.65579224 106.88112640]
[259.11480713 110.56341553]
[273.28488159 115.48365784]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 105]
[11 104]
[12 103]
[13 102]
[14 101]
[16 100]
[17 99]
[18 98]
[19 97]
[20 33]
[21 32]
[22 31]
[23 30]
[24 29]
[34 65]
[35 64]
[36 63]
[37 62]
[38 61]
[39 60]
[40 59]
[41 58]
[42 57]
[47 54]
[48 53]
[67 77]
[68 76]
[69 75]
[82 96]
[83 95]
[84 94]
[85 93]
[86 92]
[106 245]
[107 244]
[108 243]
[109 242]
[110 241]
[111 240]
[115 239]
[116 238]
[117 237]
[118 236]
[119 235]
[120 234]
[123 142]
[124 141]
[125 140]
[126 139]
[127 138]
[128 137]
[129 136]
[146 180]
[147 179]
[148 178]
[149 177]
[150 176]
[151 175]
[152 174]
[153 173]
[154 172]
[155 171]
[157 170]
[158 169]
[159 168]
[160 167]
[161 166]
[189 230]
[190 229]
[191 228]
[192 227]
[193 226]
[194 225]
[195 224]
[197 222]
[198 221]
[205 219]
[206 218]
[207 217]
[208 216]
[209 215]
[210 214]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
