%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:25:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACACGGACUACAGGGGAGUUUUGUUGAAGUUGCAAAGUCCUGGAGCCUCCAGAGGGCUGUCGGCGCAGUAGCAGCGAGCAGCAGAGUCCGCACGCUCCGGCGAGGGGCAGAAGAGCGCGAGGGAGCGCGGGGCAGCAGAAGCGAGAGCCGAGCGCGGACCCAGCCAGGACCCACAGCCCUCCCCAGCUGCCCAGGAAGAGCCCCAGCC\
) } def
/len { sequence length } bind def

/coor [
[-54.01783371 145.98468018]
[-64.23998260 156.96228027]
[-79.22489929 157.63488770]
[-90.38944244 147.61726379]
[-91.33875275 132.64733887]
[-81.52990723 121.30007172]
[-96.52990723 121.30007172]
[-111.52990723 121.30007172]
[-116.59353638 134.61254883]
[-125.87771606 145.37435913]
[-138.25172424 152.30604553]
[-152.21916199 154.59268188]
[-166.09886169 151.97975159]
[-178.22726440 144.80113220]
[-187.15782166 133.93675232]
[-191.83346558 120.70463562]
[-206.83178711 120.48024750]
[-221.83010864 120.25585175]
[-230.45837402 123.25672150]
[-237.05065918 119.91424561]
[-252.04394531 119.46551514]
[-267.03723145 119.01678467]
[-282.03051758 118.56805420]
[-297.02380371 118.11931610]
[-312.01708984 117.67058563]
[-327.01037598 117.22185516]
[-342.00366211 116.77312469]
[-354.51571655 128.99832153]
[-371.66064453 128.40408325]
[-382.84664917 115.84618378]
[-397.84497070 115.62178802]
[-412.84329224 115.39739990]
[-427.84161377 115.17301178]
[-442.83993530 114.94861603]
[-452.80014038 128.61894226]
[-468.78707886 133.60958862]
[-484.44165039 128.14289856]
[-493.65991211 114.56021881]
[-508.65991211 114.56021881]
[-522.46008301 122.29751587]
[-535.18737793 114.56021881]
[-550.18737793 114.56021881]
[-565.18737793 114.56021881]
[-580.18737793 114.56021881]
[-595.18695068 114.67241669]
[-610.18524170 114.89680481]
[-625.18359375 115.12120056]
[-640.18188477 115.34558868]
[-655.18023682 115.56998444]
[-667.34027100 126.03482819]
[-683.07623291 122.91099548]
[-690.31689453 108.59482574]
[-683.50775146 94.06845093]
[-667.87225342 90.47527313]
[-655.40460205 100.57166290]
[-640.40631104 100.34726715]
[-625.40795898 100.12287903]
[-610.40966797 99.89848328]
[-595.41131592 99.67409515]
[-588.76977539 96.43061066]
[-580.18737793 99.56021881]
[-565.18737793 99.56021881]
[-550.18737793 99.56021881]
[-535.18737793 99.56021881]
[-522.46008301 91.82291412]
[-508.65991211 99.56021881]
[-493.65991211 99.56021881]
[-486.84835815 88.07736206]
[-475.15844727 81.40639496]
[-461.59078979 81.38278198]
[-449.68933105 88.11964417]
[-442.61553955 99.95029449]
[-427.61721802 100.17469025]
[-412.61889648 100.39907837]
[-397.62057495 100.62346649]
[-382.62225342 100.84786224]
[-374.72189331 90.66820526]
[-362.21414185 86.84066010]
[-349.60009766 90.97694397]
[-341.55493164 101.77983856]
[-326.56164551 102.22856903]
[-311.56835938 102.67729950]
[-296.57507324 103.12602997]
[-281.58178711 103.57476807]
[-266.58850098 104.02349854]
[-251.59521484 104.47222900]
[-236.60192871 104.92095947]
[-221.60571289 105.25753021]
[-206.60739136 105.48192596]
[-191.60906982 105.70631409]
[-185.55099487 91.06341553]
[-174.31039429 79.83904266]
[-159.58747864 73.77278137]
[-143.62533569 73.82081604]
[-128.86811829 80.00537872]
[-117.58685303 91.40677643]
[-111.52990723 106.30007172]
[-96.52990723 106.30007172]
[-81.52990723 106.30007172]
[-66.54501343 105.62709808]
[-51.60540009 104.28250885]
[-36.66578674 102.93791962]
[-28.67487717 93.85586548]
[-16.23890305 92.61380768]
[-5.97083521 100.42038727]
[8.98722172 99.29943085]
[23.94527817 98.17848206]
[38.90333557 97.05753326]
[53.86139297 95.93657684]
[56.51091766 84.06317902]
[62.16064453 73.28922272]
[70.42081451 64.35797119]
[80.72157288 57.88557434]
[92.35230255 54.31854630]
[104.51062775 53.90296555]
[116.35778046 56.66749954]
[123.85778046 43.67711639]
[131.35777283 30.68673706]
[138.85777283 17.69635582]
[134.52574158 2.49737358]
[142.28274536 -11.27232361]
[157.52667236 -15.44341755]
[171.21359253 -7.54127312]
[175.22328186 7.74590778]
[167.17687988 21.34851265]
[151.84815979 25.19635582]
[144.34815979 38.18673706]
[136.84815979 51.17711639]
[129.34815979 64.16749573]
[141.57885742 79.59214783]
[146.29904175 98.70313263]
[161.16328430 100.71662903]
[176.02752686 102.73013306]
[190.89176941 104.74362946]
[205.75602722 106.75712585]
[220.62026978 108.77062988]
[235.48451233 110.78412628]
[243.86682129 98.07297516]
[256.81771851 90.20303345]
[271.81878662 88.63304901]
[285.98339844 93.60359192]
[296.61215210 104.10253906]
[310.65567017 98.83191681]
[320.64739990 85.82818604]
[336.86712646 88.24736786]
[342.62939453 103.60082245]
[332.00643921 116.09422302]
[315.92630005 112.87544250]
[301.88275146 118.14606476]
[302.16595459 121.25613403]
[302.16268921 124.37905884]
[316.62213135 128.36961365]
[331.08157349 132.36016846]
[346.44284058 128.57304382]
[356.65304565 139.41744995]
[371.11248779 143.40800476]
[385.65783691 147.07310486]
[400.28173828 150.41091919]
[413.55999756 142.26686096]
[428.34320068 145.86021423]
[436.02548218 158.56918335]
[450.64938354 161.90699768]
[464.94375610 154.62341309]
[479.49050903 161.38888550]
[483.13061523 177.01350403]
[473.07171631 189.51142883]
[457.03012085 189.29530334]
[447.31158447 176.53091431]
[432.68765259 173.19311523]
[420.25195312 181.31028748]
[405.37365723 178.13359070]
[396.94393921 165.03483582]
[382.32000732 161.69702148]
[379.15557861 163.25389099]
[375.07968140 163.35491943]
[370.78500366 161.58834839]
[367.12194824 157.86744690]
[352.66250610 153.87689209]
[338.33547974 157.94943237]
[327.09103394 146.81961060]
[312.63159180 142.82905579]
[298.17214966 138.83850098]
[286.50430298 151.63664246]
[269.97528076 157.07746887]
[252.82409668 153.67979431]
[239.49171448 142.24023438]
[233.47100830 125.64837646]
[218.60676575 123.63487244]
[203.74252319 121.62137604]
[188.87828064 119.60787964]
[174.01402283 117.59437561]
[159.14978027 115.58087921]
[144.28553772 113.56738281]
[137.61184692 127.03019714]
[126.97960663 137.64814758]
[113.50783539 144.30372620]
[98.61440277 146.29646301]
[83.86679077 143.41661072]
[70.81716156 135.96726990]
[60.83895493 124.73246765]
[54.98234558 110.89463806]
[40.02428818 112.01558685]
[25.06623077 113.13654327]
[10.10817337 114.25749207]
[-4.84988403 115.37844086]
[-19.81907463 126.10186005]
[-35.32119751 117.87753296]
[-50.26081085 119.22212219]
[-65.20042419 120.56671143]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 99]
[7 98]
[8 97]
[16 90]
[17 89]
[18 88]
[20 87]
[21 86]
[22 85]
[23 84]
[24 83]
[25 82]
[26 81]
[27 80]
[30 76]
[31 75]
[32 74]
[33 73]
[34 72]
[38 67]
[39 66]
[41 64]
[42 63]
[43 62]
[44 61]
[45 59]
[46 58]
[47 57]
[48 56]
[49 55]
[100 209]
[101 208]
[102 207]
[105 205]
[106 204]
[107 203]
[108 202]
[109 201]
[116 129]
[117 128]
[118 127]
[119 126]
[131 193]
[132 192]
[133 191]
[134 190]
[135 189]
[136 188]
[137 187]
[142 149]
[143 148]
[151 182]
[152 181]
[153 180]
[155 178]
[156 177]
[157 173]
[158 172]
[161 169]
[162 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
