%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:39:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCCCCGUGUGGGGGAGGGGGGCCUUCGGUCUCUCCCCAGCCUCUUCCUUCCCCCUGGCCUGAGGGUGGGUGGGGAGGGGCAGUUCCUCUUUCCUUCCCAAGCACCGAGGAGGCCCCAGCUCCCUAGGGGCUGAGAAGCUGGAGUCCUGGGCAAGGGGAGGAGCUGAGCCCUACUCUUGCAAGACCCCCGGCCUCCUCACCCCACGCGGGAAGC\
) } def
/len { sequence length } bind def

/coor [
[86.37440491 556.36236572]
[81.42801666 541.65478516]
[86.10332489 526.85882568]
[98.60256195 517.66375732]
[98.38338470 502.66537476]
[98.16421509 487.66699219]
[97.94504547 472.66857910]
[97.72586823 457.67019653]
[97.50669861 442.67178345]
[97.28752136 427.67340088]
[97.06835175 412.67498779]
[96.84917450 397.67660522]
[96.63000488 382.67819214]
[96.41082764 367.67977905]
[85.58033752 357.51928711]
[85.14440918 342.31188965]
[95.87512970 331.02078247]
[95.65595245 316.02236938]
[95.43678284 301.02395630]
[95.21760559 286.02557373]
[94.99843597 271.02716064]
[94.77926636 256.02877808]
[94.56008911 241.03038025]
[94.34091949 226.03198242]
[82.07827759 217.61975098]
[77.06112671 203.43200684]
[81.41112518 188.83984375]
[93.66092682 179.49916077]
[93.44175720 164.50076294]
[93.22257996 149.50236511]
[93.00341034 134.50396729]
[92.78423309 119.50556183]
[82.74404907 113.25474548]
[77.37866211 102.12191010]
[78.86368561 89.31803131]
[87.30063629 78.88024139]
[100.51455688 74.39974976]
[94.54727936 60.63779068]
[88.58000946 46.87582779]
[82.61273193 33.11386490]
[67.57055664 22.49002838]
[70.25707245 5.14659595]
[64.08934784 -8.52670765]
[57.92163086 -22.20001030]
[51.75391006 -35.87331390]
[37.24520493 -41.54211426]
[31.18504143 -55.49665070]
[36.67879105 -69.29354858]
[30.51107025 -82.96685028]
[24.34334946 -96.64015198]
[18.17562675 -110.31345367]
[6.67624569 -110.91375732]
[-3.61858964 -115.92472839]
[-11.09921169 -124.50607300]
[-14.61821842 -135.26387024]
[-13.66627121 -146.47682190]
[-8.44515324 -156.37167358]
[-17.26193237 -168.50692749]
[-26.07871056 -180.64219666]
[-34.89548874 -192.77745056]
[-43.71226883 -204.91270447]
[-60.62652969 -204.68318176]
[-74.20919800 -214.48420715]
[-79.22222137 -230.29173279]
[-73.87839508 -245.81483459]
[-82.87155151 -257.81994629]
[-91.86470032 -269.82510376]
[-100.85785675 -281.83023071]
[-116.25201416 -284.20877075]
[-125.20133209 -296.51181030]
[-122.83888245 -311.17312622]
[-131.83203125 -323.17825317]
[-140.82518005 -335.18338013]
[-149.81834412 -347.18850708]
[-158.81149292 -359.19366455]
[-167.80464172 -371.19879150]
[-176.79779053 -383.20391846]
[-185.79095459 -395.20904541]
[-194.78410339 -407.21417236]
[-203.77725220 -419.21932983]
[-211.42449951 -424.20938110]
[-212.81257629 -431.46621704]
[-221.62934875 -443.60147095]
[-237.18618774 -447.52120972]
[-243.68968201 -462.18698120]
[-236.15089417 -476.34841919]
[-220.35295105 -479.14208984]
[-208.41468811 -468.42492676]
[-209.49409485 -452.41824341]
[-200.67732239 -440.28298950]
[-191.77212524 -428.21246338]
[-182.77896118 -416.20733643]
[-173.78581238 -404.20220947]
[-164.79266357 -392.19708252]
[-155.79951477 -380.19192505]
[-146.80635071 -368.18679810]
[-137.81320190 -356.18167114]
[-128.82005310 -344.17654419]
[-119.82690430 -332.17141724]
[-110.83374786 -320.16629028]
[-96.09949493 -318.31225586]
[-86.80814362 -306.26544189]
[-88.85272217 -290.82336426]
[-79.85957336 -278.81823730]
[-70.86641693 -266.81311035]
[-61.87326431 -254.80798340]
[-48.60134888 -256.24105835]
[-36.25506592 -250.88681030]
[-28.10114288 -240.04534912]
[-26.35439301 -226.48361206]
[-31.57701302 -213.72947693]
[-22.76023483 -201.59422302]
[-13.94345665 -189.45896912]
[-5.12667751 -177.32371521]
[3.69010115 -165.18846130]
[11.85432148 -166.91065979]
[20.16368675 -166.15240479]
[27.50495338 -179.23315430]
[34.84622192 -192.31388855]
[42.18748856 -205.39463806]
[49.52875519 -218.47537231]
[56.87002563 -231.55610657]
[64.21129608 -244.63685608]
[66.69053650 -261.40853882]
[83.49311066 -263.66906738]
[90.31669617 -248.14891052]
[77.29203033 -237.29559326]
[69.95076752 -224.21484375]
[62.60949707 -211.13410950]
[55.26823044 -198.05335999]
[47.92696381 -184.97262573]
[40.58569336 -171.89187622]
[33.24442673 -158.81114197]
[41.97040558 -137.55493164]
[31.84893036 -116.48117828]
[38.01665115 -102.80787659]
[44.18437195 -89.13456726]
[50.35209274 -75.46126556]
[64.33071899 -70.44792175]
[70.78044891 -56.66911316]
[65.42721558 -42.04103470]
[71.59493256 -28.36773109]
[77.76265717 -14.69442844]
[83.93037415 -1.02112508]
[95.12815857 3.54946852]
[100.37931824 14.88792706]
[96.37469482 27.14658928]
[102.34197235 40.90855026]
[108.30924988 54.67051697]
[114.27651978 68.43247986]
[126.28165436 77.42562866]
[141.16610718 79.28388214]
[156.05055237 81.14213562]
[170.93501282 83.00038147]
[185.81945801 84.85863495]
[200.70391846 86.71688843]
[215.58836365 88.57514191]
[230.24075317 82.60705566]
[241.91146851 91.86145020]
[256.79589844 93.71970367]
[271.68035889 95.57794952]
[280.58050537 93.53615570]
[286.76812744 97.57363892]
[301.62384033 99.64917755]
[318.14724731 95.85264587]
[326.36953735 110.67932129]
[314.39843750 122.68471527]
[299.54830933 114.50489044]
[284.69259644 112.42935181]
[269.82211304 110.46240234]
[254.93766785 108.60414886]
[240.05320740 106.74590302]
[226.46545410 112.84690094]
[213.73011780 103.45958710]
[198.84565735 101.60134125]
[183.96121216 99.74308777]
[169.07675171 97.88483429]
[154.19230652 96.02658844]
[139.30786133 94.16833496]
[124.42340088 92.31008148]
[120.98056030 109.90568542]
[107.78263092 119.28639221]
[108.00180817 134.28479004]
[108.22097778 149.28318787]
[108.44015503 164.28158569]
[108.65932465 179.27998352]
[121.17683411 188.25874329]
[125.95136261 202.71755981]
[121.35091400 217.04585266]
[109.33931732 225.81280518]
[109.55848694 240.81120300]
[109.77766418 255.80960083]
[109.99683380 270.80801392]
[110.21601105 285.80639648]
[110.43518066 300.80480957]
[110.65435791 315.80319214]
[110.87352753 330.80160522]
[121.92958832 341.77435303]
[121.93820190 356.98797607]
[111.40922546 367.46063232]
[111.62840271 382.45901489]
[111.84757233 397.45742798]
[112.06674957 412.45581055]
[112.28591919 427.45422363]
[112.50509644 442.45260620]
[112.72426605 457.45101929]
[112.94344330 472.44940186]
[113.16261292 487.44781494]
[113.38179016 502.44619751]
[113.60095978 517.44458008]
[126.36354065 526.27050781]
[131.46917725 540.92352295]
[126.95466614 555.76934814]
[114.55590820 565.09948730]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 210]
[5 209]
[6 208]
[7 207]
[8 206]
[9 205]
[10 204]
[11 203]
[12 202]
[13 201]
[14 200]
[17 197]
[18 196]
[19 195]
[20 194]
[21 193]
[22 192]
[23 191]
[24 190]
[28 186]
[29 185]
[30 184]
[31 183]
[32 182]
[37 150]
[38 149]
[39 148]
[40 147]
[42 144]
[43 143]
[44 142]
[45 141]
[48 138]
[49 137]
[50 136]
[51 135]
[57 115]
[58 114]
[59 113]
[60 112]
[61 111]
[65 106]
[66 105]
[67 104]
[68 103]
[71 100]
[72 99]
[73 98]
[74 97]
[75 96]
[76 95]
[77 94]
[78 93]
[79 92]
[80 91]
[82 90]
[83 89]
[117 133]
[118 132]
[119 131]
[120 130]
[121 129]
[122 128]
[123 127]
[151 180]
[152 179]
[153 178]
[154 177]
[155 176]
[156 175]
[157 174]
[159 172]
[160 171]
[161 170]
[163 169]
[164 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
