%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:52:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUCCCUUCCCUGUGACUGGAGUGGGGAGCCUGAGGAUGCCCCUGGGACCGCCUCAUAGGACCCCAGCUGAGGGCCCAGCAGUUGGCUUGGGGGCCUGACUCUGGCAUCUUAUAAGAAGUGCCAGAGGUGAGGCCCUAAGAAAACGAGCCUCGGGAGCCAGCCCAAGACCAGGCAUUCAGUGCCAGUCUUUGAGAACCACUGUCUGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[159.34600830 238.29591370]
[151.87536621 238.95877075]
[145.05564880 252.31883240]
[138.23593140 265.67892456]
[131.41622925 279.03897095]
[124.59651184 292.39904785]
[117.77680206 305.75912476]
[111.05580139 319.16912842]
[104.43387604 332.62832642]
[97.81195068 346.08752441]
[91.19002533 359.54672241]
[98.54650116 373.20916748]
[96.43408966 388.58178711]
[85.66504669 399.75350952]
[70.38029480 402.42855835]
[56.45713425 395.57836914]
[49.24929810 381.83694458]
[51.52835083 366.48815918]
[62.41794968 355.43389893]
[77.73081970 352.92480469]
[84.35274506 339.46560669]
[90.97467041 326.00640869]
[97.59659576 312.54721069]
[97.72886658 305.15887451]
[104.41673279 298.93942261]
[111.23644257 285.57934570]
[118.05615234 272.21926880]
[124.87586212 258.85919189]
[131.69557190 245.49913025]
[138.51528931 232.13905334]
[139.17878723 217.15373230]
[133.56652832 203.24320984]
[127.95426941 189.33270264]
[122.34201050 175.42218018]
[116.72974396 161.51165771]
[111.11748505 147.60113525]
[105.50522614 133.69062805]
[87.06913757 131.59364319]
[72.45323944 120.16287994]
[65.97555542 102.77534485]
[51.12255859 100.68045044]
[36.26956558 98.58554840]
[21.41657448 96.49064636]
[6.50825500 94.83473969]
[-8.44241714 93.61926270]
[-23.39308929 92.40377808]
[-38.34376144 91.18830109]
[-53.29443359 89.97282410]
[-69.74866486 98.24118805]
[-83.78479004 87.70662689]
[-98.75176239 86.71178436]
[-108.58114624 98.71856689]
[-123.59919739 102.62211609]
[-138.03117371 96.92143250]
[-146.32768250 83.80855560]
[-145.29853821 68.32564545]
[-135.33947754 56.42620087]
[-120.27996826 52.68579865]
[-105.91068268 58.54270172]
[-97.75691986 71.74481201]
[-82.78994751 72.73965454]
[-73.48536682 65.01125336]
[-61.00891495 65.71662140]
[-52.07895660 75.02214813]
[-37.12828064 76.23762512]
[-22.17761040 77.45310974]
[-7.22693729 78.66858673]
[7.72373533 79.88407135]
[9.94424820 78.17546082]
[12.97484970 77.24278259]
[16.52363396 77.39881134]
[20.19103241 78.84504700]
[23.51147270 81.63765717]
[38.36446762 83.73255920]
[53.21745682 85.82745361]
[68.07044983 87.92235565]
[70.65758514 82.55327606]
[74.13906860 77.71597290]
[78.40879822 73.55788422]
[83.33662415 70.20574951]
[88.77234650 67.76174164]
[94.55028534 66.30035400]
[100.49433136 65.86612701]
[104.00138855 51.28187180]
[107.50845337 36.69761658]
[99.51882172 23.32586861]
[103.28323364 8.58531857]
[116.08039093 1.05083346]
[119.58744812 -13.53342342]
[123.09450531 -28.11767960]
[126.60156250 -42.70193481]
[130.10862732 -57.28619385]
[133.61567688 -71.87045288]
[137.12274170 -86.45470428]
[136.08650208 -95.52859497]
[140.79055786 -101.22742462]
[144.51234436 -115.75836945]
[148.23411560 -130.28930664]
[144.16284180 -145.57771301]
[154.81607056 -155.98722839]
[158.53784180 -170.51818848]
[162.15235901 -185.07617188]
[165.65940857 -199.66043091]
[169.16647339 -214.24468994]
[172.67353821 -228.82894897]
[176.18058777 -243.41320801]
[179.68765259 -257.99746704]
[183.19470215 -272.58172607]
[182.15847778 -281.65560913]
[186.86253357 -287.35443115]
[190.58430481 -301.88537598]
[194.30609131 -316.41632080]
[187.40145874 -330.89755249]
[194.54766846 -345.26107788]
[210.26274109 -348.48846436]
[222.49142456 -338.10391235]
[221.85292053 -322.07357788]
[208.83703613 -312.69454956]
[205.11524963 -298.16360474]
[201.39347839 -283.63265991]
[197.77896118 -269.07464600]
[194.27191162 -254.49040222]
[190.76484680 -239.90614319]
[187.25778198 -225.32188416]
[183.75073242 -210.73764038]
[180.24366760 -196.15338135]
[176.73661804 -181.56912231]
[178.22885132 -174.33184814]
[173.06878662 -166.79640198]
[169.34701538 -152.26545715]
[173.68449402 -138.01640320]
[162.76506042 -126.56753540]
[159.04328918 -112.03659058]
[155.32150269 -97.50564575]
[151.70700073 -82.94764709]
[148.19993591 -68.36338806]
[144.69287109 -53.77913284]
[141.18582153 -39.19487762]
[137.67875671 -24.61062050]
[134.17170715 -10.02636433]
[130.66464233 4.55789185]
[138.63717651 17.08683586]
[135.28826904 31.92730522]
[122.09270477 40.20467377]
[118.58564758 54.78892899]
[115.07859039 69.37318420]
[128.29910278 80.90741730]
[134.04466248 97.48477173]
[130.79765320 114.72650146]
[119.41574860 128.07836914]
[125.02800751 141.98887634]
[130.64025879 155.89939880]
[136.25253296 169.80992126]
[141.86479187 183.72044373]
[147.47705078 197.63095093]
[153.08930969 211.54147339]
[154.83314514 196.64318848]
[154.02421570 181.66500854]
[157.95722961 167.18981934]
[166.23471069 154.68048096]
[178.02011108 145.40124512]
[192.12237549 140.28987122]
[207.11630249 139.86294556]
[221.48655701 144.16360474]
[233.78085327 152.75721741]
[242.75671387 164.77528381]
[247.50700378 179.00323486]
[247.55165100 194.00317383]
[242.88615417 208.25915527]
[233.98199463 220.33044434]
[221.73907471 228.99708557]
[207.39372253 233.38334656]
[193.70858765 227.24189758]
[202.77404785 239.19252014]
[211.83950806 251.14314270]
[220.90496826 263.09378052]
[236.31321716 265.37933350]
[245.33663940 277.62811279]
[243.06274414 292.30343628]
[252.12820435 304.25405884]
[261.19366455 316.20468140]
[270.25912476 328.15530396]
[279.32458496 340.10592651]
[291.19024658 339.39935303]
[301.81521606 344.45587158]
[308.61029053 353.91519165]
[309.98168945 365.36044312]
[305.70364380 375.93511963]
[314.41268921 388.14794922]
[323.12173462 400.36074829]
[337.24081421 409.74624634]
[332.13067627 425.91171265]
[315.18231201 425.47631836]
[310.90893555 409.06979370]
[302.19989014 396.85699463]
[293.49084473 384.64416504]
[275.28585815 382.71163940]
[264.08386230 367.82974243]
[267.37396240 349.17138672]
[258.30850220 337.22076416]
[249.24304199 325.27014160]
[240.17758179 313.31951904]
[231.11212158 301.36889648]
[216.36694336 299.60385132]
[207.00303650 287.61337280]
[208.95434570 272.15924072]
[199.88888550 260.20861816]
[190.82342529 248.25798035]
[181.75796509 236.30735779]
[174.28732300 236.97021484]
[180.16506958 250.77064514]
[168.85629272 260.62515259]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 30]
[3 29]
[4 28]
[5 27]
[6 26]
[7 25]
[8 23]
[9 22]
[10 21]
[11 20]
[31 156]
[32 155]
[33 154]
[34 153]
[35 152]
[36 151]
[37 150]
[40 76]
[41 75]
[42 74]
[43 73]
[44 68]
[45 67]
[46 66]
[47 65]
[48 64]
[50 61]
[51 60]
[83 146]
[84 145]
[85 144]
[88 141]
[89 140]
[90 139]
[91 138]
[92 137]
[93 136]
[94 135]
[96 134]
[97 133]
[98 132]
[100 130]
[101 129]
[102 127]
[103 126]
[104 125]
[105 124]
[106 123]
[107 122]
[108 121]
[110 120]
[111 119]
[112 118]
[173 209]
[174 208]
[175 207]
[176 206]
[179 203]
[180 202]
[181 201]
[182 200]
[183 199]
[188 196]
[189 195]
[190 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
