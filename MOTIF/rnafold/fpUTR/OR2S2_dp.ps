%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:45:34 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR2S2)
} def

/sequence { (\
UCCCAAAAAGCCUGAUGCGCUGCUCAGUACUUUGCUGAUGGCAGAGGGGAUAUCAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 48 0.009625147 ubox
1 49 0.199189960 ubox
1 50 0.872461144 ubox
2 47 0.012250570 ubox
2 48 0.253604886 ubox
2 49 0.954520845 ubox
3 46 0.012063790 ubox
3 47 0.254431489 ubox
3 48 0.954694675 ubox
3 49 0.030837902 ubox
4 14 0.006756095 ubox
4 46 0.253151402 ubox
4 47 0.952909258 ubox
4 48 0.030892718 ubox
5 13 0.009502281 ubox
5 16 0.004211554 ubox
6 32 0.003334518 ubox
6 33 0.004044358 ubox
7 31 0.003553807 ubox
7 32 0.004676563 ubox
7 33 0.024828373 ubox
8 31 0.004663566 ubox
8 32 0.030060922 ubox
9 21 0.098704473 ubox
9 24 0.034633488 ubox
9 31 0.033224050 ubox
9 36 0.003840811 ubox
10 18 0.414897706 ubox
10 20 0.105896317 ubox
10 23 0.036706204 ubox
10 28 0.264482566 ubox
10 30 0.035408825 ubox
10 35 0.003887788 ubox
10 42 0.102807593 ubox
11 17 0.414578512 ubox
11 19 0.107593148 ubox
11 22 0.036631270 ubox
11 27 0.191873049 ubox
11 34 0.003891631 ubox
11 41 0.102946005 ubox
11 47 0.046025314 ubox
11 48 0.117357131 ubox
11 49 0.068810253 ubox
12 27 0.824711512 ubox
12 40 0.102765224 ubox
12 44 0.009223195 ubox
12 46 0.054798975 ubox
12 47 0.118019011 ubox
12 48 0.068846540 ubox
12 49 0.007982364 ubox
13 19 0.024868129 ubox
13 22 0.003249291 ubox
13 26 0.851850828 ubox
13 43 0.009121139 ubox
13 45 0.054111470 ubox
13 46 0.118421302 ubox
13 47 0.068113160 ubox
13 48 0.007950003 ubox
13 55 0.031296098 ubox
14 18 0.032237006 ubox
14 21 0.005962932 ubox
14 25 0.853213014 ubox
14 39 0.010581011 ubox
14 42 0.005040819 ubox
14 54 0.035311433 ubox
15 24 0.841476379 ubox
15 39 0.011245720 ubox
15 53 0.035287447 ubox
16 22 0.032648940 ubox
16 26 0.003231309 ubox
16 29 0.044264564 ubox
16 38 0.011091712 ubox
16 43 0.123092775 ubox
16 50 0.003352791 ubox
16 52 0.034966966 ubox
17 21 0.016663371 ubox
17 23 0.820809314 ubox
17 25 0.003410601 ubox
17 28 0.049918025 ubox
17 35 0.058185050 ubox
17 39 0.003623224 ubox
17 42 0.122087001 ubox
17 51 0.032796851 ubox
18 22 0.815043722 ubox
18 27 0.050266618 ubox
18 34 0.058205630 ubox
18 37 0.005208913 ubox
18 40 0.007994493 ubox
18 41 0.121450464 ubox
19 28 0.057271693 ubox
19 33 0.050085626 ubox
19 35 0.012343579 ubox
19 39 0.011196534 ubox
19 42 0.129156181 ubox
20 27 0.059462021 ubox
20 34 0.012367639 ubox
20 41 0.129708532 ubox
20 44 0.456041291 ubox
20 46 0.007191864 ubox
20 48 0.007916769 ubox
20 49 0.004631179 ubox
21 26 0.055655970 ubox
21 29 0.050570785 ubox
21 40 0.129869288 ubox
21 43 0.458471539 ubox
21 45 0.004983640 ubox
21 47 0.006355084 ubox
21 48 0.004581272 ubox
22 28 0.056728562 ubox
22 35 0.007316468 ubox
22 39 0.122669018 ubox
22 42 0.461134384 ubox
23 27 0.056729923 ubox
23 34 0.007312827 ubox
23 41 0.460259116 ubox
23 46 0.005261253 ubox
23 49 0.003620053 ubox
24 38 0.400542961 ubox
24 40 0.276817117 ubox
24 45 0.005158610 ubox
24 48 0.003626713 ubox
24 50 0.004227599 ubox
25 34 0.006133879 ubox
25 37 0.499919050 ubox
25 40 0.009916965 ubox
25 44 0.005054866 ubox
25 47 0.003645482 ubox
25 49 0.004405817 ubox
26 33 0.006213038 ubox
26 36 0.501178247 ubox
26 39 0.008854603 ubox
27 32 0.005762810 ubox
27 35 0.501339014 ubox
28 34 0.498284840 ubox
28 37 0.004282148 ubox
29 33 0.414721073 ubox
29 36 0.004558476 ubox
30 46 0.857991058 ubox
30 47 0.004076652 ubox
31 45 0.861393933 ubox
31 46 0.004435066 ubox
32 44 0.861231550 ubox
32 45 0.004521773 ubox
33 43 0.861747761 ubox
34 42 0.862779256 ubox
35 41 0.862546271 ubox
35 44 0.020143719 ubox
35 46 0.004050869 ubox
36 40 0.777053549 ubox
36 43 0.020238688 ubox
36 45 0.004062339 ubox
37 42 0.020177950 ubox
46 54 0.005257392 ubox
47 53 0.005059507 ubox
47 54 0.010945295 ubox
48 53 0.009814963 ubox
48 54 0.007105845 ubox
49 53 0.005022440 ubox
1 50 0.9500000 lbox
2 49 0.9500000 lbox
3 48 0.9500000 lbox
4 47 0.9500000 lbox
12 27 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
17 23 0.9500000 lbox
18 22 0.9500000 lbox
30 46 0.9500000 lbox
31 45 0.9500000 lbox
32 44 0.9500000 lbox
33 43 0.9500000 lbox
34 42 0.9500000 lbox
35 41 0.9500000 lbox
36 40 0.9500000 lbox
showpage
end
%%EOF
