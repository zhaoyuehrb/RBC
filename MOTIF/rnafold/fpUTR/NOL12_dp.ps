%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:26:56 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NOL12)
} def

/sequence { (\
GAGUACGCUACACCCGGAAGUGUCUUCAGGGAGAGGAAGCCGGCGGCCUCACUGCU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 24 0.003312933 ubox
1 26 0.040060231 ubox
1 27 0.107192918 ubox
1 50 0.947898103 ubox
2 9 0.041051623 ubox
2 25 0.050999834 ubox
2 26 0.104894013 ubox
2 49 0.948559693 ubox
2 53 0.095297450 ubox
2 56 0.069669455 ubox
3 8 0.041975991 ubox
3 11 0.095626129 ubox
3 13 0.007537733 ubox
3 24 0.056102341 ubox
3 25 0.093850638 ubox
3 40 0.059879534 ubox
3 44 0.007188338 ubox
3 47 0.048018694 ubox
3 48 0.946898210 ubox
3 52 0.097794397 ubox
3 55 0.076208213 ubox
4 10 0.095116623 ubox
4 12 0.007592184 ubox
4 22 0.005404177 ubox
4 39 0.058733947 ubox
4 43 0.006804180 ubox
4 46 0.062711629 ubox
4 51 0.094188420 ubox
4 54 0.075609337 ubox
5 9 0.084350142 ubox
5 21 0.005684490 ubox
5 23 0.116765279 ubox
5 53 0.065293277 ubox
6 16 0.003934665 ubox
6 20 0.005697936 ubox
6 22 0.118360797 ubox
6 42 0.030601831 ubox
6 45 0.916004661 ubox
6 54 0.007673055 ubox
7 15 0.003925118 ubox
7 21 0.118336803 ubox
7 40 0.093112882 ubox
7 41 0.023977064 ubox
7 44 0.916015885 ubox
7 47 0.269241592 ubox
7 53 0.005204909 ubox
7 55 0.082376466 ubox
8 17 0.005063830 ubox
8 20 0.118363980 ubox
8 33 0.039558270 ubox
8 35 0.079084412 ubox
8 36 0.048292288 ubox
8 39 0.095660560 ubox
8 43 0.858051495 ubox
8 46 0.269454268 ubox
8 54 0.082311345 ubox
9 16 0.005473359 ubox
9 19 0.115284981 ubox
9 22 0.013104744 ubox
9 32 0.040565105 ubox
9 34 0.081344311 ubox
9 35 0.052524090 ubox
9 38 0.092517258 ubox
9 42 0.749764445 ubox
9 45 0.258717739 ubox
10 21 0.024086881 ubox
10 23 0.146875394 ubox
10 53 0.006466437 ubox
11 20 0.024977122 ubox
11 22 0.203924860 ubox
11 54 0.008584699 ubox
12 21 0.204368617 ubox
12 23 0.003812407 ubox
12 53 0.006962898 ubox
13 20 0.203900745 ubox
13 22 0.005095652 ubox
13 30 0.058374709 ubox
13 31 0.768694001 ubox
13 36 0.016539176 ubox
13 43 0.063158438 ubox
13 46 0.007648004 ubox
14 29 0.058845561 ubox
14 30 0.771725774 ubox
14 31 0.041618752 ubox
14 35 0.014175883 ubox
14 36 0.022034580 ubox
14 42 0.050013509 ubox
14 43 0.417190005 ubox
14 45 0.005529188 ubox
14 46 0.026464327 ubox
15 22 0.012947503 ubox
15 29 0.769021035 ubox
15 30 0.041963443 ubox
15 35 0.022058350 ubox
15 42 0.544935985 ubox
15 45 0.026694695 ubox
16 21 0.011720074 ubox
16 24 0.003313417 ubox
16 25 0.032760208 ubox
16 27 0.074588363 ubox
16 41 0.576756817 ubox
16 44 0.026722356 ubox
17 24 0.033550840 ubox
17 26 0.073399724 ubox
17 27 0.763940242 ubox
17 40 0.573841620 ubox
18 23 0.030704536 ubox
18 25 0.069351369 ubox
18 26 0.770169453 ubox
19 25 0.767952321 ubox
19 26 0.008891154 ubox
20 24 0.751465399 ubox
20 25 0.008941978 ubox
20 40 0.100086104 ubox
21 28 0.019191865 ubox
21 39 0.120688082 ubox
21 42 0.006145849 ubox
22 27 0.019317265 ubox
22 40 0.009411223 ubox
22 41 0.014621665 ubox
23 31 0.005204698 ubox
23 32 0.024411629 ubox
23 34 0.202792749 ubox
23 36 0.045874633 ubox
23 37 0.554372241 ubox
23 39 0.004858745 ubox
24 29 0.006539043 ubox
24 30 0.007306557 ubox
24 31 0.025530803 ubox
24 33 0.204729128 ubox
24 35 0.049889784 ubox
24 36 0.573291003 ubox
24 39 0.085846137 ubox
25 29 0.006695691 ubox
25 30 0.023628039 ubox
25 31 0.004137609 ubox
25 32 0.202094278 ubox
25 33 0.010720280 ubox
25 34 0.048260757 ubox
25 35 0.572863400 ubox
25 37 0.007459345 ubox
25 38 0.086961969 ubox
26 30 0.006547470 ubox
26 31 0.185999008 ubox
26 32 0.026372432 ubox
26 33 0.044037209 ubox
26 34 0.573140618 ubox
26 36 0.008071634 ubox
26 37 0.087228594 ubox
27 31 0.034111998 ubox
27 33 0.573146702 ubox
27 35 0.008759540 ubox
27 36 0.087216593 ubox
27 42 0.003309324 ubox
27 54 0.022598130 ubox
28 53 0.024343706 ubox
28 56 0.014526061 ubox
29 41 0.035615878 ubox
29 52 0.024268038 ubox
29 53 0.015127346 ubox
29 55 0.015353518 ubox
29 56 0.090491860 ubox
30 40 0.035609048 ubox
30 41 0.044531348 ubox
30 52 0.016558804 ubox
30 53 0.019580644 ubox
30 55 0.100537010 ubox
30 56 0.017076126 ubox
31 40 0.045536164 ubox
31 50 0.020962393 ubox
31 52 0.021291991 ubox
31 55 0.019221807 ubox
32 49 0.021661752 ubox
32 53 0.121024854 ubox
32 56 0.092599450 ubox
33 48 0.021636615 ubox
33 50 0.116247103 ubox
33 52 0.122111352 ubox
33 55 0.101096105 ubox
34 49 0.116488374 ubox
34 53 0.151909540 ubox
34 56 0.004392265 ubox
35 41 0.626606212 ubox
35 48 0.116380316 ubox
35 49 0.007725031 ubox
35 50 0.020326902 ubox
35 52 0.154661051 ubox
35 53 0.007461199 ubox
35 55 0.004764975 ubox
36 40 0.617241072 ubox
36 47 0.093550624 ubox
36 48 0.010018775 ubox
36 49 0.017315612 ubox
36 50 0.204592575 ubox
36 52 0.007610473 ubox
37 49 0.201903273 ubox
38 49 0.039194015 ubox
38 56 0.006510059 ubox
39 47 0.223612989 ubox
39 48 0.028652364 ubox
39 55 0.007203054 ubox
40 46 0.234398777 ubox
40 54 0.005488589 ubox
41 45 0.232709650 ubox
41 54 0.005847169 ubox
42 48 0.003863901 ubox
42 53 0.007523864 ubox
42 56 0.132460331 ubox
43 47 0.003822483 ubox
43 52 0.007584607 ubox
43 55 0.153966641 ubox
44 54 0.155188141 ubox
45 53 0.154964584 ubox
45 56 0.034913955 ubox
46 52 0.154499332 ubox
46 55 0.041884168 ubox
47 54 0.041805156 ubox
1 50 0.9500000 lbox
2 49 0.9500000 lbox
3 48 0.9500000 lbox
6 45 0.9500000 lbox
7 44 0.9500000 lbox
8 43 0.9500000 lbox
9 42 0.9500000 lbox
13 31 0.9500000 lbox
14 30 0.9500000 lbox
15 29 0.9500000 lbox
17 27 0.9500000 lbox
18 26 0.9500000 lbox
19 25 0.9500000 lbox
20 24 0.9500000 lbox
35 41 0.9500000 lbox
36 40 0.9500000 lbox
showpage
end
%%EOF
