%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:11:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCAAGUGUCAGGCCGAUGUGUCGCCCGCGAGGGGCCGGGGUCGGGGCCGCCGGGGCCAUGCGCGCGGGCUGGGCAGGGGGCCGGCGGGGCGCAGAGCGGAGCCGCCUCGGAGCCUGAGCCGCCCGGGGCCGGGGCCGGGGAGCCGCGCGGGGCCGGCCGGCCGGGGGGAGGGGAGCG\
) } def
/len { sequence length } bind def

/coor [
[88.81932831 112.04951477]
[86.63410187 104.38569641]
[71.67063904 105.43204498]
[56.70717621 106.47839355]
[47.95174789 120.93476105]
[32.46254349 127.27071381]
[16.40727997 123.17692566]
[6.05269194 110.45532227]
[-8.89022827 111.76265717]
[-23.83314896 113.06999207]
[-38.77606964 114.37732697]
[-53.70701218 115.81501770]
[-68.62483978 117.38294220]
[-81.54064941 126.52037048]
[-95.00696564 120.15581512]
[-109.92479706 121.72373962]
[-124.84262085 123.29167175]
[-133.07720947 127.31089783]
[-140.03414917 124.75444794]
[-154.97708130 126.06178284]
[-169.91999817 127.36911774]
[-184.86291504 128.67645264]
[-199.80583191 129.98379517]
[-215.74827576 142.29080200]
[-232.91885376 133.43469238]
[-247.80703735 135.26274109]
[-262.69522095 137.09077454]
[-277.58343506 138.91882324]
[-285.74661255 143.08114624]
[-292.74713135 140.64649963]
[-307.66494751 142.21443176]
[-317.59829712 154.21302795]
[-332.74942017 155.59062195]
[-344.12704468 146.04675293]
[-359.04486084 147.61466980]
[-371.96066284 156.75210571]
[-385.42700195 150.38754272]
[-400.34481812 151.95547485]
[-408.93865967 165.01992798]
[-423.93432617 169.45431519]
[-438.25134277 163.16485596]
[-445.12963867 149.12123108]
[-441.32147217 133.95443726]
[-428.62500000 124.82573700]
[-413.03503418 126.04544830]
[-401.91275024 137.03764343]
[-386.99493408 135.46972656]
[-375.14614868 126.44444275]
[-360.61279297 132.69685364]
[-345.69497681 131.12892151]
[-336.55026245 119.42807007]
[-321.44378662 117.62545776]
[-309.23287964 127.29660034]
[-294.31503296 125.72867584]
[-279.41146851 124.03062439]
[-264.52328491 122.20258331]
[-249.63508606 120.37454224]
[-234.74688721 118.54650116]
[-229.18312073 109.93501282]
[-219.59062195 105.73320770]
[-209.05503845 107.55728912]
[-201.11317444 115.04087067]
[-186.17025757 113.73353577]
[-171.22732544 112.42620087]
[-156.28440857 111.11886597]
[-141.34149170 109.81153107]
[-126.41054535 108.37384033]
[-111.49272156 106.80591583]
[-96.57489014 105.23799133]
[-84.72611237 96.21270752]
[-70.19276428 102.46511841]
[-55.27494049 100.89718628]
[-48.93360519 97.06026459]
[-40.08340454 99.43441010]
[-25.14048576 98.12707520]
[-10.19756413 96.81974030]
[4.74535608 95.51239777]
[10.53953648 83.46736145]
[21.62172890 75.80260468]
[35.15235901 74.61233521]
[47.59950638 80.31480408]
[55.66083145 91.51493073]
[70.62429047 90.46858215]
[85.58775330 89.42224121]
[96.99384308 79.68051910]
[100.36811066 65.06496429]
[103.74237061 50.44941330]
[107.11663818 35.83386230]
[110.49090576 21.21831322]
[100.95141602 6.57081890]
[104.86613464 -10.11880684]
[119.34260559 -18.65379524]
[122.46128082 -33.32600784]
[125.57995605 -47.99822235]
[122.95888519 -64.74833679]
[138.32881165 -71.90386963]
[149.45953369 -59.11545181]
[140.25216675 -44.87954712]
[137.13349915 -30.20733261]
[134.01481628 -15.53511906]
[142.48332214 -5.80202389]
[143.81080627 7.22678518]
[137.28828430 18.80728912]
[125.10645294 24.59257889]
[121.73219299 39.20812988]
[118.35792542 53.82368088]
[114.98365784 68.43923187]
[111.60939026 83.05477905]
[119.89580536 70.55136871]
[134.71603394 68.23602295]
[146.42129517 77.61614990]
[147.39082336 92.58478546]
[136.99340820 103.39652252]
[121.99873352 103.01252747]
[135.90649414 108.63162231]
[149.86276245 114.12914276]
[163.86647034 119.50466156]
[176.85710144 111.22519684]
[192.05439758 112.17152405]
[203.64332581 121.77156067]
[207.31323242 136.18231201]
[221.31694031 141.55783081]
[236.97331238 139.27998352]
[246.08244324 151.06442261]
[260.08615112 156.43994141]
[274.08984375 161.81546021]
[288.09356689 167.19097900]
[302.09725952 172.56649780]
[316.19265747 177.69679260]
[330.37542725 182.58032227]
[344.55822754 187.46383667]
[358.74099731 192.34736633]
[372.92376709 197.23088074]
[387.10653687 202.11441040]
[407.82516479 196.71292114]
[420.76715088 212.77078247]
[435.18606567 216.90534973]
[449.64053345 220.91392517]
[464.12942505 224.79620361]
[478.61831665 228.67849731]
[494.30999756 223.91374207]
[506.09570312 235.31678772]
[501.85128784 251.15715027]
[485.94305420 255.13961792]
[474.73602295 243.16738892]
[460.24713135 239.28509521]
[445.75823975 235.40281677]
[438.46307373 236.71235657]
[431.05151367 231.32427979]
[416.63259888 227.18971252]
[409.63165283 232.72929382]
[400.72845459 234.43617249]
[391.91098022 231.79969788]
[385.20812988 225.29377747]
[382.22302246 216.29719543]
[368.04025269 211.41366577]
[353.85748291 206.53015137]
[339.67468262 201.64662170]
[325.49191284 196.76310730]
[311.30914307 191.87957764]
[306.67733765 193.14434814]
[301.20263672 191.49301147]
[296.72174072 186.57020569]
[282.71804810 181.19468689]
[268.71432495 175.81916809]
[254.71063232 170.44364929]
[240.70692444 165.06813049]
[226.05218506 167.73046875]
[215.94142151 155.56153870]
[201.93771362 150.18601990]
[189.56776428 158.43965149]
[174.53182983 157.81936646]
[162.60482788 148.35363770]
[158.49095154 133.50836182]
[144.48724365 128.13284302]
[137.09513855 128.67266846]
[130.28739929 122.53938293]
[116.37963867 116.92028046]
[105.51505280 120.44837189]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 84]
[3 83]
[4 82]
[8 77]
[9 76]
[10 75]
[11 74]
[12 72]
[13 71]
[15 69]
[16 68]
[17 67]
[19 66]
[20 65]
[21 64]
[22 63]
[23 62]
[25 58]
[26 57]
[27 56]
[28 55]
[30 54]
[31 53]
[34 50]
[35 49]
[37 47]
[38 46]
[85 108]
[86 107]
[87 106]
[88 105]
[89 104]
[92 100]
[93 99]
[94 98]
[114 178]
[115 177]
[116 175]
[117 174]
[121 170]
[122 169]
[124 167]
[125 166]
[126 165]
[127 164]
[128 163]
[129 160]
[130 159]
[131 158]
[132 157]
[133 156]
[134 155]
[136 150]
[137 149]
[138 147]
[139 146]
[140 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
