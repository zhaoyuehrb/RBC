%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:43:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCAUAGUUUCAUUUCCUGCUCUUGAAUAUCUGGUUGAACUACUUAAGCUUAAUUUGUUAAACUCCGGUAAGUACCUAGCCCACAUGAUUUGACUCAGAGAUUCUCUUUUGUCCACAGACAGUCAUCUCAGGAGCAGAAAGAAAAGAGCUCCCAAAUGCUAUAUCUAUUCAGGGGCUCUCAAGAACA\
) } def
/len { sequence length } bind def

/coor [
[172.68322754 374.69790649]
[171.97088623 359.71484375]
[176.35189819 345.36886597]
[185.31324768 333.33999634]
[197.80552673 325.03677368]
[212.36584473 321.43161011]
[227.28913879 322.94665527]
[240.83016968 329.40612793]
[232.34095764 317.03952026]
[223.85176086 304.67288208]
[215.36254883 292.30627441]
[208.97222900 288.56359863]
[206.83683777 279.66131592]
[198.55546570 267.15457153]
[190.27407837 254.64781189]
[181.99270630 242.14105225]
[175.66581726 238.29212952]
[173.67947388 229.35540771]
[165.60824585 216.71202087]
[157.53700256 204.06864929]
[149.46577454 191.42526245]
[141.39454651 178.78187561]
[133.32330322 166.13848877]
[125.25206757 153.49510193]
[117.18083191 140.85173035]
[109.10959625 128.20834351]
[98.84639740 130.58631897]
[88.06150055 129.22923279]
[78.11179352 124.07629395]
[70.32721710 115.55751801]
[65.83449554 104.56523895]
[65.39835358 92.36292267]
[69.30207825 80.44044495]
[55.13204193 75.52007294]
[40.96200562 70.59970093]
[26.79196930 65.67932892]
[12.62193298 60.75895309]
[-6.96730232 65.46002960]
[-18.99933624 50.33812332]
[-33.32587433 45.89398956]
[-47.65241241 41.44985580]
[-62.01557922 37.12557983]
[-76.41437531 32.92145920]
[-90.81317902 28.71734047]
[-104.55355072 36.05490494]
[-119.09609222 31.58621597]
[-126.00666046 18.44164848]
[-140.40545654 14.23752975]
[-155.82109070 17.79688072]
[-165.86967468 6.80256081]
[-180.26847839 2.59844136]
[-194.66726685 -1.60567808]
[-209.06607056 -5.80979729]
[-224.86001587 -1.39582586]
[-236.38874817 -13.05860996]
[-231.79248047 -28.80047798]
[-215.79946899 -32.42754364]
[-204.86195374 -20.20859528]
[-190.46315002 -16.00447655]
[-176.06436157 -11.80035686]
[-161.66555786 -7.59623718]
[-147.27983093 -11.45629406]
[-136.20133972 -0.16126785]
[-121.80254364 4.04285145]
[-108.90481567 -3.31814575]
[-94.24250031 0.74031281]
[-86.60905457 14.31854343]
[-72.21025848 18.52266312]
[-57.81145859 22.72678185]
[-50.49494171 21.58121490]
[-43.20827866 27.12331963]
[-28.88173866 31.56745338]
[-14.55520248 36.01158524]
[-5.95608473 30.44692802]
[4.50582647 30.54683304]
[13.36176205 36.52027893]
[17.54230499 46.58891678]
[31.71234131 51.50929260]
[45.88237762 56.42966461]
[60.05241394 61.35003662]
[74.22245026 66.27040863]
[64.14602661 55.15889740]
[52.04961395 46.28890610]
[47.17372513 32.10350037]
[51.26045609 17.67094612]
[62.84967041 8.14780903]
[77.80068970 6.93658352]
[90.77170563 14.47002506]
[97.12834167 28.05653191]
[94.59948730 42.84174347]
[95.08095551 57.83401489]
[101.84610748 44.44623184]
[108.61125946 31.05844879]
[115.37641144 17.67066765]
[122.14156342 4.28288460]
[102.20518494 -3.21482706]
[91.72849274 -29.42362595]
[95.69142151 -43.89066315]
[99.65435791 -58.35770035]
[103.61728668 -72.82473755]
[101.97040558 -89.69850922]
[117.72883606 -95.95215607]
[128.10046387 -82.54074860]
[118.08432770 -68.86180878]
[114.12139130 -54.39476776]
[110.15846252 -39.92773056]
[106.19553375 -25.46069336]
[112.80254364 -21.91140938]
[125.55707550 -29.80582809]
[126.01656342 -14.81284142]
[132.62356567 -11.26355743]
[142.49804688 -22.55491638]
[152.37251282 -33.84627533]
[155.01686096 -50.03081894]
[170.44891357 -55.57914734]
[182.79348755 -44.78361893]
[179.35156250 -28.74974632]
[163.66387939 -23.97180176]
[153.78939819 -12.68044281]
[143.91493225 -1.38908434]
[135.52934265 11.04803658]
[128.76419067 24.43581963]
[121.99904633 37.82360077]
[115.23389435 51.21138382]
[108.46874237 64.59916687]
[127.35459900 79.56054688]
[131.85104370 101.67585754]
[121.75298309 120.13710785]
[129.82421875 132.78048706]
[137.89544678 145.42387390]
[145.96669006 158.06726074]
[154.03791809 170.71064758]
[162.10916138 183.35401917]
[170.18038940 195.99740601]
[178.25163269 208.64079285]
[186.32286072 221.28417969]
[194.49945068 233.85968018]
[202.78083801 246.36643982]
[211.06221008 258.87316895]
[219.34358215 271.37994385]
[227.72917175 283.81704712]
[236.21838379 296.18368530]
[244.70758057 308.55029297]
[253.19679260 320.91693115]
[263.25857544 332.04171753]
[274.71334839 341.72613525]
[286.16812134 351.41055298]
[297.62292480 361.09497070]
[309.07769775 370.77938843]
[320.53247070 380.46380615]
[331.98727417 390.14822388]
[343.44204712 399.83264160]
[358.97769165 398.70083618]
[370.45651245 408.68539429]
[371.43978882 423.50323486]
[382.89456177 433.18765259]
[394.34933472 442.87207031]
[405.80413818 452.55648804]
[421.18234253 449.72015381]
[434.76031494 457.47723389]
[440.12698364 472.16506958]
[434.74835205 486.84854126]
[421.16403198 494.59454346]
[405.78814697 491.74566650]
[395.88070679 479.64703369]
[396.11972046 464.01129150]
[384.66491699 454.32687378]
[373.21014404 444.64245605]
[361.75537109 434.95803833]
[346.98037720 436.45312500]
[335.22564697 426.79492188]
[333.75762939 411.28741455]
[322.30285645 401.60299683]
[310.84805298 391.91857910]
[299.39328003 382.23416138]
[287.93850708 372.54974365]
[276.48370361 362.86532593]
[265.02893066 353.18090820]
[253.57414246 343.49649048]
[258.64529419 357.61328125]
[258.65994263 372.61325073]
[253.61636353 386.73992920]
[244.10520935 398.33895874]
[231.24023438 406.05209351]
[216.52798462 408.97610474]
[201.69131470 406.76855469]
[188.46765137 399.68798828]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 144]
[9 143]
[10 142]
[11 141]
[13 140]
[14 139]
[15 138]
[16 137]
[18 136]
[19 135]
[20 134]
[21 133]
[22 132]
[23 131]
[24 130]
[25 129]
[26 128]
[33 81]
[34 80]
[35 79]
[36 78]
[37 77]
[39 73]
[40 72]
[41 71]
[42 69]
[43 68]
[44 67]
[47 64]
[48 63]
[50 61]
[51 60]
[52 59]
[53 58]
[91 125]
[92 124]
[93 123]
[94 122]
[95 121]
[97 107]
[98 106]
[99 105]
[100 104]
[111 120]
[112 119]
[113 118]
[145 179]
[146 178]
[147 177]
[148 176]
[149 175]
[150 174]
[151 173]
[152 172]
[155 169]
[156 168]
[157 167]
[158 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
