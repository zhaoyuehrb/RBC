%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:56:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCUGGUGGCCCGACCCGCGCCGCCCGCGGCUCCCUUAUGUCUCUCGCCGUCUCCAGCCUCAGUCCCUCUCUGUCUCUCUCUCAGUCUCUCUCCCUGUCCUCCCCGGCCGCUCCUCCGAGAUGACGCCGGGGUCGGUGCCCCGGGCCUGCCCUAUCCCCUGGCUCCAGGGCUAGGCGGGACCGAGGGCUGCCCCAGACAGACGGACCCGCGGACCCACAGACCCCGCGCCCAGGAGAGGAGCCGCGCCGCCCGCC\
GCUGGCAGCCCGUCACC\
) } def
/len { sequence length } bind def

/coor [
[88.08697510 780.48895264]
[87.31055450 765.50909424]
[86.53413391 750.52917480]
[85.75771332 735.54931641]
[78.26776886 735.93750000]
[73.19156647 750.05249023]
[68.11537170 764.16741943]
[63.03917694 778.28240967]
[57.96298218 792.39739990]
[52.88678360 806.51232910]
[55.49740601 822.11669922]
[43.90954971 831.47460938]
[38.83335495 845.58953857]
[39.16277695 862.54028320]
[22.96566391 867.54931641]
[13.66862774 853.37176514]
[24.71838951 840.51336670]
[29.79458618 826.39837646]
[26.82087898 811.80364990]
[38.77182007 801.43615723]
[43.84801483 787.32116699]
[48.92421341 773.20623779]
[54.00040817 759.09124756]
[59.07660294 744.97625732]
[64.15280151 730.86132812]
[83.35466003 712.39770508]
[103.32117462 713.44458008]
[103.14855957 698.44555664]
[102.97595215 683.44653320]
[102.80333710 668.44750977]
[102.63072968 653.44854736]
[102.45811462 638.44952393]
[102.28550720 623.45050049]
[102.11289215 608.45153809]
[91.04632568 618.57727051]
[76.05672455 618.01885986]
[65.77425385 607.09771729]
[66.11898041 592.10168457]
[76.89242554 581.66461182]
[91.89185333 581.79553223]
[102.48192596 592.42028809]
[103.34452057 577.44506836]
[104.20712280 562.46990967]
[105.06972504 547.49475098]
[105.93231964 532.51959229]
[106.45006561 517.52850342]
[106.62267303 502.52947998]
[106.79528809 487.53048706]
[96.13420105 471.37356567]
[106.77595520 454.22479248]
[106.60334015 439.22579956]
[106.43073273 424.22677612]
[105.74051666 409.24267578]
[104.53351593 394.29132080]
[103.32651520 379.33993530]
[99.66950989 372.94949341]
[102.19266510 364.20974731]
[101.15779877 349.24551392]
[91.16893768 343.82269287]
[84.95974731 334.16021729]
[84.16085815 322.58255005]
[89.08445740 311.94165039]
[98.61888885 304.91418457]
[97.92867279 289.93008423]
[97.23845673 274.94595337]
[96.54824066 259.96185303]
[88.44149017 253.81584167]
[84.96414948 244.02264404]
[87.48335266 233.71469116]
[95.40605927 226.33030701]
[95.06085968 211.33428955]
[94.71566010 196.33825684]
[94.37046051 181.34222412]
[94.02526093 166.34620667]
[93.68006134 151.35017395]
[93.33486176 136.35414124]
[85.03978729 135.38368225]
[76.87532043 132.48182678]
[69.29757690 127.66638184]
[62.75925827 121.06379700]
[57.68368149 112.90796661]
[54.43931961 103.53297424]
[53.31620026 93.35976410]
[40.15665817 86.16070557]
[26.99711990 78.96163940]
[13.50055981 86.43469238]
[-1.89218950 85.40182495]
[-14.26935863 76.19263458]
[-19.68143845 61.74573135]
[-16.40145302 46.67107391]
[-5.47603369 35.77893448]
[9.60855770 32.54494858]
[24.03888130 38.00106812]
[33.21027756 50.40627289]
[34.19618225 65.80210114]
[47.35572052 73.00116730]
[60.51526260 80.20022583]
[65.95408630 75.03600311]
[55.62580490 64.15819550]
[66.50376892 53.83008575]
[76.83172607 64.70755005]
[82.27055359 59.54333115]
[75.76229858 46.02879715]
[69.25403595 32.51426315]
[62.74578476 18.99973106]
[56.23752594 5.48519707]
[49.72927094 -8.02933598]
[43.22101593 -21.54386902]
[36.55767441 -34.98261261]
[29.74012566 -48.34379196]
[22.84581566 -61.66551971]
[15.87496758 -74.94736481]
[8.90411949 -88.22920227]
[-5.23792171 -96.53189087]
[-4.84804440 -112.92640686]
[9.67267895 -120.54747009]
[23.38657379 -111.55519104]
[22.18596077 -95.20005035]
[29.15680695 -81.91820526]
[36.12765503 -68.63636780]
[41.99687195 -64.19069672]
[43.10130310 -55.16133881]
[49.91884995 -41.80015945]
[54.07113266 -39.50907135]
[56.84688568 -34.60317993]
[56.73554993 -28.05212402]
[63.24380493 -14.53759193]
[69.75205994 -1.02305889]
[76.26031494 12.49147415]
[82.76856995 26.00600624]
[89.27682495 39.52053833]
[95.78508759 53.03507233]
[103.46853638 56.38187408]
[109.91484070 60.87890244]
[114.97202301 66.20819092]
[123.70480347 54.01234818]
[132.43759155 41.81650543]
[141.10005188 29.57061958]
[149.69190979 17.27509308]
[158.28376770 4.97956800]
[166.87562561 -7.31595802]
[175.39660645 -19.66071510]
[183.84640503 -32.05429840]
[192.29620361 -44.44787979]
[193.67726135 -60.20869446]
[207.23963928 -66.36588287]
[215.68943787 -78.75946045]
[224.13925171 -91.15304565]
[232.58905029 -103.54662323]
[241.03884888 -115.94020844]
[249.48864746 -128.33378601]
[251.72416687 -137.15147400]
[258.10766602 -140.82060242]
[266.69952393 -153.11613464]
[265.21804810 -165.90460205]
[272.59707642 -175.96156311]
[284.45462036 -178.23429871]
[293.18740845 -190.43014526]
[301.92019653 -202.62597656]
[310.65298462 -214.82182312]
[319.38574219 -227.01766968]
[320.44790649 -243.38238525]
[335.26907349 -250.40129089]
[348.60250854 -240.85394287]
[346.73190308 -224.56182861]
[331.58160400 -218.28488159]
[322.84881592 -206.08903503]
[314.11602783 -193.89320374]
[305.38323975 -181.69735718]
[296.65048218 -169.50151062]
[295.86215210 -151.95457458]
[278.99505615 -144.52427673]
[270.40319824 -132.22874451]
[261.88223267 -119.88398743]
[253.43243408 -107.49040985]
[244.98262024 -95.09682465]
[236.53282166 -82.70324707]
[228.08302307 -70.30966187]
[219.63322449 -57.91608047]
[218.85655212 -43.04174042]
[204.68978882 -35.99807739]
[196.23997498 -23.60449600]
[187.79017639 -11.21091461]
[186.62310791 -3.94113946]
[179.17115784 1.27590168]
[170.57929993 13.57142735]
[161.98744202 25.86695290]
[153.39556885 38.16247940]
[152.14491272 45.41834259]
[144.63342285 50.54928589]
[135.90065002 62.74512863]
[127.16786957 74.94097137]
[136.91593933 98.19406891]
[129.48406982 122.28762054]
[108.33089447 136.00894165]
[108.67609406 151.00497437]
[109.02129364 166.00100708]
[109.36649323 180.99702454]
[109.71168518 195.99305725]
[110.05688477 210.98908997]
[110.40208435 225.98510742]
[121.62940979 242.75634766]
[111.53234863 259.27163696]
[112.22256470 274.25573730]
[112.91278076 289.23986816]
[113.60299683 304.22396851]
[128.08433533 316.48315430]
[128.95243835 335.11608887]
[116.12205505 348.21063232]
[117.15692139 363.17489624]
[118.27787781 378.13293457]
[119.48487091 393.08432007]
[120.69187164 408.03567505]
[131.03349304 397.17053223]
[146.02589417 396.69348145]
[157.03732300 406.87918091]
[157.72801208 421.86328125]
[147.70030212 433.01876831]
[132.72758484 433.92297363]
[121.42973328 424.05416870]
[121.60234833 439.05316162]
[121.77495575 454.05218506]
[129.94783020 461.15869141]
[132.82131958 471.37356567]
[129.68406677 481.28094482]
[121.79428864 487.70309448]
[121.62168121 502.70211792]
[121.44906616 517.70111084]
[123.66145325 521.34063721]
[124.53543854 525.11553955]
[124.18975067 528.59484863]
[122.86910248 531.42877197]
[120.90749359 533.38214111]
[120.04489899 548.35736084]
[119.18229675 563.33251953]
[118.31970215 578.30767822]
[117.45709991 593.28289795]
[117.11190033 608.27886963]
[117.28451538 623.27789307]
[117.45712280 638.27691650]
[117.62973785 653.27593994]
[117.80234528 668.27490234]
[117.97496033 683.27392578]
[118.14756775 698.27294922]
[118.32018280 713.27197266]
[121.74208069 727.87640381]
[128.25033569 741.39093018]
[134.75859070 754.90545654]
[141.34449768 768.38232422]
[148.00784302 781.82110596]
[162.69015503 788.28710938]
[166.64962769 803.83386230]
[156.84887695 816.53527832]
[140.80621338 816.64782715]
[130.82820129 804.08526611]
[134.56910706 788.48443604]
[127.90576172 775.04571533]
[122.14040375 770.46612549]
[121.24406433 761.41375732]
[114.73580933 747.89923096]
[108.22754669 734.38464355]
[100.73760223 734.77288818]
[101.51402283 749.75274658]
[102.29044342 764.73266602]
[103.06686401 779.71258545]
[103.84328461 794.69244385]
[104.61970520 809.67236328]
[105.39612579 824.65222168]
[106.17231750 839.63214111]
[91.19239807 840.40808105]
[90.41623688 825.42864990]
[89.63981628 810.44879150]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 25]
[6 24]
[7 23]
[8 22]
[9 21]
[10 20]
[12 18]
[13 17]
[27 245]
[28 244]
[29 243]
[30 242]
[31 241]
[32 240]
[33 239]
[34 238]
[41 237]
[42 236]
[43 235]
[44 234]
[45 233]
[46 228]
[47 227]
[48 226]
[50 222]
[51 221]
[52 220]
[53 213]
[54 212]
[55 211]
[57 210]
[58 209]
[63 206]
[64 205]
[65 204]
[66 203]
[70 201]
[71 200]
[72 199]
[73 198]
[74 197]
[75 196]
[76 195]
[83 97]
[84 96]
[85 95]
[102 132]
[103 131]
[104 130]
[105 129]
[106 128]
[107 127]
[108 126]
[109 123]
[110 122]
[111 120]
[112 119]
[113 118]
[135 192]
[136 191]
[137 190]
[138 188]
[139 187]
[140 186]
[141 185]
[142 183]
[143 182]
[144 181]
[146 179]
[147 178]
[148 177]
[149 176]
[150 175]
[151 174]
[153 173]
[154 172]
[157 170]
[158 169]
[159 168]
[160 167]
[161 166]
[246 261]
[247 260]
[248 259]
[249 257]
[250 256]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
