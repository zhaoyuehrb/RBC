%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:44:10 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MRPS24)
} def

/sequence { (\
UCCCCACCCCUCAGCGCGCUGUGGUACGUCCCGCGCUCCGCUUGGCCCAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 45 0.003751178 ubox
2 44 0.005005700 ubox
2 45 0.027457341 ubox
3 44 0.027520458 ubox
3 45 0.045327866 ubox
4 24 0.006977475 ubox
4 44 0.042960639 ubox
4 45 0.329758077 ubox
5 23 0.007021904 ubox
5 44 0.332908134 ubox
6 22 0.007017805 ubox
6 25 0.009715074 ubox
6 29 0.003212898 ubox
6 43 0.328239750 ubox
7 21 0.006492193 ubox
7 24 0.010138167 ubox
7 28 0.003456470 ubox
7 45 0.161058825 ubox
8 23 0.010077043 ubox
8 24 0.005617553 ubox
8 44 0.159529214 ubox
8 45 0.355373454 ubox
9 23 0.005634863 ubox
9 24 0.020322414 ubox
9 44 0.357464022 ubox
9 45 0.677523973 ubox
10 23 0.020431011 ubox
10 44 0.683567722 ubox
10 45 0.338900551 ubox
10 51 0.023748522 ubox
11 44 0.330948354 ubox
11 45 0.229928920 ubox
11 50 0.022691514 ubox
12 21 0.023903625 ubox
12 44 0.309644949 ubox
13 20 0.024185850 ubox
13 37 0.207504074 ubox
13 42 0.926581122 ubox
13 43 0.228653947 ubox
14 19 0.023999705 ubox
14 36 0.216515943 ubox
14 41 0.964227982 ubox
14 42 0.088918954 ubox
14 46 0.050049614 ubox
15 35 0.216546885 ubox
15 40 0.964715833 ubox
15 44 0.003547809 ubox
15 45 0.050101590 ubox
16 34 0.216524830 ubox
16 36 0.221314402 ubox
16 39 0.936439264 ubox
16 41 0.091605581 ubox
16 46 0.084698279 ubox
17 33 0.216488937 ubox
17 35 0.241699404 ubox
17 40 0.091656400 ubox
17 44 0.040089967 ubox
17 45 0.084795657 ubox
18 29 0.013801311 ubox
18 32 0.213385863 ubox
18 34 0.241603686 ubox
18 36 0.883849185 ubox
18 39 0.089881210 ubox
18 41 0.004690188 ubox
18 43 0.038725960 ubox
18 46 0.047289159 ubox
19 24 0.004650081 ubox
19 28 0.023555231 ubox
19 33 0.238032000 ubox
19 35 0.864673372 ubox
19 40 0.004691220 ubox
19 45 0.047376606 ubox
20 26 0.004093255 ubox
20 28 0.095850248 ubox
20 33 0.085611138 ubox
20 35 0.342967291 ubox
20 44 0.043890633 ubox
21 25 0.003504287 ubox
21 27 0.099747020 ubox
21 29 0.023373087 ubox
21 32 0.208039572 ubox
21 34 0.934839383 ubox
21 36 0.021898828 ubox
21 41 0.107938392 ubox
21 43 0.003536275 ubox
22 26 0.089884966 ubox
22 28 0.035042184 ubox
22 33 0.935015852 ubox
22 35 0.021670320 ubox
22 40 0.108080919 ubox
22 49 0.003779216 ubox
23 27 0.036162274 ubox
23 30 0.029450150 ubox
23 31 0.310724975 ubox
23 32 0.935400965 ubox
23 34 0.020065597 ubox
23 39 0.108192368 ubox
23 48 0.004200329 ubox
24 29 0.020245821 ubox
24 30 0.315193596 ubox
24 31 0.929688910 ubox
24 38 0.108184819 ubox
24 47 0.004199740 ubox
25 33 0.003417470 ubox
27 33 0.005915811 ubox
27 35 0.107888712 ubox
28 32 0.005617791 ubox
28 34 0.107885297 ubox
28 36 0.003452161 ubox
28 46 0.022886963 ubox
29 33 0.100927703 ubox
29 35 0.003368388 ubox
29 45 0.022460373 ubox
30 44 0.022380613 ubox
30 45 0.006029725 ubox
31 44 0.006062816 ubox
31 45 0.006645899 ubox
32 44 0.006713115 ubox
33 41 0.024016568 ubox
33 43 0.005810919 ubox
34 40 0.024040014 ubox
35 39 0.022492134 ubox
35 41 0.006118213 ubox
35 46 0.003435378 ubox
36 40 0.006077447 ubox
36 45 0.003456989 ubox
37 44 0.003230201 ubox
38 44 0.004378367 ubox
38 45 0.046907940 ubox
39 44 0.047418891 ubox
40 46 0.029005587 ubox
41 45 0.028852590 ubox
41 51 0.056291706 ubox
42 50 0.059594073 ubox
42 51 0.004597191 ubox
43 49 0.062750560 ubox
43 50 0.012948687 ubox
44 48 0.062300124 ubox
9 45 0.9500000 lbox
10 44 0.9500000 lbox
13 42 0.9500000 lbox
14 41 0.9500000 lbox
15 40 0.9500000 lbox
16 39 0.9500000 lbox
18 36 0.9500000 lbox
19 35 0.9500000 lbox
21 34 0.9500000 lbox
22 33 0.9500000 lbox
23 32 0.9500000 lbox
24 31 0.9500000 lbox
showpage
end
%%EOF
