%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:31:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUGUGCGGCGCGCUCCUGGCGAGGACGGAGCGAGCAGAUCUCGCGUGCGCUCGCCGCCCGGCGCAGCCCAGCCCGGCCCCCGCCUGGCGCCGCGAGCCGAGGUGUCUCCCGCGCCCGCGCCCGUGUCGCCGCCGUGCCCGCGAGCGGGAGCCGGAGUCGCCGCCGCCCGAGCGCAGCCGAGCGCACGCCGAGCCCGUCCGCCGCCGCC\
) } def
/len { sequence length } bind def

/coor [
[86.92258453 249.49563599]
[89.39990234 230.27291870]
[89.62322998 215.27458191]
[89.84655762 200.27624512]
[90.06988525 185.27790833]
[87.02632141 178.54304504]
[90.40985107 170.05836487]
[90.85645294 155.06501770]
[91.30306244 140.07167053]
[91.74966431 125.07832336]
[92.19627380 110.08497620]
[77.79184723 105.89778137]
[63.38871002 101.71095276]
[55.72811127 114.60727692]
[48.06751251 127.50360107]
[40.40691757 140.39993286]
[37.51613998 157.10560608]
[20.66307831 158.95239258]
[14.22307014 143.26921082]
[27.51058960 132.73933411]
[35.17118835 119.84300995]
[42.83178329 106.94667816]
[50.49238205 94.05035400]
[74.43939972 84.94587708]
[94.45545197 92.32928467]
[97.77771759 77.70182037]
[101.09997559 63.07436371]
[104.42223358 48.44690323]
[107.74449158 33.81944275]
[111.06674957 19.19198227]
[109.91576385 10.13035870]
[114.54889679 4.37224722]
[118.08856964 -10.20412827]
[106.61386871 -19.86493874]
[92.85376740 -13.89337540]
[79.09366608 -7.92181253]
[71.88962555 6.41281033]
[56.16167450 9.57682991]
[43.97494125 -0.85691977]
[44.67805099 -16.88455772]
[57.73163605 -26.21105385]
[73.12210083 -21.68191528]
[86.88220215 -27.65347862]
[100.64231110 -33.62504196]
[110.96897888 -44.50437546]
[116.21569824 -58.55684662]
[121.46240997 -72.60932159]
[126.70912933 -86.66178894]
[131.95585632 -100.71426392]
[137.20256042 -114.76673126]
[142.44927979 -128.81919861]
[147.69599915 -142.87167358]
[152.94271851 -156.92414856]
[158.18943787 -170.97662354]
[163.33140564 -185.06776428]
[168.36831665 -199.19679260]
[173.19432068 -213.39924622]
[177.80831909 -227.67198181]
[182.42233276 -241.94471741]
[179.30511475 -257.45578003]
[190.58218384 -267.18597412]
[195.19619751 -281.45870972]
[199.81021118 -295.73144531]
[199.47224426 -304.85961914]
[204.60061646 -310.18142700]
[209.42662048 -324.38388062]
[206.54067993 -339.93966675]
[217.96138000 -349.50088501]
[222.78736877 -363.70333862]
[212.84254456 -377.38531494]
[213.01074219 -394.13262939]
[223.02758789 -407.34719849]
[238.78755188 -411.94076538]
[243.40156555 -426.21350098]
[247.90919495 -440.52017212]
[252.31019592 -454.86001587]
[256.71118164 -469.19985962]
[261.11218262 -483.53970337]
[265.51318359 -497.87957764]
[262.16537476 -513.34252930]
[273.29632568 -523.23950195]
[277.69732666 -537.57940674]
[282.09832764 -551.91925049]
[286.49932861 -566.25909424]
[290.90032959 -580.59893799]
[284.83666992 -599.55035400]
[298.19613647 -613.24884033]
[300.20013428 -628.11437988]
[302.20416260 -642.97991943]
[304.20816040 -657.84545898]
[306.21218872 -672.71093750]
[300.38796997 -687.42114258]
[309.75628662 -699.00061035]
[311.76028442 -713.86614990]
[313.76431274 -728.73162842]
[315.76831055 -743.59716797]
[309.94409180 -758.30737305]
[319.31240845 -769.88684082]
[321.31640625 -784.75231934]
[323.20971680 -799.63238525]
[324.99218750 -814.52606201]
[322.90472412 -823.41882324]
[326.91366577 -829.62768555]
[328.91766357 -844.49322510]
[330.92169189 -859.35870361]
[332.92568970 -874.22424316]
[334.92971802 -889.08978271]
[326.38543701 -902.66827393]
[331.81008911 -917.76635742]
[347.04229736 -922.80212402]
[360.39724731 -913.91253662]
[361.63015747 -897.91693115]
[349.79525757 -887.08575439]
[347.79122925 -872.22027588]
[345.78720093 -857.35473633]
[343.78320312 -842.48919678]
[341.77917480 -827.62365723]
[339.88589478 -812.74365234]
[338.10342407 -797.84991455]
[340.42980957 -790.83496094]
[336.18194580 -782.74835205]
[334.17794800 -767.88281250]
[340.14550781 -754.23590088]
[330.63385010 -741.59313965]
[328.62982178 -726.72766113]
[326.62582397 -711.86212158]
[324.62179565 -696.99658203]
[330.58935547 -683.34967041]
[321.07772827 -670.70697021]
[319.07369995 -655.84143066]
[317.06967163 -640.97589111]
[315.06567383 -626.11035156]
[313.06164551 -611.24481201]
[313.28710938 -611.10162354]
[313.51040649 -610.95513916]
[326.23245239 -618.90185547]
[338.95446777 -626.84851074]
[346.17391968 -641.57305908]
[362.55154419 -642.41302490]
[371.23944092 -628.50427246]
[363.30029297 -614.15502930]
[346.90115356 -614.12646484]
[334.17913818 -606.17980957]
[321.45709229 -598.23309326]
[318.24148560 -584.00701904]
[305.24017334 -576.19793701]
[300.83917236 -561.85809326]
[296.43817139 -547.51824951]
[292.03717041 -533.17840576]
[287.63616943 -518.83856201]
[291.29879761 -504.40127563]
[279.85302734 -493.47857666]
[275.45202637 -479.13873291]
[271.05102539 -464.79885864]
[266.65005493 -450.45901489]
[262.24905396 -436.11917114]
[263.29168701 -428.80242920]
[257.67431641 -421.59948730]
[253.06028748 -407.32675171]
[261.89096069 -397.31365967]
[264.64285278 -384.13903809]
[260.49249268 -371.22219849]
[250.42214966 -361.96981812]
[236.98983765 -358.87731934]
[232.16383362 -344.67486572]
[235.39495850 -330.13497925]
[223.62907410 -319.55789185]
[218.80307007 -305.35543823]
[214.08294678 -291.11743164]
[209.46893311 -276.84469604]
[204.85491943 -262.57199097]
[208.30216980 -248.08178711]
[196.69506836 -237.33070374]
[192.08105469 -223.05796814]
[187.46704102 -208.78523254]
[188.80541992 -204.20071411]
[187.27803040 -198.72676086]
[182.49734497 -194.15986633]
[177.46043396 -180.03083801]
[178.17533875 -172.67485046]
[172.24191284 -165.72990417]
[166.99519348 -151.67742920]
[161.74847412 -137.62495422]
[156.50175476 -123.57248688]
[151.25503540 -109.52001190]
[146.00831604 -95.46754456]
[140.76159668 -81.41506958]
[135.51487732 -67.36260223]
[130.26817322 -53.31012726]
[125.02144623 -39.25765610]
[137.00122070 -39.48104858]
[145.91795349 -29.95216370]
[144.73718262 -15.88230038]
[132.66494751 -6.66445541]
[129.12527466 7.91192007]
[125.69421387 22.51424217]
[122.37195587 37.14170074]
[119.04969025 51.76916122]
[115.72743225 66.39662170]
[112.40517426 81.02408600]
[109.08291626 95.65154266]
[107.18962097 110.53157806]
[106.74301910 125.52492523]
[106.29640961 140.51828003]
[105.84980774 155.51162720]
[105.40319824 170.50497437]
[105.06822205 185.50123596]
[104.84489441 200.49957275]
[104.62156677 215.49790955]
[104.39823914 230.49624634]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 210]
[3 209]
[4 208]
[5 207]
[7 206]
[8 205]
[9 204]
[10 203]
[11 202]
[13 23]
[14 22]
[15 21]
[16 20]
[25 201]
[26 200]
[27 199]
[28 198]
[29 197]
[30 196]
[32 195]
[33 194]
[34 44]
[35 43]
[36 42]
[45 190]
[46 189]
[47 188]
[48 187]
[49 186]
[50 185]
[51 184]
[52 183]
[53 182]
[54 181]
[55 179]
[56 178]
[57 175]
[58 174]
[59 173]
[61 171]
[62 170]
[63 169]
[65 168]
[66 167]
[68 165]
[69 164]
[73 159]
[74 158]
[75 156]
[76 155]
[77 154]
[78 153]
[79 152]
[81 150]
[82 149]
[83 148]
[84 147]
[85 146]
[87 133]
[88 132]
[89 131]
[90 130]
[91 129]
[93 127]
[94 126]
[95 125]
[96 124]
[98 122]
[99 121]
[100 119]
[101 118]
[103 117]
[104 116]
[105 115]
[106 114]
[107 113]
[135 144]
[136 143]
[137 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
