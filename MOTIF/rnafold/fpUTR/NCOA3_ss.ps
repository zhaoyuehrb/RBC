%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:19:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAUCCCAGUGGCCCCCGUGCGGCGACUUUAGCUGCUGCUGUCUCAGCCGCUCCACAGCGACGGCAGCGGCUGCGGCUUAGUCGGUGGCGGCCGGCGGCGGCUGCGGGCUGAGCGGCGAGUUUCCGAUUUAAAGCUGAGCUGCGAGGAAAAUGGCGGCGGGAGGAUCAAAAUACUUGCUGGAUGGUGGACUCAGAGACCAAUAAAAAUAAACUGCUUGAACAUCCUUUGACUGGUUAGCCAGUUGCUGAUGUAUA\
UUCAAG\
) } def
/len { sequence length } bind def

/coor [
[387.09228516 255.46057129]
[386.47106934 246.74609375]
[388.24130249 239.05070496]
[391.85824585 232.95967102]
[378.15997314 226.84767151]
[364.46166992 220.73567200]
[350.76336670 214.62367249]
[343.39794922 214.76773071]
[336.93814087 208.35537720]
[323.31411743 202.07955933]
[308.51712036 203.78218079]
[299.22006226 190.98081970]
[285.59603882 184.70500183]
[271.97201538 178.42918396]
[250.69525146 182.44938660]
[238.15220642 163.86244202]
[224.24295044 158.24703979]
[209.54461670 160.65713501]
[199.64448547 148.31623840]
[185.73522949 142.70085144]
[171.82597351 137.08544922]
[157.91671753 131.47006226]
[144.00746155 125.85466766]
[130.09820557 120.23927307]
[122.75529480 129.22720337]
[112.76148987 135.59309387]
[101.04114532 138.56837463]
[88.73615265 137.70671082]
[77.09474182 132.94349670]
[67.34490204 124.61733246]
[60.56523132 113.44984436]
[46.40274048 118.39190674]
[32.24025345 123.33396149]
[18.07776642 128.27601624]
[3.91527843 133.21807861]
[-10.24720955 138.16014099]
[-24.40969658 143.10218811]
[-38.57218552 148.04425049]
[-52.73467255 152.98631287]
[-66.89716339 157.92835999]
[-81.05964661 162.87042236]
[-95.22213745 167.81248474]
[-109.38462830 172.75454712]
[-96.27791595 180.04934692]
[-92.06135559 194.44450378]
[-99.16085052 207.65803528]
[-113.49185181 212.08776855]
[-126.80927277 205.18513489]
[-131.45120239 190.92146301]
[-124.74651337 177.50267029]
[-139.22761536 181.41389465]
[-153.70870972 185.32513428]
[-164.89179993 197.31974792]
[-180.80795288 193.36906433]
[-185.08401489 177.53721619]
[-173.32113647 166.11065674]
[-157.61994934 170.84402466]
[-143.13885498 166.93280029]
[-128.65774536 163.02156067]
[-114.32668304 158.59205627]
[-100.16419220 153.64999390]
[-86.00170898 148.70793152]
[-71.83921814 143.76588440]
[-57.67673111 138.82382202]
[-43.51424408 133.88175964]
[-29.35175514 128.93971252]
[-15.18926716 123.99765015]
[-1.02677929 119.05558777]
[13.13570881 114.11353302]
[27.29819679 109.17147827]
[41.46068573 104.22941589]
[55.62317276 99.28736115]
[58.39501190 84.54568481]
[46.99476624 74.79712677]
[31.47790718 71.70882416]
[26.83347321 57.55684280]
[15.43322563 47.80828476]
[4.03297901 38.05972672]
[-7.36726809 28.31117058]
[-18.76751518 18.56261253]
[-30.16776276 8.81405544]
[-41.56800842 -0.93450224]
[-52.96825409 -10.68305969]
[-68.48511505 -13.77136898]
[-73.12954712 -27.92334747]
[-84.52980042 -37.67190552]
[-95.93004608 -47.42046356]
[-107.33029175 -57.16901779]
[-118.73053741 -66.91757965]
[-134.24739075 -70.00588226]
[-138.89183044 -84.15786743]
[-150.29208374 -93.90641785]
[-161.69232178 -103.65497589]
[-177.65986633 -109.35357666]
[-176.60423279 -126.27462769]
[-160.05223083 -129.94445801]
[-151.94377136 -115.05522919]
[-140.54351807 -105.30667114]
[-129.14328003 -95.55811310]
[-114.44183350 -93.16708374]
[-108.98197937 -78.31782532]
[-97.58173370 -68.56926727]
[-86.18148804 -58.82070923]
[-74.78124237 -49.07215118]
[-63.38099289 -39.32359314]
[-48.67955399 -36.93256760]
[-43.21969986 -22.08330727]
[-31.81945038 -12.33474922]
[-20.41920471 -2.58619165]
[-9.01895714 7.16236544]
[2.38128924 16.91092300]
[13.78153610 26.65948105]
[25.18178368 36.40803909]
[36.58203125 46.15659332]
[51.28346634 48.54762268]
[56.74332428 63.39688110]
[68.14356995 73.14543915]
[78.60224915 67.43276978]
[89.55133057 65.26737213]
[88.29376984 50.32017899]
[87.03621674 35.37298584]
[85.77865601 20.42579269]
[84.52110291 5.47860146]
[71.17781830 -2.44203901]
[65.06945038 -16.70623970]
[68.54478455 -31.82912636]
[80.26747894 -41.99563980]
[95.72992706 -43.29654694]
[108.98649597 -35.23162460]
[114.93977356 -20.90199661]
[111.30059052 -5.81770182]
[99.46829224 4.22104406]
[100.72585297 19.16823578]
[101.98340607 34.11542892]
[103.24096680 49.06261826]
[104.49851990 64.00981140]
[122.38007355 71.45770264]
[133.87828064 87.04654694]
[135.71359253 106.33002472]
[149.62284851 111.94541168]
[163.53210449 117.56080627]
[177.44136047 123.17620087]
[191.35061646 128.79159546]
[205.25987244 134.40698242]
[220.95307922 132.39854431]
[229.85833740 144.33778381]
[243.76759338 149.95318604]
[250.65541077 145.36248779]
[258.70120239 143.86579895]
[266.59625244 145.63171387]
[273.08560181 150.30413818]
[277.16751099 157.07112122]
[278.24780273 164.80516052]
[291.87185669 171.08097839]
[305.49588013 177.35678101]
[321.26733398 176.10305786]
[329.58990479 188.45553589]
[343.21395874 194.73135376]
[356.87536621 200.92536926]
[370.57366943 207.03736877]
[384.27197266 213.14936829]
[397.97024536 219.26136780]
[384.80456543 212.07359314]
[374.12930298 201.53607178]
[366.77117920 188.46481323]
[363.29998779 173.87197876]
[363.98446655 158.88760376]
[368.77166748 144.67202759]
[377.29083252 132.32603455]
[388.88232422 122.80566406]
[402.64852905 116.84814453]
[417.52340698 114.91479492]
[432.35513306 117.15533447]
[445.99517822 123.39626312]
[457.38729858 133.15429688]
[465.64935303 145.67382812]
[470.14157104 159.98536682]
[470.51602173 174.98068237]
[466.74377441 189.49861145]
[459.11694336 202.41493225]
[448.22607422 212.72943115]
[434.91452026 219.64340210]
[420.21798706 222.62117004]
[435.11029053 220.82685852]
[450.00259399 219.03254700]
[464.89486694 217.23823547]
[470.85421753 203.08259583]
[483.10266113 193.81591797]
[498.34542847 191.93089294]
[512.48229980 197.93455505]
[521.71057129 210.21199036]
[523.54779053 225.46060181]
[517.49981689 239.57858276]
[505.19354248 248.76829529]
[489.93923950 250.55773926]
[475.84027100 244.46556091]
[466.68917847 232.13052368]
[451.79690552 233.92483521]
[436.90460205 235.71914673]
[422.01229858 237.51347351]
[418.83361816 244.30654907]
[432.76309204 249.87162781]
[446.69253540 255.43672180]
[460.62200928 261.00180054]
[474.55145264 266.56689453]
[489.49398804 267.87860107]
[496.98355103 280.87500000]
[490.62646484 294.46127319]
[475.84960938 297.03906250]
[465.26760864 286.40713501]
[452.06976318 279.27853394]
[438.87191772 272.14993286]
[425.67407227 265.02130127]
[412.47622681 257.89270020]
[409.29754639 264.68579102]
[417.46209717 277.26910400]
[425.62664795 289.85241699]
[433.79122925 302.43576050]
[441.95578003 315.01907349]
[450.41973877 327.40301514]
[459.17819214 339.58041382]
[467.93667603 351.75781250]
[476.69512939 363.93521118]
[485.45361328 376.11260986]
[499.18579102 375.15106201]
[511.50567627 381.04614258]
[519.24865723 392.16525269]
[520.48449707 405.54968262]
[514.99737549 417.70147705]
[523.60925293 429.98303223]
[532.22106934 442.26455688]
[540.83288574 454.54611206]
[549.44470215 466.82766724]
[558.05651855 479.10922241]
[573.14410400 485.53558350]
[574.85357666 501.84536743]
[561.42645264 511.26049805]
[546.67535400 504.09545898]
[545.77502441 487.72103882]
[537.16314697 475.43948364]
[528.55133057 463.15795898]
[519.93951416 450.87640381]
[511.32766724 438.59484863]
[502.71585083 426.31329346]
[486.28744507 426.55700684]
[472.82272339 416.85391235]
[467.75549316 400.87509155]
[473.27621460 384.87109375]
[464.51773071 372.69369507]
[455.75927734 360.51626587]
[447.00079346 348.33886719]
[438.24230957 336.16146851]
[435.53363037 335.56634521]
[432.89343262 333.87939453]
[430.73254395 331.12011719]
[429.44781494 327.45394897]
[429.37246704 323.18362427]
[421.20788574 310.60031128]
[413.04333496 298.01699829]
[404.87878418 285.43365479]
[396.71423340 272.85034180]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 162]
[5 161]
[6 160]
[7 159]
[9 158]
[10 157]
[12 155]
[13 154]
[14 153]
[16 147]
[17 146]
[19 144]
[20 143]
[21 142]
[22 141]
[23 140]
[24 139]
[31 72]
[32 71]
[33 70]
[34 69]
[35 68]
[36 67]
[37 66]
[38 65]
[39 64]
[40 63]
[41 62]
[42 61]
[43 60]
[50 59]
[51 58]
[52 57]
[73 117]
[74 116]
[76 114]
[77 113]
[78 112]
[79 111]
[80 110]
[81 109]
[82 108]
[83 107]
[85 105]
[86 104]
[87 103]
[88 102]
[89 101]
[91 99]
[92 98]
[93 97]
[119 136]
[120 135]
[121 134]
[122 133]
[123 132]
[183 200]
[184 199]
[185 198]
[186 197]
[215 261]
[216 260]
[217 259]
[218 258]
[219 257]
[220 252]
[221 251]
[222 250]
[223 249]
[224 248]
[229 244]
[230 243]
[231 242]
[232 241]
[233 240]
[234 239]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
