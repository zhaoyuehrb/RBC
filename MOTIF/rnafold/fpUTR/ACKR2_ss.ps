%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:23:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUACAGUACGGGAUCCUUUCUGGAAUGGAGGUCUUAUGAGCUGCUAUUGAACACGGCAGAGCCUGUUGGUGACCUGCACACAGGAGCCCUCCAGUCAGUACUGAUUGAAUUACUCAAGGCUGCCUCUCUGCAAAGUUGAGCACUACAGGACGUCGGGACUGGGCAUUUCCUUCCAAC\
) } def
/len { sequence length } bind def

/coor [
[143.50187683 464.51538086]
[141.67382812 449.62716675]
[139.84579468 434.73898315]
[122.73367310 423.60317993]
[119.29703522 403.18154907]
[132.18046570 386.59652710]
[129.31832886 371.87210083]
[126.45619202 357.14770508]
[123.59405518 342.42330933]
[111.38274384 329.83630371]
[117.48496246 312.47634888]
[114.36628723 297.80413818]
[111.24761200 283.13192749]
[98.65497589 275.26037598]
[95.28318024 260.42510986]
[103.62495422 247.27015686]
[100.50627899 232.59793091]
[97.38760376 217.92572021]
[94.26892853 203.25350952]
[85.20529175 198.46145630]
[80.18343353 189.27166748]
[81.08233643 178.61720276]
[87.84526825 170.05331421]
[85.24053955 155.28120422]
[82.63581848 140.50907898]
[70.05576324 132.33949280]
[55.50132370 135.96832275]
[40.94688797 139.59715271]
[26.39245415 143.22598267]
[11.83801746 146.85481262]
[-2.68419719 150.61050415]
[-17.17308426 154.49279785]
[-28.50046730 165.53820801]
[-42.79662704 161.35859680]
[-57.28551483 165.24089050]
[-68.49254608 177.21313477]
[-84.40077972 173.23065186]
[-88.64519501 157.39028931]
[-76.85949707 145.98725891]
[-61.16780090 150.75199890]
[-46.67891312 146.86972046]
[-36.38787460 136.10198975]
[-21.05537033 140.00390625]
[-6.56648302 136.12162781]
[-0.90344828 131.33993530]
[8.20918941 132.30036926]
[22.76362419 128.67153931]
[37.31806183 125.04271698]
[51.87249756 121.41388702]
[66.42693329 117.78505707]
[51.14841461 93.63312531]
[55.55606079 58.89749908]
[42.69855118 51.17192841]
[29.84104347 43.44635773]
[16.98353386 35.72078323]
[7.98826838 33.97498322]
[3.97071266 27.74651909]
[-8.75000858 19.79772949]
[-21.47072983 11.84894085]
[-38.10714722 8.58306599]
[-39.57432556 -8.30727863]
[-23.75021553 -14.39282894]
[-13.52194118 -0.87178105]
[-0.80121976 7.07700777]
[11.91950130 15.02579689]
[24.70910454 22.86327553]
[37.56661224 30.58884621]
[50.42412186 38.31441879]
[63.28163147 46.03998947]
[74.85600281 36.49881363]
[69.72570038 22.40342522]
[64.59539795 8.30803680]
[53.24263000 2.14766765]
[49.26858902 -9.71990490]
[54.29055786 -20.74402809]
[49.40703583 -34.92680740]
[44.52351379 -49.10958481]
[39.63998795 -63.29236603]
[26.91515160 -73.63695526]
[29.77822113 -89.78424072]
[45.28392029 -95.12328339]
[57.48131180 -84.16172791]
[53.82276917 -68.17588806]
[58.70629120 -53.99310684]
[63.58981323 -39.81032944]
[68.47333527 -25.62755203]
[82.31757355 -14.86253166]
[78.69078827 3.17773461]
[83.82109070 17.27312469]
[88.95139313 31.36851311]
[96.44882202 31.56484032]
[104.28603363 18.77507591]
[111.44367981 31.95749474]
[118.94110870 32.15382004]
[124.80207825 18.34624863]
[130.66304016 4.53867626]
[136.52401733 -9.26889706]
[142.38497925 -23.07646942]
[148.24594116 -36.88404083]
[145.71142578 -53.08614731]
[158.64375305 -63.17015457]
[173.73924255 -56.76249695]
[175.46896362 -40.45482635]
[162.05351257 -31.02307510]
[156.19255066 -17.21550179]
[150.33158875 -3.40792966]
[144.47061157 10.39964294]
[138.60964966 24.20721626]
[132.74868774 38.01478958]
[137.56959534 43.76012039]
[145.51840210 31.03941345]
[160.07283020 34.66828918]
[161.11909485 49.63175583]
[147.21141052 55.25078964]
[152.03231812 60.99612045]
[166.64785767 57.62185669]
[181.26341248 54.24758911]
[195.87896729 50.87332535]
[210.49452209 47.49905777]
[216.63441467 33.37079620]
[229.76272583 25.65711784]
[244.73866272 27.13546753]
[255.83953857 37.03033447]
[270.45510864 33.65606689]
[285.07064819 30.28180313]
[293.23202515 16.74787521]
[308.59280396 13.03007317]
[322.03970337 21.33410072]
[325.59487915 36.73332596]
[317.14916992 50.09166336]
[301.71319580 53.48384476]
[288.44491577 44.89735413]
[273.82934570 48.27161789]
[259.21380615 51.64588547]
[253.57402039 65.40563965]
[240.76181030 73.29938507]
[225.58071899 72.12145233]
[213.86877441 62.11460876]
[199.25323486 65.48887634]
[184.63768005 68.86314392]
[170.02212524 72.23740387]
[155.40657043 75.61167145]
[151.10214233 114.13881683]
[126.30408478 137.13520813]
[97.40793610 137.90435791]
[100.01265717 152.67646790]
[102.61737823 167.44859314]
[116.26702881 182.25773621]
[108.94113922 200.13482666]
[112.05981445 214.80705261]
[115.17849731 229.47926331]
[118.29717255 244.15147400]
[131.26835632 252.77621460]
[134.22212219 267.70034790]
[125.91982269 280.01324463]
[129.03849792 294.68545532]
[132.15718079 309.35766602]
[142.54209900 317.03808594]
[144.82582092 329.34323120]
[138.31846619 339.56115723]
[141.18060303 354.28555298]
[144.04272461 369.00997925]
[146.90486145 383.73437500]
[156.23403931 386.61935425]
[163.81628418 392.68035889]
[168.62739563 401.04437256]
[170.03744507 410.53115845]
[167.89299011 419.81979370]
[162.53254700 427.63262939]
[154.73397827 432.91094971]
[156.56202698 447.79913330]
[158.39006042 462.68731689]
[172.02638245 470.09210205]
[178.67558289 484.11236572]
[175.78089905 499.35705566]
[164.45541382 509.96426392]
[149.05400085 511.85531616]
[135.49882507 504.30307007]
[129.00210571 490.21148682]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 172]
[2 171]
[3 170]
[6 163]
[7 162]
[8 161]
[9 160]
[11 157]
[12 156]
[13 155]
[16 152]
[17 151]
[18 150]
[19 149]
[23 147]
[24 146]
[25 145]
[26 50]
[27 49]
[28 48]
[29 47]
[30 46]
[31 44]
[32 43]
[34 41]
[35 40]
[52 69]
[53 68]
[54 67]
[55 66]
[57 65]
[58 64]
[59 63]
[70 90]
[71 89]
[72 88]
[75 86]
[76 85]
[77 84]
[78 83]
[94 109]
[95 108]
[96 107]
[97 106]
[98 105]
[99 104]
[115 142]
[116 141]
[117 140]
[118 139]
[119 138]
[123 134]
[124 133]
[125 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
