%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:04:55 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MTAP)
} def

/sequence { (\
CUCCGCACUGCUCACUCCCGCGCAGUGAGGUUGGCACAGCCACCGCUCUGUGGCUCGCUUGGUUCCCUUAGUCCCGAGCGCUCGCCCACUGCAGAUUCCUUUCCCGUGCAGAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 29 0.004906832 ubox
1 34 0.003850437 ubox
1 111 0.147659257 ubox
2 28 0.005249891 ubox
2 33 0.003834283 ubox
2 110 0.137993976 ubox
2 112 0.789781149 ubox
3 27 0.004164335 ubox
3 30 0.089010375 ubox
3 111 0.852590413 ubox
4 29 0.089871376 ubox
4 106 0.004329274 ubox
4 108 0.037685692 ubox
5 11 0.005853211 ubox
5 21 0.005441016 ubox
5 35 0.003542499 ubox
5 105 0.004244256 ubox
5 107 0.037841128 ubox
5 109 0.991061255 ubox
6 10 0.005824658 ubox
6 20 0.005441159 ubox
6 27 0.100742838 ubox
6 34 0.003540203 ubox
6 106 0.037783159 ubox
6 108 0.992011468 ubox
7 26 0.101277295 ubox
7 107 0.991296052 ubox
8 25 0.101352571 ubox
8 94 0.003210941 ubox
8 106 0.989317550 ubox
8 111 0.060725056 ubox
9 20 0.035391397 ubox
9 22 0.045317227 ubox
9 24 0.101378701 ubox
9 93 0.005548394 ubox
9 106 0.021417200 ubox
9 110 0.061095448 ubox
10 19 0.047896836 ubox
10 21 0.904871748 ubox
10 23 0.101389481 ubox
10 31 0.003651615 ubox
10 35 0.003421240 ubox
10 46 0.004800497 ubox
10 105 0.084371219 ubox
10 109 0.061123180 ubox
11 20 0.905632927 ubox
11 22 0.101292821 ubox
11 29 0.028072815 ubox
11 34 0.003407466 ubox
11 45 0.004794840 ubox
11 94 0.008356738 ubox
11 108 0.059597970 ubox
11 111 0.008567134 ubox
12 28 0.039043499 ubox
12 93 0.008348344 ubox
12 95 0.003518961 ubox
12 110 0.008587127 ubox
13 27 0.040020607 ubox
13 94 0.003566765 ubox
13 108 0.015869419 ubox
14 26 0.040015993 ubox
14 107 0.029301828 ubox
15 25 0.040017436 ubox
15 94 0.007683094 ubox
15 106 0.030674071 ubox
16 24 0.038604860 ubox
16 93 0.007948421 ubox
16 95 0.022060504 ubox
17 94 0.022584411 ubox
19 27 0.003762725 ubox
19 106 0.004130737 ubox
19 108 0.004977521 ubox
20 26 0.003783769 ubox
20 92 0.004169894 ubox
20 105 0.004655538 ubox
20 107 0.009425842 ubox
20 109 0.004076030 ubox
21 25 0.003764477 ubox
21 91 0.003836594 ubox
21 106 0.009464524 ubox
21 108 0.004077210 ubox
22 51 0.005047174 ubox
22 92 0.991821552 ubox
23 50 0.005397880 ubox
23 91 0.993956393 ubox
24 49 0.005432367 ubox
24 90 0.993750505 ubox
25 48 0.005435631 ubox
25 89 0.993976722 ubox
26 88 0.993775576 ubox
27 48 0.003768727 ubox
27 87 0.993689054 ubox
28 47 0.004398550 ubox
28 49 0.004716352 ubox
29 41 0.008574686 ubox
29 44 0.052022522 ubox
29 46 0.003954083 ubox
29 47 0.005828206 ubox
29 48 0.004855233 ubox
29 86 0.993633298 ubox
29 87 0.005792732 ubox
30 40 0.008841459 ubox
30 43 0.054057858 ubox
30 46 0.010618936 ubox
30 85 0.993746846 ubox
30 86 0.005463759 ubox
30 89 0.007180278 ubox
30 113 0.007152230 ubox
31 39 0.008839631 ubox
31 42 0.038151201 ubox
31 45 0.010364306 ubox
31 84 0.981399004 ubox
31 88 0.017951447 ubox
31 111 0.004277143 ubox
31 112 0.010260516 ubox
32 38 0.009824673 ubox
32 42 0.053971791 ubox
32 84 0.086976235 ubox
32 88 0.022473874 ubox
32 110 0.004954933 ubox
32 111 0.009426066 ubox
33 37 0.010866699 ubox
33 41 0.069029389 ubox
33 44 0.003364309 ubox
33 55 0.005411961 ubox
33 82 0.968338417 ubox
33 83 0.122927862 ubox
33 86 0.082443775 ubox
33 87 0.021518501 ubox
33 109 0.003617051 ubox
34 40 0.069040138 ubox
34 43 0.003361049 ubox
34 51 0.011599313 ubox
34 54 0.006055141 ubox
34 81 0.990249513 ubox
34 82 0.041933665 ubox
34 85 0.083787996 ubox
34 86 0.016696975 ubox
34 109 0.020330853 ubox
35 39 0.068538543 ubox
35 50 0.012072175 ubox
35 52 0.010565276 ubox
35 53 0.004395357 ubox
35 80 0.979405134 ubox
35 84 0.084781347 ubox
35 108 0.020692502 ubox
36 49 0.012026842 ubox
36 51 0.013097958 ubox
36 107 0.020679813 ubox
37 50 0.013308688 ubox
37 106 0.020648913 ubox
38 47 0.014323531 ubox
38 49 0.012731420 ubox
38 55 0.932642911 ubox
39 46 0.016020915 ubox
39 48 0.012180734 ubox
39 54 0.996970714 ubox
40 45 0.016092181 ubox
40 53 0.997268702 ubox
41 52 0.997265893 ubox
42 51 0.996782581 ubox
43 50 0.989998423 ubox
43 53 0.024729965 ubox
44 50 0.080073048 ubox
44 52 0.024991213 ubox
45 49 0.069750277 ubox
45 51 0.026390799 ubox
45 54 0.008369743 ubox
45 79 0.003386117 ubox
45 92 0.035524725 ubox
46 50 0.026646433 ubox
46 53 0.008376244 ubox
46 78 0.003386586 ubox
46 91 0.035555259 ubox
47 52 0.007485057 ubox
47 77 0.003385269 ubox
47 95 0.022122696 ubox
48 76 0.003341421 ubox
48 94 0.024080504 ubox
49 88 0.047974984 ubox
49 93 0.024098489 ubox
50 85 0.007087336 ubox
50 87 0.051415119 ubox
50 89 0.012233475 ubox
50 92 0.024016080 ubox
51 84 0.007110259 ubox
51 88 0.012991481 ubox
51 91 0.023812842 ubox
52 83 0.007261746 ubox
52 86 0.065802165 ubox
52 87 0.011209991 ubox
53 79 0.007689213 ubox
53 81 0.004432803 ubox
53 82 0.005945037 ubox
53 85 0.066405850 ubox
53 86 0.008188439 ubox
54 78 0.007859546 ubox
54 80 0.004094922 ubox
54 84 0.066843396 ubox
55 77 0.008144196 ubox
56 76 0.008370979 ubox
56 80 0.193049983 ubox
57 72 0.006455676 ubox
57 75 0.007671773 ubox
57 79 0.998867645 ubox
58 71 0.008024877 ubox
58 78 0.999868086 ubox
59 70 0.007906103 ubox
59 77 0.999574451 ubox
60 76 0.998807047 ubox
61 67 0.008369525 ubox
61 68 0.006022050 ubox
61 73 0.005552545 ubox
61 74 0.086123793 ubox
61 75 0.996062663 ubox
62 66 0.008425251 ubox
62 67 0.007232036 ubox
62 72 0.006292403 ubox
62 73 0.120206296 ubox
62 74 0.988768748 ubox
62 79 0.009908737 ubox
63 71 0.122810455 ubox
63 78 0.009918929 ubox
64 70 0.133375000 ubox
64 77 0.009924799 ubox
65 76 0.009917273 ubox
80 92 0.005764235 ubox
81 91 0.005826363 ubox
81 94 0.008851505 ubox
82 93 0.008885019 ubox
82 95 0.006579560 ubox
83 94 0.007033792 ubox
84 92 0.015959720 ubox
85 91 0.015946757 ubox
89 111 0.097364797 ubox
90 110 0.098271928 ubox
91 109 0.098493189 ubox
92 108 0.098489237 ubox
93 100 0.263912868 ubox
93 101 0.037416217 ubox
93 102 0.096675290 ubox
93 107 0.096566785 ubox
94 99 0.281145421 ubox
94 100 0.038352887 ubox
94 101 0.112675974 ubox
94 102 0.109535347 ubox
94 103 0.654877158 ubox
95 100 0.103535443 ubox
95 101 0.116915797 ubox
95 102 0.647213643 ubox
95 107 0.003596553 ubox
96 106 0.004000996 ubox
106 113 0.005196013 ubox
107 112 0.005198333 ubox
2 112 0.9500000 lbox
3 111 0.9500000 lbox
5 109 0.9500000 lbox
6 108 0.9500000 lbox
7 107 0.9500000 lbox
8 106 0.9500000 lbox
10 21 0.9500000 lbox
11 20 0.9500000 lbox
22 92 0.9500000 lbox
23 91 0.9500000 lbox
24 90 0.9500000 lbox
25 89 0.9500000 lbox
26 88 0.9500000 lbox
27 87 0.9500000 lbox
29 86 0.9500000 lbox
30 85 0.9500000 lbox
31 84 0.9500000 lbox
33 82 0.9500000 lbox
34 81 0.9500000 lbox
35 80 0.9500000 lbox
38 55 0.9500000 lbox
39 54 0.9500000 lbox
40 53 0.9500000 lbox
41 52 0.9500000 lbox
42 51 0.9500000 lbox
43 50 0.9500000 lbox
57 79 0.9500000 lbox
58 78 0.9500000 lbox
59 77 0.9500000 lbox
60 76 0.9500000 lbox
61 75 0.9500000 lbox
62 74 0.9500000 lbox
94 103 0.9500000 lbox
95 102 0.9500000 lbox
showpage
end
%%EOF
