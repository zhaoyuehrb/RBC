%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:07:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCAACGCGUAAGACUGCGACGGUACCGGGGCGGCGGGGAAGGACCGAGAGGCGGGAGGAGCAGCGGCUCAGGCGCCUGCAAACUGGUGGCCUGAACGAGGUAGACCAUGACUGUGGUUUCAGUGGCGUCACUCGCUGGGCUGCUCUUCCUGAGGUUUUCCUAAGCCAUCCCCUGGCGGAACCGCCCCCAGUUUUUGUCCAGAAGUGCUUAUAGAAAAG\
) } def
/len { sequence length } bind def

/coor [
[105.76862335 714.35852051]
[93.79380035 705.16577148]
[84.74412537 693.08251953]
[79.29115295 679.00531006]
[77.83951569 663.97882080]
[80.49694824 649.11810303]
[87.06623840 635.52593994]
[97.05991364 624.21093750]
[109.73637390 616.01275635]
[124.15493011 611.53979492]
[123.72853088 596.54583740]
[123.30212402 581.55187988]
[110.92440796 573.30993652]
[105.71169281 559.19287109]
[109.85964203 544.54199219]
[121.97920227 535.03289795]
[121.55279541 520.03900146]
[121.12639618 505.04504395]
[117.79666901 498.45318604]
[120.80202484 489.83526611]
[120.58880615 474.83679199]
[120.37557983 459.83831787]
[120.16236115 444.83981323]
[119.94913483 429.84133911]
[110.16154480 415.27151489]
[119.28417206 399.27200317]
[118.85777283 384.27807617]
[108.86405945 369.84884644]
[117.75833893 353.72128296]
[117.11883545 338.73492432]
[116.47933960 323.74856567]
[115.83984375 308.76220703]
[115.20034790 293.77581787]
[114.56085205 278.78945923]
[113.92135620 263.80310059]
[98.86345673 245.51499939]
[110.15340424 223.88185120]
[108.02827454 209.03315735]
[105.90314484 194.18444824]
[103.77802277 179.33575439]
[101.65289307 164.48706055]
[92.19049835 152.98434448]
[97.89460754 138.22718811]
[95.76947784 123.37849426]
[74.58801270 108.96427917]
[77.21574402 80.27654266]
[62.41572952 82.71778107]
[50.08758163 93.53206635]
[34.64711761 88.00720215]
[31.97816467 71.82669830]
[44.82631683 61.63566589]
[59.97449112 67.91777039]
[74.77450562 65.47652435]
[83.29547119 53.13177109]
[80.32991791 38.42784119]
[77.36435699 23.72391510]
[74.39880371 9.01998901]
[71.43324280 -5.68393850]
[68.46768951 -20.38786507]
[65.50212860 -35.09179306]
[62.53657532 -49.79571915]
[59.57101822 -64.49964905]
[56.60546112 -79.20357513]
[53.63990402 -93.90750122]
[50.67434692 -108.61142731]
[47.70878983 -123.31535339]
[36.19762039 -115.04553223]
[19.79991150 -112.84588623]
[1.40748405 -118.70882416]
[-15.41365623 -133.36293030]
[-25.98249626 -144.00715637]
[-36.55133820 -154.65138245]
[-47.12017822 -165.29560852]
[-57.68901825 -175.93983459]
[-68.25785828 -186.58407593]
[-78.90208435 -197.15290833]
[-89.62117004 -207.64582825]
[-100.34024811 -218.13874817]
[-115.61647034 -215.41540527]
[-129.56120300 -222.22158813]
[-136.81240845 -235.94017029]
[-134.58184814 -251.29609680]
[-123.72721863 -262.38467407]
[-108.42234802 -264.94213867]
[-94.55227661 -257.98507690]
[-87.45031738 -244.18864441]
[-89.84732819 -228.85781860]
[-79.12825012 -218.36491394]
[-68.40917206 -207.87199402]
[-61.43563461 -205.44100952]
[-57.61363220 -197.15290833]
[-47.04478836 -186.50868225]
[-36.47594833 -175.86445618]
[-25.90710831 -165.22023010]
[-15.33826733 -154.57598877]
[-4.76942730 -143.93176270]
[2.24319482 -146.59130859]
[-3.07587862 -160.61654663]
[-8.39495182 -174.64178467]
[-13.71380806 -188.66711426]
[0.31159949 -193.98574829]
[5.63029194 -179.96086121]
[10.94936466 -165.93562317]
[16.26843834 -151.91036987]
[23.28105927 -154.56991577]
[24.13352203 -169.54566956]
[24.98598289 -184.52142334]
[25.83844566 -199.49717712]
[26.69090652 -214.47294617]
[27.54336739 -229.44869995]
[19.68496704 -243.84236145]
[28.45091820 -257.70202637]
[44.82356262 -256.77005005]
[51.96012497 -242.00517273]
[42.51912689 -228.59623718]
[41.66666412 -213.62048340]
[40.81420135 -198.64472961]
[39.96174240 -183.66896057]
[39.10927963 -168.69320679]
[38.25681686 -153.71745300]
[52.52923965 -149.10247803]
[60.60620880 -161.74220276]
[68.68318176 -174.38192749]
[76.76015472 -187.02163696]
[84.83712006 -199.66136169]
[92.91409302 -212.30108643]
[100.99106598 -224.94081116]
[97.34737396 -240.31933594]
[105.71615601 -253.72601318]
[121.13234711 -257.20690918]
[134.44979858 -248.69685364]
[137.76750183 -233.24472046]
[129.11712646 -220.01799011]
[113.63078308 -216.86383057]
[105.55381012 -204.22412109]
[97.47684479 -191.58439636]
[89.39987183 -178.94467163]
[81.32289886 -166.30494690]
[73.24593353 -153.66523743]
[65.16896057 -141.02551270]
[62.41271973 -126.28091431]
[65.37827301 -111.57698822]
[68.34383392 -96.87305450]
[71.30938721 -82.16912842]
[74.27494812 -67.46520233]
[77.24050140 -52.76127625]
[80.20606232 -38.05735016]
[83.17161560 -23.35342216]
[86.13717651 -8.64949512]
[89.10272980 6.05443192]
[92.06828308 20.75835800]
[95.03384399 35.46228409]
[97.99939728 50.16621399]
[110.52303314 58.42203903]
[125.20550537 55.35204697]
[139.88798523 52.28205490]
[151.74388123 40.95201874]
[167.40585327 45.81358337]
[170.76219177 61.86558914]
[158.36021423 72.59510803]
[142.95797729 66.96453094]
[128.27549744 70.03452301]
[113.59302521 73.10451508]
[124.32804871 85.07563019]
[126.94667816 100.06240845]
[121.54850769 113.35699463]
[110.61817932 121.25336456]
[112.74330902 136.10206604]
[122.35770416 148.66685486]
[116.50158691 162.36192322]
[118.62671661 177.21063232]
[120.75184631 192.05932617]
[122.87697601 206.90802002]
[125.00210571 221.75671387]
[130.87716675 223.98431396]
[135.86779785 227.73498535]
[139.59298706 232.69433594]
[141.77622986 238.45690918]
[142.26594543 244.55928040]
[141.04576111 250.51730347]
[138.23410034 255.86451721]
[134.07305908 260.18872070]
[128.90771484 263.16360474]
[129.54721069 278.14996338]
[130.18670654 293.13632202]
[130.82620239 308.12271118]
[131.46569824 323.10906982]
[132.10519409 338.09542847]
[132.74470520 353.08178711]
[141.69775391 362.35977173]
[141.92581177 374.85034180]
[133.85171509 383.85165405]
[134.27810669 398.84561157]
[143.09838867 408.24993896]
[143.14884949 420.74246216]
[134.94761658 429.62811279]
[135.16084290 444.62658691]
[135.37406921 459.62509155]
[135.58729553 474.62356567]
[135.80050659 489.62203979]
[136.12033081 504.61865234]
[136.54673767 519.61260986]
[136.97314453 534.60650635]
[149.61352539 543.41143799]
[154.58738708 557.80291748]
[150.18537903 572.19342041]
[138.29606628 581.12548828]
[138.72247314 596.11944580]
[139.14886475 611.11340332]
[153.79832458 614.75970459]
[166.92021179 622.22424316]
[177.54077148 632.95300293]
[184.87190247 646.14984131]
[188.36958313 660.83551025]
[187.77426147 675.92022705]
[183.13011169 690.28454590]
[174.78176880 702.86260986]
[163.34872437 712.72106934]
[149.67939758 719.12823486]
[134.78814697 721.60876465]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 209]
[11 208]
[12 207]
[16 203]
[17 202]
[18 201]
[20 200]
[21 199]
[22 198]
[23 197]
[24 196]
[26 193]
[27 192]
[29 189]
[30 188]
[31 187]
[32 186]
[33 185]
[34 184]
[35 183]
[37 174]
[38 173]
[39 172]
[40 171]
[41 170]
[43 168]
[44 167]
[46 53]
[47 52]
[54 153]
[55 152]
[56 151]
[57 150]
[58 149]
[59 148]
[60 147]
[61 146]
[62 145]
[63 144]
[64 143]
[65 142]
[66 141]
[70 96]
[71 95]
[72 94]
[73 93]
[74 92]
[75 91]
[76 89]
[77 88]
[78 87]
[105 120]
[106 119]
[107 118]
[108 117]
[109 116]
[110 115]
[121 140]
[122 139]
[123 138]
[124 137]
[125 136]
[126 135]
[127 134]
[154 163]
[155 162]
[156 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
