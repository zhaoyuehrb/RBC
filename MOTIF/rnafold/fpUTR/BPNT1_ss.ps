%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:09:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUUGCGCGCAGUUUCCCGCAUGCUCAGUAGCUGAGGUAGGGAUGCCAUCCUUCUCAAAAGACUUAUUGACAGUGCCAAAGCUCGGUACUGGACACAACGAGGGACCUGGGUCUACGAUAACGCGCUUUUGCUCCUCCUGAAGUGUCUUUGGUCCAACGUUGUUCCAGAGUGUACC\
) } def
/len { sequence length } bind def

/coor [
[246.97807312 93.14211273]
[232.04948425 94.60408783]
[217.12091064 96.06606293]
[202.19232178 97.52804565]
[192.96476746 109.16367340]
[177.84590149 110.85899353]
[165.70393372 101.10140228]
[150.77534485 102.56337738]
[135.84677124 104.02535248]
[120.91818237 105.48733521]
[108.26559448 127.04106140]
[76.94506073 126.23577881]
[64.08983612 133.96514893]
[56.24985123 147.70724487]
[41.35542297 147.63452148]
[28.50019836 155.36389160]
[15.64497471 163.09327698]
[2.78975105 170.82264709]
[3.35296202 183.34637451]
[-1.44580221 194.84963989]
[-10.63489819 203.16329956]
[-22.42126656 206.74818420]
[-34.54011917 204.97981262]
[-44.69009781 198.25627136]
[-57.81154251 205.52453613]
[-70.93299103 212.79280090]
[-84.05443573 220.06106567]
[-97.17588043 227.32933044]
[-108.10160828 240.29330444]
[-123.58349609 233.38334656]
[-121.22939301 216.59362793]
[-104.44414520 214.20787048]
[-91.32270050 206.93962097]
[-78.20125580 199.67135620]
[-65.07980347 192.40309143]
[-51.95836258 185.13482666]
[-50.63528061 167.54927063]
[-38.93574524 154.14479065]
[-21.38380432 150.39053345]
[-4.93962288 157.96742249]
[7.91560030 150.23805237]
[20.77082443 142.50866699]
[33.62604904 134.77929688]
[40.54654312 121.59006500]
[56.36046219 121.10993195]
[69.21568298 113.38055420]
[69.61485291 105.89118958]
[54.62767410 106.51123047]
[40.80203629 112.32945251]
[28.53201866 103.70121002]
[29.33074379 88.72248840]
[42.44875717 81.44803619]
[55.57681656 88.70288086]
[70.41318512 90.91244507]
[70.81235504 83.42307281]
[58.85153580 74.37106323]
[46.89072418 65.31905365]
[34.92990875 56.26703644]
[20.12115860 60.90174866]
[5.42719889 55.91504669]
[-3.50184250 43.22442627]
[-3.23256707 27.70968819]
[6.13148355 15.33656597]
[20.98964119 10.86277580]
[35.62863922 16.00858307]
[44.41948700 28.79532051]
[43.98192215 44.30622482]
[55.94273758 53.35823822]
[67.90354919 62.41024780]
[79.86436462 71.46226501]
[98.88311005 69.52761841]
[113.42462158 77.66457367]
[119.45620728 90.55874634]
[134.38479614 89.09677124]
[149.31336975 87.63479614]
[164.24195862 86.17281342]
[174.26023865 74.24504089]
[189.42077637 72.97505188]
[200.73034668 82.59945679]
[215.65892029 81.13748169]
[230.58750916 79.67550659]
[245.51609802 78.21352386]
[254.30912781 68.74923706]
[266.79446411 67.85448456]
[276.22210693 75.46500397]
[291.17428589 74.26821136]
[306.12646484 73.07141876]
[321.07864380 71.87462616]
[336.03082275 70.67783356]
[350.93109131 68.95113373]
[365.76071167 66.69670105]
[380.59033203 64.44226074]
[395.41995239 62.18782425]
[403.46343994 57.79171753]
[410.53253174 60.02740479]
[425.39984131 58.03652191]
[440.26712036 56.04563904]
[455.13442993 54.05475616]
[470.00170898 52.06387329]
[484.86901855 50.07299042]
[494.45764160 37.79717255]
[509.56356812 35.98992538]
[521.20758057 45.20688248]
[536.07489014 43.21599960]
[550.94219971 41.22511673]
[565.80944824 39.23423386]
[580.67675781 37.24335098]
[593.32788086 27.74286842]
[606.96948242 33.72248077]
[621.83679199 31.73159981]
[636.70410156 29.74071693]
[623.45562744 22.70660973]
[614.90325928 10.38359547]
[612.94842529 -4.48848152]
[618.02581787 -18.60302544]
[629.00646973 -28.82187080]
[643.44903564 -32.87300110]
[658.14245605 -29.85570908]
[669.81982422 -20.44084358]
[675.88476562 -6.72166538]
[674.98895264 8.25156116]
[667.33154297 21.14975357]
[654.61676025 29.10458183]
[669.58782959 30.03581047]
[684.55889893 30.96703911]
[699.52996826 31.89826775]
[714.50103760 32.82949829]
[729.47210693 33.76072693]
[744.44317627 34.69195557]
[752.86657715 21.84899712]
[766.59014893 14.95271111]
[781.92230225 15.85816669]
[794.73883057 24.32180023]
[801.59204102 38.06693649]
[800.63854980 53.39620209]
[792.13476562 66.18610382]
[778.36822510 72.99621582]
[763.04205322 71.99465942]
[750.27886963 63.45085144]
[743.51190186 49.66302109]
[728.54083252 48.73179245]
[713.56976318 47.80056381]
[698.59869385 46.86933517]
[683.62768555 45.93810654]
[668.65661621 45.00687790]
[653.68554688 44.07564545]
[638.69494629 44.60800934]
[623.82769775 46.59889221]
[608.96038818 48.58977509]
[597.37268066 57.94785690]
[582.66766357 52.11064529]
[567.80035400 54.10152817]
[552.93304443 56.09241104]
[538.06573486 58.08329391]
[523.19848633 60.07417679]
[514.38970947 72.02996826]
[499.34051514 74.26080322]
[486.85989380 64.94028473]
[471.99258423 66.93116760]
[457.12530518 68.92205048]
[442.25802612 70.91293335]
[427.39071655 72.90381622]
[412.52343750 74.89469910]
[397.67437744 77.01744080]
[382.84478760 79.27188110]
[368.01516724 81.52631378]
[353.18554688 83.78075409]
[351.41223145 85.99003601]
[348.64337158 87.61854553]
[345.09991455 88.27841949]
[341.14077759 87.67045593]
[337.22760010 85.63002014]
[322.27542114 86.82680511]
[307.32324219 88.02359772]
[292.37106323 89.22039032]
[277.41888428 90.41718292]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 82]
[2 81]
[3 80]
[4 79]
[7 76]
[8 75]
[9 74]
[10 73]
[12 46]
[13 45]
[15 43]
[16 42]
[17 41]
[18 40]
[24 36]
[25 35]
[26 34]
[27 33]
[28 32]
[55 70]
[56 69]
[57 68]
[58 67]
[85 176]
[86 175]
[87 174]
[88 173]
[89 172]
[90 167]
[91 166]
[92 165]
[93 164]
[95 163]
[96 162]
[97 161]
[98 160]
[99 159]
[100 158]
[103 155]
[104 154]
[105 153]
[106 152]
[107 151]
[109 149]
[110 148]
[111 147]
[123 146]
[124 145]
[125 144]
[126 143]
[127 142]
[128 141]
[129 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
