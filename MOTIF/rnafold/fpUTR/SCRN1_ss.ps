%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:23:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACGUCGGGAAGAGGCGCCAAAAGGAUGCUGGGCCUGGCUCCUUGAAGCCCGGGUUUUCCCUUUUGAGAGCCACAACCAAGAAAUAAAAAUCUAGCAAAGAGGGGGCCACUUUCUGCGGCGAGAUACGCCCUCUCGGCCGCUCCUCCAGCUCCCAGGCCCCCUCCCUACUCGACGG\
) } def
/len { sequence length } bind def

/coor [
[92.98730469 298.58416748]
[78.82135010 291.05386353]
[76.01819611 275.25759888]
[86.72817993 263.31292725]
[87.25755310 248.32226562]
[87.78692627 233.33160400]
[88.31629944 218.34094238]
[88.84566498 203.35029602]
[89.37503815 188.35963440]
[89.90441132 173.36897278]
[82.62109375 160.37657166]
[90.84060669 146.85806274]
[91.36997986 131.86740112]
[79.52497864 129.73838806]
[68.31340027 123.07041168]
[59.49008179 112.12496948]
[48.60643005 122.44709015]
[37.72277832 132.76921082]
[26.93063927 143.18696594]
[16.23085022 153.69955444]
[12.37059879 169.63789368]
[-3.43671632 174.00375366]
[-14.92988396 162.30593872]
[-10.28571796 146.57812500]
[5.71826124 142.99977112]
[16.41804886 132.48718262]
[18.99348450 125.53551483]
[27.40066147 121.88555145]
[38.28431320 111.56343842]
[49.16796494 101.24131775]
[46.40406799 86.49815369]
[32.52068329 80.81910706]
[18.63729668 75.14005280]
[5.46953106 83.13481140]
[-9.70356846 81.85792542]
[-21.08079529 72.00791168]
[-24.43617439 57.52069855]
[-38.31956100 51.84165192]
[-52.20294571 46.16260147]
[-66.08633423 40.48355484]
[-79.96971893 34.80450439]
[-93.85310364 29.12545586]
[-103.01145935 28.76850128]
[-107.92996979 23.22172356]
[-121.71096802 17.29854012]
[-135.49195862 11.37535477]
[-149.27296448 5.45216990]
[-163.05395508 -0.47101492]
[-176.83496094 -6.39419985]
[-182.07806396 -5.76945114]
[-186.57643127 -7.10335445]
[-189.70419312 -9.77723026]
[-191.17536926 -13.01289463]
[-204.62358093 -19.65711594]
[-218.07179260 -26.30133820]
[-234.39270020 -24.70144081]
[-243.71740723 -38.19151306]
[-236.45343018 -52.89412308]
[-220.07333374 -53.68448639]
[-211.42756653 -39.74954605]
[-197.97935486 -33.10532379]
[-184.53114319 -26.46110344]
[-170.91177368 -20.17519760]
[-157.13076782 -14.25201225]
[-143.34977722 -8.32882690]
[-129.56878662 -2.40564251]
[-115.78778076 3.51754236]
[-102.00678253 9.44072723]
[-88.17405701 15.24207020]
[-74.29067230 20.92111778]
[-60.40728378 26.60016632]
[-46.52389526 32.27921677]
[-32.64051056 37.95826340]
[-18.75712585 43.63731384]
[-6.21045923 35.65488434]
[8.80840969 36.60229111]
[20.52656364 46.32537079]
[24.31634712 61.25667191]
[38.19973373 66.93572235]
[52.08311844 72.61476898]
[64.31105804 63.92698669]
[63.51720428 48.94800949]
[62.72335434 33.96903229]
[49.63188171 25.63878441]
[43.96838760 11.19217873]
[47.91059494 -3.81577301]
[59.94264984 -13.61420631]
[75.43798065 -14.43542385]
[88.43831635 -5.96364975]
[93.94475555 8.54354477]
[89.83997345 23.50784683]
[77.70233154 33.17517853]
[78.49618530 48.15415955]
[79.29003906 63.13313675]
[89.88338470 60.30772781]
[100.50314331 60.36628723]
[110.40186310 63.12649918]
[118.92834473 68.22187805]
[125.57044220 75.13901520]
[129.98519897 83.26393127]
[132.01475525 91.93373108]
[147.01240540 91.66900635]
[162.01007080 91.40427399]
[177.00773621 91.13954926]
[192.00540161 90.87482452]
[207.00306702 90.61009979]
[222.00073242 90.34536743]
[236.99839783 90.08064270]
[251.99606323 89.81591797]
[257.51739502 71.38383484]
[268.91421509 55.90758514]
[284.84176636 45.18887329]
[303.42889404 40.46948242]
[322.49789429 42.28742599]
[339.81961060 50.41566849]
[353.37402344 63.89034653]
[361.58587646 81.12505341]
[376.43661499 79.01416016]
[391.28735352 76.90325928]
[406.13806152 74.79236603]
[420.98880005 72.68146515]
[435.82031250 70.43959808]
[450.63146973 68.06694031]
[465.44262695 65.69427490]
[480.25381470 63.32161331]
[488.12829590 49.81137848]
[502.86212158 44.57224655]
[517.49841309 50.07796860]
[525.12634277 63.72891617]
[522.14428711 79.07952881]
[509.96023560 88.88171387]
[494.32714844 88.50717926]
[482.62646484 78.13277435]
[467.81530762 80.50543213]
[453.00415039 82.87809753]
[438.19299316 85.25075531]
[432.06719971 89.42607117]
[423.09970093 87.53219604]
[408.24896240 89.64308929]
[393.39825439 91.75399017]
[378.54751587 93.86488342]
[363.69677734 95.97578430]
[362.69036865 107.06044769]
[359.50225830 117.73131561]
[354.25677490 127.56314087]
[347.16021729 136.16357422]
[338.49282837 143.18882751]
[328.59774780 148.35736084]
[317.86734009 151.46125793]
[306.72772217 152.37446594]
[295.62182617 151.05804443]
[284.99172974 147.56172180]
[275.26110840 142.02206421]
[266.81835938 134.65713501]
[260.00109863 125.75789642]
[255.08255005 115.67676544]
[252.26078796 104.81357574]
[237.26312256 105.07830811]
[222.26545715 105.34303284]
[207.26779175 105.60775757]
[192.27012634 105.87248993]
[177.27246094 106.13721466]
[162.27479553 106.40193939]
[147.27714539 106.66667175]
[132.27947998 106.93139648]
[123.13840485 123.55043030]
[106.36063385 132.39677429]
[105.83126068 147.38743591]
[113.07671356 161.45207214]
[104.89506531 173.89834595]
[104.36569977 188.88900757]
[103.83632660 203.87966919]
[103.30695343 218.87031555]
[102.77758026 233.86097717]
[102.24820709 248.85163879]
[101.71883392 263.84228516]
[111.55957794 276.51269531]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 176]
[5 175]
[6 174]
[7 173]
[8 172]
[9 171]
[10 170]
[12 168]
[13 167]
[16 30]
[17 29]
[18 28]
[19 26]
[20 25]
[31 80]
[32 79]
[33 78]
[37 74]
[38 73]
[39 72]
[40 71]
[41 70]
[42 69]
[44 68]
[45 67]
[46 66]
[47 65]
[48 64]
[49 63]
[53 62]
[54 61]
[55 60]
[81 94]
[82 93]
[83 92]
[101 165]
[102 164]
[103 163]
[104 162]
[105 161]
[106 160]
[107 159]
[108 158]
[109 157]
[117 142]
[118 141]
[119 140]
[120 139]
[121 138]
[122 136]
[123 135]
[124 134]
[125 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
