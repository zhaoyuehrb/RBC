%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:04:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCUCCCUCCCCGCCUGCCAGUGUCACCAGCCUGUUGCCUCUGUGAGAAAGUACCACUGUAAGAGGCCAAAGGGCAUGAUCAUUUUCCUCUUUCACCCUGUCUAGGUUGCCAGCAAAUCCCACGGGCCUCCUGACGCUGCCCCUGGGGCCACAGGUCCCUCGAGUGCUGGAAGG\
) } def
/len { sequence length } bind def

/coor [
[173.88310242 585.42681885]
[167.35722351 599.50494385]
[153.78642273 607.02911377]
[138.38896179 605.10614014]
[127.08546448 594.47552490]
[124.22236633 579.22485352]
[130.90057373 565.21838379]
[144.55220032 557.84191895]
[146.41105652 542.95751953]
[148.26992798 528.07312012]
[142.16949463 514.48510742]
[151.55732727 501.75018311]
[153.41619873 486.86581421]
[147.31575012 473.27780151]
[156.70358276 460.54284668]
[158.56245422 445.65847778]
[160.28915405 430.75817871]
[161.88356018 415.84317017]
[143.97378540 393.55847168]
[145.88351440 367.54946899]
[163.21324158 351.57034302]
[159.26670837 337.09884644]
[155.32017517 322.62731934]
[151.37362671 308.15579224]
[147.42709351 293.68426514]
[143.48056030 279.21276855]
[139.53401184 264.74124146]
[135.58747864 250.26972961]
[120.06906891 244.96058655]
[110.66960144 231.31761169]
[111.24847412 214.59416199]
[121.77557373 201.37402344]
[117.57281494 186.97483826]
[113.37005615 172.57563782]
[109.16728973 158.17643738]
[104.96453094 143.77725220]
[100.76177216 129.37805176]
[78.58426666 120.12502289]
[70.72590637 97.41584778]
[56.61540222 92.32727051]
[42.50489807 87.23868561]
[28.39439392 82.15010071]
[14.28388977 77.06151581]
[0.17338610 71.97293854]
[-12.64555740 80.51581573]
[-27.85900497 79.87986755]
[-39.64145279 70.51835632]
[-43.60472488 56.18550873]
[-57.71522903 51.09692764]
[-69.90125275 60.55759430]
[-85.26963043 61.90539169]
[-98.91636658 54.71023560]
[-106.48683167 41.26807785]
[-105.56531525 25.86826134]
[-96.44588470 13.42481136]
[-82.03850555 7.90838671]
[-66.94052124 11.07925987]
[-55.96964645 21.92561531]
[-52.62664413 36.98642349]
[-38.51613998 42.07500458]
[-26.31722450 33.57062531]
[-11.27176476 33.88389587]
[0.84595644 43.10421371]
[5.26196909 57.86243057]
[19.37247276 62.95101547]
[33.48297882 68.03959656]
[47.59348297 73.12818146]
[61.70398331 78.21676636]
[75.81449127 83.30534363]
[76.64374542 77.77255249]
[78.65699005 72.13838196]
[81.89794922 66.64395905]
[86.36312103 61.54017639]
[85.56478882 46.56143570]
[84.76645660 31.58269501]
[83.96812439 16.60395432]
[80.66318512 10.81953239]
[80.78158569 5.09834433]
[83.41687012 1.08129501]
[83.15064240 -13.91634274]
[82.88442230 -28.91398048]
[68.84794617 -34.82137299]
[58.43247986 -45.93163300]
[53.44255829 -60.31984329]
[54.74271774 -75.49315643]
[62.10770035 -88.82270813]
[74.26147461 -97.99906921]
[89.09833527 -101.43238068]
[104.04769135 -98.52780151]
[116.51948547 -89.78856659]
[124.35290527 -76.72880554]
[126.19075775 -61.61119461]
[121.71463013 -47.05495071]
[111.70003510 -35.58203888]
[97.88205719 -29.18020248]
[98.14828491 -14.18256474]
[98.41450500 0.81507230]
[98.94686890 15.80562210]
[99.74520111 30.78436279]
[100.54353333 45.76310349]
[101.34186554 60.74184418]
[108.17162323 63.84093475]
[109.84561157 48.93463516]
[124.53967285 45.92057037]
[131.94676208 58.96414948]
[121.83114624 70.03911591]
[128.66090393 73.13820648]
[140.45918274 63.87533951]
[152.25746155 54.61247253]
[164.05572510 45.34960175]
[164.38362122 29.71545601]
[174.72306824 17.98388481]
[190.19210815 15.69417763]
[203.48674011 23.92746353]
[208.32962036 38.79623795]
[202.43411255 53.27991867]
[188.58389282 60.53975296]
[173.31860352 57.14787674]
[161.52032471 66.41074371]
[149.72204590 75.67361450]
[137.92378235 84.93648529]
[136.84732056 103.35694122]
[128.12722778 117.62655640]
[115.16096497 125.17529297]
[119.36372375 139.57449341]
[123.56649017 153.97367859]
[127.76924896 168.37287903]
[131.97200012 182.77207947]
[136.17477417 197.17126465]
[149.47583008 200.85365295]
[159.13804626 210.55627441]
[162.70794678 223.66351318]
[159.35435486 236.71591187]
[150.05899048 246.32318115]
[154.00553894 260.79470825]
[157.95207214 275.26623535]
[161.89860535 289.73773193]
[165.84515381 304.20925903]
[169.79168701 318.68078613]
[173.73822021 333.15228271]
[177.68476868 347.62380981]
[188.46112061 347.52648926]
[199.17498779 351.30831909]
[208.41308594 358.88446045]
[214.82565308 369.65350342]
[217.31446838 382.53576660]
[215.20024109 396.07946777]
[226.13113403 406.35156250]
[237.06201172 416.62362671]
[247.99290466 426.89572144]
[258.92379761 437.16781616]
[269.85467529 447.43991089]
[285.53762817 453.88052368]
[283.69018555 470.73348999]
[266.98440552 473.62362671]
[259.58258057 458.37078857]
[248.65168762 448.09869385]
[237.72080994 437.82659912]
[226.78993225 427.55453491]
[215.85903931 417.28244019]
[204.92816162 407.01034546]
[197.89576721 409.61715698]
[195.37850952 424.40441895]
[183.83097839 414.83074951]
[176.79858398 417.43756104]
[175.20417786 432.35256958]
[177.40818787 441.25009155]
[173.44682312 447.51733398]
[171.58796692 462.40170288]
[177.55545044 477.05435181]
[168.30056763 488.72467041]
[166.44169617 503.60903931]
[172.40917969 518.26165771]
[163.15429688 529.93200684]
[161.29544067 544.81640625]
[159.43656921 559.70074463]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 176]
[9 175]
[10 174]
[12 172]
[13 171]
[15 169]
[16 168]
[17 166]
[18 165]
[21 141]
[22 140]
[23 139]
[24 138]
[25 137]
[26 136]
[27 135]
[28 134]
[32 129]
[33 128]
[34 127]
[35 126]
[36 125]
[37 124]
[39 69]
[40 68]
[41 67]
[42 66]
[43 65]
[44 64]
[48 60]
[49 59]
[73 101]
[74 100]
[75 99]
[76 98]
[79 97]
[80 96]
[81 95]
[107 121]
[108 120]
[109 119]
[110 118]
[147 161]
[148 160]
[149 159]
[150 158]
[151 157]
[152 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
