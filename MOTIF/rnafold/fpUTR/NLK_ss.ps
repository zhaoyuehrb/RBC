%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:13:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCCCUUUUUUUUCCUUUUGGCAACCCACACCCUUCCACACACGCUCACCCCAAAAUUAAACACCAAGAUCCUCUAACUUGUUUGGAUUGACUGAUGAAGACAUAAAGCUCUAUGUUUUUUGAGGUGGAGUGAGUGGUUUUUCUUCAUUUUUAAAUGGCCAAAUGACAGCUUGACCCAGUUUGCUUUCCAAUCAAAGGGCAUUUAUUUUGA\
) } def
/len { sequence length } bind def

/coor [
[72.06420135 245.15414429]
[77.85643768 231.14607239]
[88.09268951 219.96595764]
[101.53687286 212.96385193]
[99.55156708 198.09580994]
[97.56626129 183.22776794]
[95.58095551 168.35974121]
[93.59564209 153.49169922]
[91.61033630 138.62365723]
[83.13162994 134.25180054]
[76.23194122 128.14205933]
[71.23270416 120.78750610]
[68.31376648 112.73007965]
[67.50952911 104.52217865]
[68.71513367 96.68951416]
[71.70161438 89.69764709]
[76.13879395 83.92429352]
[81.62386322 79.63912964]
[75.00193787 66.17993164]
[68.38000488 52.72072983]
[61.75808334 39.26153183]
[55.13615799 25.80232811]
[48.51422882 12.34312820]
[41.45650864 17.10210419]
[33.70587158 20.52429390]
[25.51146317 22.51503563]
[17.13401413 23.02542686]
[8.83754539 22.05344200]
[0.88105786 19.64355278]
[-6.48956394 15.88489914]
[-13.04914284 10.90806007]
[-18.60008621 4.88056755]
[-22.97832489 -1.99870872]
[-26.05814743 -9.50610924]
[-27.75577927 -17.40044594]
[-28.03159904 -25.43074417]
[-26.89097023 -33.34422684]
[-24.38361549 -40.89426422]
[-20.60163498 -47.84805679]
[-15.67618275 -53.99382782]
[-9.77296925 -59.14725113]
[-16.78898239 -72.40528870]
[-23.56784821 -78.52544403]
[-23.80906868 -85.91101074]
[-30.62878227 -99.27108002]
[-37.44849396 -112.63114929]
[-44.26820374 -125.99122620]
[-51.08791733 -139.35130310]
[-57.90763092 -152.71136475]
[-64.72734070 -166.07144165]
[-77.89294434 -174.84512329]
[-76.78797913 -189.69868469]
[-83.60768890 -203.05874634]
[-84.02798462 -188.06463623]
[-79.68002319 -173.70861816]
[-80.37862396 -158.72489929]
[-86.04349518 -144.83572388]
[-96.02350616 -133.63754272]
[-109.17153931 -126.41748047]
[-123.97634125 -124.00543213]
[-138.73622131 -126.67864990]
[-151.75465393 -134.12985229]
[-161.53527832 -145.50259399]
[-166.95388794 -159.48968506]
[-167.38768005 -174.48341370]
[-162.78678894 -188.76037598]
[-153.68002319 -200.67956543]
[-141.11512756 -208.87054443]
[-126.67604828 -204.80691528]
[-137.39933777 -215.29554749]
[-148.12260437 -225.78416443]
[-158.84588623 -236.27279663]
[-169.56916809 -246.76141357]
[-183.90148926 -241.51287842]
[-199.09089661 -243.01119995]
[-212.12149048 -250.95890808]
[-220.40606689 -263.77798462]
[-222.29971313 -278.92318726]
[-217.42642212 -293.38739014]
[-206.75381470 -304.29876709]
[-192.40093994 -309.49084473]
[-177.21755981 -307.93270874]
[-164.21835327 -299.93374634]
[-155.98432922 -287.08215332]
[-154.15034485 -271.92962646]
[-159.08055115 -257.48471069]
[-148.35726929 -246.99607849]
[-137.63398743 -236.50744629]
[-126.91070557 -226.01882935]
[-116.18742371 -215.53019714]
[-102.11680603 -220.72998047]
[-88.04743195 -225.92927551]
[-86.72173309 -240.87057495]
[-85.39602661 -255.81187439]
[-96.92292023 -266.03131104]
[-100.18391418 -280.90475464]
[-94.13316345 -294.68347168]
[-81.28301239 -302.16757202]
[-79.95731354 -317.10885620]
[-78.63161469 -332.05017090]
[-77.30590820 -346.99145508]
[-75.98020935 -361.93276978]
[-74.65451050 -376.87408447]
[-73.32880402 -391.81536865]
[-72.00310516 -406.75668335]
[-70.67740631 -421.69796753]
[-81.01223755 -433.65484619]
[-79.78196716 -449.41119385]
[-67.71649170 -459.61901855]
[-51.97405243 -458.22222900]
[-41.89434814 -446.04953003]
[-43.45749283 -430.32272339]
[-55.73609924 -420.37228394]
[-57.06180191 -405.43096924]
[-58.38750458 -390.48968506]
[-59.71320724 -375.54837036]
[-61.03890610 -360.60705566]
[-62.36460876 -345.66577148]
[-63.69031143 -330.72445679]
[-65.01601410 -315.78317261]
[-66.34171295 -300.84185791]
[-55.01002502 -291.21215820]
[-51.47979355 -276.58337402]
[-57.30858994 -262.51644897]
[-70.45472717 -254.48617554]
[-71.78042603 -239.54487610]
[-73.10613251 -224.60357666]
[-70.24761963 -209.87846375]
[-63.42790222 -196.51838684]
[-50.75008774 -188.70031738]
[-51.36726761 -172.89115906]
[-44.54755783 -159.53108215]
[-37.72784424 -146.17100525]
[-30.90813255 -132.81094360]
[-24.08842087 -119.45086670]
[-17.26870918 -106.09078979]
[-10.44899750 -92.73072052]
[-3.53094625 -79.42130280]
[3.48506808 -66.16326904]
[13.82774067 -68.72447205]
[24.60391998 -68.74328613]
[35.19084167 -66.16091156]
[44.96296692 -61.07055283]
[53.32891464 -53.71520996]
[59.76716232 -44.47657394]
[63.85837936 -33.85545349]
[65.31235504 -22.44473839]
[79.97062683 -25.62830353]
[94.62889862 -28.81187057]
[109.28717041 -31.99543571]
[121.05499268 -43.41691971]
[136.75413513 -38.67675018]
[140.23464966 -22.65120506]
[127.91609192 -11.82599449]
[112.47073364 -17.33716583]
[97.81246185 -14.15359879]
[83.15419006 -10.97003365]
[68.49591827 -7.78646708]
[61.97343063 5.72120190]
[68.59535980 19.18040276]
[75.21728516 32.63960266]
[81.83921051 46.09880447]
[88.46113586 59.55800629]
[95.08306122 73.01720428]
[123.63201141 76.29023743]
[138.90708923 106.95787811]
[151.89747620 114.45787811]
[167.71742249 114.65726471]
[174.87091064 127.72159576]
[187.86129761 135.22160339]
[200.85166931 142.72160339]
[213.48849487 140.14326477]
[224.15341187 146.65623474]
[227.41409302 158.30404663]
[240.29243469 165.99482727]
[253.17079163 173.68559265]
[269.86965942 176.61547852]
[271.67697144 193.47282410]
[255.97874451 199.87608337]
[245.48001099 186.56394958]
[232.60166931 178.87316895]
[219.72331238 171.18240356]
[202.18710327 171.86878967]
[193.35166931 155.71197510]
[180.36129761 148.21197510]
[167.37091064 140.71197510]
[152.48011780 141.04904175]
[144.39747620 127.44825745]
[131.40708923 119.94825745]
[125.17491150 124.12078094]
[136.96321106 133.39634705]
[131.78437805 147.47398376]
[116.79541016 146.89881897]
[112.71055603 132.46582031]
[106.47837067 136.63835144]
[108.46368408 151.50639343]
[110.44898987 166.37442017]
[112.43429565 181.24246216]
[114.41960907 196.11050415]
[116.40491486 210.97854614]
[131.21528625 214.20787048]
[144.02633667 222.31050110]
[153.29106140 234.30802917]
[157.89071655 248.75167847]
[157.26983643 263.89730835]
[151.50341797 277.91604614]
[141.28779602 289.11499023]
[127.85652924 296.14187622]
[112.83152771 298.14813232]
[98.02713013 294.89154053]
[85.23103333 286.76528931]
[75.98843384 274.75070190]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 200]
[5 199]
[6 198]
[7 197]
[8 196]
[9 195]
[18 164]
[19 163]
[20 162]
[21 161]
[22 160]
[23 159]
[41 139]
[42 138]
[44 137]
[45 136]
[46 135]
[47 134]
[48 133]
[49 132]
[50 131]
[52 129]
[53 128]
[69 90]
[70 89]
[71 88]
[72 87]
[73 86]
[92 127]
[93 126]
[94 125]
[98 121]
[99 120]
[100 119]
[101 118]
[102 117]
[103 116]
[104 115]
[105 114]
[106 113]
[147 158]
[148 157]
[149 156]
[150 155]
[166 189]
[167 188]
[169 186]
[170 185]
[171 184]
[174 182]
[175 181]
[176 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
