%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:59:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGACAGAAAGUCCGUUGGAACCGUCGGCUGCUCUCUGGUCUCUGGAGAUGAGGCGGGAGGACUUGGGGACAGCUGUGGGGACACGGCCCAGAUGCUCUGGUCCCAGCAGAAGUGACUGGCGGGGACCAGGAUGCUGGAGGGUCAGCUCGAGGCCGGGUAGCCCAAGGAGGGCACCCACCCAGAAGACCCGUGCCCGGGAGCUGGGGCUGCC\
) } def
/len { sequence length } bind def

/coor [
[1.13085151 422.12030029]
[-12.72402096 427.79592896]
[-27.63443375 428.90972900]
[-31.14149284 443.49398804]
[-34.64855194 458.07824707]
[-27.53110123 472.45605469]
[-34.46468353 486.92343140]
[-50.13045120 490.38223267]
[-62.51096344 480.17916870]
[-62.10895157 464.14114380]
[-49.23280716 454.57116699]
[-45.72574997 439.98693848]
[-42.21868896 425.40267944]
[-54.99258041 417.63165283]
[-64.75231171 406.27746582]
[-70.53254700 392.44384766]
[-71.75559998 377.48071289]
[-68.28914642 362.85244751]
[-60.46042633 349.99450684]
[-49.02537537 340.17269897]
[-35.09567261 334.35842896]
[-20.03064537 333.13272095]
[-16.52358627 318.54846191]
[-18.01582527 311.31118774]
[-12.85576057 303.77572632]
[-9.13398457 289.24478149]
[-5.41220856 274.71383667]
[-1.69043219 260.18289185]
[2.03134394 245.65194702]
[5.75311995 231.12100220]
[0.62870133 225.64466858]
[-9.62013626 214.69197083]
[-14.74455452 209.21563721]
[-29.49034500 211.96548462]
[-44.23613739 214.71533203]
[-58.98192596 217.46517944]
[-73.72771454 220.21502686]
[-85.87558746 230.35108948]
[-99.80559540 225.07810974]
[-114.55138397 227.82795715]
[-129.29718018 230.57780457]
[-144.04296875 233.32765198]
[-158.78875732 236.07749939]
[-166.31591797 249.78427124]
[-180.91125488 255.39768982]
[-195.68327332 250.26725769]
[-203.65708923 236.81539917]
[-201.06771851 221.39369202]
[-189.13777161 211.28378296]
[-173.50019836 211.25926208]
[-161.53860474 221.33171082]
[-146.79281616 218.58186340]
[-132.04702759 215.83201599]
[-117.30123138 213.08216858]
[-102.55544281 210.33232117]
[-91.46228790 200.39294434]
[-76.47756195 205.46922302]
[-61.73177338 202.71937561]
[-46.98598099 199.96954346]
[-32.24019241 197.21969604]
[-17.49440193 194.46984863]
[4.78501606 198.08589172]
[16.04987717 211.66340637]
[25.97121429 200.41320801]
[35.89255142 189.16300964]
[45.81388855 177.91279602]
[55.73522568 166.66259766]
[65.65656281 155.41239929]
[68.27159119 140.74914551]
[83.20241547 135.51644897]
[93.12374878 124.26625061]
[74.93231964 110.54045868]
[74.38532257 86.05328369]
[63.97606277 75.25295258]
[53.56680298 64.45261383]
[43.15754318 53.65227509]
[32.74827957 42.85193634]
[22.33901978 32.05160141]
[6.43852615 28.03833008]
[2.22479296 12.18978214]
[14.03254795 0.80958205]
[29.71498489 5.60470438]
[33.13935852 21.64233780]
[43.54861832 32.44267654]
[53.95787811 43.24301529]
[64.36714172 54.04335022]
[74.77639771 64.84368896]
[85.18566132 75.64402771]
[99.60051727 71.49529266]
[102.67589569 56.81394196]
[105.75127411 42.13259125]
[108.82666016 27.45124054]
[98.83940887 17.95271873]
[94.88073730 4.86364460]
[97.88216400 -8.36654186]
[106.95552063 -18.30613708]
[119.65208435 -22.43126488]
[122.94366455 -37.06565857]
[126.23524475 -51.70005417]
[129.52682495 -66.33444977]
[132.81840515 -80.96884155]
[136.10997009 -95.60324097]
[139.40155029 -110.23763275]
[142.69313049 -124.87203217]
[145.98471069 -139.50642395]
[141.46427917 -154.66809082]
[151.80584717 -165.38729858]
[155.09742737 -180.02169800]
[158.28099060 -194.67996216]
[161.35636902 -209.36131287]
[152.50097656 -222.45167542]
[155.57752991 -237.95361328]
[168.76077271 -246.67012024]
[184.22933960 -243.42984009]
[192.80596924 -230.15518188]
[189.40232849 -214.72174072]
[176.03771973 -206.28593445]
[172.96234131 -191.60458374]
[174.66738892 -184.41447449]
[169.73182678 -176.73011780]
[166.44024658 -162.09571838]
[171.19610596 -147.98080444]
[160.61911011 -136.21484375]
[157.32752991 -121.58045197]
[154.03594971 -106.94606018]
[150.74436951 -92.31166077]
[147.45278931 -77.67726898]
[144.16120911 -63.04287338]
[140.86964417 -48.40847778]
[137.57806396 -33.77408218]
[134.28648376 -19.13968658]
[145.51560974 -7.16441917]
[147.41262817 9.30939579]
[139.03302002 23.81138229]
[123.50801086 30.52662086]
[120.43262482 45.20796967]
[117.35724640 59.88932037]
[114.28186798 74.57067108]
[126.48483276 93.83205414]
[120.79564667 114.27146912]
[135.61611938 116.58520508]
[150.43659973 118.89894104]
[165.25708008 121.21266937]
[180.07756042 123.52640533]
[188.47616577 116.61768341]
[199.07223511 115.49393463]
[208.34288025 120.28602600]
[213.33865356 129.19766235]
[228.08444214 131.94750977]
[241.02610779 123.27854156]
[255.94126892 126.27733612]
[264.12603760 138.66867065]
[278.87182617 141.41851807]
[289.93051147 134.78204346]
[302.15490723 137.37493896]
[309.10574341 147.27391052]
[323.80935669 150.24093628]
[338.51300049 153.20796204]
[353.21664429 156.17498779]
[362.24615479 154.80496216]
[368.11453247 159.29573059]
[382.77279663 162.47929382]
[397.43106079 165.66287231]
[412.08932495 168.84643555]
[426.30618286 161.41265869]
[440.92340088 168.02449036]
[444.72790527 183.60990906]
[434.80123901 196.21310425]
[418.75823975 196.16598511]
[408.90576172 183.50469971]
[394.24749756 180.32113647]
[379.58923340 177.13757324]
[364.93093872 173.95401001]
[350.24960327 170.87863159]
[335.54595947 167.91159058]
[320.84234619 164.94456482]
[306.13870239 161.97753906]
[289.83029175 168.46023560]
[276.12197876 156.16430664]
[261.37619019 153.41445923]
[249.27532959 162.02285767]
[234.28181458 159.44416809]
[225.33459473 146.69329834]
[210.58880615 143.94345093]
[192.87266541 151.69325256]
[177.76382446 138.34687805]
[162.94334412 136.03315735]
[148.12286377 133.71942139]
[133.30238342 131.40568542]
[118.48191071 129.09194946]
[104.37395477 134.18759155]
[94.45261383 145.43778992]
[91.12795258 160.90573120]
[76.90676880 165.33372498]
[66.98542786 176.58393860]
[57.06409073 187.83413696]
[47.14275360 199.08433533]
[37.22141647 210.33454895]
[27.30007935 221.58474731]
[20.28406525 234.84278870]
[16.56229019 249.37373352]
[12.84051323 263.90466309]
[9.11873722 278.43560791]
[5.39696121 292.96655273]
[1.67518508 307.49749756]
[-1.93933046 322.05551147]
[-5.44638872 336.63977051]
[7.41433096 344.58074951]
[17.17767334 356.09246826]
[22.89708328 370.03939819]
[24.02408028 385.05090332]
[20.46084595 399.65588379]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 13]
[4 12]
[5 11]
[22 207]
[23 206]
[25 205]
[26 204]
[27 203]
[28 202]
[29 201]
[30 200]
[33 61]
[34 60]
[35 59]
[36 58]
[37 57]
[39 55]
[40 54]
[41 53]
[42 52]
[43 51]
[63 199]
[64 198]
[65 197]
[66 196]
[67 195]
[68 194]
[70 192]
[71 191]
[73 88]
[74 87]
[75 86]
[76 85]
[77 84]
[78 83]
[89 138]
[90 137]
[91 136]
[92 135]
[97 131]
[98 130]
[99 129]
[100 128]
[101 127]
[102 126]
[103 125]
[104 124]
[105 123]
[107 121]
[108 120]
[109 118]
[110 117]
[140 190]
[141 189]
[142 188]
[143 187]
[144 186]
[148 184]
[149 183]
[152 180]
[153 179]
[156 177]
[157 176]
[158 175]
[159 174]
[161 173]
[162 172]
[163 171]
[164 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
