%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:23:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGGCGGCGGCGGCAGCCGCGGCGACGGCGGUCCGGUGCGAGGCAGAGUGCUAGCGGGAGCGCGAGCCAGCAAGAGGCGCCUGCGCGAUGUCCGGGCCCCUGAGCCCGCGGCGCUGAGCCAGCCGGGACGGACAUGCGCGGGAGGGCGCCGCGGGGCAGCCGCCGCUCCUCCGGGGGAAUGAAAGCUACUGGUUGAUUUUAAAGUGCCUGGGCCUCACAGGUUUGGAGAUGUCCCAGAAUAAGGCACA\
) } def
/len { sequence length } bind def

/coor [
[353.12103271 307.66674805]
[353.52432251 301.12915039]
[355.25759888 295.32989502]
[358.05905151 290.51623535]
[361.62481689 286.86395264]
[349.16589355 278.51080322]
[336.70693970 270.15768433]
[324.24801636 261.80453491]
[311.78906250 253.45140076]
[299.33013916 245.09826660]
[286.87118530 236.74513245]
[274.41226196 228.39199829]
[259.53231812 227.73106384]
[252.37867737 213.61952209]
[239.91973877 205.26638794]
[228.01165771 207.30094910]
[217.56883240 200.46537781]
[214.47566223 187.96067810]
[202.12268066 179.45164490]
[189.76968384 170.94261169]
[177.41670227 162.43357849]
[165.06370544 153.92454529]
[152.71072388 145.41551208]
[140.35772705 136.90647888]
[128.00474548 128.39744568]
[113.26117706 137.61410522]
[95.99723816 139.68196106]
[79.49404907 134.20799255]
[66.88816071 122.23255157]
[53.08468246 128.10316467]
[39.28120422 133.97375488]
[29.61002159 146.49490356]
[14.86980438 144.35591125]
[1.06632710 150.22651672]
[-12.73715019 156.09712219]
[-16.98445892 161.11039734]
[-22.32206535 162.96673584]
[-26.96204567 161.93696594]
[-40.90869141 167.45884705]
[-54.85533905 172.98071289]
[-60.67414856 184.47315979]
[-72.38397980 188.79260254]
[-83.53243256 184.13922119]
[-97.54736328 189.48539734]
[-111.56230164 194.83157349]
[-125.57723236 200.17774963]
[-138.22120667 211.47227478]
[-152.57453918 202.44906616]
[-147.87736511 186.15879822]
[-130.92341614 186.16281128]
[-116.90847778 180.81663513]
[-102.89354706 175.47045898]
[-88.87860870 170.12428284]
[-78.53986359 155.93078613]
[-60.37720871 159.03405762]
[-46.43056107 153.51219177]
[-32.48391342 147.99032593]
[-18.60775566 142.29364014]
[-4.80427790 136.42303467]
[8.99919987 130.55242920]
[17.68306541 118.45119476]
[33.41059875 120.17028809]
[47.21407700 114.29968262]
[61.01755524 108.42907715]
[60.38961411 104.65807343]
[60.12560272 100.84428406]
[60.22794724 97.02272797]
[45.74722290 93.11010742]
[31.26649666 89.19748688]
[18.54250717 98.28781128]
[2.95631719 97.02105713]
[-8.13275146 85.99533081]
[-9.48878002 70.41665649]
[-0.47149169 57.64079666]
[14.66142464 53.70013046]
[28.76466942 60.45531464]
[35.17911911 74.71675873]
[49.65984344 78.62937927]
[64.14057159 82.54200745]
[70.92630005 72.69797516]
[80.32482147 65.30752563]
[75.51066589 51.10105133]
[70.69651031 36.89457703]
[65.88236237 22.68810272]
[61.06820679 8.48162746]
[56.25405121 -5.72484684]
[51.43989563 -19.93132210]
[45.73598862 -27.03270912]
[46.65572739 -34.34666443]
[42.02046967 -48.61251068]
[37.38521576 -62.87835693]
[32.74996185 -77.14420319]
[28.11470604 -91.41005707]
[23.47945213 -105.67590332]
[18.84419632 -119.94174957]
[7.73979235 -126.47068787]
[4.16414213 -138.42863464]
[9.50835514 -149.26289368]
[5.05273151 -163.58587646]
[0.59710801 -177.90884399]
[-8.38558102 -178.46899414]
[-16.99680901 -182.85401917]
[-23.59298706 -190.80140686]
[-26.70608521 -201.34547424]
[-25.33983803 -212.92605591]
[-31.21044350 -226.72953796]
[-37.08104706 -240.53300476]
[-48.84410095 -252.74230957]
[-40.36828613 -267.42553711]
[-23.91255569 -263.34567261]
[-23.27757072 -246.40361023]
[-17.40696526 -232.60014343]
[-11.53635979 -218.79666138]
[2.89405513 -222.89094543]
[0.64067131 -237.72071838]
[-1.61271250 -252.55049133]
[-3.86609626 -267.38027954]
[-12.22326374 -282.13134766]
[-0.36216429 -294.24542236]
[14.56196117 -286.20135498]
[10.96368027 -269.63366699]
[13.21706390 -254.80387878]
[15.47044754 -239.97410583]
[17.72383118 -225.14431763]
[27.62266541 -200.77984619]
[14.92007637 -182.36445618]
[19.37570000 -168.04148865]
[23.83132362 -153.71852112]
[37.34762955 -142.50895691]
[33.11004257 -124.57700348]
[37.74530029 -110.31115723]
[42.38055420 -96.04531097]
[47.01580811 -81.77945709]
[51.65106583 -67.51361084]
[56.28631973 -53.24776459]
[60.92157364 -38.98191833]
[65.64636993 -24.74547577]
[70.46052551 -10.53900051]
[75.27468109 3.66747379]
[80.08883667 17.87394905]
[84.90298462 32.08042145]
[89.71714020 46.28689575]
[94.53129578 60.49337387]
[111.28699493 61.74710083]
[126.03939056 69.79022980]
[136.17013550 83.19519806]
[139.88114929 99.58280182]
[136.51377869 116.04445648]
[148.86676025 124.55348969]
[161.21975708 133.06253052]
[173.57273865 141.57156372]
[185.92573547 150.08059692]
[198.27871704 158.58963013]
[210.63171387 167.09866333]
[222.98469543 175.60769653]
[241.38066101 176.65682983]
[248.27287292 192.80744934]
[260.73181152 201.16058350]
[276.50289917 202.41899109]
[282.76538086 215.93305969]
[295.22433472 224.28619385]
[307.68325806 232.63932800]
[320.14221191 240.99246216]
[332.60113525 249.34559631]
[345.06008911 257.69873047]
[357.51901245 266.05187988]
[369.97796631 274.40499878]
[384.57443237 277.86083984]
[399.45614624 275.98083496]
[409.13604736 263.77685547]
[424.25500488 262.08227539]
[435.82998657 271.38577271]
[450.71173096 269.50576782]
[465.59344482 267.62576294]
[480.47515869 265.74575806]
[493.19677734 256.33984375]
[506.79342651 262.42098999]
[521.67517090 260.54098511]
[529.03228760 246.87892151]
[543.02923584 240.18081665]
[558.28393555 243.02226257]
[568.93060303 254.31065369]
[570.87542725 269.70538330]
[563.37054443 283.28683472]
[549.30175781 289.83270264]
[534.07873535 286.82592773]
[523.55517578 275.42272949]
[508.67343140 277.30270386]
[497.01626587 286.57415771]
[482.35516357 280.62750244]
[467.47344971 282.50747681]
[452.59170532 284.38748169]
[437.70999146 286.26748657]
[428.81234741 298.15728760]
[413.74694824 300.27587891]
[401.33615112 290.86257935]
[386.45443726 292.74255371]
[383.34661865 299.56835938]
[397.30789185 305.05319214]
[412.11862183 307.42843628]
[414.88912964 322.17034912]
[401.95123291 329.76049805]
[390.43469238 320.14898682]
[377.13098145 313.21994019]
[374.02316284 320.04574585]
[382.37631226 332.50469971]
[390.72943115 344.96362305]
[399.08258057 357.42257690]
[407.43569946 369.88150024]
[415.78884888 382.34045410]
[424.68170166 394.42004395]
[434.09707642 406.09698486]
[443.51242065 417.77392578]
[452.92779541 429.45086670]
[462.48916626 441.00854492]
[472.19500732 452.44519043]
[481.90084839 463.88183594]
[489.81838989 468.38479614]
[491.65570068 475.52371216]
[501.21704102 487.08142090]
[516.76794434 492.28744507]
[519.76922607 508.40960693]
[507.13345337 518.86279297]
[491.85922241 512.89367676]
[489.65936279 496.64276123]
[480.09799194 485.08508301]
[470.46420288 473.58767700]
[460.75836182 462.15103149]
[451.05252075 450.71438599]
[446.47399902 449.43890381]
[442.63845825 445.28863525]
[441.25088501 438.86624146]
[431.83551025 427.18930054]
[422.42013550 415.51235962]
[413.00476074 403.83541870]
[411.68218994 418.77700806]
[401.14010620 429.44775391]
[386.21566772 430.95147705]
[373.75680542 422.59820557]
[369.48019409 408.22079468]
[375.34805298 394.41613770]
[388.66802979 387.51843262]
[403.32989502 390.69357300]
[394.97677612 378.23464966]
[386.62362671 365.77569580]
[378.27050781 353.31677246]
[369.91735840 340.85781860]
[361.56423950 328.39889526]
[357.04898071 321.67419434]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 167]
[6 166]
[7 165]
[8 164]
[9 163]
[10 162]
[11 161]
[12 160]
[14 158]
[15 157]
[18 155]
[19 154]
[20 153]
[21 152]
[22 151]
[23 150]
[24 149]
[25 148]
[29 64]
[30 63]
[31 62]
[33 60]
[34 59]
[35 58]
[38 57]
[39 56]
[40 55]
[43 53]
[44 52]
[45 51]
[46 50]
[67 79]
[68 78]
[69 77]
[81 143]
[82 142]
[83 141]
[84 140]
[85 139]
[86 138]
[87 137]
[89 136]
[90 135]
[91 134]
[92 133]
[93 132]
[94 131]
[95 130]
[98 128]
[99 127]
[100 126]
[105 113]
[106 112]
[107 111]
[114 124]
[115 123]
[116 122]
[117 121]
[168 197]
[169 196]
[172 193]
[173 192]
[174 191]
[175 190]
[177 188]
[178 187]
[205 248]
[206 247]
[207 246]
[208 245]
[209 244]
[210 243]
[211 235]
[212 234]
[213 233]
[214 232]
[215 229]
[216 228]
[217 227]
[219 226]
[220 225]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
