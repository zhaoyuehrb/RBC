%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:58:35 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (AKR1C3)
} def

/sequence { (\
GCCCAUUGUUUUUGUAAUCUCUGAGGAGAAGCAGCAGCAAACAUUUGCUAGUCAGACAAGUGACAGGGA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 32 0.003318858 ubox
1 35 0.023891680 ubox
1 38 0.014882957 ubox
1 48 0.035954099 ubox
2 31 0.003316418 ubox
2 34 0.023790500 ubox
2 37 0.014860224 ubox
2 47 0.036165165 ubox
2 67 0.050539093 ubox
2 68 0.973285272 ubox
3 66 0.050469196 ubox
3 67 0.976431296 ubox
3 68 0.141750540 ubox
4 14 0.005932118 ubox
4 47 0.015612505 ubox
4 62 0.018901769 ubox
4 66 0.974778033 ubox
4 67 0.141949575 ubox
5 13 0.012173025 ubox
5 15 0.018853469 ubox
5 18 0.028030108 ubox
5 44 0.020747989 ubox
5 46 0.017876726 ubox
5 61 0.023242075 ubox
6 14 0.019348185 ubox
6 17 0.037873516 ubox
6 30 0.017494264 ubox
6 34 0.322405259 ubox
6 37 0.026033998 ubox
6 40 0.544952720 ubox
6 41 0.030428137 ubox
6 43 0.016163975 ubox
6 59 0.023007579 ubox
6 60 0.019124661 ubox
6 63 0.011951802 ubox
6 66 0.109134038 ubox
7 14 0.007993339 ubox
7 16 0.041343704 ubox
7 26 0.003284756 ubox
7 29 0.019435947 ubox
7 33 0.425136603 ubox
7 36 0.145639008 ubox
7 39 0.626621099 ubox
7 40 0.025798075 ubox
7 43 0.097718658 ubox
7 58 0.027585489 ubox
7 59 0.013639944 ubox
7 62 0.007587477 ubox
7 65 0.251871850 ubox
8 13 0.014067668 ubox
8 15 0.038306902 ubox
8 18 0.017882335 ubox
8 32 0.442772919 ubox
8 35 0.238354382 ubox
8 38 0.640078614 ubox
8 42 0.108145995 ubox
8 48 0.007332865 ubox
8 57 0.030769068 ubox
8 61 0.004968356 ubox
8 64 0.266994634 ubox
9 14 0.020843479 ubox
9 17 0.022580542 ubox
9 24 0.003281830 ubox
9 27 0.020125871 ubox
9 28 0.005075098 ubox
9 29 0.006711398 ubox
9 30 0.017653536 ubox
9 31 0.441861652 ubox
9 34 0.228151651 ubox
9 37 0.638961983 ubox
9 40 0.006076691 ubox
9 41 0.108081755 ubox
9 47 0.007292359 ubox
9 56 0.030658209 ubox
9 63 0.265973998 ubox
9 69 0.007746207 ubox
10 16 0.023965859 ubox
10 17 0.018843315 ubox
10 23 0.003243822 ubox
10 26 0.020340204 ubox
10 27 0.008412267 ubox
10 28 0.009498058 ubox
10 29 0.024070564 ubox
10 30 0.438866049 ubox
10 31 0.017634721 ubox
10 33 0.105850949 ubox
10 34 0.019073399 ubox
10 36 0.621278963 ubox
10 37 0.018439130 ubox
10 39 0.007658310 ubox
10 40 0.107593135 ubox
10 55 0.030017634 ubox
10 60 0.006146752 ubox
10 62 0.248588361 ubox
10 63 0.005528488 ubox
10 65 0.004803711 ubox
10 68 0.009307429 ubox
11 16 0.021020977 ubox
11 17 0.008736660 ubox
11 24 0.003202276 ubox
11 25 0.020453636 ubox
11 26 0.009131289 ubox
11 27 0.012052537 ubox
11 28 0.029039137 ubox
11 29 0.411380521 ubox
11 30 0.024882562 ubox
11 31 0.022004630 ubox
11 33 0.011033573 ubox
11 34 0.034536141 ubox
11 36 0.031511742 ubox
11 37 0.003665045 ubox
11 39 0.105533681 ubox
11 40 0.003617503 ubox
11 41 0.008423470 ubox
11 54 0.024910240 ubox
11 56 0.011118703 ubox
11 59 0.008685085 ubox
11 60 0.207816363 ubox
11 62 0.006536248 ubox
11 65 0.003256786 ubox
11 67 0.009860212 ubox
12 16 0.008435506 ubox
12 23 0.003301068 ubox
12 24 0.020698217 ubox
12 25 0.010229582 ubox
12 26 0.012945407 ubox
12 27 0.032393805 ubox
12 28 0.404313829 ubox
12 29 0.025943691 ubox
12 30 0.024153598 ubox
12 31 0.043738830 ubox
12 33 0.031066931 ubox
12 34 0.702817426 ubox
12 36 0.006545568 ubox
12 37 0.099879175 ubox
12 40 0.010200957 ubox
12 55 0.011296240 ubox
12 58 0.007153144 ubox
12 59 0.255557355 ubox
12 60 0.032849389 ubox
12 66 0.010161883 ubox
13 23 0.020564421 ubox
13 24 0.012816871 ubox
13 25 0.015044511 ubox
13 26 0.033556469 ubox
13 27 0.378062301 ubox
13 28 0.028207033 ubox
13 29 0.014406823 ubox
13 30 0.045992327 ubox
13 33 0.812486979 ubox
13 36 0.114163144 ubox
13 39 0.010929755 ubox
13 43 0.007736211 ubox
13 54 0.011498117 ubox
13 58 0.259650843 ubox
13 59 0.026858084 ubox
13 65 0.013088635 ubox
14 22 0.016043951 ubox
14 32 0.829458135 ubox
14 35 0.129912782 ubox
14 38 0.011131633 ubox
14 42 0.007968410 ubox
14 48 0.003453486 ubox
14 53 0.011433317 ubox
14 57 0.260776218 ubox
14 64 0.013056251 ubox
15 23 0.044552267 ubox
15 31 0.815797095 ubox
15 34 0.127700250 ubox
15 37 0.010567558 ubox
15 41 0.007742783 ubox
15 47 0.003454675 ubox
15 56 0.236912706 ubox
15 63 0.012391944 ubox
16 22 0.046447065 ubox
16 46 0.003394517 ubox
16 61 0.004146479 ubox
17 52 0.007076733 ubox
17 61 0.008412279 ubox
18 24 0.231654728 ubox
18 26 0.089802354 ubox
18 27 0.174988405 ubox
18 29 0.862890785 ubox
18 51 0.005889153 ubox
18 56 0.012975213 ubox
18 60 0.008449146 ubox
18 69 0.006658700 ubox
19 23 0.230579115 ubox
19 25 0.092372515 ubox
19 26 0.180328387 ubox
19 28 0.885786634 ubox
19 31 0.034440405 ubox
19 34 0.008846023 ubox
19 37 0.007733983 ubox
19 51 0.016994633 ubox
19 55 0.016452578 ubox
19 68 0.007706098 ubox
20 24 0.083428701 ubox
20 25 0.165778035 ubox
20 26 0.016971129 ubox
20 27 0.885730075 ubox
20 29 0.104564642 ubox
20 30 0.024903584 ubox
20 33 0.008885037 ubox
20 36 0.008413571 ubox
20 50 0.014654987 ubox
20 54 0.014722635 ubox
20 56 0.095649826 ubox
20 67 0.007700086 ubox
21 25 0.033718908 ubox
21 26 0.882273856 ubox
21 28 0.111652375 ubox
21 31 0.011513575 ubox
21 34 0.033469915 ubox
21 51 0.012037836 ubox
21 55 0.124199862 ubox
21 66 0.007690477 ubox
22 27 0.110667027 ubox
22 30 0.011575122 ubox
22 33 0.034417253 ubox
22 50 0.011870711 ubox
22 54 0.124226250 ubox
22 65 0.007588344 ubox
23 32 0.034592984 ubox
23 49 0.007177654 ubox
23 53 0.123772487 ubox
23 64 0.006748569 ubox
24 49 0.007365333 ubox
24 52 0.117222395 ubox
25 46 0.003391551 ubox
25 48 0.009456972 ubox
25 49 0.007825041 ubox
26 45 0.003497356 ubox
26 48 0.008146995 ubox
26 53 0.026751720 ubox
27 44 0.003505677 ubox
27 46 0.009528293 ubox
27 49 0.020247431 ubox
27 52 0.028133076 ubox
28 45 0.009469281 ubox
28 46 0.008356479 ubox
28 48 0.016844387 ubox
28 53 0.006155014 ubox
29 44 0.009068280 ubox
29 45 0.009549707 ubox
29 46 0.008582841 ubox
29 52 0.005751348 ubox
30 44 0.009525968 ubox
30 45 0.008428375 ubox
30 46 0.004451108 ubox
30 49 0.105394912 ubox
31 38 0.037333935 ubox
31 44 0.004596378 ubox
31 45 0.003479429 ubox
31 48 0.108984249 ubox
31 52 0.096780416 ubox
32 37 0.037338046 ubox
32 47 0.109070512 ubox
32 51 0.102152842 ubox
33 45 0.005045437 ubox
33 46 0.106870384 ubox
33 49 0.130453305 ubox
34 44 0.005815076 ubox
34 45 0.088340619 ubox
34 48 0.145114065 ubox
34 52 0.174834238 ubox
35 47 0.145260748 ubox
35 51 0.184508954 ubox
36 45 0.016301370 ubox
36 46 0.142628530 ubox
36 49 0.686532771 ubox
37 44 0.018967389 ubox
37 45 0.123695477 ubox
37 48 0.735253154 ubox
38 47 0.735594690 ubox
39 45 0.022344526 ubox
39 46 0.722392555 ubox
40 44 0.024030556 ubox
40 45 0.628603987 ubox
40 46 0.023167478 ubox
41 45 0.024177469 ubox
41 52 0.006840431 ubox
41 61 0.008244640 ubox
42 51 0.007891547 ubox
42 60 0.008406410 ubox
42 62 0.553085835 ubox
43 52 0.003331098 ubox
43 61 0.555516389 ubox
44 51 0.003775498 ubox
44 56 0.007028899 ubox
44 60 0.555306130 ubox
44 69 0.011682988 ubox
45 50 0.021285257 ubox
45 55 0.008326155 ubox
45 59 0.554829458 ubox
45 63 0.032131253 ubox
45 65 0.003757234 ubox
45 68 0.012512847 ubox
45 69 0.091167484 ubox
46 50 0.007960800 ubox
46 54 0.008858706 ubox
46 58 0.555700157 ubox
46 62 0.035038680 ubox
46 65 0.007204284 ubox
46 67 0.010038602 ubox
46 68 0.108963003 ubox
47 53 0.008914553 ubox
47 57 0.555794243 ubox
47 61 0.038444609 ubox
47 64 0.005451777 ubox
48 55 0.541078474 ubox
48 60 0.038746421 ubox
48 66 0.122405819 ubox
48 67 0.030701440 ubox
48 68 0.032361915 ubox
49 54 0.506295064 ubox
49 59 0.037986503 ubox
49 65 0.129937856 ubox
49 66 0.028474407 ubox
49 67 0.032519200 ubox
51 57 0.038042839 ubox
51 64 0.783277170 ubox
52 56 0.034449417 ubox
52 63 0.784562185 ubox
53 62 0.785345482 ubox
54 61 0.765018885 ubox
2 68 0.9500000 lbox
3 67 0.9500000 lbox
4 66 0.9500000 lbox
6 40 0.9500000 lbox
7 39 0.9500000 lbox
8 38 0.9500000 lbox
9 37 0.9500000 lbox
10 36 0.9500000 lbox
12 34 0.9500000 lbox
13 33 0.9500000 lbox
14 32 0.9500000 lbox
15 31 0.9500000 lbox
18 29 0.9500000 lbox
19 28 0.9500000 lbox
20 27 0.9500000 lbox
21 26 0.9500000 lbox
42 62 0.9500000 lbox
43 61 0.9500000 lbox
44 60 0.9500000 lbox
45 59 0.9500000 lbox
46 58 0.9500000 lbox
47 57 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
