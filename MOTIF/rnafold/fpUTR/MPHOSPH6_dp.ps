%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:17:08 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MPHOSPH6)
} def

/sequence { (\
AUGUGCGGUGAGGCUCGCGGCCGGAGUGCGGCGCUGGGCGGAAGCUACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.017998633 ubox
2 8 0.018656792 ubox
2 17 0.007401005 ubox
2 19 0.006490876 ubox
2 23 0.003704509 ubox
2 33 0.003867693 ubox
2 36 0.004441794 ubox
2 40 0.032030790 ubox
2 47 0.056334311 ubox
3 9 0.003237591 ubox
3 14 0.004007908 ubox
3 16 0.031873939 ubox
3 18 0.009142419 ubox
3 22 0.008818439 ubox
3 32 0.006034566 ubox
3 34 0.058219111 ubox
3 35 0.004095435 ubox
3 39 0.048887115 ubox
3 45 0.021101209 ubox
3 46 0.060329761 ubox
3 48 0.327080825 ubox
4 10 0.003674478 ubox
4 13 0.004007864 ubox
4 17 0.009057177 ubox
4 19 0.042006467 ubox
4 30 0.005812622 ubox
4 31 0.004271950 ubox
4 33 0.058262636 ubox
4 38 0.048828406 ubox
4 44 0.020984240 ubox
4 47 0.320910036 ubox
5 14 0.041405034 ubox
5 16 0.008120298 ubox
5 18 0.055666794 ubox
5 21 0.011324255 ubox
5 29 0.008231854 ubox
5 32 0.058286265 ubox
5 34 0.028854568 ubox
5 39 0.003289841 ubox
5 45 0.348057248 ubox
5 46 0.116618384 ubox
6 13 0.041496555 ubox
6 17 0.055705429 ubox
6 20 0.011392418 ubox
6 28 0.008246058 ubox
6 31 0.058193179 ubox
6 33 0.028904281 ubox
6 36 0.050423730 ubox
6 38 0.003276793 ubox
6 40 0.003364390 ubox
6 44 0.351743800 ubox
7 15 0.009893876 ubox
7 16 0.055447891 ubox
7 27 0.008090627 ubox
7 29 0.004051290 ubox
7 32 0.028599135 ubox
7 35 0.050417997 ubox
7 46 0.406624841 ubox
7 49 0.786236338 ubox
8 14 0.032753591 ubox
8 15 0.037177361 ubox
8 18 0.014397729 ubox
8 29 0.057758229 ubox
8 34 0.050419849 ubox
8 39 0.004194088 ubox
8 45 0.437732226 ubox
8 48 0.791949514 ubox
9 13 0.030646441 ubox
9 17 0.014547047 ubox
9 26 0.003448062 ubox
9 28 0.057072569 ubox
9 30 0.028278351 ubox
9 33 0.050296436 ubox
9 38 0.004197539 ubox
9 40 0.022294588 ubox
9 44 0.436525383 ubox
9 47 0.766812591 ubox
10 16 0.014940770 ubox
10 27 0.016821062 ubox
10 29 0.028300454 ubox
10 32 0.045971880 ubox
10 39 0.007713524 ubox
10 46 0.409287322 ubox
11 15 0.013003539 ubox
11 35 0.003223731 ubox
11 46 0.153858691 ubox
12 22 0.046568617 ubox
12 34 0.003261109 ubox
12 35 0.005612858 ubox
12 45 0.164059412 ubox
12 46 0.647855014 ubox
13 21 0.046623409 ubox
13 27 0.061108128 ubox
13 29 0.014977748 ubox
13 32 0.019740790 ubox
13 34 0.005769630 ubox
13 39 0.601587865 ubox
13 45 0.778175101 ubox
14 20 0.046611944 ubox
14 26 0.061708677 ubox
14 28 0.014281931 ubox
14 31 0.020436968 ubox
14 33 0.005744767 ubox
14 37 0.014278519 ubox
14 38 0.601738446 ubox
14 44 0.785457307 ubox
15 19 0.041992217 ubox
15 24 0.007510489 ubox
15 25 0.062048057 ubox
15 30 0.005036958 ubox
15 31 0.014470436 ubox
15 36 0.016451282 ubox
15 37 0.601201110 ubox
15 41 0.015526958 ubox
15 42 0.185432620 ubox
15 43 0.766027306 ubox
16 23 0.010623065 ubox
16 24 0.061674194 ubox
16 28 0.004772222 ubox
16 30 0.024756645 ubox
16 33 0.005560338 ubox
16 36 0.600271723 ubox
16 37 0.007725108 ubox
16 40 0.029842268 ubox
16 41 0.245940910 ubox
17 22 0.012229448 ubox
17 27 0.008752077 ubox
17 29 0.024997797 ubox
17 32 0.006817580 ubox
17 34 0.480911516 ubox
17 35 0.351965207 ubox
17 39 0.030931624 ubox
18 26 0.009016005 ubox
18 28 0.024981507 ubox
18 31 0.006840413 ubox
18 33 0.491074378 ubox
18 36 0.003836961 ubox
18 38 0.030700225 ubox
18 40 0.789781526 ubox
19 27 0.022298572 ubox
19 32 0.347328246 ubox
19 35 0.006663229 ubox
19 39 0.789561803 ubox
20 27 0.009237017 ubox
20 29 0.007588365 ubox
20 32 0.497513025 ubox
20 34 0.004766811 ubox
20 39 0.030026494 ubox
21 26 0.012981413 ubox
21 28 0.007551968 ubox
21 31 0.606728603 ubox
21 33 0.003546732 ubox
21 37 0.789233312 ubox
21 38 0.039657467 ubox
22 30 0.606875600 ubox
22 36 0.789305961 ubox
22 37 0.039170062 ubox
23 29 0.605675717 ubox
23 32 0.004309292 ubox
23 35 0.784712063 ubox
23 49 0.009689434 ubox
24 34 0.782757487 ubox
24 48 0.009787389 ubox
25 35 0.081034353 ubox
25 46 0.010017301 ubox
26 32 0.764711302 ubox
26 34 0.095440573 ubox
26 45 0.010079909 ubox
26 48 0.003345802 ubox
27 31 0.716407566 ubox
27 33 0.099696038 ubox
27 44 0.010037338 ubox
27 47 0.003305549 ubox
28 32 0.097067628 ubox
28 34 0.014382918 ubox
28 45 0.004758923 ubox
29 33 0.015914809 ubox
29 44 0.004806264 ubox
31 39 0.006511506 ubox
32 38 0.006543335 ubox
32 40 0.009506189 ubox
33 39 0.010981048 ubox
33 45 0.032509089 ubox
34 38 0.010950391 ubox
34 44 0.032549324 ubox
35 43 0.032427032 ubox
35 47 0.012221111 ubox
36 46 0.011644614 ubox
36 49 0.015686192 ubox
37 45 0.009479259 ubox
37 46 0.085668071 ubox
37 48 0.015385632 ubox
37 49 0.004045475 ubox
38 45 0.090172410 ubox
38 48 0.004028385 ubox
39 44 0.090447589 ubox
40 46 0.010120772 ubox
40 49 0.049478670 ubox
41 45 0.011147088 ubox
41 48 0.049702362 ubox
7 49 0.9500000 lbox
8 48 0.9500000 lbox
9 47 0.9500000 lbox
12 46 0.9500000 lbox
13 45 0.9500000 lbox
14 44 0.9500000 lbox
15 43 0.9500000 lbox
18 40 0.9500000 lbox
19 39 0.9500000 lbox
21 37 0.9500000 lbox
22 36 0.9500000 lbox
23 35 0.9500000 lbox
24 34 0.9500000 lbox
26 32 0.9500000 lbox
27 31 0.9500000 lbox
showpage
end
%%EOF
