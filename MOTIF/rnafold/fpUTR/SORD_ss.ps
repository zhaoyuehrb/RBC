%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:24:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCACGCUAGCGCCGCCCAGGCUGGCACAAAGGAGGAAGCCUAGUCCCGCCCCUGCGUGCGGCGCUUCUCCCAGGCCCCACCUUCCAUCCAGUGCCCUGGACCCUCGGCUGGGUAGCGCCACCAGAGCGACCAAACGUCCCGCGCCUUCCAGGCCGCACUCCAGAGCCAAAAGAGCUCC\
) } def
/len { sequence length } bind def

/coor [
[98.86299133 162.32295227]
[96.78660583 177.17854309]
[81.93104553 175.10191345]
[84.00736237 160.24681091]
[86.08349609 145.39118958]
[88.15963745 130.53556824]
[80.73182678 129.49749756]
[72.38474274 141.96049500]
[64.03766632 154.42349243]
[55.69058990 166.88648987]
[47.34350967 179.34948730]
[38.99643326 191.81246948]
[45.23253250 205.92327881]
[42.82722855 221.16197205]
[32.54804230 232.66596985]
[17.67502403 236.76437378]
[2.95410180 232.14939880]
[-6.91733265 220.29367065]
[-8.78934097 204.98030090]
[-2.06457114 191.09574890]
[11.11112690 183.07049561]
[26.53343582 183.46539307]
[34.88051224 171.00239563]
[43.22759247 158.53939819]
[51.57466888 146.07641602]
[59.92174911 133.61341858]
[68.26882935 121.15041351]
[64.98654938 108.37657928]
[66.36764526 96.00360107]
[71.72451782 85.58832550]
[79.90046692 78.26531982]
[89.47359467 74.62548065]
[98.98321533 74.68167877]
[102.84454346 60.18719101]
[106.70586395 45.69270325]
[110.56719208 31.19821548]
[99.72999573 18.22839737]
[98.75843048 1.52114069]
[107.83731842 -12.33961773]
[123.22969055 -18.00948715]
[126.83886719 -32.56880951]
[130.44804382 -47.12813187]
[134.05722046 -61.68745422]
[121.45175934 -71.95505524]
[114.60441589 -86.63662720]
[114.83773041 -102.77663422]
[122.05441284 -117.15023804]
[134.76693726 -126.90760040]
[150.40385437 -130.13888550]
[153.75979614 -144.75866699]
[157.11573792 -159.37843323]
[147.30274963 -169.07980347]
[143.60092163 -182.26046753]
[146.87591553 -195.44201660]
[156.16664124 -205.20059204]
[168.96408081 -209.05618286]
[172.57325745 -223.61549377]
[176.18243408 -238.17481995]
[179.79161072 -252.73414612]
[171.89588928 -266.16156006]
[175.76351929 -280.87536621]
[188.61315918 -288.31997681]
[192.22233582 -302.87930298]
[195.70501709 -317.46939087]
[199.06095886 -332.08917236]
[202.41690063 -346.70892334]
[205.77284241 -361.32870483]
[204.64213562 -370.42068481]
[209.31597900 -376.17202759]
[212.92515564 -390.73135376]
[203.28202820 -400.60159302]
[199.80952454 -413.84451294]
[203.31278992 -426.96722412]
[212.77149963 -436.56307983]
[225.63392639 -440.19598389]
[229.49525452 -454.69046021]
[233.35658264 -469.18493652]
[236.71252441 -483.80471802]
[239.55903625 -498.53216553]
[242.40554810 -513.25958252]
[245.25205994 -527.98699951]
[247.97065735 -542.73858643]
[250.56114197 -557.51324463]
[238.23960876 -566.45422363]
[231.05120850 -579.80389404]
[230.37458801 -594.88903809]
[236.29043579 -608.71527100]
[247.57612610 -618.56121826]
[261.95797729 -622.51440430]
[264.54846191 -637.28900146]
[267.13894653 -652.06359863]
[269.72940063 -666.83825684]
[272.31988525 -681.61285400]
[266.19097900 -696.82366943]
[276.51116943 -709.56829834]
[292.66390991 -706.73620605]
[298.03265381 -691.24078369]
[287.09451294 -679.02239990]
[284.50402832 -664.24774170]
[281.91354370 -649.47314453]
[279.32308960 -634.69854736]
[276.73260498 -619.92388916]
[288.91168213 -611.31372070]
[296.17453003 -598.21563721]
[297.03372192 -583.20153809]
[291.26538086 -569.24633789]
[279.96411133 -559.13854980]
[265.33575439 -554.92272949]
[262.74530029 -540.14813232]
[264.69232178 -532.99749756]
[259.97949219 -525.14050293]
[257.13299561 -510.41308594]
[254.28646851 -495.68563843]
[251.43995667 -480.95819092]
[252.92283630 -478.54916382]
[253.52758789 -475.39987183]
[252.96449280 -471.84667969]
[251.07266235 -468.32550049]
[247.85105896 -465.32363892]
[243.98974609 -450.82913208]
[240.12841797 -436.33465576]
[250.87677002 -423.94329834]
[252.14372253 -407.42236328]
[243.23371887 -393.25592041]
[227.48448181 -387.12216187]
[223.87530518 -372.56286621]
[220.39260864 -357.97274780]
[217.03666687 -343.35299683]
[213.68072510 -328.73321533]
[210.32478333 -314.11346436]
[211.89703369 -306.87115479]
[206.78164673 -299.27011108]
[203.17247009 -284.71078491]
[211.05700684 -272.12628174]
[207.60418701 -257.30966187]
[194.35093689 -249.12496948]
[190.74176025 -234.56564331]
[187.13258362 -220.00631714]
[183.52340698 -205.44700623]
[194.48521423 -193.24407959]
[196.03869629 -176.74760437]
[187.37591553 -162.42864990]
[171.73550415 -156.02249146]
[168.37956238 -141.40272522]
[165.02362061 -126.78295135]
[176.28248596 -118.65303802]
[183.61122131 -106.80597687]
[185.87319946 -93.01625824]
[182.69366455 -79.36427307]
[174.52131653 -67.92241669]
[162.56532288 -60.44051743]
[148.61654663 -58.07827377]
[145.00735474 -43.51895523]
[141.39817810 -28.95963287]
[137.78900146 -14.40031052]
[147.30377197 -5.01365423]
[150.96064758 7.95456934]
[147.69950867 21.13955116]
[138.26982117 31.06497955]
[125.06168365 35.05953979]
[121.20035553 49.55402756]
[117.33902740 64.04851532]
[113.47770691 78.54300690]
[131.65380859 97.71188354]
[124.71694946 129.03927612]
[129.32743835 143.31315613]
[133.93792725 157.58702087]
[138.54841614 171.86090088]
[153.10423279 177.57595825]
[160.53562927 191.33489990]
[157.33370972 206.64117432]
[145.01033020 216.26760864]
[129.38420105 215.66891479]
[117.83352661 205.12776184]
[115.81216431 189.62136841]
[124.27453613 176.47138977]
[119.66405487 162.19750977]
[115.05356598 147.92364502]
[110.44307709 133.64976501]
[103.01526642 132.61169434]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 27]
[8 26]
[9 25]
[10 24]
[11 23]
[12 22]
[33 163]
[34 162]
[35 161]
[36 160]
[40 155]
[41 154]
[42 153]
[43 152]
[49 145]
[50 144]
[51 143]
[56 139]
[57 138]
[58 137]
[59 136]
[62 133]
[63 132]
[64 130]
[65 129]
[66 128]
[67 127]
[69 126]
[70 125]
[75 121]
[76 120]
[77 119]
[78 114]
[79 113]
[80 112]
[81 111]
[82 109]
[83 108]
[89 102]
[90 101]
[91 100]
[92 99]
[93 98]
[165 179]
[166 178]
[167 177]
[168 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
