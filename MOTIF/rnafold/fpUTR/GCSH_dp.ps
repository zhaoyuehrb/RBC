%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:09:25 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GCSH)
} def

/sequence { (\
CAGCCGGCUCCCUCCGGCCGCGAACUGCCCCUCCCCGCCCCGCCUCCCGGCGCGGGUGGCCGAGGCGUAGCGCUGCGACCCCCGCACCCCUGCGAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 27 0.010209207 ubox
1 75 0.046069435 ubox
1 92 0.041955499 ubox
2 26 0.010345894 ubox
2 74 0.046179451 ubox
2 91 0.040159957 ubox
3 18 0.993086910 ubox
3 21 0.056344537 ubox
3 25 0.010002673 ubox
3 28 0.005034459 ubox
3 73 0.042328854 ubox
3 76 0.010066684 ubox
3 90 0.021022004 ubox
3 93 0.018931771 ubox
4 17 0.995620645 ubox
4 20 0.039900072 ubox
4 27 0.005043383 ubox
4 72 0.042175249 ubox
4 75 0.009964676 ubox
4 92 0.018779123 ubox
5 16 0.996011259 ubox
5 20 0.066580176 ubox
6 12 0.008478676 ubox
6 13 0.003836179 ubox
6 14 0.008081241 ubox
6 15 0.995931096 ubox
6 19 0.087783947 ubox
6 81 0.003462229 ubox
6 90 0.004283096 ubox
7 11 0.009007514 ubox
7 12 0.008356701 ubox
7 13 0.009166670 ubox
7 14 0.985914268 ubox
7 18 0.087862015 ubox
7 80 0.003463071 ubox
7 89 0.004158040 ubox
8 17 0.087790395 ubox
9 16 0.081211656 ubox
9 78 0.004056204 ubox
10 16 0.017506020 ubox
10 17 0.003620638 ubox
10 77 0.004093816 ubox
11 16 0.004710407 ubox
16 80 0.009772651 ubox
17 76 0.028624903 ubox
17 79 0.010081637 ubox
18 75 0.031156610 ubox
19 72 0.020025124 ubox
19 75 0.063304249 ubox
19 77 0.836029511 ubox
19 92 0.008499604 ubox
19 94 0.205155113 ubox
20 28 0.062841270 ubox
20 71 0.021224265 ubox
20 73 0.463198885 ubox
20 74 0.014057913 ubox
20 76 0.844058440 ubox
20 93 0.206562032 ubox
21 27 0.062948706 ubox
21 70 0.019351715 ubox
21 72 0.464182375 ubox
21 75 0.843759042 ubox
21 77 0.015578840 ubox
21 92 0.206448960 ubox
21 94 0.005844050 ubox
22 26 0.038842140 ubox
22 71 0.455388107 ubox
22 74 0.747704649 ubox
22 76 0.015806106 ubox
22 91 0.166686744 ubox
22 93 0.005750339 ubox
24 68 0.008937337 ubox
25 67 0.008952197 ubox
25 70 0.989551045 ubox
26 67 0.018782251 ubox
26 69 0.995106017 ubox
26 72 0.020571380 ubox
27 66 0.022947025 ubox
27 68 0.996127319 ubox
27 71 0.021601984 ubox
28 65 0.021919350 ubox
28 67 0.995870229 ubox
28 70 0.021518826 ubox
29 64 0.020674689 ubox
29 65 0.071532624 ubox
30 64 0.055053855 ubox
30 65 0.996494347 ubox
31 64 0.998246235 ubox
32 63 0.998989369 ubox
33 62 0.996375788 ubox
34 56 0.003892290 ubox
34 59 0.051202983 ubox
35 55 0.003930572 ubox
35 58 0.036584454 ubox
35 59 0.996612204 ubox
36 54 0.003932670 ubox
36 58 0.999225257 ubox
37 53 0.003933893 ubox
37 57 0.999575167 ubox
38 52 0.003864973 ubox
38 55 0.003906687 ubox
38 56 0.999955832 ubox
39 54 0.005014227 ubox
39 55 0.999931363 ubox
39 56 0.006576110 ubox
40 50 0.003424393 ubox
40 54 0.999787099 ubox
40 55 0.009217602 ubox
41 49 0.003435206 ubox
41 52 0.999358299 ubox
41 54 0.011197729 ubox
42 48 0.003362950 ubox
42 51 0.999892855 ubox
42 53 0.012734006 ubox
43 50 0.999890083 ubox
43 52 0.012700152 ubox
44 49 0.998181209 ubox
44 50 0.010876247 ubox
45 49 0.010723355 ubox
66 77 0.004110820 ubox
66 94 0.075884172 ubox
67 76 0.004174228 ubox
67 93 0.077127122 ubox
68 75 0.004155210 ubox
68 92 0.077111456 ubox
69 74 0.003805412 ubox
69 91 0.077140687 ubox
70 85 0.003260248 ubox
70 90 0.077078265 ubox
70 93 0.005434492 ubox
71 77 0.007168632 ubox
71 84 0.003483042 ubox
71 92 0.005912495 ubox
71 94 0.138490760 ubox
72 76 0.006804720 ubox
72 83 0.003401885 ubox
72 85 0.006929569 ubox
72 91 0.005562459 ubox
72 93 0.140524331 ubox
73 84 0.006904962 ubox
73 92 0.140498482 ubox
74 86 0.363178505 ubox
74 94 0.018695077 ubox
75 85 0.402091938 ubox
75 93 0.023051035 ubox
76 84 0.402170088 ubox
76 92 0.023051408 ubox
77 83 0.399733549 ubox
77 91 0.019170236 ubox
83 92 0.003240268 ubox
83 94 0.905481243 ubox
84 93 0.914662059 ubox
85 92 0.914468496 ubox
86 91 0.779095731 ubox
3 18 0.9500000 lbox
4 17 0.9500000 lbox
5 16 0.9500000 lbox
6 15 0.9500000 lbox
7 14 0.9500000 lbox
19 77 0.9500000 lbox
20 76 0.9500000 lbox
21 75 0.9500000 lbox
22 74 0.9500000 lbox
25 70 0.9500000 lbox
26 69 0.9500000 lbox
27 68 0.9500000 lbox
28 67 0.9500000 lbox
30 65 0.9500000 lbox
31 64 0.9500000 lbox
32 63 0.9500000 lbox
33 62 0.9500000 lbox
35 59 0.9500000 lbox
36 58 0.9500000 lbox
37 57 0.9500000 lbox
38 56 0.9500000 lbox
39 55 0.9500000 lbox
40 54 0.9500000 lbox
41 52 0.9500000 lbox
42 51 0.9500000 lbox
43 50 0.9500000 lbox
44 49 0.9500000 lbox
83 94 0.9500000 lbox
84 93 0.9500000 lbox
85 92 0.9500000 lbox
86 91 0.9500000 lbox
showpage
end
%%EOF
