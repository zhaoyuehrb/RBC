%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:22:35 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (LHX3)
} def

/sequence { (\
AGGGCGGCCCGCGGGCGCAGCGCCCAGCAGCACCCGGAGUCGCUUGGACGCCGGUUCGGGGCUAUUGCGGGGUGGCGUCGCUGGGCCCGGGAAAGUUCGGGACUGGAGAGUGGCGACGCCGGGCGGCGGGACCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 9 0.004541348 ubox
2 10 0.018038761 ubox
2 25 0.024179546 ubox
2 133 0.047953686 ubox
2 134 0.820922734 ubox
3 8 0.004617517 ubox
3 9 0.018058517 ubox
3 24 0.024207384 ubox
3 132 0.047614931 ubox
3 133 0.827748987 ubox
3 134 0.050778575 ubox
4 8 0.017768010 ubox
4 12 0.003958859 ubox
4 18 0.006712647 ubox
4 23 0.024210860 ubox
4 127 0.075287533 ubox
4 132 0.825821245 ubox
4 133 0.045310624 ubox
5 11 0.004009396 ubox
5 17 0.006769641 ubox
5 22 0.024212473 ubox
5 126 0.076128110 ubox
5 128 0.008716714 ubox
6 10 0.003791275 ubox
6 16 0.006222035 ubox
6 21 0.023998409 ubox
6 127 0.007362714 ubox
6 133 0.545904197 ubox
6 134 0.043110357 ubox
7 16 0.022778399 ubox
7 18 0.007116244 ubox
7 124 0.076388464 ubox
7 127 0.033308416 ubox
7 132 0.547968969 ubox
7 133 0.041172710 ubox
8 14 0.005616432 ubox
8 15 0.022948003 ubox
8 17 0.007139588 ubox
8 20 0.003235955 ubox
8 123 0.076423632 ubox
8 126 0.033176948 ubox
8 129 0.020271965 ubox
8 130 0.995208676 ubox
9 13 0.005581876 ubox
9 14 0.022933446 ubox
9 15 0.006986596 ubox
9 122 0.076417408 ubox
9 125 0.032661175 ubox
9 126 0.007129960 ubox
9 128 0.019890774 ubox
9 129 0.995645460 ubox
9 130 0.014409329 ubox
10 14 0.006941011 ubox
10 121 0.076292017 ubox
10 125 0.009047938 ubox
10 128 0.995527039 ubox
10 129 0.014351986 ubox
11 18 0.004620957 ubox
11 28 0.333102328 ubox
11 31 0.010953793 ubox
11 120 0.008193924 ubox
11 124 0.009855869 ubox
11 127 0.939539091 ubox
12 17 0.004620596 ubox
12 27 0.333451052 ubox
12 30 0.011078807 ubox
12 36 0.006735449 ubox
12 123 0.009074536 ubox
12 125 0.042020961 ubox
12 126 0.937572604 ubox
13 24 0.005689076 ubox
13 25 0.997521189 ubox
13 35 0.010031809 ubox
13 124 0.019266585 ubox
14 23 0.005279499 ubox
14 24 0.999004763 ubox
14 25 0.008864841 ubox
14 34 0.010257951 ubox
15 21 0.005261615 ubox
15 23 0.999019291 ubox
15 24 0.008103503 ubox
15 31 0.011589008 ubox
15 33 0.010472062 ubox
15 124 0.016213187 ubox
16 20 0.005316134 ubox
16 22 0.998935431 ubox
16 30 0.011597960 ubox
16 123 0.014937816 ubox
16 125 0.005633018 ubox
17 21 0.934501462 ubox
17 23 0.007278817 ubox
17 28 0.009354866 ubox
17 31 0.030442922 ubox
17 124 0.005422946 ubox
18 22 0.007280904 ubox
18 27 0.009381907 ubox
18 30 0.030430433 ubox
18 123 0.005041674 ubox
20 28 0.031520679 ubox
20 31 0.006786337 ubox
21 27 0.031562032 ubox
21 30 0.006791981 ubox
21 125 0.005472686 ubox
22 28 0.005019540 ubox
22 73 0.003820431 ubox
22 124 0.005710336 ubox
23 27 0.004996599 ubox
23 72 0.004039614 ubox
23 123 0.005711077 ubox
23 130 0.006950018 ubox
24 71 0.004044302 ubox
24 122 0.005710951 ubox
24 129 0.006977280 ubox
25 70 0.004029030 ubox
25 121 0.005701425 ubox
25 128 0.006956013 ubox
27 68 0.005235792 ubox
27 124 0.067940529 ubox
27 127 0.029902638 ubox
28 67 0.005261471 ubox
28 123 0.050610317 ubox
28 126 0.030712742 ubox
29 63 0.006239765 ubox
29 66 0.003830957 ubox
29 73 0.003513319 ubox
30 62 0.007355310 ubox
30 73 0.062254921 ubox
30 124 0.187656129 ubox
30 127 0.327620539 ubox
31 61 0.007359340 ubox
31 72 0.065865803 ubox
31 74 0.006681186 ubox
31 123 0.143178193 ubox
31 126 0.328367847 ubox
32 73 0.011049039 ubox
33 60 0.007436255 ubox
33 71 0.083014869 ubox
33 72 0.009960389 ubox
33 122 0.055623617 ubox
33 123 0.980651534 ubox
34 59 0.007432511 ubox
34 70 0.083319639 ubox
34 71 0.008185847 ubox
34 121 0.039406862 ubox
34 122 0.994705070 ubox
34 123 0.006561127 ubox
35 58 0.007421920 ubox
35 69 0.083512609 ubox
35 70 0.005891064 ubox
35 121 0.995589274 ubox
35 122 0.004684642 ubox
36 57 0.007346740 ubox
36 68 0.083681856 ubox
36 120 0.996399447 ubox
37 56 0.007287623 ubox
37 119 0.994748962 ubox
38 55 0.007222621 ubox
38 66 0.082818494 ubox
39 49 0.003406660 ubox
39 65 0.083267373 ubox
39 114 0.003506936 ubox
39 117 0.991175639 ubox
40 48 0.003416259 ubox
40 54 0.004530096 ubox
40 64 0.082562734 ubox
40 113 0.003557031 ubox
40 116 0.996290090 ubox
41 47 0.003416377 ubox
41 53 0.004934771 ubox
41 112 0.003654859 ubox
41 115 0.996420025 ubox
42 51 0.005936678 ubox
42 52 0.003580168 ubox
42 62 0.081868521 ubox
42 111 0.004087034 ubox
42 114 0.996429148 ubox
43 50 0.006836278 ubox
43 60 0.038973763 ubox
43 61 0.074059425 ubox
43 110 0.004812784 ubox
43 113 0.996258711 ubox
44 59 0.052398688 ubox
44 60 0.064584342 ubox
44 108 0.003183991 ubox
44 109 0.006749222 ubox
44 110 0.016051044 ubox
44 112 0.974653407 ubox
44 113 0.014950716 ubox
45 58 0.063397667 ubox
45 59 0.052137579 ubox
45 80 0.009749979 ubox
45 107 0.007462464 ubox
45 108 0.008270678 ubox
45 109 0.040261894 ubox
45 112 0.109434852 ubox
46 57 0.074019950 ubox
46 79 0.010177632 ubox
46 111 0.143865774 ubox
47 56 0.074520736 ubox
47 57 0.037997697 ubox
47 78 0.005353927 ubox
47 79 0.140402107 ubox
48 55 0.078815142 ubox
48 56 0.027898437 ubox
48 78 0.141037819 ubox
48 111 0.221086936 ubox
49 54 0.082848050 ubox
49 77 0.141375493 ubox
49 110 0.222342018 ubox
49 112 0.007319951 ubox
50 76 0.141390821 ubox
50 111 0.009143280 ubox
51 75 0.141392850 ubox
51 106 0.985761030 ubox
51 110 0.005663651 ubox
52 74 0.141387771 ubox
52 105 0.986318909 ubox
53 73 0.141129767 ubox
53 104 0.985619621 ubox
54 103 0.986348853 ubox
55 71 0.140934617 ubox
55 101 0.006472521 ubox
55 102 0.986062798 ubox
56 70 0.140852664 ubox
56 100 0.011559272 ubox
56 101 0.985465279 ubox
56 102 0.004571036 ubox
57 69 0.141265437 ubox
57 99 0.015073013 ubox
57 100 0.984231969 ubox
57 101 0.006110479 ubox
58 68 0.139779043 ubox
58 98 0.015577720 ubox
59 65 0.003284566 ubox
59 66 0.012862250 ubox
59 97 0.012551497 ubox
59 98 0.984139823 ubox
60 65 0.015375364 ubox
60 66 0.120958422 ubox
60 96 0.009048293 ubox
60 97 0.983340461 ubox
60 98 0.005638680 ubox
61 65 0.079144690 ubox
61 68 0.020500079 ubox
61 76 0.003352935 ubox
61 96 0.985686564 ubox
61 97 0.004226055 ubox
62 67 0.022299188 ubox
62 75 0.003353729 ubox
62 95 0.986315586 ubox
63 74 0.003352379 ubox
63 94 0.969946768 ubox
64 73 0.003418779 ubox
65 72 0.003406703 ubox
65 91 0.008201519 ubox
65 92 0.971879304 ubox
65 93 0.033053672 ubox
66 71 0.003194922 ubox
66 90 0.007263676 ubox
66 91 0.974613411 ubox
66 92 0.026671518 ubox
66 93 0.003337186 ubox
68 89 0.985813996 ubox
69 87 0.005421217 ubox
69 88 0.982563502 ubox
69 124 0.003321716 ubox
70 86 0.007475537 ubox
70 87 0.978956934 ubox
70 88 0.086024352 ubox
71 82 0.047575451 ubox
71 86 0.973408114 ubox
71 87 0.118719459 ubox
72 81 0.194083121 ubox
72 86 0.144123094 ubox
72 124 0.008903559 ubox
73 80 0.194045132 ubox
73 83 0.747803890 ubox
73 85 0.159922249 ubox
73 121 0.020912593 ubox
73 123 0.007959131 ubox
74 79 0.192337321 ubox
74 82 0.930691794 ubox
74 87 0.019609036 ubox
74 120 0.083547833 ubox
75 81 0.956121020 ubox
75 86 0.027725060 ubox
75 119 0.083948419 ubox
76 80 0.949231528 ubox
76 83 0.098786890 ubox
76 85 0.033101299 ubox
76 118 0.083949312 ubox
77 82 0.070027323 ubox
77 86 0.015352381 ubox
77 117 0.083957324 ubox
78 84 0.005615146 ubox
78 85 0.024697757 ubox
78 109 0.007298025 ubox
78 116 0.083950061 ubox
79 83 0.006005113 ubox
79 84 0.025816437 ubox
79 108 0.010880280 ubox
79 112 0.004038705 ubox
79 115 0.083958059 ubox
80 86 0.003481729 ubox
80 111 0.019775410 ubox
80 114 0.083957135 ubox
81 85 0.004290562 ubox
81 100 0.004496252 ubox
81 106 0.130805325 ubox
81 108 0.024152958 ubox
81 110 0.020249710 ubox
81 113 0.083788816 ubox
82 99 0.004519046 ubox
82 105 0.131060339 ubox
82 107 0.023915929 ubox
82 109 0.019023567 ubox
82 112 0.080980304 ubox
83 98 0.004548613 ubox
83 104 0.139263008 ubox
83 111 0.050046081 ubox
84 97 0.004536795 ubox
84 103 0.139123932 ubox
84 104 0.056207876 ubox
85 96 0.004547828 ubox
85 103 0.057754658 ubox
86 95 0.004550691 ubox
86 101 0.161883789 ubox
87 100 0.164213628 ubox
87 101 0.003986605 ubox
87 106 0.007772144 ubox
88 99 0.164212227 ubox
88 100 0.003987089 ubox
88 105 0.007795773 ubox
89 98 0.163959874 ubox
89 104 0.007793697 ubox
90 96 0.006114113 ubox
90 97 0.150941175 ubox
90 98 0.008362860 ubox
90 103 0.007792546 ubox
91 96 0.111189195 ubox
91 97 0.010696786 ubox
91 98 0.003583867 ubox
92 96 0.010966395 ubox
92 97 0.003829964 ubox
102 111 0.054372311 ubox
103 110 0.056283512 ubox
104 109 0.055757494 ubox
125 133 0.003249120 ubox
126 132 0.003248029 ubox
128 134 0.016992792 ubox
129 133 0.016840846 ubox
2 134 0.9500000 lbox
3 133 0.9500000 lbox
4 132 0.9500000 lbox
8 130 0.9500000 lbox
9 129 0.9500000 lbox
10 128 0.9500000 lbox
11 127 0.9500000 lbox
12 126 0.9500000 lbox
13 25 0.9500000 lbox
14 24 0.9500000 lbox
15 23 0.9500000 lbox
16 22 0.9500000 lbox
17 21 0.9500000 lbox
33 123 0.9500000 lbox
34 122 0.9500000 lbox
35 121 0.9500000 lbox
36 120 0.9500000 lbox
37 119 0.9500000 lbox
39 117 0.9500000 lbox
40 116 0.9500000 lbox
41 115 0.9500000 lbox
42 114 0.9500000 lbox
43 113 0.9500000 lbox
44 112 0.9500000 lbox
51 106 0.9500000 lbox
52 105 0.9500000 lbox
53 104 0.9500000 lbox
54 103 0.9500000 lbox
55 102 0.9500000 lbox
56 101 0.9500000 lbox
57 100 0.9500000 lbox
59 98 0.9500000 lbox
60 97 0.9500000 lbox
61 96 0.9500000 lbox
62 95 0.9500000 lbox
63 94 0.9500000 lbox
65 92 0.9500000 lbox
66 91 0.9500000 lbox
68 89 0.9500000 lbox
69 88 0.9500000 lbox
70 87 0.9500000 lbox
71 86 0.9500000 lbox
73 83 0.9500000 lbox
74 82 0.9500000 lbox
75 81 0.9500000 lbox
76 80 0.9500000 lbox
showpage
end
%%EOF
