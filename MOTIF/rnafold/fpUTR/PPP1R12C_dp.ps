%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:36:49 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PPP1R12C)
} def

/sequence { (\
UGGUGGCGGCGGUUGGGGCUCGGCGCUCGCUCGCUCGCUGGGCGGGCGGGCGGUGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.031339597 ubox
1 11 0.009626196 ubox
1 22 0.059676030 ubox
1 25 0.004662505 ubox
1 55 0.005083215 ubox
1 57 0.016863765 ubox
2 7 0.065189004 ubox
2 10 0.013150049 ubox
2 20 0.064893551 ubox
2 21 0.077560645 ubox
2 24 0.040719626 ubox
2 27 0.522537796 ubox
2 28 0.036793328 ubox
2 31 0.026463253 ubox
2 54 0.004802420 ubox
2 56 0.031072475 ubox
3 10 0.042591204 ubox
3 19 0.080124847 ubox
3 20 0.036220436 ubox
3 24 0.030121744 ubox
3 26 0.625405371 ubox
3 27 0.008901082 ubox
3 30 0.031774762 ubox
3 56 0.074169613 ubox
4 9 0.042245740 ubox
4 11 0.013126395 ubox
4 15 0.043675436 ubox
4 18 0.078614605 ubox
4 22 0.100098959 ubox
4 23 0.029314952 ubox
4 25 0.625623368 ubox
4 29 0.031783437 ubox
4 55 0.072276991 ubox
4 57 0.009230233 ubox
5 10 0.018246798 ubox
5 14 0.092866474 ubox
5 20 0.144235308 ubox
5 21 0.125651895 ubox
5 24 0.655068310 ubox
5 27 0.331247358 ubox
5 28 0.038163072 ubox
5 31 0.004150166 ubox
5 54 0.029685074 ubox
5 56 0.014409350 ubox
6 13 0.100475232 ubox
6 19 0.180211888 ubox
6 20 0.046403418 ubox
6 24 0.057068495 ubox
6 26 0.398787980 ubox
6 27 0.004559907 ubox
6 30 0.004998069 ubox
6 54 0.005408639 ubox
6 56 0.038823771 ubox
7 12 0.101300613 ubox
7 15 0.037473407 ubox
7 18 0.180488842 ubox
7 22 0.838429027 ubox
7 23 0.052617139 ubox
7 25 0.399167327 ubox
7 29 0.005004904 ubox
7 52 0.007470927 ubox
7 53 0.006236624 ubox
7 55 0.038727914 ubox
7 57 0.006209061 ubox
8 14 0.035279385 ubox
8 20 0.281078405 ubox
8 21 0.831149140 ubox
8 24 0.400024544 ubox
8 27 0.015642096 ubox
8 28 0.005077313 ubox
8 54 0.026609324 ubox
8 56 0.004110706 ubox
9 13 0.023052593 ubox
9 19 0.876023920 ubox
9 20 0.102369545 ubox
9 24 0.010310389 ubox
9 26 0.020208140 ubox
9 54 0.004117250 ubox
9 56 0.006564695 ubox
10 18 0.880846687 ubox
10 22 0.406725349 ubox
10 23 0.010599297 ubox
10 25 0.020207612 ubox
10 52 0.023825511 ubox
10 53 0.005743886 ubox
10 55 0.006563074 ubox
11 20 0.089008198 ubox
11 21 0.402486683 ubox
11 24 0.015291913 ubox
11 51 0.007080360 ubox
11 54 0.003984864 ubox
12 19 0.363231450 ubox
12 20 0.173867671 ubox
12 24 0.031952755 ubox
13 18 0.345915293 ubox
13 23 0.034707218 ubox
14 22 0.037316344 ubox
15 21 0.039111634 ubox
15 27 0.003642491 ubox
16 20 0.025406205 ubox
16 26 0.004298045 ubox
16 28 0.007126184 ubox
17 27 0.007347378 ubox
18 24 0.006510837 ubox
18 26 0.007417125 ubox
18 56 0.036443430 ubox
19 23 0.006482640 ubox
19 25 0.007419559 ubox
19 55 0.035829508 ubox
21 55 0.089473906 ubox
21 57 0.039632097 ubox
22 54 0.097370670 ubox
22 56 0.031793325 ubox
23 54 0.010116150 ubox
23 56 0.617714717 ubox
24 52 0.112004181 ubox
24 53 0.007445928 ubox
24 55 0.618989294 ubox
24 57 0.078354002 ubox
25 51 0.122336898 ubox
25 54 0.619270937 ubox
25 56 0.220665203 ubox
26 50 0.122554255 ubox
26 53 0.619485897 ubox
26 55 0.221062595 ubox
27 49 0.122569293 ubox
27 52 0.102615260 ubox
27 53 0.380275866 ubox
28 48 0.122908386 ubox
28 52 0.973679307 ubox
28 55 0.023932887 ubox
28 57 0.106470971 ubox
29 47 0.122933585 ubox
29 51 0.984461856 ubox
29 54 0.024744258 ubox
29 56 0.118065537 ubox
30 46 0.122934646 ubox
30 50 0.984491008 ubox
30 53 0.024823058 ubox
30 55 0.118060626 ubox
31 45 0.122856098 ubox
31 49 0.983864728 ubox
31 52 0.004220711 ubox
31 53 0.112438185 ubox
32 44 0.122920119 ubox
32 48 0.984383780 ubox
32 52 0.124777264 ubox
33 43 0.122933907 ubox
33 47 0.984495246 ubox
33 51 0.124968916 ubox
34 42 0.122893158 ubox
34 46 0.984501210 ubox
34 50 0.124970142 ubox
35 41 0.119981189 ubox
35 45 0.983869574 ubox
35 49 0.124890257 ubox
36 40 0.115818459 ubox
36 41 0.024952640 ubox
36 44 0.984380328 ubox
36 48 0.124955214 ubox
37 43 0.984320987 ubox
37 47 0.124968927 ubox
38 42 0.977173576 ubox
38 45 0.003456242 ubox
38 46 0.124920119 ubox
39 44 0.004561765 ubox
39 45 0.123812763 ubox
50 56 0.005732536 ubox
51 55 0.005698562 ubox
52 56 0.004684141 ubox
2 27 0.9500000 lbox
3 26 0.9500000 lbox
4 25 0.9500000 lbox
5 24 0.9500000 lbox
7 22 0.9500000 lbox
8 21 0.9500000 lbox
9 19 0.9500000 lbox
10 18 0.9500000 lbox
28 52 0.9500000 lbox
29 51 0.9500000 lbox
30 50 0.9500000 lbox
31 49 0.9500000 lbox
32 48 0.9500000 lbox
33 47 0.9500000 lbox
34 46 0.9500000 lbox
35 45 0.9500000 lbox
36 44 0.9500000 lbox
37 43 0.9500000 lbox
38 42 0.9500000 lbox
showpage
end
%%EOF
