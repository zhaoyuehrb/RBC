%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:44:42 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FAM83H)
} def

/sequence { (\
GGGCGGCGGUCGGCUCCUGCUGCCCCUGUGCCGAGACCCCGCGCACCUGGCCAGGCCCCUGGCCCCAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 24 0.004421254 ubox
1 25 0.987099405 ubox
1 26 0.108534148 ubox
1 27 0.067721105 ubox
1 39 0.004398943 ubox
1 40 0.006616977 ubox
1 47 0.027628305 ubox
1 48 0.004822972 ubox
1 65 0.006788611 ubox
1 66 0.029120298 ubox
2 24 0.992383112 ubox
2 25 0.088852991 ubox
2 26 0.072053430 ubox
2 27 0.005136419 ubox
2 38 0.004432934 ubox
2 39 0.006608551 ubox
2 46 0.027420985 ubox
2 47 0.005049604 ubox
2 64 0.004203241 ubox
2 65 0.026920021 ubox
2 66 0.007097959 ubox
3 23 0.994437722 ubox
3 24 0.062854151 ubox
3 25 0.072129166 ubox
3 26 0.006304822 ubox
3 29 0.004863738 ubox
3 37 0.004448326 ubox
3 38 0.006589865 ubox
3 42 0.023768649 ubox
3 44 0.024416047 ubox
3 46 0.004624757 ubox
3 63 0.004087872 ubox
3 64 0.010462936 ubox
3 65 0.006990947 ubox
4 22 0.996389368 ubox
4 28 0.005763555 ubox
4 33 0.007969412 ubox
4 41 0.023844486 ubox
4 43 0.024394024 ubox
4 62 0.003857323 ubox
5 21 0.995664287 ubox
5 24 0.072933800 ubox
5 26 0.020714843 ubox
5 27 0.007015535 ubox
5 32 0.007997358 ubox
5 40 0.023897735 ubox
5 42 0.017623555 ubox
5 66 0.005496595 ubox
6 20 0.996410454 ubox
6 23 0.073084302 ubox
6 25 0.020740719 ubox
6 26 0.007155579 ubox
6 31 0.007997829 ubox
6 39 0.023906279 ubox
6 42 0.017747094 ubox
6 65 0.005500307 ubox
7 19 0.996238040 ubox
7 22 0.073074355 ubox
7 30 0.007990817 ubox
7 41 0.024425079 ubox
8 15 0.019324276 ubox
8 16 0.014696457 ubox
8 17 0.579151402 ubox
8 18 0.808443876 ubox
8 21 0.072890432 ubox
8 24 0.021985916 ubox
8 25 0.007563033 ubox
8 29 0.003212261 ubox
8 38 0.023896254 ubox
8 39 0.004787901 ubox
8 40 0.024389678 ubox
8 64 0.005491864 ubox
9 14 0.022891584 ubox
9 15 0.013213355 ubox
9 16 0.586549693 ubox
9 17 0.800047003 ubox
9 20 0.072891579 ubox
9 23 0.022005215 ubox
9 24 0.007602488 ubox
9 37 0.023889249 ubox
9 38 0.004958775 ubox
9 39 0.024310941 ubox
9 63 0.005505627 ubox
10 19 0.035764378 ubox
10 34 0.025850466 ubox
10 36 0.020079884 ubox
10 62 0.005503635 ubox
11 19 0.063309861 ubox
11 22 0.023256517 ubox
11 33 0.028300403 ubox
11 35 0.016964081 ubox
11 61 0.005500835 ubox
12 18 0.063698096 ubox
12 21 0.024029743 ubox
12 24 0.006227918 ubox
12 32 0.032455202 ubox
12 38 0.009862353 ubox
12 59 0.004009917 ubox
12 60 0.003913984 ubox
13 17 0.062545015 ubox
13 20 0.024231170 ubox
13 23 0.006245715 ubox
13 31 0.032495423 ubox
13 37 0.009913255 ubox
13 58 0.004061565 ubox
13 59 0.003846098 ubox
14 19 0.024252229 ubox
14 22 0.006255293 ubox
14 30 0.032474319 ubox
14 35 0.010087937 ubox
15 34 0.010136444 ubox
16 33 0.010116513 ubox
16 55 0.005785147 ubox
17 54 0.005893904 ubox
18 53 0.005921948 ubox
19 29 0.016241952 ubox
19 31 0.009509771 ubox
19 52 0.005854226 ubox
20 28 0.016329826 ubox
20 30 0.009501576 ubox
22 29 0.006593076 ubox
22 51 0.006255845 ubox
23 28 0.006746281 ubox
23 50 0.006249083 ubox
24 49 0.006198604 ubox
25 49 0.004381318 ubox
25 50 0.005000221 ubox
26 35 0.003897184 ubox
26 49 0.040398675 ubox
26 50 0.005215754 ubox
27 34 0.003936719 ubox
27 43 0.004164750 ubox
27 45 0.271273620 ubox
27 49 0.006416402 ubox
27 53 0.003711845 ubox
27 67 0.012498880 ubox
28 42 0.005673260 ubox
28 44 0.306235222 ubox
28 46 0.945485060 ubox
28 48 0.005147927 ubox
28 52 0.003863212 ubox
28 66 0.009770014 ubox
29 41 0.005644052 ubox
29 43 0.306172992 ubox
29 45 0.949603941 ubox
30 40 0.005532342 ubox
30 42 0.306269865 ubox
30 44 0.951181275 ubox
30 51 0.003973944 ubox
31 41 0.249199764 ubox
31 43 0.949731100 ubox
31 50 0.003979069 ubox
32 41 0.962961438 ubox
32 43 0.050776665 ubox
32 49 0.003974969 ubox
33 40 0.971372347 ubox
33 42 0.071579544 ubox
35 47 0.003191060 ubox
48 67 0.087581451 ubox
49 64 0.990850283 ubox
49 65 0.065354803 ubox
49 66 0.073667360 ubox
50 63 0.996537831 ubox
50 64 0.047391384 ubox
50 65 0.065219802 ubox
51 62 0.998146127 ubox
52 61 0.998144873 ubox
53 60 0.997233976 ubox
54 59 0.992870546 ubox
54 60 0.009234576 ubox
54 64 0.060145681 ubox
55 59 0.018324300 ubox
55 63 0.060258461 ubox
56 62 0.060263285 ubox
57 61 0.059824931 ubox
1 25 0.9500000 lbox
2 24 0.9500000 lbox
3 23 0.9500000 lbox
4 22 0.9500000 lbox
5 21 0.9500000 lbox
6 20 0.9500000 lbox
7 19 0.9500000 lbox
8 18 0.9500000 lbox
9 17 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
30 44 0.9500000 lbox
31 43 0.9500000 lbox
32 41 0.9500000 lbox
33 40 0.9500000 lbox
49 64 0.9500000 lbox
50 63 0.9500000 lbox
51 62 0.9500000 lbox
52 61 0.9500000 lbox
53 60 0.9500000 lbox
54 59 0.9500000 lbox
showpage
end
%%EOF
