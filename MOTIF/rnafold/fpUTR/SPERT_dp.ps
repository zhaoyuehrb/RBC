%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:34:11 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SPERT)
} def

/sequence { (\
GCUCUUCCUGCCUGUCAGAUGCCUCAUUCCCACCUGUGAUGCUCAGAGAGAAACCAUGAGCCCUGAAAAACACCAUAUUGUUUUGUG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.036699251 ubox
1 22 0.003835628 ubox
1 61 0.995447166 ubox
1 86 0.003932392 ubox
2 10 0.036811543 ubox
2 21 0.003846756 ubox
2 50 0.008313327 ubox
2 60 0.998690582 ubox
2 85 0.004041703 ubox
3 49 0.008353009 ubox
3 51 0.004022295 ubox
3 59 0.998481850 ubox
3 66 0.003287943 ubox
4 48 0.008357580 ubox
4 50 0.004295373 ubox
4 58 0.997574667 ubox
4 60 0.004342686 ubox
4 65 0.003449364 ubox
5 47 0.008133284 ubox
5 49 0.004343840 ubox
5 50 0.007667630 ubox
5 52 0.020293625 ubox
5 53 0.013001483 ubox
5 59 0.004253019 ubox
5 60 0.007933840 ubox
6 46 0.007330965 ubox
6 48 0.004092096 ubox
6 49 0.008020071 ubox
6 51 0.020543783 ubox
6 52 0.012304052 ubox
6 58 0.003995034 ubox
6 59 0.011624253 ubox
6 66 0.003172115 ubox
7 48 0.008100071 ubox
7 50 0.017567684 ubox
7 58 0.012741072 ubox
7 65 0.003254519 ubox
8 18 0.009871514 ubox
8 46 0.009305023 ubox
8 48 0.010132334 ubox
8 50 0.015346428 ubox
9 17 0.010084487 ubox
9 45 0.009361830 ubox
9 47 0.009135715 ubox
9 49 0.016225094 ubox
9 56 0.044307866 ubox
9 72 0.003951209 ubox
10 16 0.010050297 ubox
10 42 0.006424565 ubox
10 44 0.008930433 ubox
10 55 0.048612428 ubox
10 61 0.005022481 ubox
10 71 0.004438352 ubox
11 41 0.006446370 ubox
11 60 0.005031410 ubox
12 46 0.018070703 ubox
12 48 0.007305724 ubox
12 50 0.989824018 ubox
13 41 0.004840736 ubox
13 45 0.018051382 ubox
13 47 0.006721159 ubox
13 49 0.990560895 ubox
14 40 0.006966469 ubox
14 44 0.015434584 ubox
15 39 0.007166350 ubox
15 47 0.996180871 ubox
15 49 0.015494655 ubox
15 66 0.032364845 ubox
16 36 0.006238832 ubox
16 38 0.007117448 ubox
16 46 0.994489118 ubox
16 48 0.015682044 ubox
16 65 0.034613540 ubox
17 35 0.006353587 ubox
17 37 0.006878798 ubox
17 43 0.007098118 ubox
17 64 0.034605174 ubox
18 28 0.003513741 ubox
18 34 0.006446953 ubox
18 42 0.005680049 ubox
18 44 0.974100687 ubox
18 63 0.034500583 ubox
19 27 0.003871580 ubox
19 43 0.964347990 ubox
20 26 0.003973456 ubox
20 32 0.005780192 ubox
20 41 0.006109728 ubox
20 45 0.005012478 ubox
21 25 0.003924078 ubox
21 31 0.005828247 ubox
21 40 0.004056947 ubox
21 42 0.998722124 ubox
21 61 0.029212246 ubox
22 41 0.998103041 ubox
22 60 0.020743178 ubox
23 60 0.024826750 ubox
24 39 0.987566211 ubox
24 59 0.032288806 ubox
25 36 0.009524777 ubox
25 38 0.999308049 ubox
25 58 0.032342079 ubox
26 35 0.009647764 ubox
26 37 0.998466359 ubox
26 57 0.032182995 ubox
27 36 0.995947075 ubox
27 52 0.006095825 ubox
27 56 0.029653782 ubox
28 51 0.009422056 ubox
29 50 0.009445731 ubox
34 46 0.005484071 ubox
34 48 0.031631799 ubox
35 45 0.005505196 ubox
35 47 0.031656416 ubox
36 44 0.005499289 ubox
37 45 0.031881577 ubox
38 44 0.031921325 ubox
39 43 0.027772347 ubox
41 61 0.013844964 ubox
42 60 0.013910087 ubox
43 51 0.004220924 ubox
43 59 0.013980006 ubox
44 50 0.004431510 ubox
44 58 0.013989965 ubox
45 57 0.013727339 ubox
55 65 0.006057819 ubox
55 87 0.005274423 ubox
56 64 0.005733900 ubox
56 86 0.005347512 ubox
57 85 0.005241196 ubox
58 84 0.003666311 ubox
59 82 0.003256583 ubox
59 83 0.003207316 ubox
60 81 0.003509065 ubox
60 86 0.003688642 ubox
61 80 0.003711446 ubox
61 85 0.004811796 ubox
64 72 0.034984241 ubox
64 75 0.031416813 ubox
64 85 0.048265434 ubox
64 87 0.121070917 ubox
65 71 0.039400430 ubox
65 74 0.035122716 ubox
65 79 0.003352624 ubox
65 82 0.003656072 ubox
65 83 0.009758438 ubox
65 84 0.051423206 ubox
65 86 0.173085685 ubox
66 78 0.003264930 ubox
66 81 0.003468381 ubox
66 82 0.009470104 ubox
66 83 0.047872636 ubox
66 84 0.090265172 ubox
67 81 0.006515432 ubox
67 82 0.036448498 ubox
67 83 0.082002760 ubox
67 84 0.893797061 ubox
68 79 0.007037358 ubox
68 81 0.020474906 ubox
68 82 0.067706867 ubox
68 83 0.946168717 ubox
68 84 0.036490653 ubox
69 78 0.007456859 ubox
69 79 0.007269738 ubox
69 81 0.048408796 ubox
69 82 0.959275273 ubox
69 83 0.032278361 ubox
69 84 0.013717865 ubox
70 78 0.006934408 ubox
70 81 0.964665261 ubox
70 82 0.024779447 ubox
70 83 0.013157119 ubox
70 86 0.052585925 ubox
71 80 0.966938756 ubox
71 85 0.054192302 ubox
71 87 0.081672426 ubox
72 79 0.871107503 ubox
72 81 0.027656969 ubox
72 84 0.051012663 ubox
72 86 0.082462554 ubox
73 80 0.029718495 ubox
73 85 0.070275857 ubox
74 80 0.039203877 ubox
74 85 0.061103201 ubox
74 87 0.188625702 ubox
75 79 0.032248082 ubox
75 81 0.025538389 ubox
75 84 0.074521395 ubox
75 86 0.191724066 ubox
76 80 0.023987378 ubox
76 85 0.191891415 ubox
76 87 0.018596074 ubox
77 84 0.188640760 ubox
77 86 0.022341030 ubox
78 85 0.022356834 ubox
1 61 0.9500000 lbox
2 60 0.9500000 lbox
3 59 0.9500000 lbox
4 58 0.9500000 lbox
12 50 0.9500000 lbox
13 49 0.9500000 lbox
15 47 0.9500000 lbox
16 46 0.9500000 lbox
18 44 0.9500000 lbox
19 43 0.9500000 lbox
21 42 0.9500000 lbox
22 41 0.9500000 lbox
24 39 0.9500000 lbox
25 38 0.9500000 lbox
26 37 0.9500000 lbox
27 36 0.9500000 lbox
67 84 0.9500000 lbox
68 83 0.9500000 lbox
69 82 0.9500000 lbox
70 81 0.9500000 lbox
71 80 0.9500000 lbox
72 79 0.9500000 lbox
showpage
end
%%EOF
