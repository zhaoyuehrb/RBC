%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:23:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACAUUUCCAAAUCUUGGCAUUCUUAUCCACAAAGUGAAGAUAAUAAUUGUCAAUUCACAGGUGAUUAUGAUUUAAAGAGAUUACUUUUGAAGAGUUCCUAACACAUUCAGUCAACAUUUAAUGAUGCUUCAGGCACUGUGUUCAUUGCUAGUGAGCGUAUGACACACACAGCCAUACGGUCACAGAGCUUUCAAUGAAAAGUAACAUAAUUGCUCAUUUCACCAGGCCCCCGGCUUGGGGCGCCUUCCUUCCCC\
) } def
/len { sequence length } bind def

/coor [
[-102.03657532 729.62561035]
[-116.50977325 733.56604004]
[-131.28898621 731.00189209]
[-143.58901978 722.41650391]
[-151.09184265 709.42773438]
[-152.38352966 694.48345947]
[-147.22065735 680.39996338]
[-136.57498169 669.83062744]
[-131.47723389 655.72338867]
[-126.37948608 641.61621094]
[-121.28173828 627.50903320]
[-116.18398285 613.40185547]
[-111.08623505 599.29461670]
[-105.98848724 585.18743896]
[-113.37806702 583.90521240]
[-124.61511230 593.84149170]
[-135.85215759 603.77770996]
[-147.08920288 613.71392822]
[-158.32624817 623.65020752]
[-169.56329346 633.58642578]
[-167.72216797 650.41400146]
[-176.19888306 664.87414551]
[-191.47517395 671.35766602]
[-207.44157410 667.48718262]
[-218.55583191 677.56054688]
[-229.67010498 687.63397217]
[-240.78436279 697.70733643]
[-251.89863586 707.78070068]
[-262.88845825 717.98974609]
[-273.75216675 728.33282471]
[-284.61587524 738.67596436]
[-291.91812134 753.97668457]
[-308.64239502 751.19549561]
[-310.59960938 734.35491943]
[-294.95898438 727.81225586]
[-284.09527588 717.46911621]
[-273.23156738 707.12603760]
[-272.21945190 702.48516846]
[-268.29867554 698.42089844]
[-261.97201538 696.66644287]
[-250.85775757 686.59307861]
[-239.74348450 676.51965332]
[-228.62922668 666.44628906]
[-217.51495361 656.37292480]
[-220.17935181 643.30688477]
[-216.01304626 630.52569580]
[-206.00053406 621.39416504]
[-192.67982483 618.37133789]
[-179.49952698 622.34936523]
[-168.26248169 612.41314697]
[-157.02543640 602.47686768]
[-145.78839111 592.54064941]
[-134.55134583 582.60443115]
[-123.31430054 572.66821289]
[-118.51412201 567.04449463]
[-112.99987030 562.79138184]
[-107.10406494 559.96600342]
[-101.15351105 558.55175781]
[-95.45385742 558.46246338]
[-90.27558899 559.55029297]
[-85.84223938 561.61572266]
[-80.61595917 547.55560303]
[-75.38967896 533.49554443]
[-70.16339874 519.43542480]
[-64.93711853 505.37536621]
[-69.68527222 494.26913452]
[-65.46851349 482.52410889]
[-54.02959442 476.60534668]
[-48.63117218 462.61047363]
[-43.23274612 448.61557007]
[-37.83432007 434.62066650]
[-49.37828445 426.14822388]
[-58.34277344 414.96649170]
[-64.11161804 401.83404541]
[-66.28569031 387.64385986]
[-64.71054077 373.36254883]
[-59.48734665 359.96463013]
[-50.96641159 348.36602783]
[-39.72371292 339.36129761]
[-26.52194977 333.56939697]
[-12.25881672 331.39099121]
[2.09405303 332.98083496]
[7.66381073 319.05325317]
[13.23356915 305.12564087]
[18.80332756 291.19805908]
[24.37308502 277.27047729]
[29.94284248 263.34286499]
[35.51259995 249.41528320]
[41.08235931 235.48770142]
[32.13112259 218.15808105]
[38.95883560 199.56034851]
[57.56367874 191.90571594]
[62.61702728 177.78256226]
[67.67037201 163.65939331]
[72.72372437 149.53623962]
[77.77706909 135.41307068]
[82.83042145 121.28991699]
[87.88376617 107.16675568]
[80.74542236 120.35932922]
[69.79817963 130.61398315]
[56.16785812 136.87611389]
[41.25620270 138.50172424]
[26.59674454 135.32362366]
[13.69706917 127.66867065]
[3.88378668 116.32408905]
[-1.83389866 102.45656586]
[-2.86797619 87.49225616]
[0.88789922 72.97008514]
[9.04747105 60.38352966]
[20.77160454 51.02699661]
[34.85457993 45.86272049]
[49.84809875 45.42179108]
[64.21021271 49.74956131]
[76.46392059 58.40095901]
[85.34903717 70.48626709]
[89.95172119 84.76198578]
[87.56884766 69.95246124]
[85.18597412 55.14294434]
[82.80310059 40.33342361]
[72.03750610 27.96273041]
[77.62319946 12.54416943]
[93.81410217 9.93903160]
[103.95439911 22.82725906]
[97.61262512 37.95055008]
[99.99549866 52.76007080]
[102.37836456 67.56959534]
[104.76123810 82.37911224]
[112.23358154 83.02259064]
[113.52054596 68.07790375]
[122.10717010 55.77872467]
[128.46524048 69.36486053]
[127.17827606 84.30955505]
[134.65061951 84.95303345]
[139.53027344 70.76892090]
[144.40992737 56.58481216]
[149.28958130 42.40070343]
[146.46247864 26.83413696]
[157.91923523 17.31615829]
[162.79888916 3.13204813]
[159.13598633 -12.85279369]
[171.33038330 -23.81767273]
[186.83753967 -18.48286057]
[189.70501709 -2.33635616]
[176.98300171 8.01170254]
[172.10334778 22.19581223]
[175.27947998 36.74783707]
[163.47369385 47.28035736]
[158.59403992 61.46446609]
[153.71438599 75.64857483]
[148.83473206 89.83268738]
[160.71685791 98.98883057]
[172.59793091 108.14417267]
[185.06997681 99.81061554]
[197.54200745 91.47706604]
[210.01405334 83.14350891]
[217.18986511 69.04321289]
[232.07081604 68.40565491]
[244.54286194 60.07209778]
[257.01492310 51.73854446]
[269.48696899 43.40499115]
[281.95898438 35.07143784]
[294.43103027 26.73788452]
[292.75244141 11.52470398]
[298.34683228 -2.72174835]
[309.92864990 -12.72774124]
[324.83651733 -16.19396973]
[339.64465332 -12.32392216]
[350.95031738 -2.00690460]
[356.15548706 12.38630676]
[354.06411743 27.54825592]
[345.15676880 39.99484253]
[331.48025513 46.86592484]
[316.17736816 46.58258438]
[302.76458740 39.20993042]
[290.29254150 47.54348373]
[277.82049561 55.87703705]
[265.34844971 64.21058655]
[252.87641907 72.54414368]
[240.40437317 80.87770081]
[234.12065125 94.38191986]
[218.34761047 95.61555481]
[205.87556458 103.94911194]
[193.40351868 112.28266144]
[180.93147278 120.61621857]
[132.40534973 135.34246826]
[102.00692749 112.22010040]
[96.95358276 126.34326172]
[91.90023041 140.46641541]
[86.84688568 154.58958435]
[81.79353333 168.71273804]
[76.74018860 182.83590698]
[71.68684387 196.95906067]
[78.47895813 205.12173462]
[81.26368713 215.28550720]
[79.60621643 225.61108398]
[73.86946869 234.25833130]
[65.13722229 239.71424866]
[55.00994873 241.05744934]
[49.44019318 254.98504639]
[43.87043381 268.91262817]
[38.30067444 282.84024048]
[32.73091888 296.76782227]
[27.16115952 310.69540405]
[21.59140205 324.62301636]
[16.02164459 338.55059814]
[28.43281364 348.23129272]
[37.60524750 361.00482178]
[42.80244064 375.83142090]
[43.61104202 391.50714111]
[39.97372437 406.76150513]
[32.19314575 420.36053467]
[20.90681076 431.20645142]
[7.03481722 438.42642212]
[-8.29513645 441.44274902]
[-23.83942795 440.01910400]
[-29.23785400 454.01400757]
[-34.63628006 468.00888062]
[-40.03470230 482.00378418]
[-36.77217484 500.14001465]
[-50.87703323 510.60162354]
[-56.10331345 524.66174316]
[-61.32959366 538.72180176]
[-66.55587769 552.78186035]
[-71.78215790 566.84197998]
[-70.67868805 581.80133057]
[-63.44593048 594.94238281]
[-56.21317291 608.08343506]
[-48.98041534 621.22448730]
[-41.66716385 634.32092285]
[-34.27369308 647.37219238]
[-26.88021851 660.42352295]
[-19.48674583 673.47485352]
[-4.47056007 679.12225342]
[0.33925733 694.42736816]
[-8.74697399 707.64929199]
[-24.75907516 708.64538574]
[-35.41393280 696.65148926]
[-32.53805161 680.86828613]
[-39.93152237 667.81701660]
[-47.32499695 654.76568604]
[-54.71847153 641.71435547]
[-60.73255539 637.45587158]
[-62.12146759 628.45721436]
[-69.35422516 615.31616211]
[-76.58698273 602.17510986]
[-83.81974030 589.03405762]
[-91.20932007 587.75189209]
[-91.16213226 602.75177002]
[-91.11495209 617.75170898]
[-91.06776428 632.75164795]
[-91.02057648 647.75158691]
[-90.97339630 662.75152588]
[-90.92620850 677.75140381]
[-84.46386719 691.28796387]
[-84.34675598 706.28753662]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 54]
[16 53]
[17 52]
[18 51]
[19 50]
[20 49]
[24 44]
[25 43]
[26 42]
[27 41]
[28 40]
[29 37]
[30 36]
[31 35]
[61 224]
[62 223]
[63 222]
[64 221]
[65 220]
[68 218]
[69 217]
[70 216]
[71 215]
[82 205]
[83 204]
[84 203]
[85 202]
[86 201]
[87 200]
[88 199]
[89 198]
[92 192]
[93 191]
[94 190]
[95 189]
[96 188]
[97 187]
[98 186]
[116 127]
[117 126]
[118 125]
[119 124]
[133 150]
[134 149]
[135 148]
[136 147]
[138 145]
[139 144]
[152 184]
[153 183]
[154 182]
[155 181]
[157 179]
[158 178]
[159 177]
[160 176]
[161 175]
[162 174]
[225 246]
[226 245]
[227 244]
[228 243]
[229 241]
[230 240]
[231 239]
[232 238]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
