%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:34:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAGCUGGCUGAGCCGGCCUUUGGUAACGCCACCUGCACUUCUGGGGGCGUCGAGCCUGGCGGUAGAAUCUUCCCAGUAGGCGGCGCGGGAGGGAAAAGAGGAUUGAGGGGCUAGGCCGGGCGGAUCCCGUCCUCCCCCGAUGUGAGCAGUUUUCCGAAACCCCGUCAGGCGAAGGCUGCCCAGAGAGGUGGAGUCGGUAGCGGGGCCGGGAAC\
) } def
/len { sequence length } bind def

/coor [
[-22.25126076 774.22570801]
[-25.65569496 779.27911377]
[-30.30253029 783.15789795]
[-35.80923843 785.57189941]
[-41.73054504 786.35046387]
[-46.86084747 800.44586182]
[-51.99114990 814.54125977]
[-57.12145233 828.63665771]
[-62.25175476 842.73205566]
[-67.38205719 856.82745361]
[-67.11766052 873.77929688]
[-83.33386230 878.72613525]
[-92.57644653 864.51306152]
[-81.47744751 851.69714355]
[-76.34714508 837.60174561]
[-71.21684265 823.50634766]
[-66.08654022 809.41094971]
[-60.95623779 795.31555176]
[-55.82593536 781.22015381]
[-62.77885818 758.57067871]
[-44.10863876 742.85504150]
[-40.43748856 728.31121826]
[-36.76633835 713.76739502]
[-33.09518814 699.22357178]
[-29.42403793 684.67974854]
[-25.75288773 670.13592529]
[-33.58374786 657.51794434]
[-30.06786156 642.71612549]
[-16.77987671 634.58795166]
[-13.10872650 620.04418945]
[-9.43757629 605.50036621]
[-13.82465458 591.26647949]
[-2.94516134 579.77966309]
[0.72598881 565.23583984]
[4.39713907 550.69201660]
[-6.78680897 534.73718262]
[-2.56016946 515.40405273]
[14.78877258 505.26339722]
[17.82203674 490.57327271]
[20.85530090 475.88317871]
[23.88856316 461.19305420]
[26.92182732 446.50296021]
[29.95509148 431.81283569]
[32.98835373 417.12274170]
[24.61455917 404.85833740]
[27.48145294 389.91726685]
[40.40224457 381.21722412]
[43.43550873 366.52713013]
[46.46877289 351.83700562]
[49.50203705 337.14691162]
[52.42839050 322.43511963]
[55.24768066 307.70245361]
[58.06697464 292.96978760]
[48.03599548 279.46884155]
[50.93199921 262.55764771]
[65.44399261 252.78605652]
[68.04872131 238.01394653]
[70.65344238 223.24182129]
[73.25816345 208.46971130]
[75.86288452 193.69760132]
[78.46760559 178.92547607]
[81.07233429 164.15336609]
[83.67705536 149.38124084]
[86.28177643 134.60913086]
[77.17263794 130.17639160]
[69.46117401 123.35694885]
[63.76895523 114.58369446]
[60.58532333 104.45012665]
[60.22631836 93.67035675]
[62.80560684 83.02888489]
[68.21984100 73.32347870]
[76.15009308 65.30544281]
[66.01624298 54.24628067]
[55.88238525 43.18711853]
[45.74853134 32.12796021]
[35.61468124 21.06879997]
[17.92778587 15.93856621]
[14.80471039 -1.33191323]
[4.51108551 -12.24251747]
[-11.41882324 -14.14451027]
[-19.74107170 -27.86018562]
[-14.07154465 -42.86804962]
[1.24058342 -47.65535736]
[14.44915771 -38.54969025]
[15.42168999 -22.53614235]
[25.71531487 -11.62553787]
[37.79124451 -10.96119022]
[46.45627594 -1.95892680]
[46.67383957 10.93494606]
[56.80769348 21.99410629]
[66.94154358 33.05326462]
[77.07540131 44.11242676]
[87.20925140 55.17158508]
[102.10782623 53.43019104]
[109.41810608 40.33210754]
[116.72837830 27.23402023]
[124.03865814 14.13593388]
[131.34893799 1.03784728]
[138.65921021 -12.06023884]
[128.10217285 -28.14209938]
[127.18930054 -47.27584839]
[136.09089661 -64.14491272]
[152.26177979 -74.10432434]
[171.16833496 -74.45965576]
[177.70465088 -87.96063995]
[184.24098206 -101.46161652]
[190.77729797 -114.96260071]
[191.69934082 -124.04650116]
[197.50811768 -128.61135864]
[204.24011230 -142.01585388]
[210.97209167 -155.42033386]
[217.70408630 -168.82482910]
[217.70147705 -175.43022156]
[220.59812927 -180.31414795]
[224.83178711 -182.51701355]
[231.95079041 -195.72003174]
[239.06979370 -208.92304993]
[238.80897522 -224.74211121]
[251.65972900 -232.27253723]
[258.77871704 -245.47555542]
[265.89773560 -258.67858887]
[273.01675415 -271.88159180]
[269.81152344 -287.60122681]
[280.21331787 -299.81524658]
[296.24273682 -299.15414429]
[305.60339355 -286.12503052]
[301.11459351 -270.72274780]
[286.21975708 -264.76260376]
[279.10076904 -251.55958557]
[271.98175049 -238.35655212]
[264.86273193 -225.15353394]
[265.63275146 -210.27885437]
[252.27281189 -201.80404663]
[245.15380859 -188.60102844]
[238.03480530 -175.39799500]
[231.10856628 -162.09283447]
[224.37658691 -148.68835449]
[217.64459229 -135.28385925]
[210.91261292 -121.87937164]
[204.27827454 -108.42627716]
[197.74195862 -94.92530060]
[191.20562744 -81.42431641]
[184.66931152 -67.92333221]
[192.29170227 -59.93679428]
[197.13432312 -49.98579788]
[198.72343445 -39.00685501]
[196.89234924 -28.03872299]
[191.79872131 -18.12409973]
[183.91117859 -10.21052361]
[173.96618652 -5.05980635]
[162.89933777 -3.17472100]
[151.75729370 -4.74996328]
[144.44702148 8.34812355]
[137.13674927 21.44620895]
[129.82646179 34.54429626]
[122.51618958 47.64238358]
[115.20591736 60.74046707]
[128.56973267 70.03047943]
[137.21517944 83.49929047]
[140.00027466 98.98474884]
[136.70465088 114.09254456]
[128.03230286 126.56630707]
[115.47386169 134.62448120]
[101.05389404 137.21385193]
[98.44917297 151.98597717]
[95.84444427 166.75808716]
[93.23972321 181.53019714]
[90.63500214 196.30232239]
[88.03028107 211.07443237]
[85.42556000 225.84655762]
[82.82083130 240.61866760]
[80.21611023 255.39077759]
[89.15916443 265.45932007]
[90.64990997 278.64755249]
[84.36685181 290.11694336]
[72.79964447 295.78906250]
[69.98035431 310.52172852]
[67.16106415 325.25439453]
[68.62152863 334.26742554]
[64.19214630 340.18014526]
[61.15888214 354.87026978]
[58.12561798 369.56036377]
[55.09235382 384.25048828]
[63.51052094 397.35668945]
[60.22509384 412.21133423]
[47.67846298 420.15600586]
[44.64519882 434.84609985]
[41.61193848 449.53622437]
[38.57867432 464.22631836]
[35.54541016 478.91644287]
[32.51214600 493.60653687]
[29.47888184 508.29666138]
[37.37430191 515.46228027]
[41.55303955 525.18371582]
[41.32329941 535.68200684]
[36.79345322 545.06591797]
[28.84047699 551.67285156]
[18.94095802 554.36315918]
[15.26980686 568.90698242]
[11.59865761 583.45080566]
[15.72314930 598.72491455]
[5.10624170 609.17150879]
[1.43509161 623.71533203]
[-2.23605847 638.25915527]
[5.60241032 651.72003174]
[1.67215955 666.41723633]
[-11.20906925 673.80706787]
[-14.88021946 688.35089111]
[-18.55136871 702.89471436]
[-22.22251892 717.43853760]
[-25.89366913 731.98236084]
[-29.56481934 746.52618408]
[-24.96612167 750.82464600]
[-21.76796722 756.19964600]
[-20.20440292 762.21392822]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 19]
[6 18]
[7 17]
[8 16]
[9 15]
[10 14]
[21 212]
[22 211]
[23 210]
[24 209]
[25 208]
[26 207]
[29 204]
[30 203]
[31 202]
[33 200]
[34 199]
[35 198]
[38 192]
[39 191]
[40 190]
[41 189]
[42 188]
[43 187]
[44 186]
[47 183]
[48 182]
[49 181]
[50 180]
[51 178]
[52 177]
[53 176]
[56 172]
[57 171]
[58 170]
[59 169]
[60 168]
[61 167]
[62 166]
[63 165]
[64 164]
[72 93]
[73 92]
[74 91]
[75 90]
[76 89]
[78 86]
[79 85]
[94 157]
[95 156]
[96 155]
[97 154]
[98 153]
[99 152]
[104 143]
[105 142]
[106 141]
[107 140]
[109 139]
[110 138]
[111 137]
[112 136]
[115 135]
[116 134]
[117 133]
[119 131]
[120 130]
[121 129]
[122 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
