%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:12:07 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MRPL32)
} def

/sequence { (\
CAUGCUGAAAGCAGGGGCGGGACCGGGGCGGUCUUCCAGCAGGGAAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.045715286 ubox
2 6 0.037216507 ubox
3 13 0.394831741 ubox
3 19 0.127127249 ubox
3 41 0.691461399 ubox
4 12 0.438279377 ubox
4 18 0.189756897 ubox
4 29 0.004001641 ubox
4 32 0.005365248 ubox
4 40 0.767531454 ubox
5 11 0.438250613 ubox
5 14 0.190249098 ubox
5 15 0.017919273 ubox
5 16 0.026538805 ubox
5 17 0.188723190 ubox
5 20 0.016705576 ubox
5 28 0.003998082 ubox
5 31 0.005638408 ubox
5 39 0.767554712 ubox
5 42 0.100861450 ubox
5 43 0.045438391 ubox
5 44 0.143227659 ubox
6 10 0.394836063 ubox
6 13 0.193177079 ubox
6 14 0.016521631 ubox
6 15 0.031832696 ubox
6 16 0.184871136 ubox
6 19 0.016829835 ubox
6 27 0.003955402 ubox
6 30 0.005629041 ubox
6 38 0.766429517 ubox
6 41 0.100994862 ubox
6 42 0.043642507 ubox
6 43 0.142954043 ubox
7 12 0.195349718 ubox
7 18 0.015690457 ubox
7 29 0.005218257 ubox
7 33 0.019775378 ubox
7 36 0.088686944 ubox
7 37 0.738406176 ubox
7 40 0.082501381 ubox
8 32 0.021491104 ubox
8 34 0.005571117 ubox
8 35 0.115782823 ubox
9 34 0.065106390 ubox
9 35 0.104258914 ubox
10 34 0.070915320 ubox
10 35 0.019848384 ubox
11 18 0.722113534 ubox
11 29 0.031815774 ubox
11 32 0.014611525 ubox
11 33 0.040073601 ubox
11 34 0.005260851 ubox
11 40 0.359409351 ubox
12 17 0.721776189 ubox
12 28 0.032308638 ubox
12 31 0.031918265 ubox
12 39 0.360795944 ubox
13 34 0.003875158 ubox
13 35 0.015149852 ubox
14 24 0.010955477 ubox
14 33 0.004075264 ubox
14 34 0.019104660 ubox
14 35 0.004176681 ubox
14 36 0.039588800 ubox
14 37 0.279227402 ubox
15 23 0.010939804 ubox
15 24 0.035178103 ubox
15 32 0.003946750 ubox
15 33 0.020472370 ubox
15 34 0.005177442 ubox
15 35 0.033855643 ubox
15 36 0.282475807 ubox
15 37 0.372523215 ubox
16 23 0.035198650 ubox
16 24 0.019317336 ubox
16 32 0.020860380 ubox
16 33 0.005668971 ubox
16 34 0.015929783 ubox
16 35 0.236505426 ubox
16 36 0.377146992 ubox
16 37 0.323582461 ubox
17 23 0.019274089 ubox
17 29 0.016985223 ubox
17 32 0.005658584 ubox
17 33 0.010087931 ubox
17 34 0.089227199 ubox
17 35 0.290999726 ubox
17 36 0.330744438 ubox
17 40 0.152249619 ubox
18 25 0.023841024 ubox
18 28 0.016986779 ubox
18 30 0.021331308 ubox
18 31 0.005400729 ubox
18 39 0.152323037 ubox
19 24 0.023581997 ubox
19 29 0.021358573 ubox
19 33 0.009021428 ubox
19 34 0.061060976 ubox
19 35 0.690176738 ubox
19 36 0.189091504 ubox
19 37 0.118360215 ubox
20 32 0.004263478 ubox
20 33 0.049769143 ubox
20 34 0.936997342 ubox
20 35 0.134665507 ubox
20 36 0.115907457 ubox
20 37 0.026917134 ubox
21 32 0.026106576 ubox
21 33 0.995695117 ubox
21 34 0.015543339 ubox
21 35 0.030416402 ubox
21 36 0.024769493 ubox
22 32 0.997552260 ubox
22 34 0.017384363 ubox
22 35 0.019341146 ubox
23 31 0.998398601 ubox
23 44 0.003497610 ubox
24 30 0.998311286 ubox
24 43 0.003509463 ubox
25 29 0.933920831 ubox
25 34 0.007362568 ubox
25 36 0.004542862 ubox
26 33 0.007940678 ubox
26 35 0.004564802 ubox
27 32 0.007165899 ubox
27 33 0.003269894 ubox
27 34 0.004604975 ubox
28 33 0.004536359 ubox
28 40 0.005984447 ubox
29 39 0.005990411 ubox
30 37 0.006590875 ubox
31 36 0.006785325 ubox
34 45 0.100669169 ubox
34 46 0.128665222 ubox
34 47 0.004189653 ubox
35 43 0.005020090 ubox
35 44 0.145625285 ubox
35 45 0.226181779 ubox
35 46 0.009266653 ubox
36 42 0.006754610 ubox
36 43 0.181715622 ubox
36 44 0.244004044 ubox
37 42 0.182107663 ubox
37 43 0.243563588 ubox
3 41 0.9500000 lbox
4 40 0.9500000 lbox
5 39 0.9500000 lbox
6 38 0.9500000 lbox
7 37 0.9500000 lbox
11 18 0.9500000 lbox
12 17 0.9500000 lbox
19 35 0.9500000 lbox
20 34 0.9500000 lbox
21 33 0.9500000 lbox
22 32 0.9500000 lbox
23 31 0.9500000 lbox
24 30 0.9500000 lbox
25 29 0.9500000 lbox
showpage
end
%%EOF
