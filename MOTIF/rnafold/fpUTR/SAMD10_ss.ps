%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:24:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACAGGGCUCGGCGGCAGGUGCCUCGUCGCGCACACUCGCGGGCCGCGGGGACCGGCUCGGGCGCGGGGCCGGCUGGGGCGGGGCGGGGCGGCGGCGCGCGUUCCCCGCCGGCCACACCGGCCGCCCUGCACUCGGCGAGGGGCGUGUGCGCGGGCCUGGCACCCGCGGGCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.07649994 561.07324219]
[77.04497528 565.38452148]
[62.78001022 558.97790527]
[56.01708603 544.87835693]
[59.94945145 529.74328613]
[72.72035980 520.71899414]
[73.79044342 505.75723267]
[74.86053467 490.79544067]
[75.93061829 475.83364868]
[77.00070953 460.87188721]
[78.07079315 445.91009521]
[79.14088440 430.94830322]
[76.47311401 424.02978516]
[80.36594391 415.72979736]
[81.70291138 400.78948975]
[83.03988647 385.84921265]
[81.04292297 382.90628052]
[80.39041138 378.84057617]
[81.59854889 374.30307007]
[84.86933136 370.15231323]
[87.00405121 355.30499268]
[89.13877869 340.45764160]
[91.27349854 325.61032104]
[93.40821838 310.76300049]
[81.28179932 299.72030640]
[78.08337402 283.46502686]
[85.26464844 268.35144043]
[100.18013763 260.40774536]
[102.04950714 245.52468872]
[103.91888428 230.64163208]
[105.78825378 215.75857544]
[107.65762329 200.87550354]
[109.52700043 185.99244690]
[111.39636993 171.10939026]
[113.26574707 156.22633362]
[115.13511658 141.34327698]
[117.00448608 126.46021271]
[97.22728729 128.80596924]
[81.73577118 119.09729004]
[76.32458496 103.34957886]
[61.56291962 100.68627930]
[46.60823059 105.85037994]
[35.45696259 95.97624207]
[20.69529533 93.31295013]
[5.91044474 90.78150177]
[-8.89640903 88.38211060]
[-24.02676392 94.70700836]
[-36.90367126 84.55233765]
[-34.28047180 68.36435699]
[-18.85568810 62.79586411]
[-6.49701643 73.57525635]
[8.30983734 75.97464752]
[15.43861103 73.93415070]
[23.35859299 78.55127716]
[38.12026215 81.21457672]
[52.01909256 75.85997772]
[64.22621918 85.92460632]
[78.98788452 88.58790588]
[101.14653778 72.34162140]
[128.78720093 87.32748413]
[134.02915955 73.27323914]
[139.27113342 59.21899033]
[144.51309204 45.16474533]
[142.08628845 29.53076744]
[153.78347778 20.30986404]
[159.02543640 6.25561762]
[164.26741028 -7.79862833]
[169.50936890 -21.85287476]
[174.75132751 -35.90711975]
[179.99330139 -49.96136475]
[185.23526001 -64.01560974]
[185.30578613 -73.18289185]
[190.69824219 -78.27252960]
[196.19023132 -92.23097992]
[201.68220520 -106.18942261]
[207.17419434 -120.14786530]
[212.66616821 -134.10630798]
[218.15815735 -148.06474304]
[223.27447510 -162.16522217]
[228.01147461 -176.39761353]
[232.74845886 -190.62998962]
[227.67918396 -202.51322937]
[231.94131470 -214.28335571]
[242.72973633 -219.79942322]
[247.72001648 -233.94499207]
[252.71028137 -248.09056091]
[257.70056152 -262.23614502]
[262.69082642 -276.38171387]
[267.68112183 -290.52728271]
[272.67138672 -304.67285156]
[272.57827759 -313.83993530]
[277.87902832 -319.02502441]
[283.12100220 -333.07925415]
[288.36294556 -347.13351440]
[293.60491943 -361.18774414]
[288.27514648 -376.31961060]
[296.90447998 -389.84417725]
[312.87319946 -391.38659668]
[323.93151855 -379.76361084]
[321.59640503 -363.89141846]
[307.65914917 -355.94577026]
[302.41720581 -341.89154053]
[297.17523193 -327.83728027]
[291.93325806 -313.78305054]
[286.81695557 -299.68258667]
[281.82669067 -285.53701782]
[276.83639526 -271.39144897]
[271.84613037 -257.24584961]
[266.85586548 -243.10029602]
[261.86557007 -228.95472717]
[256.87530518 -214.80915833]
[261.03036499 -197.77333069]
[246.98085022 -185.89300537]
[242.24386597 -171.66061401]
[237.50686646 -157.42822266]
[238.77351379 -154.10493469]
[238.47354126 -149.99813843]
[236.25427246 -145.86009216]
[232.11659241 -142.57276917]
[226.62461853 -128.61431885]
[221.13262939 -114.65588379]
[215.64065552 -100.69744110]
[210.14866638 -86.73899078]
[204.65669250 -72.78054810]
[199.28950500 -58.77364731]
[194.04754639 -44.71940231]
[188.80557251 -30.66515732]
[183.56361389 -16.61091232]
[178.32165527 -2.55666542]
[173.07969666 11.49758053]
[167.83772278 25.55182648]
[170.63946533 40.18054962]
[158.56733704 50.40670776]
[153.32537842 64.46095276]
[148.08340454 78.51519775]
[142.84144592 92.56944275]
[149.31521606 106.10053253]
[163.54760742 110.83752441]
[178.47959900 104.97106171]
[192.30355835 113.11215973]
[194.41494751 129.01567078]
[183.19407654 140.48178101]
[167.24864197 138.71466064]
[158.81060791 125.06991577]
[144.57823181 120.33291626]
[131.88754272 128.32958984]
[130.01817322 143.21264648]
[128.14880371 158.09570312]
[126.27943420 172.97875977]
[124.41005707 187.86181641]
[122.54068756 202.74488831]
[120.67131042 217.62794495]
[118.80194092 232.51100159]
[116.93257141 247.39405823]
[115.06319427 262.27713013]
[125.80368805 270.94528198]
[130.81098938 283.69061279]
[128.87390137 297.13711548]
[120.60563660 307.77966309]
[108.25553894 312.89773560]
[106.12081909 327.74505615]
[103.98609924 342.59237671]
[101.85137177 357.43969727]
[99.71665192 372.28701782]
[97.98018646 387.18618774]
[96.64321136 402.12646484]
[95.30624390 417.06677246]
[94.10266876 432.01840210]
[93.03257751 446.98019409]
[91.96248627 461.94195557]
[90.89240265 476.90374756]
[89.82231140 491.86553955]
[88.75222778 506.82730103]
[87.68213654 521.78912354]
[99.03876495 532.53900146]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 174]
[7 173]
[8 172]
[9 171]
[10 170]
[11 169]
[12 168]
[14 167]
[15 166]
[16 165]
[20 164]
[21 163]
[22 162]
[23 161]
[24 160]
[28 155]
[29 154]
[30 153]
[31 152]
[32 151]
[33 150]
[34 149]
[35 148]
[36 147]
[37 146]
[40 58]
[41 57]
[43 55]
[44 54]
[45 52]
[46 51]
[60 136]
[61 135]
[62 134]
[63 133]
[65 131]
[66 130]
[67 129]
[68 128]
[69 127]
[70 126]
[71 125]
[73 124]
[74 123]
[75 122]
[76 121]
[77 120]
[78 119]
[79 115]
[80 114]
[81 113]
[84 111]
[85 110]
[86 109]
[87 108]
[88 107]
[89 106]
[90 105]
[92 104]
[93 103]
[94 102]
[95 101]
[137 145]
[138 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
