%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:21:23 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (LACTB2)
} def

/sequence { (\
ACGUGGACGCUACUCGCUAUCCCCGGCCUGUUGGCUUCUUCCGCGCUGGAGUAUCCAGAUAGGCGACACGCCGGCGGGCGGCUGAGGCGGGA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 9 0.328891381 ubox
2 16 0.006561334 ubox
2 25 0.018623589 ubox
2 89 0.029670989 ubox
3 8 0.326596001 ubox
3 10 0.241138648 ubox
3 13 0.284687061 ubox
3 15 0.006252149 ubox
3 17 0.036081216 ubox
3 20 0.030249461 ubox
3 24 0.018760705 ubox
3 88 0.029807844 ubox
4 9 0.231456306 ubox
4 12 0.310337608 ubox
4 16 0.036071713 ubox
4 19 0.032055498 ubox
4 87 0.029562615 ubox
5 11 0.316391945 ubox
5 14 0.010462940 ubox
5 15 0.035880933 ubox
5 18 0.032528342 ubox
5 21 0.003587167 ubox
5 22 0.035671847 ubox
6 10 0.310190884 ubox
6 13 0.019669997 ubox
6 14 0.029116730 ubox
6 15 0.006712926 ubox
6 17 0.032525561 ubox
6 20 0.003230671 ubox
6 21 0.036220968 ubox
7 14 0.007282079 ubox
7 20 0.035535192 ubox
8 16 0.032342255 ubox
8 89 0.447370875 ubox
9 15 0.031386602 ubox
9 17 0.039082415 ubox
9 82 0.010309708 ubox
9 88 0.451215205 ubox
10 16 0.039114746 ubox
10 81 0.010313613 ubox
10 86 0.007737696 ubox
10 87 0.449624185 ubox
10 90 0.039336340 ubox
10 91 0.022534561 ubox
11 80 0.009306544 ubox
11 84 0.006590835 ubox
11 85 0.010188624 ubox
11 86 0.210109702 ubox
11 89 0.038043365 ubox
11 90 0.019941674 ubox
12 83 0.012830673 ubox
13 78 0.009175397 ubox
13 81 0.005722077 ubox
13 86 0.398705523 ubox
13 87 0.005336898 ubox
13 90 0.045641257 ubox
13 91 0.831733794 ubox
14 77 0.009172136 ubox
14 81 0.024834487 ubox
14 85 0.439257786 ubox
14 86 0.003991303 ubox
14 89 0.008050546 ubox
14 90 0.868610349 ubox
14 91 0.016478461 ubox
14 92 0.004837458 ubox
15 76 0.009186859 ubox
15 80 0.027829533 ubox
15 84 0.441628949 ubox
15 89 0.886476862 ubox
15 90 0.014164075 ubox
15 91 0.004925140 ubox
16 75 0.009179909 ubox
16 79 0.028000968 ubox
16 82 0.445119096 ubox
16 83 0.093505919 ubox
16 88 0.887052767 ubox
17 74 0.007264083 ubox
17 78 0.027812988 ubox
17 81 0.454795914 ubox
17 86 0.041136907 ubox
17 87 0.885946467 ubox
18 73 0.003902919 ubox
18 77 0.016337928 ubox
18 80 0.450134108 ubox
18 84 0.021007835 ubox
18 85 0.056935149 ubox
18 86 0.818607630 ubox
19 83 0.040719922 ubox
20 77 0.017964444 ubox
20 78 0.431925356 ubox
20 81 0.003649066 ubox
20 85 0.635085416 ubox
20 92 0.021488400 ubox
21 76 0.019919386 ubox
21 77 0.454243545 ubox
21 78 0.012259477 ubox
21 80 0.004031115 ubox
21 81 0.052842052 ubox
21 84 0.641129342 ubox
21 86 0.004603674 ubox
21 87 0.004502671 ubox
21 91 0.025519816 ubox
22 76 0.454263277 ubox
22 77 0.012000885 ubox
22 80 0.052825657 ubox
22 81 0.138923464 ubox
22 86 0.006074993 ubox
22 90 0.025194556 ubox
22 91 0.050942982 ubox
23 74 0.455027189 ubox
23 76 0.008568585 ubox
23 80 0.136022977 ubox
23 81 0.845321534 ubox
23 89 0.024647893 ubox
23 90 0.051445744 ubox
23 91 0.036426704 ubox
24 73 0.455196742 ubox
24 80 0.845515418 ubox
24 84 0.006917442 ubox
24 89 0.051532679 ubox
24 90 0.036510037 ubox
25 36 0.003391482 ubox
25 72 0.455212160 ubox
25 79 0.602560850 ubox
25 83 0.007330590 ubox
25 88 0.038558628 ubox
26 35 0.005161030 ubox
26 64 0.003274267 ubox
26 71 0.455217659 ubox
26 79 0.652004839 ubox
26 82 0.006025348 ubox
26 88 0.052744630 ubox
27 34 0.005201308 ubox
27 63 0.003534516 ubox
27 70 0.454808610 ubox
27 74 0.003325769 ubox
27 77 0.101094041 ubox
27 78 0.882016625 ubox
27 81 0.005587332 ubox
27 87 0.062109309 ubox
27 91 0.010117240 ubox
28 33 0.005224087 ubox
28 62 0.003774169 ubox
28 73 0.003306228 ubox
28 76 0.099664145 ubox
28 77 0.882315099 ubox
28 80 0.005014195 ubox
28 86 0.062079156 ubox
28 90 0.010150686 ubox
29 61 0.003787680 ubox
29 68 0.452363888 ubox
29 76 0.881824616 ubox
29 85 0.055462495 ubox
29 89 0.010137786 ubox
30 60 0.003770320 ubox
30 67 0.455180341 ubox
30 75 0.888063461 ubox
30 88 0.009937559 ubox
31 59 0.003730962 ubox
31 66 0.455050046 ubox
31 74 0.887592507 ubox
31 85 0.024955412 ubox
31 87 0.009606133 ubox
32 57 0.003369393 ubox
32 65 0.453684691 ubox
32 73 0.885186977 ubox
32 84 0.041583588 ubox
32 86 0.007330878 ubox
33 42 0.005179946 ubox
33 56 0.004218912 ubox
33 64 0.449814393 ubox
33 72 0.888071650 ubox
33 83 0.060836258 ubox
34 38 0.004614118 ubox
34 41 0.005323138 ubox
34 44 0.032441662 ubox
34 52 0.005060156 ubox
34 55 0.004227508 ubox
34 64 0.065902705 ubox
34 71 0.888099369 ubox
34 82 0.062851228 ubox
35 43 0.032450932 ubox
35 51 0.005178797 ubox
35 62 0.413441012 ubox
35 63 0.086897763 ubox
35 70 0.887288385 ubox
35 81 0.062826870 ubox
36 50 0.005134374 ubox
36 59 0.004024775 ubox
36 61 0.405094227 ubox
36 62 0.083628204 ubox
36 66 0.084228809 ubox
36 80 0.061146482 ubox
36 86 0.003260028 ubox
37 49 0.005095288 ubox
37 50 0.005903633 ubox
37 59 0.172481048 ubox
37 61 0.074663075 ubox
37 63 0.020485121 ubox
37 65 0.082734924 ubox
37 66 0.628907695 ubox
37 85 0.003434543 ubox
38 48 0.005093437 ubox
38 49 0.005987941 ubox
38 51 0.011740533 ubox
38 58 0.175014844 ubox
38 62 0.025214802 ubox
38 63 0.015796375 ubox
38 65 0.632416637 ubox
38 78 0.014078166 ubox
38 80 0.010134496 ubox
38 84 0.003457213 ubox
39 48 0.005964957 ubox
39 50 0.010217055 ubox
39 51 0.067751656 ubox
39 57 0.157550862 ubox
39 58 0.009581437 ubox
39 59 0.042205748 ubox
39 61 0.026529828 ubox
39 62 0.015825943 ubox
39 63 0.010922243 ubox
39 66 0.329593382 ubox
39 77 0.004083721 ubox
39 78 0.011335021 ubox
40 49 0.008185897 ubox
40 50 0.157184311 ubox
40 57 0.005867891 ubox
40 58 0.014383422 ubox
40 59 0.047264771 ubox
40 61 0.016320496 ubox
40 62 0.008452762 ubox
40 63 0.107639906 ubox
40 65 0.334437526 ubox
40 66 0.089684059 ubox
40 78 0.058208668 ubox
41 48 0.008076756 ubox
41 49 0.157921151 ubox
41 58 0.038089744 ubox
41 62 0.109117341 ubox
41 63 0.877090036 ubox
41 65 0.065250807 ubox
41 77 0.062673447 ubox
41 78 0.003992719 ubox
41 81 0.003497064 ubox
42 48 0.157860986 ubox
42 62 0.878654274 ubox
42 65 0.150156545 ubox
42 76 0.062804171 ubox
42 77 0.003986860 ubox
42 80 0.003503404 ubox
43 47 0.097401917 ubox
43 52 0.060037590 ubox
43 64 0.162509367 ubox
43 75 0.062822063 ubox
43 79 0.003497413 ubox
44 51 0.061027626 ubox
44 63 0.161582032 ubox
44 65 0.013300075 ubox
44 74 0.062708763 ubox
44 76 0.004285894 ubox
44 78 0.003328769 ubox
45 52 0.015275309 ubox
45 64 0.013571061 ubox
45 75 0.004952815 ubox
46 51 0.015534447 ubox
46 58 0.981057496 ubox
46 62 0.023698340 ubox
46 63 0.012754503 ubox
46 74 0.004953338 ubox
47 57 0.983992457 ubox
47 61 0.018360762 ubox
47 62 0.009220682 ubox
47 73 0.004948217 ubox
48 56 0.985221983 ubox
48 60 0.010446483 ubox
48 72 0.004927205 ubox
49 55 0.984883525 ubox
49 71 0.004920642 ubox
50 54 0.856856105 ubox
51 67 0.005492073 ubox
51 69 0.004264836 ubox
52 66 0.005478559 ubox
52 68 0.004179225 ubox
55 63 0.008391187 ubox
56 62 0.008475983 ubox
62 72 0.063090899 ubox
63 71 0.063186452 ubox
64 70 0.063204472 ubox
65 69 0.059460214 ubox
81 88 0.020823340 ubox
82 87 0.020987774 ubox
82 90 0.006074286 ubox
82 91 0.004228733 ubox
83 89 0.006099711 ubox
83 90 0.004203878 ubox
84 88 0.005864339 ubox
8 89 0.9500000 lbox
9 88 0.9500000 lbox
10 87 0.9500000 lbox
13 86 0.9500000 lbox
14 85 0.9500000 lbox
15 84 0.9500000 lbox
16 82 0.9500000 lbox
17 81 0.9500000 lbox
18 80 0.9500000 lbox
20 78 0.9500000 lbox
21 77 0.9500000 lbox
22 76 0.9500000 lbox
23 74 0.9500000 lbox
24 73 0.9500000 lbox
25 72 0.9500000 lbox
26 71 0.9500000 lbox
27 70 0.9500000 lbox
29 68 0.9500000 lbox
30 67 0.9500000 lbox
31 66 0.9500000 lbox
32 65 0.9500000 lbox
33 64 0.9500000 lbox
35 62 0.9500000 lbox
36 61 0.9500000 lbox
46 58 0.9500000 lbox
47 57 0.9500000 lbox
48 56 0.9500000 lbox
49 55 0.9500000 lbox
50 54 0.9500000 lbox
showpage
end
%%EOF
