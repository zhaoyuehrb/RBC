%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:55:29 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KRT20)
} def

/sequence { (\
GAGACACACUCUGCCCCAACCAUCCUGAAGCUACAGGUGCUCCCUCCUGGAAUCUCCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.279707200 ubox
1 24 0.004288127 ubox
1 42 0.886005737 ubox
1 46 0.140314621 ubox
1 54 0.014361571 ubox
1 56 0.273448917 ubox
2 10 0.280176671 ubox
2 12 0.093561201 ubox
2 23 0.004253184 ubox
2 26 0.003353442 ubox
2 32 0.003846752 ubox
2 41 0.889355809 ubox
2 45 0.140469744 ubox
2 48 0.004205385 ubox
2 53 0.012582860 ubox
2 55 0.274410166 ubox
3 9 0.279222945 ubox
3 11 0.096189620 ubox
3 25 0.003413994 ubox
3 31 0.003956378 ubox
3 40 0.889785572 ubox
3 42 0.080740175 ubox
3 44 0.137324415 ubox
3 46 0.009036527 ubox
3 47 0.004149468 ubox
3 54 0.274397459 ubox
3 56 0.010160179 ubox
4 10 0.091646762 ubox
4 38 0.018938096 ubox
4 41 0.083393061 ubox
4 45 0.008999653 ubox
4 53 0.253659378 ubox
4 55 0.009611124 ubox
5 13 0.070633414 ubox
5 27 0.004473895 ubox
5 37 0.018365034 ubox
5 39 0.893128240 ubox
5 49 0.013368737 ubox
6 12 0.065713955 ubox
6 26 0.004113286 ubox
6 38 0.892960681 ubox
6 48 0.012868397 ubox
7 13 0.059438740 ubox
7 27 0.007402345 ubox
7 37 0.889759011 ubox
7 39 0.183487283 ubox
7 49 0.035704608 ubox
8 12 0.048467504 ubox
8 26 0.007018724 ubox
8 38 0.184361456 ubox
8 48 0.034063735 ubox
9 30 0.010162645 ubox
9 36 0.620022359 ubox
9 37 0.183377098 ubox
9 50 0.030752501 ubox
10 28 0.019855159 ubox
10 29 0.007736598 ubox
10 35 0.588235519 ubox
10 36 0.121973579 ubox
10 37 0.026720348 ubox
10 49 0.024857523 ubox
10 50 0.025086443 ubox
10 51 0.085259396 ubox
11 27 0.022074700 ubox
11 30 0.034130347 ubox
11 36 0.154508416 ubox
11 49 0.031093124 ubox
11 50 0.087117629 ubox
12 18 0.055261172 ubox
12 22 0.033525438 ubox
12 29 0.033972019 ubox
12 33 0.323941606 ubox
12 35 0.155019162 ubox
12 36 0.003695259 ubox
12 39 0.005588493 ubox
12 49 0.084274175 ubox
12 58 0.008443482 ubox
13 17 0.058876261 ubox
13 21 0.037094155 ubox
13 31 0.898491103 ubox
13 32 0.073483229 ubox
13 34 0.139867051 ubox
13 38 0.009550591 ubox
13 40 0.068808328 ubox
13 48 0.055946131 ubox
13 57 0.011198915 ubox
14 30 0.901509151 ubox
14 37 0.009598185 ubox
14 39 0.067953663 ubox
14 50 0.023233482 ubox
15 36 0.009460302 ubox
15 37 0.022688461 ubox
15 49 0.023207347 ubox
15 50 0.015771708 ubox
16 36 0.022246857 ubox
16 37 0.031731425 ubox
16 49 0.015610127 ubox
16 50 0.047465816 ubox
17 27 0.863162865 ubox
17 36 0.031526650 ubox
17 39 0.033292999 ubox
17 49 0.047614119 ubox
18 26 0.828662302 ubox
18 38 0.033243019 ubox
18 48 0.045960965 ubox
19 38 0.026715253 ubox
20 37 0.025943718 ubox
20 50 0.037607698 ubox
21 27 0.075425418 ubox
21 36 0.025194836 ubox
21 39 0.295496060 ubox
21 49 0.037742352 ubox
22 26 0.061509606 ubox
22 38 0.293085584 ubox
22 48 0.035944396 ubox
22 53 0.004865448 ubox
23 37 0.050635843 ubox
23 51 0.035834789 ubox
23 52 0.004103495 ubox
24 36 0.036578004 ubox
24 37 0.368615781 ubox
24 50 0.038332986 ubox
25 36 0.374006884 ubox
25 49 0.038155094 ubox
26 33 0.009596804 ubox
26 35 0.375926938 ubox
26 58 0.038157863 ubox
27 32 0.009391285 ubox
27 34 0.374635738 ubox
27 42 0.028030492 ubox
27 46 0.037109356 ubox
27 54 0.034573377 ubox
27 56 0.044681653 ubox
27 57 0.049649619 ubox
28 41 0.020223675 ubox
28 45 0.036835989 ubox
28 53 0.034198648 ubox
28 55 0.041859132 ubox
29 41 0.059257075 ubox
29 45 0.003905649 ubox
29 55 0.056977473 ubox
30 38 0.007257272 ubox
30 40 0.064470878 ubox
30 44 0.004313418 ubox
30 54 0.060387403 ubox
31 37 0.007388444 ubox
31 39 0.064459761 ubox
31 50 0.026314694 ubox
32 36 0.006767952 ubox
32 49 0.016992710 ubox
33 38 0.004547899 ubox
33 48 0.013550306 ubox
34 49 0.153587612 ubox
35 45 0.019784957 ubox
35 48 0.155672185 ubox
35 55 0.009510192 ubox
36 43 0.012436513 ubox
36 44 0.020892747 ubox
36 47 0.156233417 ubox
36 54 0.010185693 ubox
36 57 0.019917627 ubox
37 42 0.012858147 ubox
37 43 0.020790850 ubox
37 44 0.003319180 ubox
37 46 0.156181547 ubox
37 53 0.010239491 ubox
37 56 0.020007513 ubox
38 52 0.010398235 ubox
38 58 0.004157387 ubox
39 57 0.005308141 ubox
40 50 0.009608711 ubox
41 49 0.008658497 ubox
41 50 0.008771165 ubox
41 51 0.207930259 ubox
42 49 0.010989851 ubox
42 50 0.216657362 ubox
43 49 0.214330016 ubox
43 50 0.478248786 ubox
44 49 0.480110174 ubox
44 50 0.028551616 ubox
45 49 0.025838409 ubox
45 51 0.022068663 ubox
46 50 0.022981817 ubox
48 58 0.615737104 ubox
49 55 0.011167856 ubox
49 56 0.021069881 ubox
49 57 0.808483024 ubox
50 54 0.012474208 ubox
50 55 0.016953512 ubox
50 56 0.808705272 ubox
51 55 0.703596783 ubox
1 42 0.9500000 lbox
2 41 0.9500000 lbox
3 40 0.9500000 lbox
5 39 0.9500000 lbox
6 38 0.9500000 lbox
7 37 0.9500000 lbox
13 31 0.9500000 lbox
14 30 0.9500000 lbox
17 27 0.9500000 lbox
18 26 0.9500000 lbox
48 58 0.9500000 lbox
49 57 0.9500000 lbox
50 56 0.9500000 lbox
51 55 0.9500000 lbox
showpage
end
%%EOF
