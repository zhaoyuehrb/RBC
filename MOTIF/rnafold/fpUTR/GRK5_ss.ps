%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:58:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGACACAGAGGGAGGAAGAAGCGGCGGCGGCGGCGGCGGCGGCGGCGGCUCCUCUUUGCAGAGGGGGAAACUCUUGGGCUGAGAGCAGGAAUAAUGCGGUAGGCAAGGCGGGCUGCUGGCUCCCCCGGCUCCGGCAGCAGCGGCGGCAGCCCGAGCAGCGGCAGCAGCAGCGGCAGCACCCCAGGCGCUGACAGCCCCGCCGGCCGGCUCCGUUGCUGACCGCCGACUGUCA\
) } def
/len { sequence length } bind def

/coor [
[36.15754700 612.62017822]
[39.17043686 627.42218018]
[37.88970184 642.47332764]
[32.41917038 656.55340576]
[23.20230865 668.52111816]
[10.98628902 677.40625000]
[-3.23859048 682.48852539]
[-18.31918335 683.35595703]
[-33.03297424 679.93823242]
[-46.18717957 672.51232910]
[-56.71544647 661.68035889]
[-63.76429749 648.32031250]
[-66.76231384 633.51525879]
[-65.46646118 618.46545410]
[-59.98178864 604.39080811]
[-50.75290680 592.43237305]
[-38.52796936 583.55950928]
[-24.29799080 578.49157715]
[-9.21653461 577.63928223]
[-5.82264996 563.02825928]
[-2.52692151 548.39483643]
[0.67050201 533.73956299]
[3.76947618 519.06317139]
[6.76986170 504.36630249]
[9.77024746 489.66946411]
[12.77063274 474.97259521]
[15.77101803 460.27572632]
[18.77140236 445.57888794]
[21.67306519 430.86221313]
[24.47587204 416.12640381]
[27.27867699 401.39056396]
[30.08148384 386.65475464]
[32.88429260 371.91894531]
[35.68709946 357.18313599]
[38.48990631 342.44729614]
[41.29270935 327.71148682]
[44.09551620 312.97567749]
[46.60102081 298.18640137]
[48.80820084 283.34967041]
[51.01538467 268.51296997]
[53.22256470 253.67623901]
[55.33010483 238.82502747]
[57.33790207 223.96002197]
[59.34569931 209.09500122]
[61.35349274 194.22998047]
[63.36128998 179.36495972]
[61.14535522 172.32695007]
[65.49712372 164.31437683]
[67.70430756 149.47764587]
[69.91148376 134.64093018]
[60.34702301 123.08580017]
[45.35918808 122.48181152]
[30.37135506 121.87782288]
[15.38352013 121.27382660]
[0.39568478 120.66983795]
[-14.59214973 120.06584930]
[-29.57998466 119.46186066]
[-44.56782150 118.85787201]
[-60.63756943 124.26153564]
[-70.27860260 110.31567383]
[-59.54665756 97.19082642]
[-43.96383286 103.87004089]
[-28.97599602 104.47402954]
[-13.98816109 105.07801819]
[0.99967390 105.68200684]
[15.98750877 106.28599548]
[30.97534370 106.88998413]
[45.96318054 107.49397278]
[60.95101547 108.09796143]
[61.23012924 96.22959137]
[64.95195007 85.24906921]
[71.62060547 76.10602570]
[80.49378204 69.53863525]
[90.66233063 66.01486969]
[89.85718536 51.03649902]
[89.05203247 36.05812073]
[88.24687958 21.07974625]
[87.44173431 6.10137033]
[86.63658142 -8.87700462]
[85.83143616 -23.85538101]
[85.02628326 -38.83375549]
[84.22113800 -53.81212997]
[73.23706055 -61.59074402]
[68.79846191 -74.09104919]
[72.31285858 -86.68016052]
[82.28318024 -94.82773590]
[81.67919159 -109.81556702]
[74.22631073 -96.79809570]
[60.74683380 -90.21754456]
[45.89889526 -92.34796906]
[34.81352997 -102.45315552]
[31.32154274 -117.04102325]
[36.62966156 -131.07041931]
[48.90354919 -139.69316101]
[63.90168762 -139.92947388]
[76.44136047 -131.69741821]
[70.19348145 -145.33427429]
[63.94561005 -158.97114563]
[49.46860504 -165.88459778]
[45.98801422 -181.54554749]
[56.17385101 -193.94023132]
[72.21240997 -193.56053162]
[81.80028534 -180.69770813]
[77.58247375 -165.21902466]
[83.83034515 -151.58215332]
[90.07822418 -137.94528198]
[97.54022980 -138.69920349]
[112.46425629 -140.20703125]
[119.92626953 -140.96095276]
[123.32015228 -155.57196045]
[117.17784882 -166.90179443]
[120.29440308 -178.99372864]
[130.47378540 -185.51020813]
[134.06352234 -200.07434082]
[137.65325928 -214.63845825]
[141.24299622 -229.20259094]
[144.83271790 -243.76672363]
[148.42245483 -258.33084106]
[152.01219177 -272.89495850]
[155.60192871 -287.45910645]
[147.68827820 -300.87594604]
[151.53625488 -315.59490967]
[164.37594604 -323.05667114]
[167.96568298 -337.62081909]
[165.88558960 -354.44665527]
[181.47805786 -361.10333252]
[192.19100952 -347.96295166]
[182.52980042 -334.03106689]
[178.94007874 -319.46694946]
[186.84140015 -306.89297485]
[183.40837097 -292.07174683]
[170.16606140 -283.86935425]
[166.57632446 -269.30523682]
[162.98658752 -254.74110413]
[159.39685059 -240.17698669]
[155.80711365 -225.61285400]
[152.21737671 -211.04872131]
[148.62763977 -196.48460388]
[145.03791809 -181.92047119]
[150.81666565 -165.34304810]
[137.93115234 -152.17807007]
[134.53727722 -137.56706238]
[118.19412994 -112.67465210]
[96.66702271 -110.41956329]
[97.27101135 -95.43172455]
[110.11057281 -84.55852509]
[111.12571716 -67.42556000]
[99.19950867 -54.61728287]
[100.00466156 -39.63890457]
[100.80980682 -24.66053009]
[101.61495972 -9.68215466]
[102.42011261 5.29622126]
[103.22525787 20.27459717]
[104.03041077 35.25297165]
[104.83555603 50.23134613]
[105.64070892 65.20972443]
[114.64907074 64.03321838]
[124.40286255 65.29381561]
[134.23182678 69.24604034]
[148.69433594 65.26657867]
[159.94731140 54.14538574]
[174.27120972 58.22892380]
[188.73371887 54.24946594]
[199.86012268 42.20226669]
[215.79473877 46.07786179]
[220.14538574 61.88937378]
[208.43649292 73.37126923]
[192.71316528 68.71196747]
[178.25067139 72.69142151]
[168.03215027 83.52798462]
[152.67379761 79.72908020]
[138.21128845 83.70854187]
[138.46298218 91.20431519]
[138.96633911 106.19586945]
[139.21801758 113.69164276]
[153.91488647 116.69203186]
[168.61174011 119.69241333]
[183.30860901 122.69280243]
[198.37754822 117.87225342]
[209.29994202 127.99897003]
[223.99681091 130.99935913]
[240.72526550 128.24343872]
[248.00437927 143.55523682]
[235.30603027 154.78858948]
[220.99641418 145.69621277]
[206.29956055 142.69583130]
[192.28184509 147.73098755]
[180.30821228 137.38966370]
[165.61135864 134.38926697]
[150.91450500 131.38888550]
[136.21763611 128.38850403]
[124.42935181 137.17474365]
[110.90743256 141.54060364]
[97.19295502 141.31904602]
[84.74820709 136.84811401]
[82.54103088 151.68482971]
[80.33384705 166.52156067]
[78.22631073 181.37275696]
[76.21851349 196.23777771]
[74.21071625 211.10279846]
[72.20291901 225.96781921]
[70.19512177 240.83282471]
[72.14583588 249.73979187]
[68.05928802 255.88342285]
[65.85210419 270.72015381]
[63.64492416 285.55685425]
[61.43774414 300.39358521]
[63.34254074 305.21936035]
[63.22787094 309.83441162]
[61.50929260 313.50799561]
[58.83133316 315.77847290]
[56.02852631 330.51431274]
[53.22571945 345.25012207]
[50.42291260 359.98593140]
[47.62010574 374.72174072]
[44.81729889 389.45755005]
[42.01449585 404.19338989]
[39.21168900 418.92919922]
[36.40888214 433.66500854]
[37.87868500 442.66384888]
[33.46826172 448.57925415]
[30.46787834 463.27612305]
[27.46749306 477.97299194]
[24.46710587 492.66983032]
[21.46672058 507.36669922]
[18.46633530 522.06353760]
[19.81519508 531.08129883]
[15.32575607 536.93701172]
[12.12833309 551.59222412]
[13.35600662 560.62725830]
[8.78835773 566.42218018]
[5.39447260 581.03314209]
[18.55613136 588.44580078]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 232]
[20 231]
[21 229]
[22 228]
[23 226]
[24 225]
[25 224]
[26 223]
[27 222]
[28 221]
[29 219]
[30 218]
[31 217]
[32 216]
[33 215]
[34 214]
[35 213]
[36 212]
[37 211]
[38 207]
[39 206]
[40 205]
[41 204]
[42 202]
[43 201]
[44 200]
[45 199]
[46 198]
[48 197]
[49 196]
[50 195]
[51 69]
[52 68]
[53 67]
[54 66]
[55 65]
[56 64]
[57 63]
[58 62]
[74 156]
[75 155]
[76 154]
[77 153]
[78 152]
[79 151]
[80 150]
[81 149]
[82 148]
[86 145]
[87 144]
[96 106]
[97 105]
[98 104]
[109 142]
[110 141]
[113 139]
[114 138]
[115 137]
[116 136]
[117 135]
[118 134]
[119 133]
[120 132]
[123 129]
[124 128]
[159 172]
[160 171]
[162 169]
[163 168]
[175 191]
[176 190]
[177 189]
[178 188]
[180 186]
[181 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
