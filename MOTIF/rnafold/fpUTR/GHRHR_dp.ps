%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:32:10 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GHRHR)
} def

/sequence { (\
AGCCAAGGCUUACUGAGGCUGGUGGAGGGAGCCACUGCUGGGCUCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.362256666 ubox
1 11 0.027315777 ubox
1 14 0.003792228 ubox
1 20 0.331551778 ubox
1 39 0.004503749 ubox
1 44 0.032459474 ubox
2 9 0.417491105 ubox
2 10 0.004831107 ubox
2 13 0.004161420 ubox
2 19 0.351177078 ubox
2 23 0.440802338 ubox
2 38 0.004774018 ubox
2 43 0.037308822 ubox
3 8 0.417595171 ubox
3 18 0.351273110 ubox
3 22 0.462974380 ubox
3 25 0.687579844 ubox
3 28 0.008575717 ubox
3 37 0.004737245 ubox
3 41 0.004519570 ubox
3 42 0.037185165 ubox
4 15 0.004008293 ubox
4 17 0.350932033 ubox
4 21 0.462609073 ubox
4 24 0.689747237 ubox
4 27 0.008530973 ubox
4 40 0.005591370 ubox
4 41 0.036959557 ubox
5 14 0.006028146 ubox
5 20 0.321388090 ubox
5 23 0.668499429 ubox
5 39 0.005810127 ubox
6 14 0.246595749 ubox
6 20 0.277216184 ubox
6 39 0.019037543 ubox
7 13 0.248209540 ubox
7 14 0.246721814 ubox
7 19 0.378549742 ubox
7 20 0.706022228 ubox
7 33 0.005623657 ubox
7 38 0.020084805 ubox
7 39 0.016712839 ubox
7 44 0.014140625 ubox
7 45 0.004974512 ubox
7 48 0.028388003 ubox
8 13 0.245114817 ubox
8 19 0.740420799 ubox
8 32 0.005693486 ubox
8 38 0.016941135 ubox
8 43 0.015776912 ubox
8 47 0.028623117 ubox
9 17 0.377188436 ubox
9 18 0.741528510 ubox
9 31 0.005693553 ubox
9 37 0.016958954 ubox
9 42 0.015799531 ubox
10 16 0.375626319 ubox
10 17 0.731154665 ubox
10 25 0.015037678 ubox
10 30 0.005669284 ubox
10 41 0.015579161 ubox
11 15 0.338797032 ubox
11 16 0.636641843 ubox
11 17 0.016730359 ubox
11 24 0.024452331 ubox
11 29 0.003829487 ubox
11 40 0.015339565 ubox
12 23 0.025772160 ubox
12 39 0.008222205 ubox
13 22 0.025917078 ubox
13 27 0.005365652 ubox
13 41 0.004756864 ubox
13 42 0.010318655 ubox
14 21 0.025208347 ubox
14 26 0.005343126 ubox
14 40 0.004647169 ubox
14 41 0.010244683 ubox
14 46 0.377936469 ubox
15 20 0.015620337 ubox
15 45 0.427017116 ubox
16 39 0.007998360 ubox
16 44 0.427048120 ubox
17 33 0.009500997 ubox
17 36 0.003164603 ubox
17 38 0.006551973 ubox
17 39 0.020097237 ubox
17 43 0.426888871 ubox
17 44 0.006632015 ubox
18 32 0.009557897 ubox
18 35 0.003203373 ubox
18 38 0.025484445 ubox
18 43 0.011826523 ubox
19 31 0.009557499 ubox
19 37 0.025747898 ubox
19 41 0.426667385 ubox
19 42 0.014739602 ubox
20 26 0.005707743 ubox
20 30 0.009505050 ubox
20 34 0.004327786 ubox
20 37 0.026111484 ubox
20 40 0.424354595 ubox
20 41 0.013883631 ubox
21 33 0.004896661 ubox
21 36 0.114066861 ubox
21 39 0.412417997 ubox
21 48 0.118088087 ubox
22 32 0.004898015 ubox
22 35 0.117978289 ubox
22 38 0.413508206 ubox
22 47 0.119452857 ubox
23 31 0.004867873 ubox
23 34 0.119613063 ubox
23 37 0.412136872 ubox
23 46 0.118698610 ubox
24 33 0.122758349 ubox
24 36 0.409129884 ubox
24 44 0.003234696 ubox
24 45 0.090968954 ubox
24 48 0.109019519 ubox
25 32 0.122432583 ubox
25 35 0.409970341 ubox
25 43 0.020562342 ubox
25 44 0.055809146 ubox
25 45 0.045347078 ubox
25 47 0.110052459 ubox
26 36 0.016045224 ubox
26 44 0.062054555 ubox
27 33 0.406113803 ubox
27 35 0.017196200 ubox
27 36 0.018380013 ubox
27 39 0.007214330 ubox
27 43 0.064955330 ubox
27 44 0.005993032 ubox
27 45 0.019041471 ubox
27 48 0.849458177 ubox
28 32 0.400042946 ubox
28 35 0.019025357 ubox
28 36 0.003454394 ubox
28 38 0.007697369 ubox
28 39 0.003417840 ubox
28 43 0.007403473 ubox
28 44 0.020298713 ubox
28 45 0.019662858 ubox
28 47 0.856021441 ubox
28 48 0.014030669 ubox
29 35 0.003559916 ubox
29 38 0.003442615 ubox
29 43 0.020775147 ubox
29 44 0.009770186 ubox
29 45 0.895442815 ubox
29 47 0.011790541 ubox
30 36 0.007950657 ubox
30 39 0.079751923 ubox
30 44 0.897863354 ubox
31 35 0.007803867 ubox
31 38 0.081100563 ubox
31 43 0.898643570 ubox
32 37 0.080740688 ubox
32 41 0.136813376 ubox
32 42 0.888545369 ubox
33 40 0.191741377 ubox
33 41 0.877666871 ubox
34 39 0.199484097 ubox
35 41 0.013172450 ubox
36 40 0.024047038 ubox
36 41 0.003757214 ubox
37 43 0.008369600 ubox
38 42 0.008324526 ubox
39 46 0.003797991 ubox
40 45 0.004329226 ubox
40 48 0.019032007 ubox
41 47 0.019245129 ubox
41 48 0.006677711 ubox
42 47 0.006728053 ubox
3 25 0.9500000 lbox
4 24 0.9500000 lbox
5 23 0.9500000 lbox
7 20 0.9500000 lbox
8 19 0.9500000 lbox
9 18 0.9500000 lbox
10 17 0.9500000 lbox
11 16 0.9500000 lbox
27 48 0.9500000 lbox
28 47 0.9500000 lbox
29 45 0.9500000 lbox
30 44 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
showpage
end
%%EOF
