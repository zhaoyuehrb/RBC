%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:40:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGCCGCCCUCGGCGUCCUCUGUAGCGGGCGACCUAGGCCGCGGGACCCGGACGGAGGUAGAGGCCAGGGCAGCGCGUCCGGGAGCGGAGUCCGCGCCCGCCGCCGCC\
) } def
/len { sequence length } bind def

/coor [
[86.84040833 149.36494446]
[90.22767639 134.75239563]
[101.41204071 124.75690460]
[116.31176758 123.02621460]
[104.69964600 113.53102875]
[90.93276215 111.08876038]
[85.80516815 98.08109283]
[74.19304657 88.58590698]
[62.58092117 79.09072113]
[50.96879578 69.59553528]
[39.35667419 60.10034943]
[30.59290504 57.02515411]
[27.55359459 50.16443253]
[16.21735191 40.34152222]
[4.88110781 30.51861191]
[-14.89265251 33.15528107]
[-30.15237427 20.77561760]
[-31.60396957 1.47928548]
[-43.73922348 -7.33749342]
[-55.87447739 -16.15427208]
[-68.00973511 -24.97105026]
[-80.14498901 -33.78783035]
[-92.28024292 -42.60460663]
[-104.41549683 -51.42138672]
[-117.35255432 -50.18901062]
[-127.30412292 -57.90550995]
[-129.20544434 -69.94626617]
[-141.08398438 -79.10598755]
[-152.96252441 -88.26570129]
[-164.84104919 -97.42542267]
[-178.00224304 -94.16831207]
[-190.43739319 -99.06011200]
[-197.63792419 -110.08408356]
[-197.13456726 -123.04602814]
[-208.74668884 -132.54121399]
[-223.71917725 -128.46640015]
[-238.21531677 -134.00187683]
[-246.66105652 -147.01914978]
[-245.80880737 -162.51280212]
[-235.98631287 -174.52520752]
[-220.97050476 -178.43736267]
[-206.53526306 -172.74496460]
[-198.23123169 -159.63684082]
[-199.25149536 -144.15333557]
[-187.63937378 -134.65815735]
[-171.06591797 -137.08418274]
[-157.55595398 -126.62441254]
[-155.68133545 -109.30395508]
[-143.80279541 -100.14424133]
[-131.92427063 -90.98451996]
[-120.04573059 -81.82479858]
[-102.61042023 -80.50840759]
[-95.59871674 -63.55664062]
[-83.46346283 -54.73986435]
[-71.32820892 -45.92308426]
[-59.19295502 -37.10630417]
[-47.05770111 -28.28952789]
[-34.92244720 -19.47274780]
[-22.78719139 -10.65596962]
[-13.21454716 -15.02143860]
[-2.61221337 -14.93909740]
[7.03887892 -10.35549068]
[13.90649796 -2.06459570]
[16.65485764 8.42888069]
[14.70401859 19.18236732]
[26.04026222 29.00527954]
[37.37650681 38.82818985]
[48.85186005 48.48822403]
[60.46398544 57.98340988]
[72.07611084 67.47859955]
[83.68823242 76.97378540]
[95.30035400 86.46897125]
[109.06723785 88.91123962]
[114.19483185 101.91890717]
[125.80695343 111.41409302]
[138.42575073 119.52370453]
[151.88673401 126.14202118]
[165.34771729 132.76033020]
[177.88514709 129.33995056]
[189.00679016 135.24647522]
[192.93348694 146.78666687]
[206.19998169 153.78666687]
[219.46647644 160.78668213]
[232.73297119 167.78669739]
[248.54904175 167.38365173]
[256.19470215 180.16618347]
[269.46121216 187.16619873]
[282.72769165 194.16619873]
[295.99420166 201.16621399]
[312.82446289 203.21023560]
[315.51940918 219.94862366]
[300.18121338 227.17189026]
[288.99417114 214.43270874]
[275.72769165 207.43269348]
[262.46121216 200.43269348]
[249.19470215 193.43267822]
[234.32754517 194.33639526]
[225.73295593 181.05319214]
[212.46646118 174.05317688]
[199.19996643 167.05316162]
[185.93347168 160.05316162]
[168.52905273 161.72915649]
[158.72940063 146.22131348]
[145.26841736 139.60299683]
[131.80743408 132.98468018]
[136.42271423 147.25700378]
[131.97659302 161.58291626]
[120.09164429 170.73431396]
[105.10517883 171.37144470]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 75]
[5 74]
[7 72]
[8 71]
[9 70]
[10 69]
[11 68]
[13 67]
[14 66]
[15 65]
[18 59]
[19 58]
[20 57]
[21 56]
[22 55]
[23 54]
[24 53]
[27 51]
[28 50]
[29 49]
[30 48]
[34 45]
[35 44]
[76 105]
[77 104]
[78 103]
[81 101]
[82 100]
[83 99]
[84 98]
[86 96]
[87 95]
[88 94]
[89 93]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
