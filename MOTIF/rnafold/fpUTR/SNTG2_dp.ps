%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:10:38 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SNTG2)
} def

/sequence { (\
GCCCGAGCCGGAGCCGGCAGAGGGGCGCGGGCGCGGACGCGGCGCCUGGCGGGGCCCUGGGAGGCUCGGACGGGGUCCUGGCGUUGAGCUCGGCCGGCCCGGAGCGCGGACCCAGCCGCAGGGGCGGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 105 0.004220602 ubox
1 107 0.035882904 ubox
1 125 0.289031955 ubox
1 128 0.021244566 ubox
2 104 0.004214453 ubox
2 106 0.033044996 ubox
2 109 0.932843501 ubox
2 123 0.016602038 ubox
2 124 0.289032625 ubox
2 127 0.020843120 ubox
3 108 0.935740696 ubox
3 109 0.185968733 ubox
3 122 0.020095342 ubox
3 123 0.288814400 ubox
3 126 0.020295650 ubox
4 106 0.937385075 ubox
4 108 0.186181639 ubox
4 121 0.023019088 ubox
4 122 0.288336486 ubox
4 123 0.003226782 ubox
5 105 0.978838960 ubox
5 107 0.184350221 ubox
7 105 0.097671813 ubox
7 119 0.003706296 ubox
8 102 0.997255583 ubox
8 104 0.072512383 ubox
9 101 0.999847013 ubox
10 100 0.999962478 ubox
11 99 0.999856253 ubox
13 98 0.999877475 ubox
14 97 0.999982059 ubox
15 96 0.999965190 ubox
16 95 0.999965101 ubox
17 94 0.999977767 ubox
18 93 0.996226822 ubox
19 90 0.049247786 ubox
20 89 0.053136195 ubox
20 91 0.987269883 ubox
21 47 0.010534687 ubox
21 58 0.004207771 ubox
21 90 0.994887336 ubox
22 46 0.012293728 ubox
22 47 0.004965631 ubox
22 57 0.004435456 ubox
22 58 0.003413386 ubox
22 85 0.013768432 ubox
22 89 0.989446112 ubox
22 90 0.015238801 ubox
22 91 0.025531140 ubox
23 45 0.012870402 ubox
23 46 0.020317744 ubox
23 47 0.596248065 ubox
23 56 0.004516406 ubox
23 57 0.009244135 ubox
23 84 0.067252697 ubox
23 85 0.026321408 ubox
23 89 0.027301207 ubox
23 90 0.023988321 ubox
23 91 0.040514941 ubox
24 45 0.015141314 ubox
24 46 0.663362673 ubox
24 47 0.003900865 ubox
24 55 0.004500688 ubox
24 56 0.009295469 ubox
24 84 0.020187110 ubox
24 85 0.590895946 ubox
24 89 0.022633001 ubox
24 90 0.043488210 ubox
25 43 0.014377137 ubox
25 45 0.663815306 ubox
25 46 0.003804181 ubox
25 50 0.068906090 ubox
25 55 0.009296067 ubox
25 82 0.094914339 ubox
25 84 0.726508067 ubox
25 89 0.045477312 ubox
26 41 0.011412584 ubox
26 42 0.010212883 ubox
26 44 0.663948565 ubox
26 49 0.071461580 ubox
26 51 0.014766712 ubox
26 54 0.008586073 ubox
26 81 0.094813661 ubox
26 83 0.730995437 ubox
26 86 0.025852889 ubox
26 88 0.046207015 ubox
27 40 0.015734799 ubox
27 43 0.663925067 ubox
27 45 0.004686732 ubox
27 50 0.024692251 ubox
27 82 0.726375104 ubox
27 84 0.053079605 ubox
27 85 0.019168970 ubox
28 39 0.015838262 ubox
28 41 0.009827968 ubox
28 42 0.663491104 ubox
28 44 0.004716991 ubox
28 48 0.262074528 ubox
28 49 0.020913528 ubox
28 80 0.004258044 ubox
28 81 0.693948157 ubox
28 83 0.054601216 ubox
28 86 0.027633760 ubox
29 38 0.016213690 ubox
29 40 0.008844776 ubox
29 43 0.004826892 ubox
29 46 0.022589564 ubox
29 47 0.715251910 ubox
29 50 0.003504447 ubox
29 82 0.014587870 ubox
29 85 0.014500838 ubox
30 45 0.018059681 ubox
30 46 0.747059342 ubox
30 47 0.003871868 ubox
31 40 0.644003218 ubox
31 43 0.011835182 ubox
31 45 0.747339577 ubox
32 39 0.644332901 ubox
32 41 0.158384860 ubox
32 42 0.010537085 ubox
32 44 0.747454934 ubox
33 38 0.627660786 ubox
33 40 0.159149343 ubox
33 43 0.747166686 ubox
34 39 0.158949088 ubox
34 41 0.251055145 ubox
34 42 0.704024608 ubox
35 40 0.352730063 ubox
40 86 0.004272680 ubox
41 85 0.004641229 ubox
42 84 0.006594294 ubox
43 83 0.006720185 ubox
44 82 0.006732678 ubox
45 81 0.006730459 ubox
46 80 0.006414113 ubox
47 83 0.220266121 ubox
47 86 0.006097419 ubox
47 87 0.003509666 ubox
48 82 0.650067728 ubox
48 85 0.015296497 ubox
49 82 0.143976707 ubox
49 84 0.017820496 ubox
50 80 0.985001561 ubox
50 81 0.114331548 ubox
50 83 0.017714149 ubox
50 86 0.003744463 ubox
51 78 0.004943604 ubox
51 79 0.995564129 ubox
51 82 0.015814538 ubox
51 85 0.004306817 ubox
52 67 0.008215515 ubox
52 77 0.004200616 ubox
52 78 0.998315435 ubox
52 79 0.055344652 ubox
52 84 0.004556130 ubox
53 66 0.008264728 ubox
53 76 0.003247533 ubox
53 77 0.998324481 ubox
53 78 0.055217666 ubox
54 65 0.008294739 ubox
54 76 0.998038544 ubox
54 77 0.054885510 ubox
54 82 0.004860457 ubox
55 64 0.008280624 ubox
55 74 0.004366401 ubox
55 75 0.999873898 ubox
55 81 0.004842114 ubox
56 63 0.008236302 ubox
56 73 0.005695640 ubox
56 74 0.999868444 ubox
56 80 0.004809313 ubox
57 69 0.023676797 ubox
57 72 0.006172848 ubox
57 73 0.999576896 ubox
58 68 0.048030284 ubox
58 72 0.997686959 ubox
59 66 0.050933248 ubox
59 67 0.088165682 ubox
59 71 0.991936329 ubox
59 79 0.003981267 ubox
60 65 0.083785520 ubox
60 66 0.108784469 ubox
60 67 0.135862297 ubox
60 78 0.004251250 ubox
61 65 0.108079187 ubox
61 66 0.106630213 ubox
61 67 0.277490805 ubox
61 77 0.004192168 ubox
61 85 0.008401118 ubox
62 66 0.242368546 ubox
62 76 0.003609115 ubox
62 84 0.008921965 ubox
63 77 0.003349364 ubox
64 76 0.004032036 ubox
64 82 0.009454208 ubox
64 89 0.003382655 ubox
65 75 0.004754387 ubox
65 81 0.009455707 ubox
65 88 0.003865255 ubox
66 74 0.004751505 ubox
66 80 0.009249499 ubox
66 87 0.003866099 ubox
67 72 0.003383295 ubox
67 73 0.004760077 ubox
67 86 0.003856474 ubox
68 78 0.012279364 ubox
69 77 0.012294725 ubox
70 76 0.012279848 ubox
70 84 0.003333254 ubox
71 75 0.012158282 ubox
71 83 0.003666111 ubox
72 82 0.003648862 ubox
73 113 0.003182132 ubox
74 112 0.003195034 ubox
75 111 0.003203188 ubox
76 110 0.003206846 ubox
77 109 0.003205852 ubox
78 108 0.003200739 ubox
79 92 0.005048791 ubox
80 90 0.030477828 ubox
80 91 0.011307136 ubox
81 89 0.060410124 ubox
82 88 0.069815282 ubox
82 92 0.005468817 ubox
83 89 0.027747686 ubox
83 91 0.007340380 ubox
84 88 0.028818751 ubox
85 92 0.009357448 ubox
86 91 0.011431566 ubox
104 119 0.008298623 ubox
105 118 0.008293160 ubox
106 116 0.006484752 ubox
106 117 0.005899121 ubox
106 119 0.289405387 ubox
107 115 0.008644934 ubox
107 118 0.289736799 ubox
108 117 0.289754092 ubox
109 116 0.288958737 ubox
111 123 0.009841054 ubox
111 124 0.008386917 ubox
111 127 0.021785183 ubox
112 122 0.009866776 ubox
112 123 0.008421103 ubox
112 126 0.021546666 ubox
112 127 0.049451414 ubox
113 121 0.009866457 ubox
113 122 0.008411790 ubox
113 126 0.049805954 ubox
115 125 0.057107844 ubox
115 128 0.953969831 ubox
116 123 0.013817466 ubox
116 124 0.057102446 ubox
116 127 0.955146023 ubox
117 122 0.014102789 ubox
117 123 0.057024018 ubox
117 126 0.955140594 ubox
118 125 0.955091699 ubox
119 124 0.953481357 ubox
2 109 0.9500000 lbox
3 108 0.9500000 lbox
4 106 0.9500000 lbox
5 105 0.9500000 lbox
8 102 0.9500000 lbox
9 101 0.9500000 lbox
10 100 0.9500000 lbox
11 99 0.9500000 lbox
13 98 0.9500000 lbox
14 97 0.9500000 lbox
15 96 0.9500000 lbox
16 95 0.9500000 lbox
17 94 0.9500000 lbox
18 93 0.9500000 lbox
20 91 0.9500000 lbox
21 90 0.9500000 lbox
22 89 0.9500000 lbox
24 85 0.9500000 lbox
25 84 0.9500000 lbox
26 83 0.9500000 lbox
27 82 0.9500000 lbox
28 81 0.9500000 lbox
29 47 0.9500000 lbox
30 46 0.9500000 lbox
31 45 0.9500000 lbox
32 44 0.9500000 lbox
33 43 0.9500000 lbox
34 42 0.9500000 lbox
50 80 0.9500000 lbox
51 79 0.9500000 lbox
52 78 0.9500000 lbox
53 77 0.9500000 lbox
54 76 0.9500000 lbox
55 75 0.9500000 lbox
56 74 0.9500000 lbox
57 73 0.9500000 lbox
58 72 0.9500000 lbox
59 71 0.9500000 lbox
115 128 0.9500000 lbox
116 127 0.9500000 lbox
117 126 0.9500000 lbox
118 125 0.9500000 lbox
119 124 0.9500000 lbox
showpage
end
%%EOF
