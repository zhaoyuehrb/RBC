%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:20:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAGAGUCUCGCCGGCGUCCCCGCCCGCACACUCGCGCACACUCGCGCUCGGGCGCACACGGAGCAGGGACCGGCGCCCGGAGCGAGCCAGGGAGCGGCUAACCGGGGACCCACCGCGCGGAGCCAGCCUAGCUGCCAGCGAGCCCAACCCGCGACGACCCACGCCCCUGAGCCCCGCAGCCGACCCCUGCCGGCCGGUGUCCCCACCGCCAUCCCUGACCC\
) } def
/len { sequence length } bind def

/coor [
[126.64031982 157.92738342]
[111.75472260 156.07832336]
[99.98593903 146.77801514]
[94.74617767 132.72294617]
[97.55355072 117.99039459]
[89.57306671 130.69125366]
[81.59259033 143.39212036]
[73.61210632 156.09298706]
[78.10005951 168.78631592]
[74.51327515 181.56117249]
[64.37583160 189.81764221]
[51.52751923 190.71720886]
[43.36970139 203.30490112]
[42.35739517 219.09368896]
[28.94262505 225.56619263]
[20.78480530 238.15388489]
[12.62698650 250.74157715]
[4.46916676 263.32925415]
[4.16704321 279.72561646]
[-10.31268311 287.42431641]
[-24.07451057 278.50555420]
[-22.96145058 262.14422607]
[-8.11852455 255.17144775]
[0.03929503 242.58375549]
[8.19711494 229.99606323]
[16.35493469 217.40837097]
[16.78373718 202.51994324]
[30.78200722 195.14707947]
[38.93982697 182.55938721]
[34.72994232 166.27262878]
[43.78414154 151.69572449]
[60.91124344 148.11250305]
[68.89172363 135.41163635]
[76.87220764 122.71077728]
[84.85268402 110.00991821]
[82.12895203 103.02198029]
[69.03630829 110.34198761]
[56.38270569 118.39719391]
[44.09177399 109.79875946]
[47.32097626 95.15047455]
[62.08864594 92.51723480]
[76.68149567 89.04609680]
[73.95776367 82.05815887]
[59.48718262 78.10818481]
[45.01660538 74.15820312]
[30.54602432 70.20822906]
[16.07544518 66.25824738]
[4.51484013 71.96403503]
[-7.45210791 68.38285828]
[-13.57148647 57.95516968]
[-27.98524666 53.80263519]
[-42.39900589 49.65010452]
[-56.81276703 45.49757004]
[-71.22652435 41.34503937]
[-85.64028168 37.19250488]
[-100.05404663 33.03997421]
[-114.46780396 28.88744164]
[-119.51576996 30.14017677]
[-124.08500671 29.41033173]
[-127.50211334 27.21032333]
[-129.39363098 24.24519920]
[-143.61996460 19.49006271]
[-157.84629822 14.73492622]
[-170.39747620 23.85894394]
[-185.91452026 23.82936859]
[-198.43081665 14.65757179]
[-203.13360596 -0.12970234]
[-198.21455383 -14.84644604]
[-185.56513977 -23.83377075]
[-170.04931641 -23.63586617]
[-157.63325500 -14.32883167]
[-153.09117126 0.50858849]
[-138.86482239 5.26372480]
[-124.63848877 10.01886082]
[-110.31526947 14.47368145]
[-95.90151215 18.62621307]
[-81.48775482 22.77874565]
[-67.07398987 26.93127823]
[-52.66023254 31.08381271]
[-38.24647141 35.23634338]
[-23.83271408 39.38887787]
[-9.41895390 43.54140854]
[7.36679363 38.40854263]
[20.02542305 51.78767014]
[34.49600220 55.73764801]
[48.96658325 59.68762589]
[63.43716049 63.63760376]
[77.90773773 67.58758545]
[101.78044128 73.49246979]
[109.30043030 89.65760040]
[123.23776245 84.11226654]
[137.17509460 78.56693268]
[151.11242676 73.02160645]
[165.04977417 67.47627258]
[178.98710632 61.93093872]
[184.79315186 50.42036438]
[196.50830078 46.08583450]
[207.66809082 50.73797989]
[221.68182373 45.38865662]
[235.69555664 40.03933334]
[237.33161926 27.65702248]
[244.03485107 17.20389175]
[254.48332214 10.62784958]
[266.66424561 9.12327194]
[278.26165771 12.91446400]
[287.09671021 21.22467613]
[301.25497437 16.27049065]
[315.41320801 11.31630421]
[329.57147217 6.36211777]
[343.72970581 1.40793204]
[357.88796997 -3.54625392]
[362.47219849 -8.28917217]
[367.94192505 -9.78733253]
[372.51333618 -8.43476677]
[386.80496216 -12.98991776]
[401.09658813 -17.54506874]
[415.38821411 -22.10021973]
[417.13180542 -47.90129089]
[439.53588867 -49.56641006]
[452.45556641 -57.18753815]
[465.37527466 -64.80867004]
[478.29495239 -72.42980194]
[486.25009155 -86.10556030]
[501.14337158 -85.90773773]
[514.06304932 -93.52886963]
[526.92901611 -101.24040985]
[539.74053955 -109.04198456]
[552.55206299 -116.84355927]
[549.39843750 -128.62719727]
[551.56500244 -141.60343933]
[559.42388916 -153.32908630]
[572.22326660 -161.29785156]
[588.11846924 -163.45153809]
[598.42340088 -174.35144043]
[608.72833252 -185.25135803]
[606.74945068 -200.76321411]
[615.24780273 -213.88998413]
[630.21075439 -218.43357849]
[644.57324219 -212.24867249]
[651.55377197 -198.25556946]
[647.85626221 -183.06140137]
[635.22668457 -173.84037781]
[619.62823486 -174.94639587]
[609.32330322 -164.04649353]
[599.01837158 -153.14659119]
[602.78350830 -146.66018677]
[615.75634766 -154.19052124]
[628.72912598 -161.72087097]
[643.72912598 -161.75596619]
[636.25952148 -148.74806213]
[623.28668213 -141.21771240]
[610.31384277 -133.68736267]
[614.07904053 -127.20095825]
[628.65472412 -130.74354553]
[643.23034668 -134.28611755]
[649.00347900 -148.68927002]
[662.15789795 -156.91979980]
[677.63543701 -155.81288147]
[689.48468018 -145.79417419]
[693.14941406 -130.71606445]
[687.22033691 -116.37638092]
[673.97747803 -108.28903961]
[658.51281738 -109.56378174]
[646.77294922 -119.71044922]
[632.19726562 -116.16786957]
[617.62164307 -112.62528992]
[599.66827393 -94.71539307]
[576.99542236 -92.59571075]
[560.35363770 -104.03202057]
[547.54211426 -96.23044586]
[534.73059082 -88.42887878]
[530.65631104 -82.27117157]
[521.68420410 -80.60918427]
[508.76449585 -72.98805237]
[501.73348999 -59.85740280]
[485.91607666 -59.51010895]
[472.99639893 -51.88898087]
[460.07672119 -44.26784897]
[447.15701294 -36.64672089]
[447.76617432 -27.58706856]
[442.96823120 -18.40363503]
[455.55593872 -10.24581528]
[468.14361572 -2.08799601]
[480.73132324 6.06982374]
[495.16363525 0.36999291]
[510.18145752 4.27442455]
[520.01013184 16.28178406]
[520.87036133 31.77499771]
[512.43127441 44.79660797]
[497.93801880 50.33954239]
[482.96343994 46.27242279]
[473.26559448 34.15914917]
[472.57348633 18.65751457]
[459.98580933 10.49969578]
[447.39810181 2.34187579]
[434.81042480 -5.81594372]
[419.94335938 -7.80859375]
[405.65173340 -3.25344253]
[391.36010742 1.30170870]
[377.06848145 5.85685968]
[362.84216309 10.61199570]
[348.68389893 15.56618214]
[334.52566528 20.52036858]
[320.36740112 25.47455406]
[306.20913696 30.42873955]
[292.05090332 35.38292694]
[287.75753784 52.52061081]
[273.90966797 63.74362946]
[255.93980408 64.40591431]
[241.04489136 54.05306625]
[227.03114319 59.40238953]
[213.01741028 64.75170898]
[202.69190979 78.94647980]
[184.53244019 75.86827087]
[170.59509277 81.41360474]
[156.65776062 86.95893860]
[142.72042847 92.50427246]
[128.78309631 98.04959869]
[114.84576416 103.59493256]
[129.84550476 103.50598907]
[142.71687317 111.20844269]
[149.72799683 124.46907043]
[148.84608459 139.44311523]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 35]
[6 34]
[7 33]
[8 32]
[12 29]
[13 28]
[15 26]
[16 25]
[17 24]
[18 23]
[43 88]
[44 87]
[45 86]
[46 85]
[47 84]
[50 82]
[51 81]
[52 80]
[53 79]
[54 78]
[55 77]
[56 76]
[57 75]
[61 74]
[62 73]
[63 72]
[90 219]
[91 218]
[92 217]
[93 216]
[94 215]
[95 214]
[98 212]
[99 211]
[100 210]
[106 206]
[107 205]
[108 204]
[109 203]
[110 202]
[111 201]
[114 200]
[115 199]
[116 198]
[117 197]
[119 179]
[120 178]
[121 177]
[122 176]
[124 174]
[125 173]
[126 171]
[127 170]
[128 169]
[133 145]
[134 144]
[135 143]
[153 166]
[154 165]
[155 164]
[181 196]
[182 195]
[183 194]
[184 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
