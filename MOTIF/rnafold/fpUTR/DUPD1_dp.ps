%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:24:59 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DUPD1)
} def

/sequence { (\
UGCUAACCCCCAUCCUGCUUCUCUCUCAUAACCAGCUGCAGAAAGGAGAGAAAAUCCCUUGGCUCUAAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.026698683 ubox
1 40 0.004910261 ubox
1 67 0.023150773 ubox
2 11 0.030638709 ubox
2 18 0.089622962 ubox
2 36 0.006595145 ubox
2 39 0.005968806 ubox
2 63 0.877772367 ubox
2 66 0.009690251 ubox
3 17 0.089740165 ubox
3 35 0.006605054 ubox
3 38 0.005963308 ubox
3 48 0.003243868 ubox
3 50 0.006917637 ubox
3 62 0.879171577 ubox
4 34 0.006343562 ubox
4 47 0.003347158 ubox
4 49 0.006896878 ubox
4 61 0.875126387 ubox
4 67 0.053544819 ubox
5 16 0.008475455 ubox
5 60 0.838214269 ubox
5 66 0.053824694 ubox
6 59 0.744647197 ubox
7 46 0.030687538 ubox
7 62 0.063358913 ubox
8 45 0.030658526 ubox
8 46 0.070168112 ubox
8 61 0.063445021 ubox
8 62 0.056180203 ubox
9 45 0.069887413 ubox
9 46 0.155792347 ubox
9 61 0.056555674 ubox
9 62 0.085728605 ubox
10 45 0.155887828 ubox
10 46 0.210845627 ubox
10 61 0.085311323 ubox
10 62 0.287656924 ubox
11 17 0.065074726 ubox
11 45 0.211311018 ubox
11 61 0.290585950 ubox
12 16 0.053201851 ubox
12 55 0.070482839 ubox
12 60 0.279143845 ubox
13 42 0.135078475 ubox
13 46 0.004686901 ubox
13 47 0.017387818 ubox
13 49 0.012211669 ubox
13 51 0.233127213 ubox
13 54 0.071899213 ubox
13 62 0.005723055 ubox
14 41 0.098493705 ubox
14 45 0.007353976 ubox
14 46 0.023130265 ubox
14 48 0.009942418 ubox
14 50 0.221536876 ubox
14 61 0.007760738 ubox
14 62 0.014987584 ubox
15 35 0.006719564 ubox
15 41 0.479872357 ubox
15 45 0.022383775 ubox
15 46 0.003197553 ubox
15 48 0.112053782 ubox
15 50 0.668465703 ubox
15 61 0.014951246 ubox
16 34 0.006804890 ubox
16 40 0.491226135 ubox
16 44 0.019238087 ubox
16 47 0.111677921 ubox
16 49 0.674657184 ubox
17 33 0.006817629 ubox
17 36 0.016367394 ubox
17 39 0.491816093 ubox
17 63 0.062257677 ubox
18 35 0.016496871 ubox
18 38 0.491714295 ubox
18 41 0.003767355 ubox
18 45 0.110438018 ubox
18 46 0.019539229 ubox
18 48 0.778226840 ubox
18 50 0.018559382 ubox
18 62 0.062351742 ubox
19 31 0.005802906 ubox
19 34 0.015933680 ubox
19 35 0.009899428 ubox
19 40 0.003608222 ubox
19 43 0.022913207 ubox
19 44 0.108488209 ubox
19 45 0.019278846 ubox
19 47 0.779709709 ubox
19 48 0.007172758 ubox
19 49 0.013886919 ubox
19 50 0.016541212 ubox
19 51 0.005613769 ubox
19 52 0.320956200 ubox
19 53 0.037392274 ubox
19 54 0.036451085 ubox
19 61 0.054352751 ubox
20 30 0.005465247 ubox
20 34 0.010725038 ubox
20 42 0.030406887 ubox
20 43 0.104119908 ubox
20 44 0.018771020 ubox
20 46 0.779552561 ubox
20 47 0.011243587 ubox
20 48 0.005810016 ubox
20 49 0.025007212 ubox
20 51 0.355337349 ubox
20 52 0.032386809 ubox
20 53 0.036823325 ubox
21 35 0.399520990 ubox
21 41 0.035748868 ubox
21 45 0.780121179 ubox
21 46 0.013267212 ubox
21 48 0.028113777 ubox
21 50 0.357978825 ubox
22 34 0.380666616 ubox
22 40 0.034119456 ubox
22 42 0.074746010 ubox
22 44 0.765699694 ubox
22 45 0.011970932 ubox
22 46 0.004963456 ubox
22 47 0.028129546 ubox
22 49 0.357948749 ubox
22 51 0.071013444 ubox
23 35 0.073378925 ubox
23 41 0.076385812 ubox
23 45 0.007544393 ubox
23 46 0.028004313 ubox
23 48 0.357995350 ubox
23 50 0.072914969 ubox
24 34 0.070304155 ubox
24 40 0.073787039 ubox
24 42 0.767217615 ubox
24 44 0.006980756 ubox
24 45 0.019232357 ubox
24 46 0.008207720 ubox
24 47 0.357693220 ubox
24 49 0.072949665 ubox
25 35 0.036628459 ubox
25 41 0.784207164 ubox
25 45 0.019849999 ubox
25 46 0.356957535 ubox
25 48 0.072979797 ubox
26 34 0.035763817 ubox
26 40 0.779985205 ubox
26 42 0.072714942 ubox
26 44 0.024157086 ubox
26 45 0.315910858 ubox
26 46 0.009743384 ubox
26 47 0.072962784 ubox
27 38 0.781946635 ubox
27 41 0.091314331 ubox
27 45 0.100021729 ubox
27 46 0.072598105 ubox
28 37 0.764902475 ubox
29 38 0.075799331 ubox
29 67 0.004649344 ubox
30 37 0.077039654 ubox
30 66 0.004847422 ubox
32 46 0.009628222 ubox
33 45 0.011749969 ubox
34 64 0.027260257 ubox
34 66 0.008921003 ubox
35 63 0.029100183 ubox
35 65 0.009349406 ubox
36 45 0.070160221 ubox
36 62 0.029106369 ubox
37 44 0.075117009 ubox
37 45 0.003807723 ubox
37 61 0.028695511 ubox
37 67 0.003571238 ubox
38 60 0.011734073 ubox
38 63 0.017782458 ubox
38 66 0.003678433 ubox
39 61 0.004474545 ubox
39 62 0.017737952 ubox
40 59 0.007145145 ubox
40 60 0.004568936 ubox
40 64 0.007631668 ubox
40 66 0.008190199 ubox
41 58 0.007278103 ubox
41 59 0.003319079 ubox
41 60 0.003335869 ubox
41 63 0.008941931 ubox
41 65 0.009535825 ubox
42 59 0.005484302 ubox
42 60 0.031094566 ubox
42 64 0.010121273 ubox
43 59 0.033347402 ubox
43 60 0.273587118 ubox
44 59 0.346288961 ubox
44 60 0.018653707 ubox
44 64 0.008661600 ubox
44 66 0.005275021 ubox
45 57 0.152379930 ubox
45 58 0.369198729 ubox
45 59 0.024473139 ubox
45 63 0.009161780 ubox
45 65 0.004939051 ubox
45 66 0.046831528 ubox
46 56 0.153994294 ubox
46 57 0.368737561 ubox
46 58 0.026725696 ubox
46 60 0.009959924 ubox
46 63 0.003643393 ubox
46 65 0.048738039 ubox
47 55 0.153928310 ubox
47 59 0.026772301 ubox
47 64 0.048908813 ubox
47 66 0.266619727 ubox
48 56 0.368777727 ubox
48 58 0.030890130 ubox
48 60 0.016476486 ubox
48 63 0.048734826 ubox
48 65 0.275287541 ubox
49 55 0.365194145 ubox
49 59 0.026299733 ubox
49 60 0.004012169 ubox
49 64 0.275346279 ubox
49 66 0.014892329 ubox
50 56 0.043298553 ubox
50 58 0.028514060 ubox
50 59 0.004881346 ubox
50 60 0.010819821 ubox
50 63 0.275242069 ubox
50 65 0.015375086 ubox
51 55 0.037894445 ubox
51 59 0.011400139 ubox
51 60 0.045135676 ubox
51 64 0.014949250 ubox
52 59 0.043210465 ubox
52 60 0.043082944 ubox
53 59 0.041522280 ubox
53 60 0.256874473 ubox
54 59 0.214565175 ubox
55 62 0.018983428 ubox
56 61 0.021321147 ubox
56 62 0.056371101 ubox
57 61 0.056304928 ubox
59 68 0.016456995 ubox
59 69 0.005224056 ubox
60 67 0.018265678 ubox
60 68 0.007590606 ubox
61 66 0.017226633 ubox
2 63 0.9500000 lbox
3 62 0.9500000 lbox
4 61 0.9500000 lbox
5 60 0.9500000 lbox
6 59 0.9500000 lbox
15 50 0.9500000 lbox
16 49 0.9500000 lbox
18 48 0.9500000 lbox
19 47 0.9500000 lbox
20 46 0.9500000 lbox
21 45 0.9500000 lbox
22 44 0.9500000 lbox
24 42 0.9500000 lbox
25 41 0.9500000 lbox
26 40 0.9500000 lbox
27 38 0.9500000 lbox
28 37 0.9500000 lbox
showpage
end
%%EOF
