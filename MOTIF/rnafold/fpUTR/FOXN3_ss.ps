%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:29:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAGGACGCGCGGCGCGCCCGGCGGACGCCGCAGGUCCCAUGCCGCGCCGCGACCCCCGCGCCCCUGCCGCCCGCGCCCGCGGCCGCCCCCCGCCGCCCGCCGCCCCGGGCUCGCCGCGCCGCGCCCGCGCGUCCUUAGCGGGGCCACCGAGCGAUGCCCGCCGGGCGCCCGCGAAAGUUUGUCGGCUCCUGCUGAAGGGCAGCGGCGCCCCCGCACCCCCGUGCCCCGCUCCGGCCAGGAGCCUUCACGUAA\
) } def
/len { sequence length } bind def

/coor [
[495.52828979 454.68832397]
[484.25830078 444.78945923]
[469.58987427 442.20370483]
[464.32739258 427.28335571]
[453.05743408 417.38446045]
[441.78744507 407.48559570]
[425.88360596 411.60461426]
[410.50817871 405.36044312]
[401.80673218 391.03466797]
[403.38455200 374.18063354]
[391.99346924 364.42135620]
[380.60238647 354.66207886]
[369.21130371 344.90280151]
[357.82025146 335.14352417]
[350.71603394 333.18386841]
[346.34991455 325.19317627]
[335.07992554 315.29431152]
[323.80996704 305.39544678]
[312.53997803 295.49658203]
[301.26998901 285.59771729]
[290.00003052 275.69885254]
[278.73004150 265.79998779]
[267.46005249 255.90110779]
[256.19009399 246.00224304]
[244.92010498 236.10337830]
[233.65013123 226.20449829]
[218.98168945 223.61874390]
[213.71920776 208.69839478]
[202.44923401 198.79953003]
[187.78079224 196.21376038]
[182.51831055 181.29341125]
[171.24833679 171.39454651]
[159.97836304 161.49568176]
[142.59913635 158.97630310]
[136.86833191 141.46299744]
[125.47724915 131.70372009]
[114.08617401 121.94445038]
[103.60141754 126.91993713]
[91.52751923 126.94237518]
[80.17479706 121.61028290]
[71.88272858 111.58352661]
[68.54139709 98.52401733]
[71.17353058 84.82543945]
[57.91488266 77.81057739]
[42.09836578 78.19589233]
[34.46701431 65.40481567]
[21.20837021 58.38994980]
[7.94972420 51.37508774]
[-5.30892134 44.36022186]
[-21.12543488 44.74554062]
[-28.75678635 31.95446205]
[-42.01543427 24.93959808]
[-55.27407837 17.92473412]
[-68.53272247 10.90987015]
[-84.34923553 11.29518986]
[-91.98059082 -1.49589062]
[-105.23923492 -8.51075459]
[-118.49787903 -15.52561855]
[-138.60884094 -13.89896393]
[-148.11578369 -30.75504112]
[-161.54324341 -37.44111633]
[-174.97068787 -44.12719345]
[-167.03605652 -31.39763069]
[-165.33898926 -16.49394226]
[-170.20858765 -2.30637574]
[-180.70048523 8.41369343]
[-194.78002930 13.58733654]
[-209.71678162 12.21123695]
[-222.61405945 4.55225897]
[-230.97074890 -7.90430117]
[-233.16621399 -22.74276161]
[-228.77471924 -37.08552170]
[-218.64787292 -48.15110397]
[-204.74958801 -53.79358292]
[-189.77262878 -52.91800308]
[-202.06874084 -61.50902939]
[-214.36485291 -70.10005951]
[-224.91188049 -67.58992767]
[-234.89872742 -71.20911407]
[-241.12620544 -79.54246521]
[-241.74079895 -89.70788574]
[-253.82151794 -98.59924316]
[-265.90222168 -107.49060822]
[-277.98294067 -116.38197327]
[-290.06365967 -125.27333832]
[-304.80914307 -120.44114685]
[-319.56845093 -125.23103333]
[-328.66629028 -137.80119324]
[-328.60437012 -153.31814575]
[-319.40649414 -165.81530762]
[-304.60946655 -170.48725891]
[-289.90298462 -165.53753662]
[-280.94204712 -152.86941528]
[-281.17230225 -137.35404968]
[-269.09158325 -128.46269226]
[-257.01086426 -119.57132721]
[-244.93016052 -110.67996216]
[-232.84944153 -101.78859711]
[-213.51206970 -101.02989197]
[-205.77381897 -82.39616394]
[-193.47772217 -73.80513763]
[-181.18161011 -65.21411133]
[-168.28460693 -57.55464172]
[-154.85716248 -50.86856461]
[-141.42971802 -44.18249130]
[-132.10580444 -48.27862167]
[-121.84812927 -46.54473495]
[-114.06716919 -39.31340790]
[-111.48301697 -28.78426361]
[-98.22437286 -21.76939964]
[-84.96572876 -14.75453663]
[-70.09755707 -15.64160538]
[-61.51786041 -2.34877563]
[-48.25921249 4.66608810]
[-35.00056839 11.68095207]
[-21.74192238 18.69581604]
[-6.87375641 17.80874634]
[1.70594251 31.10157776]
[14.96458817 38.11643982]
[28.22323418 45.13130569]
[41.48188019 52.14616776]
[56.35004425 51.25909805]
[64.92974854 64.55192566]
[78.18839264 71.56679535]
[91.73709869 65.12998199]
[94.67478180 50.42046356]
[97.61246490 35.71094131]
[100.55014801 21.00141907]
[99.16346741 12.00190258]
[103.61569214 6.12927961]
[106.73436737 -8.54293442]
[109.85304260 -23.21514893]
[100.08364868 -35.42551422]
[100.50021362 -51.05754852]
[110.90604401 -62.73028183]
[126.38782501 -64.93220520]
[139.63552856 -56.62364197]
[144.39401245 -41.72763443]
[138.41644287 -27.27762985]
[124.52525330 -20.09647369]
[121.40657806 -5.42425919]
[118.28790283 9.24795437]
[115.25966644 23.93910217]
[112.32198334 38.64862442]
[109.38430023 53.35814285]
[106.44661713 68.06766510]
[126.04670715 86.52363586]
[123.84545135 110.55337524]
[135.23652649 120.31265259]
[146.62759399 130.07192993]
[159.50559998 129.85623169]
[168.78921509 138.19584656]
[169.87722778 150.22569275]
[181.14720154 160.12457275]
[192.41719055 170.02343750]
[207.89172363 173.31723022]
[212.34809875 187.52954102]
[223.61807251 197.42842102]
[239.09262085 200.72221375]
[243.54899597 214.93452454]
[254.81896973 224.83338928]
[266.08895874 234.73226929]
[277.35891724 244.63113403]
[288.62890625 254.52999878]
[299.89889526 264.42886353]
[311.16885376 274.32772827]
[322.43884277 284.22659302]
[333.70883179 294.12545776]
[344.97879028 304.02435303]
[356.24877930 313.92321777]
[367.57952881 323.75247192]
[378.97058105 333.51174927]
[390.36166382 343.27102661]
[401.75274658 353.03027344]
[413.14379883 362.78955078]
[426.26058960 358.60586548]
[439.62719727 361.42019653]
[449.78128052 370.39450073]
[454.14666748 383.10934448]
[451.68630981 396.21563721]
[462.95629883 406.11450195]
[474.22625732 416.01336670]
[489.70080566 419.30715942]
[494.15719604 433.51947021]
[505.42715454 443.41833496]
[517.28515625 452.60464478]
[529.68615723 461.04354858]
[542.08715820 469.48242188]
[554.48815918 477.92132568]
[566.88922119 486.36019897]
[579.29022217 494.79910278]
[591.69122314 503.23800659]
[604.09222412 511.67687988]
[616.54498291 520.03924561]
[629.04901123 528.32470703]
[641.55303955 536.61016846]
[661.03674316 531.60003662]
[677.64154053 542.40533447]
[680.85131836 561.64385986]
[693.65301514 569.46160889]
[706.45465088 577.27941895]
[719.25628662 585.09716797]
[732.05798340 592.91497803]
[750.31542969 587.77648926]
[766.24206543 597.47369385]
[769.92987061 615.42510986]
[782.92022705 622.92510986]
[798.74017334 623.12451172]
[805.89367676 636.18884277]
[818.88403320 643.68884277]
[835.27429199 643.14776611]
[843.70703125 657.21258545]
[835.50750732 671.41467285]
[819.11059570 671.14410400]
[811.38403320 656.67919922]
[798.39367676 649.17919922]
[783.50286865 649.51629639]
[775.42022705 635.91546631]
[762.42987061 628.41546631]
[752.34265137 633.67553711]
[740.84942627 633.42309570]
[730.79571533 627.60540771]
[724.72595215 617.56170654]
[724.24017334 605.71661377]
[711.43853760 597.89886475]
[698.63684082 590.08105469]
[685.83520508 582.26330566]
[673.03356934 574.44549561]
[664.11816406 579.43548584]
[653.85668945 580.29577637]
[644.08306885 576.80572510]
[636.57165527 569.52813721]
[632.71545410 559.71972656]
[633.26757812 549.11419678]
[620.76354980 540.82873535]
[608.25952148 532.54327393]
[600.96832275 531.47149658]
[595.65332031 524.07788086]
[583.25231934 515.63897705]
[570.85131836 507.20010376]
[558.45031738 498.76123047]
[546.04931641 490.32232666]
[533.64825439 481.88345337]
[521.24725342 473.44454956]
[508.84625244 465.00564575]
[514.14099121 479.04010010]
[511.78991699 493.85470581]
[502.41027832 505.56036377]
[488.46438599 511.08410645]
[473.61328125 508.97586060]
[461.75567627 499.78906250]
[456.00439453 485.93542480]
[457.86929321 471.05181885]
[466.86074829 459.04541016]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 185]
[2 184]
[4 182]
[5 181]
[6 180]
[10 175]
[11 174]
[12 173]
[13 172]
[14 171]
[16 170]
[17 169]
[18 168]
[19 167]
[20 166]
[21 165]
[22 164]
[23 163]
[24 162]
[25 161]
[26 160]
[28 158]
[29 157]
[31 155]
[32 154]
[33 153]
[35 150]
[36 149]
[37 148]
[43 124]
[44 123]
[46 121]
[47 120]
[48 119]
[49 118]
[51 116]
[52 115]
[53 114]
[54 113]
[56 111]
[57 110]
[58 109]
[60 105]
[61 104]
[62 103]
[75 102]
[76 101]
[77 100]
[81 98]
[82 97]
[83 96]
[84 95]
[85 94]
[125 146]
[126 145]
[127 144]
[128 143]
[130 142]
[131 141]
[132 140]
[186 245]
[187 244]
[188 243]
[189 242]
[190 241]
[191 240]
[192 239]
[193 238]
[194 236]
[195 235]
[196 234]
[199 228]
[200 227]
[201 226]
[202 225]
[203 224]
[206 219]
[207 218]
[209 216]
[210 215]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
