%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:56:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGGGCGGGCAGCAUCCACAUGACCCGCGCCGGCGGGAGGGCGUGGGGAGGCAGGCCAGGAACGCACGCUGCCUGGCCGUAUCGCCGCCCCCACCGCCGCCGCCGCCGGGACUAGAAGUGAGCCGCCCGGGUCCCAAACGCCAGCCAGCCAGUCAGUGGGUCCCGCAGUCGCCCGCAACCGGGGCGAAUC\
) } def
/len { sequence length } bind def

/coor [
[144.70533752 374.21691895]
[142.87907410 366.76089478]
[143.12344360 359.06137085]
[145.43495178 351.68469238]
[149.65753174 345.17730713]
[155.49301147 340.02539062]
[150.90446472 325.74444580]
[146.31591797 311.46350098]
[141.72737122 297.18255615]
[137.13882446 282.90161133]
[134.69203186 281.50262451]
[132.65667725 279.04229736]
[131.44267273 275.67419434]
[131.39622498 271.69830322]
[132.75047302 267.53436279]
[129.10577393 252.98388672]
[125.46106720 238.43342590]
[121.81636047 223.88294983]
[118.17166138 209.33247375]
[114.52695465 194.78201294]
[109.84445953 189.04829407]
[110.94373322 179.96365356]
[107.53759003 165.35549927]
[104.13144684 150.74734497]
[100.72529602 136.13919067]
[78.50344086 129.05967712]
[65.23070526 109.88248444]
[66.43260193 86.59115601]
[53.96055984 78.25760651]
[41.48851776 69.92404938]
[25.71547890 68.69041443]
[19.43175316 55.18619156]
[6.95970869 46.85263824]
[-5.51233530 38.51908493]
[-17.98437881 30.18553162]
[-30.45642471 21.85197830]
[-42.92846680 13.51842403]
[-58.23801422 16.39168167]
[-70.76772308 7.76260424]
[-73.41259003 -6.85041380]
[-85.88463593 -15.18396664]
[-98.35667419 -23.51752090]
[-107.24626160 -25.68877220]
[-110.96307373 -32.09085083]
[-123.29709625 -40.62735367]
[-135.63111877 -49.16385651]
[-147.96514893 -57.70035934]
[-163.71588135 -59.19190216]
[-169.77781677 -72.79712677]
[-182.11184692 -81.33363342]
[-197.86257935 -82.82518005]
[-203.92451477 -96.43040466]
[-216.25854492 -104.96690369]
[-225.11140442 -107.28331757]
[-228.72297668 -113.74535370]
[-240.91567993 -122.48252106]
[-253.10836792 -131.21968079]
[-265.30108643 -139.95684814]
[-277.49377441 -148.69401550]
[-289.68646240 -157.43118286]
[-301.87918091 -166.16835022]
[-315.52600098 -159.23849487]
[-330.82995605 -159.45599365]
[-344.27432251 -166.77088928]
[-352.76968384 -179.50224304]
[-354.36386108 -194.72450256]
[-348.69052124 -208.93969727]
[-337.05334473 -218.88128662]
[-322.12649536 -222.26475525]
[-307.34005737 -218.31260681]
[-296.09179688 -207.93302917]
[-290.96655273 -193.51115417]
[-293.14199829 -178.36105347]
[-280.94931030 -169.62388611]
[-268.75662231 -160.88671875]
[-256.56390381 -152.14955139]
[-244.37121582 -143.41238403]
[-232.17851257 -134.67521667]
[-219.98580933 -125.93805695]
[-207.72203064 -117.30093384]
[-195.38801575 -108.76442719]
[-180.51948547 -107.88346863]
[-173.57533264 -93.66765594]
[-161.24131775 -85.13115692]
[-146.37278748 -84.25019836]
[-139.42863464 -70.03437805]
[-127.09461975 -61.49787903]
[-114.76059723 -52.96137619]
[-102.42657471 -44.42487335]
[-90.02312469 -35.98956299]
[-77.55107880 -27.65601158]
[-65.07903290 -19.32245827]
[-50.56621933 -22.47108269]
[-37.79907990 -14.19734287]
[-34.59491348 1.04638004]
[-22.12286949 9.37993336]
[-9.65082645 17.71348763]
[2.82121801 26.04704094]
[15.29326248 34.38059235]
[27.76530647 42.71414566]
[42.64625931 43.35171127]
[49.82207108 57.45200729]
[62.29411316 65.78556061]
[74.76615906 74.11911011]
[81.54385376 66.57798767]
[90.58429718 60.90570831]
[101.34539795 57.77639771]
[113.08715057 57.70038223]
[124.92242432 60.96722794]
[136.36033630 51.26288605]
[147.79823303 41.55854416]
[159.23614502 31.85420036]
[170.67405701 22.14985847]
[182.11196899 12.44551563]
[180.05589294 -1.19319868]
[184.97236633 -13.96404648]
[195.47578430 -22.56590652]
[208.75166321 -24.83219528]
[221.31028748 -20.27580070]
[232.90544128 -29.79170036]
[244.50059509 -39.30759811]
[252.90866089 -54.02972031]
[269.38302612 -50.02574539]
[270.09606934 -33.08679962]
[254.01649475 -27.71244240]
[242.42134094 -18.19654274]
[230.82618713 -8.68064404]
[232.31976318 7.65964222]
[223.69799805 21.81517792]
[208.18609619 28.11029816]
[191.81629944 23.88342285]
[180.37840271 33.58776474]
[168.94049072 43.29210663]
[157.50257874 52.99645233]
[146.06466675 62.70079422]
[134.62677002 72.40513611]
[137.03756714 79.50711060]
[151.24159241 74.68573761]
[156.06274414 88.88983917]
[141.85914612 93.71105957]
[144.26994324 100.81304169]
[159.25187683 101.54905701]
[170.79229736 90.75116730]
[186.58486938 91.35971832]
[197.26013184 103.01364899]
[196.48464966 118.79890442]
[184.71850586 129.35035706]
[168.94233704 128.40803528]
[158.51586914 116.53098297]
[143.53393555 115.79496765]
[135.19119263 124.57507324]
[125.45787811 130.24694824]
[115.33345032 132.73304749]
[118.73960114 147.34120178]
[122.14574432 161.94935608]
[125.55188751 176.55751038]
[129.07742310 191.13731384]
[132.72212219 205.68777466]
[136.36683655 220.23825073]
[140.01153564 234.78871155]
[143.65623474 249.33918762]
[147.30093384 263.88964844]
[151.41976929 278.31307983]
[156.00831604 292.59402466]
[160.59686279 306.87496948]
[165.18540955 321.15591431]
[169.77395630 335.43682861]
[191.18322754 344.01318359]
[199.20687866 365.35021973]
[188.99575806 385.43161011]
[195.18635559 399.09457397]
[201.37696838 412.75753784]
[207.56758118 426.42050171]
[213.75817871 440.08343506]
[219.94879150 453.74639893]
[235.05621338 457.78369141]
[243.99166870 470.61691284]
[242.53610229 486.18661499]
[231.37678528 497.14123535]
[215.78282166 498.30838013]
[203.11718750 489.13690186]
[199.36021423 473.95733643]
[206.28582764 459.93701172]
[200.09521484 446.27404785]
[193.90461731 432.61108398]
[187.71400452 418.94812012]
[181.52340698 405.28518677]
[175.33279419 391.62222290]
[167.79438782 391.84158325]
[160.44789124 390.02160645]
[153.83673096 386.28198242]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 167]
[7 166]
[8 165]
[9 164]
[10 163]
[15 162]
[16 161]
[17 160]
[18 159]
[19 158]
[20 157]
[22 156]
[23 155]
[24 154]
[25 153]
[28 104]
[29 103]
[30 102]
[32 100]
[33 99]
[34 98]
[35 97]
[36 96]
[37 95]
[40 92]
[41 91]
[42 90]
[44 89]
[45 88]
[46 87]
[47 86]
[49 84]
[50 83]
[52 81]
[53 80]
[55 79]
[56 78]
[57 77]
[58 76]
[59 75]
[60 74]
[61 73]
[109 136]
[110 135]
[111 134]
[112 133]
[113 132]
[114 131]
[119 127]
[120 126]
[121 125]
[141 150]
[142 149]
[170 188]
[171 187]
[172 186]
[173 185]
[174 184]
[175 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
