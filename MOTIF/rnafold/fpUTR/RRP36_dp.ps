%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:30:30 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RRP36)
} def

/sequence { (\
GCUGCCGUGAGCGGAAGCGGCGCCAUUCGUCUUCCGAGCGCUACUGCCAGCUG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.008023433 ubox
1 12 0.031335409 ubox
1 18 0.019773937 ubox
1 23 0.004646718 ubox
1 39 0.004949909 ubox
1 47 0.090583780 ubox
1 51 0.992078670 ubox
2 7 0.008308137 ubox
2 11 0.031727811 ubox
2 14 0.004051929 ubox
2 17 0.019788164 ubox
2 22 0.004556707 ubox
2 38 0.004952313 ubox
2 46 0.090827393 ubox
2 50 0.993758242 ubox
3 10 0.031534893 ubox
3 13 0.004076492 ubox
3 16 0.017555926 ubox
3 37 0.004855028 ubox
3 43 0.005704911 ubox
3 49 0.991792104 ubox
4 12 0.005800334 ubox
4 21 0.005847970 ubox
4 41 0.005116350 ubox
4 42 0.006178541 ubox
4 45 0.007458764 ubox
4 47 0.532674562 ubox
4 48 0.837793838 ubox
4 51 0.008128365 ubox
5 11 0.006119841 ubox
5 14 0.023538845 ubox
5 20 0.005915176 ubox
5 40 0.004498623 ubox
5 46 0.748758122 ubox
5 50 0.008126226 ubox
6 13 0.023649977 ubox
6 19 0.005996569 ubox
6 40 0.045307482 ubox
6 46 0.556917008 ubox
7 12 0.023047584 ubox
7 18 0.006019771 ubox
7 39 0.046591472 ubox
7 41 0.951760206 ubox
7 44 0.261477131 ubox
7 45 0.111730126 ubox
7 47 0.014371983 ubox
7 51 0.005601100 ubox
8 17 0.006004602 ubox
8 38 0.045587258 ubox
8 40 0.960843958 ubox
8 43 0.249773690 ubox
8 46 0.013766419 ubox
8 49 0.004664429 ubox
8 50 0.005477114 ubox
9 39 0.972343640 ubox
9 42 0.173867141 ubox
9 45 0.005926657 ubox
9 48 0.005283181 ubox
10 42 0.121981638 ubox
10 45 0.003312678 ubox
10 52 0.024545734 ubox
11 18 0.008206130 ubox
11 39 0.126538421 ubox
11 41 0.146820275 ubox
11 44 0.003478958 ubox
11 47 0.015092458 ubox
11 51 0.025220503 ubox
12 17 0.008214420 ubox
12 36 0.982285932 ubox
12 38 0.115349958 ubox
12 40 0.136648671 ubox
12 46 0.015098259 ubox
12 50 0.025212447 ubox
13 35 0.996765269 ubox
13 39 0.064154685 ubox
13 45 0.014881998 ubox
13 48 0.034170219 ubox
14 33 0.003495744 ubox
14 34 0.998549184 ubox
14 44 0.014793151 ubox
14 47 0.034151566 ubox
15 32 0.009660608 ubox
15 33 0.997999067 ubox
16 32 0.994686045 ubox
16 33 0.014271076 ubox
16 42 0.010290318 ubox
16 45 0.032052228 ubox
16 52 0.004162068 ubox
17 30 0.144891702 ubox
17 31 0.979841389 ubox
17 32 0.019498499 ubox
17 41 0.010347842 ubox
17 44 0.035694054 ubox
17 47 0.006692020 ubox
17 51 0.004292211 ubox
18 29 0.974459436 ubox
18 36 0.024364004 ubox
18 40 0.010316324 ubox
18 46 0.006707715 ubox
18 50 0.004291071 ubox
19 27 0.008079288 ubox
19 28 0.974061892 ubox
19 31 0.122969596 ubox
19 32 0.004407580 ubox
19 35 0.024330786 ubox
19 39 0.009043785 ubox
19 42 0.042193780 ubox
19 45 0.003830443 ubox
19 48 0.005969303 ubox
20 26 0.026333870 ubox
20 27 0.766413691 ubox
20 30 0.208769099 ubox
20 31 0.005019809 ubox
20 34 0.024138020 ubox
20 39 0.004457761 ubox
20 41 0.043859257 ubox
20 47 0.005974200 ubox
21 29 0.214775942 ubox
21 36 0.003837118 ubox
21 38 0.006264946 ubox
21 40 0.043902599 ubox
21 46 0.005964530 ubox
22 28 0.208321384 ubox
22 30 0.029118292 ubox
22 35 0.003738528 ubox
22 39 0.043973347 ubox
22 41 0.004341283 ubox
22 45 0.004008582 ubox
23 29 0.029265445 ubox
23 38 0.043732785 ubox
23 40 0.004368698 ubox
26 37 0.003434312 ubox
26 38 0.008733003 ubox
27 37 0.043940951 ubox
28 36 0.044439106 ubox
28 40 0.003702621 ubox
29 35 0.043838145 ubox
29 39 0.003756381 ubox
30 37 0.004341926 ubox
31 36 0.004575745 ubox
37 52 0.021990843 ubox
38 47 0.011565543 ubox
38 51 0.022625301 ubox
39 46 0.011587947 ubox
39 50 0.022537599 ubox
40 45 0.007881433 ubox
40 47 0.048868568 ubox
40 51 0.011612077 ubox
41 46 0.049087612 ubox
41 50 0.011639957 ubox
42 49 0.011213833 ubox
44 50 0.005307529 ubox
45 49 0.004819560 ubox
1 51 0.9500000 lbox
2 50 0.9500000 lbox
3 49 0.9500000 lbox
4 47 0.9500000 lbox
5 46 0.9500000 lbox
7 41 0.9500000 lbox
8 40 0.9500000 lbox
9 39 0.9500000 lbox
12 36 0.9500000 lbox
13 35 0.9500000 lbox
14 34 0.9500000 lbox
15 33 0.9500000 lbox
16 32 0.9500000 lbox
17 31 0.9500000 lbox
18 29 0.9500000 lbox
19 28 0.9500000 lbox
20 27 0.9500000 lbox
showpage
end
%%EOF
