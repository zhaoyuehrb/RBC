%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:24:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGAGAGAGGGAGAGACUCGAGAGCGAGCGAGCGCGGGAGCGAGGGCCGCAGCGGCAGGGCCGGCGGGGAAGUGGGAAGAGGGACCUGGACUUCGGGACCCCAGCUGUCCCCGCCCCCGCCCCCGCCCCCGCCCUCUCCACCAGCUCAGGCUGAACGCGCCCGGAACGUCCCAGGCUGUUUCCUCUGCCACC\
) } def
/len { sequence length } bind def

/coor [
[109.28237915 285.25518799]
[96.15660858 292.97747803]
[81.02394104 294.68698120]
[66.50621033 290.08746338]
[55.11870193 279.97586060]
[48.83436584 266.10406494]
[48.74200439 250.87542725]
[54.85761642 236.92842102]
[66.12164307 226.67942810]
[80.58251190 221.90417480]
[82.03765869 206.97491455]
[75.57152557 193.55708313]
[84.61108398 180.57258606]
[86.06623077 165.64334106]
[87.52137756 150.71409607]
[88.97652435 135.78483582]
[84.42002869 134.04902649]
[80.12772369 131.73585510]
[69.78186798 142.59693909]
[59.43600845 153.45802307]
[49.09015274 164.31912231]
[45.75972366 180.37652588]
[30.10562706 185.26336670]
[18.23145294 173.95248413]
[22.35233688 158.07954407]
[38.22906494 153.97326660]
[48.57492065 143.11216736]
[58.92077637 132.25108337]
[69.26663208 121.38999176]
[63.09574127 93.66381836]
[78.16136932 69.58378601]
[72.03074646 55.89381027]
[65.90012360 42.20383453]
[53.19831848 32.77119827]
[55.05813980 17.99316216]
[48.92751694 4.30318451]
[42.79689407 -9.38679218]
[36.66627121 -23.07676888]
[30.53565025 -36.76674652]
[17.83384132 -46.19938278]
[19.69366646 -60.97741699]
[13.56304264 -74.66739655]
[7.43241978 -88.35736847]
[-5.26938772 -97.79000854]
[-3.40956402 -112.56804657]
[-9.54018688 -126.25801849]
[-15.67080975 -139.94799805]
[-21.80143356 -153.63796997]
[-36.29804993 -142.24909973]
[-50.37152481 -151.71417236]
[-65.17527771 -154.13262939]
[-80.31376648 -147.82722473]
[-93.17758179 -157.99847412]
[-90.53353119 -174.18307495]
[-75.10159302 -179.73168945]
[-62.75681305 -168.93638611]
[-47.95306396 -166.51791382]
[-38.97812653 -172.26049805]
[-27.61405563 -170.06640625]
[-31.45722198 -184.56571960]
[-35.30038834 -199.06503296]
[-39.69960022 -204.03126526]
[-40.76014328 -209.63273621]
[-39.02510834 -214.09620667]
[-42.39674377 -228.71235657]
[-45.76837921 -243.32852173]
[-49.14001465 -257.94467163]
[-52.51165009 -272.56082153]
[-55.88328934 -287.17700195]
[-59.25492477 -301.79315186]
[-62.62656021 -316.40930176]
[-66.11643219 -330.99768066]
[-69.72430420 -345.55734253]
[-73.44994354 -360.08728027]
[-77.29311371 -374.58660889]
[-81.13627625 -389.08590698]
[-84.97944641 -403.58523560]
[-102.85816193 -412.72308350]
[-108.19272614 -431.76376343]
[-97.98348236 -448.34143066]
[-102.52622986 -462.63699341]
[-107.06898499 -476.93255615]
[-111.61173248 -491.22814941]
[-126.37986755 -495.99069214]
[-135.50097656 -508.54397583]
[-135.46778870 -524.06103516]
[-126.29309082 -536.57519531]
[-111.50472260 -541.27453613]
[-96.78912354 -536.35205078]
[-87.80474091 -523.70056152]
[-88.00624847 -508.18481445]
[-97.31616211 -495.77090454]
[-92.77341461 -481.47531128]
[-88.23065948 -467.17974854]
[-83.68791199 -452.88418579]
[-73.61420441 -450.78796387]
[-65.25878906 -444.64541626]
[-60.17417145 -435.51449585]
[-59.33959579 -425.01559448]
[-62.97314453 -415.04415894]
[-70.48013306 -407.42840576]
[-66.63696289 -392.92907715]
[-62.79380035 -378.42977905]
[-58.95063400 -363.93045044]
[-54.19115829 -358.26229858]
[-55.16465759 -349.16522217]
[-51.55678558 -334.60556030]
[-46.88971710 -328.86108398]
[-48.01040268 -319.78094482]
[-44.63876724 -305.16479492]
[-41.26712799 -290.54864502]
[-37.89549255 -275.93246460]
[-34.52385712 -261.31631470]
[-31.15222168 -246.70014954]
[-27.78058624 -232.08399963]
[-24.40895081 -217.46783447]
[-20.80107498 -202.90820312]
[-16.95790863 -188.40888977]
[-13.11474228 -173.90957642]
[-8.11145592 -159.76860046]
[-1.98083305 -146.07862854]
[4.14978981 -132.38864136]
[10.28041267 -118.69866943]
[22.54371643 -110.24523163]
[21.12239647 -94.48799133]
[27.25301933 -80.79801941]
[33.38364410 -67.10803986]
[45.64694595 -58.65460205]
[44.22562790 -42.89736938]
[50.35625076 -29.20739174]
[56.48687363 -15.51741505]
[62.61749649 -1.82743812]
[68.74811554 11.86253834]
[81.01142120 20.31597710]
[79.59010315 36.07321167]
[85.72072601 49.76318741]
[91.85134888 63.45316315]
[102.30683899 61.64794159]
[113.12142181 62.85070801]
[123.42621613 67.11530304]
[132.35247803 74.24407959]
[139.10432434 83.79290009]
[143.02857971 95.09715271]
[157.95782471 96.55229950]
[172.88708496 98.00744629]
[187.81632996 99.46260071]
[202.51492310 92.19050598]
[216.01014709 101.50775146]
[214.41926575 117.82954407]
[199.37884521 124.36543274]
[186.36117554 114.39184570]
[171.43193054 112.93669891]
[156.50268555 111.48155212]
[141.57342529 110.02640533]
[135.55384827 123.76557159]
[146.74426270 133.75430298]
[157.93467712 143.74302673]
[169.12509155 153.73175049]
[177.62414551 157.11857605]
[180.41415405 163.97398376]
[191.44134521 174.14260864]
[202.46853638 184.31123352]
[217.85887146 187.97843933]
[221.97009277 202.29440308]
[232.99729919 212.46302795]
[248.77650452 211.57302856]
[260.50759888 222.16345215]
[261.23071289 237.95120239]
[250.51686096 249.56965637]
[234.72235107 250.12582397]
[223.21781921 239.28973389]
[222.82867432 223.49023438]
[211.80146790 213.32160950]
[197.19989014 210.38172913]
[192.29991150 195.33842468]
[181.27272034 185.16979980]
[170.24552917 175.00117493]
[159.13635254 164.92216492]
[147.94595337 154.93344116]
[136.75553894 144.94471741]
[125.56512451 134.95597839]
[118.20290375 137.13090515]
[110.89376831 137.86248779]
[103.90577698 137.23999023]
[102.45063019 152.16923523]
[100.99548340 167.09849548]
[99.54033661 182.02774048]
[105.90238953 196.51341248]
[96.96691132 208.43006897]
[95.51176453 223.35931396]
[108.77832794 230.83715820]
[117.85121155 243.06837463]
[121.15848541 257.93383789]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 190]
[11 189]
[13 187]
[14 186]
[15 185]
[16 184]
[18 29]
[19 28]
[20 27]
[21 26]
[31 137]
[32 136]
[33 135]
[35 133]
[36 132]
[37 131]
[38 130]
[39 129]
[41 127]
[42 126]
[43 125]
[45 123]
[46 122]
[47 121]
[48 120]
[50 57]
[51 56]
[59 119]
[60 118]
[61 117]
[64 116]
[65 115]
[66 114]
[67 113]
[68 112]
[69 111]
[70 110]
[71 109]
[72 107]
[73 106]
[74 104]
[75 103]
[76 102]
[77 101]
[80 95]
[81 94]
[82 93]
[83 92]
[143 154]
[144 153]
[145 152]
[146 151]
[155 181]
[156 180]
[157 179]
[158 178]
[160 177]
[161 176]
[162 175]
[164 173]
[165 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
