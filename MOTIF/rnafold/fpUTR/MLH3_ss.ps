%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:19:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACAACUGGUGCGCAUGCGCACUGGUGUCUCGCGGCCUGGCGCGCCCCCUCCGAAGCGCAUGCUCGUGGGCACGCACGAGCCUCAAGAUCCAAGGUGCGCGCGUCGGCGUCCGAGGCGGUUGGUGUCGGAGAAUUUGUUAAGCGGGACUCCAGGCAAUUAUUUCCAGUCAGAGAAGGAAACCAGUGCCUGGCAUUCUCACCAUCUUUCUACCUACC\
) } def
/len { sequence length } bind def

/coor [
[136.56306458 126.11384583]
[127.41300201 137.99981689]
[112.46612549 139.26109314]
[101.45365906 129.07652283]
[101.54514313 114.07720947]
[95.03688812 127.59174347]
[88.52863312 141.10627747]
[82.02037811 154.62080383]
[75.51212311 168.13534546]
[69.00386810 181.64987183]
[62.49560928 195.16441345]
[55.98735428 208.67893982]
[49.47909546 222.19346619]
[51.24351120 238.49742126]
[37.84816742 247.95770264]
[23.07304573 240.84237671]
[22.11752510 224.47108459]
[35.96456528 215.68521118]
[42.47282028 202.17068481]
[48.98107529 188.65615845]
[55.48933029 175.14161682]
[61.99758911 161.62709045]
[68.50584412 148.11254883]
[75.01409912 134.59802246]
[81.52235413 121.08348846]
[88.03060913 107.56895447]
[83.54016876 93.25686646]
[70.47800446 85.88259125]
[57.41584015 78.50831604]
[44.35367966 71.13404083]
[31.29151917 63.75976562]
[18.22935677 56.38549042]
[9.22235680 54.89293671]
[5.03258991 48.80873108]
[-7.92144632 41.24612808]
[-20.87548256 33.68352890]
[-33.88392258 26.21489525]
[-46.94608307 18.84062004]
[-60.00824738 11.46634483]
[-73.07041168 4.09207010]
[-86.13256836 -3.28220463]
[-99.19473267 -10.65647984]
[-112.25689697 -18.03075409]
[-125.31905365 -25.40502930]
[-138.38121033 -32.77930450]
[-155.14776611 -27.78158188]
[-170.04682922 -36.29066467]
[-174.09828186 -52.61526489]
[-187.26583862 -59.79966736]
[-200.43339539 -66.98406982]
[-215.42451477 -62.75275421]
[-228.67593384 -70.22634125]
[-232.61746216 -84.54415894]
[-245.78500366 -91.72856140]
[-257.18078613 -81.76053619]
[-271.27291870 -76.30304718]
[-286.35357666 -75.99679565]
[-300.60226440 -80.85943604]
[-312.30545044 -90.28581238]
[-320.06277466 -103.12319183]
[-322.95449829 -117.81221008]
[-320.65051270 -132.57624817]
[-333.81808472 -139.76065063]
[-346.98562622 -146.94505310]
[-360.15316772 -154.12945557]
[-373.32070923 -161.31385803]
[-386.48828125 -168.49826050]
[-399.65582275 -175.68266296]
[-414.74584961 -170.98519897]
[-428.69869995 -178.40771484]
[-433.23635864 -193.54658508]
[-425.66674805 -207.42016602]
[-410.48074341 -211.79751587]
[-396.68795776 -204.08163452]
[-392.47140503 -188.85021973]
[-379.30386353 -181.66581726]
[-366.13632202 -174.48141479]
[-352.96878052 -167.29701233]
[-339.80120850 -160.11260986]
[-326.63366699 -152.92820740]
[-313.46612549 -145.74380493]
[-302.29797363 -155.67141724]
[-288.38104248 -161.18939209]
[-273.38787842 -161.61380005]
[-259.12756348 -156.87409973]
[-247.32728577 -147.52406311]
[-239.42323303 -134.67701721]
[-236.38584900 -119.87342834]
[-238.60060120 -104.89611053]
[-225.43305969 -97.71170807]
[-211.26010132 -102.14601135]
[-197.80400085 -95.04757690]
[-193.24899292 -80.15161896]
[-180.08143616 -72.96721649]
[-166.91387939 -65.78281403]
[-155.18449402 -71.11042786]
[-142.33615112 -68.67457581]
[-133.09974670 -59.14418030]
[-131.00694275 -45.84146500]
[-117.94477844 -38.46718979]
[-104.88262177 -31.09291649]
[-91.82045746 -23.71864128]
[-78.75829315 -16.34436607]
[-65.69613647 -8.97009182]
[-52.63397217 -1.59581697]
[-39.57181168 5.77845764]
[-26.50964737 13.15273285]
[-19.14294243 13.70352936]
[-13.31288147 20.72949219]
[-0.35884508 28.29209328]
[12.59519100 35.85469437]
[25.60363197 43.32332993]
[38.66579437 50.69760132]
[51.72795486 58.07187653]
[64.79011536 65.44615173]
[77.85227966 72.82042694]
[90.91444397 80.19470215]
[123.13768005 88.41403198]
[138.02424622 90.25524902]
[152.91081238 92.09645844]
[167.55636597 86.11160278]
[179.23765564 95.35263062]
[194.12423706 97.19384766]
[209.01080322 99.03505707]
[223.89736938 100.87626648]
[234.52682495 93.57546997]
[246.88548279 95.41263580]
[254.43075562 104.86394501]
[269.28912354 106.92047882]
[284.14746094 108.97700500]
[299.00582886 111.03353882]
[313.86416626 113.09006500]
[324.63638306 102.07798767]
[339.65179443 99.55001068]
[353.11730957 106.26892090]
[359.96249390 119.47048950]
[374.82086182 121.52701569]
[366.63079834 108.96027374]
[369.59426880 94.25592041]
[382.01257324 85.84249878]
[396.76754761 88.54257202]
[405.40167236 100.80847168]
[402.96582031 115.60937500]
[390.85720825 124.46116638]
[405.48110962 127.79898071]
[420.10504150 131.13679504]
[434.72894287 134.47460938]
[448.00720215 126.33055878]
[462.79040527 129.92390442]
[470.47268677 142.63288879]
[485.09658813 145.97070312]
[499.72052002 149.30851746]
[514.34442139 152.64633179]
[528.96832275 155.98414612]
[543.59228516 159.32196045]
[558.21618652 162.65977478]
[568.69470215 151.51759338]
[583.24731445 147.14518738]
[597.93695068 150.62091064]
[608.84155273 160.91387939]
[613.10131836 175.18693542]
[627.72521973 178.52474976]
[642.34918213 181.86256409]
[656.97308350 185.20037842]
[671.59698486 188.53819275]
[681.98474121 177.22491455]
[696.64221191 172.63650513]
[711.62664795 176.00721741]
[722.90734863 186.43037415]
[727.44976807 201.10217285]
[724.03210449 216.07598877]
[713.57366943 227.32392883]
[698.88769531 231.82035828]
[683.92468262 228.35577393]
[672.70953369 217.86210632]
[668.25915527 203.16210938]
[653.63525391 199.82429504]
[639.01135254 196.48648071]
[624.38745117 193.14868164]
[609.76348877 189.81086731]
[599.73278809 200.82220459]
[585.44207764 205.36451721]
[570.69909668 202.12245178]
[559.48474121 191.86889648]
[554.87835693 177.28369141]
[540.25445557 173.94587708]
[525.63055420 170.60806274]
[511.00662231 167.27024841]
[496.38269043 163.93243408]
[481.75878906 160.59461975]
[467.13485718 157.25680542]
[454.69915771 165.37397766]
[439.82086182 162.19728088]
[431.39114380 149.09852600]
[416.76721191 145.76071167]
[402.14331055 142.42289734]
[387.51937866 139.08508301]
[372.76434326 136.38537598]
[357.90597534 134.32884216]
[347.73239136 145.17486572]
[332.94812012 147.98374939]
[319.18383789 141.47239685]
[311.80764771 127.94841766]
[296.94927979 125.89189148]
[282.09094238 123.83535767]
[267.23257446 121.77883148]
[252.37423706 119.72229767]
[236.49394226 127.19561005]
[222.05615234 115.76284027]
[207.16958618 113.92162323]
[192.28302002 112.08041382]
[177.39645386 110.23920441]
[163.81568909 116.35575104]
[151.06961060 106.98302460]
[136.18304443 105.14181519]
[121.29647064 103.30060577]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 26]
[6 25]
[7 24]
[8 23]
[9 22]
[10 21]
[11 20]
[12 19]
[13 18]
[27 117]
[28 116]
[29 115]
[30 114]
[31 113]
[32 112]
[34 111]
[35 110]
[36 109]
[37 107]
[38 106]
[39 105]
[40 104]
[41 103]
[42 102]
[43 101]
[44 100]
[45 99]
[48 95]
[49 94]
[50 93]
[53 90]
[54 89]
[62 81]
[63 80]
[64 79]
[65 78]
[66 77]
[67 76]
[68 75]
[118 216]
[119 215]
[120 214]
[122 212]
[123 211]
[124 210]
[125 209]
[128 207]
[129 206]
[130 205]
[131 204]
[132 203]
[136 199]
[137 198]
[144 197]
[145 196]
[146 195]
[147 194]
[150 191]
[151 190]
[152 189]
[153 188]
[154 187]
[155 186]
[156 185]
[161 180]
[162 179]
[163 178]
[164 177]
[165 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
