%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:16:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUUCUAGCGGCGCCGGUGAGUCCGCGUGUGGAAGUCUGUGAGGCGCAGAGGUGGGGCAGGCCGUCUGGCUAGCUAGGCGGCUGGGAGCGUUUUCGUGGCGGGGAACGGAGGUUGAAUUGCCCUGCCUGGGCUCAUAGGGAAGGAGGAUGUGAAGGAGCUUGUGAAGGCAGAGGAAGAUUAUUGAAUAAUAAAAUACAGUUUUGAAAAAA\
) } def
/len { sequence length } bind def

/coor [
[446.90441895 755.57849121]
[458.61102295 746.14965820]
[451.14328003 733.14074707]
[443.67553711 720.13177490]
[436.20779419 707.12280273]
[428.74005127 694.11389160]
[422.68380737 689.87792969]
[421.25964355 680.85516357]
[413.98641968 667.73651123]
[397.63644409 663.79724121]
[389.02481079 648.95959473]
[393.90280151 632.16009521]
[386.43505859 619.15112305]
[378.96731567 606.14215088]
[365.92077637 598.95629883]
[365.76065063 583.13586426]
[358.29290771 570.12695312]
[350.82516479 557.11798096]
[335.95675659 558.29956055]
[321.99237061 552.88610840]
[311.72109985 541.90148926]
[307.21936035 527.48779297]
[309.43112183 512.48797607]
[317.97073364 499.88491821]
[310.50299072 486.87597656]
[303.03524780 473.86700439]
[295.56750488 460.85806274]
[288.09976196 447.84912109]
[272.62292480 450.73995972]
[257.06536865 448.15203857]
[243.31112671 440.38012695]
[233.03219604 428.34790039]
[227.48536682 413.49819946]
[227.35848999 397.62002563]
[232.68528748 382.63299561]
[242.83903503 370.35534668]
[235.17843628 357.45901489]
[227.51783752 344.56268311]
[219.85723877 331.66635132]
[212.19665527 318.77005005]
[204.53605652 305.87371826]
[196.87545776 292.97738647]
[190.75679016 288.83206177]
[189.19845581 279.83151245]
[181.73071289 266.82257080]
[168.68415833 259.63668823]
[168.52403259 243.81628418]
[161.05628967 230.80734253]
[156.76205444 228.71723938]
[153.73521423 223.90731812]
[153.56648254 217.29800415]
[146.48937988 204.07247925]
[139.41227722 190.84695435]
[132.33517456 177.62142944]
[125.25807190 164.39590454]
[118.18096161 151.17036438]
[111.10385895 137.94483948]
[104.02674866 124.71931458]
[96.94964600 111.49378967]
[86.70425415 100.53787994]
[73.98221588 92.59119415]
[61.26018143 84.64450836]
[48.53814697 76.69782257]
[35.81610870 68.75114441]
[23.09407425 60.80445480]
[10.37203693 52.85777283]
[-2.34999919 44.91108704]
[-15.07203579 36.96440125]
[-27.79407120 29.01771927]
[-44.19319534 28.98917580]
[-52.13236237 14.63990211]
[-43.44443893 0.73119932]
[-27.06681442 1.57114851]
[-19.84738731 16.29568291]
[-7.12535095 24.24236679]
[5.59668541 32.18905258]
[18.31872177 40.13573456]
[31.04075813 48.08242035]
[43.76279449 56.02910614]
[56.48482895 63.97578812]
[69.20686340 71.92247009]
[81.92890167 79.86915588]
[94.65093994 87.81584167]
[100.79635620 83.51656342]
[88.82057190 74.48435974]
[93.71000671 60.30361938]
[108.70761108 60.57168198]
[113.08719635 74.91799927]
[119.23261261 70.61871338]
[116.12850189 55.94341278]
[113.02439117 41.26810837]
[109.92028809 26.59280777]
[106.81617737 11.91750431]
[103.71206665 -2.75779772]
[100.60795593 -17.43309975]
[87.22686768 -25.84273911]
[83.79302216 -41.26947784]
[92.34366608 -54.56090546]
[107.80584717 -57.83145523]
[121.00612640 -49.14076996]
[124.11302185 -33.64487457]
[115.28325653 -20.53721046]
[118.38736725 -5.86190796]
[121.49147797 8.81339455]
[124.59558868 23.48869705]
[127.69969940 38.16399765]
[130.80380249 52.83930206]
[133.90791321 67.51460266]
[138.21951294 53.14762497]
[153.20661926 53.76959229]
[166.45921326 60.79588699]
[175.38427734 72.85173035]
[178.23550415 87.57825470]
[174.45503235 102.09403992]
[164.78254700 113.55889893]
[151.11059570 119.72961426]
[136.11424255 119.39878845]
[122.72657013 112.63022614]
[110.17517090 104.41667938]
[117.25228119 117.64221191]
[124.32938385 130.86773682]
[131.40649414 144.09326172]
[138.48359680 157.31878662]
[145.56069946 170.54432678]
[152.63780212 183.76985168]
[159.71490479 196.99537659]
[166.79202271 210.22090149]
[174.06524658 223.33959961]
[181.53298950 236.34855652]
[195.11367798 244.46492004]
[194.73965454 259.35482788]
[202.20739746 272.36380005]
[209.77177429 285.31677246]
[217.43237305 298.21310425]
[225.09297180 311.10943604]
[232.75357056 324.00576782]
[240.41416931 336.90209961]
[248.07476807 349.79843140]
[255.73536682 362.69473267]
[269.74890137 359.70767212]
[283.97854614 361.19226074]
[297.03451538 366.99020386]
[307.64566040 376.52252197]
[314.78341675 388.84741211]
[317.76138306 402.75320435]
[316.30139160 416.87759399]
[310.55932617 429.84100342]
[301.10870361 440.38137817]
[308.57644653 453.39031982]
[316.04418945 466.39926147]
[323.51193237 479.40823364]
[330.97967529 492.41717529]
[346.16928101 491.39855957]
[360.23751831 497.05291748]
[370.41400146 508.20904541]
[374.71990967 522.61810303]
[372.35244751 537.40673828]
[363.83410645 549.65026855]
[371.30184937 562.65917969]
[378.76959229 575.66815186]
[392.35028076 583.78454590]
[391.97625732 598.67443848]
[399.44400024 611.68341064]
[406.91174316 624.69232178]
[420.23171997 626.69061279]
[429.82867432 635.86169434]
[432.35382080 648.69549561]
[427.10510254 660.46325684]
[434.37832642 673.58197021]
[441.74902344 686.64611816]
[449.21676636 699.65509033]
[456.68450928 712.66406250]
[464.15225220 725.67297363]
[471.61999512 738.68194580]
[485.66558838 733.32775879]
[500.37588501 730.23687744]
[515.38861084 729.48529053]
[530.33404541 731.09167480]
[544.84417725 735.01629639]
[558.56164551 741.16265869]
[571.14868164 749.37933350]
[582.29522705 759.46392822]
[591.72692871 771.16821289]
[599.21142578 784.20385742]
[604.56445312 798.24993896]
[607.65417480 812.96051025]
[608.40447998 827.97326660]
[606.79687500 842.91857910]
[602.87103271 857.42834473]
[596.72357178 871.14532471]
[588.50585938 883.73168945]
[578.42028809 894.87744141]
[566.71527100 904.30816650]
[553.67895508 911.79156494]
[539.63250732 917.14343262]
[524.92169189 920.23193359]
[509.90884399 920.98101807]
[494.96365356 919.37219238]
[480.45419312 915.44512939]
[466.73773193 909.29650879]
[454.15206909 901.07775879]
[443.00714111 890.99133301]
[433.57739258 879.28552246]
[426.09503174 866.24859619]
[420.74432373 852.20166016]
[417.65707397 837.49060059]
[416.90924072 822.47772217]
[418.51928711 807.53265381]
[422.44754028 793.02349854]
[428.59725952 779.30755615]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 174]
[3 173]
[4 172]
[5 171]
[6 170]
[8 169]
[9 168]
[12 164]
[13 163]
[14 162]
[16 160]
[17 159]
[18 158]
[24 152]
[25 151]
[26 150]
[27 149]
[28 148]
[36 139]
[37 138]
[38 137]
[39 136]
[40 135]
[41 134]
[42 133]
[44 132]
[45 131]
[47 129]
[48 128]
[51 127]
[52 126]
[53 125]
[54 124]
[55 123]
[56 122]
[57 121]
[58 120]
[59 119]
[60 83]
[61 82]
[62 81]
[63 80]
[64 79]
[65 78]
[66 77]
[67 76]
[68 75]
[69 74]
[89 108]
[90 107]
[91 106]
[92 105]
[93 104]
[94 103]
[95 102]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
