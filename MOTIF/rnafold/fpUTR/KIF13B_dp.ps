%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:04:59 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KIF13B)
} def

/sequence { (\
GAAGAGUCGCCGGUGGCCGCGGCAGACGGAAGCCGAACGAGUUCCUCGGCGGCUGCAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.062178755 ubox
2 7 0.056874020 ubox
3 54 0.014590807 ubox
4 53 0.009856883 ubox
5 54 0.950076026 ubox
6 23 0.039862231 ubox
6 27 0.140744285 ubox
6 53 0.975397285 ubox
6 56 0.007193678 ubox
7 22 0.039884725 ubox
7 26 0.140983271 ubox
7 52 0.975217121 ubox
7 55 0.006731210 ubox
7 59 0.004473224 ubox
8 21 0.039952652 ubox
8 25 0.140946861 ubox
8 51 0.975535990 ubox
8 58 0.007181631 ubox
9 20 0.039943048 ubox
9 23 0.141199304 ubox
9 50 0.975645230 ubox
9 53 0.004461157 ubox
9 56 0.010280175 ubox
10 19 0.029632102 ubox
10 22 0.141656733 ubox
10 29 0.010540842 ubox
10 49 0.975647643 ubox
10 52 0.004464926 ubox
10 55 0.008017213 ubox
10 59 0.153180794 ubox
11 19 0.027997630 ubox
11 21 0.141589796 ubox
11 28 0.010587151 ubox
11 35 0.067380311 ubox
11 48 0.973181648 ubox
11 51 0.004446843 ubox
11 55 0.009537976 ubox
11 58 0.155544740 ubox
12 18 0.040085450 ubox
12 20 0.140296015 ubox
12 27 0.010556494 ubox
12 34 0.074070019 ubox
12 44 0.003882478 ubox
12 45 0.093602094 ubox
12 46 0.103991261 ubox
12 47 0.961973949 ubox
12 50 0.004156684 ubox
12 54 0.011586129 ubox
13 17 0.039658758 ubox
13 20 0.015196839 ubox
13 27 0.004128643 ubox
13 33 0.074170633 ubox
13 43 0.005449008 ubox
13 44 0.104197497 ubox
13 45 0.627410935 ubox
13 46 0.689745444 ubox
13 53 0.011664370 ubox
13 56 0.160893083 ubox
14 19 0.020491160 ubox
14 26 0.004163334 ubox
14 32 0.074138325 ubox
14 35 0.015426593 ubox
14 39 0.018258019 ubox
14 41 0.011522565 ubox
14 48 0.003718569 ubox
14 52 0.011643835 ubox
14 55 0.160921704 ubox
15 34 0.017881076 ubox
15 38 0.018722564 ubox
15 43 0.702281658 ubox
15 44 0.479063989 ubox
15 45 0.347238879 ubox
15 46 0.007949426 ubox
15 47 0.003605119 ubox
15 54 0.161013923 ubox
16 23 0.012298482 ubox
16 33 0.017891511 ubox
16 42 0.838362305 ubox
16 43 0.349078804 ubox
16 44 0.333487314 ubox
16 45 0.008849600 ubox
16 50 0.011685220 ubox
16 53 0.161663223 ubox
17 22 0.012330748 ubox
17 29 0.074197465 ubox
17 32 0.017785407 ubox
17 41 0.940014075 ubox
17 49 0.011690062 ubox
17 52 0.161665009 ubox
18 28 0.074185725 ubox
18 39 0.952879483 ubox
18 48 0.011560615 ubox
18 51 0.161661817 ubox
19 27 0.073320957 ubox
19 38 0.933379240 ubox
19 42 0.020275799 ubox
19 47 0.010412202 ubox
19 50 0.161459903 ubox
20 28 0.018096854 ubox
20 35 0.953109210 ubox
20 39 0.019925695 ubox
20 41 0.018699332 ubox
20 49 0.156500246 ubox
21 27 0.018791688 ubox
21 34 0.985551736 ubox
21 38 0.017681404 ubox
21 45 0.007009838 ubox
21 47 0.003576629 ubox
22 33 0.985624701 ubox
22 42 0.003275547 ubox
22 44 0.006987519 ubox
22 46 0.003443059 ubox
23 32 0.985424814 ubox
23 41 0.003433201 ubox
25 43 0.004047866 ubox
25 47 0.006332669 ubox
26 42 0.004421399 ubox
26 46 0.006406804 ubox
27 35 0.026965607 ubox
27 39 0.005653828 ubox
27 41 0.004402250 ubox
27 55 0.012478054 ubox
28 34 0.027340085 ubox
28 38 0.005727793 ubox
28 45 0.009960585 ubox
28 54 0.014098141 ubox
29 33 0.026899972 ubox
29 44 0.009975962 ubox
29 53 0.014150983 ubox
30 43 0.009456608 ubox
31 42 0.008695129 ubox
31 43 0.003272072 ubox
31 54 0.142392148 ubox
32 42 0.004564223 ubox
32 50 0.014469579 ubox
32 53 0.146851442 ubox
33 41 0.005523203 ubox
33 49 0.014481392 ubox
33 52 0.146877784 ubox
34 48 0.014498749 ubox
34 51 0.146873136 ubox
35 44 0.014057824 ubox
35 47 0.015052257 ubox
35 50 0.145966600 ubox
36 43 0.014447829 ubox
36 46 0.014509408 ubox
37 42 0.011510492 ubox
38 48 0.227360905 ubox
39 47 0.230403438 ubox
40 46 0.230082552 ubox
41 45 0.225025140 ubox
5 54 0.9500000 lbox
6 53 0.9500000 lbox
7 52 0.9500000 lbox
8 51 0.9500000 lbox
9 50 0.9500000 lbox
10 49 0.9500000 lbox
11 48 0.9500000 lbox
12 47 0.9500000 lbox
13 46 0.9500000 lbox
15 43 0.9500000 lbox
16 42 0.9500000 lbox
17 41 0.9500000 lbox
18 39 0.9500000 lbox
19 38 0.9500000 lbox
20 35 0.9500000 lbox
21 34 0.9500000 lbox
22 33 0.9500000 lbox
23 32 0.9500000 lbox
showpage
end
%%EOF
