%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:40:40 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (HSD17B3)
} def

/sequence { (\
UACACAGAGAGCCACGGCCAGGGCUGAAACAGUCUGUUGAGUGCAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 39 0.053037865 ubox
1 43 0.128696748 ubox
2 33 0.048620565 ubox
2 35 0.003555175 ubox
2 37 0.005687148 ubox
2 38 0.056532446 ubox
2 42 0.147686943 ubox
3 26 0.006885205 ubox
3 32 0.052387481 ubox
3 36 0.005703020 ubox
3 39 0.163375500 ubox
3 41 0.148891858 ubox
3 43 0.060791630 ubox
4 25 0.004980544 ubox
4 33 0.023717126 ubox
4 35 0.004301612 ubox
4 37 0.285044779 ubox
4 38 0.116153234 ubox
4 42 0.059838685 ubox
5 26 0.020365014 ubox
5 32 0.025280868 ubox
5 36 0.319917587 ubox
5 39 0.032831477 ubox
5 41 0.058640997 ubox
5 43 0.009423392 ubox
6 25 0.018289690 ubox
6 35 0.321500668 ubox
6 38 0.032746790 ubox
6 42 0.009082566 ubox
7 24 0.015867492 ubox
7 34 0.321716222 ubox
7 37 0.028373485 ubox
7 38 0.020350079 ubox
8 25 0.004487419 ubox
8 33 0.318693653 ubox
8 35 0.037281314 ubox
8 37 0.020140556 ubox
8 38 0.018631385 ubox
9 24 0.004007812 ubox
9 34 0.037881858 ubox
9 37 0.015102157 ubox
9 38 0.006655568 ubox
10 25 0.206423605 ubox
10 33 0.036672118 ubox
10 35 0.019045729 ubox
10 37 0.006160489 ubox
10 38 0.013838119 ubox
11 18 0.584363374 ubox
11 24 0.215402691 ubox
11 33 0.008159597 ubox
11 34 0.018427730 ubox
11 37 0.014364620 ubox
11 42 0.029605910 ubox
11 44 0.411981355 ubox
11 47 0.422914514 ubox
12 17 0.585298928 ubox
12 22 0.059387599 ubox
12 23 0.215441782 ubox
12 32 0.019047805 ubox
12 36 0.014407481 ubox
12 41 0.031111348 ubox
12 43 0.313425268 ubox
12 46 0.422153063 ubox
13 21 0.066313346 ubox
13 22 0.215357314 ubox
13 26 0.004876339 ubox
13 39 0.014169557 ubox
13 43 0.521814278 ubox
14 25 0.003367665 ubox
14 37 0.005373831 ubox
14 38 0.012547235 ubox
14 42 0.589922818 ubox
15 26 0.311469274 ubox
15 36 0.006643476 ubox
15 39 0.174280938 ubox
15 41 0.588393418 ubox
15 43 0.085802058 ubox
16 25 0.314974761 ubox
16 35 0.004919443 ubox
16 38 0.198180692 ubox
16 42 0.079834903 ubox
16 48 0.062810495 ubox
17 24 0.315538830 ubox
17 34 0.004202922 ubox
17 37 0.213307960 ubox
17 42 0.079125265 ubox
17 44 0.014231402 ubox
17 47 0.063258350 ubox
18 23 0.314516594 ubox
18 36 0.205954649 ubox
18 41 0.085107644 ubox
18 43 0.014153635 ubox
18 46 0.063134519 ubox
19 36 0.183271562 ubox
19 39 0.129877176 ubox
19 43 0.017663922 ubox
20 35 0.182676183 ubox
20 38 0.124499440 ubox
20 42 0.017749529 ubox
21 34 0.149598220 ubox
21 35 0.596003847 ubox
21 37 0.049734578 ubox
21 38 0.003164506 ubox
21 48 0.049486022 ubox
22 33 0.105645222 ubox
22 34 0.617534106 ubox
22 35 0.015053099 ubox
22 47 0.035374971 ubox
22 48 0.657097065 ubox
23 33 0.626593299 ubox
23 34 0.015659626 ubox
23 42 0.035809425 ubox
23 44 0.006324035 ubox
23 47 0.668170207 ubox
24 32 0.635903381 ubox
24 41 0.035944789 ubox
24 43 0.006324251 ubox
24 46 0.669154849 ubox
25 31 0.635177549 ubox
25 40 0.035430427 ubox
25 45 0.668922212 ubox
26 30 0.625138029 ubox
26 34 0.014381168 ubox
26 44 0.667841871 ubox
27 33 0.013922828 ubox
27 38 0.026387943 ubox
28 37 0.021301058 ubox
28 38 0.042149026 ubox
29 37 0.049383823 ubox
29 42 0.096881199 ubox
30 36 0.052144558 ubox
30 39 0.071284173 ubox
30 41 0.096628368 ubox
30 43 0.663433248 ubox
31 35 0.042273044 ubox
31 38 0.069258771 ubox
31 42 0.663476798 ubox
32 37 0.049143341 ubox
32 42 0.004065374 ubox
32 44 0.010798618 ubox
32 47 0.098046325 ubox
33 40 0.671549474 ubox
33 43 0.010526480 ubox
33 46 0.014336893 ubox
34 39 0.673459956 ubox
34 41 0.025200764 ubox
34 46 0.141196487 ubox
35 40 0.025357410 ubox
35 45 0.144103506 ubox
36 44 0.145513842 ubox
36 47 0.099893930 ubox
37 43 0.144470492 ubox
37 46 0.102766394 ubox
38 45 0.116703161 ubox
39 44 0.118495626 ubox
41 47 0.043194888 ubox
42 46 0.040489865 ubox
11 18 0.9500000 lbox
12 17 0.9500000 lbox
22 48 0.9500000 lbox
23 47 0.9500000 lbox
24 46 0.9500000 lbox
25 45 0.9500000 lbox
26 44 0.9500000 lbox
30 43 0.9500000 lbox
31 42 0.9500000 lbox
33 40 0.9500000 lbox
34 39 0.9500000 lbox
showpage
end
%%EOF
