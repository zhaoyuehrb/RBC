%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:21:03 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (IL2RG)
} def

/sequence { (\
AGAGGAAACGUGUGGGUGGGGAGGGGUAGUGGGUGAGGGACCCAGGUUCCUGACACAGACAGACUACACCCAGGGAAUGAAGAGCAAGCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
3 65 0.009490891 ubox
4 64 0.009774890 ubox
4 65 0.007160298 ubox
4 70 0.034727475 ubox
4 71 0.054937572 ubox
4 92 0.171345861 ubox
5 64 0.007405862 ubox
5 69 0.034774292 ubox
5 70 0.054912538 ubox
5 91 0.172050029 ubox
8 17 0.049967267 ubox
9 16 0.052121301 ubox
9 18 0.013258472 ubox
9 79 0.262843023 ubox
9 90 0.205143655 ubox
10 17 0.010468581 ubox
10 60 0.030172541 ubox
10 64 0.047353957 ubox
10 69 0.068291392 ubox
10 78 0.261013633 ubox
10 85 0.051701058 ubox
10 89 0.208025703 ubox
10 91 0.510255921 ubox
11 16 0.006456444 ubox
11 57 0.003457198 ubox
11 59 0.030121384 ubox
11 61 0.014844367 ubox
11 63 0.047237438 ubox
11 68 0.068489183 ubox
11 72 0.014095232 ubox
11 77 0.232579058 ubox
11 79 0.020195302 ubox
11 84 0.049548131 ubox
11 86 0.133766604 ubox
11 88 0.191311589 ubox
11 90 0.511018988 ubox
12 56 0.003597702 ubox
12 60 0.015786425 ubox
12 67 0.068543150 ubox
12 71 0.012354603 ubox
12 78 0.036503978 ubox
12 85 0.154112905 ubox
12 89 0.511746122 ubox
12 91 0.025687564 ubox
13 55 0.003554226 ubox
13 57 0.030180244 ubox
13 59 0.015663651 ubox
13 61 0.047411926 ubox
13 66 0.068477328 ubox
13 72 0.758086833 ubox
13 77 0.033303210 ubox
13 79 0.003510209 ubox
13 84 0.133632743 ubox
13 86 0.081843926 ubox
13 88 0.484321945 ubox
13 90 0.025223433 ubox
14 54 0.003227443 ubox
14 56 0.030050513 ubox
14 60 0.047485692 ubox
14 65 0.068344697 ubox
14 70 0.013269902 ubox
14 71 0.876565452 ubox
14 78 0.007468804 ubox
14 85 0.086266716 ubox
14 89 0.024089912 ubox
14 92 0.008460744 ubox
15 64 0.068234193 ubox
15 69 0.013155052 ubox
15 70 0.877042158 ubox
15 91 0.008054598 ubox
15 92 0.058944345 ubox
16 54 0.040406782 ubox
16 56 0.062908148 ubox
16 60 0.010380884 ubox
16 67 0.013310265 ubox
16 69 0.877038964 ubox
16 78 0.076017407 ubox
16 85 0.417865883 ubox
16 89 0.007298294 ubox
16 91 0.059681661 ubox
17 53 0.041149848 ubox
17 55 0.063013922 ubox
17 57 0.043801144 ubox
17 59 0.009600866 ubox
17 61 0.016831510 ubox
17 63 0.003445056 ubox
17 66 0.014085210 ubox
17 68 0.876746716 ubox
17 72 0.190145682 ubox
17 77 0.077306378 ubox
17 79 0.021591092 ubox
17 84 0.403507549 ubox
17 86 0.024671322 ubox
17 88 0.007014370 ubox
17 90 0.059661374 ubox
18 54 0.063018289 ubox
18 56 0.044229305 ubox
18 60 0.017402479 ubox
18 65 0.016347069 ubox
18 67 0.874965803 ubox
18 70 0.009156374 ubox
18 71 0.236462720 ubox
18 78 0.052633640 ubox
18 85 0.025753348 ubox
18 89 0.059300337 ubox
18 92 0.003389099 ubox
19 51 0.042886149 ubox
19 64 0.024380221 ubox
19 65 0.254834605 ubox
19 69 0.009182186 ubox
19 70 0.236429839 ubox
19 71 0.056071599 ubox
19 91 0.003304267 ubox
19 92 0.003564288 ubox
20 50 0.043156363 ubox
20 64 0.281853109 ubox
20 65 0.513051256 ubox
20 69 0.236191884 ubox
20 70 0.056966688 ubox
20 71 0.016964146 ubox
20 91 0.003492687 ubox
21 49 0.043176672 ubox
21 64 0.670429671 ubox
21 69 0.057285544 ubox
21 70 0.015322183 ubox
22 48 0.043015806 ubox
22 51 0.060950249 ubox
22 65 0.338382792 ubox
23 47 0.041545411 ubox
23 49 0.003941357 ubox
23 50 0.061561141 ubox
23 51 0.082234667 ubox
23 64 0.358177138 ubox
23 65 0.076104519 ubox
23 70 0.031339603 ubox
23 71 0.379478259 ubox
24 47 0.004035643 ubox
24 48 0.004161760 ubox
24 49 0.061463955 ubox
24 50 0.083424923 ubox
24 51 0.023164103 ubox
24 64 0.084989110 ubox
24 65 0.127000286 ubox
24 69 0.031965022 ubox
24 70 0.380538492 ubox
24 71 0.127244322 ubox
25 47 0.006175382 ubox
25 48 0.059648490 ubox
25 49 0.083644039 ubox
25 50 0.023439965 ubox
25 64 0.128072950 ubox
25 65 0.189501216 ubox
25 69 0.380230252 ubox
25 70 0.127351166 ubox
26 47 0.049126173 ubox
26 48 0.081209408 ubox
26 49 0.023490067 ubox
26 56 0.013144695 ubox
26 60 0.807728069 ubox
26 64 0.193072221 ubox
26 67 0.383486777 ubox
26 69 0.127157311 ubox
26 78 0.003276853 ubox
27 46 0.028330265 ubox
27 55 0.013073839 ubox
27 59 0.798666865 ubox
27 63 0.192832460 ubox
27 66 0.384642896 ubox
27 68 0.125795115 ubox
27 77 0.003204852 ubox
28 65 0.385072247 ubox
29 56 0.299963633 ubox
29 60 0.184294297 ubox
29 64 0.384791572 ubox
29 67 0.124890988 ubox
30 44 0.114296332 ubox
30 55 0.295738429 ubox
30 57 0.785206086 ubox
30 59 0.180245662 ubox
30 61 0.042144114 ubox
30 63 0.358532602 ubox
30 66 0.124835912 ubox
30 72 0.030081269 ubox
31 43 0.115699166 ubox
31 54 0.260706367 ubox
31 56 0.801357936 ubox
31 60 0.058646846 ubox
31 65 0.124640436 ubox
31 71 0.030341052 ubox
32 42 0.115716117 ubox
32 64 0.124510967 ubox
32 70 0.030342184 ubox
33 41 0.115713288 ubox
33 54 0.913374879 ubox
33 56 0.182620360 ubox
33 60 0.030124869 ubox
33 69 0.030322085 ubox
34 40 0.115194540 ubox
34 52 0.025270759 ubox
34 53 0.944006719 ubox
34 55 0.182660572 ubox
34 57 0.033614986 ubox
34 59 0.020342739 ubox
34 61 0.010604503 ubox
34 68 0.030263607 ubox
35 51 0.012427821 ubox
35 54 0.181633488 ubox
35 56 0.034720621 ubox
35 60 0.011010320 ubox
35 67 0.030203537 ubox
36 51 0.986938650 ubox
36 65 0.006785126 ubox
37 50 0.992167525 ubox
37 51 0.045884787 ubox
37 64 0.006551128 ubox
38 49 0.992177828 ubox
38 50 0.045949578 ubox
39 48 0.991413355 ubox
39 49 0.045915076 ubox
40 47 0.992262740 ubox
40 48 0.034166751 ubox
41 46 0.992364132 ubox
45 65 0.003790630 ubox
46 60 0.003532812 ubox
46 64 0.003949973 ubox
47 59 0.003250763 ubox
47 63 0.003884748 ubox
48 62 0.003537450 ubox
50 58 0.009638806 ubox
50 62 0.012308655 ubox
51 57 0.010599966 ubox
51 61 0.013691240 ubox
52 56 0.012058721 ubox
52 60 0.015942251 ubox
57 65 0.015257748 ubox
58 64 0.016153495 ubox
64 73 0.007096758 ubox
64 74 0.005115604 ubox
64 75 0.005800523 ubox
64 82 0.009129582 ubox
65 72 0.006847526 ubox
65 73 0.005034695 ubox
65 74 0.005814492 ubox
65 79 0.003713832 ubox
65 81 0.009083375 ubox
66 78 0.003933183 ubox
67 79 0.010694407 ubox
68 78 0.009872097 ubox
69 75 0.016949316 ubox
70 74 0.016986158 ubox
71 79 0.041465860 ubox
72 78 0.051380603 ubox
73 92 0.231931016 ubox
74 91 0.233681583 ubox
74 92 0.112746456 ubox
75 91 0.113943846 ubox
78 86 0.241578058 ubox
78 90 0.038558652 ubox
79 85 0.256395957 ubox
79 89 0.048725206 ubox
84 91 0.602587953 ubox
85 90 0.603258788 ubox
10 91 0.9500000 lbox
11 90 0.9500000 lbox
12 89 0.9500000 lbox
13 88 0.9500000 lbox
16 85 0.9500000 lbox
17 84 0.9500000 lbox
23 71 0.9500000 lbox
24 70 0.9500000 lbox
25 69 0.9500000 lbox
26 67 0.9500000 lbox
27 66 0.9500000 lbox
28 65 0.9500000 lbox
29 64 0.9500000 lbox
30 63 0.9500000 lbox
33 54 0.9500000 lbox
34 53 0.9500000 lbox
36 51 0.9500000 lbox
37 50 0.9500000 lbox
38 49 0.9500000 lbox
39 48 0.9500000 lbox
40 47 0.9500000 lbox
41 46 0.9500000 lbox
showpage
end
%%EOF
