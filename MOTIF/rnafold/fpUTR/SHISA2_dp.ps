%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:41:16 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SHISA2)
} def

/sequence { (\
AGGCCCGGGGGUCGCCGGGGCCACGACUUCUCGGAGACCGUCCUGCGCUCUCUGGAGACGCGCUGUCCGCGCCCAGGGUGGUGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 28 0.004467621 ubox
1 44 0.118390273 ubox
1 49 0.004799127 ubox
1 51 0.003625386 ubox
2 13 0.003811282 ubox
2 22 0.855429940 ubox
2 39 0.013865006 ubox
2 42 0.022088664 ubox
2 43 0.125028212 ubox
2 44 0.041881108 ubox
2 48 0.005299505 ubox
2 49 0.048533054 ubox
2 50 0.004489785 ubox
2 67 0.003207804 ubox
2 85 0.068186053 ubox
3 12 0.003839870 ubox
3 21 0.856598896 ubox
3 38 0.013868109 ubox
3 41 0.022460306 ubox
3 42 0.119330255 ubox
3 43 0.044940090 ubox
3 46 0.031419164 ubox
3 48 0.051692314 ubox
3 66 0.003239796 ubox
3 79 0.030230128 ubox
3 84 0.068117090 ubox
4 11 0.003846932 ubox
4 19 0.109738147 ubox
4 20 0.849781063 ubox
4 40 0.035241738 ubox
4 45 0.032230630 ubox
4 47 0.051707822 ubox
4 65 0.003703915 ubox
4 78 0.031243229 ubox
4 83 0.067135710 ubox
5 10 0.003840691 ubox
5 18 0.153977438 ubox
5 19 0.842900873 ubox
5 34 0.017374065 ubox
5 77 0.031333856 ubox
5 78 0.007288095 ubox
5 81 0.061651522 ubox
6 17 0.188024810 ubox
6 18 0.835576916 ubox
6 33 0.017396137 ubox
6 40 0.015633052 ubox
6 45 0.065627756 ubox
6 76 0.031311567 ubox
6 77 0.007325863 ubox
6 80 0.061240682 ubox
7 16 0.216653897 ubox
7 32 0.017309047 ubox
7 39 0.011021115 ubox
7 42 0.254343302 ubox
7 43 0.407505114 ubox
7 44 0.121096588 ubox
7 74 0.007839917 ubox
7 79 0.012473877 ubox
8 15 0.216580283 ubox
8 16 0.820155864 ubox
8 30 0.011299798 ubox
8 31 0.013417975 ubox
8 38 0.009566976 ubox
8 41 0.275474549 ubox
8 42 0.407734177 ubox
8 43 0.125521526 ubox
8 44 0.007283691 ubox
8 73 0.007866432 ubox
8 74 0.008523679 ubox
9 15 0.819181225 ubox
9 16 0.117005660 ubox
9 29 0.011333225 ubox
9 30 0.013366812 ubox
9 39 0.007971178 ubox
9 41 0.367500010 ubox
9 42 0.124879045 ubox
9 43 0.007645351 ubox
9 72 0.007745912 ubox
9 73 0.008255864 ubox
9 74 0.031655471 ubox
10 15 0.123838640 ubox
10 16 0.008883847 ubox
10 22 0.003773115 ubox
10 28 0.014686127 ubox
10 29 0.009367147 ubox
10 38 0.005815125 ubox
10 39 0.512931580 ubox
10 41 0.019163469 ubox
10 42 0.005525802 ubox
10 72 0.007432722 ubox
10 73 0.031784523 ubox
10 74 0.003322805 ubox
11 15 0.008917008 ubox
11 21 0.003796902 ubox
11 27 0.017463202 ubox
11 38 0.513997167 ubox
11 70 0.004461678 ubox
11 72 0.031857538 ubox
11 73 0.003317331 ubox
12 20 0.003791734 ubox
12 26 0.017514131 ubox
12 37 0.514038796 ubox
12 69 0.003653398 ubox
12 71 0.007222412 ubox
13 19 0.003785771 ubox
13 25 0.017495201 ubox
13 36 0.511403606 ubox
13 71 0.031989488 ubox
14 21 0.004896300 ubox
14 24 0.016531476 ubox
14 70 0.032715675 ubox
15 20 0.005339025 ubox
15 34 0.513271596 ubox
15 69 0.029996793 ubox
16 33 0.514127261 ubox
16 65 0.005172963 ubox
16 69 0.013057257 ubox
17 30 0.007212955 ubox
17 31 0.004282413 ubox
17 32 0.513980729 ubox
17 64 0.005221789 ubox
17 67 0.004881100 ubox
17 68 0.017503208 ubox
17 85 0.004146303 ubox
18 28 0.009226890 ubox
18 29 0.012293601 ubox
18 30 0.025731438 ubox
18 31 0.512770729 ubox
18 32 0.004190816 ubox
18 63 0.005230735 ubox
18 66 0.003830091 ubox
18 67 0.016642491 ubox
18 68 0.026911178 ubox
18 84 0.004194006 ubox
19 27 0.011116726 ubox
19 28 0.023113034 ubox
19 29 0.022847227 ubox
19 30 0.512636541 ubox
19 31 0.005748696 ubox
19 64 0.011122255 ubox
19 66 0.011391484 ubox
19 67 0.027575741 ubox
19 85 0.003355099 ubox
20 27 0.041721428 ubox
20 28 0.022877150 ubox
20 29 0.478413738 ubox
20 30 0.006978706 ubox
20 61 0.005252380 ubox
20 63 0.013382969 ubox
20 66 0.028077718 ubox
20 82 0.014831375 ubox
20 84 0.007610175 ubox
21 60 0.005105909 ubox
21 62 0.013369820 ubox
21 65 0.028127644 ubox
21 81 0.015296648 ubox
21 83 0.005424086 ubox
22 65 0.007890777 ubox
22 80 0.015365776 ubox
22 83 0.022806145 ubox
23 41 0.176568684 ubox
23 44 0.052537358 ubox
23 64 0.010799311 ubox
23 66 0.008959857 ubox
23 79 0.015488768 ubox
23 82 0.066006650 ubox
24 33 0.203429388 ubox
24 40 0.188733050 ubox
24 45 0.003530448 ubox
24 60 0.049096773 ubox
24 62 0.046870860 ubox
24 65 0.009525480 ubox
24 78 0.015472604 ubox
24 80 0.004366994 ubox
24 81 0.068899254 ubox
24 83 0.005078492 ubox
25 32 0.270101331 ubox
25 39 0.188301252 ubox
25 42 0.269713409 ubox
25 44 0.005645514 ubox
25 59 0.107548838 ubox
25 61 0.047349021 ubox
25 64 0.008493274 ubox
25 67 0.025831655 ubox
25 82 0.003614553 ubox
26 31 0.243475642 ubox
26 41 0.270253844 ubox
26 66 0.025949916 ubox
26 79 0.068622305 ubox
26 82 0.007452873 ubox
27 34 0.016902741 ubox
27 36 0.119948509 ubox
27 40 0.266424057 ubox
27 57 0.126089629 ubox
27 65 0.025896432 ubox
27 76 0.008477293 ubox
27 77 0.005552646 ubox
27 78 0.068736548 ubox
27 81 0.007815698 ubox
28 33 0.015616770 ubox
28 34 0.005048598 ubox
28 35 0.119246717 ubox
28 36 0.103726770 ubox
28 37 0.028408960 ubox
28 56 0.111728113 ubox
28 57 0.182071493 ubox
28 58 0.051182855 ubox
28 75 0.007874147 ubox
28 76 0.006073297 ubox
28 77 0.065030843 ubox
28 80 0.005891660 ubox
29 33 0.005267662 ubox
29 34 0.109800859 ubox
29 35 0.111197227 ubox
29 36 0.027010736 ubox
29 37 0.251312995 ubox
29 55 0.083338622 ubox
29 56 0.223247463 ubox
29 57 0.049496532 ubox
29 58 0.363169889 ubox
29 75 0.003701402 ubox
29 76 0.035135757 ubox
29 77 0.007183871 ubox
30 34 0.111350450 ubox
30 36 0.255954375 ubox
30 54 0.063494885 ubox
30 55 0.232740993 ubox
30 57 0.393346727 ubox
30 76 0.010036895 ubox
30 78 0.004442823 ubox
31 35 0.230624785 ubox
31 37 0.044893660 ubox
31 54 0.024248463 ubox
31 55 0.160948359 ubox
31 56 0.374272535 ubox
31 75 0.008516000 ubox
31 77 0.004306463 ubox
32 36 0.045757516 ubox
32 40 0.163766031 ubox
32 45 0.011124139 ubox
32 54 0.384901304 ubox
32 55 0.279946685 ubox
32 76 0.003938171 ubox
33 39 0.177758645 ubox
33 42 0.011917981 ubox
33 43 0.560800475 ubox
33 44 0.032092458 ubox
33 46 0.003808124 ubox
33 51 0.015279799 ubox
33 52 0.004229913 ubox
33 53 0.462265494 ubox
33 68 0.003495457 ubox
33 85 0.012473971 ubox
34 38 0.174977329 ubox
34 41 0.010238483 ubox
34 42 0.565381142 ubox
34 43 0.040668535 ubox
34 50 0.015649342 ubox
34 52 0.481058116 ubox
34 67 0.003488883 ubox
34 84 0.012996209 ubox
35 41 0.558782159 ubox
35 44 0.077904175 ubox
35 49 0.015650657 ubox
35 51 0.481039081 ubox
35 66 0.003379553 ubox
36 42 0.042144274 ubox
36 43 0.079549782 ubox
36 48 0.015522774 ubox
36 50 0.481097608 ubox
36 67 0.007500637 ubox
37 41 0.037111353 ubox
37 49 0.473299645 ubox
37 66 0.007543505 ubox
37 82 0.019442887 ubox
38 65 0.007530284 ubox
38 81 0.019779334 ubox
39 45 0.012295875 ubox
39 47 0.479738269 ubox
39 80 0.019780617 ubox
40 44 0.007948566 ubox
40 46 0.479987004 ubox
40 48 0.016140979 ubox
40 63 0.007248848 ubox
40 79 0.018719381 ubox
41 45 0.449031957 ubox
41 47 0.015785666 ubox
41 62 0.006668405 ubox
41 78 0.018602407 ubox
42 77 0.019539466 ubox
43 76 0.019542200 ubox
44 62 0.007880854 ubox
44 75 0.019367040 ubox
45 61 0.013981995 ubox
45 63 0.015857332 ubox
45 72 0.006198416 ubox
45 74 0.018171408 ubox
45 79 0.003217851 ubox
45 82 0.007011243 ubox
45 84 0.867605160 ubox
46 60 0.014389660 ubox
46 62 0.015924337 ubox
46 71 0.006875726 ubox
46 80 0.010933110 ubox
46 81 0.007218134 ubox
46 83 0.871318292 ubox
47 59 0.017467588 ubox
47 61 0.015936762 ubox
47 70 0.006892132 ubox
47 72 0.008243238 ubox
47 79 0.016764145 ubox
47 82 0.871820634 ubox
47 84 0.007906712 ubox
48 57 0.020959216 ubox
48 60 0.015924589 ubox
48 69 0.006841630 ubox
48 71 0.007684035 ubox
48 78 0.016657027 ubox
48 81 0.872142690 ubox
48 83 0.007855359 ubox
49 56 0.021098831 ubox
49 58 0.016521788 ubox
49 77 0.011717734 ubox
49 78 0.009926189 ubox
49 80 0.823624564 ubox
49 81 0.003290376 ubox
50 55 0.021032048 ubox
50 57 0.016690197 ubox
50 76 0.008012753 ubox
50 77 0.020761335 ubox
50 78 0.873663495 ubox
50 80 0.010298819 ubox
51 56 0.015446207 ubox
51 75 0.005660656 ubox
51 77 0.874642367 ubox
51 78 0.014979581 ubox
52 76 0.875814433 ubox
52 77 0.012118114 ubox
53 69 0.004967126 ubox
53 75 0.875747872 ubox
53 76 0.006296381 ubox
54 59 0.003669526 ubox
54 68 0.008840318 ubox
54 70 0.003951817 ubox
54 73 0.012132156 ubox
54 74 0.875916580 ubox
55 67 0.008812396 ubox
55 72 0.016734147 ubox
55 73 0.875313294 ubox
55 84 0.003678242 ubox
56 64 0.003273661 ubox
56 66 0.008494175 ubox
57 63 0.003639407 ubox
57 67 0.041012885 ubox
58 66 0.041433596 ubox
58 82 0.004778835 ubox
59 65 0.041575720 ubox
59 69 0.004787620 ubox
59 71 0.520372670 ubox
59 80 0.038875089 ubox
59 81 0.003814941 ubox
60 64 0.025659558 ubox
60 66 0.003345973 ubox
60 68 0.004924830 ubox
60 70 0.521792746 ubox
60 72 0.707852093 ubox
60 79 0.039273184 ubox
60 84 0.463422365 ubox
61 65 0.003650595 ubox
61 69 0.521784835 ubox
61 71 0.708258728 ubox
61 78 0.039341579 ubox
61 83 0.465345625 ubox
62 68 0.510240385 ubox
62 70 0.708295461 ubox
62 72 0.003210039 ubox
62 82 0.465227289 ubox
62 84 0.016592647 ubox
63 69 0.707772051 ubox
63 71 0.003210469 ubox
63 76 0.039411141 ubox
63 81 0.465342038 ubox
63 83 0.016611108 ubox
64 75 0.039409051 ubox
64 80 0.462249763 ubox
65 74 0.039340538 ubox
65 79 0.369828748 ubox
65 82 0.005553509 ubox
65 84 0.008010703 ubox
66 77 0.005238097 ubox
66 78 0.407617066 ubox
66 83 0.007783686 ubox
67 76 0.005398428 ubox
67 77 0.428150636 ubox
67 78 0.181583621 ubox
67 81 0.021105161 ubox
68 76 0.428151280 ubox
68 77 0.181556385 ubox
68 80 0.021990272 ubox
69 79 0.022439715 ubox
69 84 0.076475596 ubox
70 78 0.022452154 ubox
70 80 0.011808936 ubox
70 83 0.076643331 ubox
71 79 0.015526557 ubox
71 82 0.076646719 ubox
71 84 0.015073576 ubox
72 78 0.015808596 ubox
72 81 0.076298465 ubox
72 83 0.015741076 ubox
73 77 0.015865384 ubox
73 80 0.075661487 ubox
73 81 0.029835112 ubox
74 80 0.031040604 ubox
74 83 0.003918896 ubox
75 79 0.026011485 ubox
75 82 0.003851083 ubox
76 85 0.016508745 ubox
77 84 0.016655299 ubox
77 85 0.014186699 ubox
78 84 0.014427254 ubox
79 83 0.013520859 ubox
2 22 0.9500000 lbox
3 21 0.9500000 lbox
4 20 0.9500000 lbox
5 19 0.9500000 lbox
6 18 0.9500000 lbox
8 16 0.9500000 lbox
9 15 0.9500000 lbox
33 43 0.9500000 lbox
34 42 0.9500000 lbox
35 41 0.9500000 lbox
45 84 0.9500000 lbox
46 83 0.9500000 lbox
47 82 0.9500000 lbox
48 81 0.9500000 lbox
49 80 0.9500000 lbox
50 78 0.9500000 lbox
51 77 0.9500000 lbox
52 76 0.9500000 lbox
53 75 0.9500000 lbox
54 74 0.9500000 lbox
55 73 0.9500000 lbox
60 72 0.9500000 lbox
61 71 0.9500000 lbox
62 70 0.9500000 lbox
63 69 0.9500000 lbox
showpage
end
%%EOF
