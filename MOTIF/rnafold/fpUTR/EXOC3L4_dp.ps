%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:02:12 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (EXOC3L4)
} def

/sequence { (\
CCCACAGGGCCACAACAGGUUUCUGCAUCUGCUCCUAUGGCCACUCCUUCUUGCCCCCAGCUCUCCUGCUGCCAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.026900490 ubox
1 9 0.016221712 ubox
1 40 0.031202277 ubox
2 7 0.050382484 ubox
2 8 0.023206086 ubox
2 9 0.003745503 ubox
2 39 0.027841821 ubox
2 40 0.411181703 ubox
3 7 0.032063694 ubox
3 8 0.004794724 ubox
3 31 0.005513950 ubox
3 39 0.415109678 ubox
3 53 0.026586751 ubox
3 71 0.007927747 ubox
4 30 0.005527908 ubox
4 38 0.412261609 ubox
4 52 0.026243841 ubox
4 70 0.007746251 ubox
5 25 0.048898351 ubox
5 31 0.005838643 ubox
5 39 0.006909168 ubox
5 53 0.036355401 ubox
5 68 0.010513495 ubox
5 71 0.006979151 ubox
6 24 0.049450901 ubox
6 30 0.005869520 ubox
6 36 0.406766490 ubox
6 38 0.005908914 ubox
6 45 0.673734531 ubox
6 48 0.079486335 ubox
6 49 0.011911450 ubox
6 51 0.017013322 ubox
6 52 0.033634656 ubox
6 67 0.010526013 ubox
6 70 0.006563901 ubox
7 22 0.008054823 ubox
7 23 0.049350922 ubox
7 29 0.005852406 ubox
7 34 0.061555723 ubox
7 35 0.414831653 ubox
7 36 0.008789693 ubox
7 42 0.037109311 ubox
7 44 0.719085822 ubox
7 45 0.015854736 ubox
7 46 0.029265443 ubox
7 47 0.084491852 ubox
7 48 0.012285017 ubox
7 49 0.004297215 ubox
7 50 0.018877697 ubox
7 51 0.029912714 ubox
7 55 0.004245290 ubox
7 56 0.091790341 ubox
7 57 0.027911731 ubox
7 58 0.004078207 ubox
7 66 0.010500033 ubox
7 69 0.006407581 ubox
7 73 0.018218731 ubox
8 21 0.029561352 ubox
8 22 0.039414483 ubox
8 28 0.005039615 ubox
8 33 0.070567853 ubox
8 34 0.413407924 ubox
8 35 0.009203129 ubox
8 41 0.026312680 ubox
8 42 0.896384838 ubox
8 44 0.008542241 ubox
8 45 0.005202148 ubox
8 46 0.060173980 ubox
8 47 0.007885807 ubox
8 50 0.015175895 ubox
8 55 0.092066455 ubox
8 56 0.027549786 ubox
8 57 0.004254057 ubox
8 65 0.007370375 ubox
8 72 0.012181989 ubox
8 73 0.008392566 ubox
9 20 0.055121619 ubox
9 21 0.027813279 ubox
9 26 0.003685798 ubox
9 32 0.389543161 ubox
9 33 0.142039726 ubox
9 34 0.009209760 ubox
9 41 0.900432958 ubox
9 44 0.004496304 ubox
9 45 0.008885613 ubox
9 46 0.005619895 ubox
9 49 0.003383060 ubox
9 54 0.092120205 ubox
9 55 0.026954495 ubox
9 56 0.004165741 ubox
9 72 0.008384860 ubox
10 19 0.063885385 ubox
10 25 0.003530324 ubox
10 31 0.387774500 ubox
10 40 0.900922010 ubox
10 53 0.088839621 ubox
10 71 0.007331027 ubox
11 18 0.063931893 ubox
11 25 0.005279933 ubox
11 31 0.142270822 ubox
11 39 0.900782965 ubox
11 53 0.031110598 ubox
12 20 0.009806010 ubox
12 24 0.005053893 ubox
12 30 0.145570953 ubox
12 38 0.868305757 ubox
12 52 0.037240010 ubox
13 19 0.011999846 ubox
13 25 0.008691121 ubox
13 31 0.041532432 ubox
13 39 0.008151651 ubox
13 53 0.016926335 ubox
14 21 0.003307660 ubox
14 22 0.004344613 ubox
14 24 0.008120238 ubox
14 30 0.039580050 ubox
14 38 0.014191480 ubox
14 49 0.020523336 ubox
14 52 0.021763483 ubox
14 70 0.003543072 ubox
15 21 0.004321635 ubox
15 48 0.016583946 ubox
15 51 0.020761769 ubox
16 25 0.414868560 ubox
16 31 0.843354450 ubox
16 39 0.003356661 ubox
16 68 0.006391506 ubox
17 24 0.416613816 ubox
17 30 0.847465740 ubox
17 33 0.069116608 ubox
17 36 0.246435806 ubox
17 38 0.004086150 ubox
17 45 0.006849335 ubox
17 48 0.075813978 ubox
17 49 0.007852278 ubox
17 67 0.006414734 ubox
18 23 0.414967897 ubox
18 24 0.022943193 ubox
18 29 0.847782178 ubox
18 30 0.034972272 ubox
18 32 0.070515304 ubox
18 33 0.124276916 ubox
18 34 0.025422764 ubox
18 35 0.256730424 ubox
18 36 0.019609053 ubox
18 42 0.037077850 ubox
18 44 0.005064514 ubox
18 45 0.016673700 ubox
18 46 0.003216554 ubox
18 47 0.078952841 ubox
18 48 0.006813884 ubox
18 66 0.006426398 ubox
19 23 0.023865684 ubox
19 26 0.107148190 ubox
19 28 0.835891295 ubox
19 29 0.035996623 ubox
19 32 0.130588472 ubox
19 33 0.017598354 ubox
19 34 0.255888581 ubox
19 35 0.020207283 ubox
19 38 0.011678688 ubox
19 41 0.037275317 ubox
19 44 0.017467595 ubox
19 46 0.078893621 ubox
19 47 0.006790238 ubox
19 65 0.006416647 ubox
20 25 0.107800471 ubox
20 27 0.801825164 ubox
20 31 0.130191486 ubox
20 37 0.017832404 ubox
20 40 0.037165137 ubox
20 43 0.017087035 ubox
21 39 0.034954299 ubox
22 40 0.004661128 ubox
23 39 0.005171506 ubox
23 40 0.013522778 ubox
23 60 0.004722802 ubox
24 31 0.015779074 ubox
24 37 0.003766866 ubox
24 39 0.012997862 ubox
24 43 0.017798302 ubox
24 59 0.004728877 ubox
25 30 0.012238503 ubox
25 32 0.209914677 ubox
25 38 0.004047020 ubox
25 41 0.038876670 ubox
25 42 0.017707902 ubox
25 58 0.004618640 ubox
26 31 0.210690716 ubox
26 39 0.067557792 ubox
26 40 0.035455894 ubox
27 38 0.069385954 ubox
28 37 0.068271584 ubox
28 40 0.004952203 ubox
29 39 0.009399916 ubox
29 40 0.007128428 ubox
30 37 0.011281001 ubox
30 39 0.007392076 ubox
30 43 0.008838217 ubox
31 36 0.011417886 ubox
31 38 0.004748332 ubox
31 41 0.036662009 ubox
31 42 0.008035369 ubox
31 54 0.010982750 ubox
31 61 0.005255901 ubox
32 40 0.037565583 ubox
32 53 0.011022515 ubox
32 60 0.005279000 ubox
33 39 0.034782665 ubox
33 40 0.005321769 ubox
33 59 0.005085070 ubox
34 39 0.010862865 ubox
34 40 0.013221805 ubox
35 39 0.013336070 ubox
35 76 0.007592371 ubox
36 75 0.007655232 ubox
38 74 0.020272278 ubox
39 45 0.003641338 ubox
39 46 0.006069346 ubox
39 47 0.028936887 ubox
39 48 0.006186197 ubox
39 50 0.005679572 ubox
39 55 0.056218761 ubox
39 56 0.018137694 ubox
39 57 0.004785646 ubox
39 73 0.022280407 ubox
40 44 0.004250149 ubox
40 45 0.004410612 ubox
40 46 0.028833627 ubox
40 47 0.007170633 ubox
40 49 0.005437733 ubox
40 54 0.057264113 ubox
40 55 0.018264056 ubox
40 56 0.004768985 ubox
40 72 0.022289673 ubox
41 53 0.053989557 ubox
41 71 0.019969422 ubox
42 53 0.038260748 ubox
43 52 0.042289882 ubox
44 76 0.009238236 ubox
45 75 0.008747081 ubox
47 76 0.053678945 ubox
48 75 0.053911081 ubox
48 76 0.007456238 ubox
49 74 0.049719860 ubox
49 75 0.008201695 ubox
50 76 0.836808117 ubox
51 60 0.003381542 ubox
51 75 0.862441470 ubox
51 76 0.024468961 ubox
52 59 0.005615481 ubox
52 74 0.867853442 ubox
52 75 0.038495444 ubox
53 58 0.007270590 ubox
53 61 0.014068096 ubox
53 69 0.003531044 ubox
53 72 0.128364385 ubox
53 73 0.859441130 ubox
54 60 0.014071140 ubox
54 68 0.003461510 ubox
54 71 0.147519769 ubox
58 68 0.063098390 ubox
58 71 0.981626002 ubox
59 67 0.063326166 ubox
59 70 0.996833377 ubox
60 66 0.062899645 ubox
60 69 0.997691440 ubox
60 72 0.011948282 ubox
61 68 0.997367434 ubox
61 71 0.011963959 ubox
69 76 0.003708050 ubox
70 75 0.003932464 ubox
6 45 0.9500000 lbox
7 44 0.9500000 lbox
8 42 0.9500000 lbox
9 41 0.9500000 lbox
10 40 0.9500000 lbox
11 39 0.9500000 lbox
12 38 0.9500000 lbox
16 31 0.9500000 lbox
17 30 0.9500000 lbox
18 29 0.9500000 lbox
19 28 0.9500000 lbox
20 27 0.9500000 lbox
50 76 0.9500000 lbox
51 75 0.9500000 lbox
52 74 0.9500000 lbox
53 73 0.9500000 lbox
58 71 0.9500000 lbox
59 70 0.9500000 lbox
60 69 0.9500000 lbox
61 68 0.9500000 lbox
showpage
end
%%EOF
