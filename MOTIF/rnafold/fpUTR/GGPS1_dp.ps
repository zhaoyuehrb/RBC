%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:24:47 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GGPS1)
} def

/sequence { (\
CGCGCAAAUCCUCGUCCGCGAGAACUGCAAGGCCCGCAAUGCCCUGCGCCUGCGUGGACCGAUUAGCUUUGAAGUUUAAAUCCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 20 0.009855591 ubox
1 54 0.004466343 ubox
1 56 0.028791828 ubox
1 61 0.004058776 ubox
1 71 0.196195352 ubox
2 15 0.003495418 ubox
2 19 0.010069048 ubox
2 53 0.004657602 ubox
2 55 0.029955498 ubox
2 60 0.004710740 ubox
2 67 0.234228716 ubox
2 70 0.181536706 ubox
2 75 0.070396668 ubox
3 14 0.004303020 ubox
3 18 0.010066192 ubox
3 52 0.004652726 ubox
3 54 0.030130724 ubox
3 61 0.005594075 ubox
3 66 0.234355465 ubox
3 71 0.058763445 ubox
3 74 0.073363363 ubox
4 13 0.007433094 ubox
4 15 0.003218647 ubox
4 17 0.009414617 ubox
4 28 0.011576837 ubox
4 53 0.030120030 ubox
4 60 0.006263363 ubox
4 67 0.955060588 ubox
4 70 0.012111169 ubox
4 75 0.004524282 ubox
5 14 0.005315497 ubox
5 27 0.011589796 ubox
5 52 0.030112934 ubox
5 66 0.955740888 ubox
5 71 0.052402436 ubox
5 74 0.004630398 ubox
6 26 0.011325873 ubox
6 51 0.026865861 ubox
6 64 0.056211099 ubox
6 69 0.004560014 ubox
6 70 0.052511814 ubox
7 63 0.044164958 ubox
7 64 0.920322015 ubox
7 68 0.004371136 ubox
7 69 0.049903766 ubox
7 70 0.011044552 ubox
8 15 0.003686562 ubox
8 63 0.986271983 ubox
8 68 0.044509906 ubox
8 69 0.011212535 ubox
9 14 0.003492797 ubox
9 23 0.009145059 ubox
9 62 0.988802203 ubox
10 22 0.006664592 ubox
10 61 0.988211648 ubox
11 22 0.032241671 ubox
11 66 0.017666581 ubox
12 21 0.033026786 ubox
12 62 0.090407623 ubox
12 65 0.012170245 ubox
13 20 0.033045583 ubox
13 61 0.096389948 ubox
14 19 0.032190711 ubox
14 59 0.995676230 ubox
14 60 0.071951237 ubox
15 58 0.999196863 ubox
16 57 0.999385884 ubox
17 54 0.004470348 ubox
17 56 0.999350456 ubox
18 53 0.009026507 ubox
18 55 0.998936923 ubox
19 52 0.009105703 ubox
19 54 0.999208495 ubox
20 26 0.003607105 ubox
20 51 0.005210043 ubox
20 53 0.992891978 ubox
21 51 0.830488969 ubox
22 50 0.832548634 ubox
22 77 0.009484182 ubox
23 76 0.010310449 ubox
24 55 0.005171258 ubox
24 75 0.010512614 ubox
25 32 0.003257428 ubox
25 54 0.005643101 ubox
25 74 0.010550109 ubox
26 31 0.003196939 ubox
26 48 0.941929557 ubox
26 52 0.003665103 ubox
26 54 0.013906265 ubox
26 73 0.009379999 ubox
27 33 0.004056084 ubox
27 47 0.995875286 ubox
27 49 0.014354304 ubox
27 53 0.073412399 ubox
28 32 0.004039884 ubox
28 46 0.996009644 ubox
28 48 0.014285282 ubox
28 52 0.079994769 ubox
28 71 0.010427789 ubox
29 45 0.983351463 ubox
29 51 0.056419502 ubox
29 70 0.010480446 ubox
30 45 0.074734427 ubox
30 51 0.062615430 ubox
30 69 0.010462608 ubox
31 43 0.990613695 ubox
31 44 0.096102058 ubox
31 50 0.085677308 ubox
31 60 0.011414762 ubox
31 68 0.010350154 ubox
32 42 0.992402271 ubox
32 43 0.085906660 ubox
32 44 0.003780609 ubox
32 49 0.085639850 ubox
32 59 0.011429680 ubox
32 67 0.010357726 ubox
33 41 0.991458715 ubox
33 48 0.078265017 ubox
33 57 0.011610950 ubox
33 66 0.010166417 ubox
34 56 0.011793689 ubox
35 41 0.032202043 ubox
35 46 0.013676239 ubox
35 48 0.035019682 ubox
35 54 0.011902308 ubox
36 40 0.043589943 ubox
36 42 0.060028173 ubox
36 45 0.012073634 ubox
36 47 0.084477565 ubox
36 53 0.011938601 ubox
37 41 0.059708503 ubox
37 46 0.084788081 ubox
37 52 0.011938475 ubox
38 45 0.079319360 ubox
38 51 0.011561120 ubox
40 48 0.007803067 ubox
41 47 0.008856519 ubox
41 49 0.008554288 ubox
42 46 0.008795009 ubox
42 48 0.008554869 ubox
42 57 0.008656686 ubox
43 56 0.008651394 ubox
45 54 0.008592561 ubox
46 53 0.008846914 ubox
47 52 0.008841850 ubox
55 84 0.005465715 ubox
56 83 0.010109110 ubox
57 76 0.004001004 ubox
57 82 0.010366980 ubox
58 75 0.004220074 ubox
58 81 0.010118203 ubox
59 74 0.004226513 ubox
60 71 0.020603925 ubox
61 70 0.020737934 ubox
61 76 0.005973389 ubox
61 82 0.099666887 ubox
62 69 0.020442623 ubox
62 75 0.006499764 ubox
62 81 0.099928266 ubox
63 72 0.006070211 ubox
63 74 0.006600913 ubox
63 79 0.028964413 ubox
63 80 0.097657061 ubox
64 71 0.006671822 ubox
64 73 0.006563482 ubox
64 78 0.036517362 ubox
64 79 0.087941597 ubox
65 70 0.006344779 ubox
65 76 0.111169803 ubox
65 77 0.033572570 ubox
66 75 0.134217266 ubox
66 76 0.024192430 ubox
67 74 0.137341484 ubox
68 73 0.128089848 ubox
68 74 0.019958294 ubox
68 79 0.065802512 ubox
68 80 0.304793229 ubox
69 73 0.019124321 ubox
69 78 0.072016978 ubox
69 79 0.349752376 ubox
69 80 0.089773519 ubox
70 78 0.359125113 ubox
70 79 0.102682817 ubox
70 84 0.065955685 ubox
71 77 0.356670215 ubox
71 82 0.173896310 ubox
71 83 0.080570073 ubox
72 76 0.304213081 ubox
72 81 0.173562796 ubox
74 81 0.046636252 ubox
75 80 0.046377327 ubox
4 67 0.9500000 lbox
5 66 0.9500000 lbox
7 64 0.9500000 lbox
8 63 0.9500000 lbox
9 62 0.9500000 lbox
10 61 0.9500000 lbox
14 59 0.9500000 lbox
15 58 0.9500000 lbox
16 57 0.9500000 lbox
17 56 0.9500000 lbox
18 55 0.9500000 lbox
19 54 0.9500000 lbox
20 53 0.9500000 lbox
21 51 0.9500000 lbox
22 50 0.9500000 lbox
26 48 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
showpage
end
%%EOF
