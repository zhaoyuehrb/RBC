%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:03:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCCCCACCCCGCCCCCUCCUCCUGCCCCUACGCACGCGCACUCUCACGCGCCUGUGUUGCCGCCCGCGGCCCUGGCUUCGGGCUUCAGGGAGCUCUGGUGCAGUCUCCGCCUGUCAGUGCCGGCAGUCGUCCGCGGCGCCCGCCCCGGUCCCGCACUGGUGCAGCC\
) } def
/len { sequence length } bind def

/coor [
[95.02639771 204.58337402]
[93.91206360 189.62481689]
[92.79773712 174.66627502]
[91.68340302 159.70771790]
[90.56907654 144.74916077]
[65.58850861 121.58524323]
[65.53005219 91.46857452]
[52.05902863 84.87074280]
[38.58800125 78.27290344]
[25.11697388 71.67507172]
[8.69586182 77.64920044]
[-6.67191553 70.06618500]
[-11.71816730 54.04241180]
[-25.30950928 47.69611740]
[-41.08724213 48.86814117]
[-49.34574509 36.47272491]
[-62.93708801 30.12643051]
[-76.52842712 23.78013802]
[-90.11977386 17.43384361]
[-96.16613770 24.73312378]
[-103.49724579 30.72731972]
[-111.83708954 35.19501877]
[-120.87248230 37.97219467]
[-130.26486206 38.95823288]
[-139.66293335 38.11957169]
[-148.71583557 35.49083710]
[-157.08624268 31.17341232]
[-164.46289062 25.33155441]
[-170.57221985 18.18612671]
[-175.18846130 10.00625896]
[-178.14199829 1.09921026]
[-179.32560730 -8.20117188]
[-194.21624756 -10.00922203]
[-209.10687256 -11.81727219]
[-223.99751282 -13.62532234]
[-238.88815308 -15.43337250]
[-253.52032471 -9.41591263]
[-265.22216797 -18.63090324]
[-280.11282349 -20.43895340]
[-295.00344849 -22.24700356]
[-309.89407349 -24.05505371]
[-320.36242676 -12.60110378]
[-335.57070923 -9.52080441]
[-349.67098999 -15.99859238]
[-357.24142456 -29.54362679]
[-355.37106323 -44.94756699]
[-344.77905273 -56.28727722]
[-329.53826904 -59.20241547]
[-315.50909424 -52.57204819]
[-308.08602905 -38.94568634]
[-293.19540405 -37.13763428]
[-278.30474854 -35.32958603]
[-263.41412354 -33.52153397]
[-249.84701538 -39.66831970]
[-237.08009338 -30.32400513]
[-222.18946838 -28.51595497]
[-207.29882812 -26.70790482]
[-192.40820312 -24.89985466]
[-177.51756287 -23.09180450]
[-174.94792175 -30.06831169]
[-171.34175110 -36.56987381]
[-166.78387451 -42.44359207]
[-161.38150024 -47.55132675]
[-155.26164246 -51.77295685]
[-160.71084595 -65.74815369]
[-166.16004944 -79.72335815]
[-171.60925293 -93.69855499]
[-177.05844116 -107.67375183]
[-189.28045654 -117.72029114]
[-186.69534302 -132.38883972]
[-192.14454651 -146.36404419]
[-197.59375000 -160.33924866]
[-210.72378540 -170.16441345]
[-208.51153564 -186.41366577]
[-193.23278809 -192.37115479]
[-180.60498047 -181.90832520]
[-183.61854553 -165.78843689]
[-178.16934204 -151.81324768]
[-172.72013855 -137.83804321]
[-160.88789368 -128.79110718]
[-163.08325195 -113.12295532]
[-157.63404846 -99.14775848]
[-152.18484497 -85.17255402]
[-146.73564148 -71.19735718]
[-141.28643799 -57.22215652]
[-116.44912720 -56.30873871]
[-95.25541687 -43.18519974]
[-83.29763031 -21.22849464]
[-83.77347565 3.84250283]
[-70.18213654 10.18879604]
[-56.59079361 16.53508949]
[-42.99945450 22.88138199]
[-28.19386101 21.25542831]
[-18.96321487 34.10477829]
[-5.37187386 40.45106888]
[6.02704859 34.39310074]
[19.02620506 36.04371643]
[28.83689499 45.02130890]
[31.71480942 58.20404434]
[45.18583679 64.80187988]
[58.65686417 71.39971161]
[72.12789154 77.99755096]
[78.53733063 71.71014404]
[86.31887054 67.23128510]
[94.97502899 64.84730530]
[103.95243073 64.71061707]
[112.67716217 66.82995605]
[120.59144592 71.06983185]
[127.18933868 77.15919495]
[132.04902649 84.70875549]
[146.64588928 81.25454712]
[158.29342651 70.54727173]
[172.46038818 75.14578247]
[187.05725098 71.69156647]
[201.65411377 68.23735046]
[216.25097656 64.78314209]
[230.84783936 61.32892609]
[238.93502808 47.75053024]
[254.27523804 43.94870758]
[267.76736450 52.17900848]
[271.40679932 67.55854797]
[263.03430176 80.96290588]
[247.61714172 84.43952942]
[234.30204773 75.92578888]
[219.70518494 79.38000488]
[205.10832214 82.83421326]
[190.51145935 86.28842926]
[175.91459656 89.74264526]
[165.31114197 100.20284271]
[150.10009766 95.85140991]
[135.50323486 99.30561829]
[137.91459656 103.38681030]
[139.82952881 107.98006439]
[141.16590881 113.02262878]
[141.84968567 118.44001770]
[153.35029602 128.06996155]
[164.85092163 137.69990540]
[176.35153198 147.32984924]
[191.89955139 150.25724792]
[196.69033813 164.36036682]
[208.19094849 173.99031067]
[219.69157410 183.62025452]
[235.41020203 181.97708130]
[247.63407898 191.99468994]
[249.11097717 207.72981262]
[238.96467590 219.84709167]
[223.21481323 221.15754700]
[211.20549011 210.88371277]
[210.06163025 195.12086487]
[198.56100464 185.49092102]
[187.06039429 175.86097717]
[172.33497620 173.62237549]
[166.72158813 158.83045959]
[155.22097778 149.20051575]
[143.72035217 139.57058716]
[132.21974182 129.94064331]
[125.54670715 133.36418152]
[124.80375671 148.34577942]
[112.20065308 140.21128845]
[105.52762604 143.63484192]
[106.64195251 158.59338379]
[107.75628662 173.55194092]
[108.87062073 188.51048279]
[109.98494720 203.46903992]
[121.15319061 214.98641968]
[118.96899414 230.88009644]
[105.10788727 238.95779419]
[90.20292664 233.02301025]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 164]
[2 163]
[3 162]
[4 161]
[5 160]
[7 102]
[8 101]
[9 100]
[10 99]
[13 95]
[14 94]
[16 92]
[17 91]
[18 90]
[19 89]
[32 59]
[33 58]
[34 57]
[35 56]
[36 55]
[38 53]
[39 52]
[40 51]
[41 50]
[64 85]
[65 84]
[66 83]
[67 82]
[68 81]
[70 79]
[71 78]
[72 77]
[110 131]
[111 130]
[113 128]
[114 127]
[115 126]
[116 125]
[117 124]
[135 156]
[136 155]
[137 154]
[138 153]
[140 151]
[141 150]
[142 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
