%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:51:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAAGCUCCCCGGGCCCAGUAGGCUGGGGGUGGGGGUAGAAGGAGAAGGAGGGGAAGGGAGGGGGGGGUUGGGUGUCUACUCUGGUGAAUAGACGGCUGUGGGGCAGAGAAGCGUGAAGGCCUGGCUGCCGGGCAGGUGAACUCUCCACGGGGUCUAGGGCCCGCGAAAGGGUUCGGAACCGAGUCAGCGCGCCUUGCGGGCAGGAUUCACGCCGCUGUGACCCGGAGGUCCUCAGGGGGCGAAGCCCCGGCCUA\
GGCCUCGCGGAG\
) } def
/len { sequence length } bind def

/coor [
[-43.47431946 414.40609741]
[-60.78956223 422.28933716]
[-79.46321106 425.89450073]
[-98.45489502 425.02398682]
[-116.70728302 419.72949219]
[-123.79760742 432.94793701]
[-125.08770752 441.95507812]
[-131.04931641 446.27905273]
[-138.29409790 459.41348267]
[-145.53887939 472.54791260]
[-152.78367615 485.68231201]
[-160.02845764 498.81674194]
[-155.86602783 513.82714844]
[-163.40037537 527.04412842]
[-177.73614502 530.91986084]
[-184.98092651 544.05426025]
[-192.22572327 557.18872070]
[-199.47050476 570.32312012]
[-206.71530151 583.45751953]
[-205.85411072 599.83404541]
[-219.75154114 608.53997803]
[-234.11109924 600.61944580]
[-234.16090393 584.22039795]
[-219.84971619 576.21276855]
[-212.60493469 563.07830811]
[-205.36013794 549.94390869]
[-198.11535645 536.80950928]
[-190.87057495 523.67504883]
[-195.23974609 509.48190308]
[-188.07960510 496.05853271]
[-173.16288757 491.57196045]
[-165.91809082 478.43753052]
[-158.67330933 465.30310059]
[-151.42852783 452.16870117]
[-144.18373108 439.03427124]
[-137.01605225 425.85760498]
[-129.92572021 412.63916016]
[-138.84509277 405.80157471]
[-146.72726440 397.78732300]
[-153.41830444 388.75201416]
[-158.78741455 378.87124634]
[-162.72947693 368.33718872]
[-165.16716003 357.35473633]
[-166.05236816 346.13769531]
[-165.36724854 334.90441895]
[-163.12454224 323.87374878]
[-159.36732483 313.26065063]
[-154.16818237 303.27194214]
[-147.62780762 294.10253906]
[-139.87310791 285.93127441]
[-131.05464172 278.91781616]
[-121.34375763 273.19915771]
[-110.92929077 268.88720703]
[-100.01380920 266.06655884]
[-88.80974579 264.79269409]
[-77.53523254 265.09103394]
[-66.40986633 266.95642090]
[-55.65041351 270.35311890]
[-45.46659851 275.21551514]
[-36.87896347 262.91705322]
[-28.29132652 250.61857605]
[-19.70369148 238.32009888]
[-24.73781776 224.32740784]
[-20.51724815 209.88265991]
[-8.45939827 200.58418274]
[6.93961143 200.16383362]
[15.52724648 187.86535645]
[24.11488152 175.56689453]
[32.70251846 163.26841736]
[41.29015350 150.96994019]
[49.87778854 138.67146301]
[58.46542358 126.37297821]
[67.05305481 114.07450867]
[62.97299194 99.64006805]
[49.21786880 93.65703583]
[35.46274567 87.67401123]
[21.70762444 81.69097900]
[7.95250273 75.70795441]
[-5.80261946 69.72492981]
[-21.54365540 71.31564331]
[-30.12850189 59.14396667]
[-43.88362503 53.16093826]
[-60.10754395 55.55185699]
[-70.07661438 42.53073120]
[-63.53550720 27.49258041]
[-47.21315765 25.90736389]
[-37.90059662 39.40581512]
[-24.14547348 45.38884354]
[-9.38829613 43.37018204]
[0.18040825 55.96980667]
[13.93553066 61.95283127]
[27.69065285 67.93585968]
[41.44577408 73.91889191]
[55.20089722 79.90191650]
[68.95601654 85.88494110]
[91.67695618 76.19628906]
[107.41559601 85.44921875]
[116.70890808 73.67491150]
[119.18544006 58.04873276]
[133.14408875 52.85208893]
[142.43740845 41.07777786]
[151.73071289 29.30346870]
[161.02403259 17.52915955]
[163.50056458 1.90298414]
[177.45921326 -3.29366159]
[186.75253296 -15.06797028]
[189.22906494 -30.69414711]
[203.18771362 -35.89079285]
[212.48103333 -47.66510010]
[210.82687378 -63.15385818]
[220.41935730 -74.96229553]
[235.19570923 -76.44381714]
[244.48901367 -88.21813202]
[253.78233337 -99.99243927]
[263.07565308 -111.76674652]
[272.36895752 -123.54105377]
[281.66226196 -135.31536865]
[290.95556641 -147.08967590]
[290.22155762 -159.94427490]
[298.17568970 -169.55477905]
[310.14721680 -171.13116455]
[319.57791138 -182.79573059]
[329.00860596 -194.46028137]
[338.43930054 -206.12484741]
[341.09881592 -221.72091675]
[355.11743164 -226.75358582]
[364.54812622 -238.41815186]
[373.97882080 -250.08271790]
[383.40951538 -261.74728394]
[386.06906128 -277.34335327]
[400.08767700 -282.37600708]
[409.51837158 -294.04058838]
[418.94906616 -305.70513916]
[428.37976074 -317.36968994]
[426.90728760 -332.87677002]
[436.63751221 -344.57196045]
[451.43020630 -345.88018799]
[460.86090088 -357.54473877]
[459.38842773 -373.05181885]
[469.11865234 -384.74700928]
[483.91137695 -386.05520630]
[493.34207153 -397.71978760]
[502.77276611 -409.38433838]
[512.20343018 -421.04891968]
[497.22116089 -420.32040405]
[486.03906250 -430.31848145]
[485.09320068 -445.28860474]
[494.92791748 -456.61462402]
[509.88275146 -457.77767944]
[521.35028076 -448.10839844]
[522.73004150 -433.17111206]
[532.95715332 -444.14407349]
[536.70611572 -459.51467896]
[551.04376221 -463.54971313]
[561.27087402 -474.52270508]
[571.49798584 -485.49566650]
[575.04260254 -493.87588501]
[581.90991211 -496.53643799]
[592.26495361 -507.38876343]
[602.61999512 -518.24108887]
[612.97503662 -529.09344482]
[623.33007812 -539.94573975]
[633.68511963 -550.79809570]
[633.06408691 -566.59014893]
[643.85284424 -578.13909912]
[659.65063477 -578.59313965]
[671.08483887 -567.68286133]
[671.37182617 -551.88116455]
[660.34124756 -540.56292725]
[644.53741455 -540.44305420]
[634.18237305 -529.59069824]
[623.82733154 -518.73840332]
[613.47229004 -507.88604736]
[603.11724854 -497.03372192]
[592.76220703 -486.18139648]
[582.47094727 -475.26855469]
[572.24383545 -464.29559326]
[562.01672363 -453.32260132]
[558.99926758 -438.73684692]
[543.93011475 -433.91696167]
[533.70300293 -422.94396973]
[523.86798096 -411.61822510]
[514.43731689 -399.95364380]
[505.00662231 -388.28909302]
[495.57592773 -376.62451172]
[497.39492798 -361.88589478]
[487.99700928 -349.92202759]
[472.52548218 -348.11404419]
[463.09478760 -336.44949341]
[464.91375732 -321.71087646]
[455.51586914 -309.74700928]
[440.04431152 -307.93899536]
[430.61361694 -296.27444458]
[421.18292236 -284.60989380]
[411.75222778 -272.94531250]
[409.76724243 -258.18356323]
[395.07409668 -252.31657410]
[385.64340210 -240.65202332]
[376.21270752 -228.98745728]
[366.78201294 -217.32289124]
[364.79702759 -202.56114197]
[350.10385132 -196.69415283]
[340.67315674 -185.02958679]
[331.24246216 -173.36503601]
[321.81179810 -161.70046997]
[320.00039673 -144.23046875]
[302.72988892 -137.79635620]
[293.43658447 -126.02205658]
[284.14324951 -114.24774170]
[274.84994507 -102.47343445]
[265.55664062 -90.69912720]
[256.26333618 -78.92481995]
[246.97001648 -67.15050507]
[248.96163940 -52.43422318]
[239.70463562 -40.36101532]
[224.25534058 -38.37178802]
[214.96202087 -26.59748077]
[213.15022278 -11.81348228]
[198.52684021 -5.77465868]
[189.23352051 5.99965048]
[187.42172241 20.78364944]
[172.79833984 26.82247162]
[163.50502014 38.59678268]
[154.21171570 50.37108994]
[144.91841125 62.14540100]
[143.10659790 76.92939758]
[128.48321533 82.96822357]
[119.18990326 94.74253082]
[119.98079681 109.72166443]
[130.46234131 120.45186615]
[140.94387817 131.18206787]
[151.42541504 141.91227722]
[161.90696716 152.64248657]
[177.30009460 159.74795532]
[174.73355103 176.50651550]
[157.91943359 178.67950439]
[151.17675781 163.12402344]
[140.69522095 152.39381409]
[130.21366882 141.66362000]
[119.73213196 130.93341064]
[109.25059509 120.20320892]
[101.77582550 120.81793976]
[107.56460571 134.65592957]
[96.19260406 144.43742371]
[83.37580872 136.64448547]
[86.82630157 122.04740906]
[79.35153198 122.66213989]
[70.76390076 134.96061707]
[62.17626572 147.25909424]
[53.58862686 159.55757141]
[45.00099182 171.85604858]
[36.41335678 184.15452576]
[27.82572365 196.45300293]
[19.23808670 208.75148010]
[24.14792442 223.35282898]
[19.57205963 237.87574768]
[7.46519661 246.81375122]
[-7.40521526 246.90773010]
[-15.99285030 259.20620728]
[-24.58048630 271.50469971]
[-33.16812134 283.80316162]
[-20.18201828 297.78219604]
[-10.83638477 314.40899658]
[-5.64879417 332.75613403]
[-4.90500689 351.80120850]
[-8.64322948 370.48364258]
[-16.65216255 387.76376343]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 37]
[6 36]
[8 35]
[9 34]
[10 33]
[11 32]
[12 31]
[15 28]
[16 27]
[17 26]
[18 25]
[19 24]
[59 261]
[60 260]
[61 259]
[62 258]
[66 254]
[67 253]
[68 252]
[69 251]
[70 250]
[71 249]
[72 248]
[73 247]
[74 95]
[75 94]
[76 93]
[77 92]
[78 91]
[79 90]
[81 88]
[82 87]
[97 228]
[98 227]
[100 225]
[101 224]
[102 223]
[103 222]
[105 220]
[106 219]
[108 217]
[109 216]
[112 213]
[113 212]
[114 211]
[115 210]
[116 209]
[117 208]
[118 207]
[121 205]
[122 204]
[123 203]
[124 202]
[126 200]
[127 199]
[128 198]
[129 197]
[131 195]
[132 194]
[133 193]
[134 192]
[137 189]
[138 188]
[141 185]
[142 184]
[143 183]
[144 182]
[151 181]
[152 180]
[154 178]
[155 177]
[156 176]
[158 175]
[159 174]
[160 173]
[161 172]
[162 171]
[163 170]
[229 241]
[230 240]
[231 239]
[232 238]
[233 237]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
