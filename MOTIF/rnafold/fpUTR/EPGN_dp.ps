%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:16:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (EPGN)
} def

/sequence { (\
AAUAAAAACCUUCCACCCGUCAGUCUAGAAGGAUAAGAGAAAGAAAGUUAAGCAACUACAGGAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.003974197 ubox
1 49 0.011164387 ubox
2 11 0.006837912 ubox
2 34 0.033858813 ubox
2 48 0.012291766 ubox
3 33 0.034958647 ubox
3 35 0.035255407 ubox
3 47 0.011876494 ubox
3 50 0.016226258 ubox
3 58 0.007530089 ubox
4 12 0.005708250 ubox
4 34 0.035548455 ubox
4 49 0.016810196 ubox
4 57 0.006067800 ubox
5 11 0.007770460 ubox
5 12 0.007822820 ubox
5 48 0.016031842 ubox
5 49 0.006617051 ubox
6 11 0.009161195 ubox
6 12 0.004668104 ubox
6 48 0.006449292 ubox
6 49 0.008488819 ubox
7 11 0.004789050 ubox
7 48 0.007152574 ubox
7 49 0.104290741 ubox
8 20 0.005870952 ubox
8 48 0.111647040 ubox
9 19 0.006319200 ubox
9 32 0.862019648 ubox
9 47 0.111924856 ubox
9 62 0.133376851 ubox
10 28 0.004004158 ubox
10 31 0.865906259 ubox
10 32 0.006526773 ubox
10 37 0.065061312 ubox
10 39 0.160801165 ubox
10 43 0.039933800 ubox
10 47 0.026622536 ubox
10 52 0.007897249 ubox
10 61 0.133852317 ubox
10 62 0.022046867 ubox
11 27 0.003941269 ubox
11 29 0.004046973 ubox
11 30 0.865435678 ubox
11 31 0.005293689 ubox
11 36 0.064609245 ubox
11 37 0.007220537 ubox
11 38 0.159372342 ubox
11 39 0.065668911 ubox
11 40 0.006579005 ubox
11 41 0.032764127 ubox
11 42 0.035741216 ubox
11 44 0.003831415 ubox
11 45 0.113862691 ubox
11 46 0.026837819 ubox
11 51 0.007907987 ubox
11 60 0.122719082 ubox
11 61 0.021510892 ubox
11 63 0.021412962 ubox
11 64 0.270413544 ubox
12 27 0.004397301 ubox
12 28 0.005295234 ubox
12 29 0.865391736 ubox
12 30 0.004334712 ubox
12 33 0.048153105 ubox
12 35 0.057424338 ubox
12 36 0.008986288 ubox
12 37 0.151213322 ubox
12 38 0.088598915 ubox
12 39 0.005691692 ubox
12 40 0.040708865 ubox
12 41 0.025915626 ubox
12 43 0.003692393 ubox
12 44 0.121440506 ubox
12 45 0.023447166 ubox
12 50 0.007223155 ubox
12 60 0.018214024 ubox
12 62 0.018402369 ubox
12 63 0.382391796 ubox
13 28 0.864689330 ubox
13 32 0.052069848 ubox
13 37 0.092929588 ubox
13 39 0.044046355 ubox
13 43 0.121900459 ubox
13 61 0.018608031 ubox
13 62 0.392419527 ubox
14 31 0.051977904 ubox
14 61 0.392052617 ubox
15 24 0.748027034 ubox
15 48 0.011509626 ubox
16 23 0.753603662 ubox
16 32 0.071093543 ubox
16 47 0.011678506 ubox
16 62 0.050608736 ubox
17 31 0.069877624 ubox
17 32 0.404676729 ubox
17 61 0.050728812 ubox
17 62 0.055485546 ubox
18 31 0.405222897 ubox
18 61 0.055601637 ubox
19 34 0.032802819 ubox
19 53 0.006251829 ubox
19 56 0.017612758 ubox
19 59 0.058114366 ubox
20 29 0.380533617 ubox
20 32 0.007549668 ubox
20 33 0.033962143 ubox
20 38 0.141807623 ubox
20 40 0.037450798 ubox
20 44 0.056623207 ubox
20 52 0.005925289 ubox
20 55 0.016370387 ubox
20 58 0.054249120 ubox
20 62 0.003562775 ubox
20 63 0.006913464 ubox
21 28 0.401969272 ubox
21 31 0.008791134 ubox
21 32 0.034019291 ubox
21 37 0.147010444 ubox
21 39 0.039667474 ubox
21 43 0.060473950 ubox
21 61 0.004537998 ubox
21 62 0.007375150 ubox
22 57 0.034850490 ubox
23 34 0.248343696 ubox
23 53 0.011000342 ubox
23 56 0.035099369 ubox
23 59 0.003342248 ubox
24 32 0.023874844 ubox
24 33 0.255841466 ubox
24 38 0.045236550 ubox
24 40 0.059800839 ubox
24 44 0.018793070 ubox
24 52 0.009595385 ubox
24 55 0.032178114 ubox
24 63 0.004097315 ubox
25 31 0.028996020 ubox
25 32 0.256856678 ubox
25 37 0.047716468 ubox
25 39 0.060775117 ubox
25 43 0.020351136 ubox
25 47 0.005171288 ubox
25 52 0.019376502 ubox
25 62 0.004386328 ubox
26 30 0.026802521 ubox
26 31 0.244503720 ubox
26 35 0.023832763 ubox
26 36 0.042446863 ubox
26 38 0.058811467 ubox
26 42 0.019809703 ubox
26 46 0.005019845 ubox
26 50 0.009078221 ubox
26 51 0.018716675 ubox
26 61 0.004207446 ubox
27 34 0.032278582 ubox
27 49 0.009697649 ubox
27 57 0.003610045 ubox
28 48 0.008082254 ubox
28 49 0.009936595 ubox
28 56 0.003623910 ubox
29 48 0.009548386 ubox
29 49 0.010724885 ubox
30 48 0.010558681 ubox
30 49 0.005841499 ubox
30 57 0.005603529 ubox
31 48 0.006150969 ubox
31 56 0.005778076 ubox
32 49 0.014448191 ubox
33 48 0.018980124 ubox
34 47 0.018979041 ubox
34 50 0.045296753 ubox
34 58 0.009836902 ubox
35 49 0.047932619 ubox
35 57 0.008691888 ubox
36 48 0.046989641 ubox
36 49 0.009734514 ubox
36 57 0.033514526 ubox
37 48 0.009180926 ubox
37 49 0.030477959 ubox
37 56 0.034660233 ubox
38 48 0.031139010 ubox
38 49 0.021280384 ubox
38 57 0.038369022 ubox
39 48 0.022200847 ubox
39 49 0.022981808 ubox
39 56 0.039316167 ubox
40 48 0.022831477 ubox
40 49 0.032530659 ubox
41 48 0.030518897 ubox
41 49 0.040646186 ubox
42 48 0.042415685 ubox
42 49 0.023291832 ubox
42 57 0.057962350 ubox
43 48 0.019751246 ubox
43 49 0.023004443 ubox
43 56 0.059566097 ubox
44 48 0.020357133 ubox
46 57 0.818334392 ubox
47 53 0.125390486 ubox
47 56 0.848298985 ubox
47 59 0.133001390 ubox
48 52 0.117434718 ubox
48 55 0.838999124 ubox
48 58 0.128240339 ubox
48 61 0.008064754 ubox
48 62 0.007626186 ubox
48 63 0.012372211 ubox
48 64 0.004862189 ubox
49 54 0.744034487 ubox
49 58 0.044631423 ubox
49 60 0.009205824 ubox
49 61 0.008862495 ubox
49 62 0.013027758 ubox
49 63 0.006231221 ubox
50 57 0.051720153 ubox
51 57 0.068130843 ubox
52 56 0.069891424 ubox
56 62 0.060702804 ubox
57 61 0.055082971 ubox
9 32 0.9500000 lbox
10 31 0.9500000 lbox
11 30 0.9500000 lbox
12 29 0.9500000 lbox
13 28 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
