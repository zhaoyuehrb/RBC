%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:23:39 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TBX15)
} def

/sequence { (\
GCGCCGGCUGCUCCCUCGGUAGCGGGGGCAAGCGGAGGCAGGGGUGUGGGCGGCUAAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.004478844 ubox
1 29 0.102906871 ubox
1 39 0.140716338 ubox
1 45 0.070498545 ubox
1 47 0.114103049 ubox
1 51 0.085527265 ubox
1 54 0.478359010 ubox
2 7 0.004515024 ubox
2 28 0.102974250 ubox
2 38 0.140802100 ubox
2 44 0.073095044 ubox
2 46 0.121602838 ubox
2 48 0.003260058 ubox
2 50 0.085489021 ubox
2 52 0.642497281 ubox
2 53 0.340469103 ubox
3 39 0.231475514 ubox
3 45 0.121931543 ubox
3 51 0.730486375 ubox
3 54 0.593744102 ubox
4 26 0.103018887 ubox
4 35 0.141016871 ubox
4 38 0.231748125 ubox
4 42 0.071605203 ubox
4 43 0.008154013 ubox
4 44 0.121850682 ubox
4 49 0.091465331 ubox
4 50 0.729876559 ubox
4 53 0.594483399 ubox
5 25 0.102985681 ubox
5 34 0.141049823 ubox
5 37 0.231709414 ubox
5 41 0.071474383 ubox
5 42 0.009870694 ubox
5 43 0.121624483 ubox
5 46 0.003616432 ubox
5 48 0.100118677 ubox
5 49 0.728426767 ubox
5 52 0.594486833 ubox
6 33 0.134229076 ubox
6 45 0.008489735 ubox
6 47 0.078789413 ubox
6 51 0.593757002 ubox
6 55 0.025637178 ubox
7 23 0.103010936 ubox
7 33 0.089808929 ubox
7 39 0.065307025 ubox
7 45 0.268795155 ubox
7 47 0.667508709 ubox
7 51 0.020397757 ubox
7 54 0.026926742 ubox
8 22 0.103056343 ubox
8 32 0.100103485 ubox
8 35 0.281655919 ubox
8 37 0.008433536 ubox
8 38 0.063457141 ubox
8 41 0.119771300 ubox
8 42 0.004918146 ubox
8 43 0.008448762 ubox
8 44 0.288199735 ubox
8 46 0.659498621 ubox
8 49 0.585333729 ubox
8 50 0.028229525 ubox
8 53 0.026932647 ubox
9 21 0.103007360 ubox
9 30 0.221690938 ubox
9 31 0.074806120 ubox
9 34 0.296094798 ubox
9 36 0.008019494 ubox
9 37 0.054650202 ubox
9 40 0.131870421 ubox
9 41 0.003850193 ubox
9 42 0.008905635 ubox
9 43 0.307086875 ubox
9 46 0.044182405 ubox
9 48 0.575850083 ubox
9 49 0.025984487 ubox
9 52 0.026906174 ubox
10 20 0.103016419 ubox
10 29 0.245557488 ubox
10 33 0.311989104 ubox
10 39 0.132283025 ubox
10 45 0.556754867 ubox
10 47 0.537399242 ubox
10 51 0.026921222 ubox
11 19 0.102996329 ubox
11 28 0.244773753 ubox
11 32 0.312011564 ubox
11 35 0.011869169 ubox
11 37 0.010310726 ubox
11 38 0.131748163 ubox
11 41 0.337321116 ubox
11 42 0.037533104 ubox
11 43 0.272012170 ubox
11 44 0.576492867 ubox
11 46 0.536827874 ubox
11 50 0.026912716 ubox
12 18 0.094982490 ubox
12 27 0.233452300 ubox
12 28 0.018339307 ubox
12 31 0.289046107 ubox
12 34 0.012041614 ubox
12 36 0.014310545 ubox
12 37 0.129785422 ubox
12 40 0.330316683 ubox
12 41 0.036161976 ubox
12 42 0.274462726 ubox
12 43 0.574744159 ubox
12 44 0.306594396 ubox
12 49 0.026449585 ubox
13 18 0.028138216 ubox
13 19 0.003727197 ubox
13 26 0.233467922 ubox
13 27 0.075116454 ubox
13 28 0.383232509 ubox
13 35 0.011509659 ubox
13 38 0.024603922 ubox
13 41 0.266092240 ubox
13 42 0.569755831 ubox
13 43 0.326856614 ubox
13 44 0.390046836 ubox
13 48 0.023102992 ubox
14 18 0.004260828 ubox
14 25 0.233362059 ubox
14 26 0.075182740 ubox
14 27 0.395236282 ubox
14 28 0.007867211 ubox
14 34 0.008957303 ubox
14 35 0.003305840 ubox
14 37 0.020773026 ubox
14 38 0.596971306 ubox
14 41 0.404171339 ubox
14 42 0.317403130 ubox
14 43 0.383623743 ubox
14 44 0.055041206 ubox
15 22 0.003483954 ubox
15 24 0.232376230 ubox
15 25 0.075207462 ubox
15 26 0.402892655 ubox
15 27 0.013553823 ubox
15 28 0.007328481 ubox
15 32 0.004031565 ubox
15 34 0.003200596 ubox
15 35 0.007791117 ubox
15 37 0.724075326 ubox
15 38 0.031167940 ubox
15 41 0.307463980 ubox
15 42 0.376431059 ubox
15 43 0.055821372 ubox
16 21 0.005959143 ubox
16 24 0.016703047 ubox
16 25 0.404329068 ubox
16 26 0.013738242 ubox
16 27 0.009848146 ubox
16 31 0.003940721 ubox
16 35 0.097354069 ubox
16 36 0.746888222 ubox
16 37 0.017226328 ubox
16 38 0.047689755 ubox
16 40 0.253906910 ubox
16 41 0.326410766 ubox
16 42 0.056450063 ubox
17 24 0.417522870 ubox
17 25 0.015897564 ubox
17 26 0.016069545 ubox
17 27 0.006589221 ubox
17 34 0.187781242 ubox
17 35 0.758243713 ubox
17 37 0.091899358 ubox
17 41 0.116793427 ubox
18 23 0.418150960 ubox
18 33 0.194193754 ubox
19 29 0.013857068 ubox
19 33 0.754675991 ubox
19 39 0.252780723 ubox
20 28 0.013716081 ubox
20 32 0.742750135 ubox
20 38 0.246404769 ubox
22 29 0.799473211 ubox
22 33 0.212318825 ubox
22 39 0.016559766 ubox
23 28 0.800198673 ubox
23 32 0.212626468 ubox
23 34 0.264039102 ubox
23 38 0.016553801 ubox
24 33 0.264877361 ubox
27 55 0.003543442 ubox
28 39 0.059425491 ubox
28 45 0.011495711 ubox
28 54 0.003658199 ubox
29 38 0.059611320 ubox
29 44 0.019538001 ubox
29 48 0.003427025 ubox
29 53 0.003666497 ubox
30 47 0.003318546 ubox
31 55 0.091293007 ubox
32 39 0.336482969 ubox
32 45 0.016799177 ubox
32 47 0.004441272 ubox
32 51 0.022695587 ubox
32 54 0.094599048 ubox
33 38 0.336753486 ubox
33 44 0.017630573 ubox
33 46 0.004691620 ubox
33 50 0.022754306 ubox
33 52 0.052778654 ubox
33 53 0.082041660 ubox
34 45 0.004690461 ubox
34 51 0.071171605 ubox
34 55 0.004012528 ubox
35 54 0.004220695 ubox
37 55 0.008215474 ubox
38 45 0.063140180 ubox
38 47 0.180822159 ubox
38 51 0.009775762 ubox
38 54 0.008526372 ubox
39 44 0.065067191 ubox
39 46 0.186561411 ubox
39 48 0.054627539 ubox
39 50 0.009941692 ubox
39 53 0.008504543 ubox
40 45 0.179834544 ubox
40 47 0.053789192 ubox
40 55 0.059178526 ubox
41 54 0.061851556 ubox
41 55 0.057359044 ubox
42 54 0.058869197 ubox
42 55 0.181099321 ubox
43 54 0.186828464 ubox
43 55 0.103589769 ubox
44 51 0.106371246 ubox
44 54 0.106904374 ubox
45 50 0.105270889 ubox
45 52 0.185917905 ubox
45 53 0.104524117 ubox
45 56 0.006074710 ubox
46 51 0.184620482 ubox
46 54 0.044261221 ubox
46 55 0.003904103 ubox
47 53 0.044126563 ubox
47 56 0.095230409 ubox
48 55 0.113785636 ubox
49 54 0.115407607 ubox
49 55 0.016065641 ubox
50 54 0.016233356 ubox
2 52 0.9500000 lbox
3 51 0.9500000 lbox
4 50 0.9500000 lbox
5 49 0.9500000 lbox
7 47 0.9500000 lbox
8 46 0.9500000 lbox
10 45 0.9500000 lbox
11 44 0.9500000 lbox
12 43 0.9500000 lbox
13 42 0.9500000 lbox
14 41 0.9500000 lbox
15 37 0.9500000 lbox
16 36 0.9500000 lbox
17 35 0.9500000 lbox
19 33 0.9500000 lbox
20 32 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
showpage
end
%%EOF
