%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:03:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCCAGGUCGCGCACAGCGCCCCGAGCCCAGGCGCCUCCCCGCCCCCCUCCCGCGCUCCGCGGCGGCGGCGGCGGCGGCAGCAGUAGCAGCAAUAUGGCUGUUGAUGGGUGUUUGGGGUGGCGCUGGCGGCGGGAGGAGCUCCCCCGAGCCCCUGCGCCGGCUGCCCGUUGCUAGCU\
) } def
/len { sequence length } bind def

/coor [
[169.39126587 137.44337463]
[167.19714355 132.64064026]
[154.96920776 123.95286560]
[142.74127197 115.26509094]
[130.51333618 106.57730865]
[123.20988464 108.28306580]
[118.86091614 122.63877869]
[108.60298157 111.69458008]
[101.29953003 113.40033722]
[94.18483734 126.60569000]
[87.07015228 139.81103516]
[90.28050232 155.52960205]
[79.88271332 167.74702454]
[63.85307312 167.09115601]
[54.48815155 154.06510925]
[58.97191238 138.66136169]
[73.86479950 132.69635010]
[80.97949219 119.49099731]
[88.09418488 106.28565216]
[86.50870514 91.36967468]
[76.77705383 79.95499420]
[67.04540253 68.54031372]
[57.31375122 57.12563324]
[47.58209991 45.71094894]
[37.85044861 34.29626846]
[27.91885948 23.05511284]
[17.79043007 11.99098587]
[7.66199923 0.92685884]
[-2.46643090 -10.13726807]
[-12.59486103 -21.20139503]
[-32.98152924 -24.21018410]
[-40.99594116 -42.48857880]
[-54.55931854 -48.89442444]
[-68.17869568 -55.18032837]
[-81.85301208 -61.34580612]
[-95.52732086 -67.51128387]
[-111.28812408 -66.13010406]
[-119.71029663 -78.41490173]
[-133.38461304 -84.58037567]
[-147.11280823 -90.62494659]
[-160.89379883 -96.54812622]
[-174.67480469 -102.47131348]
[-188.45579529 -108.39450073]
[-202.23680115 -114.31768799]
[-217.97076416 -112.65856934]
[-226.60844421 -124.79281616]
[-240.38943481 -130.71600342]
[-250.27862549 -126.09646606]
[-260.85769653 -127.66684723]
[-268.65106201 -134.66613770]
[-271.23382568 -144.59066772]
[-284.79718018 -150.99652100]
[-298.36056519 -157.40235901]
[-311.92395020 -163.80821228]
[-325.48730469 -170.21405029]
[-342.39157104 -171.51100159]
[-345.82489014 -188.11367798]
[-330.82147217 -196.00888062]
[-319.08148193 -183.77743530]
[-305.51809692 -177.37158203]
[-291.95471191 -170.96572876]
[-278.39135742 -164.55989075]
[-264.82797241 -158.15403748]
[-245.74763489 -161.17924500]
[-234.46624756 -144.49699402]
[-220.68525696 -138.57380676]
[-205.93699646 -140.65660095]
[-196.31361389 -128.09867859]
[-182.53260803 -122.17549896]
[-168.75161743 -116.25231171]
[-154.97061157 -110.32912445]
[-141.18962097 -104.40594482]
[-133.78038025 -104.65414429]
[-127.21913910 -98.25469208]
[-113.54482269 -92.08921814]
[-98.76210022 -93.91139221]
[-89.36184692 -81.18560028]
[-75.68753052 -75.02011871]
[-62.01321793 -68.85464478]
[-54.60074615 -68.97205353]
[-48.15346909 -62.45779800]
[-34.59009552 -56.05195236]
[-31.56335640 -58.38356400]
[-28.15300751 -60.10608673]
[-24.48010063 -61.15838242]
[-21.58620834 -75.87657928]
[-18.69231796 -90.59477997]
[-15.79842663 -105.31298065]
[-12.90453625 -120.03118134]
[-10.01064491 -134.74937439]
[-7.11675406 -149.46757507]
[-16.13309479 -162.44760132]
[-13.24815845 -177.98635864]
[-0.17352840 -186.86495972]
[15.33384991 -183.81590271]
[24.07372475 -170.64813232]
[20.86088181 -155.17385864]
[7.60144567 -146.57368469]
[4.70755482 -131.85548401]
[1.81366372 -117.13729095]
[-1.08022726 -102.41909027]
[-3.97411823 -87.70088959]
[-6.86800909 -72.98268890]
[-9.76189995 -58.26449203]
[-0.51640391 -46.63551331]
[-1.53073382 -31.32982445]
[8.59769630 -20.26569748]
[18.72612572 -9.20157146]
[28.85455704 1.86255574]
[38.98298645 12.92668247]
[43.65846634 14.02748585]
[47.68109512 18.09549713]
[49.26512909 24.56461716]
[58.99678040 35.97929764]
[68.72843170 47.39398193]
[78.46008301 58.80866241]
[88.19173431 70.22334290]
[97.92338562 81.63802338]
[139.20111084 94.34937286]
[151.42904663 103.03714752]
[163.65698242 111.72492981]
[175.88493347 120.41270447]
[188.33856201 128.77375793]
[201.00914001 136.80221558]
[213.67973328 144.83067322]
[226.35032654 152.85913086]
[239.02091980 160.88758850]
[251.69151306 168.91604614]
[264.36209106 176.94450378]
[277.03268433 184.97296143]
[289.70327759 193.00141907]
[302.37387085 201.02989197]
[315.04446411 209.05834961]
[327.71505737 217.08680725]
[341.04391479 223.96733093]
[354.92727661 229.64637756]
[368.81066895 235.32542419]
[384.51290894 233.38888550]
[393.36340332 245.36880493]
[407.24676514 251.04785156]
[421.13015747 256.72689819]
[435.01354980 262.40594482]
[451.18096924 259.65878296]
[461.43399048 272.45748901]
[455.22521973 287.63586426]
[438.94168091 289.57971191]
[429.33450317 276.28933716]
[415.45111084 270.61029053]
[401.56771851 264.93124390]
[387.68432617 259.25219727]
[372.97512817 261.59494019]
[363.13162231 249.20881653]
[349.24822998 243.52976990]
[335.36483765 237.85072327]
[326.46261597 249.92343140]
[335.99130249 261.50808716]
[351.52740479 266.75799561]
[354.48315430 282.88858032]
[341.81793213 293.30606079]
[326.56060791 287.29382324]
[324.40664673 271.03677368]
[314.87796021 259.45211792]
[311.83398438 247.27665710]
[313.95812988 236.77005005]
[319.68658447 229.75738525]
[307.01599121 221.72892761]
[294.34539795 213.70046997]
[281.67480469 205.67201233]
[269.00424194 197.64355469]
[256.33364868 189.61509705]
[243.66305542 181.58663940]
[230.99246216 173.55818176]
[218.32186890 165.52972412]
[205.65127563 157.50126648]
[192.98068237 149.47280884]
[180.31010437 141.44435120]
[176.78141785 141.87126160]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 122]
[3 121]
[4 120]
[5 119]
[9 19]
[10 18]
[11 17]
[20 118]
[21 117]
[22 116]
[23 115]
[24 114]
[25 113]
[26 110]
[27 109]
[28 108]
[29 107]
[30 106]
[32 82]
[33 81]
[34 79]
[35 78]
[36 77]
[38 75]
[39 74]
[40 72]
[41 71]
[42 70]
[43 69]
[44 68]
[46 66]
[47 65]
[51 63]
[52 62]
[53 61]
[54 60]
[55 59]
[85 104]
[86 103]
[87 102]
[88 101]
[89 100]
[90 99]
[91 98]
[123 176]
[124 175]
[125 174]
[126 173]
[127 172]
[128 171]
[129 170]
[130 169]
[131 168]
[132 167]
[133 166]
[134 165]
[135 154]
[136 153]
[137 152]
[139 150]
[140 149]
[141 148]
[142 147]
[155 162]
[156 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
