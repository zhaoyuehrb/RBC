%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:47:02 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SIRT6)
} def

/sequence { (\
GCCCCGCUUCCGGCGGAAGCGGCCUCAACAAGGGAAACUUUAUUGUUCCCGUGGGGCAGUCGAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 14 0.009227485 ubox
1 20 0.104699259 ubox
1 23 0.031957934 ubox
1 57 0.519272647 ubox
1 60 0.045441532 ubox
2 13 0.009233173 ubox
2 16 0.016844709 ubox
2 19 0.104687971 ubox
2 22 0.030599594 ubox
2 33 0.019948173 ubox
2 34 0.024664297 ubox
2 55 0.009792779 ubox
2 56 0.519459339 ubox
2 59 0.049623825 ubox
2 65 0.144415119 ubox
3 12 0.009219354 ubox
3 15 0.016929736 ubox
3 16 0.007047842 ubox
3 21 0.029401642 ubox
3 22 0.024554909 ubox
3 32 0.020005612 ubox
3 33 0.024465676 ubox
3 34 0.005477986 ubox
3 54 0.011821603 ubox
3 55 0.518829790 ubox
3 56 0.003385003 ubox
3 64 0.146642587 ubox
3 65 0.144880729 ubox
4 13 0.017019966 ubox
4 15 0.005009258 ubox
4 16 0.134437112 ubox
4 21 0.037949911 ubox
4 22 0.397018430 ubox
4 32 0.017065515 ubox
4 33 0.003345843 ubox
4 53 0.007282749 ubox
4 54 0.501895619 ubox
4 55 0.004058950 ubox
4 64 0.146885881 ubox
4 65 0.029753459 ubox
5 12 0.017031904 ubox
5 15 0.134830798 ubox
5 21 0.876078112 ubox
5 53 0.444083240 ubox
5 54 0.004591469 ubox
5 62 0.031575899 ubox
5 64 0.028565441 ubox
6 11 0.016361453 ubox
6 14 0.135015381 ubox
6 20 0.929835332 ubox
6 23 0.004993235 ubox
6 52 0.340475022 ubox
6 61 0.006017705 ubox
7 13 0.134980397 ubox
7 19 0.930219226 ubox
7 22 0.004886734 ubox
7 51 0.339797137 ubox
7 59 0.003183571 ubox
8 12 0.121605480 ubox
8 17 0.005207528 ubox
8 18 0.930192698 ubox
8 21 0.004473637 ubox
8 28 0.047654547 ubox
8 31 0.008903542 ubox
9 16 0.006607958 ubox
9 17 0.930505281 ubox
9 22 0.003526933 ubox
9 27 0.053652103 ubox
9 30 0.009242318 ubox
10 15 0.008961222 ubox
10 16 0.930798644 ubox
10 21 0.004390035 ubox
10 22 0.094054369 ubox
11 15 0.924030403 ubox
11 21 0.095047314 ubox
12 20 0.076540516 ubox
12 24 0.322771623 ubox
12 25 0.003446177 ubox
12 26 0.011725769 ubox
12 47 0.003965746 ubox
13 20 0.064098499 ubox
13 23 0.323148973 ubox
13 24 0.003166639 ubox
13 25 0.011230256 ubox
13 46 0.004501328 ubox
14 19 0.085319699 ubox
14 21 0.108692471 ubox
14 22 0.304491714 ubox
14 45 0.004577521 ubox
15 20 0.152648053 ubox
15 24 0.016720082 ubox
15 44 0.004093817 ubox
16 23 0.016690172 ubox
16 41 0.004272106 ubox
16 61 0.006106876 ubox
17 40 0.004800933 ubox
17 60 0.006234758 ubox
18 25 0.004068127 ubox
18 39 0.004918344 ubox
19 24 0.005010964 ubox
19 38 0.004919146 ubox
19 52 0.005864685 ubox
19 60 0.072814692 ubox
20 51 0.018619871 ubox
20 59 0.075442268 ubox
20 62 0.019770534 ubox
21 49 0.019523571 ubox
21 50 0.057282159 ubox
21 61 0.024004670 ubox
22 48 0.019549189 ubox
22 49 0.057241006 ubox
22 52 0.019405195 ubox
22 57 0.765202464 ubox
22 60 0.008620158 ubox
23 33 0.115575274 ubox
23 34 0.142053193 ubox
23 51 0.020028039 ubox
23 54 0.036578339 ubox
23 55 0.026529485 ubox
23 56 0.814503840 ubox
23 59 0.008994735 ubox
23 65 0.141122818 ubox
24 32 0.116543962 ubox
24 33 0.142436120 ubox
24 34 0.084457134 ubox
24 53 0.036802809 ubox
24 54 0.030904571 ubox
24 55 0.815142114 ubox
24 56 0.023157747 ubox
24 59 0.006575393 ubox
24 64 0.144099415 ubox
25 31 0.113613136 ubox
25 32 0.131193681 ubox
25 33 0.084647219 ubox
25 34 0.008059153 ubox
25 35 0.010258222 ubox
25 53 0.022041050 ubox
25 54 0.813368736 ubox
25 55 0.023715595 ubox
25 56 0.006633509 ubox
25 58 0.006386691 ubox
25 63 0.144074492 ubox
26 32 0.092169760 ubox
26 33 0.010317000 ubox
26 34 0.010736021 ubox
26 45 0.060789932 ubox
26 53 0.806074262 ubox
26 54 0.053375015 ubox
26 55 0.009587782 ubox
26 62 0.143762697 ubox
27 44 0.060901822 ubox
27 47 0.010969108 ubox
27 52 0.606872114 ubox
28 43 0.059064967 ubox
28 46 0.013121126 ubox
28 52 0.465349419 ubox
28 60 0.086175213 ubox
29 45 0.013220575 ubox
29 51 0.643099194 ubox
29 53 0.271947027 ubox
29 59 0.085308870 ubox
30 40 0.037730374 ubox
30 41 0.095027852 ubox
30 44 0.012802601 ubox
30 52 0.270406077 ubox
31 39 0.042591930 ubox
31 40 0.103297850 ubox
31 41 0.011043295 ubox
31 43 0.011173479 ubox
32 38 0.043186701 ubox
32 39 0.105771042 ubox
32 40 0.012204820 ubox
32 41 0.003460205 ubox
32 49 0.030495903 ubox
32 50 0.965639659 ubox
33 38 0.106083746 ubox
33 39 0.012526094 ubox
33 40 0.003873369 ubox
33 41 0.005089228 ubox
33 48 0.030088936 ubox
33 49 0.969586811 ubox
33 50 0.039004733 ubox
34 38 0.012369228 ubox
34 39 0.003224168 ubox
34 40 0.006278110 ubox
34 41 0.004386324 ubox
34 47 0.025039009 ubox
34 48 0.969570213 ubox
34 49 0.039233051 ubox
35 39 0.005408354 ubox
35 40 0.004249519 ubox
35 44 0.004606959 ubox
35 46 0.019604750 ubox
35 47 0.801139193 ubox
36 43 0.008638227 ubox
36 44 0.017517312 ubox
36 46 0.577406695 ubox
36 47 0.541909234 ubox
37 43 0.022228307 ubox
37 46 0.768522153 ubox
38 45 0.943049726 ubox
38 64 0.197307157 ubox
38 65 0.061957007 ubox
39 63 0.197766245 ubox
39 64 0.062787894 ubox
40 62 0.188432303 ubox
40 63 0.063117910 ubox
41 62 0.062466217 ubox
42 60 0.219444993 ubox
43 59 0.222321803 ubox
44 58 0.229268196 ubox
45 57 0.230582266 ubox
46 56 0.229858796 ubox
47 55 0.228931171 ubox
47 56 0.013421703 ubox
48 54 0.229565175 ubox
48 55 0.019057315 ubox
48 56 0.010645953 ubox
49 53 0.227902830 ubox
49 54 0.019046199 ubox
49 55 0.011165519 ubox
49 56 0.003865293 ubox
50 54 0.011109319 ubox
50 55 0.004293654 ubox
51 57 0.027820431 ubox
51 61 0.003829904 ubox
52 56 0.026048771 ubox
52 58 0.010885641 ubox
53 57 0.011930459 ubox
53 61 0.015197956 ubox
54 60 0.014950667 ubox
54 61 0.048270252 ubox
55 60 0.043684711 ubox
55 61 0.021581656 ubox
56 60 0.014062749 ubox
5 21 0.9500000 lbox
6 20 0.9500000 lbox
7 19 0.9500000 lbox
8 18 0.9500000 lbox
9 17 0.9500000 lbox
10 16 0.9500000 lbox
11 15 0.9500000 lbox
22 57 0.9500000 lbox
23 56 0.9500000 lbox
24 55 0.9500000 lbox
25 54 0.9500000 lbox
26 53 0.9500000 lbox
28 52 0.9500000 lbox
29 51 0.9500000 lbox
32 50 0.9500000 lbox
33 49 0.9500000 lbox
34 48 0.9500000 lbox
35 47 0.9500000 lbox
37 46 0.9500000 lbox
38 45 0.9500000 lbox
showpage
end
%%EOF
