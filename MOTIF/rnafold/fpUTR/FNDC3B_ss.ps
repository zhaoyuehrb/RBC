%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:11:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCGGCGGCGGCUGGAGGAGGAGAGCGGCGGCGGCGGGAGCAGCGAAGGGGGCGGCAGGGAUCCUCCAGGCUGCCGGCUGGGAAGGCGUGGGCGACCCGGUGUGUGGCGCGCCCAGAGCCCCGCGUUUCAGCCCUAGGGAAGGAAGCCAGUUGAGGGAAGUUCUCCAUGA\
) } def
/len { sequence length } bind def

/coor [
[116.33769989 207.70335388]
[123.27511597 200.80641174]
[118.97790527 186.43511963]
[114.68068695 172.06382751]
[110.38346863 157.69255066]
[105.95594788 143.36087036]
[101.39847565 129.06997681]
[96.84101105 114.77909088]
[84.68976593 105.98435974]
[69.69038391 106.12055206]
[54.69100189 106.25675201]
[39.69161987 106.39294434]
[24.69223785 106.52913666]
[9.69285583 106.66532898]
[-5.30467129 106.93770599]
[-20.29910660 107.34624481]
[-35.29354095 107.75478363]
[-50.28797913 108.16332245]
[-65.28240967 108.57186127]
[-80.27684784 108.98040009]
[-95.27128601 109.38893890]
[-101.57492828 123.24626160]
[-113.22255707 132.95294189]
[-127.86964417 136.62487793]
[-142.59799194 133.58569336]
[-154.49716187 124.49066925]
[-161.23951721 111.18630981]
[-176.23394775 111.59484863]
[-189.81826782 119.70513916]
[-202.75155640 112.31734467]
[-217.74598694 112.72588348]
[-236.74223328 127.15223694]
[-256.93420410 115.85893250]
[-271.79528809 117.89556885]
[-284.41711426 127.43494415]
[-298.07708740 121.49734497]
[-312.93817139 123.53398132]
[-325.55670166 134.00796509]
[-340.84072876 128.06398010]
[-343.06732178 111.81670380]
[-329.94598389 101.97991943]
[-314.97479248 108.67288208]
[-300.11370850 106.63625336]
[-288.55484009 97.24254608]
[-273.83190918 103.03446960]
[-258.97082520 100.99784088]
[-256.60784912 94.84533691]
[-252.41151428 89.69637299]
[-246.77528381 86.08477020]
[-240.24382019 84.39781952]
[-233.46037292 84.83496094]
[-227.10345459 87.38475800]
[-221.81895447 91.82287598]
[-218.15452576 97.73144531]
[-203.16009521 97.32290649]
[-190.64826965 89.24183655]
[-176.64248657 96.60041046]
[-161.64805603 96.19187164]
[-155.64013672 82.54011536]
[-144.25387573 72.81065369]
[-129.71286011 68.97400665]
[-114.88755798 71.84292603]
[-102.72866821 80.90097809]
[-95.67982483 94.39450073]
[-80.68538666 93.98596191]
[-65.69094849 93.57742310]
[-50.69651413 93.16889191]
[-35.70207977 92.76035309]
[-20.70764542 92.35181427]
[-5.71320915 91.94327545]
[0.91121536 88.60591888]
[9.55666161 91.66594696]
[24.55604362 91.52975464]
[39.55542374 91.39356232]
[54.55480576 91.25737000]
[69.55419159 91.12117004]
[84.55356598 90.98497772]
[104.58283234 78.24795532]
[114.54534912 67.03420258]
[124.50785828 55.82044601]
[134.47036743 44.60668945]
[144.43289185 33.39293289]
[154.39540100 22.17917824]
[164.35791016 10.96542263]
[174.32043457 -0.24833296]
[174.34495544 -13.16983223]
[182.90350342 -22.30805206]
[194.99501038 -23.12306595]
[205.15950012 -34.15406799]
[215.32398987 -45.18507004]
[218.85539246 -53.64892197]
[225.77462769 -56.32196045]
[236.13774109 -67.16657257]
[246.50086975 -78.01118469]
[256.86401367 -88.85579681]
[252.24305725 -102.07900238]
[253.77070618 -115.93618011]
[261.09130859 -127.72267151]
[272.72418213 -135.16279602]
[286.36273193 -136.84913635]
[299.33181763 -132.50849915]
[309.89016724 -143.16314697]
[320.44851685 -153.81779480]
[331.00683594 -164.47244263]
[341.56518555 -175.12709045]
[352.12353516 -185.78172302]
[358.97775269 -201.28837585]
[375.77581787 -198.99467468]
[378.22192383 -182.21812439]
[362.77816772 -175.22338867]
[352.21981812 -164.56874084]
[341.66149902 -153.91409302]
[331.10314941 -143.25946045]
[320.54479980 -132.60481262]
[309.98648071 -121.95016479]
[314.62036133 -106.48702240]
[310.81188965 -90.70368958]
[299.50625610 -78.92003632]
[283.71374512 -74.41007996]
[267.70861816 -78.49266815]
[257.34548950 -67.64805603]
[246.98236084 -56.80344391]
[236.61923218 -45.95883179]
[226.35499573 -35.02057648]
[216.19050598 -23.98957253]
[206.02600098 -12.95857048]
[203.12756348 4.33397627]
[185.53417969 9.71418095]
[175.57167053 20.92793655]
[165.60916138 32.14169312]
[155.64663696 43.35544968]
[145.68412781 54.56920242]
[135.72161865 65.78295898]
[125.75910187 76.99671173]
[115.79658508 88.21047211]
[126.05670929 77.26834869]
[139.96047974 71.63938141]
[154.94305420 72.36193848]
[168.24063110 79.30273438]
[177.40019226 91.18138885]
[180.73205566 105.80666351]
[177.62162781 120.48062897]
[168.64265442 132.49638367]
[155.45150757 139.63735962]
[140.48156738 140.58630371]
[126.49430084 135.16812134]
[116.06996918 124.38233185]
[111.13189697 110.22161865]
[115.68936920 124.51250458]
[120.24683380 138.80339050]
[125.85507965 146.05978394]
[124.75476074 153.39532471]
[129.05197144 167.76661682]
[133.34919739 182.13790894]
[137.64640808 196.50918579]
[156.75299072 205.20806885]
[163.21035767 224.87692261]
[153.26225281 242.69816589]
[158.59112549 256.71969604]
[163.91998291 270.74121094]
[177.90614319 278.60043335]
[180.33946228 294.45785522]
[169.35333252 306.14907837]
[153.37535095 304.70556641]
[144.66247559 291.23464966]
[149.89846802 276.07009888]
[144.56959534 262.04855347]
[139.24072266 248.02703857]
[129.86338806 246.99401855]
[121.46427917 242.57188416]
[115.22994232 235.33732605]
[112.05860901 226.26754761]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 155]
[3 154]
[4 153]
[5 152]
[6 150]
[7 149]
[8 148]
[9 77]
[10 76]
[11 75]
[12 74]
[13 73]
[14 72]
[15 70]
[16 69]
[17 68]
[18 67]
[19 66]
[20 65]
[21 64]
[27 58]
[28 57]
[30 55]
[31 54]
[33 46]
[34 45]
[36 43]
[37 42]
[78 135]
[79 134]
[80 133]
[81 132]
[82 131]
[83 130]
[84 129]
[85 128]
[88 126]
[89 125]
[90 124]
[92 123]
[93 122]
[94 121]
[95 120]
[101 115]
[102 114]
[103 113]
[104 112]
[105 111]
[106 110]
[158 168]
[159 167]
[160 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
