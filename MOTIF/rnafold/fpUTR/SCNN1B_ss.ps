%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:43:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCUUCCCCGCCCCUGAACCUGCUCCCUCCCAGUCGGUCUCGCCGCGCUCGCCGGGUGUCCCAGUGUCACCAACACUCGGCCGCCGCCGCCAGCUUGGCGCGCACCGCCGCCUCCGCCACCGCCGACAGCGCGCAUCCUCCGUGUCCCCGCUCCGCCGCCCGAGCAGGUGCCACU\
) } def
/len { sequence length } bind def

/coor [
[66.75749969 310.33554077]
[54.77830887 314.40411377]
[42.15596008 314.93054199]
[38.20942307 329.40206909]
[46.26737976 342.99783325]
[42.27066803 358.28842163]
[28.59046745 366.20217896]
[13.34299755 362.04400635]
[5.57431173 348.28091431]
[9.89343357 333.07824707]
[23.73790550 325.45553589]
[27.68444443 310.98400879]
[13.65904999 300.80899048]
[4.58082438 286.00875854]
[1.85671556 268.82556152]
[5.92860174 251.87486267]
[16.20187187 237.74713135]
[31.13208961 228.61204529]
[48.45713043 225.88519287]
[51.62786865 211.22415161]
[54.79860687 196.56309509]
[57.96934891 181.90205383]
[61.14008713 167.24099731]
[64.31082916 152.57994080]
[67.48156738 137.91889954]
[70.65230560 123.25784302]
[55.70757294 121.97138977]
[43.89772797 112.72327423]
[39.06572723 98.52285767]
[42.78391647 83.99099731]
[53.84238052 73.85638428]
[68.64267731 71.41685486]
[82.36874390 77.46623993]
[90.55436707 90.03696442]
[86.60782623 75.56544495]
[82.66128540 61.09392929]
[78.71475220 46.62241364]
[74.76821136 32.15089417]
[70.82167053 17.67937660]
[63.43725204 4.62294865]
[53.06856155 -6.21634579]
[37.93812561 -10.84024429]
[34.73157501 -25.38559723]
[24.36288834 -36.22489166]
[9.23245049 -40.84878922]
[6.02590036 -55.39414215]
[-4.34278822 -66.23343658]
[-14.71147633 -77.07273102]
[-29.99340439 -75.13137054]
[-43.33229065 -82.47490692]
[-49.71383667 -96.10354614]
[-46.88053131 -110.70185089]
[-57.24921799 -121.54114532]
[-67.61790466 -132.38043213]
[-77.98659515 -143.21972656]
[-88.35528564 -154.05902100]
[-98.72397614 -164.89831543]
[-109.09265900 -175.73760986]
[-119.46134949 -186.57690430]
[-129.83003235 -197.41619873]
[-144.15072632 -192.23570251]
[-159.33996582 -193.33428955]
[-172.76612854 -200.52165222]
[-182.10304260 -212.55252075]
[-185.73303223 -227.34249878]
[-183.02719116 -242.32910156]
[-174.45431519 -254.91581726]
[-161.49969482 -262.92193604]
[-146.40782166 -264.96032715]
[-131.79342651 -260.67785645]
[-120.18856812 -250.81646729]
[-113.60384369 -237.08471680]
[-113.18009186 -221.86169434]
[-118.99074554 -207.78489685]
[-108.62205505 -196.94560242]
[-98.25336456 -186.10630798]
[-87.88468170 -175.26701355]
[-77.51599121 -164.42771912]
[-67.14730072 -153.58842468]
[-56.77861404 -142.74913025]
[-46.40992737 -131.90983582]
[-36.04123688 -121.07054138]
[-21.33162498 -123.25350189]
[-7.99947405 -116.27368927]
[-1.25485504 -102.62219238]
[-3.87218213 -87.44142151]
[6.49650621 -76.60212708]
[16.86519432 -65.76283264]
[31.25399399 -61.91423416]
[35.20218277 -46.59357834]
[45.57086945 -35.75428391]
[59.95967102 -31.90568733]
[63.90785599 -16.58503342]
[74.27654266 -5.74573994]
[79.26082611 -15.50741386]
[88.21723175 -20.61886215]
[97.86303711 -20.01653290]
[107.64014435 -31.39230728]
[117.41724396 -42.76808548]
[127.19434357 -54.14385986]
[136.97145081 -65.51963806]
[139.77474976 -85.46154022]
[158.24252319 -91.12966919]
[167.60974121 -102.84527588]
[165.61125183 -118.52269745]
[175.34967041 -130.97013855]
[191.04734802 -132.80276489]
[203.39112854 -122.93328857]
[205.05767822 -107.21711731]
[195.05825806 -94.97836304]
[179.32534790 -93.47807312]
[169.95812988 -81.76246643]
[172.00064087 -71.71147156]
[168.07579041 -61.99807358]
[159.26179504 -55.93790817]
[148.34722900 -55.74253464]
[138.57012939 -44.36675644]
[128.79301453 -32.99098206]
[119.01591492 -21.61520576]
[109.23881531 -10.23942947]
[110.07682037 3.06031251]
[100.41593170 13.50167656]
[85.29319000 13.73283768]
[89.23973083 28.20435524]
[93.18627167 42.67587280]
[97.13280487 57.14739227]
[101.07934570 71.61891174]
[105.02588654 86.09043121]
[115.49035645 96.83728027]
[129.85168457 101.16765594]
[144.21301270 105.49803925]
[158.57435608 109.82841492]
[177.94221497 104.31262207]
[190.60595703 118.90084076]
[205.11192322 122.71880341]
[219.61790466 126.53675842]
[234.12387085 130.35472107]
[248.65051270 123.54617310]
[262.96640015 130.78738403]
[266.08959961 146.52348328]
[255.62426758 158.68310547]
[239.59851074 157.93841553]
[230.30590820 144.86068726]
[215.79994202 141.04272461]
[201.29397583 137.22477722]
[186.78799438 133.40681458]
[178.42617798 139.34600830]
[167.95552063 139.69268799]
[158.84425354 134.08941650]
[154.24397278 124.18975067]
[139.88264465 119.85936737]
[125.52130890 115.52899170]
[111.15998077 111.19860840]
[104.69831848 115.00610352]
[115.22547913 125.69155884]
[128.18141174 133.25093079]
[131.31179810 147.92063904]
[122.57011414 160.11009216]
[107.67138672 161.85020447]
[96.35594940 152.00332642]
[96.02130890 137.00750732]
[91.77500916 122.62109375]
[85.31335449 126.42858124]
[82.14261627 141.08963013]
[78.97187805 155.75068665]
[75.80113983 170.41174316]
[72.63040161 185.07278442]
[69.45965576 199.73384094]
[66.28891754 214.39488220]
[63.11817932 229.05593872]
[74.16849518 235.50546265]
[82.94058990 244.79510498]
[88.73049164 256.16464233]
[91.07771301 268.68750000]
[89.80185699 281.34637451]
[85.01644135 293.11575317]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 12]
[4 11]
[19 170]
[20 169]
[21 168]
[22 167]
[23 166]
[24 165]
[25 164]
[26 163]
[34 128]
[35 127]
[36 126]
[37 125]
[38 124]
[39 123]
[40 94]
[41 93]
[43 91]
[44 90]
[46 88]
[47 87]
[48 86]
[52 82]
[53 81]
[54 80]
[55 79]
[56 78]
[57 77]
[58 76]
[59 75]
[60 74]
[97 120]
[98 119]
[99 118]
[100 117]
[101 116]
[103 112]
[104 111]
[129 153]
[130 152]
[131 151]
[132 150]
[134 146]
[135 145]
[136 144]
[137 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
