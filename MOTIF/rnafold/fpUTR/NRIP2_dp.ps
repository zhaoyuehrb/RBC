%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:28:46 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NRIP2)
} def

/sequence { (\
GUUUUUCCAGCCGGAGUCUCACUCCCUCUACAGCAAUCUCGGGAAAUUGGAGACUGACGCGGCUGCUCCUGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 58 0.008643996 ubox
1 66 0.043798927 ubox
1 72 0.455786583 ubox
2 57 0.008625694 ubox
2 65 0.024241835 ubox
2 71 0.457049492 ubox
3 56 0.008104904 ubox
4 53 0.007695752 ubox
5 52 0.008217257 ubox
6 15 0.006314315 ubox
6 51 0.008419214 ubox
7 14 0.010806637 ubox
7 50 0.008447565 ubox
7 62 0.015692245 ubox
8 13 0.010808079 ubox
8 49 0.008447306 ubox
8 61 0.015803274 ubox
8 65 0.984992515 ubox
8 71 0.004814294 ubox
9 29 0.003979319 ubox
9 48 0.008284824 ubox
9 64 0.998126839 ubox
9 70 0.003811652 ubox
10 28 0.004152740 ubox
10 47 0.007640332 ubox
10 60 0.017226922 ubox
10 63 0.999682883 ubox
10 72 0.004785723 ubox
11 43 0.007374880 ubox
11 59 0.016623536 ubox
11 62 0.999685208 ubox
11 71 0.004809809 ubox
12 42 0.007375690 ubox
12 59 0.048293448 ubox
12 61 0.998390930 ubox
13 25 0.073459928 ubox
13 26 0.006011901 ubox
13 29 0.003251580 ubox
13 58 0.110418810 ubox
13 60 0.962554533 ubox
13 69 0.004921284 ubox
14 24 0.079217664 ubox
14 25 0.004504625 ubox
14 28 0.007323451 ubox
14 40 0.007144768 ubox
14 54 0.005273204 ubox
14 68 0.004917056 ubox
15 23 0.079358326 ubox
15 27 0.007334373 ubox
15 39 0.007169302 ubox
15 55 0.825777866 ubox
15 67 0.003877169 ubox
16 22 0.079317185 ubox
16 26 0.007295892 ubox
16 38 0.007159010 ubox
16 54 0.978328390 ubox
16 58 0.185974021 ubox
17 21 0.071456689 ubox
17 51 0.006240516 ubox
17 53 0.979084147 ubox
17 57 0.185746066 ubox
18 50 0.006471245 ubox
18 52 0.979281311 ubox
18 56 0.185292300 ubox
19 49 0.004929300 ubox
19 50 0.121985807 ubox
19 51 0.971706954 ubox
19 53 0.010503715 ubox
19 57 0.007275603 ubox
20 49 0.276457984 ubox
20 50 0.939381650 ubox
20 52 0.010565223 ubox
20 56 0.007872593 ubox
21 48 0.366390113 ubox
21 55 0.007999998 ubox
22 33 0.007206438 ubox
22 43 0.004310566 ubox
22 50 0.011765204 ubox
22 52 0.181621397 ubox
23 32 0.007143366 ubox
23 42 0.003752035 ubox
23 43 0.012582098 ubox
23 44 0.959622763 ubox
23 49 0.009002406 ubox
23 51 0.182143888 ubox
23 53 0.006965368 ubox
24 41 0.003722687 ubox
24 42 0.014128328 ubox
24 43 0.976513671 ubox
24 50 0.181850343 ubox
24 52 0.007041870 ubox
25 41 0.014300280 ubox
25 42 0.976538818 ubox
25 43 0.047268729 ubox
25 49 0.180948250 ubox
25 50 0.012794607 ubox
26 33 0.019706107 ubox
26 41 0.975409781 ubox
26 42 0.048746513 ubox
26 43 0.138145630 ubox
26 49 0.016510001 ubox
26 52 0.007534183 ubox
27 32 0.023083718 ubox
27 41 0.043386284 ubox
27 42 0.137535591 ubox
27 43 0.033048873 ubox
27 44 0.111292616 ubox
27 51 0.007643294 ubox
28 41 0.138557622 ubox
28 42 0.038536169 ubox
28 43 0.114089222 ubox
28 50 0.007656296 ubox
29 41 0.037597410 ubox
29 42 0.110166821 ubox
29 49 0.007259344 ubox
30 48 0.006839233 ubox
31 49 0.003673582 ubox
31 56 0.053904613 ubox
31 65 0.004501525 ubox
32 39 0.153628610 ubox
32 48 0.005069620 ubox
32 55 0.054259123 ubox
32 64 0.004628353 ubox
33 38 0.159305149 ubox
33 47 0.004421159 ubox
33 54 0.054217969 ubox
33 60 0.018280157 ubox
33 63 0.004634950 ubox
34 49 0.010626768 ubox
34 56 0.051815835 ubox
34 59 0.017903448 ubox
34 62 0.004626160 ubox
35 48 0.015517963 ubox
35 55 0.051919626 ubox
36 47 0.015572239 ubox
37 44 0.011465885 ubox
37 46 0.014974008 ubox
37 51 0.006256327 ubox
37 53 0.078184481 ubox
38 42 0.003427921 ubox
38 43 0.011864584 ubox
38 50 0.006265652 ubox
38 52 0.079401226 ubox
39 50 0.003448550 ubox
39 51 0.079331690 ubox
39 57 0.006879284 ubox
40 49 0.009909461 ubox
40 50 0.079049240 ubox
40 56 0.007178871 ubox
41 48 0.012045924 ubox
41 55 0.007183446 ubox
42 47 0.012151081 ubox
42 48 0.065810466 ubox
42 54 0.007186319 ubox
43 47 0.043063506 ubox
56 60 0.005989949 ubox
59 66 0.005724184 ubox
59 72 0.014272286 ubox
60 65 0.005723244 ubox
60 71 0.014401337 ubox
61 69 0.004065377 ubox
61 70 0.014161683 ubox
62 68 0.004062353 ubox
62 69 0.014025643 ubox
62 72 0.003270684 ubox
63 71 0.003457600 ubox
65 72 0.111913073 ubox
66 71 0.167168764 ubox
8 65 0.9500000 lbox
9 64 0.9500000 lbox
10 63 0.9500000 lbox
11 62 0.9500000 lbox
12 61 0.9500000 lbox
13 60 0.9500000 lbox
15 55 0.9500000 lbox
16 54 0.9500000 lbox
17 53 0.9500000 lbox
18 52 0.9500000 lbox
19 51 0.9500000 lbox
20 50 0.9500000 lbox
23 44 0.9500000 lbox
24 43 0.9500000 lbox
25 42 0.9500000 lbox
26 41 0.9500000 lbox
showpage
end
%%EOF
