%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:59:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCAGACUUGGGUGGCUCUGCGCCGCGGAGGCCACAGCCGCAGACUUCCCCAGUAGUACCGCGCCGCUCCGCCCCGGAGUGACGCCCUCCGCCCAUGGGCCUGGCCGAGGGCAACCGGCGGGCGGCGCGGAGGAGGCGGCGACAGGUGGCGCGCAGCAGGGCCGGAGCCGGGCCGGGCC\
) } def
/len { sequence length } bind def

/coor [
[69.23094940 958.92419434]
[75.27729034 943.08502197]
[75.27729034 928.08502197]
[61.70163727 918.87860107]
[56.22411728 903.24127197]
[61.18598938 887.25878906]
[74.82425690 877.27673340]
[74.56246948 862.27899170]
[74.30068207 847.28125000]
[74.03890228 832.28356934]
[73.77711487 817.28582764]
[62.61751175 801.51489258]
[72.58599091 784.01483154]
[71.80095673 769.03533936]
[71.01591492 754.05590820]
[70.23087311 739.07647705]
[69.44583893 724.09704590]
[68.66079712 709.11761475]
[67.87575531 694.13812256]
[67.09071350 679.15869141]
[66.30567932 664.17926025]
[55.09945679 654.43469238]
[54.08992767 639.25463867]
[64.38688660 627.56658936]
[63.60184860 612.58715820]
[62.81681061 597.60766602]
[62.03176880 582.62823486]
[51.33271408 575.41857910]
[46.67835617 563.17730713]
[49.98137665 550.30328369]
[60.25077820 541.56219482]
[59.72728729 526.57135010]
[59.20379257 511.58047485]
[45.31511307 502.85345459]
[39.29519272 487.41677856]
[43.69625854 471.27087402]
[56.97785187 460.81890869]
[56.19281006 445.83944702]
[55.40777206 430.86001587]
[54.62273407 415.88058472]
[53.83769226 400.90112305]
[51.81702042 398.91998291]
[50.47077179 396.00793457]
[50.16165161 392.42202759]
[51.15114212 388.54711914]
[53.55763626 384.85659790]
[53.81941986 369.85888672]
[54.08120728 354.86114502]
[54.34299469 339.86343384]
[43.84111404 350.57373047]
[29.30757332 354.28536987]
[14.95617676 349.92218018]
[4.94792032 338.74923706]
[2.18456674 324.00598145]
[7.46731329 309.96701050]
[19.26449776 300.70275879]
[34.15568161 298.89926147]
[47.82336807 305.07940674]
[56.30399704 317.44906616]
[58.65051270 302.63372803]
[60.99703217 287.81842041]
[63.34354782 273.00308228]
[65.69006348 258.18777466]
[68.03658295 243.37243652]
[70.38310242 228.55711365]
[72.72961426 213.74179077]
[75.07613373 198.92646790]
[73.01120758 191.80813599]
[77.59505463 183.87397766]
[80.19977570 169.10185242]
[82.80450439 154.32974243]
[85.40922546 139.55761719]
[88.01394653 124.78550720]
[72.56430817 112.24588013]
[68.71689606 90.97949982]
[80.50222015 70.84880066]
[76.87339020 56.29436111]
[73.24456024 41.73992538]
[69.61573029 27.18548965]
[55.48239136 20.49350357]
[49.00416565 6.26091385]
[53.23987579 -8.79208469]
[66.18954468 -17.55792809]
[81.73874664 -15.89765072]
[92.54560852 -4.59518671]
[93.50746918 11.01278687]
[84.17016602 23.55666161]
[87.79899597 38.11109924]
[91.42782593 52.66553497]
[95.05665588 67.21997070]
[110.01041412 68.39685822]
[115.87137604 54.58928299]
[121.73234558 40.78171158]
[127.59331512 26.97413826]
[125.86325073 11.24780750]
[137.95840454 2.55549622]
[143.81938171 -11.25207615]
[149.68034363 -25.05964851]
[143.52832031 -39.61740112]
[149.54939270 -54.22979736]
[164.17137146 -60.22756958]
[178.71929932 -54.05234528]
[184.56213379 -39.36777115]
[178.23344421 -24.88594627]
[163.48791504 -19.19868279]
[157.62695312 -5.39110947]
[151.76599121 8.41646290]
[153.91526794 23.15518188]
[141.40087891 32.83510590]
[135.53991699 46.64267731]
[129.67895508 60.45024872]
[123.81798553 74.25782013]
[131.34617615 88.00476837]
[131.91580200 102.98475647]
[126.01068115 116.01804352]
[115.42766571 124.60231018]
[102.78606415 127.39022827]
[100.18134308 142.16233826]
[97.57661438 156.93446350]
[94.97189331 171.70657349]
[92.36717224 186.47869873]
[89.89145660 201.27297974]
[87.54494476 216.08830261]
[85.19842529 230.90362549]
[82.85190582 245.71894836]
[80.50539398 260.53427124]
[78.15887451 275.34960938]
[75.81235504 290.16491699]
[73.46584320 304.98025513]
[71.11932373 319.79559326]
[74.97288513 331.10684204]
[69.34070587 340.12524414]
[69.07892609 355.12295532]
[68.81713867 370.12066650]
[68.55535126 385.11837769]
[68.81713867 400.11608887]
[69.60217285 415.09552002]
[70.38721466 430.07498169]
[71.17225647 445.05441284]
[71.95729065 460.03387451]
[84.05636597 466.67013550]
[91.23325348 478.32955933]
[91.70082092 491.90438843]
[85.44377899 503.83807373]
[74.19465637 511.05697632]
[74.71814728 526.04785156]
[75.24163818 541.03869629]
[88.24713135 552.71807861]
[88.78539276 569.85223389]
[77.01121521 581.84320068]
[77.79624939 596.82263184]
[78.58129120 611.80206299]
[79.36633301 626.78155518]
[90.82861328 637.32922363]
[91.41136932 652.53167725]
[81.28511810 663.39422607]
[82.07015991 678.37365723]
[82.85520172 693.35308838]
[83.64023590 708.33258057]
[84.42527771 723.31201172]
[85.21031952 738.29144287]
[85.99535370 753.27087402]
[86.78039551 768.25030518]
[87.56543732 783.22979736]
[96.08148193 790.05285645]
[99.35408020 800.23205566]
[96.52818298 810.31591797]
[88.77482605 817.02404785]
[89.03661346 832.02178955]
[89.29840088 847.01947021]
[89.56018829 862.01721191]
[89.82197571 877.01489258]
[101.68207550 884.06939697]
[108.44767761 895.97216797]
[108.44120789 909.55505371]
[101.77149963 921.26312256]
[90.27729034 928.08502197]
[90.27729034 943.08502197]
[96.32363129 958.92419434]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 178]
[3 177]
[7 172]
[8 171]
[9 170]
[10 169]
[11 168]
[13 164]
[14 163]
[15 162]
[16 161]
[17 160]
[18 159]
[19 158]
[20 157]
[21 156]
[24 153]
[25 152]
[26 151]
[27 150]
[31 147]
[32 146]
[33 145]
[37 140]
[38 139]
[39 138]
[40 137]
[41 136]
[46 135]
[47 134]
[48 133]
[49 132]
[59 130]
[60 129]
[61 128]
[62 127]
[63 126]
[64 125]
[65 124]
[66 123]
[67 122]
[69 121]
[70 120]
[71 119]
[72 118]
[73 117]
[76 90]
[77 89]
[78 88]
[79 87]
[91 112]
[92 111]
[93 110]
[94 109]
[96 107]
[97 106]
[98 105]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
