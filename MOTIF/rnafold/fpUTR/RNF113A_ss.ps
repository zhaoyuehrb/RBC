%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:39:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCCGCCCGCGAGCGGGGCGGUGCCACGUACGGCUCCGGAAGAAGCGACGGAAUCUGCUAGGGCACAAGAGAGACGGGCGCUCGGGCUCUCGCAGUCCUCUUCCGUCAGUGUCUUUUGCUUCGACUCCCGGCGGAGCGCGCAACGUGGAGUGACGUGCAGGGGCCAAGUGCAACCCAGGCAGCCACGGCUGUUUCGGAGCUCAGGACUCUAAA\
) } def
/len { sequence length } bind def

/coor [
[-59.42837143 583.09918213]
[-65.16862488 596.95739746]
[-70.90887451 610.81561279]
[-71.30117035 619.93774414]
[-76.83470917 624.83264160]
[-82.77590179 638.60583496]
[-88.71710205 652.37908936]
[-94.65829468 666.15234375]
[-100.59949493 679.92559814]
[-106.54068756 693.69885254]
[-99.36133575 707.59094238]
[-102.84173584 722.83630371]
[-115.33853912 732.23651123]
[-130.95115662 731.35308838]
[-142.30776978 720.60308838]
[-144.04614258 705.06243896]
[-135.34545898 692.06890869]
[-120.31392670 687.75762939]
[-114.37273407 673.98437500]
[-108.43153381 660.21112061]
[-102.49034119 646.43792725]
[-96.54914093 632.66467285]
[-90.60794830 618.89141846]
[-84.76706696 605.07531738]
[-79.02681732 591.21716309]
[-73.28656769 577.35894775]
[-87.57524109 565.27734375]
[-96.91127777 549.03521729]
[-100.16726685 530.56347656]
[-96.93962860 512.06414795]
[-87.59862518 495.74765015]
[-73.24589539 483.56890869]
[-55.58458710 476.99301147]
[-36.71726608 476.81906128]
[-32.20668030 462.51330566]
[-27.69609261 448.20755005]
[-23.18550682 433.90179443]
[-18.67491913 419.59603882]
[-14.16433239 405.29028320]
[-9.65374565 390.98452759]
[-5.14315844 376.67877197]
[-0.63257122 362.37301636]
[3.87801576 348.06726074]
[-1.42709792 337.19873047]
[2.21081257 325.24508667]
[13.36378670 318.77127075]
[18.08195877 304.53262329]
[22.80012894 290.29397583]
[13.97992420 278.32144165]
[13.89998627 263.27291870]
[22.80054665 250.91844177]
[37.43834686 246.11833191]
[42.15651703 231.87969971]
[40.91206360 228.58444214]
[41.19958115 224.52326965]
[43.36145020 220.42173767]
[47.40353775 217.13078308]
[52.73829651 203.11149597]
[58.07305908 189.09220886]
[63.40782166 175.07292175]
[68.74258423 161.05364990]
[66.03762054 146.40672302]
[78.17708588 136.26058960]
[83.51184845 122.24131012]
[88.84661102 108.22202301]
[76.83339691 117.20437622]
[62.34336853 121.08240509]
[47.44948578 119.30130768]
[34.28248978 112.11589050]
[24.72606277 100.55411530]
[20.14735794 86.27001953]
[21.20141411 71.30709839]
[27.73743439 57.80596924]
[38.82036591 47.69812393]
[52.86467743 42.42959595]
[67.86116791 42.75411224]
[81.66442108 48.62524414]
[92.29972839 59.20306015]
[98.24559021 72.97428894]
[98.65109253 87.97055054]
[106.33923340 75.09062195]
[114.02736664 62.21069717]
[121.71550751 49.33076859]
[129.40364075 36.45084000]
[127.00934601 23.77935028]
[133.67494202 13.21084785]
[145.36705017 10.11825943]
[153.24169922 -2.64849067]
[161.11634827 -15.41524029]
[168.99099731 -28.18199158]
[176.86564636 -40.94874191]
[184.74029541 -53.71549225]
[185.39971924 -69.52294922]
[198.66658020 -76.29344177]
[206.54122925 -89.06018829]
[214.41587830 -101.82694244]
[222.19747925 -114.65061951]
[229.88562012 -127.53054810]
[237.57376099 -140.41047668]
[245.16802979 -153.34597778]
[252.66802979 -166.33634949]
[260.16802979 -179.32673645]
[267.66802979 -192.31710815]
[265.08969116 -204.95243835]
[271.60086060 -215.61677551]
[283.24676514 -218.87907410]
[290.93490601 -231.75900269]
[298.62304688 -244.63893127]
[296.22872925 -257.31042480]
[302.89434814 -267.87893677]
[314.58645630 -270.97152710]
[322.46109009 -283.73828125]
[330.33575439 -296.50500488]
[338.21038818 -309.27175903]
[323.23672485 -308.38345337]
[313.09558105 -319.43591309]
[315.26596069 -334.27804565]
[328.14724731 -341.96392822]
[342.23959351 -336.82522583]
[347.14984131 -322.65060425]
[355.93130493 -334.81146240]
[364.71273804 -346.97229004]
[373.49417114 -359.13314819]
[382.27560425 -371.29400635]
[391.05706787 -383.45486450]
[386.09133911 -398.15591431]
[390.74719238 -412.95803833]
[403.23431396 -422.16949463]
[418.75119019 -422.24829102]
[431.33126831 -413.16415405]
[436.13720703 -398.41009521]
[431.32104492 -383.65933228]
[418.73471069 -374.58389282]
[403.21789551 -374.67340088]
[394.43646240 -362.51257324]
[385.65502930 -350.35171509]
[376.87359619 -338.19085693]
[368.09213257 -326.02999878]
[359.31069946 -313.86917114]
[350.97714233 -301.39712524]
[343.10250854 -288.63037109]
[335.22784424 -275.86361694]
[327.35321045 -263.09686279]
[327.78704834 -245.55165100]
[311.50296021 -236.95080566]
[303.81481934 -224.07087708]
[296.12670898 -211.19094849]
[296.81567383 -193.65388489]
[280.65841675 -184.81710815]
[273.15841675 -171.82673645]
[265.65841675 -158.83634949]
[258.15841675 -145.84597778]
[257.53649902 -138.48437500]
[250.45368958 -132.72233582]
[242.76554871 -119.84240723]
[235.07740784 -106.96247864]
[234.34851074 -99.61071014]
[227.18263245 -93.95229340]
[219.30798340 -81.18553925]
[211.43333435 -68.41879272]
[211.33715820 -53.52449799]
[197.50704956 -45.84084320]
[189.63240051 -33.07409286]
[181.75775146 -20.30734253]
[173.88310242 -7.54059219]
[166.00845337 5.22615814]
[158.13380432 17.99290848]
[158.56764221 35.53813171]
[142.28356934 44.13897705]
[134.59542847 57.01890564]
[126.90729523 69.89883423]
[119.21916199 82.77876282]
[111.53102112 95.65869141]
[112.53990936 102.72663879]
[109.40882874 109.46329498]
[102.86589813 113.55678558]
[97.53113556 127.57606506]
[92.19637299 141.59535217]
[94.51976013 157.24502563]
[82.76186371 166.38839722]
[77.42710114 180.40768433]
[72.09234619 194.42697144]
[66.75758362 208.44625854]
[61.42282104 222.46554565]
[56.39515686 236.59786987]
[51.67698669 250.83650208]
[60.55188370 263.42785645]
[60.31363678 278.65274048]
[51.26317215 290.67575073]
[37.03876877 295.01214600]
[32.32059860 309.25079346]
[27.60242653 323.48944092]
[31.74241638 341.43395996]
[18.18376923 352.57785034]
[13.67318344 366.88360596]
[9.16259575 381.18936157]
[4.65200901 395.49511719]
[0.14142206 409.80087280]
[-4.36916494 424.10662842]
[-8.87975216 438.41238403]
[-13.39033890 452.71813965]
[-17.90092659 467.02389526]
[-22.41151237 481.32962036]
[-12.61913013 487.35684204]
[-4.31085348 495.29479980]
[2.14748621 504.78955078]
[6.47245741 515.41864014]
[8.47546768 526.70983887]
[8.07098103 538.16241455]
[5.28017187 549.26910400]
[0.22983509 559.53863525]
[-6.85336447 568.51751709]
[-15.65306664 575.80987549]
[-25.77734566 581.09521484]
[-36.77616119 584.14227295]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 26]
[2 25]
[3 24]
[5 23]
[6 22]
[7 21]
[8 20]
[9 19]
[10 18]
[34 203]
[35 202]
[36 201]
[37 200]
[38 199]
[39 198]
[40 197]
[41 196]
[42 195]
[43 194]
[46 192]
[47 191]
[48 190]
[52 186]
[53 185]
[57 184]
[58 183]
[59 182]
[60 181]
[61 180]
[63 178]
[64 177]
[65 176]
[80 173]
[81 172]
[82 171]
[83 170]
[84 169]
[87 167]
[88 166]
[89 165]
[90 164]
[91 163]
[92 162]
[94 160]
[95 159]
[96 158]
[97 156]
[98 155]
[99 154]
[100 152]
[101 151]
[102 150]
[103 149]
[106 147]
[107 146]
[108 145]
[111 143]
[112 142]
[113 141]
[114 140]
[120 139]
[121 138]
[122 137]
[123 136]
[124 135]
[125 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
