%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:25:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCGCGCUCGUACGUGCGCCUCCGCCGGCAGCUCCUGACUCAUCGGGGGCUCCGGGUCACAUGCGCCCGCGCGGCCCUAUAGGCGCCUCCUCCGCCCGCCGCCCGGGAGCCGCAGCCGCCGCCGCCACUGCCACUCCCGCUCUCUCAGCGCCGCCGUCGCCACCGCCACCGCCACCGCCACUACCACCGUCUGAGUCUGCAGUCCCGAGAUCCCAGCCAUC\
) } def
/len { sequence length } bind def

/coor [
[66.84799194 264.40750122]
[59.62627411 251.14012146]
[56.43628693 236.37527466]
[57.53662872 221.30989075]
[62.83810043 207.16523743]
[71.91094208 195.08798218]
[84.01964569 186.05714417]
[98.18262482 180.80484009]
[97.12690735 165.84204102]
[96.07118988 150.87924194]
[95.01547241 135.91642761]
[85.31548309 133.15419006]
[76.75153351 127.82704163]
[69.98615265 120.34710693]
[56.09783173 126.01406860]
[46.24354553 138.39161682]
[31.53638077 136.03607178]
[17.64805603 141.70301819]
[3.75973034 147.36997986]
[-10.12859440 153.03694153]
[-10.86315823 170.20112610]
[-19.00411224 185.26675415]
[-32.86912537 195.22244263]
[-49.63732147 198.10231018]
[-65.92314148 193.37408447]
[-78.45989227 182.03660583]
[-92.18305969 188.09257507]
[-105.90621948 194.14854431]
[-119.62937927 200.20452881]
[-126.20999908 206.52668762]
[-133.58879089 206.24763489]
[-147.39590454 212.10968018]
[-161.20301819 217.97172546]
[-175.01013184 223.83377075]
[-188.81724548 229.69581604]
[-202.62435913 235.55787659]
[-216.43147278 241.41992188]
[-230.23858643 247.28196716]
[-244.04570007 253.14401245]
[-253.47639465 266.56018066]
[-269.78421021 264.83175659]
[-276.19305420 249.73675537]
[-266.11004639 236.80364990]
[-249.90774536 239.33689880]
[-236.10063171 233.47485352]
[-222.29351807 227.61280823]
[-208.48640442 221.75076294]
[-194.67929077 215.88870239]
[-180.87217712 210.02665710]
[-167.06506348 204.16461182]
[-153.25794983 198.30256653]
[-139.45083618 192.44052124]
[-125.68535614 186.48135376]
[-111.96218872 180.42538452]
[-98.23902893 174.36941528]
[-84.51586914 168.31344604]
[-85.14595795 155.34791565]
[-81.32566833 142.90858459]
[-73.48845673 132.48065186]
[-62.54872131 125.31690216]
[-49.79515457 122.28711700]
[-36.73895645 123.77259064]
[-24.93476868 129.61827087]
[-15.79555416 139.14862061]
[-1.90722930 133.48165894]
[11.98109531 127.81469727]
[25.86942101 122.14773560]
[34.73031998 110.17553711]
[50.43087006 112.12574005]
[64.31919861 106.45878601]
[64.89894867 90.90319824]
[71.94750977 77.02407074]
[62.55979919 65.32488251]
[53.17209244 53.62569809]
[43.78438568 41.92651367]
[34.39667892 30.22732735]
[26.95839691 31.09741020]
[19.74449730 29.35654259]
[13.63476944 25.26542091]
[9.35753250 19.36833000]
[7.40292358 12.42113018]
[7.96705818 5.29450989]
[10.93338394 -1.13511205]
[2.39235735 -13.46600246]
[-6.14866924 -25.79689407]
[-14.68969631 -38.12778473]
[-30.27628136 -39.38966370]
[-41.36880112 -50.41191483]
[-42.72970581 -65.99016571]
[-33.71641541 -78.76884460]
[-18.58473396 -82.71424866]
[-4.47937632 -75.96347809]
[1.93953824 -61.70404434]
[-2.35880518 -46.66881180]
[6.18222141 -34.33792114]
[14.72324848 -22.00702858]
[23.26427460 -9.67613888]
[44.46940994 -2.30044460]
[46.09586334 20.83962059]
[55.48357010 32.53880692]
[64.87127686 44.23799133]
[74.25898743 55.93717575]
[83.64669800 67.63636017]
[94.51148987 62.54967117]
[106.93832397 61.17500687]
[119.64192200 63.97723770]
[124.21684265 49.69192886]
[128.79176331 35.40662003]
[133.36668396 21.12130737]
[137.94160461 6.83599710]
[130.96168518 -7.08946037]
[135.80479431 -21.51162529]
[149.12361145 -28.08010101]
[153.69853210 -42.36540985]
[158.27345276 -56.65072250]
[162.84837341 -70.93603516]
[155.86843872 -84.86148834]
[160.71156311 -99.28365326]
[174.03038025 -105.85213470]
[178.60530090 -120.13744354]
[174.60107422 -136.04022217]
[186.55796814 -147.26361084]
[202.17576599 -142.26194763]
[205.38821411 -126.18052673]
[192.89060974 -115.56252289]
[188.31568909 -101.27720642]
[195.34082031 -88.19351196]
[190.90469360 -73.64100647]
[177.13368225 -66.36111450]
[172.55876160 -52.07580185]
[167.98384094 -37.79048920]
[163.40892029 -23.50518036]
[170.43405151 -10.42148399]
[165.99792480 4.13102341]
[152.22691345 11.41091824]
[147.65199280 25.69622803]
[143.07707214 39.98154068]
[138.50215149 54.26684952]
[133.92723083 68.55216217]
[142.20579529 81.06076813]
[157.14294434 82.43241882]
[167.39779663 70.93701172]
[182.28120422 67.72177887]
[196.04121399 73.81488037]
[203.48576355 86.68798065]
[218.42291260 88.05963135]
[233.36006165 89.43127441]
[248.29722595 90.80292511]
[263.23437500 92.17456818]
[278.18081665 93.44097137]
[293.13580322 94.60205841]
[301.19863892 80.46492004]
[314.57275391 71.29378510]
[330.55038452 68.88391113]
[345.92333984 73.66780853]
[357.62731934 84.63871002]
[363.35247803 99.56189728]
[378.32235718 100.51219177]
[392.58496094 93.66471863]
[404.79650879 102.19277954]
[419.76635742 103.14307404]
[428.32315063 90.46519470]
[441.98663330 83.81642151]
[457.04348755 84.89231110]
[469.45712280 93.30404663]
[475.94989014 106.70963287]
[490.91973877 107.65992737]
[505.36447144 99.89573669]
[519.16656494 108.75205994]
[518.12762451 125.11826324]
[503.31643677 132.15820312]
[489.96945190 122.62979126]
[474.99960327 121.67949677]
[466.86380005 134.15646362]
[453.48611450 140.93095398]
[438.41409302 140.09423828]
[425.70104980 131.77107239]
[418.81607056 118.11294556]
[403.84619141 117.16265106]
[390.65432739 124.07810211]
[377.37203979 115.48206329]
[362.40219116 114.53176880]
[356.20874023 126.94076538]
[345.72149658 136.08200073]
[332.50115967 140.55128479]
[318.53201294 139.64299011]
[305.92398071 133.46121216]
[296.59405518 122.90912628]
[291.97473145 109.55705261]
[277.01974487 108.39596558]
[270.11376953 111.00976562]
[261.86273193 107.11172485]
[246.92558289 105.74008179]
[231.98841858 104.36843109]
[217.05126953 102.99678040]
[202.11410522 101.62513733]
[192.44961548 112.92715454]
[177.81004333 116.41237640]
[163.76110840 110.54034424]
[155.77130127 97.36957550]
[140.83415222 95.99792480]
[139.87466431 105.37228394]
[136.83428955 114.09806824]
[131.95710754 121.73008728]
[125.57836914 127.89978027]
[118.10252380 132.33279419]
[109.97827911 134.86071777]
[111.03399658 149.82351685]
[112.08971405 164.78631592]
[113.14542389 179.74913025]
[127.90558624 182.96072388]
[141.16238403 190.20187378]
[151.84114075 200.88554382]
[159.07618713 214.14566040]
[162.28100586 228.90730286]
[161.19578552 243.97378540]
[155.90852356 258.12374878]
[146.84782410 270.21011353]
[134.74819946 279.25311279]
[120.59050751 284.51965332]
[105.52244568 285.58279419]
[90.76552582 282.35635376]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 210]
[9 209]
[10 208]
[11 207]
[14 70]
[15 69]
[17 67]
[18 66]
[19 65]
[20 64]
[26 56]
[27 55]
[28 54]
[29 53]
[31 52]
[32 51]
[33 50]
[34 49]
[35 48]
[36 47]
[37 46]
[38 45]
[39 44]
[72 103]
[73 102]
[74 101]
[75 100]
[76 99]
[83 97]
[84 96]
[85 95]
[86 94]
[106 139]
[107 138]
[108 137]
[109 136]
[110 135]
[113 132]
[114 131]
[115 130]
[116 129]
[119 126]
[120 125]
[140 201]
[141 200]
[145 196]
[146 195]
[147 194]
[148 193]
[149 192]
[150 190]
[151 189]
[157 182]
[158 181]
[160 179]
[161 178]
[166 173]
[167 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
