%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:14:21 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PDCD6IP)
} def

/sequence { (\
GCUGGAGCUCCCGGAAGUUGCCGGACCCGGAACGCAGGCGGAGCGCAAGUCUGUCAGCCAGUCAGUCCGCCAGUCCGCCAGCCCAGUACCUCUCUCUCCUCGGCCCUCGUAAGCUGUCCGCGGUCUGUUUGGCCCGAACGGCGGCGGAGGCGCUGAUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 82 0.009521353 ubox
1 87 0.964097418 ubox
2 14 0.003994405 ubox
2 81 0.009552369 ubox
2 86 0.999383200 ubox
3 13 0.004009856 ubox
3 80 0.009550476 ubox
3 85 0.999591207 ubox
4 12 0.004080998 ubox
4 79 0.009552305 ubox
4 84 0.999903197 ubox
4 99 0.005845077 ubox
5 11 0.004070965 ubox
5 78 0.009532207 ubox
5 83 0.999786950 ubox
5 92 0.003465666 ubox
5 98 0.005854582 ubox
6 91 0.003468308 ubox
6 97 0.005846250 ubox
7 82 0.999752968 ubox
7 90 0.003432975 ubox
7 96 0.005690006 ubox
8 81 0.999817981 ubox
9 80 0.985843592 ubox
10 24 0.003613361 ubox
11 24 0.039691067 ubox
11 30 0.017246330 ubox
12 23 0.039878852 ubox
12 29 0.017340452 ubox
12 77 0.996030589 ubox
13 22 0.040018726 ubox
13 28 0.017394986 ubox
13 76 0.998868123 ubox
13 79 0.012444883 ubox
13 84 0.004851816 ubox
13 90 0.004463095 ubox
14 21 0.039910072 ubox
14 27 0.017309458 ubox
14 75 0.998844850 ubox
14 78 0.012434264 ubox
14 83 0.004833526 ubox
14 89 0.004462913 ubox
15 74 0.973258020 ubox
17 26 0.016532970 ubox
17 33 0.057415099 ubox
17 35 0.008189844 ubox
17 70 0.016271004 ubox
17 74 0.059352828 ubox
17 82 0.009594266 ubox
18 25 0.016661732 ubox
18 32 0.057464168 ubox
18 34 0.007454791 ubox
18 69 0.009936783 ubox
18 73 0.769245695 ubox
18 81 0.009630543 ubox
19 24 0.016353206 ubox
19 31 0.057064850 ubox
19 36 0.004089541 ubox
19 72 0.914965941 ubox
19 80 0.010117868 ubox
20 35 0.004418792 ubox
20 70 0.341491039 ubox
20 71 0.923383513 ubox
20 74 0.005953311 ubox
20 79 0.010544659 ubox
21 30 0.059679424 ubox
21 34 0.003379565 ubox
21 69 0.246094454 ubox
21 73 0.008091903 ubox
22 29 0.059785694 ubox
22 69 0.964293165 ubox
22 77 0.012619966 ubox
23 28 0.058963331 ubox
23 67 0.003614506 ubox
23 68 0.997079638 ubox
23 76 0.012951897 ubox
24 63 0.007235327 ubox
24 67 0.997123754 ubox
24 75 0.012964588 ubox
25 62 0.008659525 ubox
25 66 0.996843602 ubox
25 74 0.012976658 ubox
26 61 0.010277158 ubox
26 65 0.993724354 ubox
26 73 0.012967103 ubox
27 41 0.003584987 ubox
28 34 0.007072153 ubox
28 40 0.003595364 ubox
28 69 0.013320325 ubox
28 77 0.034002162 ubox
29 33 0.009582461 ubox
29 39 0.003588265 ubox
29 59 0.249605934 ubox
29 63 0.690702759 ubox
29 68 0.013386811 ubox
29 76 0.035247961 ubox
29 79 0.013064312 ubox
30 58 0.249516616 ubox
30 62 0.679469172 ubox
30 63 0.539096195 ubox
30 67 0.013386111 ubox
30 75 0.035246959 ubox
30 78 0.013072313 ubox
31 62 0.494281538 ubox
31 66 0.012634636 ubox
31 74 0.028188410 ubox
32 62 0.214500213 ubox
32 66 0.004128202 ubox
32 74 0.017988381 ubox
33 61 0.286277591 ubox
33 65 0.005836397 ubox
33 73 0.025400841 ubox
34 54 0.246457278 ubox
34 58 0.955756167 ubox
34 62 0.017693777 ubox
34 74 0.027268876 ubox
34 82 0.006559283 ubox
35 49 0.003243944 ubox
35 53 0.250524819 ubox
35 57 0.957036606 ubox
35 61 0.020968579 ubox
35 73 0.034325371 ubox
35 81 0.006565331 ubox
36 52 0.250531332 ubox
37 51 0.250576056 ubox
37 55 0.957239868 ubox
37 59 0.039884643 ubox
37 71 0.070523386 ubox
37 79 0.022024916 ubox
38 46 0.022012675 ubox
38 50 0.249519557 ubox
38 54 0.963955088 ubox
38 58 0.039960645 ubox
38 70 0.070627464 ubox
38 78 0.022051357 ubox
39 45 0.022236743 ubox
39 49 0.249536017 ubox
39 53 0.964364029 ubox
39 57 0.039798891 ubox
39 69 0.070626798 ubox
39 77 0.022051789 ubox
40 44 0.021324691 ubox
40 51 0.005980471 ubox
40 52 0.963617511 ubox
40 55 0.011733768 ubox
40 68 0.070626323 ubox
40 76 0.022051657 ubox
41 50 0.004761126 ubox
41 51 0.964046782 ubox
41 54 0.010650906 ubox
41 55 0.028932323 ubox
41 67 0.070619944 ubox
41 75 0.022051121 ubox
42 50 0.879167204 ubox
42 52 0.016813153 ubox
42 54 0.026652718 ubox
42 66 0.066651145 ubox
42 74 0.021809562 ubox
43 50 0.383594163 ubox
43 51 0.017530443 ubox
43 54 0.019305145 ubox
43 58 0.019721122 ubox
43 62 0.014270995 ubox
43 66 0.020012108 ubox
43 70 0.019521115 ubox
44 49 0.732372842 ubox
44 53 0.025353472 ubox
44 57 0.019682784 ubox
44 61 0.014302761 ubox
44 65 0.038250047 ubox
44 69 0.019530780 ubox
45 52 0.019397369 ubox
45 54 0.021438724 ubox
45 58 0.011327193 ubox
45 62 0.036656423 ubox
45 66 0.009276710 ubox
45 68 0.019289643 ubox
45 70 0.009040621 ubox
46 53 0.022633374 ubox
46 57 0.011355158 ubox
46 61 0.037947237 ubox
46 65 0.012812045 ubox
46 69 0.009055244 ubox
47 52 0.020408158 ubox
49 58 0.039588810 ubox
49 62 0.012569651 ubox
49 66 0.004629236 ubox
50 57 0.036613219 ubox
51 57 0.015044562 ubox
51 61 0.050567583 ubox
51 65 0.019283744 ubox
52 56 0.013664947 ubox
52 60 0.050685405 ubox
52 64 0.019341018 ubox
53 59 0.050541463 ubox
53 63 0.019326442 ubox
54 61 0.004729551 ubox
85 93 0.003554128 ubox
86 92 0.004481004 ubox
86 94 0.003506010 ubox
91 156 0.012341914 ubox
92 155 0.013038165 ubox
93 156 0.015560055 ubox
94 155 0.016464777 ubox
95 156 0.010273129 ubox
96 155 0.010329766 ubox
97 156 0.019243106 ubox
98 150 0.024201565 ubox
98 155 0.019289766 ubox
99 149 0.024320801 ubox
100 148 0.024319256 ubox
100 156 0.933901971 ubox
101 147 0.024296676 ubox
101 152 0.006885152 ubox
101 155 0.998293702 ubox
102 151 0.005049508 ubox
102 154 0.998664620 ubox
103 145 0.024357688 ubox
103 151 0.019395739 ubox
103 153 0.999487507 ubox
104 144 0.024332670 ubox
104 150 0.020218838 ubox
104 152 0.999382216 ubox
105 143 0.024279522 ubox
105 149 0.020489052 ubox
105 150 0.999289857 ubox
106 147 0.006635406 ubox
106 149 0.999391013 ubox
106 150 0.009545470 ubox
107 147 0.229515837 ubox
107 148 0.971863266 ubox
107 149 0.007385153 ubox
108 146 0.528843731 ubox
108 147 0.847787662 ubox
109 145 0.710620893 ubox
110 144 0.700344714 ubox
113 142 0.998648983 ubox
113 145 0.042933252 ubox
113 151 0.005418302 ubox
114 141 0.999013683 ubox
114 144 0.043317048 ubox
114 150 0.005420944 ubox
115 140 0.998259341 ubox
115 143 0.043294582 ubox
115 149 0.004877724 ubox
116 139 0.998826083 ubox
116 142 0.043312225 ubox
117 137 0.060155920 ubox
117 138 0.975087570 ubox
117 141 0.036518116 ubox
117 148 0.006477354 ubox
118 136 0.066107530 ubox
118 140 0.036179340 ubox
118 141 0.023267840 ubox
118 147 0.007393504 ubox
119 136 0.993154220 ubox
119 140 0.023403047 ubox
119 146 0.007704841 ubox
120 135 0.997217210 ubox
120 139 0.023095527 ubox
120 145 0.007707815 ubox
121 136 0.037292715 ubox
121 144 0.007704198 ubox
122 134 0.999315057 ubox
122 135 0.032259215 ubox
123 133 0.999628415 ubox
123 134 0.025744565 ubox
123 142 0.007682070 ubox
124 132 0.998576074 ubox
124 141 0.004329111 ubox
125 131 0.997672263 ubox
125 132 0.044612556 ubox
125 140 0.004235887 ubox
125 141 0.006377132 ubox
126 131 0.042060828 ubox
126 140 0.006433721 ubox
127 139 0.007712534 ubox
128 138 0.007710468 ubox
129 137 0.007705524 ubox
130 136 0.007681708 ubox
131 135 0.007320810 ubox
1 87 0.9500000 lbox
2 86 0.9500000 lbox
3 85 0.9500000 lbox
4 84 0.9500000 lbox
5 83 0.9500000 lbox
7 82 0.9500000 lbox
8 81 0.9500000 lbox
9 80 0.9500000 lbox
12 77 0.9500000 lbox
13 76 0.9500000 lbox
14 75 0.9500000 lbox
15 74 0.9500000 lbox
18 73 0.9500000 lbox
19 72 0.9500000 lbox
20 71 0.9500000 lbox
22 69 0.9500000 lbox
23 68 0.9500000 lbox
24 67 0.9500000 lbox
25 66 0.9500000 lbox
26 65 0.9500000 lbox
29 63 0.9500000 lbox
30 62 0.9500000 lbox
34 58 0.9500000 lbox
35 57 0.9500000 lbox
37 55 0.9500000 lbox
38 54 0.9500000 lbox
39 53 0.9500000 lbox
40 52 0.9500000 lbox
41 51 0.9500000 lbox
42 50 0.9500000 lbox
100 156 0.9500000 lbox
101 155 0.9500000 lbox
102 154 0.9500000 lbox
103 153 0.9500000 lbox
104 152 0.9500000 lbox
105 150 0.9500000 lbox
106 149 0.9500000 lbox
107 148 0.9500000 lbox
108 147 0.9500000 lbox
113 142 0.9500000 lbox
114 141 0.9500000 lbox
115 140 0.9500000 lbox
116 139 0.9500000 lbox
117 138 0.9500000 lbox
119 136 0.9500000 lbox
120 135 0.9500000 lbox
122 134 0.9500000 lbox
123 133 0.9500000 lbox
124 132 0.9500000 lbox
125 131 0.9500000 lbox
showpage
end
%%EOF
