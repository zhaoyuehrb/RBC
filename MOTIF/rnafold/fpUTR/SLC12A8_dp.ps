%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:56:28 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SLC12A8)
} def

/sequence { (\
AGCCACGUGGCGGCGGGGCGGGGACCGGGCGGGCCGGGCGCUGGGAGCUGGCUGUCCCAGGAGCAGAGCAGUCUCCCUGUCCAGAUCACCAGGAUCCCUGCUUGCUGGAGA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 106 0.008516326 ubox
2 8 0.024591775 ubox
2 11 0.906849268 ubox
2 14 0.030079039 ubox
2 19 0.003990404 ubox
2 105 0.008666979 ubox
3 7 0.025669755 ubox
3 10 0.964358559 ubox
3 13 0.030233820 ubox
3 17 0.012198341 ubox
3 18 0.004132442 ubox
3 104 0.008534415 ubox
3 108 0.032129231 ubox
4 9 0.963468707 ubox
4 12 0.030222837 ubox
4 16 0.012764513 ubox
4 17 0.004254494 ubox
4 107 0.031710409 ubox
5 106 0.023935965 ubox
6 12 0.006875088 ubox
6 15 0.021059371 ubox
6 107 0.003423264 ubox
7 11 0.006871672 ubox
7 14 0.021240297 ubox
7 105 0.006387447 ubox
8 13 0.020991653 ubox
8 104 0.006265191 ubox
8 107 0.006058651 ubox
9 102 0.003251570 ubox
9 103 0.003177186 ubox
9 106 0.013188970 ubox
10 101 0.003689531 ubox
10 105 0.016175705 ubox
11 100 0.003694750 ubox
11 104 0.016176644 ubox
11 107 0.414666114 ubox
12 99 0.003625172 ubox
12 103 0.013269948 ubox
12 106 0.955968835 ubox
13 98 0.003607119 ubox
13 102 0.004999948 ubox
13 105 0.995490516 ubox
14 104 0.994548931 ubox
14 107 0.072053721 ubox
15 102 0.004670219 ubox
15 103 0.843869519 ubox
15 106 0.072531068 ubox
16 82 0.003939785 ubox
16 102 0.685651570 ubox
16 103 0.486645208 ubox
16 105 0.071158976 ubox
17 81 0.003968293 ubox
17 101 0.486815243 ubox
17 102 0.716005850 ubox
17 103 0.010047444 ubox
18 80 0.004056140 ubox
18 101 0.873376703 ubox
19 79 0.004105579 ubox
19 100 0.998483163 ubox
20 78 0.004140697 ubox
20 98 0.028751266 ubox
20 99 0.998782340 ubox
21 77 0.004147632 ubox
21 97 0.028627924 ubox
21 98 0.999563450 ubox
22 76 0.004147581 ubox
22 96 0.028485825 ubox
22 97 0.999573974 ubox
23 75 0.004139974 ubox
23 95 0.025135233 ubox
23 96 0.999564821 ubox
24 74 0.003263431 ubox
24 95 0.996260416 ubox
25 37 0.011582668 ubox
25 93 0.998617558 ubox
26 36 0.011710728 ubox
26 92 0.995158336 ubox
27 35 0.016787998 ubox
27 82 0.006093592 ubox
27 90 0.152989833 ubox
28 34 0.016787043 ubox
28 35 0.006315541 ubox
28 81 0.006099215 ubox
28 89 0.151978863 ubox
28 90 0.983712382 ubox
29 34 0.006434231 ubox
29 80 0.006110326 ubox
29 89 0.987547108 ubox
30 79 0.006115698 ubox
31 78 0.005925813 ubox
31 82 0.004255024 ubox
31 87 0.988237674 ubox
31 90 0.004485484 ubox
32 77 0.005820041 ubox
32 81 0.004295878 ubox
32 86 0.973341337 ubox
32 87 0.094091241 ubox
32 89 0.004539757 ubox
33 52 0.003194908 ubox
33 76 0.005747217 ubox
33 80 0.004274256 ubox
33 86 0.086231817 ubox
34 51 0.003465224 ubox
34 79 0.004233069 ubox
35 50 0.003460680 ubox
36 74 0.004517224 ubox
36 77 0.003969594 ubox
36 81 0.003508566 ubox
36 82 0.987724690 ubox
37 73 0.004711275 ubox
37 76 0.003967205 ubox
37 81 0.989113951 ubox
37 82 0.145457515 ubox
38 64 0.006951233 ubox
38 72 0.004673932 ubox
38 75 0.003302176 ubox
38 80 0.987085093 ubox
38 81 0.145489685 ubox
39 63 0.006979981 ubox
39 71 0.004704054 ubox
39 79 0.987000008 ubox
40 69 0.003658495 ubox
40 78 0.800863085 ubox
40 80 0.148913605 ubox
41 60 0.009061649 ubox
41 68 0.003604110 ubox
41 79 0.152692256 ubox
42 59 0.010100965 ubox
42 67 0.003323163 ubox
42 79 0.003195720 ubox
43 58 0.010356212 ubox
43 75 0.013315577 ubox
43 76 0.017211079 ubox
43 77 0.996962942 ubox
43 78 0.005919659 ubox
44 57 0.010357020 ubox
44 74 0.013443557 ubox
44 75 0.016883004 ubox
44 76 0.999662253 ubox
44 77 0.005714143 ubox
45 56 0.010356236 ubox
45 73 0.014129323 ubox
45 74 0.015203445 ubox
45 75 0.999676593 ubox
45 76 0.004285749 ubox
46 55 0.009917183 ubox
46 72 0.012164486 ubox
46 74 0.999258869 ubox
47 69 0.011539996 ubox
47 72 0.144068176 ubox
47 73 0.989069538 ubox
48 54 0.005398481 ubox
48 60 0.005396243 ubox
48 66 0.005207158 ubox
48 68 0.012860163 ubox
48 71 0.999236113 ubox
49 59 0.005434189 ubox
49 65 0.005155364 ubox
49 67 0.012585703 ubox
49 70 0.998986326 ubox
50 58 0.005460169 ubox
50 64 0.003915394 ubox
50 69 0.997660374 ubox
50 73 0.008138684 ubox
51 57 0.005428779 ubox
51 64 0.095202548 ubox
51 69 0.052103041 ubox
51 72 0.015448328 ubox
52 60 0.003595230 ubox
52 63 0.095304931 ubox
52 66 0.990701208 ubox
52 68 0.068035325 ubox
52 71 0.015532623 ubox
53 59 0.003979498 ubox
53 62 0.094135470 ubox
53 65 0.992373922 ubox
53 67 0.056463318 ubox
53 70 0.015528148 ubox
54 58 0.004240983 ubox
54 64 0.991519643 ubox
54 69 0.015515830 ubox
55 61 0.023487812 ubox
55 62 0.759519876 ubox
55 63 0.632836165 ubox
55 67 0.008175222 ubox
55 68 0.013100587 ubox
56 60 0.049056480 ubox
56 61 0.892047783 ubox
56 66 0.009764814 ubox
60 76 0.004830792 ubox
61 75 0.006075737 ubox
62 74 0.006164041 ubox
63 69 0.004189685 ubox
63 73 0.006090215 ubox
64 68 0.004182124 ubox
64 71 0.006224580 ubox
65 74 0.004656010 ubox
66 73 0.005314453 ubox
66 75 0.004643598 ubox
67 72 0.005190228 ubox
67 74 0.004690107 ubox
68 73 0.004598117 ubox
76 93 0.004628979 ubox
77 92 0.004659291 ubox
78 91 0.004678579 ubox
79 90 0.004573507 ubox
79 95 0.005178566 ubox
80 94 0.007522108 ubox
81 93 0.009196748 ubox
82 92 0.009197674 ubox
84 96 0.004424883 ubox
85 95 0.004832206 ubox
86 94 0.005137480 ubox
87 93 0.005185297 ubox
101 110 0.003222721 ubox
102 109 0.003654664 ubox
103 108 0.003775074 ubox
2 11 0.9500000 lbox
3 10 0.9500000 lbox
4 9 0.9500000 lbox
12 106 0.9500000 lbox
13 105 0.9500000 lbox
14 104 0.9500000 lbox
15 103 0.9500000 lbox
16 102 0.9500000 lbox
17 101 0.9500000 lbox
19 100 0.9500000 lbox
20 99 0.9500000 lbox
21 98 0.9500000 lbox
22 97 0.9500000 lbox
23 96 0.9500000 lbox
24 95 0.9500000 lbox
25 93 0.9500000 lbox
26 92 0.9500000 lbox
28 90 0.9500000 lbox
29 89 0.9500000 lbox
31 87 0.9500000 lbox
32 86 0.9500000 lbox
36 82 0.9500000 lbox
37 81 0.9500000 lbox
38 80 0.9500000 lbox
39 79 0.9500000 lbox
40 78 0.9500000 lbox
43 77 0.9500000 lbox
44 76 0.9500000 lbox
45 75 0.9500000 lbox
46 74 0.9500000 lbox
47 73 0.9500000 lbox
48 71 0.9500000 lbox
49 70 0.9500000 lbox
50 69 0.9500000 lbox
52 66 0.9500000 lbox
53 65 0.9500000 lbox
54 64 0.9500000 lbox
55 62 0.9500000 lbox
56 61 0.9500000 lbox
showpage
end
%%EOF
