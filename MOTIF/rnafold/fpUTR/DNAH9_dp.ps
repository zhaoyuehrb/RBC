%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:49:59 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DNAH9)
} def

/sequence { (\
AGCAGAGGAGUGAGUCCUGGCCGCGUCCCCGUCGCUAGGGAAACCGAUGCAGCUGGAGGCCGCGCGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 18 0.006566671 ubox
2 11 0.012796653 ubox
2 15 0.005854911 ubox
2 17 0.006239167 ubox
2 21 0.232739280 ubox
2 50 0.055901829 ubox
2 63 0.009437519 ubox
2 65 0.082281964 ubox
2 67 0.162709229 ubox
3 10 0.013462158 ubox
3 12 0.019398886 ubox
3 14 0.006064617 ubox
3 19 0.237190085 ubox
3 20 0.233273397 ubox
3 49 0.055965186 ubox
3 62 0.009431665 ubox
3 64 0.082325258 ubox
3 66 0.162677608 ubox
4 11 0.018986349 ubox
4 18 0.208470452 ubox
4 48 0.055864192 ubox
5 16 0.035936421 ubox
5 17 0.176499616 ubox
6 15 0.047427861 ubox
6 18 0.920035062 ubox
7 16 0.153426626 ubox
7 17 0.950503637 ubox
7 18 0.008456202 ubox
7 45 0.056080690 ubox
7 61 0.012264157 ubox
8 15 0.123617763 ubox
8 16 0.952540922 ubox
8 17 0.009056113 ubox
8 44 0.055596440 ubox
8 60 0.012085417 ubox
9 15 0.941537080 ubox
9 18 0.010168898 ubox
10 17 0.010389035 ubox
10 44 0.010930499 ubox
10 63 0.235371221 ubox
10 65 0.046029743 ubox
10 67 0.017283081 ubox
11 43 0.015091591 ubox
11 62 0.235464655 ubox
11 64 0.045989474 ubox
11 66 0.017260152 ubox
12 61 0.235566797 ubox
12 63 0.045425177 ubox
12 65 0.016947324 ubox
14 60 0.240286721 ubox
14 63 0.011275669 ubox
15 40 0.055385562 ubox
15 41 0.006400868 ubox
15 57 0.016858399 ubox
15 59 0.240049306 ubox
15 62 0.010586787 ubox
16 39 0.057565992 ubox
16 40 0.005405228 ubox
16 56 0.017438381 ubox
16 58 0.239972910 ubox
16 59 0.015003092 ubox
17 38 0.057686982 ubox
17 39 0.004066404 ubox
17 55 0.017407701 ubox
17 56 0.240071109 ubox
17 58 0.014977611 ubox
18 37 0.057777660 ubox
18 55 0.239218113 ubox
18 57 0.013992804 ubox
18 62 0.004584510 ubox
18 66 0.005122834 ubox
18 68 0.020588078 ubox
19 36 0.057812729 ubox
19 54 0.240298100 ubox
19 61 0.018607651 ubox
19 65 0.025583680 ubox
19 67 0.128955882 ubox
20 35 0.057856682 ubox
20 53 0.241373957 ubox
20 60 0.018624005 ubox
20 63 0.048080778 ubox
20 65 0.133291684 ubox
20 67 0.918680637 ubox
21 34 0.057355338 ubox
21 52 0.241282047 ubox
21 59 0.018620856 ubox
21 62 0.047970874 ubox
21 64 0.100577285 ubox
21 66 0.918935097 ubox
22 34 0.006969767 ubox
22 58 0.018603393 ubox
22 62 0.049162774 ubox
22 64 0.945210443 ubox
22 66 0.147059285 ubox
22 68 0.051122937 ubox
23 32 0.056029143 ubox
23 33 0.009631847 ubox
23 50 0.241369682 ubox
23 60 0.051149216 ubox
23 61 0.047560209 ubox
23 63 0.951083827 ubox
23 65 0.159734811 ubox
23 67 0.054614802 ubox
24 31 0.057748568 ubox
24 49 0.241576570 ubox
24 59 0.052858154 ubox
24 62 0.951059198 ubox
24 64 0.159746040 ubox
24 66 0.054614664 ubox
25 30 0.056008542 ubox
25 44 0.003912223 ubox
25 48 0.241359619 ubox
25 60 0.255968420 ubox
25 61 0.915509245 ubox
25 63 0.159194893 ubox
25 65 0.054371194 ubox
26 41 0.014494967 ubox
26 43 0.003600803 ubox
26 47 0.241162222 ubox
26 57 0.059576210 ubox
26 59 0.353359567 ubox
26 62 0.152725615 ubox
26 64 0.053644377 ubox
27 40 0.017510302 ubox
27 46 0.240890398 ubox
27 56 0.058866353 ubox
27 58 0.354777870 ubox
27 59 0.896897730 ubox
28 39 0.018467456 ubox
28 40 0.232048560 ubox
28 55 0.057722252 ubox
28 56 0.307408010 ubox
28 58 0.897768817 ubox
28 59 0.006388853 ubox
29 38 0.018397096 ubox
29 39 0.232143026 ubox
29 40 0.018954607 ubox
29 55 0.307931116 ubox
29 56 0.915462921 ubox
29 58 0.005622088 ubox
29 59 0.029161520 ubox
30 38 0.232111339 ubox
30 39 0.019008724 ubox
30 49 0.007379649 ubox
30 55 0.915147219 ubox
30 58 0.029185148 ubox
31 44 0.006508725 ubox
31 48 0.009253805 ubox
31 50 0.006554389 ubox
31 53 0.930803062 ubox
31 54 0.230763699 ubox
31 60 0.006094246 ubox
32 39 0.008432238 ubox
32 40 0.012609169 ubox
32 41 0.058703064 ubox
32 43 0.004974404 ubox
32 47 0.010025004 ubox
32 49 0.005291859 ubox
32 52 0.925741332 ubox
32 56 0.026471539 ubox
32 57 0.005674827 ubox
32 59 0.006414243 ubox
33 38 0.009109450 ubox
33 39 0.013217794 ubox
33 40 0.059111091 ubox
33 46 0.010078974 ubox
33 49 0.020185897 ubox
33 55 0.027103409 ubox
33 56 0.005764380 ubox
33 58 0.006349564 ubox
34 45 0.007380868 ubox
34 48 0.018584789 ubox
34 50 0.962501277 ubox
34 53 0.083246759 ubox
34 54 0.005532600 ubox
35 49 0.962410116 ubox
35 52 0.083535846 ubox
35 56 0.006414430 ubox
36 49 0.015727893 ubox
36 51 0.074186600 ubox
36 55 0.006429554 ubox
37 48 0.051813503 ubox
37 54 0.006440781 ubox
38 45 0.925440086 ubox
38 53 0.006373105 ubox
39 44 0.925343277 ubox
39 45 0.279865500 ubox
40 44 0.275501621 ubox
45 66 0.009173759 ubox
45 68 0.005083097 ubox
46 65 0.010030466 ubox
46 67 0.005604598 ubox
48 64 0.011750765 ubox
48 66 0.005603904 ubox
48 68 0.003867285 ubox
49 63 0.016489131 ubox
49 65 0.006332933 ubox
49 67 0.006416324 ubox
50 62 0.016491680 ubox
50 64 0.006323497 ubox
50 66 0.006433819 ubox
52 60 0.020454930 ubox
52 63 0.022782928 ubox
52 65 0.046229694 ubox
52 67 0.015689627 ubox
53 59 0.020471281 ubox
53 62 0.022427791 ubox
53 64 0.046263247 ubox
53 66 0.015682943 ubox
54 58 0.018443595 ubox
54 62 0.046167654 ubox
54 64 0.011198051 ubox
55 61 0.051093499 ubox
55 63 0.012287621 ubox
55 65 0.003518379 ubox
56 60 0.050277270 ubox
59 65 0.005885976 ubox
59 67 0.009253276 ubox
60 64 0.005850341 ubox
60 66 0.009250404 ubox
61 68 0.004302797 ubox
62 67 0.004651473 ubox
6 18 0.9500000 lbox
7 17 0.9500000 lbox
8 16 0.9500000 lbox
9 15 0.9500000 lbox
20 67 0.9500000 lbox
21 66 0.9500000 lbox
22 64 0.9500000 lbox
23 63 0.9500000 lbox
24 62 0.9500000 lbox
25 61 0.9500000 lbox
27 59 0.9500000 lbox
28 58 0.9500000 lbox
29 56 0.9500000 lbox
30 55 0.9500000 lbox
31 53 0.9500000 lbox
32 52 0.9500000 lbox
34 50 0.9500000 lbox
35 49 0.9500000 lbox
38 45 0.9500000 lbox
39 44 0.9500000 lbox
showpage
end
%%EOF
