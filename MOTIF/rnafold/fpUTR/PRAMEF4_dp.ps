%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:51:50 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PRAMEF4)
} def

/sequence { (\
UUCCUGCUUGGUUCUUCCUGAGAUCUGAGCACCUUCUAGACUACAUCCAGAUCUGUUUUCCCUGCAGAUUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 39 0.012001877 ubox
1 40 0.009012283 ubox
2 38 0.013205534 ubox
2 39 0.009417048 ubox
2 40 0.046543716 ubox
2 49 0.003228511 ubox
2 51 0.004511186 ubox
2 68 0.017612397 ubox
3 11 0.004936728 ubox
3 39 0.049775910 ubox
3 50 0.006235535 ubox
3 67 0.013436500 ubox
4 10 0.004989738 ubox
4 39 0.054384497 ubox
4 50 0.011821531 ubox
4 67 0.101923608 ubox
5 31 0.880977986 ubox
5 38 0.039111537 ubox
5 49 0.009776288 ubox
5 66 0.103066509 ubox
6 30 0.994324913 ubox
6 37 0.008015209 ubox
6 48 0.005920860 ubox
6 65 0.103150191 ubox
7 22 0.005039014 ubox
7 29 0.994568469 ubox
7 64 0.103122288 ubox
8 21 0.005193437 ubox
8 28 0.994133190 ubox
9 20 0.005337654 ubox
9 27 0.989389303 ubox
9 45 0.003956277 ubox
9 49 0.003900534 ubox
10 18 0.012041139 ubox
10 19 0.004860235 ubox
10 25 0.060702309 ubox
10 26 0.987558395 ubox
10 33 0.006542773 ubox
10 44 0.003907709 ubox
10 48 0.004177654 ubox
10 61 0.093213024 ubox
10 62 0.041596447 ubox
10 63 0.005471292 ubox
11 17 0.012066881 ubox
11 18 0.004893764 ubox
11 24 0.060151764 ubox
11 25 0.989316858 ubox
11 32 0.006530950 ubox
11 47 0.004168839 ubox
11 60 0.093195033 ubox
11 61 0.041503243 ubox
11 62 0.005879283 ubox
12 21 0.003865448 ubox
12 22 0.076922424 ubox
12 23 0.062708964 ubox
12 31 0.006368623 ubox
13 20 0.003553182 ubox
13 21 0.101802647 ubox
13 22 0.038570828 ubox
13 23 0.961898447 ubox
13 28 0.003165776 ubox
14 20 0.105075385 ubox
14 22 0.988043987 ubox
14 27 0.003194113 ubox
14 29 0.005841584 ubox
15 21 0.980789649 ubox
15 22 0.005104911 ubox
15 23 0.005516404 ubox
15 28 0.005703041 ubox
16 20 0.883825885 ubox
16 21 0.021742289 ubox
16 22 0.005411812 ubox
16 23 0.008341582 ubox
16 27 0.005114696 ubox
17 22 0.009042986 ubox
18 50 0.005372023 ubox
19 45 0.004996109 ubox
19 49 0.005550656 ubox
19 55 0.010080835 ubox
20 44 0.005425319 ubox
20 48 0.005537480 ubox
20 54 0.004847540 ubox
20 57 0.003518732 ubox
21 37 0.003336768 ubox
21 42 0.006733895 ubox
21 54 0.101569079 ubox
22 36 0.003578091 ubox
22 41 0.006843317 ubox
22 47 0.005132487 ubox
22 53 0.102888954 ubox
23 35 0.003524341 ubox
23 46 0.005118146 ubox
23 52 0.102879097 ubox
24 40 0.009542129 ubox
24 51 0.102889932 ubox
25 39 0.010059025 ubox
25 50 0.102916789 ubox
26 38 0.009856830 ubox
26 49 0.102817222 ubox
27 36 0.009598524 ubox
27 37 0.004082765 ubox
27 47 0.027994439 ubox
27 48 0.098715502 ubox
27 58 0.003631696 ubox
28 34 0.007523593 ubox
28 35 0.009877853 ubox
28 37 0.013050263 ubox
28 42 0.018602985 ubox
28 46 0.038961949 ubox
28 57 0.003958663 ubox
29 33 0.007576958 ubox
29 34 0.007266496 ubox
29 36 0.013198737 ubox
29 41 0.018778781 ubox
29 56 0.004140095 ubox
30 55 0.004163521 ubox
31 54 0.003903723 ubox
33 39 0.160328395 ubox
33 50 0.028656846 ubox
33 67 0.004047931 ubox
34 38 0.144927731 ubox
34 40 0.032064967 ubox
34 49 0.027736596 ubox
34 50 0.006984971 ubox
34 51 0.009281271 ubox
34 66 0.003899414 ubox
35 39 0.031357831 ubox
35 49 0.013211813 ubox
35 50 0.004842407 ubox
35 51 0.187502950 ubox
35 68 0.004474942 ubox
36 50 0.263792321 ubox
36 67 0.004777061 ubox
37 43 0.029470855 ubox
37 49 0.262052707 ubox
37 55 0.012192406 ubox
37 66 0.004404806 ubox
38 42 0.027928907 ubox
38 54 0.013638261 ubox
38 63 0.003580162 ubox
39 47 0.309292569 ubox
39 53 0.013878072 ubox
39 57 0.003618289 ubox
39 60 0.009325251 ubox
39 62 0.003414001 ubox
39 70 0.003692433 ubox
39 71 0.021000792 ubox
40 46 0.292668519 ubox
40 52 0.013879983 ubox
40 56 0.003708991 ubox
40 59 0.009349341 ubox
40 70 0.018122639 ubox
41 50 0.074457753 ubox
41 55 0.003719144 ubox
42 49 0.074855271 ubox
43 56 0.010236545 ubox
44 55 0.010319650 ubox
45 54 0.010087988 ubox
45 69 0.004458532 ubox
46 68 0.004542983 ubox
47 67 0.004500482 ubox
48 64 0.005713537 ubox
49 63 0.005763974 ubox
49 70 0.038601215 ubox
50 62 0.005714746 ubox
50 69 0.032511737 ubox
50 70 0.883088668 ubox
50 71 0.141662276 ubox
51 69 0.958729386 ubox
51 70 0.102353664 ubox
52 68 0.989179602 ubox
53 67 0.994395375 ubox
54 66 0.994201119 ubox
55 65 0.994399271 ubox
56 64 0.988247958 ubox
59 68 0.003892968 ubox
60 67 0.004157560 ubox
5 31 0.9500000 lbox
6 30 0.9500000 lbox
7 29 0.9500000 lbox
8 28 0.9500000 lbox
9 27 0.9500000 lbox
10 26 0.9500000 lbox
11 25 0.9500000 lbox
13 23 0.9500000 lbox
14 22 0.9500000 lbox
15 21 0.9500000 lbox
16 20 0.9500000 lbox
50 70 0.9500000 lbox
51 69 0.9500000 lbox
52 68 0.9500000 lbox
53 67 0.9500000 lbox
54 66 0.9500000 lbox
55 65 0.9500000 lbox
56 64 0.9500000 lbox
showpage
end
%%EOF
