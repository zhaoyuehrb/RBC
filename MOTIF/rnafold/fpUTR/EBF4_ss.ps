%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:27:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCCGCGGCGGGGCGGCGCGGGAACCGGGCCCCGGGGGGAGUCGGCCGGGCUGCUGCUGCUGCUGCUCCAGGUGCUGCCGCCCGGGGCUACGGCAGGGCCGGGACGCCGGGGCACGCGGGGCGCUGGCGCUGGCGGCGGCGGCGUCUGCUGGCCCGGCGCGGCCCCAGCCUUUCCCCGGGACGCGCGGCUGCUGCUGCUCCUGCCGCCGCUGCCGCCACUGUCGCCGCCGCCGCCGAGCUCCGCGCCCGCAGC\
CUCCGCCUCCCGG\
) } def
/len { sequence length } bind def

/coor [
[93.05123901 120.99268341]
[83.78720856 132.79003906]
[74.52317047 144.58738708]
[65.25913239 156.38475037]
[55.99509430 168.18211365]
[46.73105621 179.97946167]
[43.90690613 188.62863159]
[37.28929520 191.85966492]
[27.88811493 203.54803467]
[18.48693466 215.23638916]
[9.08575344 226.92475891]
[9.70158577 239.78524780]
[1.65981436 249.32214355]
[-10.32534027 250.78878784]
[-19.86238289 262.36654663]
[-29.39942551 273.94433594]
[-38.31511688 286.00711060]
[-46.58483505 298.52157593]
[-54.85455322 311.03601074]
[-56.00758362 326.81515503]
[-69.47952271 333.16781616]
[-77.74924469 345.68225098]
[-86.01895905 358.19671631]
[-89.70686340 374.74472046]
[-106.62905884 375.78186035]
[-112.31021118 359.80810547]
[-98.53342438 349.92700195]
[-90.26370239 337.41253662]
[-81.99398041 324.89807129]
[-81.43246460 310.01406860]
[-67.36901855 302.76629639]
[-59.09929657 290.25183105]
[-50.82957840 277.73739624]
[-62.00795364 267.73519897]
[-73.52983856 277.33966064]
[-78.67771149 292.90988159]
[-94.78855133 295.97140503]
[-105.28890991 283.37478638]
[-99.37691498 268.07836914]
[-83.13432312 265.81777954]
[-71.61244202 256.21328735]
[-52.46360016 255.10092163]
[-40.97719955 264.40728760]
[-31.44015503 252.82951355]
[-21.90311241 241.25173950]
[-19.93169403 223.79887390]
[-2.60260868 217.52357483]
[6.79857206 205.83520508]
[16.19975281 194.14685059]
[25.60093307 182.45848083]
[34.93370056 170.71542358]
[44.19773865 158.91807556]
[53.46177673 147.12071228]
[62.72581100 135.32336426]
[71.98984528 123.52600098]
[81.25388336 111.72864532]
[79.63675690 108.62068176]
[78.53079224 105.29632568]
[77.96376038 101.83901215]
[63.47865677 97.94262695]
[48.99355316 94.04624176]
[34.50845337 90.14986420]
[20.02334976 86.25347900]
[5.53824854 82.35709381]
[-8.04267311 89.98574066]
[-22.67712021 85.82791138]
[-29.86618042 72.83356476]
[-44.35128403 68.93717957]
[-58.83638382 65.04079437]
[-73.32148743 61.14440918]
[-87.80658722 57.24802399]
[-103.14288330 61.13500977]
[-113.42343903 50.35728073]
[-127.90853882 46.46089554]
[-142.39364624 42.56451035]
[-156.87873840 38.66812515]
[-172.57507324 43.41760254]
[-184.34965515 32.00309372]
[-180.08982849 16.16687393]
[-164.17773438 12.19988346]
[-152.98236084 24.18302345]
[-138.49725342 28.07940865]
[-124.01215363 31.97579384]
[-109.52705383 35.87217712]
[-95.22682953 31.70649719]
[-83.91020203 42.76292038]
[-69.42510223 46.65930557]
[-54.93999863 50.55569077]
[-40.45489883 54.45207596]
[-25.96979523 58.34846115]
[-13.23183060 50.71433640]
[1.51362801 54.45948029]
[9.43463326 67.87198639]
[23.91973495 71.76837158]
[38.40483856 75.66475677]
[52.88993835 79.56114197]
[67.37503815 83.45752716]
[81.86014557 87.35391235]
[92.05773163 79.36270142]
[104.98163605 78.45559692]
[116.19551086 84.94399261]
[129.99432373 79.06243134]
[143.79313660 73.18086243]
[157.59194946 67.29930115]
[171.39076233 61.41773605]
[185.18957520 55.53617096]
[194.85079956 43.00735855]
[209.59271240 45.13464355]
[223.39152527 39.25307846]
[233.05276489 26.72426605]
[247.79467773 28.85155106]
[261.59347534 22.96998596]
[275.39230347 17.08842087]
[289.19110107 11.20685577]
[302.98992920 5.32529020]
[308.50494385 -6.30896330]
[320.09112549 -10.93312740]
[331.35406494 -6.58093309]
[345.22061157 -12.30094719]
[359.08715820 -18.02096176]
[372.95373535 -23.74097633]
[386.82028198 -29.46099091]
[393.53118896 -35.60491180]
[400.88235474 -35.16579056]
[414.81475830 -40.72347641]
[428.74716187 -46.28115845]
[435.52935791 -52.34628677]
[442.87487793 -51.82134628]
[456.87124634 -57.21594238]
[466.96542358 -69.39863586]
[481.62377930 -66.75626373]
[495.62014771 -72.15085602]
[509.61651611 -77.54544830]
[523.58117676 -83.02168274]
[537.51354980 -88.57936859]
[551.44598389 -94.13705444]
[565.37841797 -99.69473267]
[579.31079102 -105.25241852]
[593.24322510 -110.81010437]
[607.17565918 -116.36778259]
[621.10803223 -121.92546844]
[635.04046631 -127.48315430]
[648.97290039 -133.04083252]
[662.90527344 -138.59852600]
[676.83770752 -144.15620422]
[690.77014160 -149.71388245]
[692.05206299 -163.62380981]
[699.16162109 -175.57124329]
[710.66577148 -183.25936890]
[724.29339600 -185.23875427]
[737.38317871 -181.18032837]
[747.40362549 -171.92854309]
[761.40002441 -177.32313538]
[775.39636230 -182.71772766]
[789.39276123 -188.11231995]
[786.86285400 -194.37841797]
[786.78521729 -202.08848572]
[789.72711182 -210.28222656]
[795.89044189 -217.81222534]
[807.74169922 -227.00721741]
[819.59289551 -236.20220947]
[831.44415283 -245.39720154]
[843.29541016 -254.59219360]
[849.45574951 -269.16479492]
[864.25433350 -270.85348511]
[876.10559082 -280.04849243]
[887.95684814 -289.24346924]
[884.70898438 -304.15704346]
[888.26196289 -319.00088501]
[897.91015625 -330.82772827]
[911.73803711 -337.28936768]
[927.00000000 -337.10281372]
[940.66583252 -330.30514526]
[950.02209473 -318.24600220]
[953.21118164 -303.31976318]
[949.59979248 -288.49002075]
[939.90509033 -276.70126343]
[926.05187988 -270.29412842]
[910.79077148 -270.54077148]
[897.15179443 -277.39221191]
[885.30053711 -268.19723511]
[873.44927979 -259.00222778]
[868.13665771 -245.08732605]
[852.49041748 -242.74093628]
[840.63916016 -233.54594421]
[828.78790283 -224.35095215]
[816.93664551 -215.15596008]
[805.08538818 -205.96098328]
[809.82049561 -191.72795105]
[824.81823730 -191.46519470]
[839.81591797 -191.20243835]
[853.74951172 -198.69680786]
[866.33929443 -190.73774719]
[881.33697510 -190.47499084]
[895.27056885 -197.96936035]
[907.86035156 -190.01029968]
[922.85803223 -189.74754333]
[936.79162598 -197.24191284]
[949.38140869 -189.28285217]
[964.37915039 -189.02009583]
[978.45257568 -197.43856812]
[992.64630127 -189.22453308]
[992.35900879 -172.82791138]
[977.88629150 -165.11611938]
[964.11639404 -174.02239990]
[949.11865234 -174.28515625]
[936.25781250 -166.77198792]
[922.59527588 -174.74984741]
[907.59759521 -175.01260376]
[894.73675537 -167.49943542]
[881.07421875 -175.47729492]
[866.07653809 -175.74005127]
[853.21569824 -168.22688293]
[839.55316162 -176.20474243]
[824.55548096 -176.46749878]
[809.55773926 -176.73025513]
[794.78735352 -174.11595154]
[780.79095459 -168.72135925]
[766.79461670 -163.32676697]
[752.79821777 -157.93217468]
[750.67517090 -141.89704895]
[740.68975830 -129.05284119]
[725.49865723 -122.97161102]
[709.22241211 -125.40510559]
[696.32781982 -135.78147888]
[682.39538574 -130.22378540]
[668.46295166 -124.66610718]
[654.53057861 -119.10842133]
[640.59814453 -113.55073547]
[626.66571045 -107.99305725]
[612.73333740 -102.43537140]
[598.80090332 -96.87768555]
[584.86846924 -91.32000732]
[570.93609619 -85.76232147]
[557.00366211 -80.20463562]
[543.07122803 -74.64695740]
[529.13885498 -69.08927155]
[524.10821533 -63.71102905]
[515.01110840 -63.54908371]
[501.01473999 -58.15448761]
[487.01837158 -52.75989151]
[477.92532349 -40.96305466]
[462.26583862 -43.21957397]
[448.26947021 -37.82497787]
[434.30484009 -32.34874725]
[420.37243652 -26.79106140]
[406.44003296 -21.23337746]
[392.54031372 -15.59443283]
[378.67373657 -9.87441826]
[364.80718994 -4.15440416]
[350.94064331 1.56561053]
[337.07406616 7.28562498]
[327.11349487 21.75199318]
[308.87149048 19.12410164]
[295.07266235 25.00566673]
[281.27386475 30.88723183]
[267.47503662 36.76879883]
[253.67623901 42.65036392]
[245.00198364 54.75848389]
[229.27308655 53.05188751]
[215.47427368 58.93345261]
[206.80003357 71.04157257]
[191.07113647 69.33498383]
[177.27232361 75.21654510]
[163.47351074 81.09811401]
[149.67469788 86.97967529]
[135.87588501 92.86124420]
[122.07707977 98.74280548]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 56]
[2 55]
[3 54]
[4 53]
[5 52]
[6 51]
[8 50]
[9 49]
[10 48]
[11 47]
[14 45]
[15 44]
[16 43]
[17 33]
[18 32]
[19 31]
[21 29]
[22 28]
[23 27]
[34 41]
[35 40]
[59 98]
[60 97]
[61 96]
[62 95]
[63 94]
[64 93]
[67 90]
[68 89]
[69 88]
[70 87]
[71 86]
[73 84]
[74 83]
[75 82]
[76 81]
[101 268]
[102 267]
[103 266]
[104 265]
[105 264]
[106 263]
[108 261]
[109 260]
[111 258]
[112 257]
[113 256]
[114 255]
[115 254]
[118 252]
[119 251]
[120 250]
[121 249]
[122 248]
[124 247]
[125 246]
[126 245]
[128 244]
[129 243]
[131 241]
[132 240]
[133 239]
[134 237]
[135 236]
[136 235]
[137 234]
[138 233]
[139 232]
[140 231]
[141 230]
[142 229]
[143 228]
[144 227]
[145 226]
[146 225]
[152 220]
[153 219]
[154 218]
[155 217]
[159 188]
[160 187]
[161 186]
[162 185]
[163 184]
[165 182]
[166 181]
[167 180]
[189 216]
[190 215]
[191 214]
[193 212]
[194 211]
[196 209]
[197 208]
[199 206]
[200 205]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
