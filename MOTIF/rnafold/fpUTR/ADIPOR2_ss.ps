%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:00:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGGCGGCGGCAGCGGCGGCGGCUACACCGGGCUUGGCCCCCUCCCUCCUCCGUUCCCCCCUCCUCCCCCCUCCCCUCAGCGGUGGCUCCCAAGAAGUCCGAGACACGCGGAUCAACUCACUAUCCUGAAGGUCCAUUCUCCCAAGAAGAGGGGACAGAAAGACAGAUCUAUUUGUAAGAAAGGCUUGGGUAUCCC\
) } def
/len { sequence length } bind def

/coor [
[-21.49970818 230.73609924]
[-28.59760094 226.97204590]
[-40.38839722 236.24443054]
[-52.17919540 245.51681519]
[-63.96998978 254.78919983]
[-70.03477478 269.40182495]
[-84.82196808 271.18737793]
[-96.61276245 280.45977783]
[-102.67755127 295.07238770]
[-117.46474457 296.85794067]
[-129.25553894 306.13034058]
[-135.32032776 320.74295044]
[-150.10752869 322.52850342]
[-161.89831543 331.80090332]
[-166.71618652 339.57431030]
[-173.95054626 341.12509155]
[-185.88697815 350.20922852]
[-190.82756042 357.90521240]
[-198.08561707 359.34100342]
[-210.16467285 368.23464966]
[-222.24372864 377.12826538]
[-234.18014526 386.21240234]
[-245.97094727 395.48477173]
[-257.76174927 404.75717163]
[-269.55255127 414.02954102]
[-271.17971802 429.74984741]
[-283.49874878 439.65020752]
[-299.20095825 437.85693359]
[-308.97052002 425.43392944]
[-307.01132202 409.75152588]
[-294.48571777 400.11386108]
[-278.82492065 402.23876953]
[-267.03411865 392.96636963]
[-255.24333191 383.69400024]
[-243.45252991 374.42160034]
[-242.00573730 369.85995483]
[-237.67179871 366.16308594]
[-231.13734436 365.04919434]
[-219.05828857 356.15557861]
[-206.97923279 347.26196289]
[-194.97111511 338.27279663]
[-183.03468323 329.18865967]
[-171.17070007 320.01010132]
[-159.37991333 310.73770142]
[-154.15847778 296.78829956]
[-138.52792358 294.33953857]
[-126.73712921 285.06713867]
[-121.51570129 271.11773682]
[-105.88514709 268.66897583]
[-94.09435272 259.39657593]
[-88.87292480 245.44718933]
[-73.24237823 242.99841309]
[-61.45158005 233.72602844]
[-49.66078186 224.45364380]
[-37.86998367 215.18125916]
[-37.50486374 193.25794983]
[-20.85418129 178.57228088]
[1.49041152 181.00833130]
[12.34642220 170.65715027]
[23.20243263 160.30595398]
[21.04320717 145.59284973]
[28.04451942 132.27197266]
[41.70688629 125.54939270]
[56.88341522 128.19120789]
[67.73942566 117.84002686]
[78.59543610 107.48883820]
[80.36315155 93.35223389]
[89.68285370 84.30020142]
[101.37268829 83.21491241]
[107.38665009 69.47328186]
[113.40060425 55.73165894]
[119.41456604 41.99002838]
[125.42852020 28.24840355]
[131.44247437 14.50677681]
[118.65328217 -27.05262756]
[121.02330780 -41.86421204]
[115.56364441 -56.71354294]
[125.21467590 -68.05844116]
[127.58470154 -82.87002563]
[129.95472717 -97.68161011]
[132.32473755 -112.49318695]
[130.58958435 -121.47243500]
[134.85165405 -127.52021027]
[137.45637512 -142.29232788]
[140.06111145 -157.06443787]
[142.66583252 -171.83656311]
[145.27055359 -186.60867310]
[133.61517334 -192.39537048]
[123.86888123 -200.99723816]
[116.69361877 -211.82067871]
[112.57431030 -224.12156677]
[111.78604889 -237.05636597]
[114.37575531 -249.73997498]
[120.15943909 -261.30630493]
[128.73527527 -270.96737671]
[139.51145935 -278.06713867]
[151.74713135 -282.12582397]
[164.60321045 -282.87246704]
[167.90786743 -297.50390625]
[171.21252441 -312.13534546]
[174.51718140 -326.76681519]
[177.82183838 -341.39825439]
[168.20822144 -353.73162842]
[168.82318115 -369.35711670]
[179.37632751 -380.89685059]
[194.88481140 -382.90206909]
[208.02598572 -374.42602539]
[212.59500122 -359.47082520]
[206.43450928 -345.09783936]
[192.45329285 -338.09359741]
[189.14863586 -323.46215820]
[185.84397888 -308.83068848]
[182.53932190 -294.19924927]
[179.23466492 -279.56781006]
[193.84387207 -270.70327759]
[204.56011963 -257.36111450]
[210.08021545 -241.13693237]
[209.72367859 -223.97845459]
[203.51660156 -207.95161438]
[192.19050598 -194.99189758]
[177.09620667 -186.67050171]
[160.04266357 -184.00395203]
[157.43794250 -169.23182678]
[154.83322144 -154.45971680]
[152.22850037 -139.68760681]
[149.62377930 -124.91548157]
[147.13632202 -110.12316895]
[144.76631165 -95.31158447]
[142.39628601 -80.50000000]
[140.02626038 -65.68842316]
[145.65544128 -51.89851379]
[135.83488464 -39.49419022]
[133.46487427 -24.68260574]
[138.76817322 -19.37930489]
[149.37495422 -29.98573112]
[159.98120117 -19.37877655]
[149.37477112 -8.77270317]
[154.67807007 -3.46940279]
[169.48965454 -5.83942366]
[184.30123901 -8.20944500]
[199.11282349 -10.57946587]
[211.49284363 -21.33432198]
[226.90655518 -15.73525047]
[229.49765015 0.45790508]
[216.60063171 10.58701420]
[201.48284912 4.23211765]
[186.67126465 6.60213852]
[171.85968018 8.97215939]
[157.04809570 11.34218025]
[145.18411255 20.52073479]
[139.17015076 34.26235962]
[133.15618896 48.00398636]
[127.14223480 61.74561691]
[121.12827301 75.48724365]
[115.11431885 89.22886658]
[119.45435333 103.58728790]
[132.07315063 111.69689941]
[144.69195557 119.80651093]
[157.31076050 127.91612244]
[169.92956543 136.02572632]
[185.72210693 136.97764587]
[192.24586487 150.36755371]
[204.86466980 158.47717285]
[217.48347473 166.58677673]
[233.88087463 166.82618713]
[241.63487244 181.27635193]
[232.76882935 195.07218933]
[216.40336609 194.02172852]
[209.37385559 179.20558167]
[196.75506592 171.09596252]
[184.13626099 162.98635864]
[169.24629211 162.61450195]
[161.81994629 148.64453125]
[149.20114136 140.53492737]
[136.58235168 132.42530823]
[123.96353912 124.31569672]
[111.34474182 116.20608521]
[119.82373810 128.57971191]
[116.40715027 143.18542480]
[103.31935883 150.51411438]
[89.08123016 145.79440308]
[82.96256256 132.09907532]
[88.94661713 118.34484863]
[78.09060669 128.69602966]
[67.23459625 139.04722595]
[69.15129852 154.33226013]
[61.78624725 167.65927124]
[48.14732742 174.01882935]
[33.55361938 171.16197205]
[22.69760704 181.51315308]
[11.84159660 191.86433411]
[14.51545715 199.72642517]
[14.75980568 207.99339294]
[12.57289791 215.93457031]
[8.16699314 222.85392761]
[1.94792283 228.15109253]
[-5.52223110 231.37336731]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 55]
[3 54]
[4 53]
[5 52]
[7 50]
[8 49]
[10 47]
[11 46]
[13 44]
[14 43]
[16 42]
[17 41]
[19 40]
[20 39]
[21 38]
[22 35]
[23 34]
[24 33]
[25 32]
[58 191]
[59 190]
[60 189]
[64 185]
[65 184]
[66 183]
[69 155]
[70 154]
[71 153]
[72 152]
[73 151]
[74 150]
[75 133]
[76 132]
[78 130]
[79 129]
[80 128]
[81 127]
[83 126]
[84 125]
[85 124]
[86 123]
[87 122]
[98 114]
[99 113]
[100 112]
[101 111]
[102 110]
[138 149]
[139 148]
[140 147]
[141 146]
[156 177]
[157 176]
[158 175]
[159 174]
[160 173]
[162 171]
[163 170]
[164 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
