%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:16:18 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SFT2D2)
} def

/sequence { (\
GUCAACUUAGCGAGCGCAACAGGCUGCCGCUGAGGAGCUGGAGCUGGUGGGGACUGGGCCGCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 38 0.273923184 ubox
1 44 0.021004318 ubox
1 54 0.015481937 ubox
1 59 0.018813720 ubox
1 62 0.030463659 ubox
2 13 0.003390535 ubox
2 35 0.018832859 ubox
2 36 0.216189091 ubox
2 37 0.267212221 ubox
2 41 0.026189689 ubox
2 42 0.032104035 ubox
2 43 0.014378862 ubox
2 47 0.006932892 ubox
2 53 0.015507630 ubox
2 57 0.004315098 ubox
2 58 0.018734211 ubox
2 61 0.028098280 ubox
3 12 0.003713497 ubox
3 34 0.012753271 ubox
3 35 0.233479051 ubox
3 40 0.034156983 ubox
3 41 0.034917192 ubox
3 46 0.026738982 ubox
3 52 0.015422046 ubox
3 56 0.005693173 ubox
3 57 0.018436603 ubox
4 39 0.029193984 ubox
4 45 0.013459336 ubox
4 55 0.005492502 ubox
6 34 0.988796597 ubox
6 35 0.039973117 ubox
6 37 0.009718920 ubox
6 50 0.007171604 ubox
6 51 0.010610790 ubox
6 52 0.011034162 ubox
6 58 0.003780409 ubox
7 33 0.992121507 ubox
7 34 0.027312761 ubox
7 36 0.008903324 ubox
7 49 0.006754644 ubox
7 50 0.010580566 ubox
7 51 0.011095362 ubox
7 57 0.003796059 ubox
8 32 0.992330586 ubox
8 33 0.022151873 ubox
8 35 0.007147079 ubox
8 49 0.008991502 ubox
8 50 0.007912072 ubox
8 56 0.003818206 ubox
9 31 0.992745220 ubox
9 48 0.008631427 ubox
9 55 0.003835073 ubox
10 17 0.006941494 ubox
10 30 0.993260442 ubox
10 48 0.016809117 ubox
10 54 0.003801157 ubox
10 62 0.113169216 ubox
11 16 0.006938896 ubox
11 29 0.993248410 ubox
11 46 0.006609829 ubox
11 47 0.018172921 ubox
11 61 0.113285916 ubox
12 28 0.992157372 ubox
12 45 0.003597065 ubox
12 60 0.113226927 ubox
13 25 0.182390276 ubox
13 31 0.003210357 ubox
13 45 0.019212825 ubox
14 24 0.196705258 ubox
14 27 0.969263771 ubox
14 30 0.003494842 ubox
14 44 0.019531164 ubox
14 59 0.113114563 ubox
14 62 0.008214847 ubox
15 23 0.196699132 ubox
15 26 0.968948190 ubox
15 29 0.003501241 ubox
15 43 0.019522986 ubox
15 49 0.003490743 ubox
15 58 0.113110821 ubox
15 61 0.008223266 ubox
16 24 0.912012916 ubox
16 25 0.315531192 ubox
16 27 0.072768882 ubox
16 44 0.006854530 ubox
16 48 0.003511653 ubox
16 59 0.007126753 ubox
16 60 0.007136916 ubox
17 23 0.932301445 ubox
17 26 0.072987977 ubox
17 43 0.007163618 ubox
17 47 0.003480926 ubox
17 56 0.112387792 ubox
17 58 0.008161696 ubox
18 25 0.068702274 ubox
18 55 0.109109556 ubox
19 48 0.095778406 ubox
20 40 0.017985684 ubox
20 46 0.021038437 ubox
20 47 0.095112364 ubox
20 49 0.016015515 ubox
20 56 0.011630731 ubox
21 39 0.016699228 ubox
21 45 0.019979603 ubox
21 48 0.015235514 ubox
21 55 0.013533383 ubox
22 38 0.012003713 ubox
22 39 0.012958850 ubox
22 44 0.014390339 ubox
22 45 0.095390676 ubox
22 54 0.015062136 ubox
22 55 0.004564379 ubox
23 38 0.017611540 ubox
23 44 0.103382659 ubox
23 54 0.006338921 ubox
24 37 0.021097429 ubox
24 43 0.104325357 ubox
24 50 0.041662108 ubox
24 52 0.013164248 ubox
25 36 0.021026028 ubox
25 42 0.103923744 ubox
25 49 0.041563684 ubox
25 51 0.012017110 ubox
26 48 0.041765299 ubox
27 35 0.021260300 ubox
27 41 0.102948982 ubox
27 47 0.041871802 ubox
27 50 0.016512631 ubox
28 34 0.021279307 ubox
28 40 0.103005750 ubox
28 46 0.041849921 ubox
28 49 0.016559512 ubox
29 38 0.102281583 ubox
29 39 0.021649134 ubox
29 44 0.040399686 ubox
29 45 0.008994403 ubox
29 48 0.016554929 ubox
30 37 0.104573089 ubox
30 43 0.041329338 ubox
30 47 0.016559693 ubox
31 36 0.103527640 ubox
31 42 0.041012287 ubox
31 46 0.016298133 ubox
32 45 0.003971503 ubox
33 39 0.018395824 ubox
33 45 0.005955725 ubox
34 38 0.018296144 ubox
34 44 0.006312986 ubox
34 60 0.009061750 ubox
35 44 0.008951633 ubox
35 59 0.010634693 ubox
36 45 0.406630576 ubox
37 44 0.418467002 ubox
37 48 0.015446007 ubox
37 59 0.036573790 ubox
37 62 0.808261564 ubox
38 43 0.417167698 ubox
38 47 0.017248516 ubox
38 57 0.024455472 ubox
38 58 0.035215769 ubox
38 61 0.790948220 ubox
39 46 0.017466401 ubox
39 56 0.026608032 ubox
39 57 0.031324800 ubox
39 61 0.291338620 ubox
39 63 0.093947501 ubox
40 45 0.011302356 ubox
40 55 0.028940805 ubox
40 60 0.868991145 ubox
40 62 0.123219573 ubox
41 54 0.031058391 ubox
41 59 0.868588905 ubox
42 55 0.022899036 ubox
43 54 0.023252820 ubox
43 59 0.130268457 ubox
43 62 0.059831541 ubox
44 50 0.003406244 ubox
44 51 0.033041115 ubox
44 52 0.027867109 ubox
44 57 0.871574269 ubox
44 58 0.116161472 ubox
44 61 0.058531559 ubox
45 50 0.032457763 ubox
45 51 0.027614419 ubox
45 56 0.870829384 ubox
45 57 0.093668008 ubox
45 61 0.019150535 ubox
45 63 0.016028721 ubox
46 55 0.875722655 ubox
46 60 0.069149071 ubox
46 62 0.025955697 ubox
47 54 0.882039060 ubox
47 59 0.069187640 ubox
47 62 0.435083356 ubox
48 53 0.873234466 ubox
48 56 0.005039184 ubox
48 58 0.068620731 ubox
48 61 0.436015437 ubox
48 63 0.080486628 ubox
49 55 0.018344063 ubox
49 60 0.436614742 ubox
49 62 0.103382317 ubox
50 54 0.019087493 ubox
50 59 0.436359759 ubox
50 60 0.026029094 ubox
51 59 0.029240598 ubox
51 60 0.103265059 ubox
52 59 0.103011668 ubox
55 63 0.003936223 ubox
56 62 0.005496806 ubox
6 34 0.9500000 lbox
7 33 0.9500000 lbox
8 32 0.9500000 lbox
9 31 0.9500000 lbox
10 30 0.9500000 lbox
11 29 0.9500000 lbox
12 28 0.9500000 lbox
14 27 0.9500000 lbox
15 26 0.9500000 lbox
16 24 0.9500000 lbox
17 23 0.9500000 lbox
37 62 0.9500000 lbox
38 61 0.9500000 lbox
40 60 0.9500000 lbox
41 59 0.9500000 lbox
44 57 0.9500000 lbox
45 56 0.9500000 lbox
46 55 0.9500000 lbox
47 54 0.9500000 lbox
48 53 0.9500000 lbox
showpage
end
%%EOF
