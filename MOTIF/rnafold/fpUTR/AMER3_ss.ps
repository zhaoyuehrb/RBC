%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:28:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUGGCACUGCUGCCUGAGCCUUCCUGGAGUUACUUAAUCCACCCCAGCCCCAGGCACUGAACCACGCGUGCAGACCCCUCGUCCUCAGUUCUGCGGAGACAGAGUCCCCACAGCAUUUCUGCUCCUCCCUCAAGACUGCGGCAGAGCACAGCACCAGUAGACCCCACACACAGCUGGGGCACUGGCAGC\
) } def
/len { sequence length } bind def

/coor [
[212.03392029 264.60647583]
[216.44816589 255.92379761]
[207.87261963 243.61689758]
[199.29705811 231.30999756]
[190.62059021 219.07403564]
[181.84378052 206.90983582]
[168.12225342 201.11596680]
[166.32202148 185.39750671]
[157.54521179 173.23332214]
[148.76840210 161.06912231]
[139.99159241 148.90493774]
[131.21478271 136.74073792]
[122.43796539 124.57654572]
[113.66115570 112.41235352]
[110.02962494 118.63417816]
[103.66742706 123.58245087]
[95.10707855 126.11551666]
[85.33515167 125.33586121]
[75.67858887 120.76194763]
[61.52325439 125.72444916]
[47.36791611 130.68695068]
[33.21258163 135.64945984]
[25.67559433 153.01626587]
[8.14438820 159.26876831]
[-8.11436558 150.88316345]
[-22.09882545 156.30854797]
[-36.08328629 161.73394775]
[-50.06774521 167.15933228]
[-60.13508606 179.36421204]
[-74.79920959 176.75411987]
[-88.78367615 182.17950439]
[-91.05293274 197.36982727]
[-100.62588501 209.38041687]
[-114.92745209 214.98046875]
[-130.11059570 212.66362000]
[-142.09111023 203.05305481]
[-147.64631653 188.73400879]
[-145.28187561 173.55819702]
[-135.63381958 161.60786438]
[-121.29741669 156.09757996]
[-106.12909698 158.50958252]
[-94.20906067 168.19505310]
[-80.22460175 162.76965332]
[-71.15752411 150.95283508]
[-55.49313736 153.17486572]
[-41.50867844 147.74948120]
[-27.52421570 142.32409668]
[-13.53975582 136.89869690]
[-11.30196190 125.69101715]
[-3.84876752 116.86907959]
[7.05187082 112.70514679]
[18.72613907 114.34468842]
[28.25007820 121.49411774]
[42.40541458 116.53161621]
[56.56075287 111.56911469]
[70.71608734 106.60660553]
[73.71393585 99.73180389]
[58.91230774 97.30037689]
[44.11067963 94.86895752]
[29.72594452 99.12094116]
[15.30989838 94.97634888]
[5.37979078 83.73388672]
[3.04720759 68.91635895]
[9.04306030 55.16682434]
[21.48855591 46.79367447]
[36.48391724 46.42062759]
[49.33036423 54.16457748]
[56.00237274 67.59833527]
[67.85599518 76.79026794]
[79.70962524 85.98219299]
[82.70746613 79.10739136]
[76.71177673 65.35778809]
[70.71608734 51.60817719]
[64.72040558 37.85857010]
[58.72471237 24.10895920]
[43.56133652 24.76954269]
[29.18452835 19.90416908]
[17.53863907 10.17084026]
[10.19867802 -3.11409140]
[8.15731430 -18.15394783]
[11.69062614 -32.91471100]
[20.32076263 -45.40010834]
[32.88056564 -53.92159653]
[47.67143250 -57.32670975]
[62.69300842 -55.15493774]
[75.91375732 -47.69998932]
[85.54568481 -35.97009277]
[90.28614044 -21.55161476]
[89.49401855 -6.39453745]
[83.27645874 7.45126867]
[72.47431946 18.11327171]
[78.47000885 31.86288071]
[84.46569824 45.61248779]
[90.46138763 59.36209488]
[96.45707703 73.11170197]
[111.43881989 73.85157013]
[118.76006317 60.75961304]
[126.08130646 47.66765213]
[133.40255737 34.57569504]
[134.86431885 25.54132271]
[140.95339966 21.33005142]
[148.48898315 8.36027813]
[156.02456665 -4.60949373]
[163.56015015 -17.57926559]
[171.09573364 -30.54903793]
[162.48971558 -43.15456390]
[160.21379089 -58.24703979]
[164.71983337 -72.82984924]
[175.11317444 -84.00756073]
[189.33020020 -89.56083679]
[204.54812622 -88.38706207]
[217.74540710 -80.71929169]
[226.30171204 -68.07997894]
[228.51818848 -52.97865295]
[223.95474243 -38.41370392]
[213.51747131 -27.27700615]
[199.27868652 -21.77976227]
[184.06550598 -23.01345444]
[176.52992249 -10.04368305]
[168.99433899 2.92608953]
[161.45875549 15.89586163]
[153.92317200 28.86563301]
[146.49450684 41.89693832]
[139.17326355 54.98889923]
[131.85202026 68.08085632]
[124.53077698 81.17281342]
[137.23239136 73.19353485]
[147.70986938 62.45935822]
[161.87428284 57.52282333]
[176.75387573 59.41962814]
[189.22682190 67.75182343]
[196.67625427 80.77126312]
[197.53924561 95.74641418]
[191.63473511 109.53542328]
[180.20152283 119.24528503]
[165.63832092 122.83882904]
[151.00059509 119.56211090]
[139.35955811 110.10279846]
[125.82534790 103.63554382]
[134.60215759 115.79973602]
[143.37896729 127.96392822]
[152.15577698 140.12812805]
[160.93258667 152.29231262]
[169.70939636 164.45651245]
[178.48622131 176.62069702]
[192.83551025 183.28463745]
[194.00796509 198.13302612]
[202.78477478 210.29722595]
[210.35728455 215.43666077]
[211.60397339 222.73443604]
[220.17951965 235.04135132]
[228.75508118 247.34825134]
[249.63832092 249.66775513]
[261.87557983 266.38641357]
[257.88800049 286.41912842]
[267.25411987 298.13562012]
[276.62023926 309.85208130]
[285.98635864 321.56857300]
[295.35247803 333.28503418]
[306.23538208 333.86627197]
[314.81948853 340.21813965]
[318.40618896 350.04278564]
[316.03494263 360.00347900]
[325.01062012 372.02166748]
[333.98632812 384.03985596]
[342.96200562 396.05804443]
[351.93771362 408.07626343]
[367.45108032 407.73742676]
[380.18161011 416.60949707]
[385.23413086 431.28094482]
[380.66583252 446.11032104]
[368.23336792 455.39541626]
[352.71722412 455.56594849]
[340.08370972 446.55630493]
[335.19064331 431.83090210]
[339.91952515 417.05194092]
[330.94381714 405.03375244]
[321.96813965 393.01556396]
[312.99243164 380.99737549]
[304.01675415 368.97918701]
[285.74307251 362.68798828]
[283.63598633 342.65115356]
[274.26986694 330.93469238]
[264.90374756 319.21820068]
[255.53762817 307.50173950]
[246.17150879 295.78524780]
[236.96928406 297.66638184]
[227.65849304 296.04745483]
[219.53225708 291.11032104]
[213.73483276 283.50067139]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 152]
[3 151]
[4 150]
[5 148]
[6 147]
[8 145]
[9 144]
[10 143]
[11 142]
[12 141]
[13 140]
[14 139]
[19 56]
[20 55]
[21 54]
[22 53]
[25 48]
[26 47]
[27 46]
[28 45]
[30 43]
[31 42]
[71 95]
[72 94]
[73 93]
[74 92]
[75 91]
[96 126]
[97 125]
[98 124]
[99 123]
[101 122]
[102 121]
[103 120]
[104 119]
[105 118]
[155 186]
[156 185]
[157 184]
[158 183]
[159 182]
[163 180]
[164 179]
[165 178]
[166 177]
[167 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
