%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:54:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCUGCUGAGAGUAAAUACUUGGCGCCUCCAGCUGCUGGCCAAGGAGACAGAUGGAGCUCAAGUUGGGAGAUACGCCCUGAGAGCCGAUGAUAGACACAAGUCCAGAUCUCGGAUUUUGAUACUGUAUGUUCCCUGGGUUCCUGAGAGAGGACAUUGAGGAGUAGGAGUCGGCGAUUAAGGAGAUCGGUACAAUUGGGAAGCCUCCUGUCAGAGCUUCCAGCAAUUUCCUCAUCAGAGGUGGACAAGCCCUAUG\
GGCUAAGACAGAGGGUCCUCAGAAAGGAGUGCGGACGCCGUC\
) } def
/len { sequence length } bind def

/coor [
[226.31558228 559.96282959]
[218.82067871 560.23950195]
[214.15536499 574.49554443]
[209.49003601 588.75158691]
[209.79850769 597.83221436]
[204.69966125 603.13287354]
[199.88430786 617.33892822]
[195.06895447 631.54498291]
[190.25360107 645.75103760]
[185.43824768 659.95715332]
[180.62289429 674.16320801]
[189.69366455 686.75292969]
[189.59837341 702.26965332]
[180.37364197 714.74700928]
[165.56657410 719.38714600]
[150.87080383 714.40576172]
[141.93713379 701.71838379]
[142.20075989 686.20355225]
[151.56030273 673.82702637]
[166.41682434 669.34783936]
[171.23217773 655.14178467]
[176.04753113 640.93572998]
[180.86288452 626.72961426]
[185.67823792 612.52355957]
[190.49359131 598.31750488]
[195.23399353 584.08624268]
[199.89932251 569.83020020]
[204.56463623 555.57415771]
[204.95993042 540.57934570]
[201.05220032 526.09735107]
[197.14445496 511.61529541]
[193.23672485 497.13323975]
[182.45094299 486.86114502]
[186.32589722 471.52178955]
[182.41816711 457.03976440]
[177.66456604 451.42739868]
[178.54643250 442.38442993]
[174.79158020 427.86199951]
[171.03672791 413.33956909]
[167.28187561 398.81710815]
[155.39707947 393.91091919]
[148.39103699 382.89871216]
[149.00077820 369.66650391]
[157.22761536 359.03787231]
[153.62606812 344.47665405]
[150.02452087 329.91543579]
[146.42297363 315.35424805]
[142.82144165 300.79302979]
[139.21989441 286.23181152]
[124.87218475 282.23071289]
[114.38383484 271.51388550]
[110.64320374 256.88943481]
[114.75190735 242.26017761]
[125.70291138 231.58203125]
[122.10136414 217.02081299]
[118.49981689 202.45960999]
[114.89827728 187.89839172]
[111.22003174 173.35636902]
[107.46517944 158.83393860]
[103.71032715 144.31149292]
[99.95548248 129.78906250]
[88.18460083 129.63688660]
[76.63030243 124.72492218]
[67.23847198 115.25184631]
[61.80999756 102.21123505]
[61.67957687 87.29973602]
[67.44710541 72.69792938]
[54.64512634 64.88068390]
[41.84314728 57.06343842]
[29.04116821 49.24619675]
[13.23090839 48.65776062]
[6.40091372 35.42142868]
[-6.40106678 27.60418510]
[-19.20304680 19.78693962]
[-32.00502777 11.96969700]
[-44.80700684 4.15245247]
[-57.63665390 12.34766960]
[-72.69087219 14.15248489]
[-86.97738647 9.26210594]
[-97.67988586 -1.30281401]
[-102.71321869 -15.40866375]
[-101.12950134 -30.23962212]
[-113.93148041 -38.05686569]
[-126.73345947 -45.87411118]
[-139.53543091 -53.69135284]
[-152.37844849 -61.44100952]
[-165.26213074 -69.12285614]
[-178.14579773 -76.80471039]
[-191.02947998 -84.48655701]
[-199.95622253 -86.17957306]
[-204.00788879 -92.31790924]
[-216.80986023 -100.13515472]
[-229.61184692 -107.95240021]
[-249.79763794 -107.58538818]
[-258.21115112 -125.02526093]
[-271.17507935 -132.57086182]
[-284.13903809 -140.11647034]
[-300.53103638 -139.63298035]
[-308.91436768 -153.72738647]
[-300.66491699 -167.90055847]
[-284.26907349 -167.57237244]
[-276.59341431 -153.08041382]
[-263.62948608 -145.53480530]
[-250.66554260 -137.98921204]
[-241.11828613 -141.46492004]
[-231.01530457 -139.08631897]
[-223.71984863 -131.39881897]
[-221.79460144 -120.75437927]
[-208.99261475 -112.93713379]
[-196.19064331 -105.11989594]
[-183.34762573 -97.37023926]
[-170.46395874 -89.68838501]
[-157.58027649 -82.00653839]
[-144.69659424 -74.32468414]
[-137.37728882 -73.60162354]
[-131.71820068 -66.49333191]
[-118.91621399 -58.67609024]
[-106.11423492 -50.85884476]
[-93.31225586 -43.04160309]
[-80.84259033 -51.22529984]
[-65.99523926 -53.19145584]
[-51.70807648 -48.49699402]
[-40.83159637 -38.02215195]
[-35.56023788 -23.80597305]
[-36.98976135 -8.64952755]
[-24.18778229 -0.83228362]
[-11.38580322 6.98496056]
[1.41617727 14.80220413]
[14.21815777 22.61944771]
[29.11273384 22.64874268]
[36.85841370 36.44421387]
[49.66039276 44.26145935]
[62.46237183 52.07870483]
[75.26435089 59.89594650]
[88.22829437 52.35034561]
[87.75397491 37.35784531]
[79.58415985 23.80924034]
[86.91513824 10.84366703]
[86.44081879 -4.14883137]
[85.96649170 -19.14133072]
[85.41314697 -34.13111877]
[84.78079987 -49.11778641]
[84.14845276 -64.10445404]
[83.51610565 -79.09111786]
[72.72431183 -90.96195221]
[75.41887665 -106.77709961]
[89.53276062 -114.40452576]
[104.23900604 -107.99313354]
[108.25623322 -92.46118164]
[98.50276947 -79.72346497]
[99.13511658 -64.73680115]
[99.76746368 -49.75013351]
[100.39981842 -34.76346970]
[103.80500793 -28.24428368]
[100.95899200 -19.61565208]
[101.43331146 -4.62315369]
[101.90763855 10.36934471]
[110.04352570 22.84558678]
[102.74647522 36.88352203]
[103.22079468 51.87602234]
[117.18252563 57.35964203]
[127.73307037 46.69728088]
[131.51989746 38.43815994]
[138.45149231 35.97885895]
[149.11386108 25.42831421]
[159.77621460 14.87776852]
[170.43858337 4.32722282]
[181.10093689 -6.22332335]
[191.76330566 -16.77386856]
[202.25750732 -27.49169731]
[212.58090210 -38.37412643]
[209.82901001 -61.80753326]
[225.29777527 -79.26671600]
[248.35531616 -79.35540771]
[257.72531128 -91.06877899]
[267.09530640 -102.78215027]
[276.46530151 -114.49552917]
[285.83529663 -126.20890045]
[285.49926758 -142.24842834]
[297.92163086 -152.40048218]
[313.57305908 -148.87727356]
[320.44705200 -134.38150024]
[313.27053833 -120.03308105]
[297.54867554 -116.83890533]
[288.17868042 -105.12552643]
[278.80868530 -93.41215515]
[269.43869019 -81.69878387]
[260.06869507 -69.98540497]
[263.45510864 -64.01459503]
[265.29833984 -57.37969971]
[265.47808838 -50.47398758]
[263.97302246 -43.70946121]
[260.86267090 -37.49228287]
[256.32318115 -32.19836807]
[250.61753845 -28.15067291]
[244.08024597 -25.59950638]
[237.09770203 -24.70705986]
[230.08544922 -25.53713608]
[223.46333313 -28.05072021]
[213.13993835 -17.16828918]
[212.85061646 -13.69893456]
[210.89523315 -10.19156837]
[207.27119446 -7.41495562]
[202.31385803 -6.11150599]
[191.65148926 4.43903971]
[180.98912048 14.98958588]
[170.32676697 25.54013062]
[159.66439819 36.09067917]
[149.00202942 46.64122391]
[138.39543152 57.24782562]
[127.84488678 67.91018677]
[135.94404602 103.73659515]
[114.47791290 126.03421783]
[118.23276520 140.55665588]
[121.98760986 155.07908630]
[125.74246216 169.60151672]
[130.89698792 177.08375549]
[129.45948792 184.29684448]
[133.06103516 198.85806274]
[136.66258240 213.41926575]
[140.26411438 227.98048401]
[154.93019104 232.32255554]
[165.38471985 243.34976196]
[168.89270020 258.03173828]
[164.60939026 272.40216064]
[153.78109741 282.63027954]
[157.38264465 297.19146729]
[160.98419189 311.75268555]
[164.58573914 326.31390381]
[168.18728638 340.87512207]
[171.78881836 355.43634033]
[186.94255066 364.22131348]
[190.95187378 380.92443848]
[181.80430603 395.06228638]
[185.55915833 409.58471680]
[189.31401062 424.10714722]
[193.06886292 438.62957764]
[196.90020752 453.13201904]
[200.80793762 467.61407471]
[211.87322998 478.92202759]
[207.71876526 493.22549438]
[211.62649536 507.70755005]
[215.53424072 522.18957520]
[219.44197083 536.67163086]
[235.88374329 519.26763916]
[263.13998413 513.01513672]
[294.93859863 522.62207031]
[307.12936401 531.36187744]
[319.32015991 540.10174561]
[331.51092529 548.84161377]
[343.70172119 557.58142090]
[360.09741211 561.89624023]
[360.49002075 578.84564209]
[344.31167603 583.91497803]
[334.96185303 569.77221680]
[322.77108765 561.03234863]
[310.58029175 552.29254150]
[298.38952637 543.55267334]
[286.19873047 534.81286621]
[280.31744385 539.46691895]
[268.55484009 548.77502441]
[262.67355347 553.42907715]
[268.37725830 567.30236816]
[274.08096313 581.17565918]
[278.13748169 584.30914307]
[280.39178467 588.27917480]
[280.82455444 592.27142334]
[279.73800659 595.57891846]
[285.00015259 609.62561035]
[290.33627319 623.64434814]
[295.74624634 637.63482666]
[301.15618896 651.62524414]
[306.56613159 665.61572266]
[318.75991821 675.69647217]
[316.13360596 690.35772705]
[321.54357910 704.34820557]
[336.57571411 708.19708252]
[346.44866943 720.16809082]
[347.36611938 735.65802002]
[338.97525024 748.71069336]
[324.50253296 754.30712891]
[309.51303101 750.29534912]
[299.77050781 738.21801758]
[299.02114868 722.71905518]
[307.55313110 709.75811768]
[302.14318848 695.76770020]
[290.33636475 686.68756104]
[292.57568359 671.02563477]
[287.16574097 657.03521729]
[281.75579834 643.04473877]
[276.34585571 629.05432129]
[271.02807617 623.97332764]
[270.95346069 614.88775635]
[265.69131470 600.84106445]
[260.20767212 586.87933350]
[254.50396729 573.00604248]
[248.80026245 559.13281250]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 28]
[3 27]
[4 26]
[6 25]
[7 24]
[8 23]
[9 22]
[10 21]
[11 20]
[29 244]
[30 243]
[31 242]
[32 241]
[34 239]
[35 238]
[37 237]
[38 236]
[39 235]
[40 234]
[44 231]
[45 230]
[46 229]
[47 228]
[48 227]
[49 226]
[54 221]
[55 220]
[56 219]
[57 218]
[58 216]
[59 215]
[60 214]
[61 213]
[67 134]
[68 133]
[69 132]
[70 131]
[72 129]
[73 128]
[74 127]
[75 126]
[76 125]
[82 119]
[83 118]
[84 117]
[85 116]
[86 114]
[87 113]
[88 112]
[89 111]
[91 110]
[92 109]
[93 108]
[95 104]
[96 103]
[97 102]
[135 160]
[136 159]
[138 157]
[139 156]
[140 155]
[141 153]
[142 152]
[143 151]
[144 150]
[161 211]
[162 210]
[164 209]
[165 208]
[166 207]
[167 206]
[168 205]
[169 204]
[170 200]
[171 199]
[174 188]
[175 187]
[176 186]
[177 185]
[178 184]
[247 259]
[248 258]
[249 257]
[250 256]
[251 255]
[262 297]
[263 296]
[264 295]
[268 294]
[269 293]
[270 291]
[271 290]
[272 289]
[273 288]
[275 286]
[276 285]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
