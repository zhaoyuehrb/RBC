%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:31:26 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ANO3)
} def

/sequence { (\
UAAAGAAUUCAAUAGUGUGAACUUUACUUUACAUAGUUAUAUGGGAAUUUUGCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 26 0.076035938 ubox
1 31 0.028672143 ubox
1 52 0.077717694 ubox
2 9 0.003380205 ubox
2 25 0.083268069 ubox
2 30 0.031350546 ubox
2 49 0.003855811 ubox
2 50 0.019066771 ubox
2 51 0.081862753 ubox
3 8 0.003285812 ubox
3 24 0.084563848 ubox
3 25 0.004622807 ubox
3 29 0.031838143 ubox
3 48 0.003843099 ubox
3 49 0.021420015 ubox
3 50 0.071099653 ubox
3 51 0.114455651 ubox
4 23 0.084906739 ubox
4 24 0.004653828 ubox
4 25 0.021699483 ubox
4 28 0.031914887 ubox
4 48 0.021289093 ubox
4 49 0.061870292 ubox
4 50 0.112903116 ubox
4 51 0.880871893 ubox
5 22 0.084456313 ubox
5 23 0.004095466 ubox
5 24 0.024204925 ubox
5 25 0.014900228 ubox
5 27 0.031599992 ubox
5 48 0.044974449 ubox
5 49 0.107517690 ubox
5 50 0.964467272 ubox
5 51 0.029182719 ubox
6 23 0.025083189 ubox
6 24 0.018353264 ubox
6 25 0.023561223 ubox
6 38 0.011111692 ubox
6 48 0.097488063 ubox
6 49 0.975717896 ubox
6 50 0.026741193 ubox
6 51 0.008050427 ubox
7 18 0.004992990 ubox
7 23 0.019087127 ubox
7 24 0.021497242 ubox
7 37 0.011738937 ubox
7 40 0.011288752 ubox
7 42 0.043670669 ubox
7 48 0.979329545 ubox
7 49 0.020748012 ubox
7 50 0.006541024 ubox
8 17 0.005026584 ubox
8 20 0.003626851 ubox
8 21 0.082778592 ubox
8 36 0.011783342 ubox
8 39 0.011022738 ubox
8 41 0.045100027 ubox
8 44 0.006652450 ubox
8 45 0.056387769 ubox
8 46 0.099033439 ubox
8 47 0.979698121 ubox
9 20 0.094955718 ubox
9 35 0.011504927 ubox
9 43 0.006063571 ubox
9 44 0.082711065 ubox
9 45 0.108498892 ubox
9 46 0.978478467 ubox
10 17 0.016182761 ubox
10 19 0.095237568 ubox
10 43 0.096470245 ubox
10 44 0.124381180 ubox
10 45 0.975201352 ubox
10 52 0.004463073 ubox
11 16 0.014330622 ubox
11 18 0.086843049 ubox
11 24 0.003832733 ubox
11 25 0.017726853 ubox
11 29 0.005213315 ubox
11 30 0.018623703 ubox
11 38 0.527859781 ubox
11 42 0.100537149 ubox
11 51 0.004408786 ubox
12 18 0.007586496 ubox
12 24 0.017848279 ubox
12 28 0.004127983 ubox
12 29 0.018698810 ubox
12 37 0.540440746 ubox
12 40 0.160809487 ubox
12 42 0.502037130 ubox
12 50 0.003881275 ubox
13 17 0.009584334 ubox
13 26 0.008203172 ubox
13 31 0.047506360 ubox
13 35 0.076238395 ubox
13 36 0.527858370 ubox
13 39 0.189168480 ubox
13 41 0.512326062 ubox
13 43 0.120742211 ubox
14 23 0.064992032 ubox
14 25 0.008071625 ubox
14 28 0.068062889 ubox
14 29 0.009132417 ubox
14 30 0.050969454 ubox
14 34 0.056700106 ubox
14 38 0.190231083 ubox
14 40 0.510696263 ubox
14 42 0.119002356 ubox
15 22 0.070185527 ubox
15 24 0.007679881 ubox
15 27 0.073494233 ubox
15 28 0.009898226 ubox
15 29 0.043399419 ubox
15 32 0.006425374 ubox
15 34 0.782639489 ubox
15 37 0.092780068 ubox
15 40 0.026956386 ubox
15 42 0.559414161 ubox
16 21 0.069520939 ubox
16 26 0.073400901 ubox
16 31 0.006584492 ubox
16 33 0.803887534 ubox
16 35 0.034531747 ubox
16 36 0.010260862 ubox
16 39 0.024907178 ubox
16 41 0.565277712 ubox
16 43 0.007368168 ubox
16 54 0.012156751 ubox
17 25 0.072211593 ubox
17 27 0.073880368 ubox
17 30 0.005031009 ubox
17 32 0.805658847 ubox
17 34 0.035523205 ubox
17 38 0.017856068 ubox
17 40 0.566019834 ubox
17 42 0.015926060 ubox
17 53 0.015487765 ubox
18 26 0.073946535 ubox
18 31 0.805411078 ubox
18 33 0.035669676 ubox
18 39 0.559345859 ubox
18 41 0.016689248 ubox
18 52 0.015445904 ubox
19 25 0.073172966 ubox
19 29 0.013177432 ubox
19 30 0.804890987 ubox
19 32 0.035504914 ubox
19 38 0.473427907 ubox
19 40 0.015679679 ubox
19 51 0.015275849 ubox
20 24 0.062419176 ubox
20 28 0.017800944 ubox
20 29 0.802524994 ubox
20 30 0.020942408 ubox
20 37 0.338845354 ubox
20 38 0.308257632 ubox
20 50 0.015249091 ubox
21 28 0.698713237 ubox
21 29 0.021593088 ubox
21 37 0.445789951 ubox
21 49 0.014466747 ubox
22 36 0.548432992 ubox
22 44 0.004114738 ubox
23 35 0.540005564 ubox
23 36 0.019235764 ubox
23 43 0.004036136 ubox
23 47 0.009711302 ubox
24 35 0.034408898 ubox
24 36 0.029215276 ubox
24 46 0.009580692 ubox
24 47 0.007349892 ubox
25 31 0.080466524 ubox
25 35 0.034626715 ubox
25 39 0.004928363 ubox
25 45 0.008300523 ubox
25 46 0.006686240 ubox
26 30 0.074001773 ubox
26 34 0.040296638 ubox
26 37 0.084213656 ubox
26 38 0.003956630 ubox
27 36 0.102731560 ubox
27 44 0.010975900 ubox
27 45 0.012185631 ubox
28 35 0.101270007 ubox
28 36 0.007932436 ubox
28 43 0.008547989 ubox
28 44 0.012237811 ubox
28 45 0.003243965 ubox
28 46 0.019717212 ubox
28 47 0.062356034 ubox
29 35 0.009527352 ubox
29 36 0.005659045 ubox
29 43 0.003701641 ubox
29 44 0.004824106 ubox
29 45 0.020510618 ubox
29 46 0.071652034 ubox
29 47 0.008746431 ubox
30 35 0.005393096 ubox
30 41 0.006841454 ubox
30 44 0.017112698 ubox
30 45 0.047200821 ubox
30 46 0.009275171 ubox
31 37 0.005764215 ubox
31 40 0.006788011 ubox
32 36 0.006644526 ubox
32 43 0.156096037 ubox
32 52 0.008910022 ubox
33 40 0.003842460 ubox
33 42 0.156995627 ubox
33 51 0.008832767 ubox
34 39 0.004228489 ubox
34 41 0.157063091 ubox
34 43 0.009655653 ubox
35 40 0.155037851 ubox
35 42 0.020736105 ubox
35 49 0.009932526 ubox
36 42 0.012347495 ubox
36 48 0.011624817 ubox
36 53 0.022043316 ubox
37 41 0.012163847 ubox
37 44 0.014137785 ubox
37 46 0.004463068 ubox
37 47 0.011630707 ubox
37 52 0.021812564 ubox
38 43 0.015342803 ubox
38 44 0.012091201 ubox
38 45 0.004953632 ubox
38 46 0.011207273 ubox
39 48 0.004954235 ubox
39 51 0.003850796 ubox
40 47 0.005151025 ubox
40 52 0.003230406 ubox
41 48 0.020369553 ubox
41 51 0.003637475 ubox
42 47 0.020735955 ubox
42 54 0.036224330 ubox
43 51 0.004328605 ubox
43 53 0.046505973 ubox
44 50 0.004812013 ubox
44 51 0.004948544 ubox
45 49 0.003352253 ubox
45 50 0.004771996 ubox
45 51 0.043436441 ubox
46 50 0.037253558 ubox
4 51 0.9500000 lbox
5 50 0.9500000 lbox
6 49 0.9500000 lbox
7 48 0.9500000 lbox
8 47 0.9500000 lbox
9 46 0.9500000 lbox
10 45 0.9500000 lbox
11 38 0.9500000 lbox
12 37 0.9500000 lbox
13 36 0.9500000 lbox
15 34 0.9500000 lbox
16 33 0.9500000 lbox
17 32 0.9500000 lbox
18 31 0.9500000 lbox
19 30 0.9500000 lbox
20 29 0.9500000 lbox
21 28 0.9500000 lbox
showpage
end
%%EOF
