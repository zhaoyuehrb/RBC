%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:09:53 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ATP2C2)
} def

/sequence { (\
AACCGGGUCCGGCCCAGGAGGCUUGGGCGCGCGCAGCCAUCCCGGGCCUCGCCGGGGACCUAGGGACGCAGGCAACGCCUGCGCCCGCUCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 8 0.005341191 ubox
3 7 0.005779445 ubox
3 12 0.017864114 ubox
3 55 0.137646775 ubox
3 56 0.198599620 ubox
3 57 0.022868669 ubox
3 64 0.040984608 ubox
3 65 0.009411096 ubox
4 11 0.017963177 ubox
4 31 0.004737310 ubox
4 54 0.138563093 ubox
4 55 0.199495171 ubox
4 56 0.022304963 ubox
4 63 0.052574830 ubox
4 64 0.009412960 ubox
4 87 0.031728585 ubox
5 10 0.017836583 ubox
5 15 0.007065544 ubox
5 30 0.004966955 ubox
5 53 0.134835950 ubox
5 60 0.325018505 ubox
5 61 0.860524709 ubox
5 86 0.017336133 ubox
5 89 0.005317253 ubox
5 90 0.093381874 ubox
5 93 0.021746596 ubox
6 14 0.007105966 ubox
6 52 0.130885783 ubox
6 53 0.203257912 ubox
6 59 0.324740335 ubox
6 60 0.904152976 ubox
6 61 0.014834292 ubox
6 85 0.017089801 ubox
6 88 0.005487999 ubox
6 89 0.092546331 ubox
6 90 0.005253523 ubox
6 92 0.021069434 ubox
6 93 0.021230342 ubox
7 13 0.007129717 ubox
7 28 0.005046169 ubox
7 34 0.003882429 ubox
7 52 0.205887180 ubox
7 59 0.904333654 ubox
7 60 0.014913066 ubox
7 84 0.016789228 ubox
7 88 0.092628330 ubox
7 89 0.003322475 ubox
7 92 0.021482991 ubox
8 12 0.006670207 ubox
8 27 0.005045105 ubox
8 33 0.003855540 ubox
8 51 0.206298756 ubox
8 56 0.370226640 ubox
8 57 0.097967215 ubox
8 58 0.860005200 ubox
8 65 0.005869381 ubox
8 66 0.007946629 ubox
8 83 0.006036824 ubox
8 87 0.084712399 ubox
8 91 0.018712952 ubox
9 26 0.005052149 ubox
9 55 0.583313930 ubox
9 56 0.151723921 ubox
9 57 0.756801560 ubox
9 64 0.008073782 ubox
9 65 0.008843298 ubox
10 25 0.005064248 ubox
10 31 0.006438762 ubox
10 51 0.004817995 ubox
10 54 0.657489650 ubox
10 55 0.136397297 ubox
10 56 0.685096854 ubox
10 63 0.008076704 ubox
10 64 0.008821374 ubox
11 23 0.003680659 ubox
11 24 0.003611680 ubox
11 30 0.008885058 ubox
11 48 0.258943044 ubox
11 53 0.892061013 ubox
11 60 0.048979843 ubox
12 22 0.005132217 ubox
12 28 0.025284711 ubox
12 47 0.259235558 ubox
12 52 0.894173896 ubox
12 59 0.049044938 ubox
13 21 0.005139407 ubox
13 27 0.025423256 ubox
13 46 0.259246911 ubox
13 51 0.893694090 ubox
13 55 0.306884705 ubox
13 56 0.111451378 ubox
13 57 0.052182792 ubox
14 20 0.005118145 ubox
14 26 0.025425767 ubox
14 45 0.259249282 ubox
14 54 0.307970347 ubox
14 55 0.157034199 ubox
14 56 0.052872750 ubox
15 25 0.025425620 ubox
15 44 0.259017196 ubox
15 54 0.156752999 ubox
15 55 0.053484970 ubox
16 23 0.003470480 ubox
16 24 0.025152601 ubox
17 22 0.004909794 ubox
17 23 0.024788092 ubox
17 41 0.004956605 ubox
17 42 0.258718560 ubox
17 43 0.013684616 ubox
17 50 0.064629955 ubox
17 53 0.049258798 ubox
18 22 0.024260943 ubox
18 40 0.004981356 ubox
18 41 0.258896399 ubox
18 42 0.012423869 ubox
18 49 0.028117613 ubox
18 50 0.961549363 ubox
18 52 0.040909107 ubox
19 40 0.257971527 ubox
19 49 0.964706720 ubox
20 38 0.258777676 ubox
20 48 0.965443907 ubox
21 37 0.259216589 ubox
21 47 0.965453970 ubox
22 36 0.258867561 ubox
22 46 0.965446500 ubox
23 35 0.240034167 ubox
23 36 0.013019666 ubox
23 45 0.964383529 ubox
24 31 0.034324637 ubox
24 33 0.159676601 ubox
24 35 0.091218419 ubox
24 39 0.003234578 ubox
24 44 0.962245795 ubox
25 30 0.035480597 ubox
25 32 0.163115345 ubox
25 34 0.128014856 ubox
25 42 0.006953475 ubox
25 43 0.965390070 ubox
26 38 0.017988330 ubox
26 41 0.009299856 ubox
26 42 0.965241292 ubox
27 34 0.148546330 ubox
27 37 0.025213090 ubox
27 40 0.010203698 ubox
27 41 0.964457817 ubox
28 33 0.148669300 ubox
28 36 0.029978403 ubox
29 37 0.934347224 ubox
29 53 0.008021505 ubox
30 36 0.934619133 ubox
30 54 0.005712198 ubox
31 37 0.237143741 ubox
31 52 0.013209619 ubox
31 53 0.004636310 ubox
32 36 0.235711570 ubox
32 51 0.013680117 ubox
33 50 0.013651269 ubox
35 49 0.004019663 ubox
35 89 0.003526274 ubox
36 47 0.013818757 ubox
36 88 0.003769699 ubox
37 46 0.014104100 ubox
37 87 0.003763299 ubox
38 45 0.014078791 ubox
40 58 0.006875084 ubox
41 56 0.011675282 ubox
41 57 0.007520915 ubox
42 55 0.020272123 ubox
42 56 0.007570326 ubox
43 54 0.020319625 ubox
43 55 0.007676608 ubox
44 53 0.020190967 ubox
45 52 0.020031864 ubox
45 53 0.008090567 ubox
46 52 0.008451424 ubox
47 51 0.008730079 ubox
49 54 0.003443988 ubox
49 55 0.011200185 ubox
50 54 0.012962856 ubox
50 55 0.042623188 ubox
54 93 0.012342199 ubox
55 90 0.003438872 ubox
55 92 0.012521482 ubox
55 93 0.017614733 ubox
56 60 0.005328792 ubox
56 89 0.005893906 ubox
56 90 0.016337890 ubox
56 92 0.037739608 ubox
56 93 0.110001350 ubox
57 88 0.007095991 ubox
57 89 0.015337152 ubox
57 90 0.129141629 ubox
57 92 0.116602870 ubox
58 89 0.126952736 ubox
59 65 0.007987314 ubox
60 64 0.007965340 ubox
62 89 0.077118563 ubox
63 85 0.007526632 ubox
63 86 0.991198249 ubox
63 88 0.079901906 ubox
63 89 0.003232544 ubox
63 90 0.008907981 ubox
63 93 0.004590682 ubox
64 84 0.007182247 ubox
64 85 0.992650893 ubox
64 86 0.111162611 ubox
64 89 0.006223302 ubox
64 92 0.004543333 ubox
65 84 0.992769116 ubox
65 85 0.112521096 ubox
65 88 0.006268725 ubox
65 90 0.008330209 ubox
66 89 0.008310605 ubox
67 83 0.999456914 ubox
68 82 0.999978930 ubox
69 81 0.999988526 ubox
70 80 0.999753832 ubox
71 79 0.999985099 ubox
72 78 0.999645826 ubox
73 77 0.935152899 ubox
5 61 0.9500000 lbox
6 60 0.9500000 lbox
7 59 0.9500000 lbox
8 58 0.9500000 lbox
9 57 0.9500000 lbox
10 56 0.9500000 lbox
11 53 0.9500000 lbox
12 52 0.9500000 lbox
13 51 0.9500000 lbox
18 50 0.9500000 lbox
19 49 0.9500000 lbox
20 48 0.9500000 lbox
21 47 0.9500000 lbox
22 46 0.9500000 lbox
23 45 0.9500000 lbox
24 44 0.9500000 lbox
25 43 0.9500000 lbox
26 42 0.9500000 lbox
27 41 0.9500000 lbox
29 37 0.9500000 lbox
30 36 0.9500000 lbox
63 86 0.9500000 lbox
64 85 0.9500000 lbox
65 84 0.9500000 lbox
67 83 0.9500000 lbox
68 82 0.9500000 lbox
69 81 0.9500000 lbox
70 80 0.9500000 lbox
71 79 0.9500000 lbox
72 78 0.9500000 lbox
73 77 0.9500000 lbox
showpage
end
%%EOF
