%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:22:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAUGCACUGCUGACACGUGUGCGCGCGCGCGGCUCCACUGCCGGGCGACCGCGGGAAAAUUCCAAAAAAACUCAAAAAGCCAAUACGAGGCAAAGCCAAAUUUUCAAGCCACAGAUCCCGGGCGGUGGCUUCCUUUCCGCCACUGCCCAAACUGCUGAAGCAGCUCCCGCGAGGACCACCCGAUUUAAUGUGUGCCGACCAUUUCCUUCAGUGCUGGACAGGCUGCUGUGAAGGGACAUCACCUUUUCGCUUU\
UUCCAAG\
) } def
/len { sequence length } bind def

/coor [
[239.35356140 460.56835938]
[231.67301941 447.68389893]
[232.94032288 432.73754883]
[242.68057251 421.33020020]
[257.24374390 417.73657227]
[271.17321777 423.30392456]
[264.11706543 410.06719971]
[257.06094360 396.83047485]
[250.00480652 383.59375000]
[242.94868469 370.35702515]
[235.89254761 357.12030029]
[219.59812927 352.89929199]
[211.24728394 337.89630127]
[216.44647217 321.17733765]
[209.23272705 308.02581787]
[192.87637329 306.46716309]
[180.55639648 295.34628296]
[177.27159119 278.90798950]
[184.51396179 263.60565186]
[177.14364624 250.54124451]
[162.77139282 246.80305481]
[155.11073303 233.65890503]
[159.12913513 218.60931396]
[151.75881958 205.54492188]
[144.38850403 192.48051453]
[137.01817322 179.41612244]
[129.64785767 166.35173035]
[122.27754211 153.28733826]
[107.58575439 150.26220703]
[95.65370941 159.35211182]
[89.36485291 173.86970520]
[74.55194092 175.42756653]
[62.61989975 184.51747131]
[50.68785858 193.60737610]
[38.75581360 202.69728088]
[36.88700104 218.39070129]
[24.41713333 228.10037231]
[8.74435902 226.06575012]
[-0.83294022 213.49391174]
[1.36727679 197.84353638]
[14.03966045 188.39968872]
[29.66591072 190.76524353]
[41.59794998 181.67533875]
[53.52999496 172.58543396]
[65.46203613 163.49552917]
[70.89743805 149.62809753]
[86.56380463 147.42005920]
[98.49584961 138.33015442]
[78.84384155 128.81477356]
[68.79924774 111.15558624]
[70.43152618 92.42724609]
[81.47112274 79.12710571]
[74.89376831 65.64607239]
[68.31641388 52.16503143]
[61.73905563 38.68399429]
[55.16170120 25.20295715]
[48.58434296 11.72191906]
[42.00698853 -1.75911856]
[48.36004639 11.82906055]
[51.05939484 26.58417892]
[49.92853546 41.54148865]
[45.04140854 55.72302628]
[36.71755219 68.20154572]
[25.50121307 78.16115570]
[12.12576103 84.95064545]
[-2.53426743 88.12611389]
[-17.52034187 87.47991943]
[-31.85261536 83.05432129]
[-44.59398651 75.13867188]
[-54.91138077 64.25054169]
[-62.13019943 51.10182953]
[-65.77845001 36.55224991]
[-65.61759949 21.55311203]
[-61.65816498 7.08511734]
[-54.15902328 -5.90576029]
[-43.61050415 -16.57012749]
[-30.70230675 -24.21070671]
[-16.27842140 -28.32792664]
[-1.28193462 -28.65258789]
[13.30662251 -25.16346359]
[26.53038597 -18.09082985]
[13.42220497 -25.38298988]
[0.31402409 -32.67515182]
[-14.22789478 -26.92479134]
[-29.04748917 -31.91614532]
[-37.14739990 -45.29244614]
[-34.70309830 -60.73781586]
[-22.86870956 -70.95941925]
[-7.23206663 -71.13093567]
[4.82368374 -61.17136765]
[7.60618448 -45.78333282]
[20.71436501 -38.49116898]
[33.82254410 -31.19901085]
[40.48258209 -34.64776993]
[32.47511673 -47.33163834]
[24.46765518 -60.01550674]
[16.46019173 -72.69937897]
[8.45272923 -85.38324738]
[0.44526613 -98.06711578]
[-7.56219673 -110.75098419]
[-15.56965923 -123.43485260]
[-23.57712173 -136.11872864]
[-31.58458519 -148.80259705]
[-44.57482147 -156.30284119]
[-51.92558670 -169.37825012]
[-51.58238983 -184.37432861]
[-43.64114761 -197.09976196]
[-30.32139206 -203.99787903]
[-15.34590244 -203.14070129]
[-2.90023398 -194.76780701]
[3.53713155 -181.21937561]
[2.16608787 -166.27966309]
[7.90348387 -152.42028809]
[13.64087963 -138.56091309]
[19.37827492 -124.70153809]
[25.11567116 -110.84216309]
[30.85306740 -96.98278809]
[36.59046173 -83.12341309]
[42.32785797 -69.26403809]
[48.06525421 -55.40466309]
[53.80265045 -41.54528427]
[60.46268463 -44.99404526]
[62.07218552 -59.90744400]
[63.68168640 -74.82084656]
[65.29118347 -89.73424530]
[66.90068817 -104.64764404]
[68.51018524 -119.56104279]
[70.11968231 -134.47444153]
[71.72918701 -149.38784790]
[73.33868408 -164.30125427]
[74.94818878 -179.21464539]
[62.87545395 -188.81947327]
[57.93363190 -203.43391418]
[61.69963455 -218.39456177]
[72.97174072 -228.92750549]
[88.15306854 -231.67175293]
[102.39930725 -225.75160217]
[111.16453552 -213.05615234]
[111.65180206 -197.63648987]
[103.70561981 -184.41296387]
[89.86158752 -177.60514832]
[88.25208282 -162.69174194]
[86.64258575 -147.77835083]
[85.03308868 -132.86494446]
[83.42358398 -117.95154572]
[81.81408691 -103.03814697]
[80.20458221 -88.12474823]
[78.59508514 -73.21134186]
[76.98558807 -58.29794312]
[75.37608337 -43.38454437]
[82.31797028 -40.54548645]
[94.17723083 -49.73014450]
[96.20173645 -34.86737061]
[103.14362335 -32.02830887]
[112.44585419 -43.79557419]
[121.74808502 -55.56283951]
[131.05030823 -67.33010101]
[132.88859558 -83.62589264]
[148.02644348 -89.93286896]
[160.89131165 -79.76296234]
[158.24894714 -63.57809067]
[142.81758118 -58.02787018]
[133.51535034 -46.26060867]
[124.21311188 -34.49334335]
[114.91088104 -22.72607994]
[84.63867188 -5.12611198]
[55.48802567 -8.33647537]
[62.06538010 5.14456272]
[68.64273834 18.62560081]
[75.22009277 32.10663986]
[81.79744720 45.58767700]
[88.37480927 59.06871414]
[94.95216370 72.54975128]
[122.42807770 75.60911560]
[138.17536926 103.75556946]
[151.77209473 97.42080688]
[158.59303284 82.89997864]
[174.23144531 79.31952667]
[186.69087219 89.42606354]
[186.41352844 105.46672058]
[173.61213684 115.13647461]
[158.10685730 111.01752472]
[144.51013184 117.35228729]
[142.21809387 124.49346924]
[157.18737793 125.45280457]
[172.18096924 125.01461792]
[181.19566345 137.00358582]
[176.61177063 151.28602600]
[162.30381775 155.78967285]
[150.36544800 146.70739746]
[137.63398743 138.77583313]
[135.34193420 145.91702271]
[142.71224976 158.98141479]
[150.08256531 172.04580688]
[157.45289612 185.11019897]
[164.82321167 198.17459106]
[172.19352722 211.23898315]
[187.15255737 215.58239746]
[194.44100952 228.93655396]
[190.20803833 243.17092896]
[197.57835388 256.23532104]
[211.33287048 256.78533936]
[222.93188477 263.99551392]
[229.40904236 275.89627075]
[229.17018127 289.33523560]
[222.38423157 300.81207275]
[229.59797668 313.96359253]
[242.85824585 316.21325684]
[252.27159119 325.54562378]
[254.56726074 338.40325928]
[249.12927246 350.06414795]
[256.18542480 363.30087280]
[263.24154663 376.53762817]
[270.29766846 389.77435303]
[277.35382080 403.01107788]
[284.40994263 416.24780273]
[292.09024048 429.13241577]
[300.37716675 441.63546753]
[308.66412354 454.13854980]
[316.95104980 466.64160156]
[333.62924194 474.48159790]
[333.99127197 492.04046631]
[342.42697144 504.44366455]
[350.86264038 516.84686279]
[359.29833984 529.25006104]
[368.87463379 528.23596191]
[378.11160278 530.74658203]
[385.76409912 536.40002441]
[390.81631470 544.39385986]
[392.61663818 553.61865234]
[390.96124268 562.81188965]
[386.11648560 570.73077393]
[393.95013428 583.52270508]
[401.78378296 596.31463623]
[409.61746216 609.10656738]
[417.45111084 621.89855957]
[432.94198608 624.03546143]
[443.39675903 635.66436768]
[443.87893677 651.29455566]
[434.16088867 663.54577637]
[418.83117676 666.63354492]
[405.12802124 659.09979248]
[399.52163696 644.50177002]
[404.65917969 629.73217773]
[396.82550049 616.94024658]
[388.99185181 604.14831543]
[381.15820312 591.35638428]
[373.32452393 578.56439209]
[353.10156250 575.41888428]
[341.67266846 558.08569336]
[346.89517212 537.68572998]
[338.45947266 525.28253174]
[330.02377319 512.87933350]
[321.58807373 500.47616577]
[309.78613281 497.91629028]
[302.65270996 487.67990112]
[304.44799805 474.92852783]
[296.16104126 462.42547607]
[287.87411499 449.92239380]
[279.58718872 437.41934204]
[277.85888672 452.31945801]
[267.77099609 463.42053223]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 216]
[7 215]
[8 214]
[9 213]
[10 212]
[11 211]
[14 207]
[15 206]
[19 201]
[20 200]
[23 197]
[24 196]
[25 195]
[26 194]
[27 193]
[28 192]
[29 48]
[30 47]
[32 45]
[33 44]
[34 43]
[35 42]
[52 173]
[53 172]
[54 171]
[55 170]
[56 169]
[57 168]
[58 167]
[81 93]
[82 92]
[83 91]
[122 150]
[123 149]
[124 148]
[125 147]
[126 146]
[127 145]
[128 144]
[129 143]
[130 142]
[131 141]
[154 165]
[155 164]
[156 163]
[157 162]
[175 183]
[176 182]
[217 260]
[218 259]
[219 258]
[220 257]
[222 254]
[223 253]
[224 252]
[225 251]
[232 248]
[233 247]
[234 246]
[235 245]
[236 244]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
