%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:01:30 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (URGCP-MRPS24)
} def

/sequence { (\
GAGCCGCGGCCGCGCGGAGGAAGCGAAGGAGGCGGGAGCGGAGACCUCGCUGCGCUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 57 0.056539252 ubox
2 56 0.057215454 ubox
3 33 0.010290437 ubox
3 55 0.057163572 ubox
4 17 0.142100888 ubox
4 32 0.010300396 ubox
4 35 0.985170800 ubox
4 36 0.010406690 ubox
4 54 0.041807425 ubox
5 16 0.145009211 ubox
5 25 0.009771674 ubox
5 31 0.010199365 ubox
5 34 0.988021937 ubox
5 35 0.008198427 ubox
5 52 0.003202857 ubox
5 54 0.033920897 ubox
6 15 0.145098276 ubox
6 24 0.010267879 ubox
6 33 0.988115138 ubox
6 53 0.047931966 ubox
7 14 0.145097346 ubox
7 23 0.010267483 ubox
7 32 0.987958682 ubox
7 52 0.047941248 ubox
8 13 0.144448850 ubox
8 51 0.047564681 ubox
9 50 0.047536678 ubox
10 20 0.010598461 ubox
10 29 0.985550859 ubox
10 35 0.003933510 ubox
10 49 0.047290158 ubox
11 19 0.010609516 ubox
11 25 0.035172882 ubox
11 28 0.985243671 ubox
11 34 0.004075401 ubox
12 24 0.046220074 ubox
12 33 0.004084340 ubox
13 23 0.046224066 ubox
13 25 0.972252390 ubox
13 32 0.003928223 ubox
14 24 0.985773304 ubox
15 23 0.985682180 ubox
15 25 0.066926587 ubox
16 24 0.067307330 ubox
17 57 0.018677346 ubox
18 56 0.042165751 ubox
19 55 0.044115302 ubox
19 56 0.011738453 ubox
19 57 0.009275018 ubox
20 55 0.012415921 ubox
20 56 0.004888192 ubox
20 57 0.040311766 ubox
21 56 0.028997437 ubox
22 51 0.060268363 ubox
22 56 0.106413911 ubox
23 33 0.041437805 ubox
23 50 0.061583180 ubox
23 53 0.004599719 ubox
23 55 0.116018087 ubox
24 32 0.041484107 ubox
24 34 0.007560804 ubox
24 49 0.061594285 ubox
24 52 0.004600493 ubox
24 54 0.116050549 ubox
25 33 0.007597766 ubox
25 48 0.061604125 ubox
25 53 0.115217341 ubox
26 47 0.043746363 ubox
27 47 0.044816591 ubox
27 51 0.096508269 ubox
27 56 0.003332010 ubox
28 46 0.062486915 ubox
28 50 0.108457163 ubox
28 51 0.004795818 ubox
28 55 0.003658577 ubox
28 57 0.003430928 ubox
29 45 0.062405875 ubox
29 48 0.122008239 ubox
29 50 0.004011836 ubox
29 57 0.021330748 ubox
30 47 0.122132484 ubox
30 56 0.021133454 ubox
31 46 0.122141360 ubox
31 48 0.004517823 ubox
31 51 0.021728571 ubox
31 55 0.018847173 ubox
31 56 0.034549962 ubox
31 57 0.004171727 ubox
32 39 0.044051204 ubox
32 45 0.121622646 ubox
32 47 0.004270506 ubox
32 50 0.024382226 ubox
32 53 0.016961609 ubox
32 55 0.038084519 ubox
33 38 0.044938240 ubox
33 40 0.120011070 ubox
33 49 0.024590024 ubox
33 52 0.016988875 ubox
33 54 0.039291857 ubox
34 39 0.119777867 ubox
34 46 0.005149063 ubox
34 47 0.004182365 ubox
34 48 0.024479427 ubox
34 51 0.016263572 ubox
34 53 0.039187878 ubox
34 57 0.004105448 ubox
35 45 0.005253139 ubox
35 46 0.015698779 ubox
35 47 0.019293217 ubox
35 50 0.016021314 ubox
35 56 0.004556384 ubox
35 57 0.004397052 ubox
36 45 0.015750789 ubox
36 46 0.019174578 ubox
36 48 0.015969253 ubox
36 55 0.009343160 ubox
36 56 0.007686189 ubox
36 57 0.973678572 ubox
37 47 0.015954243 ubox
37 51 0.049087434 ubox
37 56 0.986839509 ubox
38 46 0.015633667 ubox
38 50 0.050165093 ubox
38 53 0.015595913 ubox
38 55 0.988607330 ubox
39 49 0.050191536 ubox
39 52 0.015642663 ubox
39 54 0.988607571 ubox
40 46 0.006336379 ubox
40 47 0.003862366 ubox
40 48 0.049804977 ubox
40 51 0.015870959 ubox
40 53 0.988333448 ubox
41 45 0.006588721 ubox
41 46 0.019956762 ubox
41 47 0.040453043 ubox
41 48 0.011771062 ubox
41 50 0.016803324 ubox
42 47 0.011797940 ubox
42 51 0.984488405 ubox
43 50 0.983925005 ubox
4 35 0.9500000 lbox
5 34 0.9500000 lbox
6 33 0.9500000 lbox
7 32 0.9500000 lbox
10 29 0.9500000 lbox
11 28 0.9500000 lbox
13 25 0.9500000 lbox
14 24 0.9500000 lbox
15 23 0.9500000 lbox
36 57 0.9500000 lbox
37 56 0.9500000 lbox
38 55 0.9500000 lbox
39 54 0.9500000 lbox
40 53 0.9500000 lbox
42 51 0.9500000 lbox
43 50 0.9500000 lbox
showpage
end
%%EOF
