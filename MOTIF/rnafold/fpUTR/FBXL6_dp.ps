%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:41:05 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FBXL6)
} def

/sequence { (\
AGGAACCGGGGGGUUGUCGGUCUAUAAGCCUCGCCCGUUCCGCUCCCUGGGGCUUCCCCGAGCGCCGUCGGUGGUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 44 0.005784169 ubox
1 48 0.017108850 ubox
1 54 0.008419262 ubox
1 55 0.104223168 ubox
2 18 0.006104532 ubox
2 23 0.010148765 ubox
2 40 0.006276249 ubox
2 41 0.984121048 ubox
2 43 0.003344946 ubox
2 46 0.019265409 ubox
2 47 0.017869817 ubox
2 53 0.009006501 ubox
2 54 0.147820414 ubox
2 55 0.004949779 ubox
2 57 0.028136059 ubox
2 76 0.008091301 ubox
3 17 0.005537583 ubox
3 22 0.010524865 ubox
3 39 0.005625107 ubox
3 40 0.986590571 ubox
3 45 0.019469751 ubox
3 46 0.017623386 ubox
3 53 0.152443590 ubox
3 56 0.028223620 ubox
3 75 0.007363132 ubox
3 76 0.006872287 ubox
4 15 0.009264612 ubox
4 21 0.007441062 ubox
4 38 0.005298145 ubox
4 39 0.986257630 ubox
4 44 0.019249471 ubox
4 55 0.028001573 ubox
4 75 0.006033425 ubox
5 14 0.009872148 ubox
5 21 0.008225190 ubox
5 38 0.984765626 ubox
5 54 0.027107769 ubox
5 72 0.025321667 ubox
5 75 0.011808393 ubox
6 13 0.009942512 ubox
6 20 0.011197194 ubox
6 37 0.926149287 ubox
6 50 0.156168750 ubox
6 51 0.004286396 ubox
6 52 0.003851432 ubox
6 71 0.026065047 ubox
6 74 0.012867823 ubox
7 12 0.009939520 ubox
7 19 0.011198730 ubox
7 33 0.021904248 ubox
7 37 0.337164136 ubox
7 42 0.025890129 ubox
7 49 0.156239897 ubox
7 50 0.003705369 ubox
7 51 0.003656526 ubox
7 70 0.026063738 ubox
7 73 0.012858421 ubox
8 18 0.011155111 ubox
8 32 0.020382654 ubox
8 35 0.862138397 ubox
8 36 0.473348583 ubox
8 41 0.026117075 ubox
8 48 0.156215765 ubox
8 69 0.025226618 ubox
8 72 0.008937120 ubox
9 17 0.010660033 ubox
9 31 0.018534868 ubox
9 32 0.064530795 ubox
9 34 0.862000322 ubox
9 35 0.472471374 ubox
9 36 0.013905435 ubox
9 38 0.004839542 ubox
9 40 0.026062979 ubox
9 47 0.156360200 ubox
9 66 0.004037668 ubox
9 68 0.022643561 ubox
9 69 0.007045103 ubox
10 30 0.016661406 ubox
10 31 0.099348339 ubox
10 32 0.819086812 ubox
10 34 0.462634776 ubox
10 35 0.014189337 ubox
10 36 0.006586607 ubox
10 38 0.004335834 ubox
10 39 0.021678791 ubox
10 46 0.156360647 ubox
10 65 0.004090017 ubox
10 66 0.008802265 ubox
10 68 0.009181906 ubox
11 18 0.005887986 ubox
11 29 0.014469580 ubox
11 30 0.185428039 ubox
11 31 0.854783363 ubox
11 32 0.397616569 ubox
11 34 0.014015734 ubox
11 35 0.006459983 ubox
11 36 0.034338973 ubox
11 38 0.005564306 ubox
11 45 0.156329141 ubox
11 65 0.008389375 ubox
11 66 0.018915845 ubox
12 17 0.005357645 ubox
12 18 0.003739212 ubox
12 29 0.186136123 ubox
12 30 0.945140476 ubox
12 31 0.081098726 ubox
12 32 0.195458748 ubox
12 34 0.006296219 ubox
12 35 0.034681215 ubox
12 36 0.006963071 ubox
12 43 0.003886440 ubox
12 44 0.156128807 ubox
12 65 0.017834822 ubox
12 66 0.013131678 ubox
13 29 0.946135360 ubox
13 30 0.072340302 ubox
13 31 0.189202881 ubox
13 34 0.034747596 ubox
13 35 0.006995042 ubox
13 43 0.156188834 ubox
13 63 0.012936976 ubox
13 65 0.014433190 ubox
14 27 0.295029804 ubox
14 28 0.918147715 ubox
14 33 0.028905318 ubox
14 42 0.149382956 ubox
14 62 0.012617341 ubox
14 64 0.015490844 ubox
15 24 0.042148304 ubox
15 26 0.372876813 ubox
15 27 0.874189887 ubox
15 33 0.028748746 ubox
15 37 0.011468692 ubox
15 42 0.030776475 ubox
15 61 0.004625802 ubox
16 23 0.048678761 ubox
16 25 0.438652428 ubox
16 29 0.024969839 ubox
16 32 0.034768618 ubox
16 34 0.013426785 ubox
16 36 0.011185102 ubox
16 38 0.024572554 ubox
16 41 0.043213710 ubox
16 63 0.003912789 ubox
17 24 0.425696776 ubox
17 28 0.024424737 ubox
17 33 0.013073939 ubox
17 37 0.006496951 ubox
17 61 0.023133243 ubox
18 33 0.007022354 ubox
18 37 0.149142730 ubox
18 42 0.020510442 ubox
18 60 0.023791144 ubox
19 30 0.196110962 ubox
19 31 0.006249067 ubox
19 32 0.006001450 ubox
19 35 0.038561757 ubox
19 36 0.146577449 ubox
19 41 0.025264466 ubox
19 59 0.023788326 ubox
20 29 0.196569641 ubox
20 30 0.007849062 ubox
20 31 0.003891685 ubox
20 34 0.047929610 ubox
20 35 0.143262605 ubox
20 40 0.025242785 ubox
20 58 0.023741792 ubox
21 28 0.181689348 ubox
21 33 0.054185683 ubox
22 28 0.064224288 ubox
23 27 0.058460424 ubox
24 38 0.013901222 ubox
25 37 0.014131028 ubox
26 55 0.022309850 ubox
27 39 0.005166743 ubox
27 54 0.023829661 ubox
28 34 0.072662398 ubox
28 38 0.005359808 ubox
28 53 0.023953099 ubox
28 75 0.006495864 ubox
29 33 0.072178014 ubox
29 37 0.005385458 ubox
29 52 0.023953084 ubox
29 74 0.006709294 ubox
30 51 0.023933501 ubox
30 73 0.006520701 ubox
31 50 0.023869635 ubox
31 74 0.010202585 ubox
32 49 0.023831515 ubox
32 70 0.003256377 ubox
32 73 0.013432947 ubox
33 43 0.010438776 ubox
33 48 0.018002675 ubox
33 69 0.003242096 ubox
33 72 0.015162531 ubox
34 42 0.010526040 ubox
34 71 0.014641650 ubox
35 70 0.013862068 ubox
35 71 0.012801628 ubox
36 42 0.007160624 ubox
36 67 0.009777733 ubox
36 70 0.013884634 ubox
37 41 0.007065500 ubox
37 43 0.013128712 ubox
37 66 0.010060881 ubox
37 69 0.014617285 ubox
38 42 0.012303695 ubox
38 67 0.006106352 ubox
40 74 0.015263757 ubox
41 64 0.052689681 ubox
41 73 0.022347346 ubox
42 48 0.004606393 ubox
42 53 0.165345337 ubox
42 63 0.829256329 ubox
42 65 0.011508072 ubox
42 72 0.045238656 ubox
42 75 0.370396330 ubox
43 51 0.006900167 ubox
43 52 0.165428588 ubox
43 62 0.833125009 ubox
43 64 0.011623190 ubox
43 71 0.046235045 ubox
43 74 0.386268527 ubox
44 50 0.007913391 ubox
44 51 0.159307551 ubox
44 52 0.007113744 ubox
44 61 0.832701042 ubox
44 70 0.041411498 ubox
44 71 0.010531690 ubox
44 73 0.368776475 ubox
44 74 0.054413169 ubox
45 49 0.008672665 ubox
45 50 0.156749351 ubox
45 51 0.043925613 ubox
45 52 0.003863423 ubox
45 60 0.818396520 ubox
45 70 0.022388320 ubox
45 71 0.169028813 ubox
45 73 0.099949453 ubox
45 74 0.055872739 ubox
46 50 0.043774599 ubox
46 51 0.003996535 ubox
46 70 0.168833497 ubox
46 71 0.357343175 ubox
46 73 0.056257734 ubox
46 74 0.013730870 ubox
47 62 0.045450995 ubox
47 70 0.356763598 ubox
47 71 0.059902920 ubox
47 73 0.013694814 ubox
48 60 0.167530075 ubox
48 61 0.043411905 ubox
48 67 0.330195310 ubox
48 70 0.058178523 ubox
49 56 0.003526830 ubox
49 57 0.020172561 ubox
49 58 0.307611326 ubox
49 59 0.825933688 ubox
49 66 0.397657959 ubox
49 69 0.054597555 ubox
50 56 0.020215871 ubox
50 57 0.307832128 ubox
50 58 0.826615415 ubox
50 59 0.073101736 ubox
50 65 0.397773357 ubox
50 66 0.046970566 ubox
50 68 0.045691613 ubox
51 55 0.013119787 ubox
51 56 0.306882265 ubox
51 57 0.826559026 ubox
51 58 0.073248002 ubox
51 59 0.004819524 ubox
51 65 0.047113757 ubox
51 66 0.054592806 ubox
51 76 0.010633590 ubox
52 56 0.813219999 ubox
52 57 0.072456771 ubox
52 58 0.004797273 ubox
52 63 0.400597403 ubox
52 65 0.054630586 ubox
52 75 0.011374653 ubox
53 62 0.400591432 ubox
53 64 0.054583943 ubox
53 74 0.011365369 ubox
54 61 0.394786752 ubox
54 62 0.049354767 ubox
54 73 0.011140102 ubox
55 60 0.358689027 ubox
55 61 0.066786554 ubox
55 74 0.024602544 ubox
56 60 0.079365455 ubox
56 73 0.035335282 ubox
56 74 0.209061795 ubox
57 71 0.003539324 ubox
57 73 0.210847473 ubox
57 74 0.004169603 ubox
58 71 0.216125109 ubox
59 70 0.216214920 ubox
60 69 0.216354271 ubox
60 76 0.291118732 ubox
61 68 0.212412648 ubox
61 75 0.297268394 ubox
62 68 0.014796424 ubox
62 75 0.010679379 ubox
63 67 0.027891861 ubox
63 70 0.003333914 ubox
63 73 0.313297482 ubox
63 74 0.008808928 ubox
64 69 0.006991071 ubox
64 72 0.373751609 ubox
64 75 0.761020360 ubox
65 71 0.377472791 ubox
65 74 0.794766048 ubox
66 70 0.374760969 ubox
66 73 0.794647582 ubox
67 72 0.514752517 ubox
68 74 0.006010194 ubox
69 73 0.007770885 ubox
70 76 0.006644464 ubox
71 75 0.004463088 ubox
2 41 0.9500000 lbox
3 40 0.9500000 lbox
4 39 0.9500000 lbox
5 38 0.9500000 lbox
6 37 0.9500000 lbox
8 35 0.9500000 lbox
9 34 0.9500000 lbox
10 32 0.9500000 lbox
11 31 0.9500000 lbox
12 30 0.9500000 lbox
13 29 0.9500000 lbox
14 28 0.9500000 lbox
15 27 0.9500000 lbox
42 63 0.9500000 lbox
43 62 0.9500000 lbox
44 61 0.9500000 lbox
45 60 0.9500000 lbox
49 59 0.9500000 lbox
50 58 0.9500000 lbox
51 57 0.9500000 lbox
52 56 0.9500000 lbox
64 75 0.9500000 lbox
65 74 0.9500000 lbox
66 73 0.9500000 lbox
showpage
end
%%EOF
