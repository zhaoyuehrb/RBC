%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:16:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGCAGCUUGAGGCGCCCGCUUUCCGUCGCUCCGGCCCGCCUCGCCGCAAGGCUUUCUGGGAGCCGUAGUCCCCACGUCUGGCCUCUCCGGCGCCAGCGGCAGCGCGCGCCCACCCGCGGAACUACAGAGCGUGGCGCACAGCGCGCGAGGCUCCUCCGCCUCGCCUUCCCUCCCCGCCCGCGCGCCCGCCCCAGUUAUC\
) } def
/len { sequence length } bind def

/coor [
[61.26019287 86.87255096]
[73.74353790 95.19778442]
[88.30495453 98.79851532]
[77.25239563 88.65746307]
[68.80609131 85.15757751]
[66.10791779 78.27050018]
[55.21520996 67.95793915]
[46.82464218 64.32647705]
[44.23443604 57.39806747]
[33.50423050 46.91652679]
[20.61619759 46.28572083]
[11.89432335 37.32791901]
[11.62648010 25.22925949]
[1.06140423 14.58129501]
[-9.50367165 3.93332911]
[-20.06874847 -6.71463633]
[-30.63382339 -17.36260223]
[-41.28178787 -27.92767715]
[-52.01199341 -38.40921783]
[-62.74219894 -48.89076233]
[-73.47240448 -59.37230301]
[-84.20260620 -69.85384369]
[-95.41231537 -79.82091522]
[-107.07687378 -89.25160980]
[-118.74143982 -98.68230438]
[-130.40600586 -108.11299133]
[-139.05447388 -111.07833099]
[-142.17765808 -117.78337860]
[-153.69340515 -127.39522552]
[-168.08769226 -122.22299957]
[-183.03950500 -124.93224335]
[-194.55122375 -134.69682312]
[-199.59597778 -148.81794739]
[-196.91322327 -163.46952820]
[-208.42897034 -173.08137512]
[-219.94471741 -182.69322205]
[-235.49731445 -185.59617615]
[-240.31027222 -199.69174194]
[-251.82601929 -209.30358887]
[-263.34176636 -218.91543579]
[-274.93225098 -228.43699646]
[-286.59683228 -237.86769104]
[-295.24530029 -240.83302307]
[-298.36849976 -247.53807068]
[-309.88424683 -257.14993286]
[-321.39999390 -266.76177979]
[-332.91571045 -276.37362671]
[-344.43145752 -285.98547363]
[-357.32940674 -285.60818481]
[-366.72399902 -293.85772705]
[-367.93557739 -305.89855957]
[-379.29968262 -315.68920898]
[-390.66378784 -325.47985840]
[-401.45626831 -324.04699707]
[-411.05609131 -328.69873047]
[-416.39471436 -337.67962646]
[-415.91464233 -347.89648438]
[-426.96719360 -358.03753662]
[-438.01974487 -368.17858887]
[-449.07229614 -378.31964111]
[-460.20376587 -388.37402344]
[-471.41348267 -398.34109497]
[-482.62319946 -408.30816650]
[-493.91043091 -418.18731689]
[-505.27456665 -427.97799683]
[-516.63867188 -437.76864624]
[-534.05316162 -436.14996338]
[-546.99816895 -447.40219116]
[-547.78790283 -464.19778442]
[-559.30364990 -473.80963135]
[-575.54479980 -476.08059692]
[-581.44702148 -491.38079834]
[-570.93859863 -503.97070312]
[-554.82971191 -500.89886475]
[-549.69177246 -485.32537842]
[-538.17602539 -475.71353149]
[-525.62603760 -478.65414429]
[-513.49365234 -473.75396729]
[-506.29495239 -462.59527588]
[-506.84802246 -449.13275146]
[-495.48388672 -439.34210205]
[-484.11978149 -429.55145264]
[-476.99456787 -427.56567383]
[-472.65612793 -419.51788330]
[-461.44641113 -409.55078125]
[-450.23669434 -399.58370972]
[-443.14340210 -397.48681641]
[-438.93124390 -389.37222290]
[-427.87869263 -379.23114014]
[-416.82614136 -369.09008789]
[-405.77359009 -358.94903564]
[-386.64538574 -356.15280151]
[-380.87313843 -336.84396362]
[-369.50903320 -327.05331421]
[-358.14489746 -317.26266479]
[-340.75531006 -314.92852783]
[-334.81961060 -297.50122070]
[-323.30386353 -287.88937378]
[-311.78814697 -278.27749634]
[-300.27239990 -268.66564941]
[-288.75665283 -259.05380249]
[-277.16613770 -249.53225708]
[-265.50158691 -240.10156250]
[-258.31777954 -238.33944702]
[-253.72990417 -230.43118286]
[-242.21417236 -220.81933594]
[-230.69842529 -211.20748901]
[-215.96949768 -208.99201965]
[-210.33287048 -194.20896912]
[-198.81712341 -184.59710693]
[-187.30137634 -174.98526001]
[-173.36546326 -180.24414062]
[-158.56994629 -177.80519104]
[-146.90464783 -168.22460938]
[-141.56602478 -153.99803162]
[-144.08155823 -138.91096497]
[-132.56581116 -129.29911804]
[-120.97531128 -119.77755737]
[-109.31074524 -110.34686279]
[-97.64617920 -100.91616821]
[-85.98162079 -91.48548126]
[-86.42623901 -106.47888947]
[-76.24449921 -117.49398041]
[-61.26246643 -118.22785187]
[-50.05294037 -108.26057434]
[-49.03009033 -93.29548645]
[-58.77919388 -81.89571381]
[-73.72106934 -80.58404541]
[-62.99085999 -70.10250854]
[-52.26065826 -59.62096405]
[-41.53045273 -49.13942337]
[-30.80024719 -38.65788269]
[-23.81302452 -36.23080826]
[-19.98585892 -27.92767715]
[-9.42078209 -17.27971268]
[1.14429367 -6.63174677]
[11.70936966 4.01621866]
[22.27444649 14.66418362]
[39.42874146 18.34879303]
[43.98577499 36.18632126]
[54.71597672 46.66786194]
[65.52776337 57.06522751]
[76.42047882 67.37778473]
[87.39344788 77.60490417]
[98.44600677 87.74595642]
[111.98226166 94.20891571]
[126.81720734 96.42798615]
[141.65216064 98.64705658]
[156.48710632 100.86613464]
[171.32205200 103.08520508]
[186.15701294 105.30428314]
[200.99195862 107.52335358]
[213.54690552 97.92395020]
[229.20114136 100.09661865]
[238.66728210 112.75236511]
[236.32922363 128.38275146]
[223.57409668 137.71455383]
[207.96929932 135.21136475]
[198.77288818 122.35829926]
[183.93792725 120.13922882]
[169.10298157 117.92015839]
[154.26803589 115.70108032]
[139.43309021 113.48200989]
[124.59813690 111.26293182]
[109.76319122 109.04386139]
[105.91213226 115.47965240]
[118.78370667 123.18176270]
[131.65528870 130.88388062]
[144.52685547 138.58598328]
[157.39830017 146.28831482]
[149.69577026 159.15963745]
[136.82473755 151.45756531]
[123.95317078 143.75544739]
[111.08159637 136.05334473]
[98.21002197 128.35122681]
[94.35896301 134.78701782]
[103.32678223 146.81108093]
[112.29460907 158.83514404]
[127.56388092 164.81689453]
[129.75030518 181.06962585]
[116.60468292 190.87393188]
[101.65009308 184.14398193]
[100.27054596 167.80296326]
[91.30271912 155.77890015]
[82.33489990 143.75483704]
[84.44025421 158.60635376]
[75.38232422 170.56268311]
[63.27693558 179.42042542]
[49.14030838 184.43597412]
[34.15918732 185.18830872]
[19.59120560 181.61424255]
[6.65931368 174.01383972]
[-3.55088162 163.02511597]
[-10.18225574 149.57057190]
[-12.67811775 134.77967834]
[-10.82894611 119.89409637]
[-4.78997469 106.16343689]
[4.93183756 94.74037933]
[17.52036476 86.58384705]
[31.91882515 82.37857056]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 145]
[4 144]
[6 143]
[7 142]
[9 141]
[10 140]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 132]
[19 131]
[20 130]
[21 129]
[22 128]
[23 121]
[24 120]
[25 119]
[26 118]
[28 117]
[29 116]
[34 111]
[35 110]
[36 109]
[38 107]
[39 106]
[40 105]
[41 103]
[42 102]
[44 101]
[45 100]
[46 99]
[47 98]
[48 97]
[51 95]
[52 94]
[53 93]
[57 91]
[58 90]
[59 89]
[60 88]
[61 86]
[62 85]
[63 84]
[64 82]
[65 81]
[66 80]
[69 76]
[70 75]
[146 165]
[147 164]
[148 163]
[149 162]
[150 161]
[151 160]
[152 159]
[176 185]
[177 184]
[178 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
