%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:47:55 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NUPR2)
} def

/sequence { (\
GGAACUCGAGGCGGGGCUGCUGGGUCUUCCAGGAGCGCCCAGACGCGGGCAGGUGGCCGCCGGUGGCCACAGGCCUGGGCAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.107821769 ubox
1 18 0.008968078 ubox
1 30 0.009954909 ubox
1 39 0.022055578 ubox
1 40 0.022428524 ubox
1 75 0.003250197 ubox
2 6 0.070148250 ubox
2 17 0.009733904 ubox
2 29 0.009961666 ubox
2 38 0.022298697 ubox
2 39 0.021513562 ubox
2 74 0.003241894 ubox
3 28 0.009691790 ubox
4 25 0.008195237 ubox
4 27 0.005114596 ubox
5 11 0.060729559 ubox
5 14 0.039135813 ubox
5 15 0.667545475 ubox
5 16 0.022934388 ubox
5 24 0.009521435 ubox
5 35 0.055026483 ubox
5 42 0.040506674 ubox
5 49 0.005729911 ubox
5 78 0.025176862 ubox
5 79 0.158871024 ubox
5 82 0.119720961 ubox
5 83 0.047202062 ubox
6 10 0.055259942 ubox
6 13 0.029204149 ubox
6 14 0.668585933 ubox
6 15 0.052107140 ubox
6 23 0.009477433 ubox
6 34 0.055317071 ubox
6 41 0.040313917 ubox
6 43 0.143977056 ubox
6 48 0.006202409 ubox
6 77 0.013067285 ubox
6 78 0.150865715 ubox
6 79 0.126536802 ubox
6 81 0.112775872 ubox
6 82 0.038810425 ubox
6 83 0.049429471 ubox
7 13 0.670062081 ubox
7 14 0.065035694 ubox
7 15 0.019685007 ubox
7 22 0.009400297 ubox
7 33 0.055345582 ubox
7 42 0.155743033 ubox
7 45 0.187146768 ubox
7 47 0.022336587 ubox
7 77 0.146158989 ubox
7 78 0.178552964 ubox
7 82 0.085797898 ubox
8 12 0.627347187 ubox
8 21 0.006675147 ubox
8 44 0.197381099 ubox
8 46 0.025466648 ubox
8 76 0.068609733 ubox
9 76 0.206826775 ubox
10 18 0.006657989 ubox
10 21 0.006351597 ubox
10 30 0.055310650 ubox
10 39 0.137620161 ubox
10 40 0.063329670 ubox
10 58 0.003207620 ubox
10 75 0.217016598 ubox
11 17 0.006796151 ubox
11 20 0.007529775 ubox
11 29 0.055277623 ubox
11 38 0.137794378 ubox
11 39 0.045496129 ubox
11 46 0.082478668 ubox
11 57 0.003211981 ubox
11 74 0.216991586 ubox
11 80 0.397375730 ubox
12 16 0.006752980 ubox
12 19 0.007656768 ubox
12 37 0.137771991 ubox
12 45 0.084926297 ubox
12 56 0.003208056 ubox
12 73 0.216790380 ubox
12 77 0.009390730 ubox
12 79 0.397518913 ubox
13 18 0.005834842 ubox
13 27 0.013451572 ubox
13 28 0.049976529 ubox
13 36 0.056426162 ubox
13 39 0.303062729 ubox
13 40 0.606335665 ubox
13 44 0.041083794 ubox
13 76 0.008337133 ubox
14 26 0.013175514 ubox
14 27 0.053388163 ubox
14 38 0.308040461 ubox
14 39 0.607698016 ubox
14 40 0.026025282 ubox
14 75 0.008387765 ubox
15 25 0.012491083 ubox
15 26 0.053782452 ubox
15 38 0.607187330 ubox
15 39 0.025902773 ubox
15 74 0.008364435 ubox
16 25 0.053907298 ubox
16 36 0.994923401 ubox
16 38 0.024157826 ubox
16 46 0.014013941 ubox
16 80 0.016210063 ubox
17 23 0.012011605 ubox
17 24 0.054057811 ubox
17 35 0.997431078 ubox
17 37 0.022460187 ubox
17 45 0.014836543 ubox
17 79 0.016228880 ubox
17 82 0.022982305 ubox
18 22 0.010849709 ubox
18 23 0.053030167 ubox
18 34 0.994348650 ubox
18 45 0.008704797 ubox
18 78 0.015107790 ubox
18 81 0.023069268 ubox
19 36 0.008414543 ubox
19 44 0.017378861 ubox
19 80 0.023065908 ubox
20 32 0.997383838 ubox
20 33 0.008845027 ubox
20 35 0.008195256 ubox
20 42 0.029339406 ubox
20 79 0.021141133 ubox
21 31 0.997369854 ubox
21 32 0.006997007 ubox
21 34 0.007089369 ubox
21 41 0.031934107 ubox
21 78 0.016185291 ubox
22 29 0.005008262 ubox
22 30 0.996759559 ubox
22 40 0.036044784 ubox
23 28 0.005540423 ubox
23 29 0.995074150 ubox
23 30 0.043780681 ubox
23 39 0.036053096 ubox
23 75 0.003418109 ubox
24 28 0.644576747 ubox
24 29 0.059814286 ubox
24 38 0.036051862 ubox
24 74 0.003428191 ubox
25 37 0.035690314 ubox
25 73 0.003430179 ubox
26 33 0.003867112 ubox
26 35 0.025532309 ubox
26 72 0.003421451 ubox
27 32 0.003580252 ubox
27 34 0.025245622 ubox
27 35 0.023365100 ubox
27 71 0.003172146 ubox
28 33 0.023238335 ubox
28 34 0.024840064 ubox
29 33 0.024802302 ubox
37 46 0.004975190 ubox
37 50 0.214580696 ubox
37 80 0.682098585 ubox
38 45 0.005207795 ubox
38 49 0.214806319 ubox
38 79 0.682752429 ubox
38 83 0.012426146 ubox
39 48 0.214835540 ubox
39 78 0.682687889 ubox
39 79 0.011689279 ubox
39 82 0.012690527 ubox
39 83 0.027793698 ubox
40 47 0.214712059 ubox
40 77 0.668111329 ubox
40 78 0.018059041 ubox
40 82 0.048888803 ubox
41 76 0.504338811 ubox
42 75 0.252892156 ubox
44 62 0.003390090 ubox
44 65 0.025029818 ubox
44 77 0.021202477 ubox
45 54 0.003659583 ubox
45 60 0.003933992 ubox
45 64 0.025501317 ubox
45 74 0.049543660 ubox
45 76 0.014801073 ubox
45 80 0.203338831 ubox
46 53 0.003781696 ubox
46 59 0.004246138 ubox
46 63 0.025534855 ubox
46 73 0.049649701 ubox
46 77 0.670068441 ubox
46 79 0.195821937 ubox
47 58 0.004083544 ubox
47 75 0.041033792 ubox
47 76 0.828056405 ubox
48 57 0.003904382 ubox
48 58 0.003575437 ubox
48 61 0.025541222 ubox
48 74 0.034303616 ubox
48 75 0.941676374 ubox
49 57 0.003797773 ubox
49 60 0.025556831 ubox
49 74 0.973844974 ubox
50 56 0.003979616 ubox
50 59 0.025501080 ubox
50 73 0.974330365 ubox
50 77 0.004835241 ubox
51 76 0.004881212 ubox
52 58 0.021394774 ubox
52 68 0.011565138 ubox
52 75 0.004887993 ubox
53 57 0.021060463 ubox
53 67 0.011580036 ubox
53 70 0.999242018 ubox
53 74 0.004601140 ubox
54 66 0.011568002 ubox
54 69 0.999318010 ubox
54 73 0.003717600 ubox
55 68 0.999562824 ubox
56 64 0.011577619 ubox
56 67 0.999569860 ubox
57 63 0.011639446 ubox
57 66 0.999568220 ubox
58 62 0.011612530 ubox
58 65 0.999038920 ubox
59 64 0.647148345 ubox
59 80 0.004136959 ubox
60 79 0.004137570 ubox
61 78 0.004129354 ubox
65 75 0.007595314 ubox
66 74 0.025327827 ubox
67 73 0.025383496 ubox
68 72 0.025207715 ubox
75 82 0.003205921 ubox
13 40 0.9500000 lbox
14 39 0.9500000 lbox
15 38 0.9500000 lbox
16 36 0.9500000 lbox
17 35 0.9500000 lbox
18 34 0.9500000 lbox
20 32 0.9500000 lbox
21 31 0.9500000 lbox
22 30 0.9500000 lbox
23 29 0.9500000 lbox
46 77 0.9500000 lbox
47 76 0.9500000 lbox
48 75 0.9500000 lbox
49 74 0.9500000 lbox
50 73 0.9500000 lbox
53 70 0.9500000 lbox
54 69 0.9500000 lbox
55 68 0.9500000 lbox
56 67 0.9500000 lbox
57 66 0.9500000 lbox
58 65 0.9500000 lbox
showpage
end
%%EOF
