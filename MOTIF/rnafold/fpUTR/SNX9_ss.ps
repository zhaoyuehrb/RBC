%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:57:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAUGGGAGGCUCGGCCGACAGGGGCGGGGGCCGCGCAGCCGGGGACUUUCAGGAACUGCAGGAGCGUGCGGCGCGGGAGUAGCCGAGCGCCCAGCGGCUGGGCCUGAGCGUCGAGACUCGGGGCCGAGGCGGAGGAGCGGCCGCCGCGCCGGGGCCCAGCCGGAGCCGCCGCCCUCGCCCUUGCCUUUGCCUGCGCGGCUCAGAAUCACCAUCCGCGGCGCGGGAGACGAGCCGGCCGUCCCGGGCCGGGGGAC\
CCGCCCGCC\
) } def
/len { sequence length } bind def

/coor [
[331.39257812 586.35168457]
[336.86248779 572.38458252]
[349.44766235 564.22290039]
[364.43118286 564.92559814]
[376.19650269 574.22821045]
[373.19387817 559.53179932]
[370.19128418 544.83538818]
[367.18865967 530.13897705]
[364.09896851 515.46063232]
[360.92233276 500.80084229]
[357.74569702 486.14108276]
[353.27273560 480.28906250]
[354.61941528 471.28872681]
[351.61679077 456.59231567]
[348.61416626 441.89590454]
[345.61154175 427.19949341]
[342.52188110 412.52114868]
[339.34524536 397.86138916]
[317.25991821 383.57025146]
[318.25164795 356.76623535]
[308.32528687 345.52044678]
[298.39895630 334.27468872]
[288.47259521 323.02890015]
[278.54626465 311.78311157]
[268.61990356 300.53732300]
[258.69357300 289.29153442]
[248.76722717 278.04574585]
[238.84088135 266.79995728]
[228.91453552 255.55418396]
[218.98818970 244.30839539]
[209.06184387 233.06262207]
[199.13549805 221.81683350]
[184.91233826 217.39517212]
[181.58079529 201.92871094]
[171.65444946 190.68292236]
[161.72810364 179.43713379]
[146.94287109 181.02934265]
[133.90089417 173.52128601]
[127.70832062 159.61067200]
[130.93142700 144.54687500]
[121.00507355 133.30108643]
[111.07872772 122.05531311]
[101.15238190 110.80952454]
[104.47205353 125.43757629]
[111.48963928 138.69477844]
[112.56430817 153.65623474]
[107.51349640 167.78030396]
[97.19523621 178.66760254]
[83.36236572 184.46862793]
[68.36481476 184.19789124]
[54.75033188 177.90139771]
[44.83173370 166.64877319]
[40.29397964 152.35162354]
[41.90793991 137.43869019]
[49.39942932 124.44340515]
[61.49509048 115.57369995]
[76.08885956 112.10643005]
[61.61932373 108.15261841]
[47.14978790 104.19881439]
[32.68025589 100.24500275]
[17.32866478 104.07112885]
[7.09093857 93.25270844]
[-7.37859535 89.29890442]
[-16.44755363 90.05628967]
[-21.99569321 85.21150970]
[-36.41733932 81.08644867]
[-50.83898544 76.96138000]
[-65.26062775 72.83631897]
[-80.65650177 76.48018646]
[-90.76525879 65.54116058]
[-105.18690491 61.41609955]
[-119.60855103 57.29103470]
[-134.03019714 53.16597366]
[-148.47604370 49.12646484]
[-162.94557190 45.17266083]
[-178.66061401 49.85984039]
[-190.38983154 38.39871979]
[-186.06723022 22.57951927]
[-170.13951111 18.67567444]
[-158.99176025 30.70312500]
[-144.52223206 34.65693283]
[-137.26582336 33.39270401]
[-129.90513611 38.74432755]
[-115.48348236 42.86938858]
[-101.06183624 46.99445343]
[-86.64019012 51.11951447]
[-72.27585602 47.18059540]
[-61.13556671 58.41467285]
[-46.71392059 62.53973770]
[-32.29227829 66.66480255]
[-17.87063217 70.78986359]
[-3.42478800 74.82936859]
[11.04474545 78.78318024]
[25.36137772 74.67424774]
[36.63406372 85.77547455]
[51.10359573 89.72927856]
[65.57312775 93.68308258]
[80.04266357 97.63689423]
[91.63429260 88.11669922]
[90.56823730 73.15463257]
[89.50218201 58.19256210]
[88.43612671 43.23049164]
[87.37007141 28.26842117]
[86.30400848 13.30635166]
[85.23795319 -1.65571773]
[84.17189789 -16.61778641]
[72.51365662 -26.94847870]
[71.64566803 -42.13733292]
[81.56624603 -53.18801880]
[80.50019073 -68.15008545]
[79.43413544 -83.11215973]
[70.60756683 -70.98401642]
[56.36656189 -66.27300262]
[42.04862976 -70.74478149]
[33.02012634 -82.72335052]
[32.66492462 -97.71914673]
[41.11615372 -110.11175537]
[55.20630264 -115.25643158]
[69.65438843 -111.22496796]
[79.04479980 -99.52961731]
[79.40042114 -114.52539825]
[79.75604248 -129.52117920]
[80.02276611 -144.51881409]
[80.20058441 -159.51776123]
[80.37841034 -174.51670837]
[80.55622864 -189.51565552]
[80.73405457 -204.51460266]
[67.23677826 -211.73139954]
[58.64894867 -224.40055847]
[56.94398117 -239.61080933]
[62.51366806 -253.86694336]
[74.07813263 -263.89300537]
[88.97994995 -267.38507080]
[103.79478455 -263.54067993]
[115.11830139 -253.24328613]
[120.34843445 -238.85911560]
[118.28334808 -223.69355774]
[109.39756775 -211.23155212]
[95.73299408 -204.33677673]
[95.55517578 -189.33782959]
[95.37734985 -174.33888245]
[95.19953156 -159.33993530]
[95.02171326 -144.34098816]
[98.07467651 -137.63777161]
[94.75182343 -129.16555786]
[94.39620209 -114.16977692]
[94.04058838 -99.17399597]
[94.39620209 -84.17821503]
[95.46225739 -69.21614075]
[96.52832031 -54.25407410]
[107.91546631 -44.72157669]
[109.20973969 -29.56309700]
[99.13396454 -17.68384361]
[100.20002747 -2.72177434]
[101.26608276 12.24029541]
[102.33213806 27.20236397]
[103.39819336 42.16443253]
[104.46424866 57.12650299]
[105.53030396 72.08856964]
[106.59636688 87.05064392]
[112.39817047 100.88317871]
[122.32451630 112.12896729]
[132.25085449 123.37474823]
[142.17720032 134.62052917]
[157.52461243 133.29264832]
[170.55874634 141.16441345]
[176.38946533 155.03765869]
[172.97387695 169.51078796]
[182.90022278 180.75657654]
[192.82656860 192.00236511]
[207.75971985 197.22840881]
[210.38127136 211.89048767]
[220.30761719 223.13627625]
[230.23396301 234.38206482]
[240.16030884 245.62783813]
[250.08665466 256.87362671]
[260.01300049 268.11941528]
[269.93936157 279.36520386]
[279.86569214 290.61099243]
[289.79205322 301.85675049]
[299.71838379 313.10253906]
[309.64474487 324.34832764]
[319.57107544 335.59411621]
[329.49743652 346.83990479]
[336.76962280 344.69049072]
[344.31109619 344.62237549]
[351.54107666 346.61798096]
[357.90902710 350.50183105]
[362.93664551 355.95544434]
[366.25363159 362.54357910]
[367.62490845 369.74884033]
[382.26559448 373.01229858]
[396.90628052 376.27578735]
[411.54696655 379.53924561]
[426.18765259 382.80273438]
[440.82833862 386.06619263]
[455.46902466 389.32968140]
[470.62200928 384.78015137]
[481.36105347 395.10110474]
[496.00173950 398.36456299]
[504.40798950 385.72735596]
[516.81390381 376.98336792]
[531.54174805 373.31521606]
[546.59967041 375.21893311]
[559.95117188 382.43707275]
[569.79058838 393.99343872]
[574.78729248 408.32516479]
[574.26538086 423.49392700]
[568.29559326 437.44836426]
[557.68518066 448.30117798]
[543.86914062 454.58465576]
[528.71600342 455.44900513]
[514.27514648 450.77731323]
[502.49945068 441.20138550]
[494.98159790 428.01632690]
[492.73825073 413.00524902]
[478.09756470 409.74179077]
[463.99179077 414.52474976]
[452.20556641 403.97036743]
[437.56488037 400.70687866]
[422.92419434 397.44342041]
[408.28350830 394.17993164]
[393.64282227 390.91647339]
[379.00213623 387.65301514]
[364.36145020 384.38952637]
[362.34237671 387.48538208]
[359.91021729 390.26843262]
[357.11276245 392.68405151]
[354.00500488 394.68475342]
[357.18164062 409.34451294]
[362.04229736 417.03826904]
[360.30795288 424.19686890]
[363.31057739 438.89328003]
[366.31320190 453.58969116]
[369.31579590 468.28610229]
[372.40548706 482.96444702]
[375.58212280 497.62420654]
[378.75875854 512.28399658]
[383.61941528 519.97772217]
[381.88504028 527.13635254]
[384.88766479 541.83276367]
[387.89028931 556.52917480]
[390.89291382 571.22558594]
[394.58880615 585.76312256]
[398.96966553 600.10913086]
[403.35049438 614.45513916]
[407.73135376 628.80114746]
[413.21301270 636.06555176]
[412.07803345 643.34326172]
[416.28848267 657.74023438]
[420.49896240 672.13714600]
[430.74822998 685.64227295]
[420.60815430 699.22961426]
[404.74478149 693.24713135]
[406.10202026 676.34759521]
[401.89157104 661.95068359]
[397.68109131 647.55371094]
[393.38534546 633.18200684]
[389.00448608 618.83599854]
[384.62362671 604.48999023]
[380.24279785 590.14398193]
[374.34796143 603.93713379]
[361.51889038 611.70983887]
[346.56387329 610.54882812]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 243]
[6 242]
[7 241]
[8 240]
[9 238]
[10 237]
[11 236]
[13 235]
[14 234]
[15 233]
[16 232]
[17 230]
[18 229]
[20 184]
[21 183]
[22 182]
[23 181]
[24 180]
[25 179]
[26 178]
[27 177]
[28 176]
[29 175]
[30 174]
[31 173]
[32 172]
[34 170]
[35 169]
[36 168]
[40 164]
[41 163]
[42 162]
[43 161]
[57 98]
[58 97]
[59 96]
[60 95]
[62 93]
[63 92]
[65 91]
[66 90]
[67 89]
[68 88]
[70 86]
[71 85]
[72 84]
[73 83]
[74 81]
[75 80]
[99 160]
[100 159]
[101 158]
[102 157]
[103 156]
[104 155]
[105 154]
[106 153]
[109 150]
[110 149]
[111 148]
[120 147]
[121 146]
[122 145]
[123 143]
[124 142]
[125 141]
[126 140]
[127 139]
[191 225]
[192 224]
[193 223]
[194 222]
[195 221]
[196 220]
[197 219]
[199 217]
[200 216]
[244 261]
[245 260]
[246 259]
[247 258]
[249 257]
[250 256]
[251 255]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
