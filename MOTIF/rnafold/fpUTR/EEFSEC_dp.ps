%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:41:45 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (EEFSEC)
} def

/sequence { (\
CGAGGGAGGUGAGGGGCGGGCCGGGCGGGUGUCCGAGGCGGCGGCGGCGGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.074139644 ubox
1 18 0.053044895 ubox
1 23 0.007761384 ubox
1 27 0.032560014 ubox
1 31 0.004540638 ubox
1 35 0.024995251 ubox
1 40 0.016173374 ubox
1 43 0.034148536 ubox
1 46 0.075594998 ubox
1 49 0.083269512 ubox
2 10 0.064063302 ubox
2 17 0.053077177 ubox
2 22 0.005379308 ubox
2 26 0.032822533 ubox
2 30 0.004536010 ubox
2 33 0.018760263 ubox
2 34 0.020615908 ubox
2 39 0.015716301 ubox
2 42 0.034433205 ubox
2 45 0.076329176 ubox
2 48 0.083179353 ubox
3 32 0.019810119 ubox
4 22 0.233932666 ubox
4 33 0.018595918 ubox
4 34 0.044071117 ubox
5 21 0.246687166 ubox
5 22 0.063400498 ubox
5 32 0.018345198 ubox
5 33 0.044096999 ubox
5 34 0.064001895 ubox
6 21 0.065756983 ubox
6 32 0.042867422 ubox
6 33 0.064133088 ubox
7 32 0.063502204 ubox
8 22 0.133746293 ubox
8 34 0.011413218 ubox
9 17 0.301215527 ubox
9 21 0.140943167 ubox
9 26 0.065091429 ubox
9 30 0.042367342 ubox
9 33 0.011360759 ubox
9 39 0.216474947 ubox
9 42 0.022729639 ubox
9 45 0.027219665 ubox
9 48 0.189219380 ubox
9 51 0.182934368 ubox
10 16 0.299849653 ubox
10 18 0.041778475 ubox
10 20 0.139762139 ubox
10 25 0.064862867 ubox
10 27 0.046432430 ubox
10 29 0.025455850 ubox
10 31 0.003333037 ubox
10 35 0.013256473 ubox
10 38 0.216420930 ubox
10 40 0.022358655 ubox
10 41 0.021081070 ubox
10 43 0.007798314 ubox
10 44 0.026352388 ubox
10 46 0.045686682 ubox
10 47 0.185209530 ubox
10 49 0.123645066 ubox
10 50 0.180889494 ubox
11 17 0.053113243 ubox
11 26 0.049087892 ubox
11 30 0.004099545 ubox
11 34 0.011691206 ubox
11 39 0.027689572 ubox
11 42 0.009698509 ubox
11 45 0.062110556 ubox
11 48 0.162824330 ubox
13 22 0.115301488 ubox
13 33 0.013744268 ubox
13 34 0.044167057 ubox
14 21 0.119470675 ubox
14 22 0.095144784 ubox
14 32 0.014422848 ubox
14 33 0.038038068 ubox
14 34 0.602855680 ubox
15 21 0.098382476 ubox
15 22 0.057868032 ubox
15 32 0.027777755 ubox
15 33 0.603930359 ubox
15 34 0.034696797 ubox
16 21 0.058601949 ubox
16 26 0.028969294 ubox
16 30 0.016819088 ubox
16 32 0.603850657 ubox
16 33 0.034638577 ubox
16 39 0.050745128 ubox
16 42 0.239863163 ubox
16 45 0.402013124 ubox
16 48 0.376401508 ubox
16 51 0.129026444 ubox
17 23 0.006142410 ubox
17 25 0.028986743 ubox
17 27 0.004908839 ubox
17 29 0.017015047 ubox
17 31 0.603085633 ubox
17 35 0.122301908 ubox
17 38 0.050883145 ubox
17 40 0.057390876 ubox
17 41 0.239028689 ubox
17 43 0.079478991 ubox
17 44 0.400477460 ubox
17 46 0.156963098 ubox
17 47 0.363310023 ubox
17 49 0.079946742 ubox
17 50 0.129118405 ubox
18 22 0.005978794 ubox
18 26 0.005426668 ubox
18 30 0.360010415 ubox
18 33 0.005448446 ubox
18 34 0.124796754 ubox
18 39 0.061025399 ubox
18 42 0.087183409 ubox
18 45 0.186521290 ubox
18 48 0.082787049 ubox
19 32 0.005008356 ubox
19 33 0.124531015 ubox
19 34 0.004415681 ubox
20 26 0.057669660 ubox
20 30 0.467919265 ubox
20 32 0.079103661 ubox
20 33 0.004373872 ubox
20 39 0.285961490 ubox
20 42 0.522927050 ubox
20 45 0.228755727 ubox
20 48 0.138116362 ubox
20 51 0.113422655 ubox
21 25 0.057350487 ubox
21 28 0.318741026 ubox
21 29 0.523387052 ubox
21 31 0.062237026 ubox
21 38 0.286009440 ubox
21 41 0.523208682 ubox
21 44 0.228882023 ubox
21 47 0.138227038 ubox
21 50 0.114735031 ubox
22 27 0.318993072 ubox
22 28 0.524427872 ubox
22 31 0.021665456 ubox
22 35 0.290355176 ubox
22 37 0.260797373 ubox
22 40 0.522689712 ubox
22 43 0.228705140 ubox
22 46 0.136843808 ubox
22 49 0.114619185 ubox
23 30 0.028159537 ubox
23 34 0.485305047 ubox
23 39 0.515528092 ubox
23 42 0.227243338 ubox
23 45 0.121748665 ubox
23 48 0.111560445 ubox
24 33 0.486856549 ubox
24 34 0.034481739 ubox
25 32 0.486421814 ubox
25 33 0.034307564 ubox
25 39 0.167680188 ubox
25 42 0.071605073 ubox
25 45 0.090926605 ubox
25 48 0.028565372 ubox
25 51 0.016536353 ubox
26 31 0.487008045 ubox
26 35 0.541817302 ubox
26 38 0.160804703 ubox
26 40 0.039042047 ubox
26 41 0.071023859 ubox
26 43 0.092195679 ubox
26 44 0.090778741 ubox
26 46 0.056447310 ubox
26 47 0.029466927 ubox
26 49 0.008716121 ubox
26 50 0.016593278 ubox
27 33 0.008105900 ubox
27 34 0.559291084 ubox
27 39 0.039444708 ubox
27 42 0.092649849 ubox
27 45 0.056193333 ubox
27 48 0.009181854 ubox
28 32 0.005537063 ubox
28 33 0.557452470 ubox
28 34 0.123146426 ubox
29 33 0.121643683 ubox
29 39 0.056825316 ubox
29 42 0.035921657 ubox
29 45 0.038056452 ubox
29 48 0.019411836 ubox
29 51 0.003700981 ubox
30 38 0.056620144 ubox
30 40 0.126731033 ubox
30 41 0.025413669 ubox
30 43 0.060386991 ubox
30 44 0.037386914 ubox
30 46 0.011673741 ubox
30 47 0.019135609 ubox
31 39 0.133529816 ubox
31 42 0.063832897 ubox
31 45 0.012928413 ubox
31 48 0.004114737 ubox
31 51 0.028625466 ubox
32 38 0.133370280 ubox
32 41 0.040423931 ubox
32 44 0.004271613 ubox
32 47 0.003496740 ubox
32 50 0.004960786 ubox
33 37 0.128747221 ubox
33 40 0.039745474 ubox
33 41 0.067874387 ubox
33 44 0.026409915 ubox
33 47 0.003346826 ubox
33 49 0.003804993 ubox
33 50 0.066936149 ubox
34 40 0.068342932 ubox
34 43 0.026730539 ubox
34 46 0.003387425 ubox
34 49 0.070483272 ubox
35 39 0.064300175 ubox
35 42 0.027131945 ubox
35 48 0.089713567 ubox
38 45 0.123625458 ubox
38 48 0.042469796 ubox
38 51 0.688760231 ubox
39 44 0.123712593 ubox
39 46 0.025050772 ubox
39 47 0.040060830 ubox
39 49 0.023810542 ubox
39 50 0.696619584 ubox
40 45 0.030868468 ubox
40 48 0.022379741 ubox
41 48 0.726383187 ubox
41 51 0.046395677 ubox
42 47 0.726661265 ubox
42 49 0.068835981 ubox
42 50 0.044225699 ubox
43 48 0.074804538 ubox
44 51 0.148955402 ubox
45 50 0.150651483 ubox
14 34 0.9500000 lbox
15 33 0.9500000 lbox
16 32 0.9500000 lbox
17 31 0.9500000 lbox
20 30 0.9500000 lbox
21 29 0.9500000 lbox
22 28 0.9500000 lbox
38 51 0.9500000 lbox
39 50 0.9500000 lbox
41 48 0.9500000 lbox
42 47 0.9500000 lbox
showpage
end
%%EOF
