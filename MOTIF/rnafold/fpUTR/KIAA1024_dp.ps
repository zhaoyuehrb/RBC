%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:28:46 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KIAA1024)
} def

/sequence { (\
GCCCUGCGCCCGGGGCGCCUCGGAGAACUGACCUGAAGUUUCAGUGUAGUCAGAGAGCUCUUCAAGUAAUAAAUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.006815710 ubox
1 9 0.005016978 ubox
1 16 0.994217036 ubox
1 18 0.005436793 ubox
1 58 0.011426608 ubox
1 67 0.007185686 ubox
2 6 0.006774963 ubox
2 8 0.005027570 ubox
2 14 0.005781297 ubox
2 15 0.994972406 ubox
2 17 0.005062292 ubox
2 23 0.020591442 ubox
2 57 0.011416628 ubox
2 66 0.007415908 ubox
3 13 0.006719086 ubox
3 14 0.994979115 ubox
3 15 0.004659935 ubox
3 22 0.021021296 ubox
3 23 0.031690650 ubox
4 12 0.007508959 ubox
4 13 0.994963809 ubox
4 14 0.004719756 ubox
4 22 0.032228921 ubox
4 23 0.004061010 ubox
4 55 0.007367383 ubox
4 66 0.006749191 ubox
5 12 0.991265447 ubox
5 13 0.004737690 ubox
5 22 0.004107323 ubox
5 54 0.007181214 ubox
5 65 0.006596361 ubox
5 68 0.018131388 ubox
6 11 0.956982109 ubox
6 18 0.096651955 ubox
6 67 0.019355939 ubox
7 17 0.096941872 ubox
7 66 0.019428603 ubox
8 16 0.096987370 ubox
8 67 0.005694864 ubox
9 15 0.096986793 ubox
9 66 0.005865430 ubox
10 14 0.096281194 ubox
10 23 0.005741434 ubox
11 22 0.005814687 ubox
12 21 0.005824882 ubox
12 61 0.018252285 ubox
12 63 0.011269620 ubox
13 20 0.005715654 ubox
13 60 0.018982826 ubox
13 62 0.011297616 ubox
14 19 0.005692299 ubox
14 59 0.018992095 ubox
14 61 0.011361458 ubox
15 58 0.019095641 ubox
15 60 0.011698161 ubox
16 57 0.019107488 ubox
16 66 0.004667313 ubox
17 21 0.019821174 ubox
17 58 0.718037127 ubox
17 67 0.257502355 ubox
18 57 0.712766161 ubox
18 66 0.252147097 ubox
19 25 0.009579469 ubox
19 53 0.004025562 ubox
19 55 0.712618005 ubox
19 57 0.119964852 ubox
19 66 0.414431641 ubox
20 24 0.008662102 ubox
20 26 0.007522998 ubox
20 31 0.056683428 ubox
20 52 0.003968785 ubox
20 54 0.712694826 ubox
20 56 0.152734732 ubox
20 65 0.420824438 ubox
21 25 0.007926609 ubox
21 30 0.074325723 ubox
21 53 0.709241458 ubox
21 55 0.152964598 ubox
22 29 0.074460164 ubox
22 33 0.015697387 ubox
22 51 0.119499896 ubox
22 59 0.020370453 ubox
22 60 0.014003853 ubox
22 61 0.482185831 ubox
22 62 0.026629775 ubox
22 63 0.443110123 ubox
22 75 0.003801818 ubox
23 28 0.074006458 ubox
23 32 0.015717529 ubox
23 50 0.098924381 ubox
23 51 0.464596819 ubox
23 58 0.022883083 ubox
23 59 0.007498282 ubox
23 60 0.508494169 ubox
23 61 0.003855031 ubox
23 62 0.444036966 ubox
23 63 0.016348197 ubox
23 74 0.003185836 ubox
23 75 0.019388658 ubox
24 50 0.425452849 ubox
24 59 0.508769615 ubox
24 61 0.444459248 ubox
24 62 0.012250898 ubox
24 74 0.019702773 ubox
25 41 0.014305465 ubox
25 42 0.004930217 ubox
25 51 0.429887604 ubox
25 58 0.508489920 ubox
25 60 0.444629178 ubox
25 61 0.004497988 ubox
25 63 0.011127261 ubox
25 75 0.006365296 ubox
26 40 0.014917911 ubox
26 41 0.004043477 ubox
26 50 0.311261046 ubox
26 59 0.436574195 ubox
26 62 0.011108847 ubox
26 74 0.006283235 ubox
27 39 0.015626942 ubox
27 45 0.323352818 ubox
27 47 0.146265056 ubox
27 50 0.487769782 ubox
27 61 0.010697836 ubox
27 67 0.011616335 ubox
28 38 0.016012803 ubox
28 44 0.325317142 ubox
28 46 0.145203894 ubox
28 49 0.621360026 ubox
28 53 0.657430903 ubox
28 55 0.073985379 ubox
28 57 0.099388762 ubox
28 66 0.012033659 ubox
29 37 0.015955329 ubox
29 43 0.325458134 ubox
29 46 0.011567801 ubox
29 48 0.610369848 ubox
29 52 0.665736277 ubox
29 54 0.050976753 ubox
29 56 0.074705660 ubox
29 65 0.011737736 ubox
29 68 0.006283928 ubox
29 71 0.004708452 ubox
30 40 0.021919728 ubox
30 41 0.005738319 ubox
30 42 0.324744419 ubox
30 45 0.027806038 ubox
30 47 0.462582304 ubox
30 51 0.671414927 ubox
30 63 0.003438564 ubox
30 67 0.004868047 ubox
30 70 0.004524292 ubox
31 39 0.062424767 ubox
31 40 0.030911059 ubox
31 41 0.300463633 ubox
31 45 0.121807804 ubox
31 47 0.433419459 ubox
31 50 0.668745537 ubox
31 62 0.003320314 ubox
31 67 0.057979090 ubox
32 38 0.095550220 ubox
32 44 0.089087151 ubox
32 46 0.586586326 ubox
32 49 0.664359890 ubox
32 66 0.064924062 ubox
33 44 0.933743070 ubox
33 49 0.013825248 ubox
33 53 0.034183447 ubox
33 66 0.025326685 ubox
34 43 0.939421433 ubox
34 48 0.018993222 ubox
34 52 0.034414821 ubox
34 64 0.083821885 ubox
34 65 0.018136704 ubox
35 41 0.008474146 ubox
35 42 0.939568812 ubox
35 47 0.017528837 ubox
35 51 0.034431974 ubox
35 60 0.004676119 ubox
35 63 0.088641178 ubox
36 40 0.024009342 ubox
36 41 0.878747036 ubox
36 50 0.032668287 ubox
36 59 0.003855056 ubox
36 62 0.088599404 ubox
37 59 0.008890355 ubox
37 61 0.088204591 ubox
38 45 0.006386810 ubox
38 47 0.004726415 ubox
38 58 0.010740934 ubox
38 60 0.088055028 ubox
39 44 0.003337525 ubox
39 46 0.007225005 ubox
39 49 0.007510569 ubox
39 56 0.009656000 ubox
39 57 0.009499244 ubox
40 48 0.008710316 ubox
40 49 0.004802361 ubox
40 55 0.009869581 ubox
40 56 0.007653471 ubox
40 57 0.082909644 ubox
41 48 0.004205019 ubox
41 54 0.010122127 ubox
41 55 0.004516203 ubox
41 56 0.087244146 ubox
42 53 0.010162593 ubox
42 55 0.087813974 ubox
43 59 0.003632326 ubox
44 58 0.003678566 ubox
45 52 0.088302081 ubox
45 57 0.003639747 ubox
46 51 0.088264694 ubox
48 59 0.005595058 ubox
49 58 0.008427012 ubox
50 56 0.005268453 ubox
50 57 0.008030964 ubox
51 55 0.007149791 ubox
52 59 0.006153629 ubox
52 61 0.008722240 ubox
53 58 0.009951942 ubox
53 60 0.009484917 ubox
53 62 0.008419406 ubox
53 63 0.008767940 ubox
54 59 0.009324946 ubox
54 61 0.012454638 ubox
54 62 0.008384015 ubox
55 60 0.013148238 ubox
55 61 0.007173441 ubox
55 63 0.017679167 ubox
55 75 0.003293814 ubox
56 62 0.017476323 ubox
56 74 0.003426698 ubox
57 61 0.011882355 ubox
57 67 0.061685893 ubox
58 66 0.064411229 ubox
59 65 0.063384180 ubox
60 66 0.064871830 ubox
61 65 0.059168599 ubox
61 69 0.020935464 ubox
61 72 0.027275799 ubox
61 73 0.013812269 ubox
62 68 0.022658683 ubox
62 71 0.030067857 ubox
62 72 0.015092123 ubox
66 74 0.047332525 ubox
67 73 0.049024321 ubox
1 16 0.9500000 lbox
2 15 0.9500000 lbox
3 14 0.9500000 lbox
4 13 0.9500000 lbox
5 12 0.9500000 lbox
6 11 0.9500000 lbox
22 61 0.9500000 lbox
23 60 0.9500000 lbox
24 59 0.9500000 lbox
25 58 0.9500000 lbox
28 53 0.9500000 lbox
29 52 0.9500000 lbox
30 51 0.9500000 lbox
31 50 0.9500000 lbox
32 49 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
showpage
end
%%EOF
