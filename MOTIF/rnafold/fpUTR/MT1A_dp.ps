%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:38:41 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MT1A)
} def

/sequence { (\
ACCAAGCCUUCCACGUGCGCCUUAUAGCCUCUCAACUUCUUGCUUGGGAUCUCCAACCUCACCGCGGCUCGAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 16 0.013920356 ubox
2 15 0.014782444 ubox
2 47 0.517641747 ubox
2 48 0.021744237 ubox
2 67 0.027187658 ubox
3 17 0.008634780 ubox
3 42 0.045607420 ubox
3 46 0.521009736 ubox
3 47 0.016061688 ubox
3 66 0.027159326 ubox
4 10 0.007055204 ubox
4 16 0.007859467 ubox
4 23 0.019396260 ubox
4 38 0.006632499 ubox
4 41 0.049007368 ubox
4 45 0.521001213 ubox
5 9 0.006112510 ubox
5 22 0.021170955 ubox
5 30 0.012791727 ubox
5 32 0.004988969 ubox
5 37 0.009391511 ubox
5 40 0.049746084 ubox
5 44 0.521068507 ubox
5 52 0.011672971 ubox
5 69 0.745785954 ubox
6 16 0.027154429 ubox
6 18 0.065943385 ubox
6 20 0.044248939 ubox
6 21 0.016701531 ubox
6 28 0.014117927 ubox
6 29 0.013429765 ubox
6 31 0.005233479 ubox
6 36 0.009823933 ubox
6 39 0.049666418 ubox
6 43 0.521349343 ubox
6 51 0.012477068 ubox
6 65 0.023822925 ubox
6 68 0.789722507 ubox
7 15 0.028839107 ubox
7 17 0.065887395 ubox
7 19 0.046171984 ubox
7 27 0.013755962 ubox
7 42 0.520229845 ubox
7 64 0.023849054 ubox
7 67 0.789419075 ubox
8 27 0.019324384 ubox
8 66 0.781725510 ubox
8 67 0.011175208 ubox
9 26 0.019600367 ubox
9 35 0.034886536 ubox
9 49 0.137360002 ubox
9 56 0.006243663 ubox
9 66 0.011876235 ubox
9 72 0.025471072 ubox
9 73 0.074869319 ubox
10 34 0.035584111 ubox
10 48 0.139366098 ubox
10 49 0.056494221 ubox
10 55 0.005253305 ubox
10 66 0.004164468 ubox
10 67 0.005925935 ubox
10 71 0.025801748 ubox
10 72 0.105790684 ubox
11 47 0.140997790 ubox
11 48 0.058396508 ubox
11 66 0.012910191 ubox
11 67 0.108487672 ubox
11 71 0.108039442 ubox
12 42 0.007231605 ubox
12 46 0.141457603 ubox
12 47 0.058320048 ubox
12 66 0.113073253 ubox
13 41 0.009167060 ubox
13 45 0.139138846 ubox
14 42 0.009543590 ubox
14 46 0.057163976 ubox
14 64 0.185871002 ubox
14 66 0.158342953 ubox
14 71 0.122182280 ubox
15 25 0.033912665 ubox
15 28 0.051279866 ubox
15 36 0.218387883 ubox
15 41 0.009565312 ubox
15 43 0.117067160 ubox
15 45 0.053565974 ubox
15 57 0.063032017 ubox
15 62 0.308862038 ubox
15 63 0.156086574 ubox
15 65 0.242720725 ubox
15 68 0.047195763 ubox
15 70 0.124375272 ubox
16 24 0.035092606 ubox
16 26 0.008615000 ubox
16 27 0.050565665 ubox
16 34 0.225235274 ubox
16 35 0.213342231 ubox
16 42 0.115757840 ubox
16 55 0.023498200 ubox
16 56 0.060609358 ubox
16 61 0.324899751 ubox
16 64 0.242068207 ubox
16 66 0.092460813 ubox
16 67 0.035953549 ubox
16 71 0.046560782 ubox
17 23 0.033220413 ubox
17 25 0.008868711 ubox
17 28 0.675160272 ubox
17 33 0.223539083 ubox
17 41 0.031683669 ubox
17 43 0.114478115 ubox
17 45 0.004931997 ubox
17 54 0.025196780 ubox
17 60 0.320551946 ubox
17 63 0.231435100 ubox
17 65 0.279182170 ubox
17 68 0.116434095 ubox
17 70 0.061789171 ubox
18 27 0.678308535 ubox
18 42 0.114552460 ubox
18 64 0.279300983 ubox
18 66 0.071025682 ubox
18 67 0.098502347 ubox
18 71 0.028659404 ubox
19 28 0.506226484 ubox
19 41 0.086862576 ubox
19 43 0.072492610 ubox
19 63 0.258875145 ubox
19 65 0.096179332 ubox
19 68 0.080668451 ubox
19 70 0.028861134 ubox
20 27 0.505006963 ubox
20 42 0.072561673 ubox
20 47 0.008261165 ubox
20 48 0.064304969 ubox
20 64 0.096117974 ubox
20 67 0.080747943 ubox
21 27 0.085813916 ubox
21 46 0.008656793 ubox
21 47 0.064385411 ubox
21 48 0.021274940 ubox
21 66 0.080563594 ubox
22 26 0.086497824 ubox
22 35 0.009027523 ubox
22 46 0.061310939 ubox
22 47 0.021378295 ubox
22 56 0.130598128 ubox
22 72 0.020297067 ubox
22 73 0.025098254 ubox
23 34 0.009405793 ubox
23 42 0.007168526 ubox
23 46 0.026085944 ubox
23 55 0.135242193 ubox
23 71 0.020727803 ubox
23 72 0.035037245 ubox
24 41 0.009486245 ubox
24 45 0.028052608 ubox
24 50 0.011042616 ubox
25 42 0.005772447 ubox
25 46 0.004430957 ubox
25 49 0.009185795 ubox
26 32 0.038435072 ubox
26 37 0.101779522 ubox
26 38 0.005503862 ubox
26 40 0.016544823 ubox
26 41 0.007148694 ubox
26 44 0.111144182 ubox
26 45 0.004975819 ubox
26 52 0.263373722 ubox
26 59 0.039063589 ubox
26 69 0.104554091 ubox
27 31 0.039491911 ubox
27 36 0.104355576 ubox
27 37 0.004750347 ubox
27 39 0.017070468 ubox
27 40 0.006204336 ubox
27 43 0.124869640 ubox
27 51 0.270897664 ubox
27 58 0.040275099 ubox
27 65 0.034327440 ubox
27 68 0.111401383 ubox
28 42 0.124389053 ubox
28 47 0.036516613 ubox
28 48 0.059341776 ubox
28 64 0.034286672 ubox
28 67 0.111426277 ubox
29 46 0.040613883 ubox
29 47 0.059565005 ubox
29 48 0.050277131 ubox
29 66 0.111194644 ubox
30 46 0.053893663 ubox
30 47 0.049950119 ubox
30 48 0.016749063 ubox
30 49 0.662606697 ubox
30 72 0.004037602 ubox
31 46 0.053580120 ubox
31 47 0.020305508 ubox
31 48 0.695404625 ubox
31 71 0.004225082 ubox
32 46 0.009560673 ubox
32 47 0.695222377 ubox
32 49 0.005235044 ubox
32 72 0.006367899 ubox
33 42 0.159279114 ubox
33 46 0.697484065 ubox
33 47 0.003193051 ubox
33 48 0.005413652 ubox
33 71 0.006667081 ubox
34 41 0.161775130 ubox
34 45 0.694314433 ubox
35 40 0.132299273 ubox
35 44 0.670155031 ubox
36 47 0.011114011 ubox
36 48 0.007076927 ubox
36 67 0.003664642 ubox
37 46 0.011558010 ubox
37 47 0.005931099 ubox
37 48 0.010960193 ubox
37 49 0.029886723 ubox
37 66 0.003430965 ubox
37 72 0.008748162 ubox
37 73 0.103355261 ubox
38 46 0.004161524 ubox
38 47 0.014147843 ubox
38 48 0.031953753 ubox
38 49 0.025760731 ubox
38 71 0.007370608 ubox
38 72 0.146366084 ubox
39 46 0.025587813 ubox
39 47 0.033053033 ubox
39 48 0.027394879 ubox
39 66 0.006116796 ubox
39 67 0.007522990 ubox
39 71 0.150132825 ubox
40 46 0.032785604 ubox
40 47 0.026875481 ubox
40 56 0.004650392 ubox
40 66 0.005807249 ubox
40 67 0.026490131 ubox
40 72 0.005189180 ubox
41 46 0.021904548 ubox
41 55 0.004643757 ubox
41 61 0.084347859 ubox
41 64 0.024488412 ubox
41 66 0.052714362 ubox
41 71 0.005089902 ubox
42 54 0.004372986 ubox
42 60 0.094748775 ubox
42 63 0.033153667 ubox
42 65 0.273334824 ubox
42 68 0.155975136 ubox
43 64 0.273215204 ubox
43 67 0.156164468 ubox
44 56 0.257680339 ubox
44 66 0.152131924 ubox
44 72 0.015734843 ubox
45 55 0.297723211 ubox
45 61 0.228057737 ubox
45 64 0.126726396 ubox
45 66 0.011820844 ubox
45 71 0.016688906 ubox
46 53 0.004473770 ubox
46 54 0.303629567 ubox
46 58 0.063851967 ubox
46 59 0.117386970 ubox
46 60 0.236477765 ubox
46 63 0.159524451 ubox
46 65 0.017984278 ubox
46 70 0.017276609 ubox
47 51 0.003427967 ubox
47 52 0.003810800 ubox
47 53 0.303193550 ubox
47 54 0.082531186 ubox
47 57 0.063885764 ubox
47 58 0.193079717 ubox
47 59 0.186209489 ubox
47 60 0.012863154 ubox
47 62 0.159512482 ubox
47 63 0.082022772 ubox
47 69 0.017415951 ubox
47 70 0.003254016 ubox
48 52 0.196446872 ubox
48 53 0.089896803 ubox
48 57 0.194659515 ubox
48 58 0.186145229 ubox
48 59 0.010892634 ubox
48 60 0.135599088 ubox
48 62 0.081999940 ubox
48 68 0.022425833 ubox
48 69 0.004911446 ubox
48 70 0.175442571 ubox
49 59 0.129381820 ubox
49 69 0.173907353 ubox
50 67 0.044868077 ubox
50 72 0.108286275 ubox
51 66 0.046869511 ubox
51 67 0.074398864 ubox
51 71 0.115603611 ubox
52 66 0.067583432 ubox
52 67 0.018823723 ubox
52 72 0.210202588 ubox
53 66 0.030075486 ubox
53 67 0.204656840 ubox
53 71 0.220319719 ubox
54 66 0.205351729 ubox
57 67 0.333261008 ubox
58 66 0.334257984 ubox
58 67 0.051657242 ubox
59 66 0.047607067 ubox
59 67 0.040376722 ubox
59 72 0.053053238 ubox
60 66 0.056265727 ubox
60 71 0.055610064 ubox
63 71 0.105816863 ubox
64 70 0.103713696 ubox
65 71 0.079398141 ubox
66 70 0.075362734 ubox
5 69 0.9500000 lbox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
17 28 0.9500000 lbox
18 27 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
32 47 0.9500000 lbox
33 46 0.9500000 lbox
34 45 0.9500000 lbox
35 44 0.9500000 lbox
showpage
end
%%EOF
