%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:48:18 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TMEM183B)
} def

/sequence { (\
CCGCGGAGCCGGGCGGAGCUGGCUUGCGGCUCCCGGGGCCGGCUCUCCGGCCGGAGAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 16 0.012712416 ubox
1 29 0.665806668 ubox
1 36 0.573981437 ubox
1 37 0.033589624 ubox
1 38 0.044683685 ubox
1 50 0.152257865 ubox
1 54 0.388186262 ubox
2 15 0.012830522 ubox
2 28 0.675104497 ubox
2 35 0.575882558 ubox
2 36 0.035013793 ubox
2 37 0.045314981 ubox
2 49 0.154386579 ubox
2 53 0.389852064 ubox
3 9 0.005705476 ubox
3 14 0.012909833 ubox
3 27 0.675286437 ubox
3 34 0.575663844 ubox
3 43 0.004098907 ubox
3 48 0.154224880 ubox
3 51 0.028809649 ubox
3 52 0.387422519 ubox
4 8 0.007178993 ubox
4 13 0.012907153 ubox
4 26 0.673967319 ubox
4 28 0.005514087 ubox
4 35 0.046934691 ubox
4 41 0.004862938 ubox
4 49 0.027773458 ubox
4 50 0.038485308 ubox
4 53 0.089343722 ubox
5 25 0.500119582 ubox
5 27 0.005556759 ubox
5 33 0.577522273 ubox
5 34 0.038376461 ubox
5 40 0.005685172 ubox
5 46 0.152504866 ubox
5 47 0.033350416 ubox
5 48 0.029859759 ubox
5 52 0.090545387 ubox
6 24 0.231088976 ubox
6 25 0.442827115 ubox
6 32 0.578228555 ubox
6 33 0.027189363 ubox
6 39 0.005690492 ubox
6 45 0.159917264 ubox
6 46 0.003205279 ubox
6 47 0.027715221 ubox
6 51 0.061627329 ubox
7 24 0.631751525 ubox
7 25 0.003772280 ubox
7 31 0.578782224 ubox
7 44 0.160776913 ubox
7 46 0.022213384 ubox
8 23 0.675302854 ubox
8 30 0.578868337 ubox
8 43 0.162189062 ubox
8 45 0.010404259 ubox
8 51 0.397365793 ubox
9 22 0.675333812 ubox
9 29 0.578861644 ubox
9 36 0.007077505 ubox
9 42 0.162519150 ubox
9 50 0.402339028 ubox
9 54 0.141739173 ubox
10 21 0.675261126 ubox
10 26 0.035153008 ubox
10 28 0.577688310 ubox
10 35 0.007089526 ubox
10 41 0.162474858 ubox
10 49 0.402373915 ubox
10 53 0.142307560 ubox
11 20 0.669710599 ubox
11 24 0.026185903 ubox
11 25 0.114492392 ubox
11 27 0.557230854 ubox
11 34 0.007076494 ubox
11 40 0.156485874 ubox
11 48 0.400970077 ubox
11 52 0.142298817 ubox
12 19 0.664768382 ubox
12 20 0.087241563 ubox
12 23 0.056448879 ubox
12 24 0.527511965 ubox
12 25 0.053940562 ubox
12 33 0.006128088 ubox
12 39 0.150076079 ubox
12 40 0.043866302 ubox
12 47 0.398562113 ubox
12 48 0.033696062 ubox
12 51 0.142260478 ubox
13 19 0.119930448 ubox
13 23 0.569571262 ubox
13 24 0.010262160 ubox
13 27 0.042887436 ubox
13 32 0.005001004 ubox
13 39 0.061918229 ubox
13 45 0.004087711 ubox
13 46 0.200335356 ubox
13 47 0.047498000 ubox
13 51 0.003691460 ubox
14 18 0.143490427 ubox
14 21 0.068001111 ubox
14 22 0.568912250 ubox
14 26 0.047005326 ubox
14 35 0.096345256 ubox
14 38 0.075644455 ubox
14 49 0.142101910 ubox
14 50 0.004250138 ubox
15 20 0.057142146 ubox
15 24 0.039673487 ubox
15 25 0.038113326 ubox
15 33 0.141439259 ubox
15 34 0.079919781 ubox
15 45 0.037314535 ubox
15 46 0.324514909 ubox
15 47 0.015623932 ubox
15 48 0.138322471 ubox
16 23 0.043618936 ubox
16 24 0.025280518 ubox
16 25 0.029696314 ubox
16 32 0.152457849 ubox
16 33 0.056614438 ubox
16 44 0.016184193 ubox
16 45 0.404735180 ubox
16 47 0.128329671 ubox
17 24 0.040342905 ubox
17 31 0.162613922 ubox
17 44 0.412904253 ubox
17 46 0.102983289 ubox
18 23 0.042135722 ubox
18 27 0.005881107 ubox
18 30 0.162712635 ubox
18 43 0.424149932 ubox
18 45 0.048834905 ubox
19 26 0.006430119 ubox
19 29 0.162712921 ubox
19 42 0.426835566 ubox
20 28 0.162578645 ubox
20 41 0.426577864 ubox
21 27 0.162469888 ubox
21 40 0.426891507 ubox
21 44 0.009175532 ubox
22 39 0.426904806 ubox
22 43 0.009905791 ubox
23 37 0.005105953 ubox
23 38 0.426224120 ubox
23 42 0.009898868 ubox
24 36 0.006844027 ubox
24 37 0.386580028 ubox
24 38 0.022945063 ubox
24 41 0.004593460 ubox
25 35 0.005034069 ubox
25 36 0.287065477 ubox
25 37 0.174138606 ubox
26 34 0.005613161 ubox
27 35 0.422651160 ubox
27 41 0.008808185 ubox
28 34 0.426379440 ubox
28 40 0.010007756 ubox
29 33 0.419502528 ubox
29 39 0.010029016 ubox
30 36 0.003514156 ubox
30 38 0.010404201 ubox
30 56 0.667964824 ubox
31 35 0.003183465 ubox
31 37 0.010353099 ubox
31 55 0.670863033 ubox
31 57 0.057033694 ubox
32 36 0.010035404 ubox
32 54 0.669251666 ubox
32 56 0.061617346 ubox
33 50 0.004548817 ubox
33 53 0.666635488 ubox
33 54 0.086695611 ubox
34 49 0.006306091 ubox
34 53 0.100638723 ubox
35 48 0.006318192 ubox
35 52 0.062117576 ubox
36 47 0.006317545 ubox
36 51 0.041180311 ubox
36 52 0.062134943 ubox
37 46 0.006275452 ubox
37 51 0.046098032 ubox
37 52 0.872753666 ubox
38 45 0.006192079 ubox
38 51 0.875815693 ubox
39 50 0.877995574 ubox
39 54 0.141738326 ubox
40 49 0.877992350 ubox
40 53 0.142199569 ubox
41 47 0.007418787 ubox
41 48 0.877718245 ubox
41 52 0.142211043 ubox
42 46 0.006804276 ubox
42 47 0.863536020 ubox
42 51 0.142213499 ubox
43 50 0.142152740 ubox
44 49 0.128980167 ubox
44 57 0.011970848 ubox
45 49 0.017078397 ubox
45 56 0.016945814 ubox
46 55 0.018086772 ubox
47 54 0.018942286 ubox
48 53 0.018919233 ubox
1 36 0.9500000 lbox
2 35 0.9500000 lbox
3 34 0.9500000 lbox
5 33 0.9500000 lbox
6 32 0.9500000 lbox
7 31 0.9500000 lbox
8 30 0.9500000 lbox
9 29 0.9500000 lbox
10 28 0.9500000 lbox
11 27 0.9500000 lbox
12 24 0.9500000 lbox
13 23 0.9500000 lbox
14 22 0.9500000 lbox
37 52 0.9500000 lbox
38 51 0.9500000 lbox
39 50 0.9500000 lbox
40 49 0.9500000 lbox
41 48 0.9500000 lbox
42 47 0.9500000 lbox
showpage
end
%%EOF
