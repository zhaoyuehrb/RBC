%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:30:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUCAUUUCCUGAGAACUGCAGAGAGCCGCUGAGAGGCUCUGCGUGUGCGUGUGCGCGGGUGACGCCGUGUGUGUGCGAGUGUGUGUGUGUGUGUGCGCGCGCGCGUGUGAGAGAGAGAAAGGGAGAGAGAGAGGGGGACUCUGUGUGAGGGAAAGAAAACAAUUUCUCCUGCUCUGCAGCUUCUGUUCAGGAUCAAUGUGACUCUAAGAACAAAUGGAUGA\
) } def
/len { sequence length } bind def

/coor [
[164.22642517 389.31756592]
[163.80384827 374.32351685]
[163.38125610 359.32946777]
[162.95867920 344.33541870]
[162.53610229 329.34136963]
[162.11352539 314.34732056]
[161.69094849 299.35327148]
[159.16719055 284.56710815]
[154.59226990 270.28179932]
[150.01734924 255.99649048]
[145.44242859 241.71118164]
[140.86750793 227.42587280]
[136.29258728 213.14056396]
[131.41682434 198.95510864]
[126.24242401 184.87585449]
[121.06802368 170.79658508]
[115.79457092 156.75411987]
[110.42234039 142.74916077]
[105.05010986 128.74418640]
[99.67787933 114.73921967]
[97.21776581 118.12634277]
[93.88024902 121.06350708]
[89.74835968 123.38171387]
[77.98333740 132.68678284]
[66.21831512 141.99185181]
[54.45329285 151.29692078]
[42.68827057 160.60198975]
[30.92325020 169.90705872]
[30.65136147 185.54226685]
[20.35399437 197.31080627]
[4.89325237 199.65589905]
[-8.43077469 191.47027588]
[-13.32688904 176.61894226]
[-7.48329544 162.11424255]
[6.34084034 154.80484009]
[21.61818314 158.14202881]
[33.38320541 148.83695984]
[45.14822769 139.53189087]
[56.91324615 130.22682190]
[68.67826843 120.92176056]
[80.44329071 111.61669159]
[79.38757324 96.65389252]
[66.43255615 89.09297180]
[53.47753906 81.53205109]
[40.52251816 73.97113800]
[27.56750107 66.41021729]
[14.61248302 58.84929657]
[1.65746439 51.28837585]
[-11.29755402 43.72745895]
[-24.25257301 36.16653824]
[-37.20759201 28.60561752]
[-50.16260910 21.04469872]
[-63.11762619 13.48377991]
[-76.07264709 5.92286062]
[-89.02766418 -1.63805878]
[-101.98268127 -9.19897842]
[-114.93769836 -16.75989723]
[-127.89271545 -24.32081604]
[-143.61436462 -14.62430859]
[-161.99693298 -14.26090908]
[-177.94100952 -23.24482536]
[-187.06761169 -39.00926971]
[-186.92073059 -57.13917160]
[-200.18363953 -64.14597321]
[-213.44654846 -71.15277863]
[-226.70945740 -78.15958405]
[-240.02139282 -85.07279968]
[-253.38168335 -91.89206696]
[-266.74197388 -98.71133423]
[-281.69702148 -93.60032654]
[-295.84884644 -100.63600922]
[-300.80148315 -115.64424896]
[-293.61654663 -129.72091675]
[-278.55679321 -134.51457214]
[-264.55688477 -127.18123627]
[-259.92269897 -112.07163239]
[-246.56240845 -105.25236511]
[-233.20211792 -98.43309021]
[-225.82199097 -98.19213104]
[-219.70265198 -91.42249298]
[-206.43974304 -84.41568756]
[-193.17683411 -77.40888214]
[-179.91392517 -70.40207672]
[-170.92785645 -77.99128723]
[-159.87792969 -82.12155151]
[-148.04788208 -82.28814697]
[-136.82057190 -78.44830322]
[-127.51619720 -71.02890015]
[-121.23712158 -60.87919617]
[-118.73730469 -49.17359924]
[-120.33180237 -37.27583313]
[-107.37677765 -29.71491623]
[-94.42176056 -22.15399551]
[-81.46674347 -14.59307671]
[-68.51172638 -7.03215790]
[-55.55670929 0.52876157]
[-42.60168839 8.08968067]
[-29.64667130 15.65060043]
[-16.69165230 23.21151924]
[-3.73663473 30.77243805]
[9.21838379 38.33335876]
[22.17340279 45.89427567]
[35.12842178 53.45519638]
[48.08343887 61.01611710]
[61.03845596 68.57703400]
[73.99347687 76.13795471]
[86.94849396 83.69887543]
[76.43006897 73.00482178]
[74.65867615 58.10978317]
[82.37561035 45.24708939]
[96.35147095 39.79957199]
[110.73757172 44.04692459]
[119.51357269 56.21170044]
[119.00685883 71.20314026]
[109.42839813 82.74822998]
[121.69882202 74.12055206]
[133.96925354 65.49288177]
[146.23966980 56.86521149]
[147.48291016 46.07061386]
[154.31712341 37.90721130]
[164.30448914 34.91130066]
[174.08302307 37.83963394]
[186.59162903 29.56106758]
[199.10023499 21.28250122]
[211.60885620 13.00393677]
[224.11746216 4.72537136]
[236.62606812 -3.55319405]
[249.13468933 -11.83175945]
[261.64328003 -20.11032486]
[256.62887573 -34.94190216]
[255.61959839 -50.55448151]
[258.67831421 -65.88637543]
[265.59143066 -79.89648438]
[275.88388062 -91.63497925]
[288.85165405 -100.30767822]
[303.61001587 -105.32983398]
[319.15390015 -106.36549377]
[334.42620850 -103.35001373]
[348.38995361 -96.49401093]
[360.09838867 -86.26873016]
[372.48913574 -94.72268677]
[384.87988281 -103.17664337]
[397.27062988 -111.63059998]
[401.64883423 -127.06468201]
[416.50054932 -133.13150024]
[430.43276978 -125.17712402]
[432.75793457 -109.30345917]
[421.69235229 -97.68743134]
[405.72457886 -99.23985291]
[393.33383179 -90.78589630]
[380.94308472 -82.33193970]
[368.55233765 -73.87798309]
[373.54559326 -60.37725067]
[375.15863037 -46.06386566]
[373.29287720 -31.77168846]
[368.05261230 -18.33443451]
[359.73910522 -6.53704262]
[348.83325195 2.93017125]
[335.96780396 9.51191616]
[321.89065552 12.82048798]
[307.42135620 12.65860844]
[293.40347290 9.03118229]
[280.65518188 2.14527154]
[269.92187500 -7.60171318]
[257.41323853 0.67685205]
[244.90463257 8.95541763]
[232.39602661 17.23398209]
[219.88742065 25.51254845]
[207.37879944 33.79111481]
[194.87019348 42.06967926]
[182.36158752 50.34824371]
[175.01150513 68.23841095]
[154.86734009 69.13563538]
[142.59692383 77.76330566]
[130.32649231 86.39097595]
[118.05607605 95.01864624]
[113.68284607 109.36698914]
[119.05507660 123.37195587]
[124.42731476 137.37692261]
[129.79954529 151.38189697]
[135.78968811 158.26611328]
[135.14727783 165.62217712]
[140.32168579 179.70144653]
[145.49609375 193.78070068]
[149.49240112 197.11161804]
[151.60591125 201.22914124]
[151.85171509 205.28665161]
[150.57789612 208.56564331]
[155.15281677 222.85095215]
[159.72773743 237.13626099]
[164.30265808 251.42156982]
[168.87757874 265.70687866]
[173.45249939 279.99218750]
[178.56211853 277.74041748]
[184.77770996 277.12673950]
[191.57968140 278.51889038]
[198.34437561 282.12466431]
[204.39164734 287.96536255]
[211.49169922 301.17858887]
[218.59175110 314.39181519]
[233.94572449 314.78033447]
[247.04002380 322.80749512]
[254.35232544 336.31399536]
[253.91566467 351.66668701]
[245.84750366 364.73574829]
[232.31814575 372.00567627]
[216.96690369 371.52090454]
[203.92320251 363.41183472]
[196.69570923 349.85974121]
[197.22860718 334.51010132]
[205.37852478 321.49188232]
[198.27847290 308.27865601]
[191.17842102 295.06542969]
[176.68498230 298.93069458]
[177.10757446 313.92474365]
[177.53015137 328.91879272]
[177.95272827 343.91284180]
[178.37530518 358.90689087]
[178.79788208 373.90093994]
[179.22047424 388.89498901]
[185.71063232 404.55749512]
[172.45686340 415.12982178]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 220]
[2 219]
[3 218]
[4 217]
[5 216]
[6 215]
[7 214]
[8 193]
[9 192]
[10 191]
[11 190]
[12 189]
[13 188]
[14 184]
[15 183]
[16 182]
[17 180]
[18 179]
[19 178]
[20 177]
[23 41]
[24 40]
[25 39]
[26 38]
[27 37]
[28 36]
[42 107]
[43 106]
[44 105]
[45 104]
[46 103]
[47 102]
[48 101]
[49 100]
[50 99]
[51 98]
[52 97]
[53 96]
[54 95]
[55 94]
[56 93]
[57 92]
[58 91]
[63 83]
[64 82]
[65 81]
[66 80]
[67 78]
[68 77]
[69 76]
[115 176]
[116 175]
[117 174]
[118 173]
[122 171]
[123 170]
[124 169]
[125 168]
[126 167]
[127 166]
[128 165]
[129 164]
[140 152]
[141 151]
[142 150]
[143 149]
[198 213]
[199 212]
[200 211]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
