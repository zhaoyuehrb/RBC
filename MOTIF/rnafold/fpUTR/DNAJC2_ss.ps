%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:20:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCGGAUCUCAGUCAGUAUAGAACUAGGUUACCGCACACGUUGGCGGGGGUGGGAGGGUGUGAGACUGGCCUCCACACCACGAAAGAUCCAUCCCGGAAGUGCUUACUGGUCGUCUCCAUGCGCCGGUUCCUGGGCGUCUUAGAGCCAAGGCGCGAGGCUCGGAGUGAGAGGUAGAGCUGGAGGGGACCCUAAGCGCCCUCCGCCCGGGACGUGAGCCGCUGCGCCCACCGGGCUAGACCCGGCGCCAUC\
) } def
/len { sequence length } bind def

/coor [
[85.49765015 190.83030701]
[97.54402924 181.04948425]
[96.60964203 166.07861328]
[95.67524719 151.10774231]
[94.74085236 136.13688660]
[93.80646515 121.16600800]
[79.10387421 118.19381714]
[72.42765045 131.62617493]
[65.75141907 145.05851746]
[59.07519531 158.49085999]
[58.06378937 167.54188538]
[52.23109818 172.04827881]
[45.38793945 185.39634705]
[38.62811279 198.78681946]
[31.95188713 212.21917725]
[37.22229004 227.11877441]
[30.33811188 241.34494019]
[15.38361263 246.45751953]
[1.23103154 239.42332458]
[-3.72315621 224.41560364]
[3.46028137 210.33818054]
[18.51953888 205.54293823]
[25.19576454 192.11059570]
[25.35801888 184.74163818]
[32.03985977 178.55319214]
[38.88302231 165.20510864]
[45.64284515 151.81463623]
[52.31907272 138.38229370]
[58.99530029 124.94994354]
[65.67152405 111.51759338]
[60.11046982 106.48522949]
[45.83311844 111.08493042]
[48.98835754 96.42050934]
[43.42730331 91.38814545]
[30.72643852 99.36862946]
[18.02557564 107.34911346]
[17.11615753 122.83951569]
[7.24938440 134.81559753]
[-7.78076696 138.67230225]
[-22.19489670 132.92665100]
[-30.45047951 119.78796387]
[-29.37307358 104.30834198]
[-19.37696266 92.44000244]
[-4.30585814 88.74657440]
[10.04509449 94.64824677]
[22.74595642 86.66777039]
[35.44681931 78.68728638]
[32.93422699 63.89921951]
[18.31030846 60.56140518]
[3.68638968 57.22359085]
[-10.93752861 53.88578033]
[-25.56144714 50.54796600]
[-40.18536758 47.21015167]
[-54.80928421 43.87233734]
[-69.43320465 40.53452301]
[-87.46343994 53.99790192]
[-109.26272583 49.67580414]
[-120.50662994 30.83020210]
[-135.33909607 28.59456825]
[-150.17155457 26.35893440]
[-165.00401306 24.12330055]
[-179.83647156 21.88766670]
[-194.66894531 19.65203285]
[-209.51504517 17.50889587]
[-224.37423706 15.45834255]
[-236.81942749 25.19962883]
[-252.49731445 23.20477104]
[-262.10647583 10.65728092]
[-259.94598389 -4.99863768]
[-247.29759216 -14.47460556]
[-231.66539001 -12.14869881]
[-222.32366943 0.59916258]
[-207.46449280 2.64971662]
[-200.42759705 0.45660985]
[-192.43330383 4.81957006]
[-177.60084534 7.05520391]
[-162.76838684 9.29083824]
[-147.93591309 11.52647209]
[-133.10345459 13.76210594]
[-118.27099609 15.99773979]
[-114.02118683 9.31562233]
[-107.98321533 4.13983870]
[-100.66831207 0.93444866]
[-92.70340729 -0.00441383]
[-84.77742767 1.42420447]
[-77.58167267 5.11562586]
[-71.74956512 10.76695156]
[-67.80085754 17.90183640]
[-66.09539032 25.91060448]
[-51.47146988 29.24841881]
[-36.84755325 32.58623123]
[-22.22363281 35.92404556]
[-7.59971523 39.26185989]
[7.02420378 42.59967422]
[21.64812279 45.93748856]
[36.27204132 49.27530289]
[132.32533264 73.31967163]
[140.77513123 60.92609024]
[149.22492981 48.53250885]
[150.18649292 30.13125420]
[166.30484009 23.16276932]
[174.59948730 10.66481209]
[182.89411926 -1.83314419]
[191.18876648 -14.33110046]
[199.48341370 -26.82905769]
[207.77804565 -39.32701492]
[216.07269287 -51.82497025]
[214.28549194 -64.58123779]
[221.42987061 -74.81443787]
[233.23800659 -77.36262512]
[241.68780518 -89.75621033]
[250.13760376 -102.14978790]
[258.58740234 -114.54337311]
[259.96847534 -130.30418396]
[273.53085327 -136.46138000]
[281.98065186 -148.85496521]
[290.43045044 -161.24853516]
[298.88024902 -173.64212036]
[307.33004761 -186.03570557]
[295.34240723 -191.44323730]
[286.82443237 -205.12046814]
[286.29348755 -224.56362915]
[290.89315796 -238.84098816]
[295.49282837 -253.11834717]
[300.09249878 -267.39569092]
[304.69216919 -281.67306519]
[309.11349487 -296.00665283]
[313.35580444 -310.39425659]
[317.59808350 -324.78186035]
[321.84039307 -339.16943359]
[326.08267212 -353.55703735]
[325.50701904 -362.64617920]
[330.46859741 -368.09695435]
[334.88992310 -382.43054199]
[339.31124878 -396.76412964]
[343.73257446 -411.09771729]
[342.62350464 -428.01535034]
[358.57299805 -433.76434326]
[368.51254272 -420.02963257]
[358.06616211 -406.67639160]
[353.64483643 -392.34280396]
[349.22351074 -378.00921631]
[344.80218506 -363.67562866]
[340.47027588 -349.31475830]
[336.22799683 -334.92715454]
[331.98568726 -320.53955078]
[327.74337769 -306.15194702]
[323.50109863 -291.76437378]
[324.94433594 -287.23693848]
[323.57742310 -281.75497437]
[318.96954346 -277.07339478]
[314.36987305 -262.79602051]
[309.77020264 -248.51867676]
[305.17053223 -234.24131775]
[300.57086182 -219.96395874]
[306.34613037 -215.17895508]
[317.89666748 -205.60894775]
[323.67193604 -200.82394409]
[336.84524536 -207.99775696]
[350.01858521 -215.17156982]
[363.19189453 -222.34538269]
[376.36523438 -229.51918030]
[375.10940552 -244.69622803]
[380.14132690 -259.06979370]
[390.58920288 -270.14959717]
[404.64288330 -276.01596069]
[419.86746216 -275.65252686]
[433.62518311 -269.12225342]
[443.53247070 -257.55651855]
[447.87280273 -242.95922852]
[445.89419556 -227.85939026]
[437.93945312 -214.87316895]
[425.38681030 -206.25048828]
[410.41104126 -203.48530579]
[395.60681152 -207.05667114]
[383.53903198 -216.34585571]
[370.36572266 -209.17205811]
[357.19238281 -201.99824524]
[344.01907349 -194.82443237]
[330.84573364 -187.65061951]
[319.72363281 -177.58590698]
[311.27383423 -165.19232178]
[302.82403564 -152.79873657]
[294.37423706 -140.40515137]
[285.92443848 -128.01158142]
[285.14776611 -113.13722992]
[270.98098755 -106.09357452]
[262.53118896 -93.69998932]
[254.08139038 -81.30641174]
[245.63157654 -68.91282654]
[245.25233459 -51.35671234]
[228.57064819 -43.53032684]
[220.27600098 -31.03237152]
[211.98136902 -18.53441429]
[203.68672180 -6.03645849]
[195.39207458 6.46149778]
[187.09744263 18.95945358]
[178.80279541 31.45741081]
[180.89323425 43.35511780]
[174.10760498 53.82963562]
[161.61851501 56.98231125]
[153.16871643 69.37589264]
[144.71891785 81.76947021]
[146.30543518 96.68533325]
[157.17317200 107.02420807]
[168.04090881 117.36308289]
[178.90864563 127.70195770]
[189.77638245 138.04083252]
[200.64411926 148.37971497]
[215.81764221 145.72068787]
[229.48760986 152.42779541]
[236.50401306 165.74072266]
[234.36146545 180.45626831]
[245.22920227 190.79515076]
[256.09695435 201.13401794]
[271.33273315 198.19294739]
[285.37319946 204.79942322]
[292.81942749 218.41313171]
[290.80825806 233.79931641]
[280.11297607 245.04168701]
[264.84616089 247.81730652]
[250.87821960 241.05889893]
[243.58009338 227.36521912]
[245.75807190 212.00175476]
[234.89033508 201.66287231]
[224.02259827 191.32400513]
[209.43212891 194.19740295]
[195.78601074 187.85331726]
[188.40586853 174.53465271]
[190.30523682 159.24745178]
[179.43750000 148.90856934]
[168.56976318 138.56970215]
[157.70204163 128.23081970]
[146.83430481 117.89194489]
[135.96656799 107.55307007]
[129.16925049 110.72270966]
[139.39921570 121.69303131]
[132.12702942 134.81230164]
[117.40263367 131.95008850]
[115.57463837 117.06198120]
[108.77732849 120.23162079]
[109.71172333 135.20248413]
[110.64611816 150.17335510]
[111.58050537 165.14422607]
[112.51490021 180.11509705]
[125.68397522 188.32211304]
[131.48280334 202.71493530]
[127.68161011 217.75921631]
[115.74204254 227.67013550]
[100.25510406 228.63673401]
[87.17583466 220.28735352]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 245]
[3 244]
[4 243]
[5 242]
[6 241]
[7 30]
[8 29]
[9 28]
[10 27]
[12 26]
[13 25]
[14 23]
[15 22]
[34 47]
[35 46]
[36 45]
[48 96]
[49 95]
[50 94]
[51 93]
[52 92]
[53 91]
[54 90]
[55 89]
[58 80]
[59 79]
[60 78]
[61 77]
[62 76]
[63 75]
[64 73]
[65 72]
[97 203]
[98 202]
[99 201]
[101 198]
[102 197]
[103 196]
[104 195]
[105 194]
[106 193]
[107 192]
[110 190]
[111 189]
[112 188]
[113 187]
[115 185]
[116 184]
[117 183]
[118 182]
[119 181]
[122 155]
[123 154]
[124 153]
[125 152]
[126 151]
[127 148]
[128 147]
[129 146]
[130 145]
[131 144]
[133 143]
[134 142]
[135 141]
[136 140]
[158 180]
[159 179]
[160 178]
[161 177]
[162 176]
[204 235]
[205 234]
[206 233]
[207 232]
[208 231]
[209 230]
[213 226]
[214 225]
[215 224]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
