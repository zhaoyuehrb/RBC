%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:33:22 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SPINK13)
} def

/sequence { (\
GCAGGCCCAUAUUCAGCCACCUCAUCCAGGCCUUAUCAAAGAAGAGUCUUAUAUGAGAUCAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 17 0.068292418 ubox
1 31 0.007013849 ubox
2 16 0.068429928 ubox
2 30 0.006755069 ubox
3 13 0.007094298 ubox
3 22 0.006329206 ubox
3 33 0.121637554 ubox
3 34 0.006664993 ubox
4 12 0.008523861 ubox
4 13 0.007943013 ubox
4 14 0.054643081 ubox
4 18 0.981689575 ubox
4 21 0.007056836 ubox
4 27 0.003751402 ubox
4 32 0.131697922 ubox
4 60 0.004457579 ubox
5 12 0.007620087 ubox
5 13 0.046808640 ubox
5 17 0.982708444 ubox
5 20 0.007285794 ubox
5 26 0.003710767 ubox
5 31 0.132732437 ubox
6 16 0.981042884 ubox
6 30 0.132389805 ubox
7 29 0.131785899 ubox
7 30 0.009739870 ubox
8 29 0.013642777 ubox
8 55 0.003700639 ubox
9 25 0.020924525 ubox
9 54 0.003706638 ubox
10 24 0.020271418 ubox
10 53 0.003701856 ubox
11 25 0.037000644 ubox
11 52 0.003650770 ubox
12 24 0.036841745 ubox
12 51 0.003380183 ubox
15 22 0.071222728 ubox
16 21 0.072965988 ubox
16 31 0.037928491 ubox
17 30 0.038030318 ubox
18 29 0.037997948 ubox
20 30 0.088131408 ubox
21 29 0.088610330 ubox
21 30 0.006307737 ubox
21 46 0.004802139 ubox
21 57 0.980346794 ubox
22 28 0.084995797 ubox
22 29 0.005907327 ubox
22 30 0.005377248 ubox
22 45 0.005087853 ubox
22 56 0.983401589 ubox
22 58 0.003932330 ubox
23 29 0.007551559 ubox
23 44 0.005105636 ubox
23 55 0.983846825 ubox
23 57 0.004129669 ubox
24 52 0.013952237 ubox
24 54 0.980088970 ubox
24 59 0.006246150 ubox
25 42 0.004754647 ubox
25 51 0.024606471 ubox
25 53 0.927201674 ubox
25 56 0.003845337 ubox
25 58 0.006746774 ubox
26 41 0.004810190 ubox
26 55 0.003889644 ubox
26 57 0.006810779 ubox
27 55 0.006723074 ubox
28 49 0.837758941 ubox
28 50 0.433128365 ubox
28 54 0.005149249 ubox
29 37 0.003653308 ubox
29 48 0.881070469 ubox
29 49 0.433704362 ubox
29 50 0.005450929 ubox
29 60 0.054050118 ubox
30 47 0.881393508 ubox
30 48 0.434515892 ubox
30 49 0.003595107 ubox
30 59 0.050845809 ubox
31 46 0.879759379 ubox
32 41 0.098323905 ubox
32 44 0.844201320 ubox
32 46 0.436387675 ubox
32 57 0.116556755 ubox
33 39 0.005637600 ubox
33 40 0.098178274 ubox
33 41 0.012325080 ubox
33 42 0.094791931 ubox
33 43 0.835378799 ubox
33 44 0.110062402 ubox
33 45 0.458262375 ubox
33 46 0.004692013 ubox
33 56 0.118345205 ubox
34 38 0.008619293 ubox
34 39 0.091557932 ubox
34 40 0.026848332 ubox
34 41 0.123465571 ubox
34 42 0.791021126 ubox
34 43 0.118746673 ubox
34 44 0.444961091 ubox
34 45 0.010526257 ubox
34 53 0.009120615 ubox
34 55 0.119750300 ubox
34 57 0.003831703 ubox
35 52 0.009885331 ubox
35 54 0.119642740 ubox
35 59 0.004762945 ubox
36 42 0.443617859 ubox
36 45 0.107214593 ubox
36 51 0.009290966 ubox
36 53 0.117290567 ubox
36 56 0.031014756 ubox
36 58 0.005030035 ubox
37 41 0.452432366 ubox
37 44 0.109553005 ubox
37 55 0.033133355 ubox
37 57 0.005057455 ubox
38 50 0.003800453 ubox
38 54 0.032634879 ubox
39 50 0.123236423 ubox
40 49 0.126970437 ubox
41 48 0.127278388 ubox
41 60 0.017688974 ubox
42 47 0.116318877 ubox
42 50 0.014425333 ubox
42 59 0.015413779 ubox
43 49 0.014703988 ubox
44 48 0.014418962 ubox
44 60 0.075337251 ubox
45 59 0.065384654 ubox
46 59 0.097209054 ubox
47 56 0.023516710 ubox
47 58 0.118232869 ubox
48 55 0.024105390 ubox
48 57 0.119988803 ubox
49 56 0.119192187 ubox
50 55 0.111535594 ubox
54 61 0.008884928 ubox
55 60 0.009870881 ubox
4 18 0.9500000 lbox
5 17 0.9500000 lbox
6 16 0.9500000 lbox
21 57 0.9500000 lbox
22 56 0.9500000 lbox
23 55 0.9500000 lbox
24 54 0.9500000 lbox
25 53 0.9500000 lbox
28 49 0.9500000 lbox
29 48 0.9500000 lbox
30 47 0.9500000 lbox
31 46 0.9500000 lbox
32 44 0.9500000 lbox
33 43 0.9500000 lbox
34 42 0.9500000 lbox
showpage
end
%%EOF
