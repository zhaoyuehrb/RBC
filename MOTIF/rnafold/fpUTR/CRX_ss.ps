%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:00:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACCUUGGCCGGGAUUACCCUCCGAGUUCCAGGCCAUGACAAAUGACAUCACUCCCGGCCCAGGCUUAAAAUCUCCCCAUGUGAGGGGAUGUGUUUCCUUCAGCCUCUGCUGUCUGGCCGCUCUGUCUAGGUCCUGGGCCACGGGAGAGCCCCGUCCCUCCUUUCUGAAGGCCCCCUGACUUGGGCCUCAGUGUCCCCGAAGAUC\
) } def
/len { sequence length } bind def

/coor [
[118.36827850 262.27215576]
[103.44754028 260.73214722]
[89.78150177 254.54835510]
[78.77558136 244.35670471]
[71.56163788 231.20530701]
[68.88156128 216.44667053]
[71.01077271 201.59921265]
[61.72212982 213.37719727]
[52.43348694 225.15519714]
[43.14484406 236.93318176]
[33.85620117 248.71118164]
[24.65719795 260.55932617]
[15.54836941 272.47692871]
[6.43954039 284.39453125]
[-2.66928864 296.31213379]
[-11.77811813 308.22973633]
[-20.88694763 320.14733887]
[-16.32276154 334.97796631]
[-21.37932968 349.64804077]
[-34.11229706 358.51657104]
[-49.62557983 358.17346191]
[-61.95400238 348.75064087]
[-66.35703278 333.87136841]
[-61.14162064 319.25701904]
[-48.31319427 310.52713013]
[-32.80455017 311.03851318]
[-23.69571877 299.12091064]
[-14.58689022 287.20330811]
[-5.47806168 275.28570557]
[3.63076735 263.36810303]
[12.73959637 251.45048523]
[14.30431175 244.22494507]
[22.07820702 239.42253113]
[31.36685181 227.64454651]
[40.65549469 215.86654663]
[49.94413757 204.08856201]
[59.23278427 192.31056213]
[60.33282471 182.71965027]
[69.03552246 176.19065857]
[75.21965027 162.52476501]
[81.40377045 148.85887146]
[87.58789825 135.19297791]
[70.46094513 120.46251678]
[65.45609283 99.30651093]
[73.51531219 80.03395081]
[90.63993835 69.62537384]
[89.72988892 54.65300751]
[88.81983948 39.68063736]
[72.91793823 32.20608521]
[63.04080200 17.78178978]
[61.83397293 0.43081450]
[69.53982544 -15.06251049]
[83.95559692 -24.47181892]
[82.59157562 -39.40967178]
[81.22754669 -54.34752274]
[79.86352539 -69.28537750]
[78.49950409 -84.22322845]
[76.90893555 -99.13865662]
[75.09219360 -114.02823639]
[73.27545166 -128.91781616]
[71.45870972 -143.80738831]
[69.64196777 -158.69696045]
[67.82522583 -173.58653259]
[66.00848389 -188.47610474]
[64.19174194 -203.36569214]
[62.26206970 -218.24104309]
[60.21957016 -233.10133362]
[58.17707062 -247.96162415]
[56.13457108 -262.82189941]
[40.16535187 -266.64071655]
[26.80172157 -276.10940552]
[17.94945335 -289.83993530]
[14.85686874 -305.83920288]
[17.93887520 -321.79840088]
[26.72159767 -335.42617798]
[17.79468155 -347.48065186]
[8.86776543 -359.53512573]
[-0.05915051 -371.58956909]
[-8.98606682 -383.64404297]
[-24.65262985 -385.72595215]
[-34.19195557 -398.32662964]
[-31.94453049 -413.97030640]
[-19.24371338 -423.37585449]
[-3.62467146 -420.96316528]
[5.64609289 -408.16363525]
[3.06840014 -392.57095337]
[11.99531651 -380.51651001]
[20.92223167 -368.46203613]
[29.84914780 -356.40756226]
[38.77606583 -344.35308838]
[46.55066299 -347.30780029]
[54.75069046 -348.69851685]
[56.34125519 -363.61395264]
[57.93181992 -378.52938843]
[50.61940765 -386.58688354]
[48.98404312 -397.12203979]
[53.32727814 -406.61758423]
[61.99457550 -412.03695679]
[64.03707886 -426.89724731]
[53.21368408 -440.63845825]
[55.62799072 -457.62185669]
[69.30288696 -467.40899658]
[71.11962891 -482.29858398]
[72.93637085 -497.18814087]
[74.75311279 -512.07769775]
[67.83959198 -526.94836426]
[77.48133850 -540.21368408]
[93.75976562 -538.22747803]
[99.92900848 -523.03295898]
[89.64269257 -510.26098633]
[87.82595062 -495.37139893]
[86.00920868 -480.48184204]
[84.19246674 -465.59225464]
[93.47581482 -456.65380859]
[95.95191193 -443.80859375]
[90.49649811 -431.70495605]
[78.89736176 -424.85473633]
[76.85486603 -409.99444580]
[85.44515991 -392.67324829]
[72.84725189 -376.93881226]
[71.25669098 -362.02337646]
[69.66612244 -347.10794067]
[83.53326416 -340.25552368]
[94.07485199 -328.88998413]
[99.89159393 -314.48455811]
[100.19877625 -298.91830444]
[94.93206787 -284.23095703]
[84.75908661 -272.35562134]
[70.99485779 -264.86441040]
[73.03736115 -250.00411987]
[75.07985687 -235.14382935]
[77.12236023 -220.28355408]
[81.14871979 -214.08312988]
[79.08132172 -205.18243408]
[80.89806366 -190.29284668]
[82.71480560 -175.40327454]
[84.53154755 -160.51370239]
[86.34828949 -145.62413025]
[88.16503143 -130.73455811]
[89.98177338 -115.84497833]
[91.79851532 -100.95539856]
[94.94338989 -97.35733795]
[95.85932922 -91.74458313]
[93.43735504 -85.58724976]
[94.80137634 -70.64939880]
[96.16540527 -55.71154785]
[97.52942657 -40.77369308]
[98.89344788 -25.83584023]
[110.87034607 -21.80364418]
[120.46726227 -13.50983715]
[126.23474884 -2.16032052]
[127.28412628 10.57412720]
[123.42420959 22.80378914]
[115.19494629 32.70042801]
[103.79220581 38.77059174]
[104.70225525 53.74295807]
[105.61230469 68.71532440]
[113.26892090 70.44282532]
[120.40808105 74.04967499]
[126.56771851 79.38350677]
[131.33009338 86.17831421]
[134.34970093 94.06725311]
[135.37754822 102.60221863]
[134.28001404 111.27926636]
[131.05116272 119.56835175]
[125.81734467 126.94569397]
[137.08555603 136.84657288]
[148.35377502 146.74745178]
[159.62197876 156.64833069]
[168.13710022 159.96334839]
[170.98460388 166.78599548]
[182.10125732 176.85673523]
[193.21791077 186.92749023]
[204.33456421 196.99822998]
[215.45121765 207.06898499]
[230.61076355 203.75720215]
[244.80815125 210.01928711]
[252.58421326 223.44734192]
[250.94888306 238.87800598]
[240.53097534 250.37786865]
[225.33639526 253.52500916]
[211.20777893 247.10926819]
[203.57785034 233.59765625]
[205.38047791 218.18563843]
[194.26382446 208.11489868]
[183.14717102 198.04414368]
[172.03051758 187.97338867]
[160.91384888 177.90264893]
[149.72109985 167.91654968]
[138.45289612 158.01567078]
[127.18467712 148.11477661]
[115.91646576 138.21389771]
[101.25378418 141.37710571]
[95.06966400 155.04299927]
[88.88553619 168.70887756]
[82.70141602 182.37477112]
[94.90526581 173.65319824]
[109.24230957 169.24305725]
[124.23810577 169.59793091]
[138.35049438 174.68128967]
[150.12812805 183.97038269]
[158.35980225 196.50990295]
[162.19897461 211.01028442]
[161.25079346 225.98028564]
[155.61279297 239.88038635]
[145.86479187 251.28109741]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 37]
[8 36]
[9 35]
[10 34]
[11 33]
[12 31]
[13 30]
[14 29]
[15 28]
[16 27]
[17 26]
[39 196]
[40 195]
[41 194]
[42 193]
[46 157]
[47 156]
[48 155]
[53 148]
[54 147]
[55 146]
[56 145]
[57 144]
[58 141]
[59 140]
[60 139]
[61 138]
[62 137]
[63 136]
[64 135]
[65 134]
[66 132]
[67 131]
[68 130]
[69 129]
[75 90]
[76 89]
[77 88]
[78 87]
[79 86]
[92 122]
[93 121]
[94 120]
[98 118]
[99 117]
[102 113]
[103 112]
[104 111]
[105 110]
[166 192]
[167 191]
[168 190]
[169 189]
[171 188]
[172 187]
[173 186]
[174 185]
[175 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
