%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:58:20 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DPPA5)
} def

/sequence { (\
GAUUAGGCCUGGUUUGCGCUGGAGAGUGGUCUUGGUUGUGAGGGUCAUAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 14 0.004174745 ubox
1 31 0.043313404 ubox
1 33 0.004272208 ubox
1 37 0.064150787 ubox
1 46 0.099233019 ubox
2 13 0.004909985 ubox
2 30 0.043394494 ubox
2 36 0.082773869 ubox
2 39 0.012679802 ubox
2 45 0.098908083 ubox
2 48 0.074410167 ubox
3 12 0.004990081 ubox
3 22 0.005753209 ubox
3 29 0.043333385 ubox
3 35 0.087574004 ubox
3 38 0.012357878 ubox
3 41 0.047273484 ubox
3 42 0.007318141 ubox
3 43 0.007098995 ubox
3 44 0.092955150 ubox
3 47 0.068646692 ubox
3 50 0.462251907 ubox
3 51 0.034021899 ubox
4 11 0.004935231 ubox
4 16 0.006875220 ubox
4 21 0.010857313 ubox
4 28 0.042994152 ubox
4 34 0.087863314 ubox
4 38 0.012105851 ubox
4 40 0.057884825 ubox
4 41 0.011893381 ubox
4 42 0.006390325 ubox
4 43 0.067241309 ubox
4 49 0.530549036 ubox
4 50 0.045570478 ubox
5 10 0.004535195 ubox
5 15 0.007780575 ubox
5 20 0.011463653 ubox
5 27 0.042425740 ubox
5 32 0.100275017 ubox
5 33 0.075669047 ubox
5 37 0.014560717 ubox
5 39 0.055406890 ubox
5 48 0.532784881 ubox
6 14 0.008040909 ubox
6 19 0.011483828 ubox
6 20 0.005820204 ubox
6 31 0.115771497 ubox
6 32 0.060682660 ubox
6 36 0.011846430 ubox
6 37 0.108688422 ubox
6 46 0.964197104 ubox
7 13 0.008201498 ubox
7 17 0.012089014 ubox
7 19 0.006169681 ubox
7 27 0.004495777 ubox
7 30 0.116063955 ubox
7 31 0.060416435 ubox
7 36 0.177704337 ubox
7 39 0.008176762 ubox
7 45 0.970472005 ubox
8 12 0.008175634 ubox
8 16 0.012085971 ubox
8 18 0.006208754 ubox
8 22 0.025927413 ubox
8 26 0.004876756 ubox
8 29 0.124618664 ubox
8 35 0.189799395 ubox
8 38 0.007809618 ubox
8 43 0.028291848 ubox
8 44 0.970949629 ubox
9 21 0.025842478 ubox
9 22 0.039912269 ubox
9 24 0.003908769 ubox
9 28 0.123626494 ubox
9 29 0.039347806 ubox
9 34 0.189796226 ubox
9 35 0.009848858 ubox
9 42 0.034290663 ubox
9 43 0.970601405 ubox
9 44 0.008988815 ubox
10 18 0.006382124 ubox
10 21 0.042037259 ubox
10 23 0.004096976 ubox
10 28 0.039326074 ubox
10 34 0.009851980 ubox
10 41 0.036334495 ubox
10 42 0.896062548 ubox
10 43 0.011227193 ubox
10 47 0.013239053 ubox
11 17 0.013545381 ubox
11 20 0.049231343 ubox
11 27 0.064164658 ubox
11 31 0.013513023 ubox
11 32 0.178007168 ubox
11 33 0.014881323 ubox
11 37 0.007771742 ubox
11 39 0.007915888 ubox
11 46 0.014667287 ubox
12 19 0.050263239 ubox
12 27 0.005421454 ubox
12 30 0.009997946 ubox
12 31 0.187891571 ubox
12 32 0.014515995 ubox
12 36 0.007106269 ubox
12 39 0.026171730 ubox
12 45 0.013687268 ubox
13 18 0.047469127 ubox
13 22 0.007166354 ubox
13 23 0.025954416 ubox
13 24 0.084166377 ubox
13 25 0.072323425 ubox
13 26 0.017169274 ubox
13 29 0.013949198 ubox
13 35 0.009265167 ubox
13 38 0.018779275 ubox
13 41 0.118244904 ubox
13 42 0.345373428 ubox
13 43 0.003501063 ubox
13 44 0.011092757 ubox
14 21 0.007269037 ubox
14 22 0.025934210 ubox
14 23 0.086771685 ubox
14 24 0.072388866 ubox
14 25 0.019104281 ubox
14 28 0.004925602 ubox
14 29 0.034048467 ubox
14 34 0.009857852 ubox
14 35 0.007627516 ubox
14 40 0.107346842 ubox
14 41 0.855552565 ubox
14 42 0.027634155 ubox
14 43 0.011910981 ubox
15 21 0.023967811 ubox
15 22 0.086134747 ubox
15 23 0.071621180 ubox
15 24 0.019249492 ubox
15 28 0.036731200 ubox
15 34 0.007167072 ubox
15 38 0.054932124 ubox
15 40 0.862315401 ubox
15 41 0.066081723 ubox
15 42 0.017635205 ubox
16 20 0.011436093 ubox
16 27 0.043550033 ubox
16 30 0.020808309 ubox
16 33 0.005831730 ubox
16 36 0.154109431 ubox
16 37 0.047519620 ubox
16 39 0.922735492 ubox
17 26 0.043744842 ubox
17 28 0.201423229 ubox
17 29 0.015501336 ubox
17 34 0.030312801 ubox
17 35 0.154443611 ubox
17 38 0.926553235 ubox
17 40 0.096298642 ubox
18 27 0.206899961 ubox
18 30 0.024473956 ubox
18 33 0.024488046 ubox
18 36 0.548516507 ubox
18 37 0.732100638 ubox
18 39 0.099882746 ubox
19 26 0.207165459 ubox
19 29 0.024842357 ubox
19 35 0.755363479 ubox
19 38 0.099994145 ubox
20 25 0.205098587 ubox
20 28 0.024630107 ubox
20 34 0.628047475 ubox
21 27 0.021953466 ubox
21 31 0.022605820 ubox
21 32 0.245303277 ubox
21 33 0.443984780 ubox
21 37 0.005968988 ubox
22 30 0.019199930 ubox
22 31 0.297439240 ubox
22 32 0.198604356 ubox
22 33 0.787839414 ubox
22 36 0.006254982 ubox
23 30 0.293222178 ubox
23 32 0.891025253 ubox
23 33 0.011885963 ubox
24 31 0.914651599 ubox
24 32 0.006202270 ubox
24 33 0.089211859 ubox
25 30 0.890999799 ubox
25 32 0.092375615 ubox
26 31 0.092644557 ubox
26 48 0.019160828 ubox
27 47 0.019673008 ubox
28 46 0.019868848 ubox
29 45 0.018227154 ubox
30 41 0.025029020 ubox
30 43 0.006836457 ubox
30 44 0.017594269 ubox
31 40 0.026845633 ubox
31 42 0.025255633 ubox
31 43 0.018546982 ubox
31 44 0.004363958 ubox
32 41 0.025832570 ubox
32 42 0.018492037 ubox
32 43 0.004367348 ubox
33 40 0.025454196 ubox
33 41 0.018400985 ubox
33 42 0.004432957 ubox
33 47 0.005036364 ubox
34 39 0.020335505 ubox
34 46 0.005598895 ubox
35 45 0.005112579 ubox
36 44 0.004596220 ubox
36 50 0.108952844 ubox
36 51 0.003613836 ubox
37 43 0.004998386 ubox
37 47 0.007425571 ubox
37 49 0.175436832 ubox
37 50 0.007286132 ubox
38 46 0.009699778 ubox
38 48 0.197866403 ubox
39 44 0.003533710 ubox
39 47 0.199496366 ubox
40 46 0.200004394 ubox
41 45 0.174008217 ubox
6 46 0.9500000 lbox
7 45 0.9500000 lbox
8 44 0.9500000 lbox
9 43 0.9500000 lbox
10 42 0.9500000 lbox
14 41 0.9500000 lbox
15 40 0.9500000 lbox
16 39 0.9500000 lbox
17 38 0.9500000 lbox
18 37 0.9500000 lbox
22 33 0.9500000 lbox
23 32 0.9500000 lbox
24 31 0.9500000 lbox
25 30 0.9500000 lbox
showpage
end
%%EOF
