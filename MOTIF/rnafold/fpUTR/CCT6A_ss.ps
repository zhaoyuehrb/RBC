%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:10:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGGGCGCCGGACGACCUGUGGCCCAAUGGCGGCGGCGCGCGGGCACGCUGGGGGCCGGCCAGACGGGCCGACUUUUCCAGAAGACCCGGAUAGUUCCUCCCGGCCACGCCGCGCCGGCUCUGGGCACUCAGCAUCGUUUCCUUUUCCUCCGCUGGAGCAGCU\
) } def
/len { sequence length } bind def

/coor [
[264.71151733 819.97015381]
[262.15368652 805.18988037]
[259.59585571 790.40954590]
[257.03802490 775.62927246]
[254.48019409 760.84893799]
[251.92236328 746.06860352]
[235.58731079 740.74700928]
[224.11819458 727.83697510]
[220.72319031 710.81469727]
[226.42002869 694.32476807]
[239.73318481 682.91271973]
[236.61450195 668.24047852]
[233.49583435 653.56829834]
[230.09837341 638.95812988]
[226.42338562 624.41528320]
[222.74838257 609.87243652]
[209.85717773 597.99359131]
[214.96327209 580.32336426]
[211.01206970 565.85314941]
[207.06085205 551.38287354]
[192.12533569 543.69647217]
[187.25323486 527.26922607]
[195.91697693 512.09686279]
[191.69099426 497.70446777]
[187.46499634 483.31207275]
[183.23901367 468.91967773]
[179.01303101 454.52728271]
[168.52941895 448.43560791]
[164.90843201 436.44400024]
[170.62246704 424.84753418]
[166.67124939 410.37728882]
[162.72004700 395.90704346]
[159.05168152 392.78482056]
[157.33317566 387.30786133]
[158.90512085 380.81045532]
[155.50765991 366.20025635]
[152.11021423 351.59008789]
[148.71275330 336.97991943]
[145.31530762 322.36972046]
[141.91786194 307.75955200]
[138.52040100 293.14938354]
[134.98402405 278.57220459]
[131.30902100 264.02935791]
[127.49575043 249.52214050]
[123.54454041 235.05191040]
[119.59333038 220.58166504]
[114.77594757 214.93173218]
[115.70745087 205.79824829]
[112.03245544 191.25540161]
[108.42420197 188.06388855]
[106.81027985 182.55520630]
[108.50563812 176.08889771]
[105.38696289 161.41668701]
[102.26828766 146.74447632]
[99.14961243 132.07225037]
[96.03093719 117.40003967]
[79.63877106 110.44959259]
[74.25971985 89.17153168]
[64.98733521 77.38073730]
[55.71495056 65.58994293]
[46.44256592 53.79914474]
[37.17018127 42.00835037]
[21.47539711 38.68369675]
[14.41829109 24.27617073]
[21.41247177 9.83799171]
[37.09260178 6.44489574]
[49.43022537 16.69977570]
[48.96097565 32.73596573]
[58.23336029 44.52676010]
[67.50574493 56.31755829]
[76.77812958 68.10835266]
[86.05051422 79.89914703]
[100.40203094 75.53633881]
[101.54331970 60.57982254]
[102.68461609 45.62330246]
[94.87919617 35.31778717]
[96.16532898 22.85762024]
[105.30662537 14.89199162]
[106.73246002 -0.04008754]
[108.15830231 -14.97216606]
[95.96828461 -24.42768860]
[90.84697723 -38.98020554]
[94.42857361 -53.98606110]
[105.57019806 -64.65694427]
[120.71660614 -67.58780670]
[135.03462219 -61.84343338]
[143.95542908 -49.25682068]
[144.63243103 -33.84431839]
[136.84957886 -20.52399826]
[123.09038544 -13.54632568]
[121.66454315 1.38575315]
[120.23870087 16.31783104]
[128.38835144 31.83789253]
[117.64113617 46.76459503]
[116.49983978 61.72111511]
[115.35854340 76.67763519]
[122.87552643 99.30439758]
[110.70315552 114.28136444]
[113.82183075 128.95358276]
[116.94050598 143.62579346]
[120.05918121 158.29800415]
[123.17785645 172.97023010]
[126.57530212 187.58039856]
[130.25030518 202.12324524]
[134.06358337 216.63044739]
[138.01478577 231.10069275]
[141.96598816 245.57093811]
[147.26834106 253.06584167]
[145.85186768 260.35433960]
[149.52687073 274.89718628]
[154.68556213 282.49169922]
[153.13058472 289.75192261]
[156.52803040 304.36209106]
[159.92549133 318.97229004]
[163.32293701 333.58245850]
[166.72038269 348.19262695]
[170.11784363 362.80282593]
[173.51528931 377.41299438]
[177.19029236 391.95584106]
[181.14149475 406.42608643]
[185.09271240 420.89633179]
[198.47061157 433.51934814]
[193.40542603 450.30130005]
[197.63140869 464.69369507]
[201.85739136 479.08605957]
[206.08338928 493.47845459]
[210.30937195 507.87084961]
[222.81851196 512.93719482]
[230.00848389 524.12774658]
[229.43440247 537.22161865]
[221.53109741 547.43170166]
[225.48231506 561.90191650]
[229.43351746 576.37219238]
[240.24816895 583.45538330]
[243.22406006 595.62310791]
[237.29122925 606.19738770]
[240.96623230 620.74023438]
[244.64122009 635.28308105]
[249.01571655 640.33795166]
[249.99792480 645.99353027]
[248.16804504 650.44958496]
[251.28671265 665.12182617]
[254.40539551 679.79400635]
[267.05889893 682.61590576]
[277.65771484 690.00012207]
[284.63772583 700.81378174]
[286.98526001 713.42089844]
[284.38436890 725.93041992]
[277.25860596 736.47943115]
[266.70266724 743.51080322]
[269.26049805 758.29113770]
[271.81832886 773.07141113]
[274.37615967 787.85174561]
[276.93399048 802.63201904]
[279.49182129 817.41235352]
[293.93521118 822.63580322]
[303.81954956 834.39141846]
[306.48602295 849.51708984]
[301.21731567 863.94403076]
[289.43075562 873.79144287]
[274.29681396 876.41052246]
[259.88644409 871.09661865]
[250.07600403 859.27923584]
[247.50442505 844.13714600]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 155]
[2 154]
[3 153]
[4 152]
[5 151]
[6 150]
[11 143]
[12 142]
[13 141]
[14 138]
[15 137]
[16 136]
[18 133]
[19 132]
[20 131]
[23 127]
[24 126]
[25 125]
[26 124]
[27 123]
[30 121]
[31 120]
[32 119]
[35 118]
[36 117]
[37 116]
[38 115]
[39 114]
[40 113]
[41 112]
[42 110]
[43 109]
[44 107]
[45 106]
[46 105]
[48 104]
[49 103]
[52 102]
[53 101]
[54 100]
[55 99]
[56 98]
[58 72]
[59 71]
[60 70]
[61 69]
[62 68]
[73 96]
[74 95]
[75 94]
[78 92]
[79 91]
[80 90]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
