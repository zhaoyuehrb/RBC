%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:01:29 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PROSER3)
} def

/sequence { (\
AAGCGACGGAGAUGCGCGCGGGGCCUGUUGGGUGAAGGAGCAGAGCGGCCGGAAGCGCGGAGGGAGCCGCGGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
3 15 0.045369279 ubox
3 17 0.179544267 ubox
3 19 0.394647090 ubox
3 56 0.005991198 ubox
3 67 0.012548800 ubox
3 70 0.139075906 ubox
4 14 0.045410505 ubox
4 16 0.183087229 ubox
4 18 0.396573475 ubox
4 20 0.022798760 ubox
4 55 0.006291764 ubox
4 66 0.012575742 ubox
4 69 0.138654097 ubox
4 71 0.864259295 ubox
5 13 0.033356955 ubox
5 15 0.183026401 ubox
5 17 0.396522483 ubox
5 19 0.023074507 ubox
5 68 0.134392574 ubox
5 70 0.874133567 ubox
7 14 0.178259817 ubox
7 16 0.398267710 ubox
7 18 0.023565998 ubox
7 51 0.007031611 ubox
7 69 0.884268986 ubox
7 71 0.006881674 ubox
8 13 0.155244903 ubox
8 15 0.397450834 ubox
8 17 0.023647256 ubox
8 50 0.007050313 ubox
8 68 0.885509692 ubox
8 70 0.006169675 ubox
9 49 0.006900185 ubox
9 67 0.885225257 ubox
13 42 0.003173192 ubox
13 47 0.005065543 ubox
13 59 0.227867274 ubox
14 41 0.003196227 ubox
14 46 0.005712227 ubox
14 56 0.013500953 ubox
14 58 0.233179229 ubox
14 70 0.003322622 ubox
15 40 0.003193158 ubox
15 45 0.005710915 ubox
15 55 0.014104166 ubox
15 57 0.233201099 ubox
15 59 0.863964863 ubox
15 69 0.003298407 ubox
16 56 0.233389068 ubox
16 58 0.865241298 ubox
17 55 0.233291266 ubox
17 57 0.865247395 ubox
17 59 0.010135677 ubox
17 71 0.076552887 ubox
18 41 0.004818621 ubox
18 49 0.005564865 ubox
18 56 0.866935900 ubox
18 58 0.010156106 ubox
18 70 0.133072955 ubox
19 40 0.004823621 ubox
19 48 0.005574402 ubox
19 51 0.147731697 ubox
19 55 0.866754303 ubox
19 57 0.010153602 ubox
19 69 0.133173130 ubox
19 71 0.024272670 ubox
20 50 0.184353787 ubox
20 56 0.009997350 ubox
20 68 0.133278674 ubox
20 70 0.032406228 ubox
21 49 0.184232231 ubox
21 50 0.043356797 ubox
21 67 0.133222613 ubox
21 68 0.003884302 ubox
22 49 0.038636346 ubox
22 50 0.971522210 ubox
22 67 0.004465123 ubox
22 68 0.032591509 ubox
23 33 0.006675301 ubox
23 46 0.187898193 ubox
23 49 0.972092400 ubox
23 67 0.032598697 ubox
24 32 0.006719440 ubox
24 45 0.188030753 ubox
24 48 0.960156876 ubox
24 52 0.009706599 ubox
24 63 0.023804813 ubox
24 64 0.131084704 ubox
24 66 0.032210435 ubox
25 31 0.006714520 ubox
25 43 0.196312927 ubox
25 45 0.004542269 ubox
25 47 0.945704072 ubox
25 48 0.153930985 ubox
25 51 0.009659763 ubox
25 62 0.024150461 ubox
25 63 0.131168619 ubox
25 64 0.031328542 ubox
26 30 0.006062323 ubox
26 39 0.006428026 ubox
26 42 0.219769088 ubox
26 44 0.008498391 ubox
26 47 0.216994273 ubox
26 61 0.024208589 ubox
26 62 0.129423613 ubox
26 63 0.031161711 ubox
27 41 0.220274120 ubox
27 46 0.937501367 ubox
27 49 0.009473537 ubox
28 36 0.003611238 ubox
28 37 0.007599606 ubox
28 39 0.020861894 ubox
28 40 0.218975181 ubox
28 43 0.042610392 ubox
28 44 0.215266678 ubox
28 45 0.936221841 ubox
28 48 0.009483656 ubox
28 60 0.104655272 ubox
28 61 0.027674094 ubox
29 35 0.006960891 ubox
29 36 0.012711560 ubox
29 37 0.005726112 ubox
29 38 0.025052400 ubox
29 39 0.214775170 ubox
29 42 0.069272788 ubox
29 43 0.211524315 ubox
29 44 0.906093880 ubox
29 47 0.009470985 ubox
29 59 0.132302209 ubox
29 60 0.020629896 ubox
30 41 0.076030833 ubox
30 46 0.010967020 ubox
30 58 0.136228103 ubox
32 41 0.948079025 ubox
32 46 0.004608958 ubox
32 56 0.136510077 ubox
32 58 0.010604534 ubox
33 40 0.939224628 ubox
33 42 0.108273142 ubox
33 45 0.004541336 ubox
33 55 0.136072635 ubox
33 57 0.010614172 ubox
34 41 0.112206150 ubox
34 56 0.010592626 ubox
37 50 0.135168841 ubox
38 49 0.134848645 ubox
40 46 0.133115647 ubox
40 49 0.021916767 ubox
41 45 0.132170507 ubox
41 48 0.022887119 ubox
48 56 0.003867227 ubox
49 55 0.004058348 ubox
49 60 0.008105493 ubox
49 73 0.004075418 ubox
50 59 0.008319929 ubox
50 72 0.004218957 ubox
51 56 0.013276771 ubox
51 58 0.008394469 ubox
55 70 0.005902566 ubox
56 69 0.005896174 ubox
56 71 0.412821024 ubox
57 67 0.004343801 ubox
57 68 0.004191401 ubox
57 70 0.421800783 ubox
58 66 0.005997297 ubox
58 69 0.421825494 ubox
59 68 0.421928190 ubox
60 67 0.420800094 ubox
62 68 0.008680996 ubox
63 67 0.008759818 ubox
4 71 0.9500000 lbox
5 70 0.9500000 lbox
7 69 0.9500000 lbox
8 68 0.9500000 lbox
9 67 0.9500000 lbox
15 59 0.9500000 lbox
16 58 0.9500000 lbox
17 57 0.9500000 lbox
18 56 0.9500000 lbox
19 55 0.9500000 lbox
22 50 0.9500000 lbox
23 49 0.9500000 lbox
24 48 0.9500000 lbox
25 47 0.9500000 lbox
27 46 0.9500000 lbox
28 45 0.9500000 lbox
29 44 0.9500000 lbox
32 41 0.9500000 lbox
33 40 0.9500000 lbox
showpage
end
%%EOF
