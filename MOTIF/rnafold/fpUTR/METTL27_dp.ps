%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:24:53 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (METTL27)
} def

/sequence { (\
CUGUUGCCCACACGCCCGAGGCGCGCUGGAUUGGCGGAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 20 0.017854337 ubox
1 29 0.004218837 ubox
1 34 0.010289252 ubox
1 37 0.869788830 ubox
1 39 0.222578797 ubox
2 10 0.027666616 ubox
2 12 0.082575491 ubox
2 18 0.003600949 ubox
2 19 0.017753407 ubox
2 20 0.003176866 ubox
2 23 0.003184464 ubox
2 25 0.007114339 ubox
2 28 0.004145947 ubox
2 33 0.010285299 ubox
2 36 0.874397206 ubox
2 38 0.225126600 ubox
3 9 0.031174315 ubox
3 11 0.093321846 ubox
3 13 0.013714751 ubox
3 17 0.005073121 ubox
3 22 0.005147877 ubox
3 24 0.012591637 ubox
3 31 0.003723124 ubox
3 32 0.007617612 ubox
3 35 0.877445788 ubox
3 40 0.072605853 ubox
4 10 0.089510335 ubox
4 12 0.011663190 ubox
4 21 0.005105581 ubox
4 23 0.008959859 ubox
4 30 0.004247086 ubox
4 34 0.874518841 ubox
4 37 0.303250101 ubox
4 38 0.032043116 ubox
4 39 0.070844683 ubox
5 12 0.033924422 ubox
5 20 0.004856183 ubox
5 23 0.034859488 ubox
5 25 0.007696467 ubox
5 33 0.793280517 ubox
5 36 0.376267457 ubox
5 37 0.025700372 ubox
5 38 0.047632130 ubox
6 11 0.038753044 ubox
6 13 0.005811450 ubox
6 15 0.021050267 ubox
6 22 0.056705879 ubox
6 24 0.011750627 ubox
6 26 0.012030736 ubox
6 32 0.550807357 ubox
6 35 0.405663691 ubox
6 40 0.083486484 ubox
7 14 0.021052687 ubox
7 21 0.056592703 ubox
7 23 0.011662090 ubox
7 25 0.012057252 ubox
7 29 0.346444375 ubox
7 34 0.404728240 ubox
7 37 0.029199840 ubox
7 39 0.084413306 ubox
8 20 0.056341578 ubox
8 21 0.011599439 ubox
8 28 0.343945025 ubox
8 29 0.813981063 ubox
8 33 0.379600479 ubox
8 34 0.033940234 ubox
8 36 0.027294020 ubox
8 37 0.081200282 ubox
9 20 0.012342223 ubox
9 28 0.827421862 ubox
9 33 0.045010285 ubox
9 36 0.078015904 ubox
10 27 0.794636781 ubox
10 32 0.052741280 ubox
11 28 0.355758193 ubox
11 33 0.022759318 ubox
12 27 0.352024972 ubox
12 32 0.023224438 ubox
13 23 0.962370293 ubox
13 25 0.204101937 ubox
13 28 0.039981766 ubox
13 33 0.003783854 ubox
13 36 0.032223927 ubox
14 22 0.971928888 ubox
14 24 0.202589567 ubox
14 26 0.091956132 ubox
14 27 0.010447643 ubox
14 32 0.003622952 ubox
14 35 0.033861250 ubox
14 40 0.004247236 ubox
15 21 0.972035375 ubox
15 23 0.201863720 ubox
15 25 0.092212335 ubox
15 29 0.017411177 ubox
15 34 0.031275880 ubox
15 39 0.004279453 ubox
16 20 0.965064082 ubox
16 28 0.017169866 ubox
16 29 0.015448863 ubox
16 33 0.027792778 ubox
16 34 0.013192265 ubox
16 37 0.004304033 ubox
17 23 0.090383263 ubox
17 25 0.014040598 ubox
17 28 0.016740897 ubox
17 33 0.018511957 ubox
17 36 0.004262077 ubox
18 22 0.085787428 ubox
18 24 0.014743349 ubox
18 27 0.010935288 ubox
18 32 0.022528901 ubox
18 35 0.003539467 ubox
19 27 0.024182619 ubox
19 31 0.022416502 ubox
20 26 0.025744172 ubox
20 27 0.011964753 ubox
21 26 0.012019871 ubox
21 40 0.018044133 ubox
22 28 0.022080537 ubox
22 36 0.004931692 ubox
22 39 0.018270482 ubox
23 27 0.013662711 ubox
23 35 0.009827844 ubox
23 40 0.053249860 ubox
24 33 0.005418206 ubox
24 34 0.009996851 ubox
24 36 0.217913647 ubox
24 39 0.059274969 ubox
25 32 0.004999699 ubox
25 35 0.234083049 ubox
25 40 0.016499174 ubox
26 34 0.234105846 ubox
26 37 0.066939203 ubox
26 39 0.016573907 ubox
27 33 0.228309424 ubox
27 36 0.067106982 ubox
27 38 0.016176002 ubox
28 32 0.106157456 ubox
28 35 0.067425403 ubox
31 38 0.005577088 ubox
31 39 0.003353356 ubox
32 37 0.005944697 ubox
32 38 0.004369403 ubox
34 40 0.011452296 ubox
35 39 0.011508978 ubox
1 37 0.9500000 lbox
2 36 0.9500000 lbox
3 35 0.9500000 lbox
4 34 0.9500000 lbox
5 33 0.9500000 lbox
6 32 0.9500000 lbox
8 29 0.9500000 lbox
9 28 0.9500000 lbox
10 27 0.9500000 lbox
13 23 0.9500000 lbox
14 22 0.9500000 lbox
15 21 0.9500000 lbox
16 20 0.9500000 lbox
showpage
end
%%EOF
