%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:24:11 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FBXO10)
} def

/sequence { (\
GCGGCCGCGGCCCGGACUCCGCGGUGGGCGAGCGCCCUGUGAGGUGACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.009808252 ubox
1 11 0.004196489 ubox
1 22 0.026420866 ubox
1 25 0.005542277 ubox
1 29 0.600099196 ubox
1 33 0.033370925 ubox
1 35 0.118495091 ubox
1 40 0.164565473 ubox
1 45 0.101287000 ubox
2 7 0.009801869 ubox
2 9 0.006041552 ubox
2 10 0.003968601 ubox
2 14 0.036260942 ubox
2 21 0.026455092 ubox
2 24 0.003584270 ubox
2 26 0.036353054 ubox
2 28 0.600156776 ubox
2 30 0.125920949 ubox
2 32 0.034165413 ubox
2 34 0.118940498 ubox
2 39 0.170546016 ubox
2 41 0.047188436 ubox
2 44 0.104909314 ubox
2 46 0.046863753 ubox
3 8 0.006253363 ubox
3 12 0.071247412 ubox
3 13 0.030512390 ubox
3 18 0.003163568 ubox
3 20 0.026418313 ubox
3 25 0.043139302 ubox
3 29 0.127599136 ubox
3 33 0.113860021 ubox
3 36 0.028718403 ubox
3 37 0.027446191 ubox
3 38 0.137885875 ubox
3 40 0.036306765 ubox
3 45 0.035943167 ubox
3 49 0.042548655 ubox
4 11 0.074395440 ubox
4 12 0.022171761 ubox
4 17 0.003936488 ubox
4 19 0.026332205 ubox
4 25 0.955979934 ubox
4 29 0.043648535 ubox
4 33 0.045497592 ubox
4 35 0.028981117 ubox
4 36 0.027372884 ubox
4 37 0.019937587 ubox
4 45 0.015777486 ubox
4 48 0.038355928 ubox
5 10 0.077241482 ubox
5 15 0.027622756 ubox
5 24 0.979148614 ubox
5 27 0.119359749 ubox
5 28 0.044046768 ubox
5 32 0.057687823 ubox
5 34 0.021589889 ubox
5 44 0.017045564 ubox
6 14 0.027652170 ubox
6 23 0.979346891 ubox
6 26 0.119365109 ubox
6 27 0.043772860 ubox
6 30 0.123625997 ubox
6 34 0.036794378 ubox
6 41 0.008136360 ubox
6 43 0.016781545 ubox
6 46 0.015471309 ubox
7 13 0.027039321 ubox
7 22 0.979412832 ubox
7 25 0.117573199 ubox
7 29 0.123747643 ubox
7 33 0.041708458 ubox
7 40 0.010614419 ubox
7 45 0.015524508 ubox
8 14 0.004579729 ubox
8 21 0.979411767 ubox
8 23 0.003358050 ubox
8 24 0.117281951 ubox
8 26 0.036062766 ubox
8 28 0.123668275 ubox
8 32 0.041690695 ubox
8 39 0.010800182 ubox
8 41 0.012471268 ubox
8 44 0.015518793 ubox
9 13 0.004318033 ubox
9 18 0.006580364 ubox
9 19 0.007341937 ubox
9 20 0.979316247 ubox
9 22 0.004500586 ubox
9 25 0.025676691 ubox
9 38 0.008810030 ubox
9 40 0.009580376 ubox
10 17 0.014573339 ubox
10 18 0.007699806 ubox
10 19 0.976937489 ubox
10 22 0.115220150 ubox
10 25 0.130517527 ubox
10 29 0.042093373 ubox
11 21 0.108091711 ubox
11 24 0.134496475 ubox
11 28 0.042149162 ubox
12 23 0.134609132 ubox
12 24 0.013376498 ubox
12 27 0.042129840 ubox
13 21 0.141687426 ubox
13 23 0.013785325 ubox
13 26 0.041977395 ubox
13 46 0.014886248 ubox
14 20 0.167082795 ubox
14 22 0.014175625 ubox
14 25 0.032292699 ubox
14 45 0.012431243 ubox
14 49 0.044126669 ubox
15 19 0.164639774 ubox
15 48 0.044494270 ubox
16 25 0.022105488 ubox
16 45 0.063185022 ubox
17 24 0.026252147 ubox
17 32 0.003966200 ubox
17 43 0.027712325 ubox
17 44 0.065507440 ubox
18 23 0.023862048 ubox
18 24 0.003595393 ubox
18 31 0.003983819 ubox
18 42 0.027991652 ubox
18 43 0.062620483 ubox
18 44 0.009036286 ubox
19 23 0.004756976 ubox
19 41 0.021355348 ubox
19 43 0.017249534 ubox
19 44 0.029426948 ubox
20 30 0.003599529 ubox
20 39 0.010391140 ubox
20 41 0.069070054 ubox
20 43 0.029394807 ubox
20 46 0.003460606 ubox
21 29 0.004584578 ubox
21 38 0.010181514 ubox
21 40 0.071733166 ubox
21 45 0.003529260 ubox
22 28 0.004584873 ubox
22 39 0.071786831 ubox
22 41 0.026582512 ubox
22 44 0.003532941 ubox
23 36 0.011969151 ubox
23 38 0.061512318 ubox
23 40 0.025508206 ubox
23 49 0.011766140 ubox
24 35 0.012060970 ubox
24 37 0.034679503 ubox
24 48 0.011897126 ubox
25 34 0.012104828 ubox
25 39 0.010216113 ubox
25 41 0.004106671 ubox
25 47 0.011799778 ubox
26 33 0.012343671 ubox
26 36 0.019684375 ubox
26 37 0.771270838 ubox
26 38 0.011543217 ubox
26 49 0.010460581 ubox
27 35 0.017658267 ubox
27 36 0.773664884 ubox
27 37 0.010209366 ubox
27 48 0.010531671 ubox
27 49 0.016028142 ubox
28 35 0.773766650 ubox
28 36 0.007634929 ubox
28 45 0.003337913 ubox
28 48 0.016120504 ubox
29 34 0.772727101 ubox
29 44 0.003466931 ubox
29 46 0.005559843 ubox
30 45 0.003650689 ubox
31 38 0.004621534 ubox
32 37 0.004680714 ubox
32 40 0.007715105 ubox
32 45 0.006613725 ubox
33 39 0.008052800 ubox
33 41 0.019634335 ubox
33 44 0.006803737 ubox
33 46 0.610064508 ubox
34 38 0.004977291 ubox
34 40 0.019816438 ubox
34 45 0.617202493 ubox
35 39 0.019716888 ubox
35 44 0.615848949 ubox
36 43 0.612575246 ubox
36 44 0.116565296 ubox
37 43 0.127786607 ubox
37 44 0.022420662 ubox
38 42 0.124135162 ubox
38 43 0.031998048 ubox
38 46 0.013070863 ubox
39 45 0.012657920 ubox
39 48 0.318057414 ubox
40 44 0.007147311 ubox
40 46 0.013417335 ubox
40 47 0.317475197 ubox
41 45 0.011587862 ubox
43 49 0.147558710 ubox
44 48 0.146430298 ubox
4 25 0.9500000 lbox
5 24 0.9500000 lbox
6 23 0.9500000 lbox
7 22 0.9500000 lbox
8 21 0.9500000 lbox
9 20 0.9500000 lbox
10 19 0.9500000 lbox
26 37 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
showpage
end
%%EOF
