%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:12:36 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TMED6)
} def

/sequence { (\
CUUGAUUUCCCUGGGCUGCGAGCAGUUCACCUGCAGAGGAGGCUCCAGAAAGCGGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 14 0.037432539 ubox
1 15 0.009905891 ubox
1 38 0.011620558 ubox
1 39 0.008926875 ubox
1 41 0.019261154 ubox
1 48 0.084495202 ubox
1 52 0.036432632 ubox
1 55 0.130761850 ubox
2 13 0.037033229 ubox
2 14 0.011541782 ubox
2 21 0.003287117 ubox
2 36 0.004922175 ubox
2 37 0.011534643 ubox
2 38 0.008916553 ubox
2 40 0.019046412 ubox
2 41 0.003613986 ubox
2 47 0.083369382 ubox
2 48 0.026641640 ubox
2 49 0.008938296 ubox
2 50 0.011389064 ubox
2 51 0.036343092 ubox
2 52 0.009003646 ubox
2 54 0.111634481 ubox
2 55 0.336849815 ubox
3 13 0.011671480 ubox
3 14 0.004430484 ubox
3 20 0.003364596 ubox
3 35 0.006840453 ubox
3 36 0.011185309 ubox
3 37 0.008651038 ubox
3 39 0.017126674 ubox
3 40 0.003449641 ubox
3 47 0.032017338 ubox
3 48 0.007915370 ubox
3 49 0.012517851 ubox
3 50 0.032624410 ubox
3 51 0.009646468 ubox
3 54 0.444941031 ubox
4 12 0.010054638 ubox
4 19 0.003427416 ubox
4 34 0.007387160 ubox
4 45 0.090955449 ubox
4 46 0.030982008 ubox
4 53 0.488113176 ubox
5 44 0.091498753 ubox
6 14 0.007601739 ubox
6 36 0.004131175 ubox
6 37 0.005777776 ubox
6 41 0.007803055 ubox
6 42 0.092471132 ubox
6 49 0.012998872 ubox
6 50 0.033395309 ubox
6 51 0.380729027 ubox
6 52 0.184203252 ubox
6 55 0.014382169 ubox
7 13 0.009925746 ubox
7 14 0.007631678 ubox
7 15 0.005635881 ubox
7 35 0.004125196 ubox
7 36 0.005847332 ubox
7 38 0.004427090 ubox
7 40 0.009405115 ubox
7 41 0.122312808 ubox
7 42 0.007536951 ubox
7 48 0.006435242 ubox
7 49 0.036798591 ubox
7 50 0.468166576 ubox
7 51 0.189331704 ubox
7 52 0.129002651 ubox
7 54 0.015644093 ubox
7 55 0.010739720 ubox
8 13 0.006608911 ubox
8 14 0.015489612 ubox
8 15 0.007080196 ubox
8 35 0.005258245 ubox
8 37 0.004834491 ubox
8 39 0.008793825 ubox
8 40 0.131954761 ubox
8 41 0.006872138 ubox
8 42 0.007895057 ubox
8 47 0.004367976 ubox
8 48 0.013613751 ubox
8 49 0.449451038 ubox
8 50 0.179091564 ubox
8 51 0.160599363 ubox
8 54 0.011554273 ubox
8 55 0.061469654 ubox
9 13 0.017625880 ubox
9 14 0.019115790 ubox
9 15 0.020113587 ubox
9 36 0.004877671 ubox
9 38 0.008861935 ubox
9 39 0.132784798 ubox
9 41 0.015232955 ubox
9 42 0.013503898 ubox
9 48 0.381333374 ubox
9 54 0.080207290 ubox
9 55 0.366015410 ubox
10 14 0.022035955 ubox
10 38 0.132532547 ubox
10 39 0.026064100 ubox
10 41 0.013760369 ubox
10 42 0.059975332 ubox
10 54 0.370201625 ubox
10 55 0.133049543 ubox
11 36 0.128739632 ubox
11 38 0.027098847 ubox
11 39 0.006037584 ubox
11 41 0.061291219 ubox
11 48 0.757443210 ubox
11 52 0.318671477 ubox
11 54 0.133387862 ubox
11 55 0.212429238 ubox
12 20 0.003752928 ubox
12 29 0.161269488 ubox
12 33 0.005699246 ubox
12 35 0.118965254 ubox
12 37 0.025913215 ubox
12 38 0.005622567 ubox
12 40 0.059044254 ubox
12 47 0.817921779 ubox
12 51 0.310079427 ubox
12 54 0.214960561 ubox
13 19 0.006116239 ubox
13 28 0.189850371 ubox
13 31 0.023177846 ubox
13 32 0.023236402 ubox
13 34 0.103460518 ubox
13 44 0.036354404 ubox
13 45 0.199657061 ubox
13 46 0.824748624 ubox
13 53 0.224223328 ubox
14 27 0.204887410 ubox
14 28 0.023974482 ubox
14 30 0.026215619 ubox
14 31 0.052974661 ubox
14 32 0.024531035 ubox
14 43 0.038290740 ubox
14 44 0.213819812 ubox
14 45 0.821514811 ubox
15 23 0.024247890 ubox
15 26 0.210454857 ubox
15 27 0.017050634 ubox
15 30 0.051841044 ubox
15 31 0.025788535 ubox
15 34 0.007452655 ubox
15 43 0.841058465 ubox
15 44 0.105297559 ubox
15 45 0.003198574 ubox
15 53 0.029293466 ubox
15 56 0.211264234 ubox
16 22 0.024351395 ubox
16 25 0.214848848 ubox
16 33 0.007614705 ubox
16 36 0.063190642 ubox
16 38 0.011521948 ubox
16 39 0.023453348 ubox
16 41 0.086348122 ubox
16 42 0.843187710 ubox
16 48 0.422010206 ubox
16 52 0.028879735 ubox
16 55 0.213969646 ubox
17 21 0.021971403 ubox
17 24 0.214749029 ubox
17 29 0.025736189 ubox
17 35 0.065240829 ubox
17 37 0.014111909 ubox
17 38 0.028866566 ubox
17 40 0.109128679 ubox
17 41 0.833872053 ubox
17 47 0.423183161 ubox
17 51 0.026849376 ubox
17 54 0.213838941 ubox
18 23 0.213513469 ubox
18 26 0.047416917 ubox
18 28 0.025046537 ubox
18 34 0.066886257 ubox
18 43 0.028810446 ubox
18 46 0.423360910 ubox
18 53 0.214002915 ubox
19 25 0.049452186 ubox
19 33 0.066745864 ubox
19 42 0.028868013 ubox
19 52 0.213820605 ubox
20 27 0.020196647 ubox
20 28 0.031238910 ubox
20 32 0.042842857 ubox
20 45 0.445483008 ubox
21 26 0.020248100 ubox
21 27 0.030865598 ubox
21 32 0.044241658 ubox
21 44 0.445531507 ubox
22 26 0.020979432 ubox
22 31 0.050928617 ubox
22 34 0.860781403 ubox
22 43 0.445556674 ubox
23 33 0.862044022 ubox
23 42 0.444271880 ubox
24 32 0.861557322 ubox
24 44 0.043858625 ubox
25 31 0.857906717 ubox
25 34 0.021755643 ubox
25 43 0.046299541 ubox
26 33 0.021607828 ubox
26 36 0.003479967 ubox
26 37 0.019158601 ubox
26 38 0.141064262 ubox
26 39 0.025013407 ubox
26 40 0.131653950 ubox
26 41 0.091881368 ubox
26 42 0.042138460 ubox
27 35 0.003282075 ubox
27 36 0.018679359 ubox
27 37 0.153326514 ubox
27 38 0.014357221 ubox
27 39 0.105229566 ubox
27 40 0.101124415 ubox
27 41 0.046985573 ubox
27 42 0.038449667 ubox
28 36 0.154035655 ubox
28 38 0.104247698 ubox
28 39 0.069258122 ubox
28 41 0.202159024 ubox
30 39 0.420244545 ubox
30 42 0.030305275 ubox
30 55 0.030689211 ubox
31 38 0.424991908 ubox
31 39 0.010954627 ubox
31 41 0.032655531 ubox
31 48 0.075868271 ubox
31 52 0.005441204 ubox
31 54 0.030371019 ubox
31 55 0.077906712 ubox
32 37 0.420956282 ubox
32 38 0.011221194 ubox
32 40 0.032540272 ubox
32 47 0.076458715 ubox
32 51 0.005598766 ubox
32 54 0.078933354 ubox
33 43 0.005533266 ubox
33 46 0.075736458 ubox
33 53 0.084881888 ubox
34 42 0.005566562 ubox
34 52 0.084773902 ubox
35 44 0.022538803 ubox
36 43 0.023060620 ubox
36 45 0.163265312 ubox
37 44 0.164082395 ubox
38 43 0.163991992 ubox
38 45 0.004924752 ubox
38 46 0.107969561 ubox
39 43 0.003685302 ubox
39 44 0.003924944 ubox
39 45 0.108080040 ubox
40 44 0.094034073 ubox
42 53 0.149190636 ubox
42 56 0.016380106 ubox
43 52 0.149451401 ubox
43 55 0.016727056 ubox
44 51 0.142299196 ubox
44 54 0.013985597 ubox
44 55 0.004344756 ubox
45 54 0.009741945 ubox
45 55 0.021777423 ubox
46 54 0.022339063 ubox
11 48 0.9500000 lbox
12 47 0.9500000 lbox
13 46 0.9500000 lbox
14 45 0.9500000 lbox
15 43 0.9500000 lbox
16 42 0.9500000 lbox
17 41 0.9500000 lbox
22 34 0.9500000 lbox
23 33 0.9500000 lbox
24 32 0.9500000 lbox
25 31 0.9500000 lbox
showpage
end
%%EOF
