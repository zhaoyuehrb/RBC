%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:24:31 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SLC6A11)
} def

/sequence { (\
GAAAAGCCAGCUCGCCCGGGGCGGCGGCGCAGAGCCGGGCCGGCGCACGAGGCAGCCAGCGCGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
6 25 0.096097988 ubox
6 28 0.987065861 ubox
6 30 0.092035516 ubox
6 53 0.005752216 ubox
6 60 0.020964020 ubox
6 62 0.003890912 ubox
6 65 0.032747640 ubox
7 24 0.096613119 ubox
7 27 0.988297142 ubox
7 29 0.091606557 ubox
7 38 0.008675237 ubox
7 52 0.005758083 ubox
7 59 0.020980598 ubox
7 61 0.003887683 ubox
7 64 0.032823971 ubox
8 23 0.096253520 ubox
8 26 0.984589478 ubox
8 37 0.009628175 ubox
8 51 0.005666400 ubox
8 63 0.032730464 ubox
10 22 0.105387073 ubox
10 25 0.985546807 ubox
10 28 0.070067087 ubox
10 30 0.045752056 ubox
10 35 0.012969747 ubox
10 44 0.003853115 ubox
10 56 0.023143127 ubox
10 60 0.027128526 ubox
10 62 0.010133534 ubox
11 20 0.012968278 ubox
11 21 0.105403902 ubox
11 24 0.979959789 ubox
11 27 0.069922538 ubox
11 29 0.045784121 ubox
11 32 0.009704567 ubox
11 34 0.013392215 ubox
11 43 0.003863626 ubox
11 55 0.023172194 ubox
11 59 0.027119614 ubox
11 61 0.010114868 ubox
12 19 0.013175757 ubox
12 20 0.105194202 ubox
12 23 0.162270518 ubox
12 24 0.137683307 ubox
12 26 0.018982229 ubox
12 27 0.045966914 ubox
12 31 0.009694486 ubox
12 33 0.014417591 ubox
12 42 0.003683182 ubox
12 54 0.023083769 ubox
12 58 0.025955570 ubox
13 18 0.013349623 ubox
13 19 0.105166413 ubox
13 20 0.005695495 ubox
13 23 0.976164225 ubox
13 26 0.081245726 ubox
13 29 0.007733313 ubox
13 32 0.014510104 ubox
13 45 0.004226716 ubox
14 22 0.990045533 ubox
14 25 0.082140886 ubox
14 28 0.007873452 ubox
14 30 0.016712740 ubox
14 40 0.010178475 ubox
14 44 0.004321393 ubox
14 46 0.003715078 ubox
14 53 0.033343542 ubox
14 56 0.009062113 ubox
15 21 0.990059500 ubox
15 24 0.081373012 ubox
15 27 0.006707445 ubox
15 29 0.016754258 ubox
15 39 0.010274190 ubox
15 43 0.004051390 ubox
15 45 0.003816381 ubox
15 52 0.033411092 ubox
15 55 0.008891716 ubox
16 20 0.982856639 ubox
16 23 0.080460244 ubox
16 24 0.011440633 ubox
16 26 0.005018342 ubox
16 27 0.017277297 ubox
16 38 0.010279964 ubox
16 42 0.003757166 ubox
16 43 0.004259459 ubox
16 51 0.033447567 ubox
16 52 0.008610165 ubox
17 23 0.016113289 ubox
17 26 0.017764022 ubox
17 37 0.010279199 ubox
17 42 0.004524081 ubox
17 49 0.033060007 ubox
17 51 0.008653035 ubox
18 22 0.018375034 ubox
18 25 0.018186371 ubox
18 36 0.010258519 ubox
18 41 0.004714619 ubox
18 48 0.033020882 ubox
19 35 0.010180465 ubox
19 40 0.004690903 ubox
20 41 0.004144629 ubox
21 30 0.009495619 ubox
21 40 0.004169327 ubox
21 46 0.034386664 ubox
22 29 0.009574655 ubox
22 37 0.004429516 ubox
22 39 0.004185951 ubox
22 45 0.034425502 ubox
23 28 0.009538227 ubox
23 36 0.004655169 ubox
23 41 0.003318551 ubox
23 44 0.034416879 ubox
24 30 0.004020629 ubox
24 35 0.004657595 ubox
24 40 0.003335302 ubox
25 29 0.003996059 ubox
25 34 0.004658557 ubox
25 37 0.015022636 ubox
25 42 0.034416611 ubox
26 36 0.033717525 ubox
26 41 0.034423299 ubox
27 35 0.033776287 ubox
27 40 0.034422612 ubox
28 34 0.033790357 ubox
28 39 0.034396010 ubox
29 35 0.013888725 ubox
29 65 0.004475408 ubox
30 34 0.013987719 ubox
30 64 0.003608469 ubox
34 65 0.996262869 ubox
35 64 0.998623258 ubox
36 63 0.998651072 ubox
37 62 0.998510414 ubox
38 57 0.004585564 ubox
38 66 0.030314912 ubox
39 56 0.004592878 ubox
39 60 0.998677333 ubox
39 65 0.031860816 ubox
40 55 0.004594675 ubox
40 59 0.998389437 ubox
40 64 0.031911546 ubox
41 63 0.031861353 ubox
42 57 0.997954930 ubox
42 62 0.023883328 ubox
43 53 0.005691913 ubox
43 56 0.998838346 ubox
43 60 0.011465416 ubox
43 62 0.020943605 ubox
44 52 0.005914103 ubox
44 55 0.998388124 ubox
44 59 0.011431509 ubox
44 61 0.029541489 ubox
45 53 0.973728921 ubox
45 56 0.010686274 ubox
45 60 0.029583281 ubox
46 52 0.976165050 ubox
46 55 0.010851775 ubox
46 59 0.029553311 ubox
51 57 0.014814561 ubox
51 66 0.003867325 ubox
52 56 0.014604352 ubox
52 65 0.003923933 ubox
53 64 0.003909244 ubox
55 62 0.004443843 ubox
55 65 0.006683563 ubox
56 61 0.004446968 ubox
56 64 0.006702107 ubox
57 63 0.006704020 ubox
6 28 0.9500000 lbox
7 27 0.9500000 lbox
8 26 0.9500000 lbox
10 25 0.9500000 lbox
11 24 0.9500000 lbox
13 23 0.9500000 lbox
14 22 0.9500000 lbox
15 21 0.9500000 lbox
16 20 0.9500000 lbox
34 65 0.9500000 lbox
35 64 0.9500000 lbox
36 63 0.9500000 lbox
37 62 0.9500000 lbox
39 60 0.9500000 lbox
40 59 0.9500000 lbox
42 57 0.9500000 lbox
43 56 0.9500000 lbox
44 55 0.9500000 lbox
45 53 0.9500000 lbox
46 52 0.9500000 lbox
showpage
end
%%EOF
