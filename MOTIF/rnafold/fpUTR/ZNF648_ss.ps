%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:00:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUGCAGCCGCUGGACUGGACACAAAGCGUGAGAGACAGAGACACCAUCUCUGCUGAUUUGUACCUAACUGGUUCCUGUUGCUGAGAGCCCACGUGUCACAGAAGCCAGGGCAGAGGCCCCACACUGCUGUCUGCAUUUCCCAGGUAUCCUGAGCCAAGCAGGAUACUCCUCCUCAGAGGAGUAGGCAAUAGAAGCGCCUGAACAUC\
) } def
/len { sequence length } bind def

/coor [
[-202.41624451 163.25952148]
[-213.99839783 153.72779846]
[-221.49554443 140.73577881]
[-223.95266724 125.93839264]
[-221.05676270 111.22058868]
[-213.17672729 98.45716095]
[-201.31634521 89.27395630]
[-186.98876953 84.84103394]
[-201.52978516 81.15875244]
[-216.07078552 77.47647095]
[-225.15965271 78.40345001]
[-230.80184937 73.62801361]
[-245.28587341 69.72758484]
[-259.76986694 65.82715607]
[-274.25390625 61.92671967]
[-293.47628784 67.99472809]
[-306.52679443 53.72809601]
[-321.12149048 50.26479721]
[-335.71621704 46.80149460]
[-350.33654785 43.44798279]
[-364.98165894 40.20444489]
[-379.62677002 36.96091080]
[-394.27188110 33.71737289]
[-408.91702271 30.47383499]
[-421.42834473 41.85529709]
[-438.09274292 43.52080154]
[-452.32382202 35.01112366]
[-458.61526489 19.84959412]
[-473.30749512 16.82655525]
[-485.64633179 28.39478874]
[-502.28381348 30.31058502]
[-516.64117432 22.01577568]
[-523.15979004 6.95052814]
[-537.89581299 4.14866781]
[-552.89837646 9.17204666]
[-563.95635986 -0.80641109]
[-578.69238281 -3.60827112]
[-593.42834473 -6.41013098]
[-608.16436768 -9.21199131]
[-622.90032959 -12.01385117]
[-631.91711426 -10.54239655]
[-637.83605957 -14.97016335]
[-652.52825928 -17.99320221]
[-661.56610107 -16.65744591]
[-667.41784668 -21.17367935]
[-682.06298828 -24.41721535]
[-696.70806885 -27.66075325]
[-711.35321045 -30.90428925]
[-722.91491699 -17.67123222]
[-739.50146484 -12.14389038]
[-756.51580811 -15.75911236]
[-769.29040527 -27.43292046]
[-774.36755371 -43.88336563]
[-789.10357666 -46.68522263]
[-803.83953857 -49.48708344]
[-816.76300049 -40.38980865]
[-832.31945801 -43.17758560]
[-841.27960205 -56.19647598]
[-838.32751465 -71.72260284]
[-825.21459961 -80.54459381]
[-809.72058105 -77.42851257]
[-801.03771973 -64.22308350]
[-786.30169678 -61.42121887]
[-771.56573486 -58.61936188]
[-764.39270020 -69.02170563]
[-753.77880859 -75.96361542]
[-741.28192139 -78.38401794]
[-728.75213623 -75.88855743]
[-718.05816650 -68.81339264]
[-710.80853271 -58.18032074]
[-708.10968018 -45.54940796]
[-693.46453857 -42.30587006]
[-678.81939697 -39.06233215]
[-664.17431641 -35.81879807]
[-649.50524902 -32.68542099]
[-634.81298828 -29.66238022]
[-620.09851074 -26.74984741]
[-605.36248779 -23.94798660]
[-590.62646484 -21.14612770]
[-575.89050293 -18.34426689]
[-561.15447998 -15.54240704]
[-547.20599365 -20.76619339]
[-535.09393311 -10.58732796]
[-520.35797119 -7.78546810]
[-511.52102661 -17.79414940]
[-498.79028320 -22.16400909]
[-485.45669556 -19.65233231]
[-475.02316284 -10.81013775]
[-470.28445435 2.13433838]
[-455.59222412 5.15737820]
[-446.60583496 -4.71734476]
[-433.81085205 -8.89535427]
[-420.51654053 -6.18354559]
[-410.21710205 2.81447577]
[-405.67346191 15.82871819]
[-391.02835083 19.07225418]
[-376.38323975 22.31579208]
[-361.73812866 25.55932808]
[-347.09301758 28.80286598]
[-339.88156128 27.17980576]
[-332.25289917 32.20678711]
[-317.65820312 35.67008591]
[-303.06350708 39.13338852]
[-294.88095093 33.00985718]
[-284.45968628 32.38887787]
[-275.22729492 37.71660233]
[-270.35345459 47.44270706]
[-255.86944580 51.34313965]
[-241.38543701 55.24357224]
[-226.90142822 59.14400482]
[-212.38850403 62.93546677]
[-197.84750366 66.61775208]
[-183.30648804 70.30003357]
[-177.52322388 67.44683838]
[-170.30108643 68.22579956]
[-163.95370483 73.23116302]
[-148.97445679 74.01995850]
[-133.99520874 74.80875397]
[-119.01596069 75.59754181]
[-113.31145477 64.32280731]
[-103.73085022 56.01281357]
[-91.67456055 51.92905045]
[-78.92269135 52.71179199]
[-67.37220001 58.28000641]
[-58.75470734 67.83815002]
[-54.37693787 79.98965454]
[-39.42816925 81.22834778]
[-24.47940254 82.46703339]
[-11.15665913 75.80717468]
[1.95743775 84.65765381]
[16.90620422 85.89634705]
[31.85497284 87.13503265]
[46.80374146 88.37372589]
[61.75250626 89.61241913]
[76.70127106 90.85110474]
[91.65003967 92.08979797]
[76.78188324 90.10541534]
[64.75629425 81.13962555]
[58.61016464 67.45660400]
[59.89559174 52.51178360]
[68.28796387 40.07924271]
[81.66791534 33.29862213]
[96.65655518 33.88226700]
[109.46874237 41.68278122]
[116.86894226 54.73027039]
[116.98808289 69.73092651]
[131.98765564 69.84365845]
[146.98722839 69.95639801]
[161.98681641 70.06912994]
[176.98638916 70.18186951]
[191.98596191 70.29460144]
[206.98553467 70.40734100]
[221.98512268 70.52007294]
[231.98811340 58.50033188]
[247.38607788 55.77336121]
[260.90859985 63.62675476]
[266.17071533 78.35237885]
[260.68783569 92.99724579]
[247.04881287 100.64649963]
[231.69357300 97.68838501]
[221.87237549 85.51965332]
[206.87280273 85.40691376]
[191.87322998 85.29418182]
[176.87365723 85.18144226]
[161.87406921 85.06871033]
[146.87449646 84.95597076]
[131.87492371 84.84323883]
[116.87535095 84.73049927]
[112.64936066 99.12289429]
[125.32875824 107.13743591]
[138.00814819 115.15198517]
[150.68754578 123.16652679]
[163.36694336 131.18107605]
[179.76568604 131.29722595]
[187.62806702 145.68872070]
[178.86595154 159.55081177]
[162.49305725 158.62336731]
[155.35240173 143.86047363]
[142.67300415 135.84591675]
[129.99360657 127.83138275]
[117.31420898 119.81683350]
[104.63481140 111.80229187]
[90.41135406 107.03856659]
[75.46258545 105.79987335]
[60.51381683 104.56118774]
[45.56504822 103.32249451]
[30.61628151 102.08380127]
[15.66751480 100.84511566]
[0.71874756 99.60642242]
[-13.67323112 106.17768860]
[-25.71809196 97.41580200]
[-40.66685867 96.17711639]
[-55.61562729 94.93842316]
[-65.28692627 109.60991669]
[-80.97643280 117.32380676]
[-98.32294464 116.03637695]
[-112.55531311 106.19216156]
[-119.80474854 90.57678986]
[-134.78399658 89.78799438]
[-149.76324463 88.99920654]
[-164.74249268 88.21041107]
[-152.36851501 96.68890381]
[-143.76011658 108.97285461]
[-140.01387024 123.49751282]
[-141.60696411 138.41267395]
[-148.33648682 151.81840515]
[-159.34519958 162.00703430]
[-173.23077393 167.68072510]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 113]
[9 112]
[10 111]
[12 110]
[13 109]
[14 108]
[15 107]
[17 103]
[18 102]
[19 101]
[20 99]
[21 98]
[22 97]
[23 96]
[24 95]
[28 90]
[29 89]
[33 84]
[34 83]
[36 81]
[37 80]
[38 79]
[39 78]
[40 77]
[42 76]
[43 75]
[45 74]
[46 73]
[47 72]
[48 71]
[53 64]
[54 63]
[55 62]
[116 201]
[117 200]
[118 199]
[119 198]
[126 193]
[127 192]
[128 191]
[130 189]
[131 188]
[132 187]
[133 186]
[134 185]
[135 184]
[136 183]
[146 168]
[147 167]
[148 166]
[149 165]
[150 164]
[151 163]
[152 162]
[153 161]
[169 182]
[170 181]
[171 180]
[172 179]
[173 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
