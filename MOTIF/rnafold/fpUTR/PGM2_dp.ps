%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:58:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PGM2)
} def

/sequence { (\
CACGUCUUGGGGCCGGGCCGGAAGGCAGAUCUCACCGCCUGCUUCCCUCUGCAGCGGUAGCACAAGCUCAGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.045662446 ubox
2 8 0.042633534 ubox
2 58 0.009131017 ubox
3 9 0.035787334 ubox
3 15 0.047362883 ubox
3 20 0.028609174 ubox
3 37 0.004070007 ubox
3 51 0.010386755 ubox
3 56 0.042294444 ubox
3 57 0.008982299 ubox
3 73 0.505169903 ubox
4 8 0.022465607 ubox
4 13 0.060842552 ubox
4 14 0.040573562 ubox
4 18 0.014103934 ubox
4 19 0.028720760 ubox
4 26 0.678137360 ubox
4 30 0.043853805 ubox
4 35 0.004371086 ubox
4 36 0.004395395 ubox
4 38 0.006174487 ubox
4 50 0.009602542 ubox
4 52 0.075044121 ubox
4 55 0.042742337 ubox
4 61 0.019947702 ubox
4 63 0.026890355 ubox
4 67 0.173643459 ubox
4 72 0.528929720 ubox
5 11 0.005798430 ubox
5 12 0.065708134 ubox
5 16 0.005866414 ubox
5 17 0.013435599 ubox
5 22 0.017988424 ubox
5 25 0.678409647 ubox
5 29 0.046167970 ubox
5 34 0.003809455 ubox
5 37 0.006137207 ubox
5 51 0.073806484 ubox
5 54 0.038072578 ubox
5 60 0.017457789 ubox
5 62 0.026392467 ubox
5 66 0.029881021 ubox
5 71 0.453597710 ubox
6 10 0.008286588 ubox
6 11 0.065382741 ubox
6 12 0.030441490 ubox
6 15 0.010424676 ubox
6 16 0.020002371 ubox
6 17 0.029884691 ubox
6 21 0.019636717 ubox
6 24 0.680274710 ubox
6 25 0.017584239 ubox
6 28 0.046867534 ubox
6 54 0.019234777 ubox
6 60 0.024630598 ubox
6 66 0.308607741 ubox
6 71 0.247335375 ubox
7 11 0.027493851 ubox
7 15 0.017283056 ubox
7 16 0.035099051 ubox
7 20 0.017155004 ubox
7 21 0.016190692 ubox
7 22 0.152011246 ubox
7 23 0.660169500 ubox
7 24 0.017767761 ubox
7 27 0.043138966 ubox
7 28 0.008372208 ubox
7 53 0.018201079 ubox
7 54 0.004126318 ubox
7 57 0.003181074 ubox
7 59 0.022873715 ubox
7 60 0.006063273 ubox
7 65 0.310536402 ubox
7 66 0.003417579 ubox
7 70 0.220457066 ubox
7 71 0.097603741 ubox
8 15 0.038641768 ubox
8 20 0.038532482 ubox
8 21 0.212310561 ubox
8 22 0.596797651 ubox
8 23 0.021475648 ubox
8 24 0.003723919 ubox
8 27 0.018539132 ubox
8 34 0.242540487 ubox
8 51 0.009852585 ubox
8 53 0.013026012 ubox
8 56 0.004894782 ubox
8 59 0.006054732 ubox
8 62 0.010843854 ubox
8 64 0.310572461 ubox
8 65 0.004328128 ubox
8 70 0.221429919 ubox
8 73 0.016460711 ubox
9 14 0.040771866 ubox
9 19 0.054136670 ubox
9 26 0.024223167 ubox
9 31 0.012871073 ubox
9 32 0.040646905 ubox
9 33 0.477804021 ubox
9 45 0.023494671 ubox
9 46 0.029224392 ubox
9 47 0.103529956 ubox
9 48 0.085919237 ubox
9 49 0.029309624 ubox
9 50 0.006303638 ubox
9 52 0.014265823 ubox
9 55 0.005644872 ubox
9 61 0.012066858 ubox
9 63 0.309533559 ubox
9 68 0.017442649 ubox
9 69 0.239664837 ubox
9 72 0.027175927 ubox
10 18 0.054016432 ubox
10 19 0.266763268 ubox
10 30 0.012610511 ubox
10 31 0.051279069 ubox
10 32 0.480923817 ubox
10 33 0.375994080 ubox
10 40 0.012597014 ubox
10 44 0.023964324 ubox
10 45 0.029396944 ubox
10 46 0.103639991 ubox
10 47 0.096831713 ubox
10 48 0.015577984 ubox
10 49 0.006089597 ubox
10 50 0.003163198 ubox
10 67 0.014985075 ubox
10 68 0.147901376 ubox
10 69 0.192399416 ubox
11 18 0.264777894 ubox
11 19 0.624893299 ubox
11 30 0.050489177 ubox
11 31 0.481674094 ubox
11 32 0.377779021 ubox
11 33 0.029050356 ubox
11 39 0.015391228 ubox
11 43 0.027783082 ubox
11 44 0.027137224 ubox
11 45 0.103204782 ubox
11 46 0.096908943 ubox
11 47 0.015608717 ubox
11 48 0.004933146 ubox
11 49 0.003193705 ubox
11 50 0.012904547 ubox
11 67 0.135212179 ubox
11 68 0.201352797 ubox
11 69 0.008268248 ubox
12 18 0.626623572 ubox
12 26 0.079494557 ubox
12 30 0.444898932 ubox
12 31 0.377787620 ubox
12 32 0.023466626 ubox
12 38 0.015457490 ubox
12 42 0.044008021 ubox
12 43 0.029611507 ubox
12 44 0.089294793 ubox
12 45 0.096839431 ubox
12 46 0.015353143 ubox
12 47 0.004770585 ubox
12 49 0.012877778 ubox
12 52 0.019384458 ubox
12 58 0.142574670 ubox
12 61 0.162855848 ubox
12 67 0.208508994 ubox
12 72 0.074415301 ubox
13 17 0.622886063 ubox
13 21 0.048420309 ubox
13 25 0.079723822 ubox
13 37 0.011116019 ubox
13 41 0.031886560 ubox
13 51 0.018990108 ubox
13 57 0.143330139 ubox
13 60 0.162392673 ubox
13 66 0.214447888 ubox
13 71 0.074410401 ubox
14 20 0.048550956 ubox
14 24 0.079706902 ubox
14 37 0.011245330 ubox
14 41 0.142871835 ubox
14 51 0.007561614 ubox
14 56 0.143371290 ubox
14 73 0.015314826 ubox
15 19 0.045448280 ubox
15 31 0.045248580 ubox
15 32 0.026833824 ubox
15 33 0.029761922 ubox
15 36 0.015628228 ubox
15 39 0.003839510 ubox
15 40 0.147133679 ubox
15 44 0.007911966 ubox
15 46 0.003377473 ubox
15 47 0.013454877 ubox
15 48 0.004861926 ubox
15 49 0.018685175 ubox
15 50 0.008755979 ubox
15 55 0.143002668 ubox
15 68 0.005375414 ubox
15 69 0.058171415 ubox
15 72 0.016147892 ubox
16 30 0.044197675 ubox
16 31 0.030515534 ubox
16 32 0.027771207 ubox
16 33 0.007568314 ubox
16 35 0.015621650 ubox
16 38 0.003630472 ubox
16 39 0.147543676 ubox
16 43 0.010171167 ubox
16 45 0.003391199 ubox
16 46 0.013486923 ubox
16 47 0.005574456 ubox
16 48 0.018855982 ubox
16 49 0.009287977 ubox
16 50 0.014105807 ubox
16 67 0.007127632 ubox
16 68 0.042487252 ubox
16 69 0.025188543 ubox
17 26 0.692084933 ubox
17 30 0.004361075 ubox
17 31 0.013008594 ubox
17 38 0.147552456 ubox
17 42 0.010278779 ubox
17 45 0.013457628 ubox
17 46 0.005298573 ubox
17 47 0.018720764 ubox
17 48 0.008292520 ubox
17 49 0.014251351 ubox
17 52 0.136618918 ubox
17 58 0.005472239 ubox
17 61 0.014493151 ubox
17 67 0.034364812 ubox
17 72 0.010239374 ubox
18 25 0.692634010 ubox
18 37 0.106196239 ubox
18 41 0.010224449 ubox
18 51 0.134340889 ubox
18 57 0.005509112 ubox
18 60 0.014068613 ubox
18 66 0.033934653 ubox
18 71 0.010242185 ubox
19 24 0.692410575 ubox
19 37 0.102518593 ubox
19 51 0.044629759 ubox
19 56 0.005510539 ubox
19 73 0.011606034 ubox
20 31 0.005013775 ubox
20 32 0.019140424 ubox
20 33 0.010764940 ubox
20 36 0.144914371 ubox
20 39 0.005308707 ubox
20 43 0.012132334 ubox
20 46 0.070763220 ubox
20 47 0.116124241 ubox
20 48 0.006178837 ubox
20 49 0.017257658 ubox
20 50 0.050511229 ubox
20 55 0.004907454 ubox
20 69 0.006443471 ubox
20 72 0.016164356 ubox
21 30 0.004472318 ubox
21 31 0.022074996 ubox
21 32 0.005109135 ubox
21 33 0.028125336 ubox
21 35 0.144647513 ubox
21 38 0.005295862 ubox
21 42 0.012463885 ubox
21 45 0.071778255 ubox
21 46 0.115664878 ubox
21 47 0.008307163 ubox
21 48 0.014770607 ubox
21 49 0.050772900 ubox
21 68 0.003339468 ubox
21 69 0.012048724 ubox
22 30 0.021373652 ubox
22 32 0.021689595 ubox
22 44 0.065163108 ubox
22 48 0.050280759 ubox
22 68 0.009107948 ubox
23 32 0.119614406 ubox
23 40 0.017992505 ubox
23 43 0.056479325 ubox
23 44 0.123279665 ubox
23 48 0.003290059 ubox
23 68 0.007573821 ubox
24 31 0.124635205 ubox
24 32 0.061969687 ubox
24 33 0.036885649 ubox
24 36 0.007222468 ubox
24 39 0.019557209 ubox
24 42 0.039948977 ubox
24 43 0.134330358 ubox
24 46 0.006881107 ubox
24 47 0.004424362 ubox
24 67 0.008705585 ubox
24 68 0.040885174 ubox
24 69 0.012916398 ubox
25 30 0.084564515 ubox
25 31 0.062865463 ubox
25 32 0.029021781 ubox
25 35 0.007206007 ubox
25 38 0.019684355 ubox
25 42 0.140697990 ubox
25 45 0.005128543 ubox
25 52 0.004181807 ubox
25 61 0.021483591 ubox
25 67 0.049026164 ubox
25 72 0.037319436 ubox
26 37 0.019670808 ubox
26 41 0.146307941 ubox
26 51 0.004183357 ubox
26 60 0.021018425 ubox
26 66 0.049102835 ubox
26 71 0.037333018 ubox
27 40 0.146248398 ubox
27 50 0.004182674 ubox
27 68 0.033290242 ubox
28 39 0.145940260 ubox
28 49 0.004181806 ubox
28 67 0.035512979 ubox
28 69 0.066904861 ubox
29 48 0.003961216 ubox
29 58 0.004538108 ubox
29 68 0.056627767 ubox
31 60 0.238313688 ubox
31 66 0.039545754 ubox
31 71 0.027369399 ubox
32 59 0.245390743 ubox
32 65 0.038330146 ubox
32 70 0.026035372 ubox
34 58 0.903746007 ubox
35 57 0.976402911 ubox
36 56 0.977546135 ubox
36 73 0.009399069 ubox
37 55 0.977363959 ubox
37 58 0.003542793 ubox
37 67 0.006950171 ubox
37 72 0.010088169 ubox
38 54 0.693097347 ubox
38 57 0.003690973 ubox
38 66 0.006957451 ubox
38 71 0.009975892 ubox
39 54 0.689380134 ubox
39 56 0.003317426 ubox
40 53 0.974536656 ubox
40 62 0.011641962 ubox
41 52 0.977713006 ubox
41 61 0.018005251 ubox
41 67 0.010301572 ubox
42 51 0.977653504 ubox
42 60 0.018043174 ubox
42 66 0.010365863 ubox
43 59 0.016965072 ubox
43 65 0.010311274 ubox
44 64 0.009644049 ubox
45 57 0.017148785 ubox
46 56 0.017189212 ubox
46 57 0.005928536 ubox
47 54 0.016609622 ubox
47 56 0.005992997 ubox
48 53 0.015212483 ubox
49 57 0.005080234 ubox
49 60 0.023191314 ubox
49 66 0.005325250 ubox
49 71 0.096522599 ubox
50 56 0.005138203 ubox
50 59 0.023847818 ubox
50 62 0.012133588 ubox
50 64 0.005076807 ubox
50 65 0.005418089 ubox
50 70 0.098546784 ubox
50 73 0.018436072 ubox
51 55 0.004958998 ubox
51 58 0.024134121 ubox
51 61 0.013686341 ubox
51 63 0.005520423 ubox
51 67 0.005400241 ubox
51 69 0.098881079 ubox
51 72 0.033254629 ubox
52 57 0.024124919 ubox
52 60 0.013681437 ubox
52 66 0.005421831 ubox
52 71 0.033188042 ubox
53 68 0.103659642 ubox
54 61 0.027543725 ubox
54 67 0.104846638 ubox
54 72 0.090189342 ubox
55 60 0.027569159 ubox
55 66 0.104821728 ubox
55 71 0.090285403 ubox
55 73 0.011848269 ubox
56 68 0.007432894 ubox
56 69 0.015856693 ubox
56 72 0.012836296 ubox
57 63 0.059179677 ubox
57 67 0.008940455 ubox
57 68 0.007891029 ubox
57 72 0.048065895 ubox
58 62 0.053475902 ubox
58 66 0.008952971 ubox
58 71 0.048498515 ubox
59 68 0.766826388 ubox
60 67 0.830487319 ubox
60 72 0.191684229 ubox
61 66 0.829964340 ubox
61 71 0.191895220 ubox
66 72 0.159378735 ubox
67 71 0.158457228 ubox
4 26 0.9500000 lbox
5 25 0.9500000 lbox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
8 22 0.9500000 lbox
11 19 0.9500000 lbox
12 18 0.9500000 lbox
13 17 0.9500000 lbox
34 58 0.9500000 lbox
35 57 0.9500000 lbox
36 56 0.9500000 lbox
37 55 0.9500000 lbox
38 54 0.9500000 lbox
40 53 0.9500000 lbox
41 52 0.9500000 lbox
42 51 0.9500000 lbox
59 68 0.9500000 lbox
60 67 0.9500000 lbox
61 66 0.9500000 lbox
showpage
end
%%EOF
