%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:37:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUCCUUCAGCCUCGUUCCCGGGCAGUAUAAAGUUUGCUGUCUCCUUUGUUCGCCCUCGUUGCGCAGUAGUGCUAGCGGCUUCGCGGUUCGGUCCUCGCACCCGGCAGCCGCCACUGGUGCUGAGCUGCUAGGAAGCCCCUAUCGCCGAGCUCGUUGGAGCUUGAACCCAUUGUCACCCCUCCGACUCACCGGCCCAAAAAAAAAAAAAC\
) } def
/len { sequence length } bind def

/coor [
[12.30718994 307.27935791]
[9.42191792 321.99923706]
[6.53664494 336.71914673]
[15.56058311 349.69387817]
[12.68474674 365.23431396]
[-0.38468218 374.12057495]
[-15.89384365 371.08059692]
[-24.64142609 357.91793823]
[-21.43764496 342.44180298]
[-8.18324661 333.83386230]
[-5.29797363 319.11398315]
[-2.41270113 304.39407349]
[-8.71385670 300.32647705]
[-16.84907341 312.92877197]
[-24.98428917 325.53109741]
[-33.11969757 338.13327026]
[-45.72175980 329.99768066]
[-37.58660126 317.39587402]
[-29.45138550 304.79357910]
[-21.31616974 292.19125366]
[-27.61732483 288.12365723]
[-39.84381104 296.81347656]
[-52.07029724 305.50329590]
[-64.29678345 314.19311523]
[-76.52326965 322.88293457]
[-88.74975586 331.57278442]
[-100.97624207 340.26260376]
[-113.20272827 348.95242310]
[-114.27563477 364.55316162]
[-125.16265869 375.77841187]
[-140.72328186 377.32800293]
[-153.61024475 368.47021484]
[-157.73872375 353.38748169]
[-151.15937805 339.20135498]
[-136.97875977 332.61010742]
[-121.89254761 336.72592163]
[-109.66606140 328.03610229]
[-97.43957520 319.34628296]
[-85.21308899 310.65646362]
[-72.98660278 301.96664429]
[-60.76012039 293.27682495]
[-48.53363419 284.58697510]
[-36.30714798 275.89715576]
[-31.63170433 244.98735046]
[-9.23112202 226.56246948]
[17.49096489 227.77362061]
[24.76419449 214.65492249]
[32.03742218 201.53623962]
[39.31065369 188.41754150]
[35.62281418 178.88796997]
[37.83556747 168.68737793]
[45.45422363 161.23510742]
[56.13223648 159.16418457]
[63.79283524 146.26785278]
[71.45343018 133.37153625]
[65.16781616 126.74480438]
[60.38890839 118.96119690]
[57.32342529 110.35739899]
[56.10397339 101.30557251]
[56.78330231 92.19728088]
[59.33201981 83.42650604]
[63.63988113 75.37263489]
[69.52054596 68.38404846]
[76.71963501 62.76305389]
[71.05684662 48.87302780]
[65.39406586 34.98299789]
[53.01948166 25.12499428]
[55.37944412 10.41853809]
[49.71665955 -3.47148848]
[44.05387115 -17.36151505]
[38.39108658 -31.25154305]
[32.72829819 -45.14157104]
[28.60382080 -48.34090805]
[26.34486771 -52.39682007]
[25.96532822 -56.45526886]
[27.13811111 -59.78046417]
[22.10119438 -73.90949249]
[17.06427765 -88.03852081]
[12.02736282 -102.16754913]
[6.99044609 -116.29657745]
[1.95352995 -130.42561340]
[-3.18842959 -144.51675415]
[-8.43514824 -158.56922913]
[-13.68186569 -172.62168884]
[-19.61529160 -179.56663513]
[-18.90038490 -186.92263794]
[-23.93729973 -201.05166626]
[-28.97421646 -215.18069458]
[-40.89627457 -225.58142090]
[-37.88198471 -240.16783142]
[-42.91889954 -254.29685974]
[-56.73904419 -262.44445801]
[-58.84296799 -278.34893799]
[-47.61671829 -289.80978394]
[-31.67211533 -288.03518677]
[-23.24049377 -274.38647461]
[-28.78987122 -259.33377075]
[-23.75295448 -245.20474243]
[-12.19117165 -235.81462097]
[-14.84518719 -220.21760559]
[-9.80827045 -206.08857727]
[-4.77135468 -191.95954895]
[0.37060520 -177.86840820]
[5.61732340 -163.81593323]
[10.86404133 -149.76347351]
[16.14859200 -144.59671021]
[16.08255959 -135.46252441]
[21.11947632 -121.33349609]
[26.15639114 -107.20446777]
[31.19330788 -93.07543945]
[36.23022461 -78.94641113]
[41.26713943 -64.81737518]
[46.61832809 -50.80435562]
[52.28111267 -36.91432953]
[57.94390106 -23.02430153]
[63.60668564 -9.13427448]
[69.26947021 4.75575209]
[81.23901367 13.62024975]
[79.28408813 29.32021332]
[84.94687653 43.21023941]
[90.60966492 57.10026550]
[117.71295166 57.26533127]
[140.93513489 73.79417419]
[153.28964233 65.28734589]
[165.64414978 56.78052139]
[177.99865723 48.27369308]
[190.35316467 39.76686478]
[202.57965088 31.07704163]
[214.67541504 22.20614624]
[226.63774109 13.15614605]
[238.46401978 3.92904782]
[250.29028320 -5.29805040]
[262.11654663 -14.52514839]
[265.50137329 -30.20706749]
[279.93585205 -37.20886612]
[294.34710693 -30.15936661]
[297.68005371 -14.46634007]
[287.37792969 -2.16813374]
[271.34365845 -2.69887900]
[259.51739502 6.52821922]
[247.69111633 15.75531769]
[235.86483765 24.98241615]
[234.40100098 29.52842331]
[230.06582642 33.20311737]
[223.54631042 34.30189896]
[211.45054626 43.17279434]
[209.85200500 47.67320251]
[205.40934753 51.21718979]
[198.86000061 52.12137604]
[186.50549316 60.62820053]
[174.15098572 69.13503265]
[161.79647827 77.64185333]
[149.44195557 86.14868164]
[151.33525085 101.02871704]
[165.42639160 106.17067719]
[179.51753235 111.31263733]
[193.60867310 116.45459747]
[207.69981384 121.59655762]
[221.79095459 126.73851776]
[235.88209534 131.88047791]
[251.60482788 124.21135712]
[267.69277954 130.16891479]
[274.36029053 145.60858154]
[288.52642822 150.54017639]
[302.69256592 155.47177124]
[315.35617065 146.50445557]
[330.87164307 146.72689819]
[343.27297974 156.05355835]
[347.79159546 170.89813232]
[342.69000244 185.55259705]
[329.92987061 194.38200378]
[314.41772461 193.99127197]
[302.11828613 184.53062439]
[297.76095581 169.63789368]
[283.59481812 164.70629883]
[269.42871094 159.77471924]
[258.72732544 166.95178223]
[245.65097046 166.65028381]
[234.97877502 158.75631714]
[230.74014282 145.97161865]
[216.64900208 140.82965088]
[202.55786133 135.68769836]
[188.46672058 130.54573059]
[174.37557983 125.40377808]
[160.28443909 120.26181793]
[146.19329834 115.11985779]
[139.84083557 126.45321655]
[130.83612061 135.52542114]
[119.91487122 141.75402832]
[107.92871857 144.78208923]
[95.77914429 144.49726868]
[84.34976196 141.03213501]
[76.68916321 153.92845154]
[69.02856445 166.82478333]
[69.68846893 186.97241211]
[52.42934799 195.69076538]
[45.15611649 208.80946350]
[37.88288879 221.92816162]
[30.60965919 235.04685974]
[35.59410095 239.17509460]
[39.84346390 244.22787476]
[43.18558884 250.07192993]
[45.47294235 256.54183960]
[46.58856964 263.44479370]
[46.45119476 270.56619263]
[45.01924133 277.67636108]
[42.29356766 284.53799438]
[38.31883240 290.91400146]
[33.18339157 296.57565308]
[27.01766586 301.31060791]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 12]
[2 11]
[3 10]
[21 43]
[22 42]
[23 41]
[24 40]
[25 39]
[26 38]
[27 37]
[28 36]
[46 199]
[47 198]
[48 197]
[49 196]
[53 194]
[54 193]
[55 192]
[64 121]
[65 120]
[66 119]
[68 117]
[69 116]
[70 115]
[71 114]
[72 113]
[76 112]
[77 111]
[78 110]
[79 109]
[80 108]
[81 107]
[82 105]
[83 104]
[84 103]
[86 102]
[87 101]
[88 100]
[90 98]
[91 97]
[123 153]
[124 152]
[125 151]
[126 150]
[127 149]
[128 146]
[129 145]
[130 142]
[131 141]
[132 140]
[133 139]
[154 186]
[155 185]
[156 184]
[157 183]
[158 182]
[159 181]
[160 180]
[163 176]
[164 175]
[165 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
