%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:44:28 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MIXL1)
} def

/sequence { (\
CCUGGCCCGGGAGGGUAUAAGUGCGGCCCGCGCCCCUCCGAGCGGCGCGCUGGGUUCCGGAGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.007772321 ubox
1 14 0.005596024 ubox
1 45 0.165524705 ubox
1 53 0.026402376 ubox
1 54 0.108491475 ubox
1 60 0.238201175 ubox
2 9 0.005658264 ubox
2 10 0.007898932 ubox
2 13 0.005617414 ubox
2 21 0.029737653 ubox
2 44 0.166874772 ubox
2 45 0.186978907 ubox
2 52 0.026434805 ubox
2 53 0.110123428 ubox
2 59 0.238677532 ubox
2 60 0.376608439 ubox
2 62 0.016242621 ubox
3 9 0.008205925 ubox
3 12 0.005610884 ubox
3 17 0.012777745 ubox
3 19 0.021616893 ubox
3 20 0.028637441 ubox
3 44 0.180584328 ubox
3 47 0.004915660 ubox
3 49 0.021497676 ubox
3 52 0.109489670 ubox
3 59 0.377479127 ubox
3 61 0.015927284 ubox
3 64 0.050655519 ubox
4 8 0.008005110 ubox
4 16 0.009996757 ubox
4 18 0.019112543 ubox
4 28 0.004832701 ubox
4 34 0.006904150 ubox
4 43 0.148566378 ubox
4 46 0.028034081 ubox
4 48 0.032297470 ubox
4 51 0.108015393 ubox
4 56 0.155321594 ubox
4 57 0.160277925 ubox
4 58 0.382132861 ubox
4 63 0.087218072 ubox
5 16 0.118659863 ubox
5 27 0.004854419 ubox
5 33 0.006952674 ubox
5 43 0.349388383 ubox
5 46 0.557346392 ubox
5 48 0.076759860 ubox
5 50 0.107796652 ubox
5 55 0.244056382 ubox
5 56 0.113934643 ubox
5 57 0.358980750 ubox
5 63 0.524069021 ubox
6 15 0.124404584 ubox
6 26 0.004705348 ubox
6 32 0.006953432 ubox
6 42 0.366867230 ubox
6 45 0.556122602 ubox
6 47 0.077344344 ubox
6 49 0.107529513 ubox
6 53 0.010617151 ubox
6 54 0.446766020 ubox
6 60 0.003471884 ubox
6 62 0.525153266 ubox
7 14 0.124532488 ubox
7 25 0.004522733 ubox
7 44 0.550220447 ubox
7 45 0.199847957 ubox
7 52 0.010590829 ubox
7 53 0.448256283 ubox
7 54 0.038886240 ubox
7 60 0.533623945 ubox
8 13 0.124485784 ubox
8 23 0.004000437 ubox
8 30 0.007049315 ubox
8 40 0.361566290 ubox
8 44 0.214413785 ubox
8 47 0.024234182 ubox
8 52 0.447742807 ubox
8 53 0.038884817 ubox
8 59 0.533683532 ubox
9 22 0.003745750 ubox
9 29 0.010164213 ubox
9 39 0.302847724 ubox
9 43 0.226523026 ubox
9 46 0.024195158 ubox
9 51 0.173330978 ubox
9 57 0.003832377 ubox
9 58 0.532571272 ubox
10 28 0.010298691 ubox
10 38 0.226324491 ubox
10 39 0.775355648 ubox
10 50 0.111182448 ubox
10 51 0.009801938 ubox
10 57 0.525115923 ubox
10 58 0.028798157 ubox
11 27 0.010320341 ubox
11 36 0.012327399 ubox
11 37 0.101381411 ubox
11 38 0.840376822 ubox
11 50 0.010827566 ubox
11 55 0.009451690 ubox
11 56 0.419715494 ubox
11 57 0.040426603 ubox
12 37 0.901962563 ubox
12 55 0.330346692 ubox
12 56 0.046962017 ubox
13 28 0.012475106 ubox
13 29 0.141204072 ubox
13 35 0.053610686 ubox
13 36 0.931246436 ubox
13 37 0.029617085 ubox
13 55 0.040614364 ubox
13 56 0.008212672 ubox
13 58 0.005163413 ubox
14 27 0.012436664 ubox
14 28 0.143285070 ubox
14 34 0.054346130 ubox
14 35 0.931328167 ubox
14 36 0.031508008 ubox
14 37 0.003962721 ubox
14 51 0.012666868 ubox
14 55 0.015216830 ubox
14 56 0.006627848 ubox
14 57 0.005496383 ubox
15 22 0.003276850 ubox
15 24 0.139715732 ubox
15 27 0.143270659 ubox
15 33 0.053217625 ubox
15 34 0.930864663 ubox
15 35 0.031479485 ubox
15 36 0.004118855 ubox
15 50 0.013235670 ubox
15 55 0.010095504 ubox
15 56 0.007230691 ubox
16 21 0.004039634 ubox
16 23 0.138833254 ubox
16 26 0.141268516 ubox
16 32 0.050531806 ubox
16 49 0.012962855 ubox
16 52 0.035421092 ubox
16 54 0.035378339 ubox
17 22 0.118507580 ubox
17 51 0.020667714 ubox
17 55 0.017643270 ubox
18 52 0.072642923 ubox
18 54 0.022903651 ubox
19 51 0.051987303 ubox
19 56 0.003592616 ubox
20 51 0.229634448 ubox
20 55 0.004995683 ubox
20 56 0.006730747 ubox
21 27 0.010297291 ubox
21 31 0.035725986 ubox
21 33 0.925342858 ubox
21 48 0.022434544 ubox
21 50 0.237782942 ubox
21 55 0.010247996 ubox
21 63 0.085454396 ubox
22 26 0.009680988 ubox
22 30 0.035699104 ubox
22 32 0.925575813 ubox
22 47 0.022439383 ubox
22 49 0.237699588 ubox
22 54 0.058629691 ubox
22 59 0.029382930 ubox
22 62 0.084783259 ubox
22 64 0.020530202 ubox
23 29 0.035137277 ubox
23 31 0.927023429 ubox
23 33 0.105276060 ubox
23 46 0.022504332 ubox
23 48 0.237779496 ubox
23 50 0.016054640 ubox
23 55 0.004234672 ubox
23 58 0.041023261 ubox
23 63 0.035040018 ubox
24 30 0.926963405 ubox
24 32 0.105354680 ubox
24 45 0.022485278 ubox
24 47 0.237623479 ubox
24 49 0.016098499 ubox
24 52 0.079377978 ubox
24 54 0.004751822 ubox
24 59 0.099970350 ubox
24 62 0.034625412 ubox
24 64 0.003163323 ubox
25 29 0.867172138 ubox
25 31 0.105159013 ubox
25 34 0.015130195 ubox
25 46 0.208771499 ubox
25 48 0.015460184 ubox
25 51 0.079588416 ubox
25 56 0.106387696 ubox
25 57 0.017582148 ubox
25 58 0.101064594 ubox
25 63 0.003280595 ubox
26 33 0.016059652 ubox
26 43 0.023412127 ubox
26 46 0.106641056 ubox
26 48 0.005753601 ubox
26 50 0.079522066 ubox
26 55 0.167450805 ubox
26 56 0.013209702 ubox
26 57 0.095133282 ubox
26 63 0.007885829 ubox
27 32 0.016023382 ubox
27 42 0.023410328 ubox
27 45 0.123425937 ubox
27 47 0.007297015 ubox
27 49 0.072591671 ubox
27 53 0.022683309 ubox
27 54 0.205686756 ubox
27 62 0.007938903 ubox
28 44 0.088257912 ubox
28 45 0.202806186 ubox
28 52 0.022744573 ubox
28 53 0.205992811 ubox
28 54 0.003932500 ubox
28 60 0.008466619 ubox
29 40 0.023451119 ubox
29 44 0.221117129 ubox
29 47 0.010403965 ubox
29 49 0.052516642 ubox
29 52 0.204515448 ubox
29 53 0.003817380 ubox
29 59 0.008470327 ubox
29 64 0.005460096 ubox
30 39 0.023314591 ubox
30 43 0.237251723 ubox
30 46 0.010416740 ubox
30 48 0.163474482 ubox
30 50 0.203052691 ubox
30 51 0.042051962 ubox
30 58 0.008428080 ubox
30 63 0.006490559 ubox
31 40 0.013841599 ubox
31 42 0.237094307 ubox
31 44 0.010938699 ubox
31 45 0.007467201 ubox
31 47 0.163869176 ubox
31 49 0.207398395 ubox
31 62 0.006480636 ubox
31 64 0.003939601 ubox
32 39 0.021188328 ubox
32 43 0.020577227 ubox
32 46 0.163915483 ubox
32 48 0.207380172 ubox
32 55 0.008972734 ubox
32 63 0.005388687 ubox
33 42 0.020621447 ubox
33 45 0.163674458 ubox
33 47 0.207317981 ubox
33 54 0.009297019 ubox
33 60 0.006288438 ubox
33 62 0.005391528 ubox
34 44 0.163251091 ubox
34 45 0.182005751 ubox
34 53 0.009277066 ubox
34 54 0.006984492 ubox
34 59 0.006302770 ubox
34 60 0.006667475 ubox
35 44 0.182151670 ubox
35 45 0.098889404 ubox
35 52 0.009243235 ubox
35 53 0.007046171 ubox
35 59 0.006680564 ubox
35 60 0.003713144 ubox
36 42 0.206440163 ubox
36 44 0.098974684 ubox
36 45 0.005322208 ubox
36 52 0.007066215 ubox
36 54 0.004634603 ubox
36 59 0.003702873 ubox
36 62 0.006898567 ubox
37 41 0.186147100 ubox
37 44 0.005042850 ubox
37 54 0.047066370 ubox
37 61 0.006985156 ubox
38 44 0.003436140 ubox
38 45 0.010490128 ubox
38 53 0.075205644 ubox
38 54 0.327680627 ubox
38 60 0.006994007 ubox
39 44 0.010829332 ubox
39 47 0.006784588 ubox
39 49 0.005986910 ubox
39 52 0.078698249 ubox
39 53 0.412802037 ubox
39 59 0.006986113 ubox
40 46 0.008530926 ubox
40 48 0.007069247 ubox
40 51 0.041183990 ubox
40 57 0.042175410 ubox
40 58 0.005732527 ubox
41 51 0.586178921 ubox
41 56 0.042388328 ubox
42 48 0.032916626 ubox
42 50 0.610021346 ubox
42 55 0.042177769 ubox
43 47 0.032723730 ubox
43 49 0.610083413 ubox
43 52 0.010584714 ubox
43 54 0.041973867 ubox
43 59 0.007029170 ubox
44 48 0.570735983 ubox
44 51 0.015535609 ubox
44 56 0.004004571 ubox
44 58 0.011784978 ubox
45 50 0.016190097 ubox
45 55 0.005059881 ubox
45 57 0.011975342 ubox
45 63 0.017221659 ubox
46 52 0.017585513 ubox
46 54 0.005207236 ubox
46 62 0.017222950 ubox
46 64 0.378046358 ubox
47 51 0.010903523 ubox
47 55 0.012735753 ubox
47 63 0.687459359 ubox
48 54 0.012992652 ubox
48 62 0.686601029 ubox
48 64 0.055614186 ubox
49 55 0.006763323 ubox
49 63 0.075133137 ubox
50 54 0.008050874 ubox
50 60 0.690163525 ubox
50 62 0.074272785 ubox
51 59 0.691177244 ubox
51 61 0.068935443 ubox
52 58 0.693181641 ubox
53 57 0.682022665 ubox
54 63 0.019763370 ubox
55 61 0.003902394 ubox
55 62 0.019767808 ubox
56 60 0.003893471 ubox
56 61 0.016179257 ubox
58 64 0.015387927 ubox
59 63 0.015458896 ubox
5 46 0.9500000 lbox
6 45 0.9500000 lbox
7 44 0.9500000 lbox
10 39 0.9500000 lbox
11 38 0.9500000 lbox
12 37 0.9500000 lbox
13 36 0.9500000 lbox
14 35 0.9500000 lbox
15 34 0.9500000 lbox
21 33 0.9500000 lbox
22 32 0.9500000 lbox
23 31 0.9500000 lbox
24 30 0.9500000 lbox
25 29 0.9500000 lbox
47 63 0.9500000 lbox
48 62 0.9500000 lbox
50 60 0.9500000 lbox
51 59 0.9500000 lbox
52 58 0.9500000 lbox
53 57 0.9500000 lbox
showpage
end
%%EOF
