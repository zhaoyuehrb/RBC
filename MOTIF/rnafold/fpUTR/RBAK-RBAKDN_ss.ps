%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:04:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUCUGUGUGCGUGUUCGCGCAUGCGCGCCGCCGCUGCACUGCCCUCGCUUCCUGUGCGUCCUCAGGUCACCGCUUGCUCUAGUUCCCAGGCUUUGGCCUCCAGUGGACGAGAAUCGCGGAGCCUGCGGGGCUGGAGGUCUACCAGCCACAGUCUCUGCACGUUUCCAAGAGCAGCAGAAA\
) } def
/len { sequence length } bind def

/coor [
[40.15987778 294.55166626]
[33.62853241 300.96368408]
[25.84639168 305.75900269]
[17.20483208 308.70257568]
[8.13708591 309.65243530]
[-0.90347463 308.56628418]
[-9.46600246 305.50360107]
[-18.36590385 317.57803345]
[-27.26580429 329.65246582]
[-36.16570663 341.72689819]
[-45.06560898 353.80133057]
[-53.96551132 365.87573242]
[-62.86540985 377.95016479]
[-71.76531219 390.02459717]
[-80.66521454 402.09902954]
[-89.56511688 414.17343140]
[-90.85253143 430.52197266]
[-105.76894379 437.33612061]
[-118.96963501 427.60607910]
[-116.87485504 411.34127808]
[-101.63954163 405.27352905]
[-92.73963928 393.19912720]
[-83.83973694 381.12469482]
[-74.93983459 369.05026245]
[-66.03993225 356.97583008]
[-57.14003372 344.90142822]
[-48.24013138 332.82699585]
[-39.34022903 320.75256348]
[-30.44032860 308.67813110]
[-21.54042816 296.60369873]
[-31.58381462 277.89727783]
[-30.84737587 256.60644531]
[-19.45927811 238.51766968]
[-0.45236972 228.58334351]
[21.04319000 229.56600952]
[28.20622826 216.38682556]
[35.36926651 203.20764160]
[42.53230286 190.02845764]
[49.69534302 176.84927368]
[48.97498703 161.97210693]
[62.36314774 153.54194641]
[69.52618408 140.36276245]
[60.83974075 133.02696228]
[53.91405869 123.82741547]
[49.14724350 113.18576050]
[46.83665085 101.60812378]
[47.16109467 89.66112518]
[50.16879654 77.94413757]
[35.63112640 74.24871826]
[21.09345627 70.55329895]
[6.62477970 77.48416901]
[-7.75169659 70.36402130]
[-11.00757122 54.65482712]
[-0.64521509 42.40733337]
[15.38625813 43.01676941]
[24.78887558 56.01562881]
[39.32654572 59.71104813]
[53.86421585 63.40646744]
[64.60649872 52.93730545]
[61.28662109 38.30930328]
[57.96673965 23.68130493]
[54.64686203 9.05330372]
[51.32698441 -5.57469702]
[33.79101944 -15.33383751]
[29.11828232 -34.53792191]
[39.87396622 -50.75557709]
[35.80545807 -65.19327545]
[31.73694992 -79.63098145]
[27.66844177 -94.06867981]
[23.59993362 -108.50638580]
[19.53142357 -122.94408417]
[6.02558947 -130.70489502]
[2.10521340 -145.40473938]
[9.58719158 -158.23265076]
[5.51868296 -172.67036438]
[1.45017445 -187.10806274]
[-2.61833429 -201.54576111]
[-6.68684292 -215.98345947]
[-21.59190941 -219.68948364]
[-32.63591766 -230.36306763]
[-36.84808731 -245.13308716]
[-33.09536743 -260.02645874]
[-22.38721466 -271.03695679]
[-7.60407448 -275.20281982]
[7.27746534 -271.40341187]
[18.25434494 -260.66079712]
[22.37383842 -245.86468506]
[18.52782440 -230.99513245]
[7.75085926 -220.05197144]
[11.81936741 -205.61427307]
[15.88787651 -191.17657471]
[19.95638466 -176.73886108]
[24.02489281 -162.30116272]
[37.10388184 -155.26727295]
[41.43560028 -140.68334961]
[33.96912766 -127.01259613]
[38.03763580 -112.57489014]
[42.10614395 -98.13719177]
[46.17465210 -83.69948578]
[50.24316025 -69.26178741]
[54.31166840 -54.82408524]
[64.32810211 -52.39087296]
[72.48628235 -45.95907974]
[77.26384735 -36.64318085]
[77.73379517 -26.10322571]
[73.74358368 -16.24912643]
[65.95498657 -8.89457607]
[69.27486420 5.73342419]
[72.59474182 20.36142540]
[75.91461945 34.98942566]
[79.23449707 49.61742783]
[93.36281586 46.47573090]
[107.66966248 47.17961884]
[121.13768768 51.60001755]
[132.83009338 59.34639359]
[141.95574951 69.79994202]
[147.92259216 82.16244507]
[150.37565613 95.51691437]
[165.34858704 96.41764832]
[180.32151794 97.31838226]
[195.29444885 98.21911621]
[210.26737976 99.11985016]
[225.24032593 100.02058411]
[239.48020935 93.12593842]
[251.71989441 101.61353302]
[266.69281006 102.51426697]
[281.66574097 103.41500092]
[289.39828491 95.72088623]
[299.87619019 93.60989380]
[309.57714844 97.54452515]
[315.37515259 105.99546051]
[330.30834961 107.40964508]
[345.24151611 108.82383728]
[360.17471313 110.23802185]
[375.10791016 111.65221405]
[390.04107666 113.06639862]
[401.04959106 101.96022034]
[416.62612915 100.58000183]
[429.41598511 109.57743073]
[433.38015747 124.70420837]
[426.64688110 138.81793213]
[412.39541626 145.25451660]
[397.35485840 140.97482300]
[388.62689209 127.99958801]
[373.69372559 126.58540344]
[358.76052856 125.17121124]
[343.82733154 123.75702667]
[328.89416504 122.34283447]
[313.96096802 120.92864990]
[297.03955078 130.25578308]
[280.76501465 118.38793182]
[265.79208374 117.48719788]
[250.81915283 116.58646393]
[237.65023804 123.54553986]
[224.33958435 114.99352264]
[209.36665344 114.09278870]
[194.39372253 113.19204712]
[179.42079163 112.29131317]
[164.44786072 111.39057922]
[149.47492981 110.48984528]
[146.96667480 118.75998688]
[143.08702087 126.48233795]
[137.94924927 133.43142700]
[131.70336914 139.40432739]
[124.53178406 144.22665405]
[116.64387512 147.75758362]
[108.26997375 149.89401245]
[99.65460205 150.57356262]
[91.04930878 149.77639771]
[82.70536804 147.52578735]
[75.54233551 160.70497131]
[75.75034332 176.52481079]
[62.87452698 184.01231384]
[55.71148682 197.19149780]
[48.54845047 210.37068176]
[41.38541031 223.54986572]
[34.22237396 236.72904968]
[40.67079163 243.34022522]
[45.48390579 251.20825195]
[48.42583084 259.93750000]
[49.35460663 269.09039307]
[48.22906113 278.20925903]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 30]
[8 29]
[9 28]
[10 27]
[11 26]
[12 25]
[13 24]
[14 23]
[15 22]
[16 21]
[35 177]
[36 176]
[37 175]
[38 174]
[39 173]
[41 171]
[42 170]
[48 58]
[49 57]
[50 56]
[59 111]
[60 110]
[61 109]
[62 108]
[63 107]
[66 101]
[67 100]
[68 99]
[69 98]
[70 97]
[71 96]
[74 93]
[75 92]
[76 91]
[77 90]
[78 89]
[118 160]
[119 159]
[120 158]
[121 157]
[122 156]
[123 155]
[125 153]
[126 152]
[127 151]
[131 149]
[132 148]
[133 147]
[134 146]
[135 145]
[136 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
