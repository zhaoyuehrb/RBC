%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:13:48 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CATSPERD)
} def

/sequence { (\
GAUUGUGCAGCGACUCCCCGUGGCGGUUGAGGGGCAGUGGUGGCGGCGGAAGCCCAAGUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 60 0.799738060 ubox
2 38 0.011804768 ubox
2 59 0.797252154 ubox
3 13 0.006647760 ubox
3 37 0.012027508 ubox
3 46 0.004884803 ubox
3 49 0.028652122 ubox
3 50 0.006530301 ubox
3 51 0.026879399 ubox
3 57 0.240939115 ubox
3 58 0.761015308 ubox
4 12 0.007911294 ubox
4 36 0.012197784 ubox
4 45 0.008418327 ubox
4 48 0.048001582 ubox
4 49 0.005689935 ubox
4 50 0.031809231 ubox
4 56 0.330454831 ubox
4 57 0.673081025 ubox
4 61 0.012562652 ubox
5 11 0.009621688 ubox
5 14 0.008969434 ubox
5 35 0.012242996 ubox
5 44 0.082611698 ubox
5 47 0.085550752 ubox
5 53 0.006150897 ubox
5 55 0.396178480 ubox
5 59 0.003197062 ubox
5 60 0.020910182 ubox
6 10 0.009019067 ubox
6 13 0.008933529 ubox
6 34 0.012188272 ubox
6 36 0.004092746 ubox
6 39 0.003622871 ubox
6 42 0.003350903 ubox
6 43 0.078997382 ubox
6 45 0.108725578 ubox
6 46 0.060984673 ubox
6 48 0.033772421 ubox
6 52 0.005703259 ubox
6 56 0.111212059 ubox
6 58 0.006007150 ubox
6 61 0.003269606 ubox
7 35 0.004395935 ubox
7 38 0.006118587 ubox
7 41 0.004696848 ubox
7 44 0.976451990 ubox
7 47 0.038800051 ubox
7 53 0.037501457 ubox
7 55 0.107362076 ubox
7 59 0.007048370 ubox
8 34 0.004395339 ubox
8 37 0.006248462 ubox
8 40 0.004844745 ubox
8 42 0.088032714 ubox
8 43 0.971489172 ubox
8 46 0.038656901 ubox
8 52 0.037372438 ubox
8 58 0.007728915 ubox
9 41 0.087039305 ubox
10 14 0.003672824 ubox
10 35 0.007551457 ubox
10 38 0.004868741 ubox
10 41 0.936324973 ubox
10 44 0.052612732 ubox
10 53 0.133933498 ubox
11 29 0.013064117 ubox
11 34 0.007561395 ubox
11 37 0.005119657 ubox
11 39 0.067082996 ubox
11 40 0.984443692 ubox
11 43 0.052681459 ubox
11 48 0.004302403 ubox
11 52 0.134043959 ubox
11 61 0.037804223 ubox
12 28 0.013098322 ubox
12 38 0.040751741 ubox
12 47 0.004306261 ubox
12 60 0.041010767 ubox
13 27 0.013110759 ubox
13 38 0.984058420 ubox
13 41 0.052345976 ubox
13 59 0.041010360 ubox
14 26 0.013107736 ubox
14 31 0.007708463 ubox
14 34 0.004664450 ubox
14 37 0.987524142 ubox
14 40 0.052345600 ubox
14 49 0.017683787 ubox
14 52 0.009440660 ubox
14 58 0.040931370 ubox
15 25 0.012637957 ubox
15 30 0.007712226 ubox
15 33 0.004648950 ubox
15 34 0.009534710 ubox
15 36 0.983630459 ubox
15 39 0.051623014 ubox
15 48 0.013114307 ubox
15 49 0.008421667 ubox
15 50 0.137783327 ubox
15 51 0.008399005 ubox
15 57 0.025546504 ubox
16 23 0.007097176 ubox
16 29 0.007698447 ubox
16 32 0.004948810 ubox
16 33 0.019121952 ubox
16 34 0.986520730 ubox
16 46 0.003527462 ubox
16 48 0.014637378 ubox
16 49 0.144854500 ubox
17 22 0.007068279 ubox
17 23 0.010965148 ubox
17 31 0.004947053 ubox
17 32 0.019421445 ubox
17 33 0.986692939 ubox
17 34 0.065738217 ubox
17 45 0.003527694 ubox
17 46 0.003667523 ubox
17 48 0.144863623 ubox
18 22 0.010896391 ubox
18 26 0.009990650 ubox
18 31 0.019583208 ubox
18 32 0.986680072 ubox
18 33 0.065736794 ubox
18 43 0.003737654 ubox
18 46 0.146269297 ubox
19 25 0.011193203 ubox
19 29 0.021717363 ubox
19 31 0.986455112 ubox
19 32 0.065663791 ubox
19 42 0.003743050 ubox
19 45 0.146312441 ubox
20 24 0.013877981 ubox
20 27 0.020947980 ubox
20 28 0.037010743 ubox
20 41 0.003534047 ubox
20 44 0.146340452 ubox
21 26 0.020983160 ubox
21 29 0.549101792 ubox
21 40 0.003558692 ubox
21 43 0.146187819 ubox
22 28 0.509107669 ubox
23 27 0.338535003 ubox
23 38 0.003919266 ubox
23 41 0.146175650 ubox
24 37 0.003986853 ubox
24 40 0.146296922 ubox
26 35 0.008101744 ubox
26 38 0.131823617 ubox
27 34 0.008360571 ubox
27 37 0.136618666 ubox
28 33 0.007874811 ubox
28 36 0.145210757 ubox
29 35 0.145168421 ubox
32 55 0.004312713 ubox
33 54 0.004325395 ubox
34 53 0.004329914 ubox
35 52 0.004327425 ubox
37 44 0.003625099 ubox
38 43 0.003586941 ubox
40 47 0.004082588 ubox
41 46 0.004042689 ubox
41 56 0.006760762 ubox
41 61 0.018715762 ubox
42 54 0.029470885 ubox
42 55 0.011466834 ubox
42 60 0.077930963 ubox
43 53 0.029774972 ubox
43 54 0.008132605 ubox
43 59 0.078656105 ubox
44 52 0.029873695 ubox
44 58 0.078680013 ubox
44 61 0.016901658 ubox
45 54 0.969788425 ubox
45 55 0.080969432 ubox
45 60 0.084801022 ubox
46 53 0.976006189 ubox
46 54 0.058423243 ubox
46 59 0.085761063 ubox
47 52 0.977271258 ubox
47 58 0.085491339 ubox
47 61 0.005887184 ubox
48 54 0.030698669 ubox
48 55 0.115474370 ubox
48 60 0.006702001 ubox
49 53 0.030360510 ubox
49 54 0.115438023 ubox
49 59 0.005287531 ubox
49 60 0.017824526 ubox
50 59 0.017502614 ubox
52 59 0.013700519 ubox
53 58 0.014334755 ubox
1 60 0.9500000 lbox
2 59 0.9500000 lbox
3 58 0.9500000 lbox
4 57 0.9500000 lbox
7 44 0.9500000 lbox
8 43 0.9500000 lbox
10 41 0.9500000 lbox
11 40 0.9500000 lbox
13 38 0.9500000 lbox
14 37 0.9500000 lbox
15 36 0.9500000 lbox
16 34 0.9500000 lbox
17 33 0.9500000 lbox
18 32 0.9500000 lbox
19 31 0.9500000 lbox
45 54 0.9500000 lbox
46 53 0.9500000 lbox
47 52 0.9500000 lbox
showpage
end
%%EOF
