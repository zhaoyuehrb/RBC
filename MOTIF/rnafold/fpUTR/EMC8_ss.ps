%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:46:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCCGGCGGCGCCGGGCGAGAAGCGCGACUGGAGUCUGGGGCUGCGGCUUCCCAGAGGCGCGAGUCGCUUUUCCAGGAGCCGAGGCCCAAACGGGGCCGGGCCUGAAGGGUCCCCCGCCAGCCCGCGGCCGCGCCAUCAAUCGCCGCCGCCUCGUCCCGCUUCUCGGCUGAGGCGCCGCGCGGCCAGGCAGCGGGUCCAGGCCUCAGCCGCGCGCCCAGGGGCCUCCGGGGCCCUCCCGGGUCAGC\
) } def
/len { sequence length } bind def

/coor [
[74.64318848 335.76873779]
[85.55689240 325.47839355]
[100.52520752 324.50387573]
[112.68149567 333.29296875]
[110.03520203 318.52825928]
[107.38890076 303.76351929]
[104.74260712 288.99880981]
[94.88132477 277.83615112]
[100.06263733 262.88742065]
[97.41634369 248.12271118]
[94.77005005 233.35798645]
[84.90876770 222.19534302]
[90.09008026 207.24662781]
[87.44378662 192.48188782]
[84.70402527 177.73422241]
[81.87091064 163.00421143]
[79.03779602 148.27418518]
[76.20468140 133.54417419]
[87.53237152 97.87838745]
[76.79226685 87.40699005]
[66.05215454 76.93560028]
[55.31204605 66.46420288]
[44.57193756 55.99281311]
[33.83182907 45.52141953]
[23.09172058 35.05002594]
[12.35161304 24.57863426]
[-2.93076444 20.48479652]
[-6.64222908 6.06001520]
[-17.38233757 -4.41137791]
[-28.12244606 -14.88277054]
[-26.73109818 0.05256162]
[-34.29971313 13.00308418]
[-47.99526215 19.12124825]
[-62.69132233 16.11694527]
[-72.88696289 5.11472321]
[-74.76583099 -9.76714039]
[-67.62463379 -22.95817184]
[-54.13641357 -29.52079391]
[-39.35123444 -26.99917793]
[-48.97686768 -38.50340652]
[-58.60249710 -50.00762939]
[-68.22812653 -61.51185608]
[-77.85375977 -73.01608276]
[-92.64356232 -78.63500977]
[-94.87665558 -93.36126709]
[-104.50228119 -104.86549377]
[-114.12791443 -116.36972046]
[-123.75354767 -127.87394714]
[-133.37918091 -139.37817383]
[-145.80493164 -135.95942688]
[-158.55540466 -137.48011780]
[-169.74694824 -143.68011475]
[-177.73966980 -153.61065674]
[-181.37762451 -165.77935791]
[-180.15592957 -178.37443542]
[-174.29054260 -189.53451538]
[-183.62164307 -201.27890015]
[-193.02696228 -212.96394348]
[-202.50608826 -224.58917236]
[-211.98521423 -236.21441650]
[-221.46435547 -247.83964539]
[-230.94348145 -259.46487427]
[-240.42260742 -271.09011841]
[-248.25102234 -275.74853516]
[-249.94706726 -282.92318726]
[-259.27816772 -294.66754150]
[-268.60928345 -306.41192627]
[-277.94039917 -318.15631104]
[-287.27148438 -329.90069580]
[-284.71322632 -315.12045288]
[-279.23815918 -301.15536499]
[-278.93142700 -286.15850830]
[-283.83087158 -271.98123169]
[-293.33166504 -260.37368774]
[-306.26095581 -252.76885986]
[-321.02264404 -250.10554504]
[-335.79434204 -252.71252441]
[-348.75256348 -260.26797485]
[-358.29757690 -271.83914185]
[-363.25109863 -285.99765015]
[-363.00155640 -300.99557495]
[-357.57983398 -314.98144531]
[-347.65515137 -326.22872925]
[-334.44967651 -333.34994507]
[-319.95407104 -329.49282837]
[-330.82595825 -339.82733154]
[-341.69784546 -350.16183472]
[-352.56973267 -360.49633789]
[-363.44161987 -370.83084106]
[-379.45141602 -371.86349487]
[-388.50744629 -385.10614014]
[-383.66268921 -400.40020752]
[-368.63366699 -406.01336670]
[-354.94931030 -397.63967896]
[-353.10711670 -381.70275879]
[-342.23522949 -371.36825562]
[-331.36334229 -361.03375244]
[-320.49145508 -350.69924927]
[-309.61956787 -340.36474609]
[-296.83990479 -348.21841431]
[-301.14868164 -362.58624268]
[-305.45745850 -376.95404053]
[-309.76626587 -391.32186890]
[-315.21606445 -398.62149048]
[-314.03738403 -405.89904785]
[-318.16381836 -420.32031250]
[-331.70071411 -428.02682495]
[-335.68008423 -442.71081543]
[-328.24966431 -455.56866455]
[-332.37609863 -469.98989868]
[-336.50256348 -484.41116333]
[-346.67288208 -497.97586060]
[-336.45373535 -511.50378418]
[-320.62551880 -505.42892456]
[-322.08129883 -488.53759766]
[-317.95486450 -474.11636353]
[-313.82839966 -459.69509888]
[-300.72128296 -452.71377563]
[-296.33105469 -438.14736938]
[-303.74258423 -424.44674683]
[-299.61614990 -410.02548218]
[-295.39843750 -395.63067627]
[-291.08966064 -381.26284790]
[-286.78085327 -366.89501953]
[-282.47207642 -352.52719116]
[-275.52713013 -339.23178101]
[-266.19601440 -327.48742676]
[-256.86489868 -315.74304199]
[-247.53379822 -303.99865723]
[-238.20268250 -292.25427246]
[-228.79737854 -280.56924438]
[-219.31825256 -268.94400024]
[-209.83911133 -257.31878662]
[-200.35998535 -245.69354248]
[-190.88085938 -234.06829834]
[-181.40171814 -222.44306946]
[-174.75523376 -219.25305176]
[-171.87727356 -210.61000061]
[-162.54615784 -198.86563110]
[-145.59855652 -202.01216125]
[-129.31286621 -196.09748840]
[-118.22061157 -182.67106628]
[-115.45692444 -165.38565063]
[-121.87495422 -149.00379944]
[-112.24932098 -137.49957275]
[-102.62368774 -125.99534607]
[-92.99806213 -114.49111938]
[-83.37242889 -102.98690033]
[-69.27111816 -98.19082642]
[-66.34953308 -82.64171600]
[-56.72390366 -71.13748932]
[-47.09827042 -59.63326263]
[-37.47264099 -48.12903595]
[-27.84700966 -36.62480927]
[-17.65105247 -25.62287903]
[-6.91094446 -15.15148640]
[3.82916403 -4.68009329]
[18.34333611 -1.33523858]
[22.82300568 13.83852577]
[33.56311417 24.30991936]
[44.30322266 34.78131104]
[55.04333115 45.25270462]
[65.78343964 55.72409821]
[76.52355194 66.19548798]
[87.26365662 76.66688538]
[98.00376892 87.13827515]
[111.71209717 93.22775269]
[126.68201447 94.17719269]
[141.65193176 95.12664032]
[156.62185669 96.07608032]
[171.59178162 97.02552795]
[186.56170654 97.97496796]
[201.53163147 98.92440796]
[216.50154114 99.87385559]
[231.47146606 100.82329559]
[246.46063232 101.39321136]
[261.45944214 101.58322144]
[276.45822144 101.77323151]
[285.05456543 98.75858307]
[291.64550781 102.06184387]
[306.64068604 102.44183350]
[321.63586426 102.82183075]
[335.62762451 95.43660736]
[348.15481567 103.49384308]
[363.14999390 103.87383270]
[379.13720703 98.23068237]
[388.98553467 112.03092957]
[378.45086670 125.31466675]
[362.76998901 118.86901855]
[347.77481079 118.48902893]
[334.85562134 125.90142822]
[321.25588989 117.81701660]
[306.26071167 117.43701935]
[291.26550293 117.05702972]
[276.26821899 116.77202606]
[261.26940918 116.58201599]
[246.27062988 116.39200592]
[244.18000793 118.22482300]
[241.24609375 119.35022736]
[237.73106384 119.44612122]
[234.00765991 118.28983307]
[230.52201843 115.79322052]
[215.55210876 114.84377289]
[200.58218384 113.89433289]
[185.61225891 112.94489288]
[170.64233398 111.99544525]
[155.67240906 111.04600525]
[140.70249939 110.09655762]
[125.73257446 109.14711761]
[110.76264954 108.19766998]
[105.80566406 113.82601929]
[117.06218719 123.74018097]
[107.14784241 134.99653625]
[95.89168549 125.08271027]
[90.93470001 130.71105957]
[93.76781464 145.44107056]
[96.60092926 160.17109680]
[99.43404388 174.90110779]
[104.11740875 182.71463013]
[102.20851135 189.83560181]
[104.85480499 204.60032654]
[114.90537262 216.81903076]
[109.53477478 230.71168518]
[112.18106842 245.47640991]
[114.82736206 260.24114990]
[124.87792969 272.45983887]
[119.50733185 286.35250854]
[122.15362549 301.11721802]
[124.79992676 315.88195801]
[127.44622040 330.64666748]
[130.74432373 345.27960205]
[134.68775940 359.75195312]
[138.63119507 374.22433472]
[142.57461548 388.69668579]
[146.51805115 403.16906738]
[158.53750610 414.32543945]
[154.62223816 430.25033569]
[138.79994202 434.56161499]
[127.34723663 422.82415771]
[132.04568481 407.11248779]
[128.10224915 392.64013672]
[124.15882111 378.16775513]
[120.21539307 363.69540405]
[116.27195740 349.22302246]
[109.06206512 362.37664795]
[95.12317657 367.91806030]
[80.85012054 363.30505371]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 230]
[5 229]
[6 228]
[7 227]
[9 225]
[10 224]
[11 223]
[13 221]
[14 220]
[15 218]
[16 217]
[17 216]
[18 215]
[19 166]
[20 165]
[21 164]
[22 163]
[23 162]
[24 161]
[25 160]
[26 159]
[28 157]
[29 156]
[30 155]
[39 154]
[40 153]
[41 152]
[42 151]
[43 150]
[45 148]
[46 147]
[47 146]
[48 145]
[49 144]
[56 139]
[57 138]
[58 136]
[59 135]
[60 134]
[61 133]
[62 132]
[63 131]
[65 130]
[66 129]
[67 128]
[68 127]
[69 126]
[85 99]
[86 98]
[87 97]
[88 96]
[89 95]
[100 125]
[101 124]
[102 123]
[103 122]
[105 121]
[106 120]
[109 117]
[110 116]
[111 115]
[167 210]
[168 209]
[169 208]
[170 207]
[171 206]
[172 205]
[173 204]
[174 203]
[175 202]
[176 197]
[177 196]
[178 195]
[180 194]
[181 193]
[182 192]
[184 190]
[185 189]
[231 244]
[232 243]
[233 242]
[234 241]
[235 240]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
