%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:02:04 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KCTD19)
} def

/sequence { (\
GCGACCCCGGGAACCGUUAUUGGCCGGGUCACAAGCCCGCCCGCCCGCUGCUGGAGCCGCGACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 17 0.053765596 ubox
1 24 0.014334845 ubox
1 36 0.309101532 ubox
1 40 0.062759208 ubox
1 44 0.155601521 ubox
1 48 0.040314031 ubox
1 51 0.022016946 ubox
1 57 0.030443867 ubox
1 60 0.621111504 ubox
2 9 0.048981502 ubox
2 16 0.058827870 ubox
2 22 0.016678235 ubox
2 23 0.013875698 ubox
2 35 0.309949913 ubox
2 39 0.062945377 ubox
2 43 0.156060473 ubox
2 47 0.040374695 ubox
2 50 0.022048028 ubox
2 53 0.004512881 ubox
2 56 0.030528765 ubox
2 59 0.621545543 ubox
2 61 0.029390718 ubox
3 8 0.050049528 ubox
3 15 0.058823697 ubox
3 18 0.021583301 ubox
3 21 0.028692933 ubox
3 30 0.700875328 ubox
3 38 0.046389369 ubox
3 42 0.151581440 ubox
3 46 0.040071374 ubox
3 49 0.019455127 ubox
3 52 0.004141587 ubox
3 58 0.613135715 ubox
3 60 0.028220946 ubox
4 17 0.026788104 ubox
4 20 0.033159039 ubox
4 29 0.702117261 ubox
5 11 0.072301231 ubox
5 16 0.023621133 ubox
5 23 0.007484965 ubox
5 28 0.613001985 ubox
5 54 0.139076395 ubox
6 10 0.071963584 ubox
6 22 0.007561179 ubox
6 23 0.007289613 ubox
6 27 0.508175764 ubox
6 28 0.386146314 ubox
6 53 0.138640985 ubox
6 54 0.147184365 ubox
7 22 0.007479731 ubox
7 23 0.011166102 ubox
7 26 0.374658330 ubox
7 27 0.516712545 ubox
7 28 0.009512346 ubox
7 53 0.146981293 ubox
7 54 0.496097324 ubox
8 16 0.312336450 ubox
8 22 0.012173003 ubox
8 26 0.620105509 ubox
8 27 0.009796243 ubox
8 39 0.014349428 ubox
8 43 0.124752989 ubox
8 47 0.205978786 ubox
8 50 0.030690372 ubox
8 53 0.496858053 ubox
8 59 0.039357403 ubox
8 61 0.171698409 ubox
9 15 0.320026025 ubox
9 18 0.006757992 ubox
9 21 0.012236635 ubox
9 25 0.707325616 ubox
9 38 0.014525025 ubox
9 41 0.006551018 ubox
9 42 0.137113634 ubox
9 45 0.011517725 ubox
9 46 0.239746094 ubox
9 49 0.029936697 ubox
9 52 0.494768671 ubox
9 58 0.040041631 ubox
9 60 0.172786000 ubox
9 64 0.015197505 ubox
10 14 0.314878188 ubox
10 17 0.007559576 ubox
10 18 0.004258194 ubox
10 20 0.011258573 ubox
10 24 0.705462702 ubox
10 25 0.155177261 ubox
10 37 0.014524476 ubox
10 40 0.006545708 ubox
10 41 0.137198200 ubox
10 42 0.005642662 ubox
10 44 0.011549188 ubox
10 45 0.240171246 ubox
10 46 0.013653097 ubox
10 48 0.029869024 ubox
10 49 0.017830675 ubox
10 51 0.493431744 ubox
10 52 0.036951065 ubox
10 57 0.039345362 ubox
10 58 0.181524516 ubox
10 63 0.015326102 ubox
10 64 0.011272677 ubox
11 17 0.004798381 ubox
11 18 0.015296004 ubox
11 20 0.004978130 ubox
11 21 0.016289508 ubox
11 24 0.161148608 ubox
11 30 0.003669218 ubox
11 36 0.014398296 ubox
11 40 0.136741779 ubox
11 41 0.005571834 ubox
11 44 0.239967671 ubox
11 45 0.014142091 ubox
11 48 0.027805199 ubox
11 51 0.050338061 ubox
11 57 0.181983562 ubox
11 63 0.011371556 ubox
12 17 0.015071797 ubox
12 18 0.014662688 ubox
12 20 0.017347831 ubox
12 21 0.054998425 ubox
12 29 0.003524302 ubox
13 17 0.012006697 ubox
13 20 0.048772031 ubox
14 23 0.713806484 ubox
14 27 0.013847152 ubox
14 28 0.003164927 ubox
14 54 0.185919999 ubox
15 22 0.714554400 ubox
15 26 0.013880604 ubox
15 43 0.128519721 ubox
15 47 0.419198713 ubox
15 50 0.043993748 ubox
15 53 0.185946556 ubox
15 61 0.009392127 ubox
16 21 0.621842251 ubox
16 24 0.015475066 ubox
16 25 0.013572544 ubox
16 32 0.003678410 ubox
16 36 0.008169532 ubox
16 42 0.128593796 ubox
16 44 0.083409867 ubox
16 46 0.419024800 ubox
16 48 0.197690704 ubox
16 49 0.023710069 ubox
16 51 0.129983411 ubox
16 52 0.126685175 ubox
16 60 0.009449995 ubox
16 63 0.007092311 ubox
17 23 0.015831795 ubox
17 31 0.003381691 ubox
17 35 0.008219229 ubox
17 43 0.080017634 ubox
17 47 0.194565269 ubox
17 50 0.128036207 ubox
17 59 0.009007226 ubox
17 62 0.006950176 ubox
18 22 0.011707303 ubox
18 34 0.007805323 ubox
18 50 0.109308299 ubox
18 61 0.004499320 ubox
19 49 0.109914641 ubox
20 28 0.003167099 ubox
21 31 0.008518418 ubox
21 43 0.375835918 ubox
21 47 0.121456426 ubox
21 50 0.006423237 ubox
21 59 0.004316420 ubox
22 30 0.008783496 ubox
22 41 0.421337333 ubox
22 42 0.451097441 ubox
22 45 0.228257106 ubox
22 46 0.132307579 ubox
22 49 0.009560167 ubox
22 58 0.006570561 ubox
23 29 0.008759068 ubox
23 40 0.423553606 ubox
23 41 0.449814426 ubox
23 44 0.229703481 ubox
23 45 0.130421468 ubox
23 48 0.009941148 ubox
23 57 0.006624884 ubox
23 60 0.003528956 ubox
24 28 0.008708929 ubox
24 39 0.301371676 ubox
24 43 0.220448288 ubox
24 47 0.009384599 ubox
24 56 0.006608781 ubox
25 39 0.595121982 ubox
25 43 0.146160473 ubox
25 47 0.005389001 ubox
25 59 0.004107550 ubox
26 37 0.032985938 ubox
26 38 0.668514051 ubox
26 41 0.005754744 ubox
26 42 0.161410249 ubox
26 46 0.006521443 ubox
26 58 0.004962423 ubox
27 36 0.032981430 ubox
27 37 0.668617513 ubox
27 38 0.003164824 ubox
27 40 0.005550303 ubox
27 41 0.161427085 ubox
27 45 0.006526484 ubox
27 57 0.005037331 ubox
27 58 0.003272119 ubox
28 36 0.668568927 ubox
28 37 0.003530195 ubox
28 40 0.161395016 ubox
28 44 0.006526889 ubox
28 57 0.006550198 ubox
28 63 0.005811444 ubox
29 35 0.653769961 ubox
29 39 0.156506816 ubox
29 43 0.006296209 ubox
29 54 0.008033050 ubox
29 55 0.022097931 ubox
29 56 0.007272650 ubox
29 62 0.007097139 ubox
30 53 0.010408400 ubox
30 54 0.023629439 ubox
30 61 0.007283470 ubox
31 52 0.009905114 ubox
32 50 0.005255466 ubox
32 53 0.029940413 ubox
33 49 0.003830346 ubox
33 52 0.021307769 ubox
34 49 0.012950515 ubox
34 52 0.033630705 ubox
35 44 0.118906087 ubox
35 48 0.013692972 ubox
35 51 0.040349565 ubox
35 57 0.067162506 ubox
35 60 0.143819986 ubox
36 43 0.118985196 ubox
36 47 0.013626651 ubox
36 50 0.040301404 ubox
36 54 0.010435637 ubox
36 56 0.067281869 ubox
36 59 0.143782131 ubox
37 53 0.010497786 ubox
37 54 0.059138856 ubox
38 47 0.012782433 ubox
38 53 0.059117490 ubox
38 59 0.020186262 ubox
38 61 0.634338071 ubox
39 46 0.012962985 ubox
39 48 0.044023595 ubox
39 51 0.040638163 ubox
39 52 0.037387325 ubox
39 57 0.164731919 ubox
39 58 0.018423410 ubox
39 60 0.640726802 ubox
40 47 0.044100901 ubox
40 50 0.041404385 ubox
40 54 0.051690760 ubox
40 56 0.165481527 ubox
40 59 0.639806690 ubox
41 53 0.051916368 ubox
41 54 0.171005221 ubox
42 50 0.010735554 ubox
42 53 0.170980929 ubox
42 59 0.017514068 ubox
42 61 0.234382319 ubox
43 49 0.009437811 ubox
43 51 0.166211602 ubox
43 52 0.074501043 ubox
43 57 0.675947731 ubox
43 58 0.026857021 ubox
43 60 0.237338052 ubox
44 50 0.169153053 ubox
44 54 0.024757341 ubox
44 56 0.677333394 ubox
44 59 0.237012974 ubox
45 53 0.024431899 ubox
45 54 0.681892807 ubox
46 53 0.681672388 ubox
46 59 0.008692996 ubox
46 61 0.278212918 ubox
47 52 0.462122912 ubox
47 57 0.294970161 ubox
47 58 0.010363938 ubox
47 60 0.282782301 ubox
48 54 0.014693518 ubox
48 56 0.296760110 ubox
48 59 0.282655766 ubox
49 53 0.013312254 ubox
49 55 0.295458060 ubox
49 61 0.033761001 ubox
50 57 0.286175917 ubox
50 58 0.008341338 ubox
50 60 0.041758051 ubox
51 56 0.285526140 ubox
51 59 0.041566364 ubox
52 59 0.005209685 ubox
52 61 0.008973162 ubox
53 58 0.019552261 ubox
53 60 0.011484509 ubox
53 64 0.011855473 ubox
54 63 0.012003062 ubox
1 60 0.9500000 lbox
2 59 0.9500000 lbox
3 58 0.9500000 lbox
7 54 0.9500000 lbox
8 53 0.9500000 lbox
9 52 0.9500000 lbox
10 51 0.9500000 lbox
15 47 0.9500000 lbox
16 46 0.9500000 lbox
21 43 0.9500000 lbox
22 42 0.9500000 lbox
23 41 0.9500000 lbox
25 39 0.9500000 lbox
26 38 0.9500000 lbox
27 37 0.9500000 lbox
28 36 0.9500000 lbox
29 35 0.9500000 lbox
showpage
end
%%EOF
