%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:01:25 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SLF1)
} def

/sequence { (\
UGAAGCAGUUGAGUGCUGCAGCGGCAGUCGUCGCCCCUGCCGCCGCUGCCACCGAAGGAAGCAUCCCAGACACCGGGAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.005758901 ubox
1 20 0.171769484 ubox
1 45 0.005579002 ubox
1 51 0.006992242 ubox
1 54 0.005162687 ubox
1 63 0.059722000 ubox
1 68 0.004406111 ubox
2 6 0.006296911 ubox
2 19 0.188549235 ubox
2 22 0.018199272 ubox
2 41 0.004493941 ubox
2 44 0.052068813 ubox
2 50 0.008148655 ubox
2 53 0.006701257 ubox
2 62 0.066889115 ubox
2 65 0.011252579 ubox
2 67 0.004873413 ubox
2 74 0.003347908 ubox
3 64 0.013111058 ubox
4 17 0.233900910 ubox
5 14 0.004410545 ubox
5 16 0.252999167 ubox
5 19 0.954559060 ubox
5 40 0.020889689 ubox
5 49 0.020744820 ubox
5 62 0.115027428 ubox
6 13 0.004700277 ubox
6 15 0.253019692 ubox
6 18 0.955621951 ubox
6 39 0.020940459 ubox
6 48 0.020903006 ubox
6 61 0.115005318 ubox
7 14 0.246464495 ubox
7 17 0.955427110 ubox
7 38 0.020933987 ubox
7 47 0.020892651 ubox
8 16 0.955606201 ubox
8 37 0.020877022 ubox
8 46 0.020877084 ubox
8 62 0.008733292 ubox
9 13 0.010307911 ubox
9 15 0.948656049 ubox
9 45 0.017067607 ubox
9 55 0.126798227 ubox
9 56 0.056094341 ubox
9 57 0.014145766 ubox
9 58 0.013653243 ubox
9 59 0.006386906 ubox
9 61 0.008267656 ubox
10 33 0.020121115 ubox
10 45 0.011770154 ubox
10 54 0.130140350 ubox
10 55 0.056430623 ubox
10 56 0.013487111 ubox
10 57 0.012661753 ubox
10 58 0.006322412 ubox
10 60 0.006324753 ubox
11 32 0.020884868 ubox
11 44 0.016842532 ubox
11 53 0.132127743 ubox
12 31 0.020873557 ubox
12 47 0.003403990 ubox
13 43 0.018302968 ubox
13 46 0.003741398 ubox
13 52 0.145019191 ubox
13 64 0.010874200 ubox
14 42 0.018286151 ubox
14 45 0.003740087 ubox
14 51 0.144775841 ubox
14 54 0.004003633 ubox
14 63 0.014102970 ubox
15 28 0.020722497 ubox
15 41 0.017590915 ubox
15 43 0.012886008 ubox
15 49 0.088578463 ubox
15 50 0.115681246 ubox
15 53 0.004102995 ubox
15 62 0.015076146 ubox
16 27 0.020901632 ubox
16 42 0.013174941 ubox
16 48 0.123413229 ubox
16 61 0.015076677 ubox
17 26 0.020897277 ubox
17 48 0.008975281 ubox
17 51 0.004361126 ubox
17 60 0.014759126 ubox
18 25 0.020901946 ubox
18 40 0.027849861 ubox
18 44 0.014825459 ubox
18 46 0.178100732 ubox
18 49 0.091284208 ubox
18 50 0.005312116 ubox
19 24 0.020866529 ubox
19 39 0.027980408 ubox
19 45 0.178373550 ubox
19 48 0.092147604 ubox
20 38 0.027985143 ubox
20 47 0.093282797 ubox
21 34 0.013535076 ubox
21 37 0.027250832 ubox
21 43 0.992109611 ubox
21 46 0.093374748 ubox
21 62 0.009146585 ubox
22 33 0.013953745 ubox
22 42 0.994383597 ubox
22 45 0.093256481 ubox
22 61 0.009146238 ubox
23 32 0.013958521 ubox
23 35 0.027020713 ubox
23 41 0.994570147 ubox
23 44 0.092659705 ubox
23 50 0.028671784 ubox
24 31 0.013943879 ubox
24 34 0.027077970 ubox
24 40 0.994600890 ubox
24 43 0.092518552 ubox
24 49 0.028721793 ubox
25 30 0.013934778 ubox
25 33 0.027091461 ubox
25 39 0.994605055 ubox
25 42 0.092250606 ubox
25 48 0.028728626 ubox
26 38 0.993723964 ubox
26 47 0.028721759 ubox
27 34 0.067175283 ubox
27 37 0.986536620 ubox
27 40 0.084283454 ubox
27 46 0.028725393 ubox
28 33 0.077915773 ubox
28 39 0.068376403 ubox
28 45 0.025022319 ubox
29 39 0.046713431 ubox
29 42 0.005303778 ubox
29 45 0.013323566 ubox
30 38 0.040138012 ubox
30 40 0.008823563 ubox
30 41 0.009081435 ubox
30 43 0.024654599 ubox
30 44 0.013249662 ubox
31 39 0.007131928 ubox
31 42 0.023974771 ubox
32 39 0.010564058 ubox
32 42 0.012980063 ubox
33 38 0.008291516 ubox
33 40 0.029088564 ubox
33 41 0.010508975 ubox
33 43 0.003398932 ubox
34 39 0.030029911 ubox
34 42 0.003412525 ubox
38 63 0.004496001 ubox
39 62 0.004993297 ubox
40 61 0.004989261 ubox
43 58 0.005183991 ubox
44 54 0.004268956 ubox
44 57 0.005414070 ubox
45 53 0.004232673 ubox
45 62 0.972083785 ubox
46 57 0.008738147 ubox
46 61 0.973091518 ubox
47 54 0.003758074 ubox
47 56 0.008875173 ubox
47 60 0.863665189 ubox
47 63 0.142197964 ubox
48 53 0.004285207 ubox
48 62 0.158381779 ubox
49 58 0.968793837 ubox
49 61 0.158152637 ubox
50 57 0.971437050 ubox
52 58 0.159538969 ubox
52 76 0.009946008 ubox
53 57 0.158545072 ubox
53 75 0.009976716 ubox
54 74 0.009887454 ubox
57 66 0.010448769 ubox
57 67 0.004402780 ubox
58 65 0.010528586 ubox
58 66 0.004334090 ubox
59 64 0.009664783 ubox
64 77 0.022397904 ubox
64 78 0.933707960 ubox
65 76 0.034706734 ubox
65 77 0.998166848 ubox
66 75 0.034880033 ubox
66 76 0.998464269 ubox
66 77 0.034833662 ubox
67 75 0.997925096 ubox
67 76 0.035163720 ubox
5 19 0.9500000 lbox
6 18 0.9500000 lbox
7 17 0.9500000 lbox
8 16 0.9500000 lbox
9 15 0.9500000 lbox
21 43 0.9500000 lbox
22 42 0.9500000 lbox
23 41 0.9500000 lbox
24 40 0.9500000 lbox
25 39 0.9500000 lbox
26 38 0.9500000 lbox
27 37 0.9500000 lbox
45 62 0.9500000 lbox
46 61 0.9500000 lbox
47 60 0.9500000 lbox
49 58 0.9500000 lbox
50 57 0.9500000 lbox
64 78 0.9500000 lbox
65 77 0.9500000 lbox
66 76 0.9500000 lbox
67 75 0.9500000 lbox
showpage
end
%%EOF
