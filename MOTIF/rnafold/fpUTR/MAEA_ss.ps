%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:35:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCUGGCUCCUCUGGGGGGCGUGGAUGUGGGGAGGAGCUGCUGUCUGGGUCAGCAGCUGCCCUGCUGGAGGGAGAGGGGGUGCUGCGCUCAUCCCCUGAACUCAGAUUGGAUAGCCCCGGGCCAGCGCUGGAGGAGGAGCAGAGGCAGGGAGGUGGGAGGAGCGUGCGCAGAGGCGUGGGAGGCCUGAGGAGUAAGCGGCUGG\
) } def
/len { sequence length } bind def

/coor [
[452.42507935 435.24353027]
[457.69146729 414.85992432]
[446.34155273 405.05282593]
[434.99163818 395.24572754]
[423.64172363 385.43859863]
[406.25433350 383.07754517]
[400.34735107 365.63885498]
[388.84848022 356.00680542]
[377.34960938 346.37478638]
[365.85073853 336.74276733]
[354.35186768 327.11071777]
[342.85299683 317.47869873]
[331.35412598 307.84667969]
[319.85525513 298.21466064]
[307.25778198 302.64364624]
[294.01083374 300.24920654]
[283.59472656 291.55169678]
[278.79968262 278.74157715]
[280.97879028 265.12847900]
[269.62884521 255.32136536]
[258.27893066 245.51425171]
[246.92903137 235.70715332]
[235.50428772 225.98728943]
[224.00541687 216.35527039]
[212.50654602 206.72323608]
[199.95336914 209.64184570]
[187.83084106 204.72254944]
[180.65060425 193.55430603]
[181.22346497 180.09461975]
[169.87355042 170.28750610]
[158.52363586 160.48040771]
[147.17372131 150.67329407]
[135.82379150 140.86618042]
[111.14920807 153.18914795]
[83.60296631 151.81242371]
[60.28002930 137.09062195]
[47.18758392 112.81555176]
[32.26194000 114.30725861]
[17.33629608 115.79895782]
[2.41065359 117.29066467]
[-12.51498985 118.78236389]
[-27.44063187 120.27407074]
[-42.36627579 121.76576996]
[-57.29191971 123.25746918]
[-65.95238495 136.27784729]
[-80.97051239 140.63557434]
[-95.25521088 134.27307129]
[-102.06166840 120.19449615]
[-98.17609406 105.04734039]
[-85.43312836 95.98362732]
[-69.84962463 97.28295135]
[-58.78362274 108.33182526]
[-43.85797882 106.84012604]
[-28.93233490 105.34842682]
[-14.00669193 103.85671997]
[0.91895121 102.36502075]
[15.84459400 100.87331390]
[30.77023697 99.38161469]
[45.69588089 97.88991547]
[46.64896393 89.65317535]
[48.84400940 81.65730286]
[35.55806351 74.69429016]
[22.27211571 67.73126984]
[8.98616886 60.76824951]
[-6.69460249 64.15837860]
[-19.03028679 53.90116119]
[-18.55800056 37.86506271]
[-5.64004374 28.35160255]
[9.81403446 32.65869141]
[15.94918728 47.48230362]
[29.23513412 54.44532394]
[42.52108002 61.40834045]
[55.80702591 68.37136078]
[59.62008667 63.62895966]
[63.93943405 59.34258652]
[68.71090698 55.56597519]
[61.84989548 42.22706604]
[54.98888397 28.88815498]
[48.12787247 15.54924583]
[41.26686096 2.21033573]
[34.40584946 -11.12857437]
[27.54483604 -24.46748352]
[20.68382454 -37.80639267]
[5.39466238 -41.08900452]
[-4.16664028 -53.46298981]
[-3.48552847 -69.08573151]
[7.11639786 -80.58065033]
[22.63323212 -82.52019501]
[35.73840332 -73.98857880]
[40.24404526 -59.01416016]
[34.02273560 -44.66740417]
[40.88374710 -31.32849503]
[47.74475861 -17.98958588]
[54.60577011 -4.65067625]
[61.46678162 8.68823338]
[68.32779694 22.02714348]
[75.18880463 35.36605453]
[82.04981995 48.70496368]
[89.26955414 46.72479630]
[96.69292450 45.75561523]
[104.17904663 45.81581879]
[111.58586884 46.90426254]
[118.77282715 49.00028610]
[125.60353851 52.06412125]
[131.94837952 56.03762054]
[137.68695068 60.84538269]
[142.71032715 66.39617157]
[146.92321777 72.58464813]
[150.24565125 79.29338074]
[152.61459351 86.39505768]
[153.98507690 93.75491333]
[154.33110046 101.23328400]
[153.64610291 108.68824768]
[151.94306946 115.97833252]
[149.25433350 122.96520233]
[145.63090515 129.51626587]
[156.98081970 139.32337952]
[168.33073425 149.13049316]
[179.68066406 158.93759155]
[191.03057861 168.74470520]
[208.44905090 167.15202332]
[221.37722778 178.42594910]
[222.13858032 195.22436523]
[233.63745117 204.85639954]
[245.13632202 214.48841858]
[253.72885132 217.60215759]
[256.73614502 224.35723877]
[268.08605957 234.16433716]
[279.43597412 243.97145081]
[290.78588867 253.77854919]
[307.19894409 249.70045471]
[322.65585327 256.14328003]
[331.14321899 270.38592529]
[329.48727417 286.71578979]
[340.98614502 296.34780884]
[352.48501587 305.97982788]
[363.98388672 315.61184692]
[375.48275757 325.24389648]
[386.98162842 334.87591553]
[398.48049927 344.50793457]
[409.97937012 354.13998413]
[422.87579346 353.78491211]
[432.25549316 362.04815674]
[433.44882202 374.08868408]
[444.79873657 383.89581299]
[456.14865112 393.70291138]
[467.49856567 403.51000977]
[475.69198608 398.54553223]
[484.81488037 395.66760254]
[494.34582520 395.03369141]
[503.74182129 396.67330933]
[512.46905518 400.48651123]
[520.03338623 406.25012207]
[526.00817871 413.63073730]
[530.05841064 422.20397949]
[531.95953369 431.47891235]
[531.60986328 440.92617798]
[529.03594971 450.00817871]
[524.39068604 458.20968628]
[534.62530518 469.17562866]
[550.18615723 469.88119507]
[560.40936279 481.14804077]
[559.64080811 495.97857666]
[569.87542725 506.94451904]
[584.94787598 511.75408936]
[587.97540283 526.33776855]
[598.21002197 537.30371094]
[608.44464111 548.26965332]
[624.51226807 544.37725830]
[640.26043701 549.09057617]
[651.41955566 561.03289795]
[655.01397705 576.88104248]
[650.15521240 592.28997803]
[660.55670166 603.09777832]
[670.95819092 613.90563965]
[681.35968018 624.71343994]
[696.94763184 623.46875000]
[709.65875244 632.57708740]
[713.49121094 647.73773193]
[706.63543701 661.79235840]
[692.32855225 668.10479736]
[677.32580566 663.69445801]
[668.71099854 650.64379883]
[670.55187988 635.11492920]
[660.15039062 624.30712891]
[649.74890137 613.49926758]
[639.34741211 602.69146729]
[626.33294678 606.83996582]
[612.73559570 604.96630859]
[601.21752930 597.37982178]
[594.05871582 585.51385498]
[592.70550537 571.65539551]
[597.47869873 558.50433350]
[587.24407959 547.53833008]
[577.00946045 536.57238770]
[562.66900635 532.54718018]
[558.90948486 517.17913818]
[548.67486572 506.21322632]
[533.82659912 505.95800781]
[523.29101562 494.98275757]
[523.65936279 479.41027832]
[513.42474365 468.44433594]
[493.60021973 474.59387207]
[473.31973267 469.83853149]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 147]
[3 146]
[4 145]
[5 144]
[7 141]
[8 140]
[9 139]
[10 138]
[11 137]
[12 136]
[13 135]
[14 134]
[19 130]
[20 129]
[21 128]
[22 127]
[23 125]
[24 124]
[25 123]
[29 120]
[30 119]
[31 118]
[32 117]
[33 116]
[37 59]
[38 58]
[39 57]
[40 56]
[41 55]
[42 54]
[43 53]
[44 52]
[61 73]
[62 72]
[63 71]
[64 70]
[76 98]
[77 97]
[78 96]
[79 95]
[80 94]
[81 93]
[82 92]
[83 91]
[159 202]
[160 201]
[163 198]
[164 197]
[166 195]
[167 194]
[168 193]
[173 187]
[174 186]
[175 185]
[176 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
