%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:17:08 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TAB1)
} def

/sequence { (\
ACUCGCUGCUCUGCGGGGAGGCGGGCGCUCCCGCAGGGGUUCCUCCAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 40 0.018936128 ubox
2 16 0.016898119 ubox
2 17 0.232454514 ubox
2 18 0.012611156 ubox
2 20 0.907191445 ubox
2 21 0.004632553 ubox
2 24 0.003652483 ubox
2 25 0.038295317 ubox
2 39 0.021749108 ubox
2 49 0.017960574 ubox
3 16 0.234973200 ubox
3 17 0.010274216 ubox
3 18 0.005674589 ubox
3 19 0.912084804 ubox
3 24 0.038991566 ubox
3 38 0.017099071 ubox
3 39 0.005368152 ubox
3 48 0.017350861 ubox
4 15 0.237341788 ubox
4 16 0.007347517 ubox
4 17 0.008289521 ubox
4 18 0.912466465 ubox
4 23 0.047527709 ubox
4 37 0.015897223 ubox
4 38 0.006487256 ubox
5 14 0.237663673 ubox
5 22 0.049137890 ubox
5 28 0.003264747 ubox
5 40 0.095002000 ubox
6 13 0.237586423 ubox
6 16 0.912648730 ubox
6 17 0.008172915 ubox
6 20 0.006008183 ubox
6 21 0.049079859 ubox
6 27 0.003196384 ubox
6 36 0.010684484 ubox
6 38 0.005292832 ubox
6 39 0.098645271 ubox
6 49 0.009407742 ubox
7 15 0.912078824 ubox
7 16 0.006628691 ubox
7 19 0.006474159 ubox
7 20 0.044584127 ubox
7 35 0.010556550 ubox
7 37 0.004468454 ubox
7 38 0.050813112 ubox
7 47 0.019350136 ubox
7 48 0.008437369 ubox
8 12 0.004192511 ubox
8 14 0.912652322 ubox
8 26 0.003671159 ubox
8 34 0.010356915 ubox
8 40 0.068732148 ubox
8 46 0.021063332 ubox
9 13 0.906036845 ubox
9 17 0.005871227 ubox
9 18 0.048547782 ubox
9 20 0.008077410 ubox
9 25 0.003655065 ubox
9 33 0.010294832 ubox
9 36 0.013734591 ubox
9 37 0.034121931 ubox
9 38 0.306177555 ubox
9 39 0.063413409 ubox
10 16 0.005641449 ubox
10 17 0.048721232 ubox
10 19 0.008592046 ubox
10 35 0.009355032 ubox
10 36 0.003919592 ubox
10 37 0.314268212 ubox
10 38 0.052896306 ubox
11 15 0.005517705 ubox
11 16 0.048756733 ubox
11 18 0.008641073 ubox
11 24 0.003477279 ubox
11 36 0.324724745 ubox
11 37 0.040164702 ubox
12 17 0.008477292 ubox
12 23 0.003494718 ubox
12 35 0.327125230 ubox
12 36 0.020198921 ubox
12 47 0.003942875 ubox
13 22 0.003933955 ubox
13 34 0.328049435 ubox
13 46 0.004262807 ubox
14 21 0.003933697 ubox
14 33 0.327953555 ubox
15 32 0.312056167 ubox
15 45 0.007461711 ubox
15 46 0.004555571 ubox
16 31 0.295317568 ubox
16 32 0.102513505 ubox
16 44 0.009468419 ubox
16 45 0.004747133 ubox
17 30 0.276969361 ubox
17 31 0.143827911 ubox
17 43 0.011269986 ubox
17 46 0.039596464 ubox
18 28 0.010370391 ubox
18 29 0.134880073 ubox
18 30 0.175649387 ubox
18 42 0.011621486 ubox
18 45 0.044341419 ubox
19 29 0.197912920 ubox
19 41 0.011585643 ubox
19 44 0.044103680 ubox
20 28 0.182607110 ubox
20 29 0.207721316 ubox
20 40 0.011312202 ubox
20 43 0.043555971 ubox
20 45 0.005962201 ubox
20 46 0.179261168 ubox
21 28 0.271136012 ubox
21 34 0.913726288 ubox
21 42 0.039035354 ubox
21 43 0.003427293 ubox
21 44 0.006038054 ubox
21 45 0.184037049 ubox
22 27 0.285526010 ubox
22 33 0.914978025 ubox
23 31 0.007835223 ubox
23 32 0.914982520 ubox
23 41 0.009194779 ubox
23 42 0.008287927 ubox
23 43 0.118666868 ubox
23 44 0.176164575 ubox
23 45 0.042017184 ubox
23 46 0.043606408 ubox
24 30 0.011002442 ubox
24 31 0.914901023 ubox
24 32 0.003230651 ubox
24 40 0.004632528 ubox
24 41 0.018234273 ubox
24 42 0.118442920 ubox
24 43 0.186351587 ubox
24 44 0.031861864 ubox
24 45 0.043196424 ubox
24 46 0.008720657 ubox
25 29 0.008712255 ubox
25 30 0.900103211 ubox
25 31 0.004447997 ubox
25 34 0.009393455 ubox
25 40 0.022892646 ubox
25 41 0.110524742 ubox
25 42 0.186548661 ubox
25 43 0.039034336 ubox
25 44 0.034292476 ubox
25 45 0.008720846 ubox
26 33 0.009688426 ubox
26 39 0.023767582 ubox
27 32 0.009235802 ubox
27 34 0.012523933 ubox
27 40 0.224669448 ubox
28 33 0.012515779 ubox
28 37 0.018866566 ubox
28 38 0.014118499 ubox
28 39 0.227518007 ubox
29 36 0.017684904 ubox
29 37 0.012309146 ubox
29 38 0.219296896 ubox
29 39 0.017537222 ubox
30 36 0.012647448 ubox
30 37 0.219475055 ubox
30 38 0.063448144 ubox
30 39 0.041342465 ubox
31 36 0.218707327 ubox
31 37 0.063668507 ubox
31 38 0.041651438 ubox
32 36 0.063423736 ubox
32 37 0.041667490 ubox
35 44 0.221578928 ubox
36 42 0.007981867 ubox
36 43 0.236859937 ubox
36 44 0.084804001 ubox
36 45 0.108954900 ubox
36 46 0.836642993 ubox
37 41 0.005268856 ubox
37 42 0.236158846 ubox
37 43 0.092385525 ubox
37 44 0.108491583 ubox
37 45 0.837427469 ubox
37 46 0.207948130 ubox
38 42 0.091133904 ubox
38 43 0.136703613 ubox
38 44 0.827819804 ubox
38 45 0.208203926 ubox
38 46 0.126985890 ubox
39 43 0.810518747 ubox
39 44 0.151971442 ubox
39 45 0.129266481 ubox
40 48 0.009211998 ubox
40 49 0.006532769 ubox
41 47 0.009996865 ubox
41 48 0.009174634 ubox
43 49 0.021179803 ubox
44 48 0.019559182 ubox
2 20 0.9500000 lbox
3 19 0.9500000 lbox
4 18 0.9500000 lbox
6 16 0.9500000 lbox
7 15 0.9500000 lbox
8 14 0.9500000 lbox
9 13 0.9500000 lbox
21 34 0.9500000 lbox
22 33 0.9500000 lbox
23 32 0.9500000 lbox
24 31 0.9500000 lbox
25 30 0.9500000 lbox
36 46 0.9500000 lbox
37 45 0.9500000 lbox
38 44 0.9500000 lbox
39 43 0.9500000 lbox
showpage
end
%%EOF
