%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:25:08 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KRT72)
} def

/sequence { (\
AUUUAAGGGGCGAGCUGGGCCGAGAACGCAGCGGCUGUUUGCGCCCCUUCUGCCUCCCGCGCGGCCAGCACCGGUACUUGCGAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 83 0.005941142 ubox
2 84 0.009592446 ubox
3 82 0.004793047 ubox
3 83 0.011772093 ubox
3 84 0.008944431 ubox
4 52 0.045221133 ubox
4 80 0.003310978 ubox
4 82 0.009584245 ubox
4 83 0.010380350 ubox
5 49 0.843123769 ubox
5 51 0.039048394 ubox
5 79 0.003588933 ubox
6 48 0.970026590 ubox
6 49 0.022802263 ubox
6 51 0.006075640 ubox
6 78 0.003465438 ubox
7 45 0.016459516 ubox
7 46 0.027664041 ubox
7 47 0.985119160 ubox
7 48 0.006141955 ubox
7 50 0.003174125 ubox
7 55 0.003862026 ubox
7 56 0.144384393 ubox
7 57 0.078381095 ubox
7 58 0.019398561 ubox
7 72 0.010463712 ubox
7 77 0.003324115 ubox
8 44 0.016529392 ubox
8 45 0.028621809 ubox
8 46 0.985177213 ubox
8 47 0.005520915 ubox
8 54 0.004044339 ubox
8 55 0.146185876 ubox
8 56 0.078349051 ubox
8 57 0.018939614 ubox
8 71 0.010422997 ubox
8 72 0.012334608 ubox
9 44 0.029472421 ubox
9 45 0.985153314 ubox
9 46 0.004660138 ubox
9 53 0.003896906 ubox
9 54 0.165154682 ubox
9 55 0.021031567 ubox
9 56 0.015494348 ubox
9 71 0.012345325 ubox
9 86 0.004780546 ubox
10 42 0.041616885 ubox
10 44 0.984860255 ubox
10 45 0.003403505 ubox
10 53 0.165654513 ubox
10 54 0.022163739 ubox
10 55 0.004734694 ubox
10 69 0.016110477 ubox
10 85 0.004841061 ubox
11 41 0.047269581 ubox
11 43 0.984525306 ubox
11 52 0.165693891 ubox
11 68 0.016223912 ubox
11 84 0.004845683 ubox
12 40 0.088866574 ubox
12 42 0.973545572 ubox
12 49 0.022320771 ubox
12 50 0.078318003 ubox
12 51 0.089581937 ubox
13 36 0.130415277 ubox
13 38 0.005427626 ubox
13 39 0.206011483 ubox
13 40 0.142371341 ubox
13 48 0.031431476 ubox
13 49 0.078319724 ubox
13 51 0.110530472 ubox
14 32 0.008111344 ubox
14 35 0.131753776 ubox
14 38 0.253701259 ubox
14 39 0.115261543 ubox
14 42 0.104773975 ubox
14 47 0.033672772 ubox
14 48 0.068532309 ubox
14 50 0.126857964 ubox
14 65 0.016225144 ubox
14 81 0.004766010 ubox
15 31 0.008133289 ubox
15 34 0.131766782 ubox
15 37 0.257787718 ubox
15 41 0.114936930 ubox
15 64 0.016234219 ubox
15 80 0.004763621 ubox
16 30 0.008127832 ubox
16 33 0.131595059 ubox
16 37 0.031207943 ubox
16 41 0.004642410 ubox
16 63 0.016221753 ubox
17 29 0.008053615 ubox
17 32 0.131161057 ubox
17 36 0.044889272 ubox
17 39 0.025073004 ubox
17 40 0.006177696 ubox
17 46 0.105813492 ubox
17 47 0.129311315 ubox
17 62 0.016219638 ubox
17 78 0.003963001 ubox
18 35 0.033135236 ubox
18 36 0.964116089 ubox
18 38 0.009997399 ubox
18 45 0.106723322 ubox
18 46 0.128782545 ubox
18 77 0.004158573 ubox
19 29 0.112845161 ubox
19 32 0.007758785 ubox
19 35 0.976259993 ubox
19 44 0.107412134 ubox
19 45 0.128050783 ubox
19 60 0.016224602 ubox
19 75 0.004476048 ubox
20 28 0.104133082 ubox
20 31 0.007963485 ubox
20 34 0.976857194 ubox
20 43 0.092326332 ubox
20 59 0.015386978 ubox
20 74 0.004688882 ubox
21 28 0.078628003 ubox
21 33 0.976816465 ubox
21 41 0.043493309 ubox
21 43 0.138773693 ubox
21 59 0.005224848 ubox
21 73 0.004688202 ubox
22 27 0.088233847 ubox
22 32 0.966997869 ubox
22 40 0.039710431 ubox
22 42 0.148806778 ubox
22 56 0.014262849 ubox
22 58 0.007263968 ubox
22 72 0.004640167 ubox
23 39 0.037385947 ubox
23 40 0.021643205 ubox
23 55 0.014297951 ubox
24 38 0.022793216 ubox
24 39 0.020582109 ubox
24 40 0.139818608 ubox
24 54 0.014273296 ubox
24 56 0.007550856 ubox
25 38 0.018176397 ubox
25 39 0.160512777 ubox
25 40 0.005727124 ubox
25 55 0.007421586 ubox
26 38 0.161536808 ubox
26 39 0.005548430 ubox
27 33 0.009735101 ubox
27 37 0.161817305 ubox
27 43 0.004245546 ubox
28 32 0.009653662 ubox
28 35 0.157690454 ubox
28 36 0.042199214 ubox
28 38 0.027506201 ubox
28 42 0.006189145 ubox
28 53 0.016173279 ubox
29 34 0.160963675 ubox
29 37 0.029153212 ubox
29 41 0.006199407 ubox
29 52 0.016187616 ubox
30 36 0.029429964 ubox
30 39 0.003312378 ubox
30 40 0.005247904 ubox
30 51 0.016066937 ubox
31 35 0.028946796 ubox
31 38 0.004762636 ubox
31 39 0.003930453 ubox
31 47 0.003589367 ubox
31 50 0.015801564 ubox
32 37 0.005759561 ubox
33 45 0.014579364 ubox
33 46 0.005190934 ubox
33 48 0.004065780 ubox
34 42 0.007168325 ubox
34 44 0.014777669 ubox
34 45 0.004684876 ubox
34 47 0.004092207 ubox
34 69 0.003849321 ubox
35 41 0.007516731 ubox
35 43 0.014894207 ubox
35 68 0.003861971 ubox
36 43 0.004027779 ubox
36 67 0.003864263 ubox
37 42 0.006679004 ubox
37 44 0.004464593 ubox
37 66 0.003852345 ubox
38 43 0.004221655 ubox
39 64 0.003679471 ubox
40 63 0.003876811 ubox
41 62 0.004065111 ubox
42 61 0.004075859 ubox
43 60 0.004081009 ubox
44 59 0.004074035 ubox
48 84 0.017079410 ubox
49 63 0.008136428 ubox
49 64 0.004173432 ubox
49 67 0.003565605 ubox
49 83 0.043443364 ubox
50 63 0.043710548 ubox
50 64 0.048827393 ubox
50 68 0.077034168 ubox
50 73 0.003476176 ubox
50 82 0.049266648 ubox
50 84 0.057804108 ubox
51 59 0.024083440 ubox
51 61 0.451654366 ubox
51 63 0.074492371 ubox
51 67 0.080692871 ubox
51 70 0.036883233 ubox
51 76 0.031064372 ubox
51 80 0.003845733 ubox
51 82 0.104954668 ubox
51 83 0.052314929 ubox
52 58 0.032693205 ubox
52 60 0.615214514 ubox
52 62 0.333594334 ubox
52 65 0.105168494 ubox
52 66 0.057998123 ubox
52 69 0.041594713 ubox
52 75 0.034429776 ubox
52 79 0.003428368 ubox
52 81 0.144184470 ubox
52 85 0.268739616 ubox
53 59 0.614863378 ubox
53 61 0.333567923 ubox
53 64 0.119923831 ubox
53 68 0.041219302 ubox
53 74 0.034579217 ubox
53 80 0.144044527 ubox
53 84 0.228603387 ubox
54 63 0.120001815 ubox
54 64 0.005463295 ubox
54 68 0.005807080 ubox
54 73 0.034448082 ubox
54 84 0.230630228 ubox
55 63 0.004889434 ubox
55 64 0.003726853 ubox
55 67 0.007544994 ubox
55 83 0.267469663 ubox
56 63 0.006190991 ubox
56 64 0.018195637 ubox
56 74 0.028392685 ubox
56 82 0.232139632 ubox
57 63 0.018521548 ubox
57 64 0.039099193 ubox
57 73 0.027778780 ubox
57 74 0.120321805 ubox
58 63 0.039497637 ubox
58 73 0.120734327 ubox
58 80 0.103570829 ubox
58 82 0.498902039 ubox
59 65 0.005929964 ubox
59 69 0.036474759 ubox
59 72 0.119974175 ubox
59 75 0.104012305 ubox
59 79 0.087187554 ubox
59 81 0.538990237 ubox
59 85 0.066934261 ubox
60 64 0.005901894 ubox
60 68 0.036620467 ubox
60 73 0.003434476 ubox
60 74 0.107168471 ubox
60 80 0.539098517 ubox
60 82 0.195881130 ubox
60 84 0.064808954 ubox
61 69 0.124907676 ubox
61 75 0.034514172 ubox
61 79 0.454156999 ubox
61 81 0.211708250 ubox
61 85 0.032830855 ubox
62 68 0.125052203 ubox
62 73 0.180399903 ubox
62 74 0.026272361 ubox
62 80 0.211690266 ubox
62 82 0.047814907 ubox
62 84 0.032920782 ubox
63 72 0.183007501 ubox
63 78 0.056700180 ubox
63 79 0.204160809 ubox
63 81 0.045479532 ubox
63 86 0.765630722 ubox
64 71 0.182334058 ubox
64 75 0.561986053 ubox
64 77 0.054514575 ubox
64 78 0.060906353 ubox
64 81 0.039935673 ubox
64 85 0.774358721 ubox
65 74 0.571812682 ubox
65 80 0.042521065 ubox
65 84 0.774263269 ubox
66 73 0.571357345 ubox
66 80 0.008876559 ubox
67 78 0.042388000 ubox
67 79 0.008654240 ubox
68 75 0.032487143 ubox
68 77 0.043195826 ubox
68 78 0.005587399 ubox
68 81 0.778428208 ubox
68 85 0.039234777 ubox
69 74 0.033475831 ubox
69 80 0.778493290 ubox
69 84 0.039440878 ubox
70 79 0.758277003 ubox
72 80 0.007954099 ubox
72 82 0.053839839 ubox
73 79 0.012290555 ubox
73 81 0.053918382 ubox
73 86 0.091096417 ubox
74 78 0.017576617 ubox
74 81 0.023491949 ubox
74 85 0.092020250 ubox
75 80 0.023231283 ubox
75 84 0.091455718 ubox
77 84 0.015139393 ubox
78 83 0.014427996 ubox
5 49 0.9500000 lbox
6 48 0.9500000 lbox
7 47 0.9500000 lbox
8 46 0.9500000 lbox
9 45 0.9500000 lbox
10 44 0.9500000 lbox
11 43 0.9500000 lbox
12 42 0.9500000 lbox
18 36 0.9500000 lbox
19 35 0.9500000 lbox
20 34 0.9500000 lbox
21 33 0.9500000 lbox
22 32 0.9500000 lbox
51 61 0.9500000 lbox
52 60 0.9500000 lbox
53 59 0.9500000 lbox
63 86 0.9500000 lbox
64 85 0.9500000 lbox
65 84 0.9500000 lbox
68 81 0.9500000 lbox
69 80 0.9500000 lbox
70 79 0.9500000 lbox
showpage
end
%%EOF
