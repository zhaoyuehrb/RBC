%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:16:14 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (HIST1H1D)
} def

/sequence { (\
CAUGCUGUUCUGACAGUUUGAGAUUACUUAUUGUCUUUUCUGGGAAGACAAAAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.003259870 ubox
1 12 0.004688943 ubox
1 20 0.915150313 ubox
2 11 0.004607219 ubox
2 17 0.003976475 ubox
2 19 0.916154668 ubox
2 24 0.011052033 ubox
2 31 0.003647591 ubox
3 20 0.009814762 ubox
3 23 0.011846628 ubox
3 30 0.004474324 ubox
3 50 0.008358020 ubox
4 17 0.964712188 ubox
4 19 0.003456517 ubox
4 29 0.003379558 ubox
4 49 0.009175082 ubox
5 16 0.997401945 ubox
5 22 0.003819079 ubox
5 47 0.006869375 ubox
6 15 0.997286602 ubox
6 21 0.003765437 ubox
6 26 0.010478682 ubox
6 46 0.006303902 ubox
6 50 0.052628791 ubox
7 14 0.996982313 ubox
7 25 0.011134630 ubox
7 27 0.008321999 ubox
7 49 0.056860982 ubox
8 13 0.922585844 ubox
8 22 0.006413043 ubox
8 26 0.007971735 ubox
8 45 0.004735639 ubox
8 46 0.009126809 ubox
8 48 0.044549082 ubox
9 21 0.008054546 ubox
9 23 0.018876118 ubox
9 44 0.005119313 ubox
9 45 0.012548698 ubox
9 47 0.025784657 ubox
9 48 0.039134073 ubox
10 16 0.003225132 ubox
10 20 0.008227694 ubox
10 22 0.019656988 ubox
10 43 0.005271632 ubox
10 44 0.013330568 ubox
10 47 0.053023365 ubox
11 21 0.019426494 ubox
11 42 0.004493633 ubox
11 43 0.012419175 ubox
11 46 0.052923301 ubox
12 18 0.003207163 ubox
12 19 0.004858521 ubox
12 35 0.010179773 ubox
13 18 0.004602500 ubox
13 34 0.010209961 ubox
14 20 0.004781118 ubox
14 33 0.010221312 ubox
14 42 0.060671898 ubox
15 19 0.003902310 ubox
15 28 0.010825511 ubox
15 32 0.010181615 ubox
15 41 0.060708193 ubox
16 27 0.012084528 ubox
16 31 0.009644664 ubox
16 40 0.060459766 ubox
16 55 0.003480460 ubox
17 23 0.003725755 ubox
17 26 0.012205371 ubox
17 30 0.008144142 ubox
17 54 0.004327135 ubox
18 22 0.004590212 ubox
18 52 0.004226754 ubox
18 53 0.006834880 ubox
18 54 0.003551872 ubox
19 26 0.011559109 ubox
19 30 0.264545928 ubox
19 52 0.006433844 ubox
19 53 0.003401629 ubox
20 25 0.011859368 ubox
20 29 0.292197076 ubox
20 37 0.058706124 ubox
20 40 0.007361489 ubox
21 28 0.326303353 ubox
21 29 0.037283266 ubox
21 31 0.008246864 ubox
21 32 0.005594330 ubox
21 36 0.064067220 ubox
21 39 0.007632454 ubox
22 27 0.328314726 ubox
22 28 0.035832239 ubox
22 29 0.054268175 ubox
22 31 0.007167169 ubox
22 32 0.024062818 ubox
22 35 0.064758398 ubox
22 38 0.007786666 ubox
22 40 0.003221766 ubox
23 28 0.050824175 ubox
23 31 0.035315286 ubox
23 34 0.064695880 ubox
23 37 0.007800007 ubox
23 39 0.003181811 ubox
24 30 0.039485370 ubox
24 33 0.064392314 ubox
24 51 0.004225904 ubox
24 52 0.012744877 ubox
24 53 0.026317445 ubox
24 54 0.015634900 ubox
25 33 0.003493561 ubox
25 51 0.010314348 ubox
25 52 0.029783535 ubox
25 53 0.016467265 ubox
26 32 0.005206393 ubox
26 34 0.008806314 ubox
27 33 0.009307110 ubox
28 51 0.015756781 ubox
28 52 0.059780929 ubox
28 53 0.176799990 ubox
28 54 0.320400761 ubox
29 50 0.008747339 ubox
29 51 0.045527077 ubox
29 52 0.190500980 ubox
29 53 0.357157750 ubox
31 51 0.868957672 ubox
31 52 0.051231427 ubox
31 53 0.020459454 ubox
31 54 0.012086987 ubox
32 50 0.979520118 ubox
32 51 0.041362115 ubox
32 52 0.011179087 ubox
32 53 0.007124924 ubox
33 49 0.997662345 ubox
34 45 0.006032684 ubox
34 48 0.997604720 ubox
35 42 0.003233600 ubox
35 44 0.006856171 ubox
35 47 0.997700640 ubox
36 43 0.007489813 ubox
36 44 0.003290661 ubox
36 45 0.030775532 ubox
36 46 0.995470937 ubox
36 47 0.004563161 ubox
36 48 0.005090385 ubox
36 51 0.004328918 ubox
36 52 0.004214427 ubox
37 42 0.009872531 ubox
37 43 0.008562991 ubox
37 44 0.042755633 ubox
37 45 0.991368143 ubox
37 46 0.036641144 ubox
37 47 0.007242897 ubox
37 50 0.005462962 ubox
37 51 0.005511518 ubox
37 52 0.003277289 ubox
37 53 0.004021187 ubox
37 54 0.005084293 ubox
38 42 0.010720039 ubox
38 43 0.047379547 ubox
38 44 0.973579826 ubox
38 45 0.050932192 ubox
38 46 0.023490549 ubox
38 50 0.005671486 ubox
38 51 0.003179179 ubox
38 52 0.004334416 ubox
38 53 0.006224912 ubox
39 43 0.716698580 ubox
39 44 0.057532541 ubox
39 45 0.047542599 ubox
39 48 0.018010961 ubox
39 51 0.003948279 ubox
39 52 0.006011197 ubox
40 44 0.051548009 ubox
40 47 0.019301647 ubox
41 46 0.019188418 ubox
41 50 0.011404863 ubox
42 49 0.012042629 ubox
1 20 0.9500000 lbox
2 19 0.9500000 lbox
4 17 0.9500000 lbox
5 16 0.9500000 lbox
6 15 0.9500000 lbox
7 14 0.9500000 lbox
8 13 0.9500000 lbox
31 51 0.9500000 lbox
32 50 0.9500000 lbox
33 49 0.9500000 lbox
34 48 0.9500000 lbox
35 47 0.9500000 lbox
36 46 0.9500000 lbox
37 45 0.9500000 lbox
38 44 0.9500000 lbox
39 43 0.9500000 lbox
showpage
end
%%EOF
