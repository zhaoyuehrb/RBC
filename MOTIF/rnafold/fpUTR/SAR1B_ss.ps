%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:10:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGGCCCGGAAGGGGCUGAUGCGAACUGGGGCCACGGCAGCCAUCGCGCUUUGCAGUUCGGUCUCCUGGUGUACGGCCAACGCCAAGUAGGGGAUUGCGUUCCCUCCAGUCGCAGAGUUUCCCUCUUGUCGCCCAGGCUGGAGUGAAGUGGCACGAUCUCGGCUUACUGCAAGCUCCGCCUCCCGGGUUCACGCCAUUCUCCUGCCUCAGCCUCCCGAGUAGCUGGGACUACAGACCCUAUCAGAUUUGGAU\
) } def
/len { sequence length } bind def

/coor [
[163.69018555 362.88513184]
[156.31047058 364.22299194]
[154.09231567 379.05807495]
[151.87414551 393.89315796]
[155.51176453 410.45227051]
[140.60678101 418.53173828]
[128.71694946 406.44589233]
[137.03906250 391.67498779]
[139.25723267 376.83990479]
[141.47538757 362.00482178]
[152.28991699 348.26416016]
[165.79034424 341.78985596]
[178.67170715 342.59701538]
[173.93070984 328.36596680]
[169.18971252 314.13491821]
[164.44871521 299.90383911]
[159.70771790 285.67279053]
[154.96673584 271.44174194]
[150.22573853 257.21069336]
[145.48474121 242.97962952]
[134.12141418 233.35029602]
[137.10031128 217.81205750]
[132.35931396 203.58099365]
[127.26777649 189.47155762]
[121.82880402 175.49238586]
[116.38983154 161.51319885]
[111.05035400 156.43324280]
[110.97121429 147.32733154]
[105.70555115 133.28195190]
[100.43989563 119.23655701]
[87.28279877 112.03302765]
[72.61316681 115.16380310]
[57.94352722 118.29457092]
[43.27388763 121.42534637]
[28.64409447 124.73731232]
[14.05638409 128.22998047]
[-0.53132784 131.72264099]
[-12.15060616 142.46055603]
[-26.32964134 137.89938354]
[-40.91735458 141.39204407]
[-55.50506592 144.88470459]
[-64.39334106 159.96705627]
[-81.11349487 163.86439514]
[-95.18872070 154.63708496]
[-109.73211670 158.30990601]
[-124.27552032 161.98271179]
[-138.81890869 165.65553284]
[-150.30450439 176.53633118]
[-164.53886414 172.15089417]
[-179.08226013 175.82369995]
[-193.62565613 179.49652100]
[-205.00427246 191.30580139]
[-220.85337830 187.09419250]
[-224.86878967 171.19424438]
[-212.91978455 159.96244812]
[-197.29847717 164.95312500]
[-182.75508118 161.28030396]
[-168.21166992 157.60749817]
[-157.76634216 146.98939514]
[-142.49172974 151.11213684]
[-127.94833374 147.43931580]
[-113.40493774 143.76649475]
[-98.86153412 140.09368896]
[-93.88131714 128.22714233]
[-82.81498718 121.28480530]
[-69.57541656 121.98538971]
[-58.99772263 130.29699707]
[-44.41001129 126.80433655]
[-29.82230186 123.31167603]
[-19.24643326 112.82357788]
[-4.02398777 117.13491821]
[10.56372356 113.64226532]
[25.15143585 110.14960480]
[28.35675621 106.64286804]
[33.78924561 105.09578705]
[40.14311600 106.75570679]
[54.81275558 103.62493134]
[69.48239136 100.49416351]
[84.15203094 97.36338806]
[82.51291656 94.00056458]
[81.61163330 90.04656219]
[81.59384155 85.66268921]
[74.47181702 72.46130371]
[61.10992432 63.98955536]
[61.87653351 49.11469269]
[54.75450516 35.91330338]
[47.63247299 22.71191216]
[40.51044464 9.51052284]
[33.70083237 3.46459699]
[33.38311386 -3.89848065]
[26.42490768 -17.18694687]
[19.46669960 -30.47541428]
[12.50849152 -43.76388168]
[5.55028343 -57.05234528]
[-1.40792441 -70.34081268]
[-8.61145782 -83.49790955]
[-16.05783653 -96.51909637]
[-23.50421715 -109.54029083]
[-30.95059586 -122.56148529]
[-38.39697647 -135.58267212]
[-53.69004440 -134.96569824]
[-67.51313019 -141.53692627]
[-76.68978882 -153.78631592]
[-79.11128998 -168.89904785]
[-74.22119141 -183.40234375]
[-63.14319992 -193.96343994]
[-48.42296219 -198.15548706]
[-33.44307709 -195.01515198]
[-21.64581299 -185.26409912]
[-15.74209499 -171.14302063]
[-17.08855438 -155.89686584]
[-25.37578392 -143.02905273]
[-17.92940331 -130.00785828]
[-10.48302460 -116.98667145]
[-3.03664517 -103.96547699]
[4.40973425 -90.94429016]
[7.66901016 -89.66848755]
[10.48032188 -86.76572418]
[12.09240246 -82.45987701]
[11.88054180 -77.29901886]
[18.83875084 -64.01055145]
[25.79695702 -50.72208786]
[32.75516510 -37.43362045]
[39.71337509 -24.14515495]
[46.67158127 -10.85668850]
[53.71183395 2.38849306]
[60.83386230 15.58988285]
[67.95589447 28.79127312]
[75.07791901 41.99266434]
[87.93039703 49.52015686]
[87.67320251 65.33927155]
[94.79523468 78.54066467]
[109.58661652 81.03365326]
[120.64229584 70.89600372]
[131.69796753 60.75835037]
[142.56367493 50.41734314]
[153.23567200 39.87653732]
[163.90766907 29.33573151]
[174.57965088 18.79492569]
[178.47145081 10.56218815]
[185.44943237 8.19076633]
[196.25097656 -2.21724010]
[207.05252075 -12.62524700]
[217.85406494 -23.03325272]
[228.65560913 -33.44125748]
[228.30184937 -52.40430832]
[241.71119690 -65.36069489]
[260.01138306 -64.38948059]
[270.55218506 -75.06147766]
[281.09298706 -85.73346710]
[291.63378906 -96.40545654]
[302.10839844 -107.14243317]
[312.51641846 -117.94397736]
[316.20336914 -126.27046204]
[323.12057495 -128.81375122]
[333.66137695 -139.48574829]
[337.28198242 -155.48022461]
[353.02200317 -160.08283997]
[364.68942261 -148.55882263]
[360.28182983 -132.76309204]
[344.33337402 -128.94494629]
[333.79257202 -118.27294922]
[323.31796265 -107.53597260]
[312.90994263 -96.73442841]
[310.53854370 -89.75644684]
[302.30578613 -85.86465454]
[291.76498413 -75.19265747]
[281.22418213 -64.52066803]
[270.68338013 -53.84867859]
[273.22210693 -42.75864792]
[270.07144165 -31.70220757]
[261.89993286 -23.44604111]
[250.64703369 -20.11358643]
[239.06361389 -22.63971329]
[228.26206970 -12.23170662]
[217.46052551 -1.82370031]
[206.65898132 8.58430576]
[195.85743713 18.99231339]
[185.12045288 29.46691895]
[174.44847107 40.00772476]
[163.77647400 50.54853058]
[153.10447693 61.08933640]
[152.70855713 64.56694794]
[150.62516785 68.02946472]
[146.87777710 70.69333649]
[141.83561707 71.81402588]
[130.77995300 81.95168304]
[119.72426605 92.08933258]
[133.54502869 86.25952148]
[147.70721436 91.20242310]
[154.89888000 104.36600494]
[151.40693665 118.95388794]
[139.03428650 127.43431091]
[124.16896057 125.42881775]
[114.48528290 113.97090149]
[119.75093842 128.01628113]
[125.01660156 142.06167603]
[130.36901855 156.07421875]
[135.80798340 170.05340576]
[141.24696350 184.03259277]
[144.67582703 186.59439087]
[146.90304565 189.78686523]
[147.87756348 193.16011047]
[147.69796753 196.29324341]
[146.59037781 198.84001160]
[151.33137512 213.07106018]
[163.03379822 223.71829224]
[159.71580505 238.23863220]
[164.45678711 252.46969604]
[169.19778442 266.70074463]
[173.93878174 280.93179321]
[178.67977905 295.16287231]
[183.42077637 309.39392090]
[188.16175842 323.62496948]
[192.90275574 337.85601807]
[198.94160461 351.58673096]
[206.22636414 364.69903564]
[213.51112366 377.81134033]
[220.79588318 390.92361450]
[228.08064270 404.03591919]
[235.36540222 417.14819336]
[252.96202087 417.03622437]
[268.10577393 425.82177734]
[276.65536499 440.99761963]
[276.32601929 458.32363892]
[267.29931641 473.01147461]
[274.90615845 485.93957520]
[282.51303101 498.86767578]
[297.97033691 500.22827148]
[309.65371704 510.43994141]
[313.07064819 525.57611084]
[306.90725708 539.81665039]
[293.53350830 547.68572998]
[278.09185791 546.15753174]
[266.51995850 535.81970215]
[263.26742554 520.64733887]
[269.58493042 506.47454834]
[261.97808838 493.54644775]
[254.37121582 480.61834717]
[241.85247803 482.08169556]
[229.66268921 478.69830322]
[219.61524963 470.93493652]
[213.21859741 459.91265869]
[211.44985962 447.24499512]
[214.60566711 434.80169678]
[222.25311279 424.43298340]
[214.96835327 411.32067871]
[207.68359375 398.20837402]
[200.39883423 385.09609985]
[193.11407471 371.98379517]
[185.82929993 358.87149048]
[178.44960022 360.20938110]
[181.12512207 374.96884155]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 10]
[3 9]
[4 8]
[13 215]
[14 214]
[15 213]
[16 212]
[17 211]
[18 210]
[19 209]
[20 208]
[22 206]
[23 205]
[24 200]
[25 199]
[26 198]
[28 197]
[29 196]
[30 195]
[31 79]
[32 78]
[33 77]
[34 76]
[35 73]
[36 72]
[37 71]
[39 69]
[40 68]
[41 67]
[44 63]
[45 62]
[46 61]
[47 60]
[49 58]
[50 57]
[51 56]
[82 132]
[83 131]
[85 129]
[86 128]
[87 127]
[88 126]
[90 125]
[91 124]
[92 123]
[93 122]
[94 121]
[95 120]
[96 116]
[97 115]
[98 114]
[99 113]
[100 112]
[133 188]
[134 187]
[135 186]
[136 182]
[137 181]
[138 180]
[139 179]
[141 178]
[142 177]
[143 176]
[144 175]
[145 174]
[148 169]
[149 168]
[150 167]
[151 166]
[152 164]
[153 163]
[155 162]
[156 161]
[216 251]
[217 250]
[218 249]
[219 248]
[220 247]
[221 246]
[226 239]
[227 238]
[228 237]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
