%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:19:37 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MED4)
} def

/sequence { (\
UUCUCGCCACGCACCUGCGUCAGCUCGCUCUGCGCGUGCGCCGGUGGCGGGACUCUGGGGAAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 51 0.005475321 ubox
1 52 0.052453057 ubox
1 58 0.016677425 ubox
1 59 0.014618382 ubox
1 60 0.016369987 ubox
1 61 0.178771025 ubox
1 62 0.055468420 ubox
1 63 0.008504301 ubox
2 50 0.006661035 ubox
2 51 0.043991721 ubox
2 52 0.899575317 ubox
2 57 0.006638132 ubox
2 58 0.011505524 ubox
2 59 0.016230232 ubox
2 60 0.192960327 ubox
2 61 0.062149619 ubox
2 62 0.010166848 ubox
3 49 0.007135729 ubox
3 50 0.045827631 ubox
3 51 0.972772369 ubox
3 57 0.011366056 ubox
3 58 0.017059407 ubox
3 59 0.199552752 ubox
3 60 0.061135075 ubox
4 47 0.011050421 ubox
4 49 0.008586204 ubox
4 50 0.972652420 ubox
4 57 0.015763478 ubox
4 58 0.199903955 ubox
4 59 0.057800303 ubox
4 60 0.004168974 ubox
4 61 0.071311438 ubox
5 46 0.014759725 ubox
5 49 0.974471486 ubox
5 57 0.200095994 ubox
5 58 0.053291069 ubox
5 59 0.011990496 ubox
5 60 0.074840355 ubox
6 45 0.015850803 ubox
6 48 0.974669644 ubox
6 56 0.194207729 ubox
7 44 0.016264855 ubox
7 47 0.974673894 ubox
7 50 0.007789136 ubox
7 51 0.205632985 ubox
7 58 0.076427489 ubox
7 59 0.003939406 ubox
8 43 0.016660890 ubox
8 46 0.969774013 ubox
8 49 0.007608421 ubox
8 50 0.205628963 ubox
8 57 0.076484969 ubox
8 58 0.003918367 ubox
9 20 0.024928383 ubox
9 45 0.950463440 ubox
9 56 0.073187200 ubox
10 19 0.030210874 ubox
10 34 0.004127890 ubox
10 40 0.562266540 ubox
10 43 0.071000010 ubox
10 44 0.750050940 ubox
10 46 0.003586599 ubox
10 49 0.216316438 ubox
11 18 0.046852253 ubox
11 20 0.005666128 ubox
11 28 0.005739635 ubox
11 33 0.018706478 ubox
11 35 0.003312463 ubox
11 39 0.907185663 ubox
11 41 0.153154417 ubox
11 42 0.067553956 ubox
11 45 0.008336395 ubox
11 48 0.216785534 ubox
12 17 0.046908277 ubox
12 19 0.005917027 ubox
12 27 0.005739467 ubox
12 32 0.018730939 ubox
12 34 0.003308057 ubox
12 38 0.907990396 ubox
12 40 0.156404758 ubox
12 44 0.009079157 ubox
12 46 0.183242147 ubox
12 47 0.156095822 ubox
13 20 0.005023610 ubox
13 31 0.017531001 ubox
13 37 0.905095747 ubox
13 45 0.292571396 ubox
14 19 0.005350127 ubox
14 36 0.874265908 ubox
14 44 0.335850815 ubox
14 51 0.013786725 ubox
15 23 0.004733138 ubox
15 43 0.349409494 ubox
15 44 0.018063702 ubox
15 50 0.013809716 ubox
16 22 0.005724850 ubox
16 32 0.003946789 ubox
16 34 0.117393959 ubox
16 36 0.257036964 ubox
16 38 0.036589135 ubox
16 40 0.015338468 ubox
16 43 0.024985557 ubox
16 49 0.013758329 ubox
17 21 0.005781302 ubox
17 24 0.018071117 ubox
17 28 0.030532834 ubox
17 33 0.119297171 ubox
17 35 0.910160048 ubox
17 37 0.049751033 ubox
17 39 0.018024129 ubox
17 41 0.377613497 ubox
17 42 0.023194666 ubox
17 48 0.013754811 ubox
18 23 0.018098079 ubox
18 27 0.030675978 ubox
18 32 0.118891828 ubox
18 34 0.913842623 ubox
18 36 0.050559767 ubox
18 38 0.018002144 ubox
18 40 0.378247721 ubox
18 43 0.014932899 ubox
18 47 0.013514646 ubox
19 26 0.031045565 ubox
19 28 0.026630314 ubox
19 31 0.099324530 ubox
19 33 0.913396315 ubox
19 35 0.051118287 ubox
19 37 0.014498898 ubox
19 39 0.376496706 ubox
19 41 0.022686978 ubox
19 42 0.017740408 ubox
19 45 0.003332675 ubox
20 27 0.026146537 ubox
20 32 0.226182940 ubox
20 34 0.050256832 ubox
20 36 0.005009974 ubox
20 38 0.324397865 ubox
20 40 0.021975481 ubox
20 44 0.009938938 ubox
21 32 0.885835586 ubox
21 38 0.174010888 ubox
21 43 0.012805897 ubox
21 57 0.011472106 ubox
22 29 0.143664623 ubox
22 31 0.902472549 ubox
22 37 0.153396472 ubox
22 54 0.018496113 ubox
22 56 0.011524109 ubox
23 28 0.147893058 ubox
23 30 0.890572028 ubox
23 33 0.048953594 ubox
23 35 0.145805132 ubox
23 37 0.303788620 ubox
23 39 0.058733955 ubox
23 41 0.010489934 ubox
23 53 0.019815477 ubox
23 55 0.011443249 ubox
24 32 0.049234792 ubox
24 34 0.143355192 ubox
24 36 0.333794054 ubox
24 38 0.060661175 ubox
24 40 0.010482791 ubox
24 51 0.026002443 ubox
25 50 0.026091421 ubox
26 32 0.120844222 ubox
26 34 0.340000829 ubox
26 36 0.087441404 ubox
26 38 0.007795400 ubox
26 49 0.026158860 ubox
27 31 0.074709749 ubox
27 33 0.345405041 ubox
27 35 0.089076466 ubox
27 37 0.007892113 ubox
27 48 0.026164543 ubox
28 32 0.342943231 ubox
28 34 0.089021020 ubox
28 36 0.007894116 ubox
28 47 0.026162406 ubox
29 46 0.024636886 ubox
30 43 0.009888910 ubox
30 44 0.025678138 ubox
31 40 0.003357573 ubox
31 43 0.025788540 ubox
32 39 0.005726342 ubox
32 41 0.015531414 ubox
32 42 0.024525669 ubox
33 38 0.005725249 ubox
33 40 0.017604209 ubox
34 39 0.017184411 ubox
34 41 0.028666384 ubox
35 40 0.028687585 ubox
35 43 0.006304066 ubox
36 42 0.006382012 ubox
40 48 0.003522659 ubox
41 47 0.003570881 ubox
41 50 0.017802321 ubox
42 46 0.003556073 ubox
42 49 0.017876897 ubox
43 48 0.017814252 ubox
48 57 0.012162844 ubox
49 55 0.003755585 ubox
49 56 0.013565395 ubox
50 55 0.015535809 ubox
50 56 0.005040334 ubox
51 55 0.005798514 ubox
53 59 0.169672756 ubox
53 60 0.166267333 ubox
54 58 0.153349588 ubox
54 59 0.153789519 ubox
54 60 0.059847820 ubox
54 61 0.230227441 ubox
55 59 0.072031075 ubox
55 60 0.240818237 ubox
2 52 0.9500000 lbox
3 51 0.9500000 lbox
4 50 0.9500000 lbox
5 49 0.9500000 lbox
6 48 0.9500000 lbox
7 47 0.9500000 lbox
8 46 0.9500000 lbox
9 45 0.9500000 lbox
10 44 0.9500000 lbox
11 39 0.9500000 lbox
12 38 0.9500000 lbox
13 37 0.9500000 lbox
14 36 0.9500000 lbox
17 35 0.9500000 lbox
18 34 0.9500000 lbox
19 33 0.9500000 lbox
21 32 0.9500000 lbox
22 31 0.9500000 lbox
23 30 0.9500000 lbox
showpage
end
%%EOF
