%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:23:29 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ADRA2B)
} def

/sequence { (\
AGGGGCGACGCUCUUGUCUAGCCGAGCCGGGCAGCGCUGUCGUCCACGGUGCGCACUGGGCGGGCAGCGCUCCCUCUGCCCACCUCCCGCCCCGUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 45 0.040296558 ubox
2 92 0.003901595 ubox
2 93 0.882234941 ubox
2 96 0.008939168 ubox
3 44 0.032996695 ubox
3 45 0.466079304 ubox
3 81 0.008553950 ubox
3 91 0.003351023 ubox
3 92 0.883320283 ubox
3 93 0.005843470 ubox
4 23 0.004247311 ubox
4 43 0.023270703 ubox
4 44 0.467214740 ubox
4 45 0.013215610 ubox
4 80 0.008679166 ubox
4 91 0.883331754 ubox
4 92 0.004846386 ubox
5 22 0.004475646 ubox
5 43 0.467662201 ubox
5 44 0.013162821 ubox
5 79 0.008704251 ubox
5 90 0.883337051 ubox
5 91 0.003566834 ubox
6 21 0.004537041 ubox
6 42 0.468578037 ubox
6 78 0.008720017 ubox
6 89 0.883257357 ubox
7 13 0.006493575 ubox
7 18 0.208189773 ubox
7 23 0.006603988 ubox
7 28 0.015510583 ubox
7 41 0.468587005 ubox
7 76 0.004677389 ubox
7 77 0.006190651 ubox
7 86 0.030393176 ubox
7 88 0.849102913 ubox
8 12 0.006194887 ubox
8 14 0.003290921 ubox
8 17 0.222752115 ubox
8 40 0.468519838 ubox
8 75 0.004637064 ubox
8 85 0.033902815 ubox
9 16 0.224336757 ubox
9 24 0.036100660 ubox
9 29 0.039686554 ubox
9 36 0.014756591 ubox
9 39 0.467887594 ubox
9 62 0.003275799 ubox
9 78 0.005067289 ubox
10 15 0.152121400 ubox
10 17 0.094973831 ubox
10 22 0.315156730 ubox
10 23 0.036034258 ubox
10 27 0.777155714 ubox
10 28 0.059767286 ubox
10 32 0.016377096 ubox
10 35 0.023698010 ubox
10 37 0.451846902 ubox
10 38 0.117256518 ubox
10 54 0.009283325 ubox
10 61 0.009909253 ubox
10 79 0.005027330 ubox
11 16 0.099113426 ubox
11 21 0.317183975 ubox
11 26 0.780717783 ubox
11 31 0.016388690 ubox
11 34 0.023786761 ubox
11 36 0.462109014 ubox
11 53 0.009281312 ubox
11 60 0.009913342 ubox
11 78 0.005020549 ubox
12 20 0.303950985 ubox
12 25 0.780260375 ubox
12 30 0.016102374 ubox
12 33 0.019558171 ubox
12 59 0.009320454 ubox
13 21 0.048636186 ubox
13 24 0.778183335 ubox
13 26 0.064362748 ubox
13 29 0.015133177 ubox
13 30 0.003175254 ubox
13 31 0.012413192 ubox
13 34 0.328219094 ubox
13 58 0.009267514 ubox
14 20 0.063924850 ubox
14 21 0.073556974 ubox
14 25 0.068854748 ubox
14 30 0.012412104 ubox
14 33 0.232676391 ubox
14 34 0.324284041 ubox
15 20 0.077806132 ubox
15 24 0.073368812 ubox
15 29 0.012406530 ubox
15 33 0.404364023 ubox
15 36 0.012151547 ubox
15 55 0.007677824 ubox
15 82 0.008237727 ubox
16 22 0.420669493 ubox
16 23 0.139003163 ubox
16 27 0.009514778 ubox
16 28 0.013499284 ubox
16 32 0.467006525 ubox
16 35 0.024616541 ubox
16 37 0.009286729 ubox
16 54 0.007834632 ubox
16 61 0.006120496 ubox
16 79 0.003189928 ubox
16 81 0.008500404 ubox
16 83 0.008995478 ubox
17 21 0.394460747 ubox
17 25 0.019650366 ubox
17 26 0.007631192 ubox
17 31 0.466812022 ubox
17 34 0.013701710 ubox
17 36 0.009196438 ubox
17 53 0.007517268 ubox
17 60 0.006124079 ubox
17 82 0.008711876 ubox
18 24 0.021722254 ubox
18 26 0.014572734 ubox
18 29 0.003479877 ubox
18 30 0.466614963 ubox
18 31 0.008397311 ubox
18 34 0.023334583 ubox
18 59 0.006143196 ubox
19 25 0.014513434 ubox
19 29 0.457713799 ubox
19 30 0.007737409 ubox
19 33 0.024079222 ubox
19 58 0.006175109 ubox
20 57 0.006179044 ubox
20 85 0.013385129 ubox
21 27 0.465514204 ubox
21 32 0.065408714 ubox
21 56 0.005911893 ubox
21 61 0.010812220 ubox
21 79 0.060395478 ubox
21 84 0.014364717 ubox
22 26 0.462425304 ubox
22 30 0.022325875 ubox
22 31 0.065421026 ubox
22 60 0.010823996 ubox
22 78 0.060404240 ubox
23 29 0.023419542 ubox
23 30 0.065351154 ubox
23 53 0.004191582 ubox
23 59 0.009251618 ubox
23 78 0.006769285 ubox
24 28 0.022848729 ubox
24 52 0.004329272 ubox
24 61 0.005107609 ubox
24 76 0.059455560 ubox
24 77 0.004316916 ubox
24 86 0.384019254 ubox
24 88 0.003237354 ubox
25 57 0.007235469 ubox
25 75 0.059137868 ubox
25 77 0.023194569 ubox
25 85 0.384993839 ubox
26 50 0.004485132 ubox
26 56 0.007113109 ubox
26 61 0.023453394 ubox
26 74 0.030636232 ubox
26 76 0.024373160 ubox
26 79 0.066860549 ubox
26 84 0.384105426 ubox
27 49 0.004687456 ubox
27 59 0.028229887 ubox
27 60 0.021883642 ubox
27 78 0.067425144 ubox
28 48 0.004686729 ubox
28 58 0.148116310 ubox
28 59 0.020164422 ubox
28 78 0.023880890 ubox
29 47 0.004485328 ubox
29 57 0.155802431 ubox
29 73 0.012470709 ubox
29 74 0.431496592 ubox
29 75 0.069380350 ubox
29 76 0.030985700 ubox
29 77 0.012957772 ubox
29 81 0.744163973 ubox
29 84 0.004681031 ubox
29 87 0.008605182 ubox
29 88 0.003357584 ubox
30 45 0.004334134 ubox
30 56 0.156857953 ubox
30 57 0.017603270 ubox
30 72 0.012320746 ubox
30 73 0.433243980 ubox
30 74 0.081243376 ubox
30 75 0.012905572 ubox
30 76 0.011945998 ubox
30 80 0.745231170 ubox
30 81 0.003494103 ubox
30 83 0.003460444 ubox
30 86 0.008540787 ubox
30 87 0.003565027 ubox
31 44 0.004319514 ubox
31 54 0.156300447 ubox
31 56 0.017327918 ubox
31 71 0.006108283 ubox
31 72 0.433192626 ubox
31 73 0.081279337 ubox
31 74 0.013195369 ubox
31 75 0.010619039 ubox
31 79 0.745246926 ubox
32 53 0.155928949 ubox
32 78 0.745133146 ubox
33 71 0.659917258 ubox
33 75 0.013351815 ubox
33 77 0.555626303 ubox
34 43 0.003852279 ubox
34 52 0.170832807 ubox
34 54 0.026024365 ubox
34 70 0.826890529 ubox
34 74 0.009105797 ubox
34 76 0.257781851 ubox
35 42 0.004012426 ubox
35 51 0.170925362 ubox
35 53 0.026065260 ubox
35 69 0.866100868 ubox
36 41 0.003755717 ubox
36 50 0.170870582 ubox
36 52 0.026040213 ubox
36 68 0.866282016 ubox
37 49 0.170945150 ubox
37 51 0.025954102 ubox
37 67 0.866289929 ubox
38 48 0.170820082 ubox
38 66 0.866080325 ubox
39 47 0.170845618 ubox
39 50 0.007306530 ubox
39 65 0.866087000 ubox
40 46 0.163824584 ubox
40 49 0.024296700 ubox
40 63 0.284860497 ubox
40 64 0.817002986 ubox
41 48 0.025302882 ubox
41 62 0.404134543 ubox
41 63 0.765713239 ubox
42 47 0.024706981 ubox
42 61 0.494665945 ubox
43 60 0.456624608 ubox
44 59 0.455951965 ubox
44 60 0.735565884 ubox
45 58 0.449805614 ubox
45 59 0.735370935 ubox
46 57 0.364520247 ubox
46 95 0.436636601 ubox
47 53 0.177699410 ubox
47 58 0.736074267 ubox
47 94 0.466731015 ubox
48 52 0.166723169 ubox
48 57 0.772662844 ubox
48 84 0.003434901 ubox
48 92 0.034262190 ubox
48 93 0.467298948 ubox
49 56 0.809630020 ubox
49 83 0.003441038 ubox
49 91 0.041341143 ubox
49 92 0.466254122 ubox
50 55 0.757844511 ubox
50 82 0.003441401 ubox
51 81 0.003437652 ubox
51 90 0.466090558 ubox
52 89 0.466557158 ubox
53 61 0.005087974 ubox
53 79 0.003542769 ubox
53 88 0.463623561 ubox
53 90 0.043087631 ubox
54 60 0.005092160 ubox
54 78 0.003547606 ubox
54 89 0.043069094 ubox
55 77 0.003463550 ubox
57 82 0.019721375 ubox
58 81 0.020582146 ubox
58 84 0.103276323 ubox
58 85 0.444716590 ubox
58 86 0.062004502 ubox
58 87 0.028860659 ubox
58 88 0.012047990 ubox
59 80 0.020592590 ubox
59 83 0.102144509 ubox
59 84 0.485257207 ubox
59 85 0.014639358 ubox
59 86 0.026864070 ubox
59 87 0.013163520 ubox
60 79 0.020592924 ubox
60 83 0.486072565 ubox
60 84 0.015814198 ubox
60 85 0.022578174 ubox
60 86 0.013000630 ubox
61 78 0.020587184 ubox
62 72 0.005904427 ubox
62 73 0.004095787 ubox
62 74 0.006457277 ubox
62 75 0.003912442 ubox
62 77 0.017655535 ubox
62 81 0.498896006 ubox
63 71 0.006450244 ubox
63 72 0.004134877 ubox
63 73 0.006523203 ubox
63 74 0.005253545 ubox
63 76 0.017310542 ubox
63 80 0.499059881 ubox
64 70 0.008820433 ubox
64 72 0.006457709 ubox
64 73 0.005390643 ubox
64 74 0.004414473 ubox
64 75 0.012485398 ubox
64 79 0.499064569 ubox
65 69 0.008831380 ubox
65 78 0.499062031 ubox
66 75 0.009617527 ubox
66 77 0.498674528 ubox
67 74 0.013326118 ubox
67 76 0.497110331 ubox
78 88 0.004612278 ubox
2 93 0.9500000 lbox
3 92 0.9500000 lbox
4 91 0.9500000 lbox
5 90 0.9500000 lbox
6 89 0.9500000 lbox
7 88 0.9500000 lbox
10 27 0.9500000 lbox
11 26 0.9500000 lbox
12 25 0.9500000 lbox
13 24 0.9500000 lbox
29 74 0.9500000 lbox
30 73 0.9500000 lbox
31 72 0.9500000 lbox
33 71 0.9500000 lbox
34 70 0.9500000 lbox
35 69 0.9500000 lbox
36 68 0.9500000 lbox
37 67 0.9500000 lbox
38 66 0.9500000 lbox
39 65 0.9500000 lbox
40 64 0.9500000 lbox
41 63 0.9500000 lbox
44 60 0.9500000 lbox
45 59 0.9500000 lbox
47 58 0.9500000 lbox
48 57 0.9500000 lbox
49 56 0.9500000 lbox
50 55 0.9500000 lbox
showpage
end
%%EOF
