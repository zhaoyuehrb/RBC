%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:41:45 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (AMPD1)
} def

/sequence { (\
ACUUAGCAGAGAAGAAUCAAAUUUCCGGGGGCAAAGCAAAAUAAUAAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 9 0.023181196 ubox
2 11 0.082254322 ubox
2 14 0.030491832 ubox
2 28 0.013461306 ubox
2 29 0.027321538 ubox
2 30 0.061926990 ubox
2 31 0.047947959 ubox
2 36 0.926836081 ubox
3 8 0.021358032 ubox
3 9 0.003920055 ubox
3 10 0.082416883 ubox
3 11 0.004896026 ubox
3 12 0.011015461 ubox
3 13 0.030572520 ubox
3 14 0.003906407 ubox
3 15 0.003326283 ubox
3 27 0.012989639 ubox
3 28 0.027080041 ubox
3 29 0.061814428 ubox
3 30 0.048113524 ubox
3 31 0.005730964 ubox
3 34 0.070700545 ubox
3 35 0.930896486 ubox
3 36 0.015972475 ubox
3 39 0.013200546 ubox
3 40 0.019630385 ubox
3 41 0.004719303 ubox
3 44 0.011826675 ubox
3 47 0.010210007 ubox
4 8 0.003943488 ubox
4 9 0.078554448 ubox
4 10 0.005703636 ubox
4 11 0.011682681 ubox
4 12 0.029429979 ubox
4 13 0.005164130 ubox
4 14 0.003428694 ubox
4 27 0.023394759 ubox
4 28 0.059636472 ubox
4 29 0.046602525 ubox
4 30 0.008046703 ubox
4 33 0.080960558 ubox
4 34 0.872220359 ubox
4 35 0.018525911 ubox
4 38 0.014290458 ubox
4 39 0.020365202 ubox
4 40 0.004955702 ubox
4 43 0.013537354 ubox
4 46 0.011273629 ubox
5 23 0.005217787 ubox
5 24 0.005148085 ubox
5 42 0.013471305 ubox
5 45 0.011148634 ubox
6 22 0.005004896 ubox
6 23 0.005170601 ubox
6 32 0.976011350 ubox
6 37 0.058071166 ubox
7 31 0.976224429 ubox
7 36 0.058046979 ubox
8 23 0.006589434 ubox
8 24 0.027229189 ubox
9 18 0.083883838 ubox
9 22 0.005941066 ubox
9 23 0.029451041 ubox
9 24 0.008447515 ubox
9 25 0.125390159 ubox
10 17 0.082919846 ubox
10 22 0.029327268 ubox
10 23 0.008844438 ubox
10 24 0.124960811 ubox
11 18 0.045217698 ubox
11 22 0.006198219 ubox
11 23 0.121001181 ubox
11 24 0.086010182 ubox
11 25 0.297267178 ubox
12 17 0.041423471 ubox
12 22 0.112396286 ubox
12 23 0.096400020 ubox
12 24 0.293114143 ubox
13 22 0.103105728 ubox
13 23 0.279384359 ubox
13 24 0.089114798 ubox
14 22 0.218369562 ubox
14 23 0.104816997 ubox
14 24 0.213731383 ubox
14 25 0.887830802 ubox
15 22 0.103987048 ubox
15 23 0.225281208 ubox
15 24 0.888679186 ubox
16 22 0.223798882 ubox
16 23 0.862168817 ubox
16 42 0.005889489 ubox
17 21 0.200996211 ubox
17 28 0.049907573 ubox
17 29 0.010563835 ubox
17 30 0.011958975 ubox
17 31 0.004837451 ubox
17 41 0.005797225 ubox
18 27 0.052428298 ubox
18 28 0.012695276 ubox
18 29 0.013228543 ubox
18 30 0.007749869 ubox
21 42 0.010105528 ubox
21 45 0.012889938 ubox
22 28 0.005636036 ubox
22 29 0.005625044 ubox
22 30 0.006901593 ubox
22 31 0.004934555 ubox
22 34 0.023243154 ubox
22 35 0.040262123 ubox
22 36 0.006515531 ubox
22 40 0.004112131 ubox
22 41 0.010472476 ubox
22 44 0.013351855 ubox
22 47 0.005901612 ubox
22 48 0.003474371 ubox
23 27 0.004985243 ubox
23 28 0.006035934 ubox
23 29 0.008427089 ubox
23 30 0.009085314 ubox
23 31 0.009221348 ubox
23 33 0.025039459 ubox
23 34 0.045811507 ubox
23 35 0.008830999 ubox
23 39 0.004672277 ubox
23 40 0.010452891 ubox
23 43 0.013155937 ubox
23 44 0.004854912 ubox
23 46 0.006572332 ubox
23 47 0.004474541 ubox
24 28 0.006799271 ubox
24 29 0.008176018 ubox
24 30 0.017135867 ubox
24 31 0.012217336 ubox
24 33 0.046669669 ubox
24 34 0.007952908 ubox
24 38 0.004548102 ubox
24 39 0.009579655 ubox
24 43 0.005198095 ubox
24 46 0.004281790 ubox
25 29 0.019038797 ubox
25 30 0.021814412 ubox
25 31 0.063537517 ubox
26 30 0.064957147 ubox
31 37 0.100794442 ubox
32 36 0.100198727 ubox
2 36 0.9500000 lbox
3 35 0.9500000 lbox
4 34 0.9500000 lbox
6 32 0.9500000 lbox
7 31 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
showpage
end
%%EOF
