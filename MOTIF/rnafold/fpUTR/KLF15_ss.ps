%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:30:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGACCCGCGGGCCGGCGGGCGAUCGAGCCAGCGCAGGACCCGCGGCUCGGCCCCCGGCCGCCGCCGGACCGAGAGUCUAGCCGCCGCCCCCAGCCCAGCCCGCCCGGCCGCAGGACCGCCGGGGCCUGGCCGCCGGUCCGGCGUGCGCCAAGUUCAGCCGCCACCGGCACGGCCAGGCCAGC\
) } def
/len { sequence length } bind def

/coor [
[299.71865845 210.48693848]
[287.83410645 201.33502197]
[281.42034912 187.77539062]
[281.88430786 172.78257751]
[289.12423706 159.64547729]
[301.55191040 151.24591064]
[316.44281006 149.42668152]
[302.19296265 144.74247742]
[287.94311523 140.05825806]
[273.69326782 135.37405396]
[259.44342041 130.68984985]
[245.19357300 126.00563812]
[228.24728394 130.52435303]
[216.07162476 116.72539520]
[201.74346924 112.28649902]
[187.41529846 107.84759521]
[172.97760010 103.77909088]
[158.43992615 100.08367157]
[143.90226746 96.38825226]
[129.36459351 92.69283295]
[114.82691956 88.99741364]
[122.45532227 100.31894684]
[120.78580475 116.36002350]
[107.57309723 129.48921204]
[86.54924011 131.70513916]
[72.29938507 136.38934326]
[58.04953766 141.07356262]
[43.79969025 145.75776672]
[29.54984093 150.44197083]
[22.35298157 156.10847473]
[15.01500320 155.08200073]
[0.68684328 159.52090454]
[-13.64131641 163.95980835]
[-19.53060913 178.44601440]
[-33.37771988 185.71179199]
[-48.64446640 182.32646179]
[-58.12235641 169.88847351]
[-57.33622360 154.27066040]
[-46.65725327 142.84729004]
[-31.12772942 141.01211548]
[-18.08021736 149.63165283]
[-3.75205731 145.19274902]
[10.57610226 140.75384521]
[24.86563301 136.19212341]
[39.11548233 131.50791931]
[53.36532974 126.82370758]
[67.61518097 122.13950348]
[81.86502838 117.45529175]
[81.60753632 102.45750427]
[67.20528412 98.26522064]
[52.80303574 94.07292938]
[38.40079117 89.88064575]
[21.50298309 91.25923157]
[15.50049877 75.40342712]
[29.07499886 65.24620056]
[42.59307480 75.47840118]
[56.99532318 79.67068481]
[71.39756775 83.86296844]
[85.79981995 88.05525208]
[94.17347717 75.61009979]
[84.86433411 63.84830093]
[70.23284149 57.82915497]
[68.40114594 43.04760742]
[59.09200668 31.28581047]
[44.46051788 25.26666260]
[42.62882233 10.48511505]
[33.31967926 -1.27668190]
[24.01053810 -13.03847885]
[14.70139599 -24.80027580]
[-1.00368845 -28.07592583]
[-8.10573006 -42.46135330]
[-1.15664947 -56.92129135]
[14.51281261 -60.36331558]
[26.88238716 -50.14699554]
[26.46319389 -34.10941696]
[35.77233505 -22.34762192]
[45.08147812 -10.58582401]
[54.39062119 1.17597294]
[68.35625458 6.35383701]
[70.85380554 21.97666740]
[80.16294861 33.73846436]
[94.12857819 38.91632843]
[96.62612915 54.53915787]
[105.93527222 66.30095673]
[118.52233887 74.45973969]
[133.06001282 78.15515900]
[147.59768677 81.85057831]
[162.13534546 85.54599762]
[176.67301941 89.24141693]
[181.74391174 87.80790710]
[186.38731384 88.41812134]
[189.89173889 90.56186676]
[191.85420227 93.51943970]
[206.18235779 97.95833588]
[220.51052856 102.39723969]
[232.28050232 97.08212280]
[244.13381958 101.09225464]
[249.87777710 111.75579071]
[264.12762451 116.43999481]
[278.37747192 121.12420654]
[292.62731934 125.80841827]
[306.87716675 130.49263000]
[321.12701416 135.17683411]
[335.63244629 131.35676575]
[345.72668457 120.26142883]
[355.82092285 109.16609955]
[365.91513062 98.07076263]
[376.00936890 86.97543335]
[371.92306519 72.09909058]
[376.54998779 57.38192368]
[388.41372681 47.52011490]
[403.72860718 45.66053772]
[417.60769653 52.39657593]
[425.62222290 65.57878876]
[425.21481323 81.00077057]
[416.51544189 93.74142456]
[402.30004883 99.73526764]
[387.10470581 97.06967163]
[377.01046753 108.16500092]
[366.91622925 119.26033020]
[356.82199097 130.35566711]
[346.72778320 141.45100403]
[349.41699219 156.20796204]
[362.77621460 163.02929688]
[376.13546753 169.85061646]
[389.49472046 176.67195129]
[402.85397339 183.49327087]
[416.21322632 190.31460571]
[429.57247925 197.13592529]
[442.93170166 203.95726013]
[456.29095459 210.77857971]
[469.76535034 217.36958313]
[483.35086060 223.72828674]
[496.93640137 230.08700562]
[510.52194214 236.44572449]
[524.10748291 242.80444336]
[537.69299316 249.16316223]
[544.34210205 248.97645569]
[549.32659912 251.77091980]
[551.63000488 255.98043823]
[564.98925781 262.80175781]
[578.34851074 269.62307739]
[591.70776367 276.44442749]
[600.79876709 277.56558228]
[605.23626709 283.49923706]
[618.47644043 290.54888916]
[631.46350098 282.34939575]
[646.81103516 281.75802612]
[660.39056396 288.93380737]
[668.54925537 301.94653320]
[669.09252930 317.29580688]
[661.87420654 330.85278320]
[648.83599854 338.97067261]
[633.48510742 339.46582031]
[619.95080566 332.20504761]
[611.87384033 319.14144897]
[611.42681885 303.78906250]
[598.18664551 296.73941040]
[584.88641357 289.80364990]
[571.52716064 282.98233032]
[558.16790771 276.16101074]
[544.80865479 269.33969116]
[531.33428955 262.74868774]
[517.74877930 256.38998413]
[504.16323853 250.03126526]
[490.57769775 243.67254639]
[476.99215698 237.31382751]
[463.40661621 230.95510864]
[458.66958618 231.72079468]
[453.40380859 229.50134277]
[449.46963501 224.13783264]
[436.11038208 217.31651306]
[422.75112915 210.49517822]
[409.39190674 203.67385864]
[396.03265381 196.85252380]
[382.67340088 190.03120422]
[369.31414795 183.20986938]
[355.95489502 176.38854980]
[342.59564209 169.56721497]
[344.64065552 184.42715454]
[339.69500732 198.58839417]
[328.84362793 208.94442749]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 103]
[8 102]
[9 101]
[10 100]
[11 99]
[12 98]
[14 95]
[15 94]
[16 93]
[17 89]
[18 88]
[19 87]
[20 86]
[21 85]
[25 48]
[26 47]
[27 46]
[28 45]
[29 44]
[31 43]
[32 42]
[33 41]
[49 59]
[50 58]
[51 57]
[52 56]
[60 84]
[61 83]
[63 81]
[64 80]
[66 78]
[67 77]
[68 76]
[69 75]
[104 122]
[105 121]
[106 120]
[107 119]
[108 118]
[123 179]
[124 178]
[125 177]
[126 176]
[127 175]
[128 174]
[129 173]
[130 172]
[131 171]
[132 168]
[133 167]
[134 166]
[135 165]
[136 164]
[137 163]
[140 162]
[141 161]
[142 160]
[143 159]
[145 158]
[146 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
