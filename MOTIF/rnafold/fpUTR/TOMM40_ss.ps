%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:30:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCGACGGUGGUGGCGGCGGCGGCAGCGGGUUCGGUUGCGCGUGGCGCACGGGGUGGGAGCGGAGCCCAGGCCGGGAGCAGGCGCCGCCGCCAGUGAGAACCGGGGCCGGAGCCGGGUGCGGAUUUGCUGGGGCUGAGUCGGGGGCGCGCGGGCCCUGACCUCUGCCCUCUGACCUCUCCCCUAGCAGGCGACC\
) } def
/len { sequence length } bind def

/coor [
[62.12802887 122.55166626]
[57.16889954 110.40964508]
[56.00204849 97.34596252]
[41.40128326 93.90827942]
[26.80051613 90.47059631]
[13.46690655 98.52370453]
[-1.29137444 94.82941437]
[-8.88661385 82.06822968]
[-23.48737907 78.63054657]
[-38.08814621 75.19286346]
[-52.68890762 71.75518036]
[-63.24332047 82.82548523]
[-77.82548523 87.09832764]
[-92.49103546 83.52228546]
[-103.32505035 73.15502930]
[-107.48714447 58.85318756]
[-122.08791351 55.41550446]
[-136.71562195 52.09435272]
[-151.36935425 48.88993835]
[-166.02307129 45.68552399]
[-180.67680359 42.48110962]
[-195.33053589 39.27669525]
[-209.98425293 36.07228088]
[-224.63798523 32.86786652]
[-239.29171753 29.66345215]
[-253.94543457 26.45903778]
[-263.00939941 27.68330765]
[-268.80642700 23.08492088]
[-283.40719604 19.64723778]
[-296.74078369 27.70034981]
[-311.49908447 24.00605774]
[-319.09432983 11.24486923]
[-333.69506836 7.80718660]
[-348.29583740 4.36950397]
[-362.89660645 0.93182164]
[-369.60430908 9.89669609]
[-380.61868286 14.99851704]
[-393.67855835 14.22822952]
[-405.63772583 6.89565372]
[-420.50015259 8.92269707]
[-435.36254883 10.94974041]
[-450.22494507 12.97678375]
[-465.08734131 15.00382805]
[-479.96411133 23.13514519]
[-491.89596558 11.09074593]
[-483.62530518 -3.70901394]
[-467.11441040 0.14142221]
[-452.25198364 -1.88562119]
[-437.38958740 -3.91266465]
[-422.52719116 -5.93970823]
[-407.66476440 -7.96675158]
[-405.16482544 -22.75695801]
[-418.53533936 -29.55615616]
[-431.90585327 -36.35535431]
[-446.76785278 -31.69071770]
[-460.23062134 -38.77653885]
[-464.58605957 -52.97393036]
[-477.95657349 -59.77312851]
[-491.32708740 -66.57232666]
[-504.69760132 -73.37152100]
[-519.01544189 -67.08387756]
[-534.01055908 -71.52016449]
[-542.60272217 -84.58570099]
[-540.73498535 -100.11134338]
[-529.28930664 -110.76636505]
[-513.66986084 -111.51978302]
[-501.25177002 -102.01585388]
[-497.89840698 -86.74205017]
[-484.52789307 -79.94284821]
[-471.15737915 -73.14365387]
[-457.78683472 -66.34445190]
[-443.74856567 -71.18824768]
[-430.09210205 -64.48336029]
[-425.10665894 -49.72587967]
[-411.73614502 -42.92668152]
[-398.36563110 -36.12748337]
[-370.53616333 -34.90940094]
[-359.45892334 -13.66894341]
[-344.85815430 -10.23126125]
[-330.25738525 -6.79357862]
[-315.65664673 -3.35589600]
[-303.16574097 -11.38789558]
[-288.30950928 -8.10959053]
[-279.96951294 5.04647350]
[-265.36874390 8.48415661]
[-250.74102783 11.80531025]
[-236.08729553 15.00972462]
[-221.43357849 18.21413803]
[-206.77984619 21.41855240]
[-192.12611389 24.62296677]
[-177.47239685 27.82738113]
[-162.81866455 31.03179550]
[-148.16493225 34.23620987]
[-133.51119995 37.44062424]
[-126.29682922 35.79641724]
[-118.65023041 40.81474304]
[-104.04946136 44.25242233]
[-93.94370270 33.30988693]
[-79.62231445 28.86535454]
[-64.90184021 32.20811081]
[-53.75783157 42.53806305]
[-49.25122833 57.15441513]
[-34.65046310 60.59209824]
[-20.04969597 64.02977753]
[-5.44893169 67.46746063]
[7.04196787 59.43546295]
[21.89819145 62.71376801]
[30.23819923 75.86983490]
[44.83896255 79.30751038]
[59.43972778 82.74519348]
[67.32215118 70.41922760]
[78.80496979 61.35243225]
[92.62303162 56.54376602]
[107.25387573 56.52305222]
[121.08549500 61.29256439]
[130.39772034 49.53320312]
[139.70993042 37.77383804]
[141.56205750 21.47961617]
[156.70524597 15.18549061]
[169.56147766 25.36631775]
[166.90536499 41.54893494]
[151.46929932 47.08605576]
[142.15707397 58.84541702]
[132.84486389 70.60478210]
[142.37257385 87.85798645]
[143.42845154 107.53882599]
[157.55537415 112.58161163]
[171.68231201 117.62440491]
[185.80924988 122.66719055]
[199.93618774 127.70998383]
[214.06312561 132.75277710]
[228.19004822 137.79556274]
[242.31698608 142.83834839]
[256.44390869 147.88113403]
[270.57086182 152.92391968]
[284.71856689 146.40628052]
[298.97344971 151.72163391]
[305.09985352 165.24949646]
[319.22677612 170.29228210]
[333.35372925 175.33506775]
[347.52041626 180.26506042]
[361.72598267 185.08192444]
[375.93151855 189.89880371]
[390.13708496 194.71566772]
[404.34262085 199.53254700]
[418.54818726 204.34942627]
[432.75372314 209.16629028]
[441.89764404 208.95935059]
[447.14633179 214.17489624]
[461.27328491 219.21768188]
[475.40020752 224.26048279]
[490.99832153 221.61294556]
[500.38363647 233.17863464]
[514.51055908 238.22142029]
[528.63751221 243.26420593]
[542.81024170 236.27069092]
[557.75000000 241.42620850]
[564.59326172 255.67207336]
[559.28009033 270.55648804]
[544.96264648 277.24877930]
[530.13525391 271.77853394]
[523.59472656 257.39114380]
[509.46780396 252.34835815]
[495.34085083 247.30555725]
[480.75320435 250.31379700]
[470.35742188 238.38740540]
[456.23049927 233.34461975]
[442.10354614 228.30183411]
[427.93685913 223.37184143]
[413.73132324 218.55497742]
[399.52575684 213.73809814]
[385.32019043 208.92123413]
[371.11465454 204.10435486]
[356.90908813 199.28747559]
[342.70355225 194.47061157]
[335.35092163 195.30091858]
[328.31094360 189.46200562]
[314.18399048 184.41921997]
[300.05706787 179.37641907]
[286.74914551 185.96696472]
[272.35058594 181.05410767]
[265.52807617 167.05085754]
[251.40113831 162.00807190]
[237.27420044 156.96528625]
[223.14726257 151.92250061]
[209.02032471 146.87969971]
[194.89340210 141.83691406]
[180.76646423 136.79412842]
[166.63952637 131.75134277]
[152.51258850 126.70854950]
[138.38565063 121.66575623]
[130.31127930 132.00141907]
[119.55312347 139.50366211]
[107.06373596 143.50823975]
[93.94892883 143.66059875]
[81.36988068 139.94725037]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 110]
[4 109]
[5 108]
[8 105]
[9 104]
[10 103]
[11 102]
[16 97]
[17 96]
[18 94]
[19 93]
[20 92]
[21 91]
[22 90]
[23 89]
[24 88]
[25 87]
[26 86]
[28 85]
[29 84]
[32 81]
[33 80]
[34 79]
[35 78]
[39 51]
[40 50]
[41 49]
[42 48]
[43 47]
[52 76]
[53 75]
[54 74]
[57 71]
[58 70]
[59 69]
[60 68]
[115 124]
[116 123]
[117 122]
[126 191]
[127 190]
[128 189]
[129 188]
[130 187]
[131 186]
[132 185]
[133 184]
[134 183]
[135 182]
[138 179]
[139 178]
[140 177]
[141 175]
[142 174]
[143 173]
[144 172]
[145 171]
[146 170]
[147 169]
[149 168]
[150 167]
[151 166]
[153 164]
[154 163]
[155 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
