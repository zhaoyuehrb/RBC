%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:05:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGUGCUGGGAUUACAGGCAUGAGCCGCCGCGCCCCGCCCCACGCUCAGUCUUGAAAUUGUCUGGAACGGGAAACGGCAAACAGCGAGAUAUCCGAGCGAGAGUCCCGCCCUGCAUCAGUUUGCGGAACCGCCUUGGUAGAAGGAGAGAAGGGGAGUGGAGGAAGCACGGGACUGGAGGGACCAAAGUUCCCCG\
) } def
/len { sequence length } bind def

/coor [
[73.56658173 146.91902161]
[61.76408005 137.66154480]
[59.21616745 122.87951660]
[67.23834229 110.20494843]
[81.69077301 106.18193054]
[66.78508759 104.50246429]
[51.87940598 102.82299805]
[36.97372055 101.14353180]
[22.39402008 107.28705597]
[10.61307621 98.17340088]
[-4.29260683 96.49393463]
[-19.19828987 94.81446838]
[-34.10397339 93.13500214]
[-42.27243042 105.98169708]
[-55.15612030 113.97529602]
[-70.17139435 115.57582092]
[-84.33438873 110.51908112]
[-94.85395813 99.85849762]
[-99.68173218 85.74616241]
[-114.58741760 84.06669617]
[-123.47817993 86.21730804]
[-129.71784973 82.23899078]
[-144.59469604 80.32083130]
[-153.28939819 91.02537537]
[-166.03805542 95.99344635]
[-179.46890259 94.02596283]
[-190.08616638 85.74319458]
[-195.17993164 73.39494324]
[-210.02412415 71.23858643]
[-224.86831665 69.08222961]
[-239.71252441 66.92588043]
[-250.55850220 77.86529541]
[-265.59057617 80.29228973]
[-279.01062012 73.48302460]
[-285.76690674 60.23574448]
[-300.61111450 58.07939148]
[-315.45532227 55.92303467]
[-330.29949951 53.76668167]
[-342.88314819 62.94760895]
[-357.90655518 60.54929733]
[-366.58163452 48.49612808]
[-381.42581177 46.33977127]
[-396.27001953 44.18341827]
[-411.03915405 49.85647964]
[-422.52191162 40.36991119]
[-437.36611938 38.21355820]
[-452.27178955 36.53408813]
[-467.22366333 35.33323669]
[-482.17550659 34.13238144]
[-496.74819946 41.65357971]
[-510.40005493 32.56736374]
[-509.08718872 16.22085190]
[-494.16018677 9.42993641]
[-480.97467041 19.18052864]
[-466.02279663 20.38138199]
[-451.07095337 21.58223534]
[-448.84643555 19.85711670]
[-445.80035400 18.91485786]
[-442.22952271 19.07438278]
[-438.54113770 20.54061890]
[-435.20974731 23.36936188]
[-420.36557007 25.52571678]
[-406.65820312 19.69841766]
[-394.11367798 29.33922195]
[-379.26947021 31.49557686]
[-364.42526245 33.65193176]
[-352.67932129 24.56524086]
[-337.59445190 26.54063034]
[-328.14315796 38.92248535]
[-313.29895020 41.07884216]
[-298.45477295 43.23519516]
[-283.61056519 45.39155197]
[-273.36431885 34.61415863]
[-258.56149292 31.90471268]
[-244.84129333 38.50843430]
[-237.55616760 52.08168411]
[-222.71197510 54.23803711]
[-207.86776733 56.39439392]
[-193.02357483 58.55074692]
[-181.95390320 46.43659210]
[-165.68269348 43.27148056]
[-150.57934570 50.49604034]
[-142.67654419 65.44398499]
[-127.79969788 67.36213684]
[-112.90795135 69.16101074]
[-98.00226593 70.84047699]
[-90.15524292 58.15624619]
[-77.52722168 50.10376740]
[-62.59408951 48.32537842]
[-48.31142807 53.22698593]
[-37.52950668 63.88705826]
[-32.42450714 78.22931671]
[-17.51882362 79.90878296]
[-2.61313963 81.58824921]
[12.29254341 83.26771545]
[25.80609131 77.00406647]
[38.65319061 86.23784637]
[53.55887222 87.91731262]
[68.46455383 89.59678650]
[83.37023926 91.27625275]
[92.00106049 82.18078613]
[104.89683533 80.31453705]
[116.60412598 87.08013916]
[131.11354065 83.27531433]
[145.62297058 79.47049713]
[160.13238525 75.66567993]
[174.64181519 71.86086273]
[189.15124512 68.05604553]
[187.51098633 47.41368866]
[208.73643494 28.11870575]
[222.03541565 21.18063164]
[235.33441162 14.24255657]
[248.63340759 7.30448246]
[250.88743591 -9.45304203]
[262.56634521 -21.44922829]
[278.92947388 -24.09838104]
[293.50183105 -16.55270576]
[306.68789673 -23.70304298]
[311.28140259 -38.58717728]
[324.75582886 -45.65079498]
[338.91726685 -41.17986679]
[352.10333252 -48.33020401]
[365.28942871 -55.48054123]
[378.47549438 -62.63088226]
[391.66156006 -69.78121948]
[400.10464478 -83.16125488]
[414.98110962 -82.42655945]
[428.16717529 -89.57689667]
[432.42309570 -104.79737091]
[446.23577881 -112.47756958]
[461.41040039 -108.06096649]
[468.94412231 -94.16786194]
[464.36734009 -79.04077911]
[450.39535522 -71.65435791]
[435.31753540 -76.39082336]
[422.13143921 -69.24048615]
[414.63153076 -56.37188721]
[398.81192017 -56.59513855]
[385.62582397 -49.44480133]
[372.43975830 -42.29446411]
[359.25366211 -35.14412689]
[346.06759644 -27.99378967]
[342.08908081 -13.68620777]
[328.81835938 -6.24690819]
[313.83822632 -10.51696396]
[300.65216064 -3.36662674]
[300.13647461 9.98102856]
[293.03308105 21.42097664]
[281.10815430 27.90594101]
[267.42816162 27.64650154]
[255.57147217 20.60347176]
[242.27249146 27.54154587]
[228.97349548 34.47962189]
[215.67449951 41.41769409]
[215.55429077 48.91673279]
[215.31387329 63.91480637]
[215.19366455 71.41384125]
[228.26345825 78.77460480]
[241.33323669 86.13536835]
[255.90509033 80.46130371]
[270.69833374 85.53026581]
[278.72802734 98.94883728]
[276.20278931 114.38117981]
[264.31500244 124.54061890]
[248.67765808 124.63017273]
[236.67428589 114.60755920]
[233.97247314 99.20514679]
[220.90269470 91.84438324]
[207.83290100 84.48361969]
[192.95605469 82.56546783]
[178.44664001 86.37028503]
[163.93721008 90.17510223]
[149.42779541 93.97991943]
[134.91836548 97.78473663]
[120.40894318 101.58956146]
[113.47087097 114.88854980]
[118.65134430 128.96557617]
[124.55922699 135.94895935]
[123.80006409 143.30995178]
[128.75424194 157.46820068]
[133.70843506 171.62644958]
[138.66261292 185.78469849]
[143.61680603 199.94296265]
[156.39306641 210.22396851]
[153.61054993 226.38533020]
[138.13166809 231.80162048]
[125.87976837 220.90103149]
[129.45855713 204.89714050]
[124.50437164 190.73889160]
[119.55018616 176.58064270]
[114.59600067 162.42239380]
[109.64180756 148.26414490]
[104.57431793 134.14605713]
[99.39384460 120.06902313]
[98.92872620 135.06181335]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 100]
[6 99]
[7 98]
[8 97]
[10 95]
[11 94]
[12 93]
[13 92]
[19 86]
[20 85]
[22 84]
[23 83]
[28 79]
[29 78]
[30 77]
[31 76]
[35 72]
[36 71]
[37 70]
[38 69]
[41 66]
[42 65]
[43 64]
[45 62]
[46 61]
[47 56]
[48 55]
[49 54]
[103 175]
[104 174]
[105 173]
[106 172]
[107 171]
[108 170]
[110 154]
[111 153]
[112 152]
[113 151]
[117 146]
[118 145]
[121 142]
[122 141]
[123 140]
[124 139]
[125 138]
[127 136]
[128 135]
[157 169]
[158 168]
[159 167]
[176 194]
[177 193]
[179 192]
[180 191]
[181 190]
[182 189]
[183 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
