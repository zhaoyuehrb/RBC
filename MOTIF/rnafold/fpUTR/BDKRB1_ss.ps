%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:00:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCACUUCCCAGAAGAGAAAACUCCUCCAAAAGCAGCUCUCACUAUCAGAAAACCCAACUACAGUUGUGAACGCCUUCAUUUUCUGCCUGAGGUCUCAGUCCGUCGGCCCAGACUGAAGUGCAGUGGCACAAUCAUAGCUCGCUGCAGCCUCGACCUUCCAGGCUUAAACGAUUCUCCCACCUCAGCCUCUCGAGUUGCUGGGACCACAGGUCACUGUGC\
) } def
/len { sequence length } bind def

/coor [
[-11.44207764 448.35852051]
[-14.28445911 442.98193359]
[-15.52607822 436.98718262]
[-15.04683304 430.84353638]
[-12.86224461 425.03839111]
[-9.12399673 420.03848267]
[-4.10959864 416.25238037]
[-6.23472691 401.40368652]
[-8.35985565 386.55499268]
[-10.48498440 371.70629883]
[-17.82622337 370.17129517]
[-39.84994125 365.56631470]
[-47.74642181 378.31954956]
[-48.43289185 394.12585449]
[-61.71132278 400.87365723]
[-69.60780334 413.62689209]
[-77.50428772 426.38015747]
[-77.46819305 442.77926636]
[-91.78607178 450.77493286]
[-105.72890472 442.14187622]
[-104.95350647 425.76107788]
[-90.25754547 418.48367310]
[-82.36106110 405.73040771]
[-74.46457672 392.97717285]
[-74.34291840 378.08306885]
[-60.49967957 370.42306519]
[-52.60319519 357.66983032]
[-43.61008072 350.74121094]
[-34.04933929 346.95834351]
[-24.80584335 346.20584106]
[-16.68226242 348.14514160]
[-10.34666157 352.24554443]
[-8.01067543 337.42855835]
[-5.67468882 322.61157227]
[-3.33870268 307.79458618]
[-1.00271666 292.97760010]
[1.33326948 278.16061401]
[3.66925573 263.34362793]
[6.00524187 248.52662659]
[0.75405812 245.98849487]
[-4.01297617 242.62806702]
[-8.16825771 238.53530884]
[-11.60056019 233.81976318]
[-14.21800900 228.60766602]
[-15.95053959 223.03851318]
[-16.75177574 217.26139832]
[-16.60027313 211.43095398]
[-30.83953285 206.71466064]
[-45.07879257 201.99835205]
[-59.31805420 197.28205872]
[-73.55731201 192.56576538]
[-87.79657745 187.84947205]
[-102.03583527 183.13316345]
[-104.58943176 192.49775696]
[-112.94194031 200.68757629]
[-126.22873688 204.67538452]
[-140.99255371 202.02401733]
[-155.75636292 199.37263489]
[-170.52017212 196.72126770]
[-185.75611877 202.78739929]
[-198.45811462 192.41476440]
[-195.55941772 176.27383423]
[-180.04197693 170.96902466]
[-167.86880493 181.95745850]
[-153.10498047 184.60882568]
[-138.34117126 187.26020813]
[-123.57736206 189.91157532]
[-118.45819092 175.81213379]
[-131.48396301 168.37377930]
[-144.50973511 160.93540955]
[-157.53550720 153.49705505]
[-173.92298889 154.11579895]
[-182.42231750 140.09106445]
[-174.29013062 125.85028839]
[-157.89212036 126.04316711]
[-150.09715271 140.47128296]
[-137.07138062 147.90963745]
[-124.04560089 155.34800720]
[-111.01982880 162.78636169]
[-97.31954193 168.89390564]
[-83.08027649 173.61019897]
[-68.84101868 178.32650757]
[-54.60175705 183.04280090]
[-40.36249542 187.75909424]
[-26.12323570 192.47538757]
[-11.88397598 197.19169617]
[10.04848289 180.31932068]
[37.75931931 184.13749695]
[48.02130890 173.19712830]
[58.28329468 162.25675964]
[68.54528046 151.31639099]
[78.80727386 140.37602234]
[89.06925964 129.43566895]
[99.33124542 118.49529266]
[71.26680756 114.92498779]
[61.22603607 74.78963470]
[59.52386856 59.88652802]
[57.82170105 44.98341751]
[56.11953354 30.08031082]
[54.41736603 15.17720318]
[52.71519852 0.27409559]
[38.59669495 -5.77267981]
[29.40595436 -18.07820129]
[27.61523819 -33.33234406]
[33.70623779 -47.43182373]
[46.04050827 -56.58394623]
[61.30018997 -58.32683945]
[75.38050842 -52.19167709]
[84.49392700 -39.82878113]
[86.18898010 -24.56370926]
[80.00970459 -10.50269222]
[67.61830139 -1.42807198]
[69.32047272 13.47503567]
[71.02263641 28.37814331]
[72.72480774 43.28125000]
[74.42697906 58.18436050]
[76.12914276 73.08747101]
[83.35723877 75.08861542]
[94.05121613 64.57010651]
[97.81343842 79.09091187]
[105.04153442 81.09206390]
[114.16590881 69.18635559]
[123.29027557 57.28064728]
[132.41464233 45.37494278]
[141.53901672 33.46923447]
[150.66339111 21.56352806]
[159.70291138 9.59326935]
[168.65711975 -2.44093585]
[163.12768555 -16.84332657]
[166.28491211 -31.94416809]
[177.12135315 -42.92483902]
[192.17913818 -46.28144073]
[206.65338135 -40.94290161]
[215.92539978 -28.61272430]
[217.03652954 -13.22542763]
[209.63220215 0.30896136]
[196.07513428 7.67166615]
[180.69132996 6.51327562]
[171.73712158 18.54748154]
[170.26715088 25.78482056]
[162.56909180 30.68789864]
[153.44473267 42.59360504]
[144.32035828 54.49931335]
[135.19598389 66.40502167]
[126.07161713 78.31072235]
[116.94724274 90.21643066]
[125.38025665 102.62144470]
[139.80764771 98.51649475]
[154.23503113 94.41155243]
[168.66241455 90.30661011]
[183.08979797 86.20166016]
[194.24574280 74.98313141]
[208.60456848 78.94208527]
[223.03195190 74.83713531]
[236.61178589 64.68702698]
[250.12449646 74.92632294]
[244.02604675 90.74546051]
[227.13690186 89.26452637]
[212.70951843 93.36946869]
[202.58551025 104.29438782]
[187.19474792 100.62905121]
[172.76734924 104.73399353]
[158.33996582 108.83893585]
[143.91258240 112.94388580]
[129.48519897 117.04882812]
[144.44909668 116.00862122]
[158.72894287 120.60054016]
[170.28187561 130.16766357]
[177.45509338 143.34130859]
[179.22241211 158.23683167]
[175.33097839 172.72326660]
[166.33750916 184.72816467]
[153.52862549 192.53408813]
[138.73677063 195.02430725]
[124.07810211 191.84259033]
[111.64969635 183.44409180]
[103.22957611 171.03031921]
[100.02233887 156.37721252]
[102.48680878 141.58105469]
[110.27161407 128.75727844]
[100.00962067 139.69764709]
[89.74763489 150.63801575]
[79.48564911 161.57838440]
[69.22366333 172.51875305]
[58.96167374 183.45912170]
[48.69968796 194.39947510]
[53.46700287 204.31407166]
[55.04703522 215.16712952]
[53.31518555 225.96286011]
[48.44979858 235.71678162]
[40.91403198 243.54553223]
[31.41184044 248.74687195]
[20.82223129 250.86260986]
[18.48624420 265.67959595]
[16.15025902 280.49658203]
[13.81427288 295.31356812]
[11.47828674 310.13055420]
[9.14230061 324.94757080]
[6.80631399 339.76455688]
[4.47032785 354.58154297]
[4.36371374 369.58114624]
[6.48884249 384.42987061]
[8.61397076 399.27856445]
[10.73909950 414.12725830]
[27.64376068 431.72521973]
[18.32001877 453.50280762]
[21.90975380 468.06692505]
[25.49948883 482.63107300]
[29.08922386 497.19519043]
[32.67895889 511.75930786]
[44.42309570 523.20513916]
[40.12108231 539.02996826]
[24.19846344 542.95452881]
[13.03506374 530.94158936]
[18.11483192 515.34906006]
[14.52509594 500.78491211]
[10.93536091 486.22079468]
[7.34562635 471.65667725]
[3.75589132 457.09252930]
[-2.03653002 455.68591309]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 204]
[8 203]
[9 202]
[10 201]
[12 27]
[13 26]
[15 24]
[16 23]
[17 22]
[32 200]
[33 199]
[34 198]
[35 197]
[36 196]
[37 195]
[38 194]
[39 193]
[47 86]
[48 85]
[49 84]
[50 83]
[51 82]
[52 81]
[53 80]
[56 67]
[57 66]
[58 65]
[59 64]
[68 79]
[69 78]
[70 77]
[71 76]
[88 186]
[89 185]
[90 184]
[91 183]
[92 182]
[93 181]
[94 180]
[96 117]
[97 116]
[98 115]
[99 114]
[100 113]
[101 112]
[121 146]
[122 145]
[123 144]
[124 143]
[125 142]
[126 141]
[127 139]
[128 138]
[147 165]
[148 164]
[149 163]
[150 162]
[151 161]
[153 159]
[154 158]
[206 219]
[207 218]
[208 217]
[209 216]
[210 215]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
