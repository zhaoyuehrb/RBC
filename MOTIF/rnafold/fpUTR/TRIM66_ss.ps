%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:58:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACAGAUUUCAAUGUCUGUUGAAGGCCCCCCCACACCCUCCUUCAGUGCCGGGGGCAUGGAGGGAUAUCUUGGGCUCCUGCUGUUUUUUAAAAUGAUGCGAGCUCAUCUCCUGUCCUGGGUGUGAACGAGUAUAUCUUACCAGGGAUGUAACUGAACAUUUUUUUCUGCAUUGUGUUCCUACUGAGCAACCCAAG\
) } def
/len { sequence length } bind def

/coor [
[96.05064392 133.99467468]
[91.09645844 148.15292358]
[86.14227295 162.31117249]
[81.18808746 176.46942139]
[76.23390198 190.62767029]
[71.27971649 204.78591919]
[66.32553101 218.94416809]
[73.40770721 233.07281494]
[68.34588623 248.04457092]
[54.14316177 254.97697449]
[39.22575760 249.75714111]
[32.44390488 235.48191833]
[37.82115173 220.62054443]
[52.16728210 213.98999023]
[57.12146759 199.83174133]
[62.07565308 185.67349243]
[67.02983856 171.51524353]
[71.98402405 157.35699463]
[76.93820953 143.19874573]
[81.89239502 129.04048157]
[76.33283997 124.72045135]
[71.77497101 119.35414886]
[68.41169739 113.16870117]
[66.38537598 106.42590332]
[51.39308167 105.94512939]
[36.40078735 105.46435547]
[21.40849304 104.98358154]
[6.41620016 104.50280762]
[0.73413962 118.53631592]
[-9.38739681 129.75801086]
[-22.71247292 136.82643127]
[-37.62379456 138.90551758]
[-52.31899261 135.76344299]
[-65.02848816 127.79832458]
[-74.22857666 115.98784637]
[-78.82408905 101.76931763]
[-93.81638336 101.28854370]
[-108.80867767 100.80776978]
[-123.80097198 100.32699585]
[-138.79325867 99.84622192]
[-153.78555298 99.36544800]
[-157.56144714 101.56600952]
[-161.44984436 102.36256409]
[-164.99328613 101.89328003]
[-167.82687378 100.43134308]
[-169.71430969 98.34278870]
[-184.64500427 96.90244293]
[-199.57568359 95.46209717]
[-214.50636292 94.02175140]
[-229.43705750 92.58140564]
[-245.78358459 97.07888031]
[-254.63047791 82.61621094]
[-243.18206787 70.11139679]
[-227.99670410 77.65071869]
[-213.06602478 79.09106445]
[-198.13534546 80.53141022]
[-183.20465088 81.97175598]
[-168.27397156 83.41210175]
[-153.30477905 84.37315369]
[-138.31248474 84.85392761]
[-123.32019806 85.33470154]
[-108.32790375 85.81547546]
[-93.33560944 86.29624939]
[-78.34331512 86.77702332]
[-72.84626007 72.88214111]
[-62.90837479 61.68537903]
[-49.71466446 54.55091858]
[-34.84834671 52.35682678]
[-20.10087013 55.38701248]
[-7.25604630 63.29465103]
[2.12571812 75.14177704]
[6.89697409 89.51051331]
[21.88926697 89.99128723]
[36.88156128 90.47206116]
[51.87385559 90.95283508]
[66.86614990 91.43360901]
[81.45034027 71.23986816]
[105.86159515 66.28239441]
[127.16754913 79.18751526]
[140.78465271 72.89670563]
[154.40176392 66.60588837]
[168.01887512 60.31507874]
[165.48568726 45.44840240]
[166.88603210 30.44425392]
[172.11849976 16.32486153]
[180.82075500 4.05060720]
[192.39471436 -5.54528809]
[206.04757690 -11.81332779]
[220.84617615 -14.33169842]
[235.78071594 -12.93465424]
[249.83374023 -7.72340441]
[262.04937744 0.94118434]
[271.59838867 12.46357822]
[285.21551514 6.17276716]
[298.83261108 -0.11804399]
[312.44973755 -6.40885496]
[326.06683350 -12.69966602]
[339.68395996 -18.99047852]
[353.30105591 -25.28128815]
[366.86730957 -31.68102837]
[380.38183594 -38.18928528]
[393.89639282 -44.69754028]
[397.76251221 -51.67561722]
[404.02032471 -55.18416595]
[410.38806152 -54.87652588]
[422.26394653 -64.03971100]
[434.13980103 -73.20288849]
[446.01565552 -82.36606598]
[450.90618896 -90.09610748]
[458.15609741 -91.57911682]
[470.17730713 -100.55077362]
[482.19851685 -109.52243042]
[494.21972656 -118.49408722]
[493.01858521 -132.23243713]
[498.72036743 -144.67027283]
[509.73715210 -152.60054016]
[523.12622070 -154.03684998]
[535.37579346 -148.71014404]
[547.53924561 -157.48797607]
[559.70269775 -166.26580811]
[571.86614990 -175.04364014]
[584.02966309 -183.82147217]
[596.19311523 -192.59930420]
[608.35656738 -201.37713623]
[610.63116455 -217.01687622]
[623.34832764 -226.40034485]
[638.96313477 -223.96049500]
[648.21166992 -211.14485168]
[645.60681152 -195.55668640]
[632.69409180 -186.44421387]
[617.13439941 -189.21368408]
[604.97094727 -180.43585205]
[592.80749512 -171.65802002]
[580.64398193 -162.88018799]
[568.48052979 -154.10235596]
[556.31707764 -145.32452393]
[544.15362549 -136.54669189]
[544.62933350 -120.14350891]
[535.14282227 -106.55025482]
[519.26739502 -101.23287964]
[503.19137573 -106.47288513]
[491.17016602 -97.50122833]
[479.14895630 -88.52957153]
[467.12777710 -79.55791473]
[455.17883301 -70.49020386]
[443.30297852 -61.32702255]
[431.42712402 -52.16384506]
[419.55126953 -43.00066376]
[434.47241211 -44.53673553]
[448.98263550 -40.73498917]
[461.23358154 -32.07970047]
[469.66470337 -19.67340851]
[473.20202637 -5.09646034]
[471.39492798 9.79428864]
[464.47360229 23.10201073]
[453.31973267 33.13152695]
[439.35412598 38.60525131]
[424.35574341 38.82592392]
[410.23516846 33.76543045]
[398.79104614 24.06839943]
[391.48123169 10.97006035]
[389.23681641 -3.86107922]
[392.34375000 -18.53578377]
[400.40463257 -31.18300629]
[386.89010620 -24.67475128]
[373.37557983 -18.16649437]
[368.70736694 -12.42467499]
[359.59185791 -11.66417885]
[345.97476196 -5.37336731]
[332.35763550 0.91744399]
[318.74053955 7.20825529]
[305.12341309 13.49906635]
[291.50631714 19.78987694]
[277.88922119 26.08068848]
[280.47293091 40.82089996]
[279.15203857 55.73907852]
[274.01055908 69.81777191]
[265.39334106 82.09522247]
[253.88285828 91.73107147]
[240.25990295 98.06387329]
[225.45059204 100.65647888]
[210.46334839 99.32626343]
[196.32037354 94.15790558]
[183.98777771 85.49808502]
[174.30969238 73.93218994]
[160.69258118 80.22299957]
[147.07546997 86.51380920]
[133.45835876 92.80462646]
[134.22329712 99.96891785]
[133.47137451 107.13459015]
[131.23590088 113.98403931]
[127.61598206 120.21367645]
[122.77204132 125.54739380]
[116.91878510 129.74877930]
[110.31564331 132.63162231]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 20]
[2 19]
[3 18]
[4 17]
[5 16]
[6 15]
[7 14]
[24 76]
[25 75]
[26 74]
[27 73]
[28 72]
[36 64]
[37 63]
[38 62]
[39 61]
[40 60]
[41 59]
[46 58]
[47 57]
[48 56]
[49 55]
[50 54]
[79 188]
[80 187]
[81 186]
[82 185]
[93 174]
[94 173]
[95 172]
[96 171]
[97 170]
[98 169]
[99 168]
[100 166]
[101 165]
[102 164]
[105 148]
[106 147]
[107 146]
[108 145]
[110 144]
[111 143]
[112 142]
[113 141]
[118 137]
[119 136]
[120 135]
[121 134]
[122 133]
[123 132]
[124 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
