%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:09:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAUUCUGGGUCGCGCAGCCGUGGAGCUACCUCAAGGCGGAACUGGGGAGUCCAGGGCUUCGGCAGCCUGAACACCCGGUGUGAAAGGAAGGUGGCAGACGUGGAGCGGCGCGCAUGCGCAGCAGCUCACUCUGCUGAAGGGCUGAGAGGCGCACCCGGGCGGCCAGCUGGGCUCGGAGCGGAACGGGGUCAGG\
) } def
/len { sequence length } bind def

/coor [
[184.70396423 321.65121460]
[190.61582947 309.54125977]
[184.13836670 296.01193237]
[169.48042297 293.50543213]
[158.98495483 282.72076416]
[156.82713318 267.64770508]
[164.04196167 254.03695679]
[157.56451416 240.50762939]
[151.08705139 226.97830200]
[144.60960388 213.44898987]
[138.13215637 199.91966248]
[131.65470886 186.39033508]
[125.17725372 172.86100769]
[119.44661713 168.18014526]
[118.70631409 159.06390381]
[112.44542694 145.43299866]
[106.18454742 131.80210876]
[99.92366791 118.17120361]
[86.24327850 112.01921082]
[71.89134979 116.38063049]
[57.53941345 120.74205017]
[43.18748093 125.10347748]
[32.23324585 136.51904297]
[17.80614090 132.81663513]
[3.45420718 137.17805481]
[-10.89772606 141.53948975]
[-25.24965858 145.90090942]
[-32.56081390 151.39645386]
[-39.86532974 150.21548462]
[-54.28498840 154.34748840]
[-61.68284988 159.72575378]
[-68.96760559 158.42843628]
[-83.45131683 162.32997131]
[-97.93503571 166.23152161]
[-112.41874695 170.13305664]
[-119.90143585 175.39266968]
[-127.16457367 173.97935486]
[-141.70866394 177.64942932]
[-149.59381104 191.34614563]
[-164.87600708 195.37480164]
[-178.48858643 187.34527588]
[-182.35545349 172.02134705]
[-174.18246460 158.49441528]
[-158.81849670 154.78979492]
[-145.37873840 163.10534668]
[-130.83465576 159.43525696]
[-116.32028198 155.64933777]
[-101.83657074 151.74780273]
[-87.35285187 147.84626770]
[-72.86914062 143.94473267]
[-58.41699219 139.92782593]
[-43.99733353 135.79582214]
[-29.61108208 131.54896545]
[-15.25914860 127.18755341]
[-0.90721577 122.82612610]
[13.44471741 118.46470642]
[23.37240601 107.36109161]
[38.82605743 110.75154114]
[53.17798996 106.39012146]
[67.52992249 102.02869415]
[81.88185883 97.66727448]
[92.01325989 86.60587311]
[95.10073090 71.92705536]
[98.18820190 57.24824524]
[101.27567291 42.56943512]
[104.36314392 27.89062119]
[86.17145538 14.35127544]
[79.90200043 -9.50557804]
[90.66166687 -33.89675522]
[82.11798859 -46.22581482]
[73.57431793 -58.55487061]
[56.31233597 -61.35666656]
[46.60381317 -75.49440002]
[50.04943466 -91.95013428]
[41.31024551 -104.14138794]
[32.57105255 -116.33263397]
[23.83186340 -128.52388000]
[9.68962097 -137.87446594]
[14.75981426 -154.05252075]
[31.70919418 -153.65899658]
[36.02311325 -137.26307678]
[44.76230240 -125.07182312]
[53.50149155 -112.88057709]
[62.24068451 -100.68933105]
[75.12916565 -100.39015198]
[85.64689636 -92.60317993]
[89.81719971 -79.99362183]
[85.90338135 -67.09854126]
[94.44705200 -54.76948547]
[102.99072266 -42.44042587]
[110.49048615 -42.50022888]
[105.74165344 -56.72867203]
[117.80625153 -65.64189148]
[130.01136780 -56.92209244]
[125.49000549 -42.61983109]
[132.98976135 -42.67963028]
[141.33575439 -55.14336395]
[149.68173218 -67.60709381]
[158.02770996 -80.07083130]
[166.37368774 -92.53456116]
[174.71966553 -104.99829102]
[176.89820862 -113.88130951]
[183.29943848 -117.59277344]
[191.84310913 -129.92182922]
[200.38677979 -142.25088501]
[202.70669556 -151.09803772]
[209.16629028 -154.70695496]
[217.90548706 -166.89819336]
[226.64468384 -179.08944702]
[228.39634705 -194.81338501]
[242.09989929 -200.64962769]
[250.83909607 -212.84088135]
[259.48080444 -225.10142517]
[268.02447510 -237.43048096]
[276.56814575 -249.75953674]
[277.37780762 -266.13867188]
[292.08898926 -273.38531494]
[305.56805420 -264.04470825]
[303.94891357 -247.72569275]
[288.89721680 -241.21586609]
[280.35354614 -228.88681030]
[271.80984497 -216.55773926]
[270.58264160 -209.26086426]
[263.03033447 -204.10168457]
[254.29115295 -191.91043091]
[253.16456604 -177.05850220]
[238.83592224 -170.35025024]
[230.09674072 -158.15901184]
[221.35754395 -145.96775818]
[212.71583557 -133.70721436]
[204.17216492 -121.37815857]
[195.62849426 -109.04910278]
[187.18339539 -96.65231323]
[178.83741760 -84.18858337]
[170.49143982 -71.72484589]
[162.14546204 -59.26111603]
[153.79948425 -46.79738235]
[145.45350647 -34.33365250]
[154.59873962 -20.38336372]
[157.36851501 -4.55737734]
[153.78506470 10.47394657]
[144.90399170 22.36164665]
[132.56755066 29.44495583]
[119.04195404 30.97809219]
[115.95448303 45.65690613]
[112.86701202 60.33571625]
[109.77954102 75.01452637]
[106.69207001 89.69334412]
[111.58702087 92.63899994]
[115.02416992 97.92873383]
[115.90238190 104.77944183]
[113.55456543 111.91032410]
[119.81544495 125.54122162]
[126.07632446 139.17211914]
[132.33720398 152.80300903]
[138.70657349 166.38356018]
[145.18403625 179.91288757]
[151.66148376 193.44219971]
[158.13893127 206.97152710]
[164.61637878 220.50085449]
[171.09382629 234.03018188]
[177.57128906 247.55950928]
[192.69784546 250.47384644]
[203.08644104 261.60623169]
[204.90637207 276.54452515]
[197.66769409 289.53448486]
[204.14515686 303.06381226]
[220.74317932 308.57119751]
[228.08349609 324.07122803]
[222.06848145 339.77102661]
[228.76084900 353.19534302]
[235.45321655 366.61962891]
[242.14559937 380.04394531]
[255.22718811 388.94241333]
[253.98103333 403.78479004]
[260.67340088 417.20910645]
[267.36578369 430.63342285]
[274.05813599 444.05773926]
[289.38397217 446.48654175]
[300.33132935 457.48358154]
[302.69079590 472.82022095]
[295.55508423 486.59921265]
[281.66802979 493.52230835]
[266.36944580 490.92736816]
[255.54200745 479.81222534]
[253.34906006 464.45089722]
[260.63385010 450.75012207]
[253.94146729 437.32580566]
[247.24909973 423.90148926]
[240.55671692 410.47717285]
[227.95381165 402.53890991]
[228.72128296 386.73632812]
[222.02891541 373.31201172]
[215.33653259 359.88769531]
[208.64416504 346.46337891]
[195.96673584 344.12136841]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 167]
[3 166]
[7 162]
[8 161]
[9 160]
[10 159]
[11 158]
[12 157]
[13 156]
[15 155]
[16 154]
[17 153]
[18 152]
[19 61]
[20 60]
[21 59]
[22 58]
[24 56]
[25 55]
[26 54]
[27 53]
[29 52]
[30 51]
[32 50]
[33 49]
[34 48]
[35 47]
[37 46]
[38 45]
[62 148]
[63 147]
[64 146]
[65 145]
[66 144]
[69 90]
[70 89]
[71 88]
[74 84]
[75 83]
[76 82]
[77 81]
[96 138]
[97 137]
[98 136]
[99 135]
[100 134]
[101 133]
[103 132]
[104 131]
[105 130]
[107 129]
[108 128]
[109 127]
[111 125]
[112 124]
[113 122]
[114 121]
[115 120]
[170 195]
[171 194]
[172 193]
[173 192]
[175 190]
[176 189]
[177 188]
[178 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
