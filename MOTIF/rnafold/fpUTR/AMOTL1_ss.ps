%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:37:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGACGGCGGCGGGAGCGCGCGAGAAGCUCUAGGACCCAGCAGCGGUUGUCGGGUUUGGGGCUGGAGGUGAAGCCCUGUGUGAAUGGGGUUGAUUGUCCGGCGCCACUUCCCCGCGCUGCCCGGCAGCCGUCUUCCCCAGCCGAGGGACUGAACUAGCCAUGAUCGCCUC\
) } def
/len { sequence length } bind def

/coor [
[311.01580811 389.88165283]
[324.75897217 395.88937378]
[315.54577637 384.05227661]
[306.33258057 372.21514893]
[297.11938477 360.37805176]
[287.90618896 348.54095459]
[278.69299316 336.70382690]
[269.47982788 324.86672974]
[255.55674744 319.57546997]
[253.18632507 303.93283081]
[243.97312927 292.09573364]
[230.05006409 286.80447388]
[227.67964172 271.16186523]
[218.46644592 259.32473755]
[211.85145569 255.96487427]
[209.19512939 247.18449402]
[200.20094299 235.18013000]
[191.09687805 223.25889587]
[181.88368225 211.42178345]
[172.67050171 199.58468628]
[163.45730591 187.74757385]
[154.24411011 175.91046143]
[137.66233826 170.21456909]
[135.23982239 151.97819519]
[125.81072998 140.31233215]
[116.38163757 128.64648438]
[106.95254517 116.98062897]
[109.15431213 131.81816101]
[100.83813477 144.30178833]
[86.29766846 147.98620605]
[73.04019165 140.96913147]
[67.91057587 126.87348938]
[73.55724335 112.97689819]
[87.06685638 106.45403290]
[72.11808777 105.21533966]
[57.16931915 103.97665405]
[42.22055054 102.73796082]
[27.27178383 101.49927521]
[12.87980366 108.07053375]
[0.83494347 99.30865479]
[-14.11382389 98.06996155]
[-29.06259155 96.83127594]
[-42.18481445 106.06094360]
[-57.54135513 101.41806793]
[-63.35198593 86.46427155]
[-55.15929031 72.67081451]
[-39.24800110 70.61887360]
[-27.82390022 81.88250732]
[-12.87513351 83.12119293]
[2.07363367 84.35988617]
[15.39637661 77.70001984]
[28.51047325 86.55050659]
[43.45923996 87.78919220]
[58.40800858 89.02788544]
[73.35677338 90.26657867]
[88.30554199 91.50526428]
[98.56571198 80.56319427]
[96.36901093 65.72491455]
[94.17231750 50.88663483]
[84.49744415 38.36835098]
[90.28746033 24.64519501]
[88.09076691 9.80691528]
[85.89406586 -5.03136301]
[83.69737244 -19.86964226]
[81.50067139 -34.70792007]
[79.30397797 -49.54619980]
[64.79290009 -54.14945602]
[53.76440048 -64.55422974]
[48.36917114 -78.65782928]
[49.62728500 -93.64376068]
[57.23583984 -106.54412842]
[69.63957214 -114.82741547]
[67.44287872 -129.66569519]
[65.24617767 -144.50396729]
[63.04948044 -159.34225464]
[60.85278320 -174.18052673]
[58.65608597 -189.01881409]
[56.45938492 -203.85708618]
[54.26268768 -218.69537354]
[43.65330124 -231.20028687]
[49.43218994 -246.54748535]
[65.65453339 -248.94908142]
[75.63217163 -235.93452454]
[69.10096741 -220.89205933]
[71.29766846 -206.05378723]
[73.49436188 -191.21549988]
[75.69106293 -176.37722778]
[77.88775635 -161.53895569]
[80.08445740 -146.70066833]
[82.28115082 -131.86239624]
[84.47785187 -117.02410889]
[98.74951172 -112.68991852]
[109.76940155 -102.54736328]
[115.31550598 -88.56874084]
[114.23799896 -73.50689697]
[106.69718170 -60.35307693]
[94.14225769 -51.74289703]
[96.33895111 -36.90461731]
[98.53565216 -22.06633949]
[100.73234558 -7.22806072]
[102.92904663 7.61021805]
[105.12574005 22.44849777]
[114.64348602 33.90544891]
[109.01059723 48.68993759]
[111.20729065 63.52821732]
[113.40399170 78.36649323]
[118.61840057 107.55153656]
[128.04750061 119.21739197]
[137.47659302 130.88323975]
[146.90568542 142.54910278]
[159.64984131 144.69186401]
[167.26148987 154.63449097]
[166.08122253 166.69726562]
[175.29441833 178.53437805]
[184.50759888 190.37149048]
[193.72079468 202.20860291]
[202.93399048 214.04570007]
[210.70536804 218.91979980]
[212.20530701 226.18595886]
[221.19949341 238.19032288]
[230.30355835 250.11155701]
[239.51675415 261.94866943]
[254.09880066 268.08657837]
[255.81024170 282.88253784]
[265.02343750 294.71966553]
[279.60549927 300.85757446]
[281.31692505 315.65353394]
[290.53012085 327.49063110]
[299.74331665 339.32775879]
[308.95651245 351.16485596]
[318.16967773 363.00195312]
[327.38287354 374.83908081]
[336.59606934 386.67617798]
[342.69055176 388.39443970]
[347.01971436 392.23852539]
[349.01269531 397.09497070]
[362.26980591 404.11270142]
[375.52694702 411.13043213]
[390.55651855 406.24298096]
[404.60189819 413.48889160]
[409.33016968 428.56930542]
[401.93615723 442.53729248]
[386.80657959 447.10586548]
[372.91757202 439.56457520]
[368.50921631 424.38754272]
[355.25210571 417.36981201]
[341.99496460 410.35208130]
[350.29840088 422.84420776]
[355.55709839 436.89221191]
[357.49780273 451.76611328]
[356.01968384 466.69311523]
[351.19952393 480.89755249]
[343.28781128 493.64138794]
[332.69564819 504.26239014]
[319.97338867 512.20874023]
[305.78210449 517.06744385]
[290.85919189 518.58612061]
[275.98004150 516.68591309]
[261.91778564 511.46539307]
[249.40315247 503.19595337]
[239.08638000 492.30722046]
[231.50354004 479.36502075]
[227.04864502 465.04183960]
[225.95318604 450.08187866]
[228.27407837 435.26254272]
[233.89071655 421.35379028]
[242.51126099 409.07833862]
[253.68778992 399.07409668]
[266.83953857 391.86080933]
[281.28317261 387.81335449]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 133]
[3 132]
[4 131]
[5 130]
[6 129]
[7 128]
[8 127]
[10 125]
[11 124]
[13 122]
[14 121]
[16 120]
[17 119]
[18 117]
[19 116]
[20 115]
[21 114]
[22 113]
[24 110]
[25 109]
[26 108]
[27 107]
[34 56]
[35 55]
[36 54]
[37 53]
[38 52]
[40 50]
[41 49]
[42 48]
[57 106]
[58 105]
[59 104]
[61 102]
[62 101]
[63 100]
[64 99]
[65 98]
[66 97]
[72 91]
[73 90]
[74 89]
[75 88]
[76 87]
[77 86]
[78 85]
[79 84]
[136 147]
[137 146]
[138 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
