%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:04:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGGCGGCGGCCGCCCAGGGCCGGGGCCGCGCGCCCAGCCUGAGCCCGCCCCGCCGCCGAGCGUCACCGAACCUGCUUGAAAUGCAGCCGAGGAGCCGGGGCGGGCGGCAGCGGCGGCGGCGGCGGCGGCGGGGGCAGCGGCAACCCCGGCGCCGCGGCAAGGACUCGGAGGGCUGAGACGCGGCGGCGGCGGCGCGGGGAGCGCGGGGCGCGGCGGCCGGAGCCCCGGGCCCGCC\
) } def
/len { sequence length } bind def

/coor [
[74.92047882 955.62988281]
[66.11873627 968.55517578]
[51.05404282 972.74908447]
[36.83948135 966.23138428]
[30.18674088 952.07952881]
[34.23703766 936.97558594]
[47.07794189 928.05120850]
[48.26469803 913.09820557]
[49.45145416 898.14520264]
[50.63821030 883.19226074]
[51.82496643 868.23925781]
[49.47451782 864.10107422]
[49.68603897 858.44512939]
[53.24552917 852.90893555]
[54.82658386 837.99249268]
[56.40763474 823.07604980]
[57.98868942 808.15960693]
[51.63599014 794.68768311]
[60.78477859 781.77996826]
[62.36583328 766.86352539]
[63.94688797 751.94708252]
[65.52793884 737.03063965]
[54.36260986 727.20855713]
[51.08309555 712.52148438]
[57.15163422 698.55633545]
[70.43318939 690.75207520]
[72.01424408 675.83563232]
[73.59529877 660.91918945]
[75.17635345 646.00274658]
[76.75740814 631.08630371]
[78.33846283 616.16986084]
[79.82102966 601.24328613]
[81.20505524 586.30731201]
[82.58908081 571.37127686]
[83.97310638 556.43524170]
[85.35713196 541.49926758]
[86.74115753 526.56323242]
[80.21118927 513.17633057]
[89.18880463 500.14895630]
[90.57283020 485.21295166]
[91.85824585 470.26812744]
[93.04500580 455.31515503]
[85.75542450 448.18670654]
[83.53659058 438.01074219]
[87.35408020 428.08514404]
[96.17633820 421.76287842]
[97.75739288 406.84643555]
[99.33844757 391.92999268]
[100.91949463 377.01354980]
[102.50054932 362.09710693]
[96.14785004 348.62518311]
[105.29663849 335.71743774]
[106.87769318 320.80099487]
[108.45874786 305.88455200]
[110.03980255 290.96810913]
[111.62085724 276.05166626]
[113.20191193 261.13522339]
[114.78296661 246.21876526]
[116.36402130 231.30232239]
[117.94506836 216.38587952]
[109.97168732 200.74404907]
[120.95555878 185.95385742]
[122.33958435 171.01785278]
[123.72360992 156.08183289]
[125.10763550 141.14582825]
[126.49166107 126.20981598]
[82.03676605 129.56712341]
[69.61360931 90.20468140]
[58.26558685 80.39537811]
[46.91756439 70.58608246]
[31.37043762 71.54764557]
[20.00166512 61.43796158]
[19.18077278 46.61022568]
[7.83274937 36.80092621]
[-7.66739559 33.62979507]
[-12.23618698 19.45321465]
[-23.58420944 9.64391518]
[-34.93223190 -0.16538537]
[-46.28025436 -9.97468567]
[-59.84940338 -3.12292361]
[-75.00809479 -1.99039435]
[-89.44473267 -6.74980021]
[-100.95783234 -16.67536736]
[-107.79174042 -30.25351715]
[-108.90432739 -45.41368103]
[-104.12593842 -59.84404373]
[-94.18523407 -71.34408569]
[-80.59810638 -78.16012573]
[-65.43649292 -79.25276947]
[-51.01242447 -74.45539856]
[-39.52547073 -64.49957275]
[-32.72731400 -50.90349197]
[-31.65461349 -35.74045181]
[-36.47095490 -21.32270813]
[-25.12293243 -11.51340866]
[-13.77490902 -1.70410776]
[-2.42688656 8.10519314]
[12.26157188 10.57469749]
[17.64204979 25.45290375]
[28.99007225 35.26220322]
[43.78055191 33.92903519]
[55.42879868 43.71540451]
[56.72686386 59.23805618]
[68.07489014 69.04735565]
[79.42291260 78.85665894]
[92.47879028 71.47126007]
[89.91740417 56.69157028]
[79.93724823 44.41529083]
[85.38761902 30.55373573]
[82.82623291 15.77404308]
[71.91217041 3.53414297]
[77.31142426 -11.95068932]
[93.46971893 -14.75098610]
[103.76477814 -1.98604178]
[97.60592651 13.21266270]
[100.16731262 27.99235725]
[109.96426392 39.21149063]
[104.69709778 54.13018799]
[107.25848389 68.90988159]
[113.50981903 68.15070343]
[120.20380402 68.68596649]
[128.26792908 56.03805161]
[129.16297913 40.24218369]
[142.52932739 33.67026138]
[150.59346008 21.02234650]
[158.65759277 8.37442970]
[166.72172546 -4.27348566]
[174.78585815 -16.92140198]
[182.84999084 -29.56931686]
[183.74502563 -45.36518478]
[197.11137390 -51.93710709]
[205.17550659 -64.58502197]
[213.23963928 -77.23294067]
[221.30377197 -89.88085938]
[229.36790466 -102.52877045]
[237.26438904 -115.28202820]
[244.99183655 -128.13841248]
[244.73928833 -144.53561401]
[258.95037842 -152.71955872]
[273.00595093 -144.27131653]
[272.44683838 -127.88169861]
[257.84820557 -120.41094971]
[250.12075806 -107.55457306]
[250.38023376 -102.80250549]
[247.66983032 -97.83381653]
[242.01582336 -94.46463776]
[233.95169067 -81.81672668]
[225.88755798 -69.16880798]
[217.82342529 -56.52089310]
[209.75929260 -43.87297821]
[209.44104004 -28.98177147]
[195.49789429 -21.50518417]
[187.43376160 -8.85726929]
[179.36962891 3.79064655]
[171.30549622 16.43856239]
[163.24137878 29.08647728]
[155.17724609 41.73439407]
[154.85899353 56.62559891]
[140.91584778 64.10218811]
[132.85171509 76.75009918]
[136.96690369 83.02028656]
[149.50727844 74.78990936]
[162.04779053 66.55973816]
[170.27774048 79.10038757]
[157.73765564 87.33027649]
[145.19728088 95.56065369]
[149.31246948 101.83084106]
[164.12469482 99.46477509]
[178.93690491 97.09870148]
[193.74911499 94.73262787]
[206.13201904 83.98107147]
[221.54423523 89.58425903]
[224.13099670 105.77809906]
[211.23127747 115.90377045]
[196.11518860 109.54484558]
[181.30297852 111.91091156]
[166.49075317 114.27698517]
[151.67854309 116.64305878]
[141.42767334 127.59384155]
[140.04364014 142.52984619]
[138.65962219 157.46586609]
[137.27558899 172.40187073]
[135.89157104 187.33789062]
[143.51087952 197.73008728]
[142.06201172 210.13127136]
[132.86151123 217.96693420]
[131.28045654 232.88337708]
[129.69940186 247.79981995]
[128.11834717 262.71627808]
[126.53730011 277.63272095]
[124.95624542 292.54916382]
[123.37519073 307.46560669]
[121.79413605 322.38204956]
[120.21308136 337.29849243]
[126.45269775 351.83731079]
[117.41699219 363.67816162]
[115.83593750 378.59460449]
[114.25489044 393.51104736]
[112.67383575 408.42749023]
[111.09278107 423.34393311]
[120.08763123 441.39767456]
[107.99798584 456.50189209]
[106.81122589 471.45489502]
[109.24869537 480.23849487]
[105.50884247 486.59698486]
[104.12481689 501.53298950]
[110.55579376 515.98822021]
[101.67716980 527.94726562]
[100.29314423 542.88330078]
[98.90911865 557.81927490]
[97.52509308 572.75531006]
[96.14106750 587.69134521]
[94.75704193 602.62731934]
[97.07836151 611.44238281]
[93.25490570 617.75091553]
[91.67385101 632.66735840]
[90.09279633 647.58380127]
[88.51174164 662.50024414]
[86.93068695 677.41668701]
[85.34963226 692.33312988]
[96.70005035 702.74822998]
[99.70618439 717.67529297]
[93.42065430 731.34844971]
[80.44438171 738.61169434]
[78.86332703 753.52813721]
[77.28227234 768.44458008]
[75.70122528 783.36102295]
[81.94083405 797.89984131]
[72.90513611 809.74066162]
[71.32408142 824.65710449]
[69.74302673 839.57354736]
[68.16197205 854.48999023]
[66.77794647 869.42602539]
[65.59118652 884.37902832]
[64.40443420 899.33197021]
[63.21767807 914.28497314]
[62.03092194 929.23791504]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 237]
[8 236]
[9 235]
[10 234]
[11 233]
[14 232]
[15 231]
[16 230]
[17 229]
[19 227]
[20 226]
[21 225]
[22 224]
[26 220]
[27 219]
[28 218]
[29 217]
[30 216]
[31 215]
[32 213]
[33 212]
[34 211]
[35 210]
[36 209]
[37 208]
[39 206]
[40 205]
[41 203]
[42 202]
[46 200]
[47 199]
[48 198]
[49 197]
[50 196]
[52 194]
[53 193]
[54 192]
[55 191]
[56 190]
[57 189]
[58 188]
[59 187]
[60 186]
[62 183]
[63 182]
[64 181]
[65 180]
[66 179]
[68 105]
[69 104]
[70 103]
[73 100]
[74 99]
[76 97]
[77 96]
[78 95]
[79 94]
[106 119]
[107 118]
[109 116]
[110 115]
[121 160]
[122 159]
[124 157]
[125 156]
[126 155]
[127 154]
[128 153]
[129 152]
[131 150]
[132 149]
[133 148]
[134 147]
[135 146]
[136 143]
[137 142]
[167 178]
[168 177]
[169 176]
[170 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
