%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:46:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAUUGCUGAAACAAAGGACCAAUGCCCAGGGCGGUCCUUAAUUCCUCCCUGCAGUUUGAAACUGUCAGGUUGCCGUCUAGGUAGCGGUUGUGCUUGCUGAGGCUGCACUUGCUGACACUGCAGCUGCGACGCGGCUAAGAGGCGCAGAGCGAGGAGUCGGGAUUUGGUCGCGAGCGGCGACGAGCAUUUGUGCAGA\
) } def
/len { sequence length } bind def

/coor [
[100.66684723 279.81265259]
[87.44754028 287.93850708]
[71.97927094 286.70880127]
[60.20990372 276.59634399]
[56.66500473 261.48959351]
[62.70766068 247.19744873]
[76.01434326 239.21546936]
[77.20309448 224.26264954]
[78.39183807 209.30982971]
[70.78153992 199.89855957]
[71.65637970 187.42501831]
[81.09142303 178.62031555]
[82.51726532 163.68823242]
[83.94309998 148.75614929]
[70.66551971 141.77720642]
[59.17485428 151.41900635]
[47.68418503 161.06082153]
[36.19351959 170.70263672]
[24.70285225 180.34445190]
[13.21218586 189.98626709]
[1.72151959 199.62808228]
[-0.06836978 204.55416870]
[-3.25439405 207.95489502]
[-7.01883984 209.55360413]
[-10.55301476 209.43948364]
[-22.48944283 218.52362061]
[-34.42586899 227.60777283]
[-43.36832428 242.01155090]
[-59.68471527 237.40592957]
[-59.77591324 220.45222473]
[-43.51001358 215.67134094]
[-31.57358742 206.58718872]
[-19.63715935 197.50305176]
[-7.92029476 188.13742065]
[3.57037210 178.49560547]
[15.06103897 168.85379028]
[26.55170441 159.21197510]
[38.04237366 149.57015991]
[49.53303909 139.92834473]
[61.02370453 130.28652954]
[62.42417526 86.41271973]
[93.44351959 70.15805054]
[93.91944122 55.16559982]
[94.39536285 40.17315292]
[94.87127686 25.18070412]
[95.34719849 10.18825626]
[95.82312012 -4.80419207]
[96.29903412 -19.79664040]
[87.69538879 -32.08391953]
[73.44432068 -36.76442337]
[59.19325638 -41.44492340]
[44.94218826 -46.12542725]
[30.65443993 -50.69272232]
[16.33090591 -55.14653015]
[2.00737262 -59.60033417]
[-12.31616116 -64.05413818]
[-26.63969421 -68.50794220]
[-43.55979919 -67.43724060]
[-49.27260971 -83.39970398]
[-35.51543045 -93.30810547]
[-22.18588829 -82.83148193]
[-7.86235523 -78.37767029]
[6.46117830 -73.92386627]
[20.78471184 -69.47006226]
[35.10824585 -65.01625824]
[42.43671417 -66.03329468]
[49.62269211 -60.37649155]
[63.87375641 -55.69599152]
[78.12482452 -51.01548767]
[92.37589264 -46.33498764]
[96.67771149 -52.47862625]
[109.58318329 -70.90954590]
[100.31079865 -82.70034790]
[91.03841400 -94.49114227]
[81.76602936 -106.28193665]
[66.07124329 -109.60659027]
[59.01414108 -124.01411438]
[66.00832367 -138.45230103]
[81.68845367 -141.84539795]
[94.02607727 -131.59051514]
[93.55682373 -115.55432129]
[102.82920837 -103.76352692]
[112.10159302 -91.97273254]
[121.37397766 -80.18193054]
[136.36642456 -80.65785217]
[144.87232971 -93.01300049]
[143.30422974 -105.82253265]
[150.65190125 -115.94015503]
[162.53117371 -118.25779724]
[171.23202515 -130.47644043]
[179.93287659 -142.69506836]
[188.63372803 -154.91371155]
[197.33459473 -167.13235474]
[206.03544617 -179.35099792]
[214.73629761 -191.56962585]
[223.43714905 -203.78826904]
[225.86984253 -212.60414124]
[232.37425232 -216.13026428]
[241.26786804 -228.20932007]
[240.10697937 -241.06214905]
[247.77195740 -250.94155884]
[259.71878052 -252.88113403]
[268.80291748 -264.81756592]
[277.88708496 -276.75396729]
[286.97122192 -288.69039917]
[296.05535889 -300.62683105]
[305.13952637 -312.56326294]
[297.97222900 -328.59899902]
[299.89755249 -345.96820068]
[310.29620361 -359.90237427]
[326.23529053 -366.62197876]
[343.29479980 -364.36132812]
[351.99563599 -376.57998657]
[360.69650269 -388.79861450]
[369.39733887 -401.01727295]
[366.52969360 -416.55920410]
[375.56045532 -429.52920532]
[391.13186646 -432.23239136]
[404.00564575 -423.06500244]
[406.54403687 -407.46588135]
[397.24105835 -394.68972778]
[381.61599731 -392.31640625]
[372.91513062 -380.09777832]
[364.21429443 -367.87911987]
[355.51342773 -355.66049194]
[361.97277832 -344.78900146]
[363.84393311 -332.23529053]
[360.81347656 -319.86187744]
[353.29794312 -309.51800537]
[342.38684082 -302.76345825]
[329.68487549 -300.63320923]
[317.07592773 -303.47912598]
[307.99179077 -291.54269409]
[298.90765381 -279.60626221]
[289.82351685 -267.66983032]
[280.73934937 -255.73341370]
[271.65521240 -243.79698181]
[270.38024902 -226.29891968]
[253.34692383 -219.31570435]
[244.45330811 -207.23664856]
[235.65579224 -195.08741760]
[226.95494080 -182.86877441]
[218.25407410 -170.65014648]
[209.55322266 -158.43150330]
[200.85237122 -146.21286011]
[192.15151978 -133.99421692]
[183.45066833 -121.77558136]
[174.74981689 -109.55694580]
[174.03067017 -92.02724457]
[157.22747803 -84.50710297]
[148.72157288 -72.15195465]
[111.29148102 -19.32072067]
[110.81556702 -4.32827282]
[110.33964539 10.66417503]
[109.86373138 25.65662384]
[109.38780975 40.64907074]
[108.91188812 55.64152145]
[108.43597412 70.63396454]
[117.67111969 71.84591675]
[126.78342438 76.05429840]
[134.79054260 83.24799347]
[140.71896362 93.09512329]
[143.70736694 104.95098114]
[143.10522461 117.89854431]
[138.55628967 130.81945801]
[148.55781555 141.99841309]
[163.52568054 147.12420654]
[166.24549866 161.76838684]
[176.24702454 172.94734192]
[186.24856567 184.12631226]
[196.25010681 195.30528259]
[206.25163269 206.48425293]
[222.12568665 208.80677795]
[230.08236694 222.73771667]
[224.01799011 237.59042358]
[208.58462524 241.97117615]
[195.62144470 232.51943970]
[195.07266235 216.48577881]
[185.07113647 205.30680847]
[175.06959534 194.12785339]
[165.06806946 182.94888306]
[155.06652832 171.76991272]
[140.81404114 167.44372559]
[137.37884521 151.99995422]
[127.37731934 140.82098389]
[120.25178528 143.16123962]
[124.93206024 157.41238403]
[110.68085480 162.09243774]
[106.00071716 147.84173584]
[98.87518311 150.18199158]
[97.44934082 165.11407471]
[96.02349854 180.04614258]
[104.06164551 196.60780334]
[93.34466553 210.49858093]
[92.15591431 225.45140076]
[90.96716309 240.40422058]
[102.84553528 250.38839722]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 196]
[8 195]
[9 194]
[12 192]
[13 191]
[14 190]
[15 40]
[16 39]
[17 38]
[18 37]
[19 36]
[20 35]
[21 34]
[25 33]
[26 32]
[27 31]
[42 158]
[43 157]
[44 156]
[45 155]
[46 154]
[47 153]
[48 152]
[49 70]
[50 69]
[51 68]
[52 67]
[53 65]
[54 64]
[55 63]
[56 62]
[57 61]
[72 84]
[73 83]
[74 82]
[75 81]
[85 151]
[86 150]
[89 148]
[90 147]
[91 146]
[92 145]
[93 144]
[94 143]
[95 142]
[96 141]
[98 140]
[99 139]
[102 137]
[103 136]
[104 135]
[105 134]
[106 133]
[107 132]
[112 125]
[113 124]
[114 123]
[115 122]
[165 185]
[166 184]
[168 182]
[169 181]
[170 180]
[171 179]
[172 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
