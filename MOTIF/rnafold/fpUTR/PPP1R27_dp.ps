%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:57:02 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PPP1R27)
} def

/sequence { (\
CGACAGGAGCCCUCAAGCUGAUCUGGUCGGGACCGGAUACAUUAUUAACCCCAGUGCAGUAGGGUCCCCAGGGGCAACCUGCCCCACAGCGCCCAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 29 0.023768785 ubox
1 91 0.130038605 ubox
2 14 0.016611138 ubox
2 23 0.006652184 ubox
2 28 0.065755003 ubox
2 66 0.004152420 ubox
2 90 0.135770664 ubox
3 13 0.013187371 ubox
3 22 0.006620773 ubox
3 27 0.065296575 ubox
3 55 0.008547375 ubox
4 20 0.007384188 ubox
4 25 0.045316844 ubox
4 26 0.052261644 ubox
4 54 0.008825085 ubox
5 13 0.043444192 ubox
5 19 0.007333080 ubox
5 24 0.059728625 ubox
6 12 0.047889565 ubox
6 13 0.009079818 ubox
6 14 0.007961771 ubox
6 18 0.007259623 ubox
6 23 0.060741920 ubox
6 24 0.028764271 ubox
6 50 0.003380803 ubox
6 51 0.004889429 ubox
6 52 0.010242490 ubox
6 66 0.010604667 ubox
6 67 0.581724995 ubox
6 68 0.750227933 ubox
6 69 0.267146382 ubox
6 93 0.039222300 ubox
6 94 0.081344861 ubox
7 11 0.047139922 ubox
7 12 0.010203158 ubox
7 13 0.006501235 ubox
7 14 0.014521020 ubox
7 22 0.053417473 ubox
7 23 0.031038248 ubox
7 49 0.003375950 ubox
7 50 0.004905383 ubox
7 51 0.010224110 ubox
7 65 0.004192347 ubox
7 66 0.583619224 ubox
7 67 0.752636448 ubox
7 68 0.261952026 ubox
7 92 0.039225213 ubox
7 93 0.081207069 ubox
8 13 0.013622029 ubox
8 19 0.064052671 ubox
8 22 0.025790028 ubox
8 65 0.497419373 ubox
9 18 0.070304357 ubox
9 27 0.004167761 ubox
9 65 0.847985586 ubox
9 90 0.025673749 ubox
9 92 0.056493828 ubox
10 17 0.070175604 ubox
10 26 0.004636898 ubox
10 63 0.044910821 ubox
10 64 0.991820560 ubox
10 89 0.024038467 ubox
10 91 0.056005296 ubox
11 25 0.004723313 ubox
11 26 0.007865098 ubox
11 62 0.041166617 ubox
11 63 0.992327072 ubox
11 64 0.023903448 ubox
12 25 0.007903626 ubox
12 59 0.008188788 ubox
12 62 0.992425334 ubox
12 63 0.024460446 ubox
12 64 0.008330224 ubox
12 89 0.019439945 ubox
13 21 0.013021589 ubox
13 26 0.003585111 ubox
13 58 0.008190566 ubox
13 61 0.982101115 ubox
13 62 0.024079478 ubox
13 63 0.008198352 ubox
13 64 0.005317907 ubox
13 88 0.018014734 ubox
14 20 0.013797203 ubox
14 25 0.005473581 ubox
14 56 0.006766862 ubox
14 62 0.010332564 ubox
14 63 0.007944758 ubox
15 19 0.011187485 ubox
15 24 0.005294440 ubox
15 55 0.004252839 ubox
16 43 0.003304148 ubox
17 27 0.008226342 ubox
17 42 0.003571389 ubox
17 55 0.083285549 ubox
17 57 0.034739625 ubox
17 60 0.985921130 ubox
17 90 0.051295619 ubox
18 26 0.008526937 ubox
18 54 0.083750327 ubox
18 56 0.034600661 ubox
18 59 0.991567223 ubox
18 89 0.051323615 ubox
19 25 0.008319740 ubox
19 41 0.029492461 ubox
19 53 0.083729204 ubox
19 58 0.991370759 ubox
19 88 0.051239270 ubox
20 24 0.003872150 ubox
20 28 0.010394099 ubox
20 40 0.032436658 ubox
20 52 0.083502161 ubox
20 57 0.991446842 ubox
20 87 0.050751496 ubox
21 27 0.010581035 ubox
21 38 0.141918800 ubox
21 55 0.042656146 ubox
22 26 0.009815160 ubox
22 37 0.146086336 ubox
22 54 0.007440585 ubox
23 36 0.146826269 ubox
23 54 0.985545174 ubox
23 71 0.007324774 ubox
24 35 0.146730267 ubox
24 53 0.985455964 ubox
24 70 0.014551850 ubox
24 95 0.006403953 ubox
25 34 0.146986977 ubox
25 50 0.008802157 ubox
25 51 0.010067540 ubox
25 52 0.984517708 ubox
25 69 0.015425495 ubox
25 93 0.004366398 ubox
25 94 0.006992440 ubox
26 33 0.146947491 ubox
26 38 0.013826913 ubox
26 49 0.010025785 ubox
26 50 0.013667694 ubox
26 51 0.926069577 ubox
26 68 0.010950044 ubox
26 90 0.003317124 ubox
26 92 0.004863984 ubox
26 93 0.006957159 ubox
27 32 0.136003339 ubox
27 36 0.130903457 ubox
27 37 0.065890886 ubox
27 39 0.003165785 ubox
27 48 0.011822163 ubox
27 89 0.003205284 ubox
27 91 0.004529229 ubox
28 35 0.145316408 ubox
28 36 0.065010181 ubox
28 91 0.005297309 ubox
29 34 0.145066328 ubox
29 46 0.011423973 ubox
29 50 0.839155581 ubox
29 51 0.321722845 ubox
29 52 0.042071689 ubox
29 68 0.076455785 ubox
29 69 0.008335181 ubox
30 43 0.003291863 ubox
30 45 0.011720840 ubox
30 46 0.016195343 ubox
30 49 0.843023588 ubox
30 50 0.454651055 ubox
30 51 0.048073630 ubox
30 52 0.004948275 ubox
30 67 0.080833789 ubox
30 68 0.006983610 ubox
31 42 0.003201475 ubox
31 43 0.015971241 ubox
31 45 0.012248482 ubox
31 46 0.052700922 ubox
31 49 0.454445411 ubox
31 50 0.053248734 ubox
31 51 0.005263244 ubox
31 66 0.081006265 ubox
31 67 0.004959039 ubox
32 42 0.015275823 ubox
32 45 0.051073925 ubox
32 65 0.081145893 ubox
33 63 0.003797411 ubox
33 64 0.081076010 ubox
34 62 0.005227714 ubox
34 63 0.080879001 ubox
35 43 0.051689082 ubox
35 46 0.058786328 ubox
35 50 0.110111342 ubox
35 51 0.007175176 ubox
35 52 0.005846935 ubox
36 42 0.043510835 ubox
36 43 0.321434475 ubox
36 45 0.053868792 ubox
36 46 0.635775915 ubox
36 49 0.110223455 ubox
36 50 0.009967535 ubox
36 51 0.005859645 ubox
37 42 0.283060222 ubox
37 45 0.642371472 ubox
37 60 0.035347137 ubox
38 44 0.638515395 ubox
38 47 0.093663151 ubox
38 56 0.011766722 ubox
38 59 0.034540009 ubox
38 61 0.054040173 ubox
39 43 0.566255510 ubox
39 46 0.090137897 ubox
39 55 0.020009914 ubox
39 60 0.057799366 ubox
40 54 0.020602425 ubox
40 56 0.092738687 ubox
40 59 0.057815642 ubox
41 55 0.093012607 ubox
42 48 0.012903396 ubox
42 54 0.092420000 ubox
42 62 0.008328417 ubox
43 47 0.011982993 ubox
43 53 0.083283357 ubox
43 56 0.064116382 ubox
43 61 0.010228553 ubox
44 55 0.068849246 ubox
44 60 0.010585552 ubox
45 54 0.069057058 ubox
45 59 0.010534995 ubox
46 53 0.061535265 ubox
46 56 0.005525031 ubox
46 58 0.009541386 ubox
47 55 0.005271152 ubox
48 55 0.038449557 ubox
48 65 0.030321676 ubox
49 54 0.039498638 ubox
49 64 0.032024745 ubox
50 63 0.031952899 ubox
50 64 0.015900332 ubox
51 62 0.031815975 ubox
51 63 0.016171701 ubox
52 62 0.016369385 ubox
54 87 0.005878067 ubox
54 92 0.009003118 ubox
55 61 0.003440136 ubox
55 86 0.005942600 ubox
55 91 0.009021571 ubox
56 85 0.005965622 ubox
56 90 0.009079952 ubox
57 89 0.009067816 ubox
59 82 0.006141450 ubox
59 87 0.008274955 ubox
60 81 0.006144280 ubox
60 86 0.008111163 ubox
61 80 0.006148688 ubox
62 68 0.004114083 ubox
62 69 0.017488821 ubox
62 79 0.006150375 ubox
62 84 0.006666611 ubox
62 94 0.064475839 ubox
63 67 0.004067879 ubox
63 68 0.017448125 ubox
63 69 0.006039813 ubox
63 78 0.006120325 ubox
63 83 0.006674835 ubox
63 93 0.064549504 ubox
64 68 0.006044100 ubox
64 75 0.005798349 ubox
64 82 0.006674337 ubox
64 90 0.003337840 ubox
64 92 0.064552592 ubox
65 74 0.005815736 ubox
65 81 0.004222160 ubox
65 89 0.003303503 ubox
65 91 0.063334034 ubox
66 73 0.005854906 ubox
67 72 0.005855390 ubox
69 81 0.008493680 ubox
70 80 0.009215214 ubox
71 79 0.009239068 ubox
71 84 0.005024121 ubox
71 85 0.990770725 ubox
71 93 0.005034536 ubox
71 94 0.017171830 ubox
72 78 0.009225315 ubox
72 83 0.004595203 ubox
72 84 0.991835945 ubox
72 85 0.005259462 ubox
72 92 0.004958256 ubox
72 93 0.015957372 ubox
72 94 0.125266588 ubox
73 82 0.004101083 ubox
73 83 0.991849226 ubox
73 84 0.004388301 ubox
73 92 0.014616227 ubox
73 93 0.125575484 ubox
74 82 0.991856437 ubox
74 83 0.003273686 ubox
74 90 0.012774532 ubox
74 92 0.125731400 ubox
75 81 0.991641337 ubox
75 89 0.012595106 ubox
75 91 0.125802556 ubox
76 80 0.803658207 ubox
79 89 0.123416987 ubox
80 86 0.007263370 ubox
80 88 0.123585239 ubox
80 91 0.003256454 ubox
81 85 0.007450931 ubox
81 87 0.123281467 ubox
81 90 0.019420440 ubox
82 89 0.019393249 ubox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
11 63 0.9500000 lbox
12 62 0.9500000 lbox
13 61 0.9500000 lbox
17 60 0.9500000 lbox
18 59 0.9500000 lbox
19 58 0.9500000 lbox
20 57 0.9500000 lbox
23 54 0.9500000 lbox
24 53 0.9500000 lbox
25 52 0.9500000 lbox
26 51 0.9500000 lbox
29 50 0.9500000 lbox
30 49 0.9500000 lbox
71 85 0.9500000 lbox
72 84 0.9500000 lbox
73 83 0.9500000 lbox
74 82 0.9500000 lbox
75 81 0.9500000 lbox
76 80 0.9500000 lbox
showpage
end
%%EOF
