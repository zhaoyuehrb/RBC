%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:17:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCGGUGAGUAGGUAGUGCGGAUGCGGGCGCAGAACUACGUUUCCCAGCAGGCAUACAGUUGGUGGGGCGGGGUGUGUGUGUGUGUUGGGAGGCGGGGGUCCCUCUCCUUUGGCUUGGGGCUCCGGAGUUGCCACUGCCGCCGGCGCUGGUAAGCUUUUCAGG\
) } def
/len { sequence length } bind def

/coor [
[165.90150452 275.89913940]
[160.09574890 262.06823730]
[154.15937805 248.29292297]
[148.09292603 234.57440186]
[142.02647400 220.85586548]
[135.96002197 207.13732910]
[129.89356995 193.41879272]
[123.82711029 179.70025635]
[117.76065826 165.98173523]
[112.15478516 161.11460876]
[111.71194458 151.94570923]
[105.90618896 138.11482239]
[100.10044098 124.28395081]
[85.78287506 119.81098175]
[73.13624573 127.87712097]
[60.48961258 135.94326782]
[56.96164322 151.11532593]
[44.02125549 159.11538696]
[29.57876205 155.65850830]
[16.93212891 163.72465515]
[4.28549576 171.79078674]
[-8.36113739 179.85693359]
[-9.16583633 195.35313416]
[-18.95143700 207.39562988]
[-33.95517731 211.35383606]
[-48.40781403 205.70573425]
[-56.75201035 192.62315369]
[-55.77925491 177.13659668]
[-45.86359024 165.20097351]
[-30.81779480 161.40576172]
[-16.42728043 167.21029663]
[-3.78064799 159.14416504]
[8.86598492 151.07801819]
[21.51261902 143.01187134]
[24.46798325 128.45846558]
[37.17856216 120.09809875]
[52.42346573 123.29663849]
[65.07009888 115.23049164]
[77.71673584 107.16434479]
[79.98845673 95.12096405]
[87.47140503 87.37160492]
[79.88960266 74.42879486]
[72.30780792 61.48598862]
[64.72600555 48.54317856]
[57.14420700 35.60036850]
[49.56240845 22.65755844]
[41.98060989 9.71474838]
[34.39881134 -3.22806144]
[26.81701088 -16.17087173]
[19.23521233 -29.11368179]
[11.65341377 -42.05649185]
[4.07161427 -54.99930191]
[-9.57988834 -62.99599075]
[-9.33676910 -77.88861084]
[-16.91856766 -90.83142090]
[-24.50036621 -103.77423096]
[-32.08216476 -116.71704102]
[-39.66396332 -129.65985107]
[-47.24576569 -142.60266113]
[-54.82756424 -155.54547119]
[-72.77490997 -164.66081238]
[-72.16696930 -183.96176147]
[-80.23310852 -196.60839844]
[-94.17744446 -204.08276367]
[-94.49805450 -218.97392273]
[-102.56420135 -231.62055969]
[-116.17930603 -241.72329712]
[-110.24041748 -257.60302734]
[-93.33722687 -256.29217529]
[-89.91756439 -239.68669128]
[-81.85142517 -227.04006958]
[-68.48403931 -220.47026062]
[-67.58647919 -204.67454529]
[-59.52033234 -192.02790833]
[-49.33265305 -190.71359253]
[-41.39948654 -183.84687805]
[-38.51946640 -173.52891541]
[-41.88475418 -163.12727356]
[-34.30295563 -150.18446350]
[-26.72115517 -137.24165344]
[-19.13935661 -124.29884338]
[-11.55755711 -111.35603333]
[-3.97575808 -98.41322327]
[3.60604095 -85.47041321]
[16.71524239 -78.39947510]
[17.01442337 -62.58110046]
[24.59622383 -49.63829041]
[32.17802048 -36.69548035]
[39.75982285 -23.75267029]
[47.34162140 -10.80986023]
[54.92341995 2.13294911]
[62.50521851 15.07575893]
[70.08702087 28.01856804]
[77.66881561 40.96138000]
[85.25061798 53.90419006]
[92.83241272 66.84700012]
[100.41421509 79.78981018]
[114.81385803 83.99102783]
[128.16604614 77.15589142]
[141.51823425 70.32074738]
[154.87042236 63.48561096]
[168.22259521 56.65047073]
[181.57478333 49.81533432]
[194.92697144 42.98019409]
[208.27915955 36.14505386]
[210.78999329 20.94630623]
[221.64202881 10.26517391]
[236.52658081 8.04843140]
[249.70457458 14.93890476]
[263.05676270 8.10376549]
[274.40072632 -4.49586964]
[289.64828491 2.91684246]
[286.74621582 19.62056351]
[269.89190674 21.45595169]
[256.53970337 28.29109001]
[254.42408752 43.01054001]
[243.92251587 53.78925705]
[228.91220093 56.34736252]
[215.11430359 49.49724197]
[201.76211548 56.33237839]
[188.40992737 63.16751862]
[175.05773926 70.00265503]
[161.70555115 76.83779907]
[148.35336304 83.67293549]
[135.00117493 90.50807190]
[121.64899445 97.34321594]
[136.46815491 95.02099609]
[148.17774963 104.39570618]
[149.15422058 119.36388397]
[138.76181030 130.18045044]
[123.76656342 129.80320740]
[113.93132019 118.47819519]
[119.73706818 132.30908203]
[125.54282379 146.13995361]
[131.47920227 159.91528320]
[137.54565430 173.63380432]
[143.61210632 187.35234070]
[149.67855835 201.07087708]
[155.74501038 214.78941345]
[161.81146240 228.50794983]
[167.87791443 242.22647095]
[174.23858643 248.84512329]
[173.92662048 256.26251221]
[179.73237610 270.09338379]
[200.78912354 273.43774414]
[215.53134155 288.65533447]
[218.17253113 309.54321289]
[207.81408691 327.71981812]
[215.14958191 340.80377197]
[222.48509216 353.88775635]
[236.85134888 361.79614258]
[236.91503906 378.19519043]
[222.61064148 386.21490479]
[208.65330505 377.60534668]
[209.40112305 361.22326660]
[202.06561279 348.13928223]
[194.73010254 335.05532837]
[185.61648560 336.43640137]
[176.45304871 335.24014282]
[167.95626831 331.54690552]
[160.79412842 325.63290405]
[155.53363037 317.94940186]
[152.59582520 309.08840942]
[152.22222900 299.73703003]
[154.45501709 290.62420654]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 144]
[2 143]
[3 141]
[4 140]
[5 139]
[6 138]
[7 137]
[8 136]
[9 135]
[11 134]
[12 133]
[13 132]
[14 39]
[15 38]
[16 37]
[19 34]
[20 33]
[21 32]
[22 31]
[41 97]
[42 96]
[43 95]
[44 94]
[45 93]
[46 92]
[47 91]
[48 90]
[49 89]
[50 88]
[51 87]
[52 86]
[54 84]
[55 83]
[56 82]
[57 81]
[58 80]
[59 79]
[60 78]
[62 74]
[63 73]
[65 71]
[66 70]
[98 126]
[99 125]
[100 124]
[101 123]
[102 122]
[103 121]
[104 120]
[105 119]
[109 115]
[110 114]
[148 157]
[149 156]
[150 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
