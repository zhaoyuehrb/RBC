%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:46:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCGGAGGUGCGACGGCUCCUCCGCGCGCGCCCGCUGCACCCCAGCCCGCCCGCCGCCCCUCCCGGCCCUCCGCAGCCUCGGCCCGCCCUCGCCGCAGAUAUAAGGCGGCCCAGGCGGUGGCUGCUCCGAGCCCGGACGCCGCCGCCCACCAGUCAGCCGGCGUCCCC\
) } def
/len { sequence length } bind def

/coor [
[91.46481323 142.34733582]
[83.98347473 141.02967834]
[76.71007538 138.37699890]
[69.05061340 151.27398682]
[61.39114380 164.17098999]
[53.73167419 177.06797791]
[46.07220840 189.96498108]
[38.41273880 202.86198425]
[30.75327110 215.75897217]
[30.35900307 231.57527161]
[17.20753098 238.56727600]
[9.54806328 251.46426392]
[9.88718510 267.85992432]
[-4.28049183 276.11877441]
[-18.38047600 267.74487305]
[-17.90791321 251.35252380]
[-3.34893465 243.80479431]
[4.31053305 230.90780640]
[4.15694571 216.01399231]
[17.85627365 208.09951782]
[25.51574135 195.20251465]
[33.17520905 182.30551147]
[40.83467865 169.40852356]
[48.49414444 156.51152039]
[56.15361404 143.61451721]
[63.81307983 130.71752930]
[56.03477478 117.89184570]
[41.05781937 118.72302246]
[26.08086586 119.55419159]
[12.73063087 128.04429626]
[-0.40582177 121.02411652]
[-15.38277626 121.85529327]
[-25.89511299 133.35000610]
[-41.09571457 133.97958374]
[-51.98938751 123.88684082]
[-66.96633911 124.71800995]
[-81.94329834 125.54917908]
[-96.92024994 126.38035583]
[-108.64682770 137.32873535]
[-124.49633789 134.84426880]
[-132.31039429 120.83284760]
[-126.09472656 106.04282379]
[-110.61745453 101.81983185]
[-97.75141907 111.40339661]
[-82.77446747 110.57222748]
[-67.79751587 109.74105835]
[-52.82056046 108.90988159]
[-43.11057281 97.67370605]
[-27.93365097 96.61742401]
[-16.21394730 106.87833405]
[-1.23699391 106.04716492]
[11.04198837 97.61651611]
[25.24969292 104.57723999]
[40.22664642 103.74606323]
[55.20360184 102.91489410]
[58.88496017 89.83569336]
[66.05078888 79.19993591]
[54.96565628 69.09449768]
[43.88052368 58.98906326]
[28.10665703 59.96923447]
[16.31522942 49.44602966]
[15.50188541 33.66268539]
[26.14916611 21.98317528]
[41.94022751 21.33674622]
[53.50651550 32.10691452]
[53.98595810 47.90393066]
[65.07109070 58.00936508]
[76.15622711 68.11479950]
[95.22898865 60.47242355]
[115.57239532 63.35723495]
[123.93473816 50.90447617]
[132.29707336 38.45171356]
[132.71287537 18.32329941]
[150.36796570 10.49358177]
[158.26445007 -2.25967550]
[166.16093445 -15.01293278]
[174.05740356 -27.76618958]
[181.95388794 -40.51944733]
[189.85037231 -53.27270508]
[186.42889404 -60.98263550]
[186.35800171 -69.32311249]
[189.57446289 -76.91650391]
[195.47824097 -82.53836060]
[203.04289246 -85.31471252]
[210.99356079 -84.85751343]
[219.81034851 -96.99276733]
[228.62712097 -109.12802124]
[237.44390869 -121.26327515]
[246.26068115 -133.39852905]
[241.62554932 -148.08940125]
[246.47299194 -162.52394104]
[258.74536133 -171.23330688]
[273.61489868 -171.04838562]
[282.43167114 -183.18365479]
[291.24847412 -195.31890869]
[300.06524658 -207.45416260]
[308.88201904 -219.58941650]
[303.18914795 -233.92799377]
[306.17446899 -249.06376648]
[316.88531494 -260.16696167]
[331.90396118 -263.69458008]
[346.43798828 -258.52099609]
[355.84960938 -246.29704285]
[357.13565063 -230.92338562]
[349.88574219 -217.30566406]
[336.41326904 -209.78926086]
[321.01727295 -210.77262878]
[312.20050049 -198.63737488]
[303.38372803 -186.50212097]
[294.56695557 -174.36686707]
[285.75015259 -162.23161316]
[290.52096558 -148.14695740]
[286.03024292 -133.78390503]
[273.80010986 -124.71321106]
[258.39593506 -124.58174896]
[249.57916260 -112.44649506]
[240.76237488 -100.31124115]
[231.94560242 -88.17598724]
[223.12881470 -76.04073334]
[223.08885193 -54.41075897]
[202.60363770 -45.37622070]
[194.70715332 -32.62296295]
[186.81066895 -19.86970711]
[178.91418457 -7.11645031]
[171.01770020 5.63680696]
[163.12121582 18.39006424]
[166.35470581 28.13372040]
[163.61343384 38.25530624]
[155.57446289 45.32637405]
[144.74983215 46.81405640]
[136.38749695 59.26681519]
[128.02516174 71.71957397]
[136.38548279 83.83557892]
[139.77198792 98.16123199]
[137.72172546 112.73823547]
[130.51499939 125.57395172]
[139.99066162 137.20201111]
[149.46632385 148.83006287]
[158.94198608 160.45812988]
[168.41764832 172.08618164]
[177.89332581 183.71424866]
[187.36898804 195.34230042]
[196.84465027 206.97036743]
[202.93621826 209.69940186]
[206.21501160 214.40164185]
[206.44601440 219.20768738]
[215.48553467 231.17794800]
[230.71795654 229.21090698]
[244.88693237 235.13842773]
[254.18110657 247.36601257]
[256.10040283 262.60452271]
[250.12849426 276.75485229]
[237.87182617 286.01065063]
[222.62738037 287.88214111]
[208.49583435 281.86593628]
[199.27850342 269.58032227]
[197.45478821 254.33007812]
[203.51528931 240.21746826]
[194.47576904 228.24720764]
[185.21658325 216.44602966]
[175.74092102 204.81797791]
[166.26525879 193.18991089]
[156.78959656 181.56185913]
[147.31393433 169.93379211]
[137.83825684 158.30572510]
[128.36259460 146.67767334]
[118.88693237 135.04960632]
[112.82779694 138.58406067]
[106.10755920 141.05487061]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 26]
[4 25]
[5 24]
[6 23]
[7 22]
[8 21]
[9 20]
[11 18]
[12 17]
[27 55]
[28 54]
[29 53]
[31 51]
[32 50]
[35 47]
[36 46]
[37 45]
[38 44]
[57 68]
[58 67]
[59 66]
[70 132]
[71 131]
[72 130]
[74 126]
[75 125]
[76 124]
[77 123]
[78 122]
[79 121]
[85 119]
[86 118]
[87 117]
[88 116]
[89 115]
[93 111]
[94 110]
[95 109]
[96 108]
[97 107]
[136 167]
[137 166]
[138 165]
[139 164]
[140 163]
[141 162]
[142 161]
[143 160]
[146 159]
[147 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
