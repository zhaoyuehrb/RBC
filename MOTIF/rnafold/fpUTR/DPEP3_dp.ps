%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:32:34 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DPEP3)
} def

/sequence { (\
GCUUGGGGGCGGAAAAGCCGUGGCGCCCCCUUGCGUGGCGCGUCGGUCUCAGAGUCGCGUGACUUCAACCCCCUCUUCGGGAGGCUGGGUCGUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 34 0.997848610 ubox
1 36 0.004936564 ubox
1 55 0.010301108 ubox
1 93 0.007821702 ubox
2 33 0.998588221 ubox
2 35 0.005088435 ubox
2 54 0.011286069 ubox
2 92 0.008543147 ubox
3 53 0.011279589 ubox
4 51 0.003923389 ubox
4 52 0.009838245 ubox
5 30 0.999772314 ubox
5 31 0.004948717 ubox
5 50 0.004185975 ubox
6 29 0.999900485 ubox
6 30 0.004541558 ubox
6 49 0.004135375 ubox
6 50 0.011577446 ubox
7 28 0.999902691 ubox
7 29 0.004006604 ubox
7 48 0.004083243 ubox
7 49 0.011841564 ubox
8 27 0.999904241 ubox
8 28 0.003381081 ubox
8 47 0.003944364 ubox
8 48 0.011876671 ubox
9 21 0.013736624 ubox
9 26 0.999814255 ubox
9 47 0.011891469 ubox
10 20 0.041067090 ubox
10 25 0.999044289 ubox
10 45 0.003933371 ubox
10 46 0.011908772 ubox
11 19 0.096392016 ubox
11 21 0.003871453 ubox
11 24 0.991212110 ubox
11 44 0.003891648 ubox
12 18 0.104933023 ubox
12 44 0.011842583 ubox
13 43 0.011411656 ubox
17 24 0.058090062 ubox
17 39 0.007105022 ubox
17 41 0.008520361 ubox
18 23 0.063378504 ubox
18 38 0.007106564 ubox
18 40 0.006036968 ubox
18 42 0.003837623 ubox
19 37 0.007102709 ubox
19 40 0.008312732 ubox
20 24 0.005323308 ubox
20 36 0.004313234 ubox
20 39 0.010287211 ubox
21 38 0.010279075 ubox
23 34 0.003718547 ubox
23 36 0.011647849 ubox
24 33 0.003824788 ubox
24 35 0.011893921 ubox
25 34 0.011896618 ubox
26 33 0.011863968 ubox
31 62 0.012374657 ubox
31 68 0.006387636 ubox
32 61 0.013576739 ubox
32 67 0.013163115 ubox
33 60 0.033386998 ubox
33 66 0.013938452 ubox
33 93 0.003886180 ubox
34 59 0.037478807 ubox
34 92 0.004376497 ubox
35 58 0.079185771 ubox
35 60 0.007436702 ubox
35 63 0.919350351 ubox
35 91 0.003838380 ubox
35 93 0.006476291 ubox
36 51 0.014720212 ubox
36 57 0.079206550 ubox
36 59 0.008222146 ubox
36 61 0.003519867 ubox
36 62 0.919349509 ubox
36 67 0.016421818 ubox
36 92 0.018061736 ubox
37 48 0.028216871 ubox
37 50 0.016285936 ubox
37 56 0.079262223 ubox
37 58 0.008401450 ubox
37 60 0.012515645 ubox
37 64 0.045995273 ubox
37 66 0.017943319 ubox
37 91 0.024825317 ubox
37 94 0.269676874 ubox
38 47 0.028524118 ubox
38 48 0.004116131 ubox
38 49 0.015212960 ubox
38 55 0.079057723 ubox
38 58 0.133398174 ubox
38 60 0.937700250 ubox
38 63 0.050297330 ubox
38 65 0.015150349 ubox
38 90 0.024309382 ubox
38 93 0.285019175 ubox
39 46 0.028629775 ubox
39 54 0.079020117 ubox
39 57 0.133757588 ubox
39 59 0.941485453 ubox
39 61 0.065436406 ubox
39 89 0.024257954 ubox
39 92 0.286209109 ubox
40 47 0.031515916 ubox
40 55 0.008640783 ubox
40 56 0.133498566 ubox
40 58 0.941592091 ubox
40 60 0.071000462 ubox
40 90 0.024434496 ubox
40 91 0.284326745 ubox
40 93 0.014392866 ubox
41 46 0.031790110 ubox
41 54 0.031326526 ubox
41 57 0.941464624 ubox
41 59 0.071652206 ubox
41 87 0.015498951 ubox
41 89 0.112058133 ubox
41 92 0.015014499 ubox
42 55 0.029552235 ubox
42 56 0.930317994 ubox
42 58 0.071673769 ubox
42 85 0.008814968 ubox
42 86 0.006992276 ubox
42 90 0.003360977 ubox
42 91 0.014874741 ubox
43 53 0.711981960 ubox
43 54 0.101951766 ubox
43 57 0.021414816 ubox
43 84 0.008782497 ubox
43 88 0.280738325 ubox
43 89 0.005703056 ubox
44 52 0.749344778 ubox
44 57 0.069452396 ubox
44 83 0.008725647 ubox
44 87 0.286812895 ubox
44 88 0.004571954 ubox
44 92 0.007023783 ubox
45 56 0.076286779 ubox
45 70 0.009248940 ubox
45 86 0.286930522 ubox
45 91 0.007310438 ubox
46 55 0.080802398 ubox
46 69 0.009286040 ubox
46 85 0.287219435 ubox
46 90 0.007074922 ubox
47 53 0.396720928 ubox
47 54 0.020307116 ubox
47 68 0.009045424 ubox
47 84 0.286863962 ubox
48 52 0.394858329 ubox
48 54 0.070931081 ubox
48 83 0.286794347 ubox
48 84 0.004726423 ubox
48 89 0.007441218 ubox
49 53 0.064124908 ubox
49 82 0.282093981 ubox
49 83 0.004210636 ubox
49 88 0.007478977 ubox
50 61 0.003615424 ubox
50 80 0.004018128 ubox
50 81 0.240128742 ubox
50 87 0.007558380 ubox
51 60 0.003615801 ubox
51 65 0.009691906 ubox
51 76 0.048077708 ubox
51 77 0.003645059 ubox
51 86 0.007507273 ubox
52 64 0.007109149 ubox
52 65 0.245265726 ubox
52 66 0.112044348 ubox
52 75 0.048650976 ubox
52 77 0.007726965 ubox
52 78 0.012955744 ubox
52 85 0.007203668 ubox
53 64 0.271724636 ubox
53 65 0.079692003 ubox
53 74 0.048509946 ubox
53 76 0.008978310 ubox
53 77 0.010743691 ubox
54 63 0.284831882 ubox
54 64 0.012462241 ubox
54 73 0.048121015 ubox
54 75 0.009790236 ubox
54 76 0.005712894 ubox
55 62 0.285073556 ubox
56 61 0.284629256 ubox
57 93 0.003257554 ubox
58 92 0.003386961 ubox
59 69 0.028156143 ubox
59 93 0.037381056 ubox
60 67 0.040415640 ubox
60 68 0.026718471 ubox
60 92 0.117130381 ubox
61 66 0.041947860 ubox
61 91 0.244180607 ubox
61 94 0.045026704 ubox
62 90 0.244517676 ubox
62 93 0.046009892 ubox
63 89 0.243421648 ubox
63 92 0.046067624 ubox
64 87 0.003168240 ubox
64 88 0.177683540 ubox
64 89 0.168446505 ubox
65 87 0.060639086 ubox
65 88 0.268459248 ubox
65 89 0.011371110 ubox
66 79 0.004594073 ubox
66 80 0.003370441 ubox
66 87 0.327733954 ubox
66 88 0.013990018 ubox
67 86 0.326036916 ubox
68 90 0.844723493 ubox
68 93 0.011104521 ubox
69 80 0.126134153 ubox
69 81 0.047029702 ubox
69 84 0.336038197 ubox
69 88 0.045827989 ubox
69 89 0.894492203 ubox
69 92 0.009015075 ubox
70 79 0.126274680 ubox
70 80 0.090806247 ubox
70 81 0.105631134 ubox
70 83 0.336355116 ubox
70 84 0.014948484 ubox
70 87 0.046030696 ubox
70 88 0.894926325 ubox
70 89 0.021470943 ubox
71 79 0.090693565 ubox
71 80 0.164711933 ubox
71 81 0.347234502 ubox
71 83 0.015187980 ubox
71 84 0.007278574 ubox
71 87 0.890234376 ubox
71 88 0.021766251 ubox
71 89 0.007207402 ubox
72 79 0.164633665 ubox
72 80 0.369509679 ubox
72 81 0.066154659 ubox
72 83 0.007991910 ubox
72 84 0.891224208 ubox
72 87 0.016422783 ubox
72 88 0.007208997 ubox
73 79 0.369405056 ubox
73 80 0.069110248 ubox
73 81 0.009479123 ubox
73 83 0.896013722 ubox
73 84 0.007730554 ubox
73 87 0.007161973 ubox
74 79 0.062771465 ubox
74 80 0.010986514 ubox
74 81 0.019674280 ubox
74 82 0.895685309 ubox
74 83 0.004284542 ubox
74 84 0.022081820 ubox
75 79 0.014144653 ubox
75 80 0.046940963 ubox
75 81 0.894624863 ubox
75 83 0.024394496 ubox
75 84 0.008579486 ubox
76 80 0.805958346 ubox
76 82 0.024250490 ubox
76 83 0.008427266 ubox
77 81 0.021878685 ubox
77 82 0.006866658 ubox
78 83 0.003506397 ubox
83 91 0.006409520 ubox
83 94 0.007427991 ubox
84 90 0.006437605 ubox
84 93 0.007827030 ubox
85 89 0.006475829 ubox
85 92 0.008410593 ubox
87 94 0.003248441 ubox
88 93 0.004072485 ubox
88 94 0.004087887 ubox
1 34 0.9500000 lbox
2 33 0.9500000 lbox
5 30 0.9500000 lbox
6 29 0.9500000 lbox
7 28 0.9500000 lbox
8 27 0.9500000 lbox
9 26 0.9500000 lbox
10 25 0.9500000 lbox
11 24 0.9500000 lbox
35 63 0.9500000 lbox
36 62 0.9500000 lbox
38 60 0.9500000 lbox
39 59 0.9500000 lbox
40 58 0.9500000 lbox
41 57 0.9500000 lbox
42 56 0.9500000 lbox
43 53 0.9500000 lbox
44 52 0.9500000 lbox
68 90 0.9500000 lbox
69 89 0.9500000 lbox
70 88 0.9500000 lbox
71 87 0.9500000 lbox
72 84 0.9500000 lbox
73 83 0.9500000 lbox
74 82 0.9500000 lbox
75 81 0.9500000 lbox
76 80 0.9500000 lbox
showpage
end
%%EOF
