%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:29:33 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RTL8B)
} def

/sequence { (\
UUCCCGCUACGCCUCGGUGCAGCCCCCGGCGAAGCCCAGCGCAGCUCAGCUAAACUCAGCGGAGCCAGCGCGGCGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 29 0.005286491 ubox
1 32 0.061642979 ubox
1 33 0.495841510 ubox
2 28 0.007701708 ubox
2 29 0.014649611 ubox
2 31 0.062989305 ubox
2 32 0.569700488 ubox
2 33 0.014290216 ubox
2 38 0.008134891 ubox
2 73 0.009736990 ubox
3 17 0.005039993 ubox
3 28 0.021820340 ubox
3 29 0.053419157 ubox
3 31 0.577010446 ubox
3 72 0.012637175 ubox
3 73 0.053065602 ubox
4 16 0.005017326 ubox
4 17 0.023597033 ubox
4 28 0.054367834 ubox
4 29 0.584755277 ubox
4 72 0.053499632 ubox
4 73 0.081338446 ubox
5 16 0.023752543 ubox
5 19 0.010066503 ubox
5 28 0.584667661 ubox
5 31 0.031564189 ubox
5 70 0.021715436 ubox
5 72 0.082008202 ubox
5 75 0.054371890 ubox
5 77 0.352289561 ubox
6 10 0.004096291 ubox
6 12 0.008527526 ubox
6 15 0.023367078 ubox
6 18 0.010484157 ubox
6 20 0.037133919 ubox
6 23 0.559439626 ubox
6 27 0.241149964 ubox
6 30 0.031588581 ubox
6 35 0.552704881 ubox
6 69 0.021729534 ubox
6 71 0.018698637 ubox
6 74 0.053844686 ubox
6 76 0.376249200 ubox
7 11 0.008584648 ubox
7 17 0.010543101 ubox
7 19 0.036600842 ubox
7 22 0.607721065 ubox
7 29 0.031449471 ubox
7 34 0.554844579 ubox
7 68 0.021726267 ubox
7 70 0.018595243 ubox
7 73 0.053482088 ubox
7 75 0.369304096 ubox
8 16 0.010116570 ubox
8 19 0.017379080 ubox
8 21 0.594573955 ubox
8 28 0.026680409 ubox
8 33 0.556902533 ubox
8 43 0.003559973 ubox
8 67 0.020673073 ubox
8 72 0.050517825 ubox
9 18 0.038252774 ubox
10 16 0.015369623 ubox
10 17 0.038936277 ubox
10 19 0.611192463 ubox
10 28 0.009710112 ubox
10 31 0.719694057 ubox
10 41 0.015422646 ubox
10 70 0.010337922 ubox
10 72 0.023220079 ubox
10 75 0.249229951 ubox
10 77 0.023437838 ubox
11 15 0.014860749 ubox
11 18 0.613475914 ubox
11 20 0.022578020 ubox
11 23 0.018020121 ubox
11 27 0.011030769 ubox
11 30 0.725857382 ubox
11 35 0.008296506 ubox
11 40 0.016976597 ubox
11 42 0.022106162 ubox
11 69 0.010088569 ubox
11 71 0.020651640 ubox
11 74 0.298477079 ubox
11 76 0.024455943 ubox
12 17 0.613722430 ubox
12 19 0.022544405 ubox
12 22 0.017347777 ubox
12 29 0.725373105 ubox
12 34 0.008299465 ubox
12 39 0.014594514 ubox
12 41 0.022133044 ubox
12 68 0.010013620 ubox
12 70 0.020167469 ubox
12 73 0.298543832 ubox
12 75 0.024419857 ubox
13 22 0.006714352 ubox
13 28 0.720236733 ubox
13 29 0.024043581 ubox
13 39 0.027668398 ubox
13 68 0.004523864 ubox
13 72 0.298130930 ubox
13 73 0.015261296 ubox
14 21 0.007900349 ubox
14 28 0.012312688 ubox
14 29 0.015142395 ubox
14 32 0.012739464 ubox
14 38 0.068189037 ubox
14 67 0.004321497 ubox
14 72 0.013475960 ubox
14 73 0.014453301 ubox
15 28 0.081428184 ubox
15 31 0.013205273 ubox
15 70 0.008228193 ubox
15 72 0.015893889 ubox
16 24 0.477494423 ubox
16 25 0.490718238 ubox
16 26 0.156491707 ubox
16 27 0.176511361 ubox
16 30 0.013129062 ubox
16 36 0.267242179 ubox
16 37 0.139220128 ubox
16 69 0.005227229 ubox
17 23 0.481265733 ubox
17 24 0.486300946 ubox
17 25 0.155884548 ubox
17 26 0.176949908 ubox
17 35 0.268273584 ubox
17 36 0.138358656 ubox
18 22 0.453016202 ubox
18 28 0.012852882 ubox
18 31 0.005548454 ubox
18 34 0.267903944 ubox
18 67 0.004911206 ubox
18 77 0.009516088 ubox
19 27 0.012922066 ubox
19 30 0.008883626 ubox
19 35 0.136653776 ubox
19 66 0.004797484 ubox
19 76 0.016898999 ubox
20 29 0.008916068 ubox
20 34 0.136360107 ubox
20 75 0.016903134 ubox
22 30 0.314054817 ubox
22 74 0.018114929 ubox
22 76 0.005990828 ubox
23 29 0.314183078 ubox
23 73 0.018112448 ubox
23 75 0.006006569 ubox
24 28 0.311973247 ubox
24 72 0.018061748 ubox
24 73 0.006080888 ubox
25 72 0.006145005 ubox
25 73 0.006021334 ubox
26 72 0.006033533 ubox
26 73 0.006226033 ubox
27 72 0.006284048 ubox
27 77 0.016916145 ubox
28 36 0.040210682 ubox
28 37 0.007090914 ubox
28 76 0.013150644 ubox
29 35 0.040744296 ubox
29 36 0.006620877 ubox
29 42 0.003503912 ubox
29 76 0.104697000 ubox
30 34 0.040530577 ubox
30 41 0.003512392 ubox
30 75 0.105520404 ubox
30 77 0.043184588 ubox
31 40 0.003510493 ubox
31 74 0.077834029 ubox
31 76 0.046912372 ubox
34 40 0.003959747 ubox
34 42 0.004279928 ubox
34 71 0.008801924 ubox
34 74 0.455914772 ubox
34 76 0.615572712 ubox
35 39 0.003941209 ubox
35 41 0.004279201 ubox
35 70 0.008737462 ubox
35 73 0.453356716 ubox
35 75 0.616984249 ubox
36 72 0.447096747 ubox
36 73 0.800336463 ubox
37 72 0.802687261 ubox
39 69 0.040291397 ubox
39 71 0.996903453 ubox
39 74 0.004391334 ubox
39 76 0.022622948 ubox
40 68 0.040315525 ubox
40 70 0.998270894 ubox
40 72 0.004623058 ubox
40 73 0.003391441 ubox
40 75 0.022643957 ubox
40 77 0.003349869 ubox
41 69 0.998398751 ubox
41 71 0.005540089 ubox
41 74 0.022607836 ubox
41 76 0.003624489 ubox
42 68 0.997186338 ubox
42 70 0.005540988 ubox
42 73 0.022548424 ubox
42 75 0.003613903 ubox
44 65 0.998627376 ubox
44 71 0.013723294 ubox
44 74 0.003560436 ubox
45 64 0.999855240 ubox
45 70 0.013684758 ubox
45 73 0.003563222 ubox
46 62 0.010757809 ubox
46 63 0.999529847 ubox
46 72 0.003371399 ubox
47 61 0.024317728 ubox
47 62 0.990966707 ubox
48 56 0.003678506 ubox
49 55 0.003691948 ubox
49 60 0.996050785 ubox
49 69 0.013910933 ubox
50 59 0.999760987 ubox
50 68 0.013919421 ubox
51 58 0.958623348 ubox
51 67 0.013348726 ubox
55 64 0.013859180 ubox
56 63 0.013919999 ubox
57 62 0.013897393 ubox
64 74 0.003739430 ubox
65 73 0.003754677 ubox
66 72 0.005941451 ubox
68 76 0.003184901 ubox
69 75 0.003188927 ubox
72 76 0.008181180 ubox
1 33 0.9500000 lbox
2 32 0.9500000 lbox
3 31 0.9500000 lbox
4 29 0.9500000 lbox
5 28 0.9500000 lbox
6 23 0.9500000 lbox
7 22 0.9500000 lbox
8 21 0.9500000 lbox
10 19 0.9500000 lbox
11 18 0.9500000 lbox
12 17 0.9500000 lbox
34 76 0.9500000 lbox
35 75 0.9500000 lbox
36 73 0.9500000 lbox
37 72 0.9500000 lbox
39 71 0.9500000 lbox
40 70 0.9500000 lbox
41 69 0.9500000 lbox
42 68 0.9500000 lbox
44 65 0.9500000 lbox
45 64 0.9500000 lbox
46 63 0.9500000 lbox
47 62 0.9500000 lbox
49 60 0.9500000 lbox
50 59 0.9500000 lbox
51 58 0.9500000 lbox
showpage
end
%%EOF
