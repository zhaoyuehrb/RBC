%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:24:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUUUGAGGACCGGGCUGGUGCGACUAUACUACUGCCGGAUGGCAAAUCCGGGAUCUCGGCUCCGAGAGGCUCAUCUGGCAAAAGGGCGCGGAAACCACGGGGGCCCUGAGACUGAGUGGUCCCUAUCCCACUUCUCUCUGGGGCGGCGCUGUAGCCAGCGGCUGACAGGCGCAGCGAAAGGCAGCCCUCUGCUAAGGGUCCCAGCACC\
) } def
/len { sequence length } bind def

/coor [
[106.76515961 376.74459839]
[101.81365967 362.03875732]
[106.48381805 347.24114990]
[118.97985840 338.04174805]
[118.75546265 323.04342651]
[118.53107452 308.04510498]
[115.28759003 301.40356445]
[118.41719818 292.82113647]
[118.41719818 277.82113647]
[118.41719818 262.82113647]
[118.41719818 247.82113647]
[118.41719818 232.82113647]
[117.40815735 217.85511780]
[115.39466095 202.99087524]
[113.38116455 188.12663269]
[111.36766052 173.26237488]
[109.35416412 158.39813232]
[107.34066772 143.53388977]
[76.32910156 131.83419800]
[65.08256531 104.38768768]
[50.14295197 103.04309845]
[35.20333862 101.69850922]
[20.26372337 100.35391998]
[11.43532085 102.70160675]
[5.11124659 98.87583160]
[-9.80658150 97.30790710]
[-14.57583332 99.43333435]
[-19.21903992 99.50875854]
[-22.97627449 97.92562103]
[-25.35317993 95.32028198]
[-40.18564224 93.08464813]
[-52.81816864 102.19821167]
[-67.82854462 99.71966553]
[-76.43908691 87.62032318]
[-91.27155304 85.38468933]
[-106.10401154 83.14905548]
[-120.93647766 80.91342163]
[-135.76893616 78.67778778]
[-150.60139465 76.44215393]
[-165.43386841 74.20652008]
[-180.26632690 71.97088623]
[-195.09878540 69.73525238]
[-209.94755554 67.61062622]
[-224.81179810 65.59712219]
[-233.07130432 72.67601013]
[-243.64550781 74.01271057]
[-253.01252747 69.40538788]
[-258.18557739 60.59222031]
[-272.98294067 58.13495255]
[-287.79824829 55.78843689]
[-302.63070679 53.55279922]
[-317.46316528 51.31716537]
[-332.29565430 49.08153152]
[-343.08914185 60.22961807]
[-358.37973022 62.87117386]
[-372.28784180 55.99047089]
[-379.46551514 42.23327637]
[-377.15283203 26.88951302]
[-366.23901367 15.85917187]
[-350.92068481 13.38364506]
[-337.08804321 20.41482162]
[-330.05999756 34.24906921]
[-315.22753906 36.48470306]
[-300.39508057 38.72033691]
[-285.56262207 40.95597076]
[-278.47943115 38.84431458]
[-270.52566528 43.33759308]
[-255.72830200 45.79486084]
[-238.17135620 37.69403458]
[-222.79830933 50.73287964]
[-207.93405151 52.74637604]
[-200.88327026 50.52899551]
[-192.86315918 54.90278625]
[-178.03068542 57.13842010]
[-163.19822693 59.37405396]
[-148.36576843 61.60968781]
[-133.53330994 63.84532166]
[-118.70084381 66.08095551]
[-103.86837769 68.31658936]
[-89.03591919 70.55222321]
[-74.20345306 72.78785706]
[-62.40911102 63.76405334]
[-47.33503723 65.82000732]
[-37.95000839 78.25218964]
[-23.11754608 80.48782349]
[-8.23865509 82.39008331]
[6.67917347 83.95800781]
[21.60831261 85.41430664]
[36.54792786 86.75889587]
[51.48754120 88.10348511]
[66.42715454 89.44807434]
[67.88736725 82.86595154]
[70.66022491 76.47979736]
[74.71934509 70.55438995]
[79.98458099 65.35063171]
[86.32274628 61.11457062]
[83.86547852 46.31721115]
[73.03784943 34.00077820]
[78.54598999 18.55434036]
[94.72359467 15.86786652]
[104.92853546 28.70497131]
[98.66284180 43.85994339]
[101.12010956 58.65729904]
[115.79232025 61.77597427]
[124.05577850 49.25737762]
[132.31922913 36.73877716]
[140.58268738 24.22018051]
[148.84614563 11.70158100]
[157.01573181 -0.87847769]
[165.09098816 -13.51929188]
[173.16624451 -26.16010666]
[181.24150085 -38.80092239]
[179.23278809 -51.54222870]
[186.21954346 -61.90472031]
[198.00379944 -64.63777924]
[206.26725769 -77.15637970]
[214.53071594 -89.67497253]
[222.79417419 -102.19357300]
[231.05763245 -114.71217346]
[239.32107544 -127.23077393]
[233.74290466 -141.71054077]
[237.77355957 -156.69497681]
[249.86320496 -166.42225647]
[265.36309814 -167.15206909]
[278.31323242 -158.60375977]
[283.73400879 -144.06433105]
[279.54104614 -129.12449646]
[267.34658813 -119.52893066]
[251.83967590 -118.96731567]
[243.57621765 -106.44871521]
[235.31277466 -93.93012238]
[227.04931641 -81.41152191]
[218.78585815 -68.89292145]
[210.52239990 -56.37432480]
[210.41874695 -38.82597351]
[193.88232422 -30.72566223]
[185.80705261 -18.08484650]
[177.73179626 -5.44403267]
[169.65653992 7.19678164]
[168.70465088 14.52646923]
[161.36474609 19.96503639]
[153.10128784 32.48363495]
[144.83782959 45.00223160]
[136.57437134 57.52083206]
[128.31091309 70.03942871]
[140.04898071 85.23348236]
[143.89497375 104.72402191]
[158.85302734 105.84497070]
[173.81108093 106.96591949]
[188.76913452 108.08687592]
[203.73516846 109.09590912]
[218.70831299 109.99297333]
[233.68147278 110.89002991]
[248.66090393 111.67507172]
[263.64581299 112.34804535]
[278.63070679 113.02101898]
[293.61560059 113.69399261]
[309.71005249 108.36435699]
[319.28677368 122.35444641]
[308.49453735 135.42976379]
[292.94262695 128.67887878]
[277.95773315 128.00592041]
[262.97283936 127.33293915]
[247.98794556 126.65996552]
[241.16429138 129.50045776]
[232.78440857 125.86318207]
[217.81124878 124.96612549]
[202.83810425 124.06906128]
[195.97273254 126.80715179]
[187.64819336 123.04492950]
[172.69013977 121.92398071]
[157.73207092 120.80302429]
[142.77401733 119.68207550]
[137.63174438 125.14165497]
[150.22125244 133.29666138]
[164.91160583 136.32875061]
[172.34091187 149.35969543]
[167.46714783 163.54583740]
[153.59797668 169.25952148]
[140.14593506 162.62307739]
[136.24049377 148.14009094]
[127.34719086 136.06080627]
[122.20491028 141.52038574]
[124.21841431 156.38462830]
[126.23191071 171.24888611]
[128.24540710 186.11312866]
[130.25891113 200.97737122]
[132.27239990 215.84161377]
[145.86853027 213.45376587]
[161.17147827 222.04800415]
[168.27949524 235.25694275]
[182.50677490 243.41271973]
[182.28671265 259.81039429]
[167.84568787 267.58142090]
[154.03939819 258.73165894]
[155.07057190 242.36497498]
[147.96253967 229.15603638]
[133.41719055 232.82113647]
[133.41719055 247.82113647]
[133.41719055 262.82113647]
[133.41719055 277.82113647]
[133.41719055 292.82113647]
[133.52938843 307.82070923]
[133.75378418 322.81903076]
[133.97817993 337.81735229]
[146.74382019 346.63879395]
[151.85456848 361.29006958]
[147.34521484 376.13748169]
[134.94970703 385.47189331]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 205]
[5 204]
[6 203]
[8 202]
[9 201]
[10 200]
[11 199]
[12 198]
[13 188]
[14 187]
[15 186]
[16 185]
[17 184]
[18 183]
[20 91]
[21 90]
[22 89]
[23 88]
[25 87]
[26 86]
[30 85]
[31 84]
[34 81]
[35 80]
[36 79]
[37 78]
[38 77]
[39 76]
[40 75]
[41 74]
[42 73]
[43 71]
[44 70]
[48 68]
[49 67]
[50 65]
[51 64]
[52 63]
[53 62]
[96 103]
[97 102]
[104 145]
[105 144]
[106 143]
[107 142]
[108 141]
[109 139]
[110 138]
[111 137]
[112 136]
[115 134]
[116 133]
[117 132]
[118 131]
[119 130]
[120 129]
[147 173]
[148 172]
[149 171]
[150 170]
[151 168]
[152 167]
[153 166]
[154 164]
[155 163]
[156 162]
[157 161]
[190 197]
[191 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
