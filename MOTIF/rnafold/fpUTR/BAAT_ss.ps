%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:21:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCUCACGGUCCUGCUGAUAUGUGACAUCACCCCCGGAGGCCCAGCUGUAAAUUCCUCUCUUUGUACUCUUUCUCUUUAUUUCUCAGACCAGCCGACACUUAGGGAAAAUAGAACCUACGCUGAAAUUUUGGGGGCAGGUUCUCUUGCUAGGUUUUGAGGUUUUGCUGAAGAUAUUCCUGAAGAAUCAUCCCAGGUGCCACACUAAAAAA\
) } def
/len { sequence length } bind def

/coor [
[81.37301636 373.39395142]
[73.05413818 360.77304077]
[68.82652283 346.26034546]
[69.06608582 331.14630127]
[73.75153351 316.77487183]
[82.46623230 304.42395020]
[94.43527985 295.19174194]
[108.59439087 289.89920044]
[107.70157623 274.92581177]
[106.80876160 259.95239258]
[105.80449677 244.98605347]
[104.68885040 230.02760315]
[103.57320404 215.06915283]
[102.45755005 200.11070251]
[90.43100739 184.96972656]
[99.46194458 166.94738770]
[97.90142059 152.02877808]
[96.34089661 137.11016846]
[94.78037262 122.19156647]
[87.71585846 119.67311096]
[73.58683014 114.63619232]
[66.52231598 112.11773682]
[55.87630463 122.68478394]
[45.23029709 133.25183105]
[41.45141983 149.20965576]
[25.66658592 153.65612793]
[14.11388111 142.01708984]
[18.67773628 126.26580048]
[34.66324997 122.60581970]
[45.30925751 112.03877258]
[55.95526505 101.47172546]
[56.84808350 86.49832153]
[47.53319931 74.74106598]
[38.21831512 62.98381805]
[28.90343285 51.22656631]
[19.58855057 39.46931458]
[10.27366829 27.71206284]
[0.95878530 15.95481205]
[-8.35609722 4.19756079]
[-23.75237656 4.70822001]
[-36.34991074 -3.84487915]
[-41.43535614 -18.00829124]
[-37.25569916 -32.27953720]
[-46.57058334 -44.03678894]
[-55.88546753 -55.79404068]
[-65.20034790 -67.55129242]
[-72.98236847 -72.33438873]
[-74.56482697 -79.55364227]
[-83.70362854 -91.44827271]
[-92.84243011 -103.34290314]
[-108.26444244 -105.53366089]
[-117.36304474 -117.72669220]
[-115.17945862 -132.41572571]
[-124.31826019 -144.31034851]
[-133.45706177 -156.20498657]
[-154.73616028 -163.22917175]
[-156.73873901 -184.77969360]
[-166.56932068 -196.10928345]
[-176.39990234 -207.43887329]
[-186.23048401 -218.76846313]
[-196.06106567 -230.09806824]
[-215.39283752 -235.81164551]
[-218.23727417 -254.93745422]
[-228.40081787 -265.96932983]
[-238.56436157 -277.00122070]
[-253.88002014 -275.34683228]
[-267.07879639 -282.93930054]
[-273.20358276 -296.68524170]
[-270.09695435 -311.22781372]
[-280.26049805 -322.25970459]
[-297.95989990 -327.34033203]
[-301.13330078 -344.60000610]
[-311.45999146 -355.47933960]
[-321.78665161 -366.35867310]
[-336.49530029 -362.12615967]
[-351.48376465 -365.22525024]
[-363.30780029 -374.94381714]
[-369.25036621 -389.04858398]
[-367.94586182 -404.29840088]
[-359.69406128 -417.18896484]
[-346.39117432 -424.75811768]
[-331.09411621 -425.26651001]
[-317.31802368 -418.59732056]
[-308.22854614 -406.28311157]
[-305.91439819 -391.15356445]
[-310.90731812 -376.68533325]
[-300.58065796 -365.80599976]
[-290.25396729 -354.92666626]
[-278.17376709 -354.29818726]
[-269.48141479 -345.31893921]
[-269.22863770 -332.42324829]
[-259.06509399 -321.39135742]
[-244.31710815 -323.29803467]
[-231.11822510 -316.06936646]
[-224.63085938 -302.29376221]
[-227.53248596 -287.16476440]
[-217.36894226 -276.13287354]
[-207.20538330 -265.10101318]
[-196.99945068 -265.60275269]
[-188.01335144 -260.29254150]
[-183.33706665 -250.71588135]
[-184.73146057 -239.92864990]
[-174.90089417 -228.59904480]
[-165.07031250 -217.26945496]
[-155.23973083 -205.93986511]
[-145.40914917 -194.61027527]
[-137.61262512 -195.74108887]
[-129.91323853 -193.67404175]
[-123.58393860 -188.67407227]
[-119.70130157 -181.49711609]
[-118.96275330 -173.27641296]
[-121.56243134 -165.34379578]
[-112.42362976 -153.44915771]
[-103.28482056 -141.55451965]
[-88.52906799 -139.88021851]
[-79.09158325 -127.94754791]
[-80.94779968 -112.48171234]
[-71.80899811 -100.58707428]
[-62.67019653 -88.69244385]
[-53.44309616 -76.86617279]
[-44.12821579 -65.10892487]
[-34.81333160 -53.35166931]
[-25.49844933 -41.59442139]
[-10.64951611 -42.39889908]
[1.97516608 -34.20857620]
[7.41997957 -19.98861122]
[3.40115380 -5.11732197]
[12.71603680 6.63992929]
[22.03092003 18.39718056]
[31.34580231 30.15443230]
[40.66068649 41.91168213]
[49.97556686 53.66893387]
[59.29045105 65.42618561]
[68.60533142 77.18343353]
[125.02748871 57.57344437]
[138.19996643 50.39807892]
[151.37243652 43.22270966]
[164.54492188 36.04734421]
[177.71739197 28.87197876]
[185.80044556 14.60325813]
[202.19902039 14.73961163]
[210.04368591 29.14076996]
[201.26451111 42.99205780]
[184.89276123 42.04445267]
[171.72029114 49.21982193]
[158.54780579 56.39518738]
[145.37533569 63.57055283]
[132.20285034 70.74591827]
[134.53834534 85.56298828]
[149.27931213 88.33860016]
[164.02026367 91.11421204]
[178.76123047 93.88981628]
[193.57829285 96.22530365]
[208.45832825 98.11859894]
[223.33836365 100.01189423]
[238.21839905 101.90518188]
[252.88481140 95.97161102]
[264.53369141 105.25346375]
[279.41372681 107.14675903]
[291.75521851 97.27439880]
[307.45330811 99.10334015]
[317.19464111 111.54850006]
[315.19982910 127.22639465]
[302.65237427 136.83560181]
[286.99642944 134.67514038]
[277.52044678 122.02679443]
[262.64041138 120.13349915]
[249.03831482 126.20249176]
[236.32511902 116.78521729]
[221.44508362 114.89192963]
[206.56504822 112.99863434]
[191.68501282 111.10533905]
[189.38848877 112.71286011]
[186.31683350 113.50756073]
[182.77644348 113.18963623]
[179.17649841 111.57565308]
[175.98562622 108.63078308]
[161.24465942 105.85517120]
[146.50369263 103.07955933]
[131.76272583 100.30394745]
[126.24679565 105.38572693]
[136.41015625 116.41777039]
[125.37794495 126.58094788]
[115.21492004 115.54927063]
[109.69897461 120.63104248]
[111.25949860 135.54965210]
[112.82002258 150.46824646]
[114.38054657 165.38685608]
[123.21188354 171.73635864]
[127.01260376 181.69300842]
[124.75341797 191.88340759]
[117.41600800 198.99505615]
[118.53165436 213.95350647]
[119.64730835 228.91195679]
[120.76295471 243.87040710]
[124.52196503 252.19552612]
[121.78216553 259.05960083]
[122.67498016 274.03298950]
[123.56779480 289.00640869]
[138.25550842 292.57888794]
[151.23681641 300.32336426]
[161.35743713 311.55120850]
[167.71745300 325.26403809]
[169.75134277 340.24252319]
[167.27824402 355.15475464]
[160.51806641 368.67480469]
[150.07191467 379.60043335]
[136.86866760 386.96014404]
[122.08233643 390.09954834]
[107.02771759 388.73947144]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 199]
[9 198]
[10 197]
[11 195]
[12 194]
[13 193]
[14 192]
[16 188]
[17 187]
[18 186]
[19 185]
[22 31]
[23 30]
[24 29]
[32 134]
[33 133]
[34 132]
[35 131]
[36 130]
[37 129]
[38 128]
[39 127]
[43 123]
[44 122]
[45 121]
[46 120]
[48 119]
[49 118]
[50 117]
[53 114]
[54 113]
[55 112]
[57 106]
[58 105]
[59 104]
[60 103]
[61 102]
[63 98]
[64 97]
[65 96]
[69 92]
[70 91]
[72 88]
[73 87]
[74 86]
[135 148]
[136 147]
[137 146]
[138 145]
[139 144]
[149 180]
[150 179]
[151 178]
[152 177]
[153 172]
[154 171]
[155 170]
[156 169]
[158 167]
[159 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
