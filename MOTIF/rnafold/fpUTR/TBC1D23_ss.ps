%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:18:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUCCUCCCCCAAGACGCUGCCUUUCGGCCUCGGGACGCCGUGACGUUGCGUUCCUCCAGUCCCUUGCCACCUCCCUCUUUCUUCCCCUCUGGGGAAGCUCAGUGCUGGACUUCCGAAGACCUUUUACGACAUUGAGUCUCGGAGUUGGUCUCAGCGCCGGAUCCACUUUUCGGCAAAGUGACGUGGACGUCAACAGCA\
) } def
/len { sequence length } bind def

/coor [
[82.11026764 200.31234741]
[80.01187897 202.70289612]
[77.53547668 204.02941895]
[72.52655029 218.16839600]
[67.51762390 232.30737305]
[62.50869751 246.44635010]
[72.03794098 258.57882690]
[73.47238159 273.93936157]
[66.35430145 287.62646484]
[52.95505524 295.27261353]
[37.55028534 294.43795776]
[25.05560303 285.38885498]
[19.45801544 271.01281738]
[22.54369354 255.89717102]
[33.32800674 244.86531067]
[48.36972046 241.43742371]
[53.37864685 227.29844666]
[58.38757324 213.15946960]
[63.39649963 199.02049255]
[67.96547699 184.73327637]
[72.09011841 170.31152344]
[76.21475983 155.88975525]
[80.33940125 141.46798706]
[72.65035248 138.14778137]
[65.53474426 133.38735962]
[59.26429749 127.28871155]
[54.09194946 120.00534058]
[50.24210739 111.73863983]
[47.90156937 102.73249817]
[47.21148682 93.26615143]
[32.21193314 93.15008545]
[17.21238327 93.03401947]
[8.76358509 103.52857971]
[-4.00111437 107.18560028]
[-16.35764313 102.88482666]
[-23.86628723 92.40886688]
[-38.86224747 92.06069183]
[-53.85820389 91.71251678]
[-68.85416412 91.36434174]
[-83.85012054 91.01616669]
[-91.12926483 105.56436157]
[-103.97714233 115.44760895]
[-119.79171753 118.72830200]
[-135.39790344 114.79958344]
[-147.68499756 104.49686432]
[-154.22671509 89.92076874]
[-169.22627258 89.80470276]
[-184.22581482 89.68863678]
[-199.22537231 89.57257080]
[-215.11080933 95.49617004]
[-225.20043945 81.87134552]
[-214.90116882 68.40429688]
[-199.10929871 74.57302094]
[-184.10975647 74.68908691]
[-169.11019897 74.80515289]
[-154.11064148 74.92121887]
[-148.61277771 62.18017578]
[-138.64175415 52.46711731]
[-125.68057251 47.27280807]
[-111.67468262 47.41247940]
[-98.73989868 52.89805984]
[-88.84285736 62.93139648]
[-83.50194550 76.02021027]
[-68.50598907 76.36838531]
[-53.51002884 76.71656036]
[-38.51407242 77.06473541]
[-23.51811218 77.41291046]
[-11.86398220 65.29173279]
[5.28855991 65.34773254]
[17.32845116 78.03446960]
[32.32800293 78.15053558]
[47.32755280 78.26660156]
[51.91242599 72.33120728]
[38.80472565 65.03817749]
[25.69702721 57.74515152]
[10.71755123 56.96073151]
[0.02982147 46.43588257]
[-0.98453289 31.47022057]
[8.18524933 19.59945488]
[22.92187691 16.80091476]
[35.80496216 24.48375893]
[40.34745026 38.77927399]
[50.71480942 49.61983871]
[61.08216476 60.46040726]
[65.66703796 54.52500916]
[61.76606750 40.04114151]
[57.86510086 25.55727196]
[53.96413422 11.07340240]
[50.06316376 -3.41046572]
[46.16219711 -17.89433479]
[42.26123047 -32.37820435]
[32.30374146 -46.09989166]
[42.73267365 -59.46678162]
[58.46419144 -53.14573669]
[56.74509811 -36.27917099]
[60.64606476 -21.79530144]
[64.54703522 -7.31143379]
[68.44799805 7.17243481]
[72.34896851 21.65630341]
[76.24993896 36.14017105]
[80.15090942 50.62403870]
[92.83471680 46.38476944]
[106.39020538 45.40517044]
[119.97963715 47.85334396]
[132.73661804 53.68222427]
[143.82128906 62.62602997]
[152.47540283 74.21083832]
[158.07373047 87.77899170]
[170.61784363 79.55432129]
[183.16197205 71.32965088]
[195.70608521 63.10498428]
[208.18617249 54.78350067]
[220.60151672 46.36569214]
[233.01684570 37.94788742]
[245.43218994 29.53008080]
[257.64877319 20.82636261]
[269.66006470 11.84142208]
[281.67135620 2.85648131]
[293.68261719 -6.12845945]
[305.69390869 -15.11340046]
[310.69531250 -22.76477432]
[317.96130371 -24.14273643]
[330.11016846 -32.94072342]
[342.25906372 -41.73871231]
[338.37030029 -56.40983582]
[340.04782104 -71.49460602]
[347.06481934 -84.95293427]
[358.47222900 -94.96468353]
[372.72732544 -100.17585754]
[387.90225220 -99.88168335]
[401.94467163 -94.12194061]
[412.95550537 -83.67559814]
[419.44558716 -69.95542145]
[420.53723145 -54.81697083]
[416.08279419 -40.30758667]
[406.68466187 -28.38954544]
[393.61389160 -20.67466545]
[378.63818359 -18.20631790]
[363.78289795 -21.31833076]
[351.05706787 -29.58982658]
[338.90817261 -20.79183960]
[326.75927734 -11.99385166]
[314.67883301 -3.10212088]
[302.66757202 5.88282013]
[290.65628052 14.86776066]
[278.64498901 23.85270119]
[266.63372803 32.83764267]
[265.77273560 36.26308441]
[263.20605469 39.44023132]
[259.06918335 41.57026291]
[253.84999084 41.94541550]
[241.43466187 50.36322403]
[229.01931763 58.78102875]
[216.60398865 67.19883728]
[212.82948303 73.55857849]
[203.93075562 75.64910126]
[191.38662720 83.87377167]
[178.84251404 92.09843445]
[166.29840088 100.32310486]
[166.76260376 115.31591797]
[179.79150391 122.74880981]
[192.82040405 130.18170166]
[205.84928894 137.61457825]
[218.87818909 145.04747009]
[231.90708923 152.48036194]
[246.51008606 146.88693237]
[261.27508545 152.03756714]
[269.23046875 165.50032043]
[266.61999512 180.91847229]
[254.67622375 191.01205444]
[239.03865051 191.01516724]
[227.09083557 180.92636108]
[224.47419739 165.50926208]
[211.44529724 158.07637024]
[198.41641235 150.64347839]
[185.38751221 143.21060181]
[172.35861206 135.77770996]
[159.32971191 128.34481812]
[153.76649475 133.37478638]
[163.82626343 144.50138855]
[152.69950867 154.56097412]
[142.64006042 143.43472290]
[137.07684326 148.46469116]
[143.16374207 162.17416382]
[149.25065613 175.88363647]
[155.33757019 189.59310913]
[161.42446899 203.30256653]
[174.99298096 212.51275635]
[173.53128052 228.84663391]
[158.54304504 235.50131226]
[145.44688416 225.63102722]
[147.71499634 209.38948059]
[141.62809753 195.68000793]
[135.54118347 181.97055054]
[129.45428467 168.26107788]
[123.36737061 154.55160522]
[107.61098480 152.06581116]
[94.76116180 145.59262085]
[90.63652039 160.01438904]
[86.51187897 174.43615723]
[82.38723755 188.85792542]
[83.59503937 193.04379272]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 19]
[4 18]
[5 17]
[6 16]
[20 201]
[21 200]
[22 199]
[23 198]
[30 72]
[31 71]
[32 70]
[36 67]
[37 66]
[38 65]
[39 64]
[40 63]
[46 56]
[47 55]
[48 54]
[49 53]
[85 101]
[86 100]
[87 99]
[88 98]
[89 97]
[90 96]
[91 95]
[108 159]
[109 158]
[110 157]
[111 156]
[112 154]
[113 153]
[114 152]
[115 151]
[116 147]
[117 146]
[118 145]
[119 144]
[120 143]
[122 142]
[123 141]
[124 140]
[160 178]
[161 177]
[162 176]
[163 175]
[164 174]
[165 173]
[183 196]
[184 195]
[185 194]
[186 193]
[187 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
