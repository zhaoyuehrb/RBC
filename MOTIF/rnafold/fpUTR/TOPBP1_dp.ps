%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:01:22 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TOPBP1)
} def

/sequence { (\
GGGGUAGGGGCGGCGCCGAGUCGGGGGAGGGGGCUGUGCGCCGGGCUGGCGCCCGACCCCAGCCACCGCCCUGCGGCCAGCGCGUCCCCCGACUCGCCGCCCGGAGACCCCGAGGCUCCAACGAGUUCAGAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 110 0.013737077 ubox
1 111 0.999098431 ubox
1 119 0.003600467 ubox
2 109 0.013758854 ubox
2 110 0.999852050 ubox
2 111 0.006638226 ubox
2 118 0.003602554 ubox
3 108 0.013730250 ubox
3 109 0.999860038 ubox
3 110 0.005981165 ubox
3 117 0.003598411 ubox
4 108 0.999836223 ubox
4 109 0.005223623 ubox
4 116 0.003601381 ubox
5 107 0.992549109 ubox
5 115 0.003499460 ubox
7 102 0.013240382 ubox
7 111 0.003262142 ubox
8 101 0.010874513 ubox
8 102 0.999547290 ubox
8 110 0.003263670 ubox
9 100 0.007703014 ubox
9 101 0.999858250 ubox
9 102 0.007422666 ubox
9 109 0.003263151 ubox
10 100 0.999900008 ubox
10 101 0.005253011 ubox
10 108 0.003260220 ubox
11 99 0.999926147 ubox
11 103 0.007141863 ubox
12 98 0.999892974 ubox
12 101 0.008268789 ubox
12 102 0.005892114 ubox
13 97 0.999237604 ubox
13 100 0.009561567 ubox
13 101 0.004274646 ubox
14 96 0.937165232 ubox
14 99 0.010437779 ubox
15 95 0.524297549 ubox
15 97 0.034303641 ubox
15 98 0.010635848 ubox
16 96 0.032744236 ubox
17 96 0.345998832 ubox
18 95 0.850576512 ubox
19 94 0.996022779 ubox
20 93 0.999947189 ubox
21 92 0.999870351 ubox
22 91 0.999969810 ubox
23 90 0.999977767 ubox
24 89 0.999993533 ubox
25 88 0.999992728 ubox
26 87 0.999990046 ubox
27 86 0.999963283 ubox
28 72 0.017004606 ubox
28 85 0.994614644 ubox
29 60 0.041286812 ubox
29 64 0.004208937 ubox
29 67 0.024523200 ubox
29 70 0.004081380 ubox
29 71 0.024035367 ubox
29 72 0.008531535 ubox
30 42 0.005443538 ubox
30 59 0.041230073 ubox
30 60 0.057839255 ubox
30 66 0.024579297 ubox
30 67 0.028288835 ubox
30 69 0.003813926 ubox
30 70 0.024004307 ubox
30 71 0.008863871 ubox
30 72 0.112909125 ubox
30 85 0.007002192 ubox
31 41 0.005454060 ubox
31 58 0.041130269 ubox
31 59 0.058056430 ubox
31 66 0.028517161 ubox
31 69 0.023928986 ubox
31 70 0.007459645 ubox
31 71 0.126000934 ubox
32 57 0.041009145 ubox
32 58 0.058128777 ubox
32 64 0.044590769 ubox
32 67 0.006765653 ubox
32 69 0.005499216 ubox
32 70 0.126152898 ubox
32 78 0.016982535 ubox
33 39 0.006068834 ubox
33 41 0.004676905 ubox
33 57 0.058163492 ubox
33 63 0.044928237 ubox
33 66 0.006565777 ubox
33 69 0.126246511 ubox
33 77 0.016998249 ubox
33 81 0.987963267 ubox
34 38 0.006026620 ubox
34 40 0.004684873 ubox
34 62 0.044967530 ubox
34 68 0.126255584 ubox
34 76 0.017005282 ubox
34 80 0.988195122 ubox
35 55 0.064770168 ubox
35 61 0.044929356 ubox
35 65 0.007144854 ubox
35 75 0.016425647 ubox
35 79 0.987925530 ubox
36 54 0.067926234 ubox
36 60 0.044692363 ubox
36 64 0.007320130 ubox
36 66 0.126031538 ubox
36 74 0.016200104 ubox
36 77 0.037395645 ubox
36 78 0.986974312 ubox
37 65 0.126246024 ubox
37 73 0.016055313 ubox
37 75 0.008191196 ubox
37 76 0.049840891 ubox
38 52 0.071698223 ubox
38 63 0.016344615 ubox
38 64 0.125398262 ubox
38 69 0.014740563 ubox
38 72 0.005200956 ubox
38 74 0.010445212 ubox
38 77 0.438649422 ubox
38 78 0.003354398 ubox
39 51 0.071778992 ubox
39 62 0.021804732 ubox
39 68 0.014766325 ubox
39 73 0.010459645 ubox
39 75 0.937087859 ubox
39 76 0.312496877 ubox
40 50 0.071779754 ubox
40 63 0.124475253 ubox
40 67 0.014563696 ubox
40 69 0.004559466 ubox
40 72 0.008496719 ubox
40 74 0.986566345 ubox
40 77 0.013006308 ubox
41 49 0.071780698 ubox
41 62 0.124422700 ubox
41 68 0.004409505 ubox
41 73 0.985998268 ubox
41 76 0.013036121 ubox
42 48 0.071751382 ubox
42 55 0.121180384 ubox
42 68 0.009390495 ubox
42 73 0.048049314 ubox
42 75 0.013043917 ubox
43 47 0.044270299 ubox
43 54 0.121570384 ubox
43 59 0.038305670 ubox
43 60 0.041427213 ubox
43 67 0.009385028 ubox
43 71 0.987286274 ubox
43 72 0.015614586 ubox
43 74 0.006081202 ubox
44 53 0.121577129 ubox
44 58 0.039064005 ubox
44 59 0.040793676 ubox
44 64 0.017945237 ubox
44 66 0.006867139 ubox
44 70 0.988077980 ubox
44 71 0.013109055 ubox
45 52 0.121578569 ubox
45 57 0.039732844 ubox
45 58 0.040036039 ubox
45 63 0.019368444 ubox
45 69 0.988109046 ubox
45 70 0.009890441 ubox
46 51 0.121373983 ubox
46 62 0.019601580 ubox
46 68 0.985268566 ubox
47 55 0.052973079 ubox
47 61 0.020258781 ubox
47 65 0.913335952 ubox
47 68 0.011548580 ubox
48 54 0.056213584 ubox
48 60 0.020178937 ubox
48 64 0.986604286 ubox
48 67 0.052601156 ubox
49 53 0.055317551 ubox
49 59 0.019963413 ubox
49 63 0.986689707 ubox
49 66 0.052386903 ubox
50 62 0.986493178 ubox
51 63 0.051599756 ubox
52 62 0.051644162 ubox
62 69 0.024260262 ubox
62 77 0.004869690 ubox
62 81 0.045007383 ubox
62 83 0.022692704 ubox
63 68 0.024254347 ubox
63 76 0.004718025 ubox
63 80 0.044987848 ubox
63 82 0.022687645 ubox
64 75 0.004514017 ubox
66 76 0.050649286 ubox
67 75 0.051187811 ubox
67 84 0.036471783 ubox
68 74 0.051307467 ubox
68 77 0.023125055 ubox
68 83 0.041571997 ubox
69 73 0.050935447 ubox
69 76 0.023158185 ubox
69 82 0.041532416 ubox
70 75 0.023092541 ubox
71 80 0.040750765 ubox
72 79 0.040761869 ubox
72 82 0.007797791 ubox
72 84 0.053803899 ubox
73 78 0.040297438 ubox
73 81 0.021825340 ubox
73 83 0.132886649 ubox
73 85 0.005916294 ubox
74 80 0.021841168 ubox
74 82 0.133001292 ubox
74 84 0.007773312 ubox
75 81 0.132742316 ubox
75 83 0.007318529 ubox
76 83 0.010604773 ubox
77 82 0.011208414 ubox
103 119 0.005154462 ubox
104 118 0.005160072 ubox
105 117 0.005159362 ubox
106 116 0.005158501 ubox
108 115 0.005135859 ubox
109 114 0.005118541 ubox
112 118 0.006153612 ubox
112 127 0.016837749 ubox
112 128 0.758125162 ubox
113 117 0.005366569 ubox
113 126 0.009246029 ubox
113 127 0.719722422 ubox
114 126 0.507037995 ubox
114 127 0.552466958 ubox
114 128 0.212308762 ubox
115 126 0.838441894 ubox
115 127 0.150329107 ubox
116 125 0.998453614 ubox
116 130 0.003389176 ubox
117 124 0.998578402 ubox
117 129 0.003211167 ubox
117 131 0.004343503 ubox
118 123 0.995495665 ubox
118 130 0.004552824 ubox
127 131 0.004601964 ubox
1 111 0.9500000 lbox
2 110 0.9500000 lbox
3 109 0.9500000 lbox
4 108 0.9500000 lbox
5 107 0.9500000 lbox
8 102 0.9500000 lbox
9 101 0.9500000 lbox
10 100 0.9500000 lbox
11 99 0.9500000 lbox
12 98 0.9500000 lbox
13 97 0.9500000 lbox
14 96 0.9500000 lbox
18 95 0.9500000 lbox
19 94 0.9500000 lbox
20 93 0.9500000 lbox
21 92 0.9500000 lbox
22 91 0.9500000 lbox
23 90 0.9500000 lbox
24 89 0.9500000 lbox
25 88 0.9500000 lbox
26 87 0.9500000 lbox
27 86 0.9500000 lbox
28 85 0.9500000 lbox
33 81 0.9500000 lbox
34 80 0.9500000 lbox
35 79 0.9500000 lbox
36 78 0.9500000 lbox
39 75 0.9500000 lbox
40 74 0.9500000 lbox
41 73 0.9500000 lbox
43 71 0.9500000 lbox
44 70 0.9500000 lbox
45 69 0.9500000 lbox
46 68 0.9500000 lbox
47 65 0.9500000 lbox
48 64 0.9500000 lbox
49 63 0.9500000 lbox
50 62 0.9500000 lbox
114 127 0.9500000 lbox
115 126 0.9500000 lbox
116 125 0.9500000 lbox
117 124 0.9500000 lbox
118 123 0.9500000 lbox
showpage
end
%%EOF
