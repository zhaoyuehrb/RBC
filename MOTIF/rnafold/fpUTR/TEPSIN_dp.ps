%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:00:21 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TEPSIN)
} def

/sequence { (\
AGUGAUUGGAGGGCCCGGGCCUGGCGGAAGCGGGGCAGACCGGGAGGGGACCUGGAUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.012439899 ubox
1 53 0.019529325 ubox
2 6 0.009961805 ubox
2 14 0.013594615 ubox
2 51 0.022686228 ubox
2 52 0.020264819 ubox
2 57 0.083868479 ubox
3 13 0.014722324 ubox
3 17 0.006996078 ubox
3 50 0.022542106 ubox
3 54 0.008678982 ubox
3 56 0.086827806 ubox
4 16 0.009033931 ubox
4 53 0.009531374 ubox
4 58 0.814168025 ubox
5 57 0.824827430 ubox
6 12 0.007424525 ubox
6 13 0.018041467 ubox
6 18 0.114640309 ubox
6 46 0.005341389 ubox
6 47 0.003911165 ubox
6 48 0.014343794 ubox
6 49 0.009552411 ubox
6 50 0.028532723 ubox
6 55 0.048424269 ubox
6 56 0.820886756 ubox
7 11 0.007514415 ubox
7 12 0.023144463 ubox
7 17 0.156201367 ubox
7 18 0.005445672 ubox
7 45 0.005744167 ubox
7 47 0.015393902 ubox
7 48 0.012949577 ubox
7 49 0.030977725 ubox
7 54 0.073102981 ubox
7 55 0.786032344 ubox
8 15 0.041879839 ubox
8 16 0.174365461 ubox
8 52 0.427977332 ubox
8 53 0.070654629 ubox
8 58 0.032587622 ubox
9 14 0.042550451 ubox
9 15 0.174000232 ubox
9 51 0.428418662 ubox
9 52 0.080107047 ubox
9 57 0.030046335 ubox
9 58 0.040818787 ubox
10 53 0.608056525 ubox
10 57 0.040641815 ubox
11 52 0.616719926 ubox
11 53 0.434619429 ubox
11 58 0.011002570 ubox
12 51 0.611966224 ubox
12 52 0.460626982 ubox
12 53 0.014162602 ubox
12 57 0.008588940 ubox
12 58 0.010414000 ubox
13 36 0.007479297 ubox
13 51 0.462716033 ubox
13 52 0.015233715 ubox
13 57 0.009043687 ubox
14 35 0.007368841 ubox
14 43 0.003716758 ubox
14 44 0.935886298 ubox
14 47 0.041093314 ubox
14 48 0.158124663 ubox
14 49 0.231839733 ubox
14 55 0.007182059 ubox
15 34 0.007245287 ubox
15 43 0.943524048 ubox
15 44 0.012967634 ubox
15 46 0.029363436 ubox
15 47 0.149671115 ubox
15 48 0.224198347 ubox
15 49 0.032804759 ubox
15 54 0.007071638 ubox
15 55 0.015051526 ubox
16 33 0.007110731 ubox
16 42 0.948097477 ubox
16 43 0.012400679 ubox
16 46 0.140342448 ubox
16 47 0.210537266 ubox
16 48 0.032779228 ubox
16 54 0.015118059 ubox
17 31 0.003219259 ubox
17 41 0.965534318 ubox
17 52 0.007875597 ubox
17 53 0.014672240 ubox
18 40 0.964709748 ubox
18 41 0.012096356 ubox
18 51 0.007887687 ubox
18 52 0.014634074 ubox
19 31 0.004957217 ubox
19 36 0.999000706 ubox
19 40 0.008548806 ubox
19 51 0.008641421 ubox
20 27 0.005514860 ubox
20 30 0.004196664 ubox
20 34 0.004437983 ubox
20 35 0.999812705 ubox
20 43 0.005064748 ubox
20 44 0.013016177 ubox
20 49 0.005844620 ubox
21 26 0.005544895 ubox
21 33 0.005786247 ubox
21 34 0.999812705 ubox
21 38 0.004075444 ubox
21 42 0.005037321 ubox
21 43 0.013055921 ubox
21 48 0.005826517 ubox
22 29 0.003944076 ubox
22 32 0.006570640 ubox
22 33 0.996559064 ubox
22 37 0.004077795 ubox
22 42 0.012999265 ubox
22 47 0.005754103 ubox
23 31 0.006043420 ubox
23 36 0.003908437 ubox
23 41 0.012828742 ubox
24 31 0.999709355 ubox
24 40 0.012635759 ubox
25 30 0.999401420 ubox
25 32 0.012623211 ubox
25 42 0.004685282 ubox
26 31 0.012703140 ubox
26 41 0.004706807 ubox
27 40 0.004697320 ubox
30 36 0.009087480 ubox
31 35 0.009035032 ubox
31 42 0.003658973 ubox
32 41 0.005383161 ubox
33 40 0.005424881 ubox
33 41 0.003562714 ubox
34 40 0.003613527 ubox
38 58 0.124162656 ubox
39 57 0.125013090 ubox
40 47 0.044070759 ubox
40 48 0.010903819 ubox
40 49 0.009064483 ubox
40 55 0.185345199 ubox
41 46 0.061708250 ubox
41 47 0.011248842 ubox
41 48 0.009099316 ubox
41 54 0.185861862 ubox
42 52 0.006979616 ubox
42 53 0.185619541 ubox
43 51 0.007077462 ubox
43 52 0.185761348 ubox
44 51 0.185058010 ubox
45 53 0.352160549 ubox
45 57 0.003950039 ubox
46 52 0.361520932 ubox
46 53 0.038976636 ubox
46 58 0.009970169 ubox
47 51 0.355746590 ubox
47 52 0.042044396 ubox
47 53 0.017641513 ubox
47 57 0.009668775 ubox
47 58 0.016897225 ubox
48 52 0.018138330 ubox
48 57 0.017550362 ubox
48 58 0.005542417 ubox
49 57 0.004421365 ubox
49 58 0.019464498 ubox
50 57 0.018278451 ubox
4 58 0.9500000 lbox
5 57 0.9500000 lbox
6 56 0.9500000 lbox
7 55 0.9500000 lbox
10 53 0.9500000 lbox
11 52 0.9500000 lbox
12 51 0.9500000 lbox
14 44 0.9500000 lbox
15 43 0.9500000 lbox
16 42 0.9500000 lbox
17 41 0.9500000 lbox
18 40 0.9500000 lbox
19 36 0.9500000 lbox
20 35 0.9500000 lbox
21 34 0.9500000 lbox
22 33 0.9500000 lbox
24 31 0.9500000 lbox
25 30 0.9500000 lbox
showpage
end
%%EOF
