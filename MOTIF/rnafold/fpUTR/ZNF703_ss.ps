%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:02:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUAUUUGACGUGCGGCUCGAGGAAGGCGAAGGUUUUUGUGUUGCUAGCCGGGGCCAGCGGCGGUGGCGGCGGCGGCGGAGGCGUCGGUGGAGGAGGGGAGGCGGCGAGGAGGCGCAGCUCCCGCUGCACCGCGAUCGACGCUGCGGAGCGAGCCCACCCGCCCCGGGAGCUCGCCUCCCCGGUGCUCCCCCGCCCUCCCCGCCCCCCCAGCGGCGCUGCCUCCUCCAA\
) } def
/len { sequence length } bind def

/coor [
[-307.48876953 673.42626953]
[-310.54061890 688.11248779]
[-299.02679443 698.27752686]
[-294.15325928 712.84271240]
[-297.23098755 727.89007568]
[-307.43203735 739.37194824]
[-322.01242065 744.19982910]
[-337.05004883 741.07495117]
[-348.49993896 730.83795166]
[-353.28204346 716.24249268]
[-350.11007690 701.21472168]
[-339.83721924 689.79699707]
[-325.22686768 685.06066895]
[-322.17504883 670.37438965]
[-334.99133301 662.58062744]
[-346.62698364 672.04693604]
[-358.26266479 681.51330566]
[-369.89834595 690.97961426]
[-372.59762573 696.99121094]
[-377.22836304 700.25646973]
[-381.98358154 700.54034424]
[-393.87347412 709.68530273]
[-400.09515381 724.23181152]
[-414.90072632 725.85815430]
[-426.79061890 735.00311279]
[-433.01229858 749.54962158]
[-447.81784058 751.17590332]
[-459.70776367 760.32086182]
[-471.59765625 769.46582031]
[-483.48754883 778.61077881]
[-495.37744141 787.75573730]
[-501.13235474 803.11199951]
[-517.35089111 805.53894043]
[-527.34887695 792.53997803]
[-520.84118652 777.48736572]
[-504.52239990 775.86584473]
[-492.63250732 766.72088623]
[-480.74261475 757.57592773]
[-468.85272217 748.43096924]
[-456.96282959 739.28601074]
[-451.59158325 725.39361572]
[-435.93557739 723.11322021]
[-424.04568481 713.96820068]
[-418.67443848 700.07580566]
[-403.01843262 697.79541016]
[-391.12854004 688.65045166]
[-379.36465454 679.34393311]
[-367.72897339 669.87762451]
[-356.09332275 660.41131592]
[-344.45764160 650.94494629]
[-310.77929688 644.13879395]
[-302.12908936 631.88421631]
[-293.47888184 619.62969971]
[-284.82867432 607.37512207]
[-283.81027222 592.51538086]
[-269.53082275 585.70300293]
[-260.88061523 573.44848633]
[-252.23042297 561.19390869]
[-243.58021545 548.93939209]
[-234.93000793 536.68481445]
[-233.91159058 521.82507324]
[-219.63215637 515.01269531]
[-210.98194885 502.75814819]
[-209.96353149 487.89840698]
[-195.68409729 481.08602905]
[-187.03388977 468.83148193]
[-178.38368225 456.57693481]
[-177.09599304 449.30960083]
[-169.53070068 444.21517944]
[-160.71391296 432.07992554]
[-159.49263000 417.23547363]
[-145.12147522 410.61877441]
[-136.30470276 398.48348999]
[-127.48792267 386.34823608]
[-118.67114258 374.21298218]
[-109.85436249 362.07772827]
[-108.46752930 354.82867432]
[-100.83335114 349.83804321]
[-91.85164642 337.82434082]
[-82.86994171 325.81066895]
[-73.88822937 313.79696655]
[-64.90652466 301.78326416]
[-63.42080307 294.55380249]
[-55.71917725 289.66793823]
[-46.57421875 277.77804565]
[-44.94790268 262.97247314]
[-30.40138626 256.75079346]
[-21.25642586 244.86090088]
[-19.67210007 237.65240479]
[-11.90445900 232.87217712]
[-2.59795070 221.10830688]
[6.70855761 209.34442139]
[16.01506615 197.58053589]
[12.81113243 179.54711914]
[24.00927353 164.65118408]
[42.85888672 162.65084839]
[51.84059525 150.63714600]
[60.82229996 138.62345886]
[69.80400848 126.60975647]
[78.78571320 114.59606171]
[87.76742554 102.58235931]
[92.50000000 88.34850311]
[92.50000000 73.34850311]
[92.50000000 58.34850311]
[92.50000000 43.34850311]
[92.50000000 28.34850311]
[92.50000000 13.34850311]
[89.37397766 4.78025818]
[92.60384369 -1.85602736]
[92.80872345 -16.85462761]
[93.01360321 -31.85322952]
[93.21848297 -46.85182953]
[82.01860046 -58.00253677]
[82.06738281 -73.80674744]
[93.33587646 -84.88810730]
[109.13868713 -84.67224884]
[120.10029602 -73.28722382]
[119.71736145 -57.48757172]
[108.21707916 -46.64694977]
[108.01219940 -31.64834785]
[107.80731964 -16.64974785]
[107.60243988 -1.65114725]
[107.50000000 13.34850311]
[107.50000000 28.34850311]
[107.50000000 43.34850311]
[107.50000000 58.34850311]
[107.50000000 73.34850311]
[107.50000000 88.34850311]
[114.61692810 90.71479034]
[135.96771240 97.81365204]
[144.94943237 85.79995728]
[153.93113708 73.78626251]
[162.91284180 61.77256012]
[171.89454651 49.75886536]
[167.17306519 34.97755051]
[172.07350159 20.25459671]
[184.71153259 11.25127983]
[200.22758484 11.42955780]
[212.65541077 20.72088051]
[217.21627808 35.55254364]
[212.15640259 50.22146988]
[199.42144775 59.08715820]
[183.90824890 58.74057007]
[174.92654419 70.75427246]
[165.94482422 82.76796722]
[156.96311951 94.78166199]
[147.98141479 106.79536438]
[156.54811096 119.10924530]
[165.11402893 131.42204285]
[179.50117493 127.17818451]
[193.88830566 122.93432617]
[208.27543640 118.69046783]
[222.66258240 114.44660950]
[237.04971313 110.20275879]
[241.68138123 100.37990570]
[250.76333618 94.83540344]
[261.17855835 95.18983459]
[269.50427246 101.08560181]
[284.00195312 97.23631287]
[298.49966431 93.38701630]
[312.99734497 89.53772736]
[326.75445557 79.62923431]
[340.08407593 90.10577393]
[333.70697021 105.81465149]
[316.84664917 104.03541565]
[302.34893799 107.88470459]
[287.85125732 111.73400116]
[273.35357666 115.58329010]
[260.66842651 130.18716431]
[241.29357910 124.58988953]
[226.90643311 128.83375549]
[212.51930237 133.07760620]
[198.13217163 137.32145691]
[183.74502563 141.56532288]
[169.35789490 145.80917358]
[99.78112030 111.56407166]
[90.79941559 123.57776642]
[81.81770325 135.59146118]
[72.83599854 147.60516357]
[63.85429001 159.61886597]
[54.87258148 171.63255310]
[58.82572174 182.82757568]
[56.90984344 194.42306519]
[49.71384048 203.56321716]
[39.11243820 208.05351257]
[27.77894783 206.88705444]
[18.47243881 218.65092468]
[9.16593075 230.41481018]
[-0.14057770 242.17869568]
[-9.36652756 254.00585938]
[-18.51148796 265.89575195]
[-20.79191017 281.55175781]
[-34.68431854 286.92300415]
[-43.82928085 298.81289673]
[-52.89282608 310.76498413]
[-61.87453461 322.77865601]
[-70.85623932 334.79235840]
[-79.83795166 346.80606079]
[-88.81965637 358.81976318]
[-97.71910858 370.89453125]
[-106.53588867 383.02978516]
[-115.35266876 395.16503906]
[-124.16944122 407.30029297]
[-132.98622131 419.43554688]
[-134.83815002 435.14797974]
[-148.57865906 440.89669800]
[-157.39544678 453.03195190]
[-166.12913513 465.22714233]
[-174.77934265 477.48168945]
[-183.42955017 489.73623657]
[-185.06669617 505.47250366]
[-198.72740173 511.40835571]
[-207.37760925 523.66290283]
[-209.01475525 539.39916992]
[-222.67546082 545.33502197]
[-231.32566833 557.58959961]
[-239.97587585 569.84411621]
[-248.62608337 582.09869385]
[-257.27627563 594.35321045]
[-258.91342163 610.08947754]
[-272.57412720 616.02532959]
[-281.22433472 628.27990723]
[-289.87454224 640.53442383]
[-298.52474976 652.78900146]
[-283.90081787 649.45117188]
[-270.81387329 656.78137207]
[-266.02069092 670.99493408]
[-271.99603271 684.75341797]
[-285.65481567 690.95324707]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 14]
[2 13]
[15 50]
[16 49]
[17 48]
[18 47]
[21 46]
[22 45]
[24 43]
[25 42]
[27 40]
[28 39]
[29 38]
[30 37]
[31 36]
[51 224]
[52 223]
[53 222]
[54 221]
[56 219]
[57 218]
[58 217]
[59 216]
[60 215]
[62 213]
[63 212]
[65 210]
[66 209]
[67 208]
[69 207]
[70 206]
[72 204]
[73 203]
[74 202]
[75 201]
[76 200]
[78 199]
[79 198]
[80 197]
[81 196]
[82 195]
[84 194]
[85 193]
[87 191]
[88 190]
[90 189]
[91 188]
[92 187]
[93 186]
[96 181]
[97 180]
[98 179]
[99 178]
[100 177]
[101 176]
[102 128]
[103 127]
[104 126]
[105 125]
[106 124]
[107 123]
[109 122]
[110 121]
[111 120]
[112 119]
[130 147]
[131 146]
[132 145]
[133 144]
[134 143]
[149 175]
[150 174]
[151 173]
[152 172]
[153 171]
[154 170]
[158 168]
[159 167]
[160 166]
[161 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
