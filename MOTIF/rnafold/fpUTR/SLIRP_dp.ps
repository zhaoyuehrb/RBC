%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:51:23 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SLIRP)
} def

/sequence { (\
GGGGCCGCGACCUCGGCUCGAGAAGGUGCUUUAGUCUGAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.092595748 ubox
1 13 0.047991650 ubox
1 14 0.396996979 ubox
1 19 0.075067932 ubox
1 30 0.098528732 ubox
1 31 0.011058145 ubox
1 32 0.120457141 ubox
1 36 0.026504662 ubox
1 37 0.026548934 ubox
2 11 0.092718012 ubox
2 12 0.076099361 ubox
2 13 0.397922389 ubox
2 14 0.017290533 ubox
2 18 0.061204551 ubox
2 19 0.867457099 ubox
2 29 0.114121845 ubox
2 30 0.014473700 ubox
2 31 0.144231337 ubox
2 32 0.014310372 ubox
2 35 0.016995443 ubox
2 36 0.027110183 ubox
2 37 0.119978154 ubox
3 11 0.076244531 ubox
3 12 0.399329011 ubox
3 13 0.011318945 ubox
3 17 0.043374545 ubox
3 18 0.872152942 ubox
3 19 0.031413365 ubox
3 29 0.014446321 ubox
3 30 0.154784567 ubox
3 31 0.014761882 ubox
3 32 0.003955300 ubox
3 35 0.024232368 ubox
3 36 0.126103315 ubox
3 37 0.004052956 ubox
4 11 0.397817840 ubox
4 12 0.011249774 ubox
4 17 0.875085213 ubox
4 18 0.003530964 ubox
4 27 0.115305192 ubox
4 29 0.156324023 ubox
4 30 0.013466600 ubox
4 31 0.003897548 ubox
4 35 0.126254352 ubox
4 36 0.004215461 ubox
5 16 0.876176452 ubox
5 26 0.115634011 ubox
5 28 0.113231825 ubox
5 34 0.126228303 ubox
6 15 0.876070866 ubox
6 25 0.115620165 ubox
6 28 0.124961978 ubox
6 38 0.015217561 ubox
7 14 0.839721351 ubox
7 17 0.007412813 ubox
7 27 0.165082474 ubox
7 29 0.118213237 ubox
7 37 0.015006988 ubox
8 15 0.011884480 ubox
8 16 0.007257506 ubox
8 20 0.007208877 ubox
8 26 0.165780743 ubox
8 28 0.118316702 ubox
8 38 0.005387810 ubox
9 14 0.026598131 ubox
9 19 0.007507657 ubox
9 27 0.072807993 ubox
9 36 0.023788972 ubox
10 18 0.007199973 ubox
10 27 0.101187592 ubox
10 35 0.023825187 ubox
11 26 0.121820121 ubox
11 34 0.023606052 ubox
12 22 0.204551201 ubox
12 25 0.120691882 ubox
12 41 0.007714637 ubox
13 21 0.207238804 ubox
13 23 0.078315571 ubox
13 24 0.086517657 ubox
13 33 0.003917600 ubox
13 39 0.097075106 ubox
13 40 0.007524421 ubox
14 20 0.208563765 ubox
14 22 0.110780150 ubox
14 38 0.107464946 ubox
15 19 0.195142758 ubox
15 27 0.003350102 ubox
15 30 0.047599684 ubox
15 36 0.401864034 ubox
15 37 0.093173460 ubox
16 27 0.008980848 ubox
16 29 0.050670099 ubox
16 35 0.404389173 ubox
16 36 0.092778100 ubox
17 25 0.003885899 ubox
17 26 0.009287231 ubox
17 28 0.050677786 ubox
17 34 0.415123534 ubox
17 41 0.007345059 ubox
18 24 0.003827145 ubox
18 25 0.007971149 ubox
18 26 0.043418880 ubox
18 33 0.408829824 ubox
18 39 0.019798246 ubox
18 40 0.008089105 ubox
19 25 0.048076316 ubox
19 28 0.009322759 ubox
19 38 0.026525232 ubox
20 27 0.014477298 ubox
20 31 0.478706135 ubox
20 32 0.046996563 ubox
20 36 0.290903249 ubox
20 37 0.015709556 ubox
21 30 0.505723913 ubox
21 31 0.044856724 ubox
21 32 0.071454724 ubox
21 35 0.285647805 ubox
21 37 0.228770619 ubox
22 29 0.505868359 ubox
22 30 0.037671829 ubox
22 31 0.079486786 ubox
22 32 0.344745236 ubox
22 36 0.234921930 ubox
23 30 0.075738146 ubox
23 31 0.361022923 ubox
23 32 0.098131136 ubox
23 35 0.223140942 ubox
24 30 0.367932437 ubox
24 31 0.103925581 ubox
24 32 0.155278944 ubox
24 37 0.234045695 ubox
25 29 0.360790988 ubox
25 30 0.085876812 ubox
25 31 0.151089099 ubox
25 32 0.074705407 ubox
25 36 0.241100912 ubox
25 37 0.089803199 ubox
26 30 0.099496881 ubox
26 31 0.076637401 ubox
26 35 0.219733022 ubox
26 36 0.097123284 ubox
27 33 0.062283590 ubox
27 34 0.137102590 ubox
27 38 0.008639742 ubox
28 32 0.053835252 ubox
28 35 0.124016604 ubox
28 37 0.009856566 ubox
29 34 0.132184366 ubox
29 41 0.391919680 ubox
30 39 0.052482367 ubox
30 40 0.402247297 ubox
30 41 0.022244254 ubox
31 38 0.055832109 ubox
31 39 0.404325954 ubox
31 40 0.037545563 ubox
31 41 0.007529628 ubox
32 38 0.401023068 ubox
32 39 0.039203710 ubox
32 40 0.012107373 ubox
33 37 0.333978686 ubox
2 19 0.9500000 lbox
3 18 0.9500000 lbox
4 17 0.9500000 lbox
5 16 0.9500000 lbox
6 15 0.9500000 lbox
7 14 0.9500000 lbox
showpage
end
%%EOF
