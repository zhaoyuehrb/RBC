%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:31:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCACGUCGGGGGCGGGAGCGGUGCGCGCAACUUCUCGGGCCAAUAACUGCGCAGCGCGCGGGACCCGGGUGGGGAAGCUGGAGCUGUUGCGGGGUCCGCGGGGAAGUCUUGGCGGUGGAGCCAUGGUCGGCCAACUGAGCGAGGGGGCCAUUGCGGUGAGGAGGCCAUC\
) } def
/len { sequence length } bind def

/coor [
[550.37902832 431.06411743]
[538.13140869 422.40414429]
[525.88378906 413.74414062]
[518.57904053 412.44497681]
[513.49267578 404.81085205]
[501.40618896 395.92733765]
[489.31973267 387.04379272]
[477.23324585 378.16027832]
[465.14675903 369.27673340]
[453.06030273 360.39321899]
[440.97381592 351.50967407]
[428.88732910 342.62615967]
[415.47503662 351.03344727]
[399.82666016 353.66415405]
[384.32757568 350.08734131]
[371.35189819 340.82061768]
[362.89874268 327.25543213]
[360.28439331 311.44824219]
[363.93728638 295.80877686]
[351.68966675 287.14880371]
[339.44201660 278.48880005]
[327.19439697 269.82879639]
[313.72372437 276.18548584]
[298.78054810 274.93771362]
[286.38635254 266.32086182]
[279.92694092 252.56686401]
[281.22769165 237.32693481]
[268.98007202 228.66694641]
[256.73242188 220.00695801]
[244.48478699 211.34696960]
[232.23715210 202.68696594]
[219.98951721 194.02697754]
[205.39862061 196.79127502]
[192.85441589 188.18328857]
[190.05390930 172.86027527]
[177.80627441 164.20027161]
[165.55863953 155.54028320]
[150.69970703 154.50999451]
[143.89874268 140.22512817]
[131.65110779 131.56513977]
[119.40346527 122.90514374]
[111.92314911 129.41165161]
[102.25525665 133.37794495]
[91.29113770 134.07630920]
[80.15898132 131.09886169]
[70.10782623 124.43212891]
[62.36905670 114.48960114]
[58.01060104 102.09573364]
[44.50461960 95.56974792]
[30.99864006 89.04376221]
[17.49265862 82.51777649]
[3.98667860 75.99179077]
[-9.51930237 69.46580505]
[-26.41139221 68.01885986]
[-29.69718742 51.38636780]
[-14.62429619 43.62464905]
[-2.99331689 55.95982742]
[10.51266384 62.48581314]
[24.01864433 69.01179504]
[37.52462387 75.53778076]
[51.03060532 82.06376648]
[64.53659058 88.58975220]
[69.51396942 82.97943878]
[79.46874237 71.75881195]
[84.44612885 66.14849091]
[76.35760498 53.51616287]
[68.26908112 40.88383484]
[52.96942902 36.05678940]
[47.33888626 21.03425789]
[55.69671249 7.34023571]
[71.63150787 5.47960615]
[82.91945648 16.87968636]
[80.90140533 32.79530716]
[88.98993683 45.42763901]
[97.07846069 58.05996704]
[121.41957855 68.57079315]
[132.45796204 89.78788757]
[128.06346130 110.65750885]
[140.31109619 119.31749725]
[152.55873108 127.97749329]
[168.29368591 129.62721252]
[174.21862793 143.29264832]
[186.46626282 151.95263672]
[198.71389771 160.61264038]
[214.09397888 158.14465332]
[226.39144897 167.10157776]
[228.64952087 181.77934265]
[240.89715576 190.43933105]
[253.14479065 199.09933472]
[265.39242554 207.75932312]
[277.64004517 216.41931152]
[289.88769531 225.07929993]
[303.82217407 218.77235413]
[318.94277954 220.27702332]
[331.19860840 229.08956909]
[337.35665894 242.76197815]
[335.85437012 257.58117676]
[348.10202026 266.24118042]
[360.34963989 274.90115356]
[372.59729004 283.56115723]
[384.43493652 275.60623169]
[398.24942017 272.18307495]
[412.37228394 273.68405151]
[425.10494995 279.90808105]
[434.92312622 290.08731079]
[440.65917969 302.98168945]
[441.64105225 317.03021240]
[437.77087402 330.53967285]
[449.85733032 339.42321777]
[461.94381714 348.30673218]
[474.03030396 357.19027710]
[486.11676025 366.07379150]
[498.20324707 374.95733643]
[510.28973389 383.84085083]
[522.37622070 392.72436523]
[534.54376221 401.49652100]
[546.79138184 410.15649414]
[559.03906250 418.81649780]
[577.85870361 408.42550659]
[599.28051758 408.87686157]
[617.52435303 419.97741699]
[627.70312500 438.67019653]
[627.13226318 459.87585449]
[640.51611328 466.64886475]
[653.89990234 473.42187500]
[669.70684814 472.74945068]
[677.56915283 485.39990234]
[690.95294189 492.17288208]
[710.98144531 490.11959839]
[720.91394043 506.68399048]
[734.53753662 512.96075439]
[748.16113281 519.23754883]
[761.78472900 525.51428223]
[776.45507812 520.27807617]
[790.18194580 526.83770752]
[795.08343506 540.85595703]
[808.70703125 547.13269043]
[824.19458008 542.94769287]
[837.03704834 552.56286621]
[837.38275146 568.60217285]
[824.96655273 578.76171875]
[809.31298828 575.24792480]
[802.43023682 560.75628662]
[788.80664062 554.47955322]
[774.96630859 559.86285400]
[761.06060791 553.69140625]
[755.50793457 539.13787842]
[741.88433838 532.86108398]
[728.26074219 526.58435059]
[714.63714600 520.30755615]
[705.36370850 524.70849609]
[694.98413086 523.22723389]
[686.98266602 516.11596680]
[684.17993164 505.55670166]
[670.79614258 498.78369141]
[655.94653320 499.94055176]
[647.12689209 486.80566406]
[633.74310303 480.03268433]
[620.35931396 473.25967407]
[614.05578613 479.88952637]
[606.42346191 484.95440674]
[597.84326172 488.19512939]
[588.74493408 489.44381714]
[579.58544922 488.63244629]
[570.82586670 485.79656982]
[562.90838623 481.07382202]
[556.23406982 474.69723511]
[551.14215088 466.98373413]
[547.89312744 458.31838989]
[546.65539551 449.13519287]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 118]
[2 117]
[3 116]
[5 115]
[6 114]
[7 113]
[8 112]
[9 111]
[10 110]
[11 109]
[12 108]
[19 100]
[20 99]
[21 98]
[22 97]
[27 92]
[28 91]
[29 90]
[30 89]
[31 88]
[32 87]
[35 84]
[36 83]
[37 82]
[39 80]
[40 79]
[41 78]
[48 62]
[49 61]
[50 60]
[51 59]
[52 58]
[53 57]
[65 75]
[66 74]
[67 73]
[123 159]
[124 158]
[125 157]
[127 155]
[128 154]
[130 150]
[131 149]
[132 148]
[133 147]
[136 144]
[137 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
