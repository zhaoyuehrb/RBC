%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:18:08 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GRASP)
} def

/sequence { (\
UGGCAUCCCCCAGCCGCCGCCAGCCCCGCCGAGGGGAGCCAGCGCCGUCUCUGAGGGGCGUCCGGCGCCGGAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.028725388 ubox
1 16 0.010428406 ubox
1 22 0.004815461 ubox
1 41 0.047032828 ubox
1 60 0.003864830 ubox
1 64 0.026746298 ubox
1 70 0.015951299 ubox
2 8 0.033932022 ubox
2 9 0.048720893 ubox
2 10 0.006951248 ubox
2 11 0.031865052 ubox
2 15 0.055914352 ubox
2 18 0.004399980 ubox
2 21 0.005344605 ubox
2 40 0.052207786 ubox
2 59 0.005685037 ubox
2 62 0.132851251 ubox
2 63 0.172248981 ubox
2 69 0.020931576 ubox
2 75 0.951793648 ubox
3 7 0.033541437 ubox
3 8 0.048297613 ubox
3 9 0.007865477 ubox
3 10 0.031620447 ubox
3 14 0.056365281 ubox
3 17 0.004403797 ubox
3 20 0.005345423 ubox
3 39 0.052222327 ubox
3 59 0.014259650 ubox
3 61 0.135990410 ubox
3 62 0.171963523 ubox
3 68 0.020928638 ubox
3 74 0.962809035 ubox
4 13 0.056364191 ubox
4 16 0.004400331 ubox
4 19 0.005340490 ubox
4 38 0.052151923 ubox
4 58 0.012802271 ubox
4 60 0.167486669 ubox
4 67 0.020596367 ubox
4 73 0.961536159 ubox
5 61 0.089760099 ubox
6 36 0.006443643 ubox
6 37 0.051508112 ubox
6 58 0.128971986 ubox
6 60 0.089289119 ubox
6 65 0.007835184 ubox
6 71 0.052109875 ubox
6 72 0.903056206 ubox
7 35 0.006594888 ubox
7 36 0.051633763 ubox
7 56 0.004578179 ubox
7 57 0.136185211 ubox
7 58 0.205065736 ubox
7 64 0.003474490 ubox
7 70 0.051472695 ubox
7 71 0.894159065 ubox
8 34 0.006597623 ubox
8 35 0.051522546 ubox
8 36 0.007897018 ubox
8 55 0.004489028 ubox
8 56 0.139921375 ubox
8 57 0.208428526 ubox
8 58 0.013789279 ubox
8 70 0.881752289 ubox
8 71 0.264676955 ubox
9 33 0.006590122 ubox
9 34 0.051411032 ubox
9 35 0.008624378 ubox
9 55 0.140777221 ubox
9 56 0.297008635 ubox
9 57 0.015295659 ubox
9 70 0.291249162 ubox
9 71 0.083950920 ubox
10 33 0.051196771 ubox
10 34 0.009286490 ubox
10 55 0.297387083 ubox
10 56 0.018388282 ubox
10 70 0.086154996 ubox
10 71 0.223485932 ubox
11 33 0.009881968 ubox
11 53 0.329927252 ubox
11 55 0.017940720 ubox
11 70 0.231765855 ubox
12 50 0.026711986 ubox
12 52 0.329512874 ubox
13 20 0.006269631 ubox
13 29 0.050090207 ubox
13 48 0.015784503 ubox
13 49 0.032903193 ubox
13 51 0.328380497 ubox
13 66 0.153465033 ubox
13 68 0.847892412 ubox
13 74 0.010957360 ubox
14 19 0.006267049 ubox
14 28 0.050059473 ubox
14 47 0.028739331 ubox
14 65 0.153476089 ubox
14 67 0.600429508 ubox
14 71 0.027018821 ubox
14 73 0.010783315 ubox
15 28 0.005925385 ubox
15 31 0.012121794 ubox
15 44 0.008706500 ubox
15 47 0.318454658 ubox
15 64 0.153432908 ubox
15 67 0.705079013 ubox
15 70 0.027245598 ubox
16 24 0.049418940 ubox
16 27 0.006036637 ubox
16 29 0.006411889 ubox
16 30 0.012025241 ubox
16 43 0.009641209 ubox
16 45 0.042465203 ubox
16 46 0.317927788 ubox
16 48 0.076260949 ubox
16 61 0.004372162 ubox
16 63 0.150948357 ubox
16 66 0.928738374 ubox
16 68 0.005553283 ubox
16 69 0.027428733 ubox
16 74 0.004676805 ubox
17 23 0.049412273 ubox
17 28 0.006282561 ubox
17 42 0.009720861 ubox
17 44 0.034095516 ubox
17 47 0.076376176 ubox
17 60 0.007396188 ubox
17 65 0.928940449 ubox
17 67 0.004201250 ubox
17 71 0.006413597 ubox
17 73 0.004667501 ubox
18 28 0.010960301 ubox
18 44 0.330530466 ubox
18 60 0.037950447 ubox
18 64 0.928909457 ubox
18 67 0.028048750 ubox
18 70 0.006435202 ubox
19 27 0.010991688 ubox
19 29 0.005448435 ubox
19 39 0.032730426 ubox
19 43 0.333535266 ubox
19 45 0.013560413 ubox
19 59 0.036326000 ubox
19 61 0.094606958 ubox
19 63 0.922931357 ubox
19 66 0.028495419 ubox
19 68 0.003373365 ubox
19 69 0.005286337 ubox
19 74 0.003962641 ubox
20 28 0.005502507 ubox
20 38 0.032879083 ubox
20 42 0.333376068 ubox
20 44 0.013557841 ubox
20 58 0.035965722 ubox
20 60 0.098198714 ubox
20 65 0.028498180 ubox
20 67 0.004664995 ubox
20 73 0.003959411 ubox
21 57 0.034935492 ubox
21 64 0.028272121 ubox
23 39 0.323395891 ubox
23 59 0.938695114 ubox
23 61 0.010504106 ubox
24 36 0.107285105 ubox
24 38 0.321821392 ubox
24 56 0.006243397 ubox
24 57 0.004679207 ubox
24 58 0.938966685 ubox
24 60 0.010524313 ubox
25 35 0.113240255 ubox
25 36 0.319521894 ubox
25 55 0.006262623 ubox
25 56 0.006490343 ubox
25 57 0.938970081 ubox
25 58 0.007813602 ubox
26 34 0.113799881 ubox
26 35 0.319386155 ubox
26 36 0.015928553 ubox
26 55 0.006679227 ubox
26 56 0.938864129 ubox
26 57 0.008972633 ubox
26 58 0.008452494 ubox
27 33 0.114271554 ubox
27 34 0.319149184 ubox
27 35 0.015901001 ubox
27 53 0.009568663 ubox
27 55 0.938481167 ubox
27 56 0.009792194 ubox
27 57 0.008521479 ubox
28 43 0.004956796 ubox
28 45 0.008052591 ubox
28 46 0.004108493 ubox
28 48 0.003691719 ubox
28 52 0.015302334 ubox
29 36 0.009027815 ubox
29 42 0.004957087 ubox
29 44 0.007111450 ubox
29 47 0.003686195 ubox
29 56 0.018235767 ubox
30 35 0.009101471 ubox
30 44 0.008561821 ubox
30 53 0.309587340 ubox
30 55 0.023281685 ubox
31 43 0.009424702 ubox
31 49 0.133112533 ubox
31 51 0.817815267 ubox
31 52 0.134754637 ubox
32 48 0.133289190 ubox
32 50 0.819931887 ubox
32 52 0.309105907 ubox
33 40 0.010059159 ubox
33 46 0.013213048 ubox
33 49 0.818175630 ubox
33 50 0.106853233 ubox
33 51 0.319326173 ubox
33 52 0.270990746 ubox
34 39 0.010297486 ubox
34 40 0.011020518 ubox
34 45 0.013713827 ubox
34 46 0.157196540 ubox
34 48 0.738920551 ubox
34 49 0.132389489 ubox
34 50 0.313169240 ubox
34 51 0.276938935 ubox
34 52 0.006759671 ubox
35 39 0.010898378 ubox
35 45 0.157397142 ubox
35 46 0.756487287 ubox
35 48 0.140660123 ubox
35 49 0.312035299 ubox
35 50 0.277937107 ubox
35 51 0.006845192 ubox
35 52 0.012717526 ubox
36 45 0.754223060 ubox
36 48 0.286166518 ubox
36 49 0.279264088 ubox
36 50 0.003962299 ubox
36 51 0.013251957 ubox
37 48 0.267501068 ubox
37 50 0.013325422 ubox
38 45 0.513984237 ubox
38 48 0.036579980 ubox
38 49 0.013046697 ubox
38 66 0.009661677 ubox
39 44 0.517333495 ubox
39 47 0.059460408 ubox
39 56 0.004318259 ubox
39 65 0.009674598 ubox
39 71 0.013010834 ubox
40 53 0.015255497 ubox
40 55 0.004224076 ubox
40 64 0.009662974 ubox
40 70 0.013205874 ubox
41 52 0.015385989 ubox
42 48 0.007244948 ubox
42 51 0.015350464 ubox
42 59 0.026783032 ubox
42 61 0.053099733 ubox
42 68 0.035722494 ubox
42 74 0.004240215 ubox
43 47 0.008143811 ubox
43 58 0.026819535 ubox
43 60 0.056012810 ubox
43 67 0.035796932 ubox
43 73 0.004230937 ubox
44 59 0.056493051 ubox
44 66 0.035803496 ubox
45 56 0.037179639 ubox
45 57 0.016971658 ubox
45 58 0.055434672 ubox
45 65 0.035801820 ubox
45 71 0.003259045 ubox
46 53 0.005099506 ubox
46 55 0.037355295 ubox
46 56 0.023889993 ubox
46 57 0.054271493 ubox
46 60 0.044564178 ubox
46 64 0.033740975 ubox
46 70 0.003256119 ubox
47 52 0.003689857 ubox
47 59 0.052002363 ubox
47 63 0.022741111 ubox
47 74 0.005573301 ubox
48 54 0.030734150 ubox
48 56 0.037265482 ubox
48 57 0.003661452 ubox
48 58 0.054097667 ubox
49 53 0.030725446 ubox
49 55 0.041360464 ubox
49 56 0.008695128 ubox
49 57 0.054242257 ubox
49 58 0.011499486 ubox
49 73 0.007356874 ubox
50 54 0.037280566 ubox
50 55 0.008088079 ubox
50 56 0.053996381 ubox
50 57 0.011493375 ubox
50 58 0.004018115 ubox
50 72 0.007483007 ubox
51 55 0.052143368 ubox
51 56 0.012038809 ubox
51 57 0.004421322 ubox
51 58 0.008488536 ubox
51 71 0.007489247 ubox
52 56 0.004002768 ubox
52 57 0.008354868 ubox
52 70 0.007093946 ubox
53 62 0.004418862 ubox
54 61 0.004352822 ubox
55 69 0.018065336 ubox
56 68 0.018213310 ubox
56 69 0.003800277 ubox
57 68 0.003630534 ubox
57 69 0.215805329 ubox
57 75 0.020914014 ubox
58 66 0.023053422 ubox
58 68 0.216810716 ubox
58 74 0.045715256 ubox
59 65 0.023180207 ubox
59 67 0.216844639 ubox
59 73 0.047281076 ubox
60 66 0.216545733 ubox
60 74 0.018651966 ubox
61 65 0.202579398 ubox
61 72 0.110075813 ubox
61 73 0.009770361 ubox
62 71 0.119321978 ubox
63 70 0.119455859 ubox
64 69 0.117817414 ubox
64 75 0.218442343 ubox
65 74 0.221361646 ubox
66 73 0.221322423 ubox
67 74 0.038091317 ubox
68 73 0.038056758 ubox
2 75 0.9500000 lbox
3 74 0.9500000 lbox
4 73 0.9500000 lbox
6 72 0.9500000 lbox
7 71 0.9500000 lbox
8 70 0.9500000 lbox
13 68 0.9500000 lbox
14 67 0.9500000 lbox
16 66 0.9500000 lbox
17 65 0.9500000 lbox
18 64 0.9500000 lbox
19 63 0.9500000 lbox
23 59 0.9500000 lbox
24 58 0.9500000 lbox
25 57 0.9500000 lbox
26 56 0.9500000 lbox
27 55 0.9500000 lbox
31 51 0.9500000 lbox
32 50 0.9500000 lbox
33 49 0.9500000 lbox
34 48 0.9500000 lbox
35 46 0.9500000 lbox
36 45 0.9500000 lbox
showpage
end
%%EOF
