%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:10:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGAGCCGGGAGCCGAGCGCGCUGGGCGCGGCCGUCCCGCUGCCGCCGCCAAGCCCGGAGUGCGCCAGCGGCCAUGGUUCCCGCGGCGGCGCCGGGCGCCUGAGCCCCGGGACGCAAGCGCUGGAGGCGGGCUGCCGGCUGUGCGGGCGCUCCGGAGAGACCGACAGAAGGUGAGCACUGUGGGCUAUGGG\
) } def
/len { sequence length } bind def

/coor [
[129.37033081 141.76387024]
[129.12490845 126.76588440]
[121.74606323 125.42325592]
[106.98837280 122.73800659]
[99.60953522 121.39537811]
[94.09679413 135.34564209]
[88.69836426 149.34053040]
[83.41461945 163.37911987]
[78.13086700 177.41770935]
[78.21033478 194.37147522]
[61.94113159 199.14109802]
[52.85413742 184.82806396]
[64.09227753 172.13395691]
[69.37602997 158.09536743]
[74.65977478 144.05677795]
[74.07257080 136.67730713]
[80.14653778 129.83290100]
[85.65927124 115.88263702]
[80.44345093 110.49327850]
[70.01181030 99.71455383]
[64.79599762 94.32518768]
[50.67283249 99.37854004]
[36.54967117 104.43188477]
[26.16281891 116.36603546]
[11.57291412 113.36871338]
[-2.55024672 118.42205811]
[-16.67340851 123.47541046]
[-30.79656792 128.52876282]
[-44.87791443 133.69747925]
[-58.91650391 138.98123169]
[-72.95509338 144.26498413]
[-86.99368286 149.54873657]
[-97.18388367 161.65122986]
[-111.82087708 158.89302063]
[-125.85945892 164.17677307]
[-138.55357361 175.41491699]
[-152.86660767 166.32791138]
[-148.09696960 150.05871582]
[-131.14321899 150.13818359]
[-117.10462189 144.85443115]
[-107.91855621 133.12986755]
[-92.27743530 135.51014709]
[-78.23884583 130.22639465]
[-64.20025635 124.94264221]
[-50.16166687 119.65888977]
[-45.00066376 114.35178375]
[-35.84991455 114.40559387]
[-21.72675514 109.35224915]
[-7.60359430 104.29889679]
[6.51956654 99.24555206]
[15.89623642 87.67285156]
[31.49632454 90.30872345]
[45.61948395 85.25537872]
[59.74264526 80.20202637]
[70.08575439 69.33832550]
[74.44002533 54.98421860]
[78.79429626 40.63011169]
[83.14856720 26.27600861]
[87.50283813 11.92190361]
[91.85710144 -2.43220162]
[96.21137238 -16.78630638]
[100.56564331 -31.14041138]
[104.91991425 -45.49451828]
[104.41716003 -54.63160324]
[109.46463776 -60.04679489]
[114.05318451 -74.32773590]
[109.74411774 -92.22297668]
[123.17994690 -103.50149536]
[127.53421783 -117.85559845]
[131.88848877 -132.20970154]
[136.24276733 -146.56381226]
[140.59703064 -160.91792297]
[144.95129395 -175.27201843]
[143.81982422 -181.81234741]
[145.86476135 -187.13642883]
[149.69000244 -190.02027893]
[154.51159668 -204.22424316]
[159.33317566 -218.42819214]
[155.31748962 -236.39154053]
[168.93606567 -247.44871521]
[173.52461243 -261.72964478]
[178.11315918 -276.01058960]
[182.70169067 -290.29153442]
[187.29023743 -304.57247925]
[179.01348877 -319.97525024]
[184.32502747 -336.28002930]
[199.47776794 -343.55944824]
[203.83203125 -357.91354370]
[208.18630981 -372.26763916]
[212.54057312 -386.62176514]
[216.89483643 -400.97586060]
[221.24911499 -415.32995605]
[213.57070923 -426.40771484]
[213.67807007 -439.69125366]
[221.30764771 -450.32696533]
[233.48835754 -454.55792236]
[238.07690430 -468.83883667]
[242.66545105 -483.11978149]
[247.13700867 -497.43777466]
[251.49127197 -511.79190063]
[255.84555054 -526.14599609]
[260.19982910 -540.50012207]
[253.93569946 -555.26965332]
[261.70379639 -569.30664062]
[277.54507446 -571.84301758]
[289.30746460 -560.93316650]
[287.96789551 -544.94610596]
[274.55392456 -536.14581299]
[270.19964600 -521.79174805]
[265.84536743 -507.43762207]
[261.49111938 -493.08352661]
[262.55969238 -485.75827026]
[256.94638062 -478.53125000]
[252.35784912 -464.25030518]
[247.76930237 -449.96936035]
[256.08621216 -435.36032104]
[251.17465210 -418.93060303]
[235.60322571 -410.97570801]
[231.24894714 -396.62158203]
[226.89468384 -382.26748657]
[222.54040527 -367.91339111]
[218.18614197 -353.55926514]
[213.83186340 -339.20516968]
[221.43984985 -328.79415894]
[221.66061401 -315.70675659]
[214.18923950 -304.72302246]
[201.57118225 -299.98391724]
[196.98263550 -285.70300293]
[192.39408875 -271.42205811]
[187.80554199 -257.14111328]
[183.21699524 -242.86016846]
[188.46501160 -231.95013428]
[184.74684143 -220.00790405]
[173.53713989 -213.60659790]
[168.71554565 -199.40264893]
[163.89395142 -185.19869995]
[159.30540466 -170.91775513]
[154.95114136 -156.56364441]
[150.59686279 -142.20954895]
[146.24259949 -127.85543823]
[141.88832092 -113.50133514]
[137.53405762 -99.14722443]
[142.95986938 -88.32450867]
[139.43759155 -76.32305145]
[128.33412170 -69.73918915]
[123.74557495 -55.45824814]
[119.27401733 -41.14024734]
[114.91975403 -26.78614235]
[110.56548309 -12.43203640]
[106.21121216 1.92206848]
[101.85694122 16.27617264]
[97.50267029 30.63027763]
[93.14839935 44.98438263]
[88.79412842 59.33848953]
[84.43985748 73.69259644]
[109.51947021 52.33647919]
[153.35954285 60.07102966]
[184.35125732 107.51376343]
[193.48268127 119.41407013]
[201.20257568 124.32755280]
[202.66426086 131.58460999]
[211.59974670 143.63272095]
[226.03515625 150.10801697]
[227.40213013 164.93975830]
[236.33761597 176.98786926]
[245.27310181 189.03598022]
[254.20858765 201.08410645]
[269.45748901 199.24908447]
[283.57458496 205.29911804]
[292.76248169 217.60676575]
[294.54968262 232.86131287]
[288.45544434 246.95939636]
[276.11904907 256.10867310]
[260.85897827 257.84805298]
[246.78007507 251.70964050]
[237.66950989 239.34465027]
[235.97796631 224.07917786]
[242.16047668 210.01959229]
[233.22499084 197.97148132]
[224.28950500 185.92337036]
[215.35401917 173.87524414]
[201.55772400 168.26171875]
[199.55163574 152.56820679]
[190.61614990 140.52009583]
[181.58238220 128.54548645]
[172.45095825 116.64518738]
[165.36894226 119.11400604]
[151.20492554 124.05164337]
[144.12290955 126.52045441]
[144.36833191 141.51844788]
[146.87396240 160.73750305]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 190]
[2 189]
[5 18]
[6 17]
[7 15]
[8 14]
[9 13]
[21 54]
[22 53]
[23 52]
[25 50]
[26 49]
[27 48]
[28 47]
[29 45]
[30 44]
[31 43]
[32 42]
[34 40]
[35 39]
[55 155]
[56 154]
[57 153]
[58 152]
[59 151]
[60 150]
[61 149]
[62 148]
[63 147]
[65 146]
[66 145]
[68 142]
[69 141]
[70 140]
[71 139]
[72 138]
[73 137]
[76 136]
[77 135]
[78 134]
[80 131]
[81 130]
[82 129]
[83 128]
[84 127]
[87 123]
[88 122]
[89 121]
[90 120]
[91 119]
[92 118]
[96 115]
[97 114]
[98 113]
[99 111]
[100 110]
[101 109]
[102 108]
[158 186]
[159 185]
[161 184]
[162 183]
[164 181]
[165 180]
[166 179]
[167 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
