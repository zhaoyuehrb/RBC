%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:58:36 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TXNDC8)
} def

/sequence { (\
AGGCAGGAUACUGUAAUAAAUAGGAGACAGCUACAGUGAUCCAACUAAACCAACAGGGGAUUUUCAUCAGCACUUCCCUGGUGUAAUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 46 0.377830098 ubox
2 32 0.009653158 ubox
2 42 0.012856670 ubox
2 45 0.400148458 ubox
2 46 0.612418522 ubox
2 51 0.059302639 ubox
2 88 0.019181520 ubox
3 14 0.113007713 ubox
3 31 0.010035739 ubox
3 41 0.012513180 ubox
3 45 0.635471738 ubox
3 50 0.059142824 ubox
3 82 0.039704351 ubox
3 84 0.135363008 ubox
3 87 0.013692764 ubox
4 13 0.115366710 ubox
4 30 0.010028391 ubox
4 80 0.003768512 ubox
4 81 0.040899703 ubox
4 83 0.137908156 ubox
5 12 0.115347810 ubox
5 46 0.025836026 ubox
5 79 0.003575497 ubox
5 82 0.118105980 ubox
6 11 0.115273013 ubox
6 41 0.025755272 ubox
6 42 0.991717580 ubox
6 45 0.013443806 ubox
6 78 0.003330677 ubox
7 40 0.025926841 ubox
7 41 0.992694545 ubox
7 77 0.003298721 ubox
8 40 0.990541790 ubox
9 38 0.686990896 ubox
9 39 0.708674592 ubox
10 37 0.974960417 ubox
11 23 0.010865729 ubox
11 30 0.004449971 ubox
11 36 0.993158031 ubox
12 22 0.010927530 ubox
12 29 0.004713851 ubox
12 35 0.992977639 ubox
13 21 0.010935606 ubox
13 28 0.004931024 ubox
13 31 0.004113295 ubox
13 34 0.993156050 ubox
14 20 0.011027737 ubox
14 22 0.005221662 ubox
14 27 0.004967969 ubox
14 30 0.004958091 ubox
14 33 0.982582155 ubox
15 21 0.008667315 ubox
15 32 0.924259077 ubox
15 84 0.003480858 ubox
16 82 0.004968515 ubox
16 84 0.034472171 ubox
16 87 0.004485077 ubox
17 33 0.010383321 ubox
17 47 0.006671049 ubox
17 81 0.005018769 ubox
17 83 0.035263124 ubox
17 85 0.010642564 ubox
17 86 0.004412829 ubox
18 32 0.016082558 ubox
18 46 0.006811502 ubox
18 82 0.033575709 ubox
18 84 0.010803971 ubox
20 82 0.010163064 ubox
20 84 0.004442386 ubox
21 33 0.120457713 ubox
21 47 0.024995683 ubox
21 80 0.044848719 ubox
21 81 0.007854502 ubox
21 83 0.004318952 ubox
22 32 0.205500078 ubox
22 46 0.026446694 ubox
22 79 0.047790581 ubox
22 82 0.003614331 ubox
23 31 0.243651495 ubox
23 32 0.120821127 ubox
23 42 0.097268513 ubox
23 45 0.026040176 ubox
23 46 0.004747320 ubox
23 76 0.006580122 ubox
23 77 0.013918013 ubox
23 78 0.047927278 ubox
24 31 0.153427148 ubox
24 41 0.097406641 ubox
24 45 0.004953520 ubox
24 75 0.006891799 ubox
24 76 0.014787656 ubox
24 77 0.047643223 ubox
25 32 0.087606740 ubox
25 40 0.096836632 ubox
25 74 0.010085216 ubox
25 75 0.014808935 ubox
26 31 0.110846906 ubox
26 41 0.027018689 ubox
26 73 0.011211659 ubox
26 74 0.012192211 ubox
26 75 0.026724985 ubox
26 76 0.035308279 ubox
27 37 0.046677506 ubox
27 40 0.027010676 ubox
27 74 0.028070836 ubox
27 75 0.034038513 ubox
28 36 0.047867517 ubox
28 38 0.061084859 ubox
28 83 0.003224747 ubox
29 37 0.058761060 ubox
29 74 0.004825971 ubox
30 37 0.061651390 ubox
30 71 0.050173755 ubox
30 73 0.003606658 ubox
31 36 0.064642249 ubox
31 70 0.050261749 ubox
32 69 0.048950236 ubox
32 85 0.003730554 ubox
33 84 0.003981841 ubox
34 83 0.004005067 ubox
35 46 0.019780804 ubox
35 64 0.003623684 ubox
36 45 0.020894583 ubox
36 63 0.003288389 ubox
36 67 0.031922236 ubox
37 44 0.020715024 ubox
37 66 0.032319592 ubox
38 62 0.038871031 ubox
38 63 0.004438065 ubox
38 65 0.031963785 ubox
39 61 0.042295412 ubox
39 62 0.003353462 ubox
39 64 0.028391030 ubox
40 59 0.003679950 ubox
40 60 0.050570875 ubox
41 58 0.003908081 ubox
41 59 0.050683818 ubox
42 57 0.003988365 ubox
42 58 0.050599049 ubox
43 64 0.003377471 ubox
44 63 0.003555904 ubox
44 82 0.021401642 ubox
44 84 0.061922134 ubox
45 56 0.046241458 ubox
45 57 0.009220535 ubox
45 58 0.008038821 ubox
45 59 0.006937444 ubox
45 81 0.022158757 ubox
45 83 0.063845924 ubox
46 55 0.045842791 ubox
46 56 0.009023328 ubox
46 57 0.006792159 ubox
46 58 0.006935465 ubox
46 80 0.013749059 ubox
46 83 0.009412541 ubox
46 85 0.140062299 ubox
47 62 0.011432957 ubox
47 63 0.014494403 ubox
47 64 0.004897387 ubox
47 79 0.007240265 ubox
47 82 0.006864120 ubox
47 84 0.142928001 ubox
48 61 0.012906269 ubox
48 62 0.016872613 ubox
48 63 0.005528470 ubox
49 61 0.017205065 ubox
49 62 0.005045701 ubox
49 82 0.339498948 ubox
49 84 0.384919925 ubox
50 57 0.111628341 ubox
50 58 0.093439512 ubox
50 59 0.041369494 ubox
50 81 0.350591877 ubox
50 83 0.377908396 ubox
51 56 0.111821674 ubox
51 57 0.093438206 ubox
51 58 0.041982989 ubox
51 80 0.335980490 ubox
51 83 0.676418533 ubox
52 79 0.236446658 ubox
52 82 0.588862962 ubox
53 82 0.151392276 ubox
53 84 0.069760784 ubox
54 80 0.907884045 ubox
54 81 0.148401971 ubox
54 83 0.071658259 ubox
55 75 0.003290458 ubox
55 79 0.928473730 ubox
55 82 0.067391716 ubox
56 65 0.005418275 ubox
56 68 0.006403995 ubox
56 74 0.003751808 ubox
56 75 0.005752763 ubox
56 76 0.006457585 ubox
56 77 0.016238409 ubox
56 78 0.944682644 ubox
56 79 0.217269863 ubox
57 64 0.005108852 ubox
57 65 0.003299497 ubox
57 67 0.005455954 ubox
57 68 0.005039651 ubox
57 73 0.003774838 ubox
57 74 0.006577367 ubox
57 75 0.006502837 ubox
57 76 0.016352019 ubox
57 77 0.943216886 ubox
57 78 0.279394480 ubox
58 63 0.004124470 ubox
58 64 0.003235075 ubox
58 65 0.007636042 ubox
58 67 0.004967515 ubox
58 68 0.003222052 ubox
58 73 0.007485507 ubox
58 74 0.008743740 ubox
58 75 0.015335624 ubox
58 76 0.941605036 ubox
58 77 0.284452065 ubox
58 88 0.007671389 ubox
59 64 0.006820758 ubox
59 65 0.023264144 ubox
59 68 0.092291433 ubox
59 73 0.020612602 ubox
59 74 0.019403953 ubox
59 75 0.917936284 ubox
59 76 0.289341225 ubox
59 87 0.005876761 ubox
59 88 0.136402247 ubox
60 64 0.020643313 ubox
60 67 0.092847589 ubox
60 74 0.862445686 ubox
60 75 0.290044406 ubox
60 87 0.138713897 ubox
61 66 0.086050139 ubox
61 70 0.140718389 ubox
61 86 0.136921099 ubox
62 69 0.124556260 ubox
62 70 0.158188778 ubox
62 85 0.132268563 ubox
62 86 0.034687725 ubox
63 69 0.146624441 ubox
63 70 0.159741819 ubox
63 85 0.034500402 ubox
63 86 0.022494457 ubox
64 69 0.144075868 ubox
64 85 0.025818178 ubox
65 83 0.151817476 ubox
66 82 0.152146713 ubox
66 87 0.004428719 ubox
67 81 0.152124528 ubox
67 86 0.004554200 ubox
68 80 0.152229095 ubox
68 83 0.003348043 ubox
69 75 0.005971380 ubox
69 79 0.152088716 ubox
69 82 0.003386140 ubox
70 74 0.006375477 ubox
70 78 0.151182560 ubox
70 84 0.056016513 ubox
71 80 0.003458869 ubox
71 83 0.057257573 ubox
72 82 0.057269919 ubox
73 81 0.057280614 ubox
74 80 0.056588533 ubox
80 88 0.004529917 ubox
81 87 0.015370869 ubox
82 86 0.014806094 ubox
6 42 0.9500000 lbox
7 41 0.9500000 lbox
8 40 0.9500000 lbox
9 39 0.9500000 lbox
10 37 0.9500000 lbox
11 36 0.9500000 lbox
12 35 0.9500000 lbox
13 34 0.9500000 lbox
14 33 0.9500000 lbox
15 32 0.9500000 lbox
51 83 0.9500000 lbox
52 82 0.9500000 lbox
54 80 0.9500000 lbox
55 79 0.9500000 lbox
56 78 0.9500000 lbox
57 77 0.9500000 lbox
58 76 0.9500000 lbox
59 75 0.9500000 lbox
60 74 0.9500000 lbox
showpage
end
%%EOF
