%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:23:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAACUGGCAGCGACAGCUGCAGACGGGCUGAACCAGCUUUGUUCCCAGGGUGGCGCCUGCUCUCCAUCCAGGCCCCAUUCCGGCUCCCACCCGACGCUGCUUUUGUUCCCACGUUUCGGGGGGCAGCUGGCACUGUGAUUCCUGCCCCAUGAGUGCCUAGAGGCACGGAGCCACCAGGGAUCACCCCACGUGGGACACAGGGCUUGGGGAGG\
) } def
/len { sequence length } bind def

/coor [
[-28.05603409 420.40097046]
[-34.42288589 433.98269653]
[-40.78973389 447.56442261]
[-35.65081024 462.26916504]
[-42.30117798 475.95223999]
[-56.35156631 480.76080322]
[-62.71841431 494.34252930]
[-69.08526611 507.92425537]
[-69.89369202 517.01971436]
[-75.64565277 521.65686035]
[-82.21027374 535.14410400]
[-88.77489471 548.63134766]
[-95.33951569 562.11859131]
[-93.64318085 578.42980957]
[-107.07790375 587.83404541]
[-121.82319641 580.65710449]
[-122.71035767 564.28198242]
[-108.82675934 555.55401611]
[-102.26213837 542.06671143]
[-95.69751740 528.57946777]
[-89.13289642 515.09222412]
[-82.66699219 501.55740356]
[-76.30014038 487.97567749]
[-69.93328857 474.39395142]
[-75.22485352 460.51828003]
[-68.96144104 446.65377808]
[-54.37145996 441.19757080]
[-48.00460815 427.61584473]
[-41.63775635 414.03411865]
[-35.47003555 400.36080933]
[-29.50276184 386.59884644]
[-35.86700439 375.39703369]
[-34.59937286 362.38055420]
[-25.93960190 352.32217407]
[-12.87866116 349.03924561]
[-6.71094084 335.36593628]
[-0.54321975 321.69262695]
[5.52443981 307.97463989]
[11.49171448 294.21267700]
[17.45898819 280.45071411]
[23.42626381 266.68875122]
[29.39353752 252.92678833]
[35.36081314 239.16482544]
[41.32808685 225.40286255]
[47.19465637 211.59767151]
[52.96021271 197.74998474]
[58.72576523 183.90229797]
[64.49131775 170.05461121]
[70.25687408 156.20692444]
[75.71755219 142.23620605]
[80.87073517 128.14916992]
[86.02391052 114.06212616]
[79.75646210 100.43424225]
[65.70744324 95.17828369]
[51.65842819 89.92232513]
[36.02204132 92.33354187]
[26.81279373 80.62717438]
[12.76377678 75.37120819]
[-1.28523970 70.11524963]
[-15.33425617 64.85928345]
[-29.38327217 59.60332489]
[-41.68090439 68.91846466]
[-57.06421661 70.08347321]
[-70.62445068 62.72660065]
[-78.03458405 49.19540024]
[-76.93007660 33.80762482]
[-67.66336823 21.47346115]
[-53.19142914 16.12869453]
[-38.13220596 19.47881889]
[-27.29104042 30.45482445]
[-24.12730980 45.55430603]
[-10.07829380 50.81026840]
[3.97072220 56.06623077]
[18.01973915 61.32219315]
[32.06875610 66.57815552]
[46.70026398 63.79099655]
[56.91438675 75.87330627]
[70.96340179 81.12926483]
[85.01242065 86.38523102]
[91.14381409 82.06596375]
[103.40660095 73.42744446]
[109.53799438 69.10818481]
[109.31881714 54.10978317]
[109.09964752 39.11138535]
[108.88047791 24.11298752]
[108.66130066 9.11458874]
[108.44213104 -5.88381004]
[108.11338043 -20.88020706]
[107.67508698 -35.87380219]
[107.23678589 -50.86739731]
[103.85880280 -59.35094070]
[106.90323639 -66.08292389]
[106.68405914 -81.08132172]
[106.46488953 -96.07971954]
[106.24571991 -111.07811737]
[106.02654266 -126.07651520]
[98.08842468 -139.76216125]
[105.63893890 -152.60113525]
[105.41976166 -167.59953308]
[105.09101868 -182.59591675]
[104.65271759 -197.58952332]
[91.09492493 -204.80628967]
[82.97554016 -217.84359741]
[82.47863770 -233.19444275]
[89.73787689 -246.72955322]
[102.80056000 -254.80802917]
[118.15289307 -255.25682068]
[131.66517639 -247.95518494]
[139.70266724 -234.86724854]
[140.10333252 -219.51358032]
[132.75938416 -206.02424622]
[119.64631653 -198.02781677]
[120.08461761 -183.03422546]
[123.42112732 -176.44212341]
[120.41815948 -167.81869507]
[120.63733673 -152.82029724]
[128.55976868 -140.20744324]
[121.02494049 -126.29569244]
[121.24411774 -111.29728699]
[121.46328735 -96.29888916]
[121.68246460 -81.30049133]
[121.90163422 -66.30209351]
[122.23037720 -51.30569839]
[122.66867828 -36.31210327]
[123.10697937 -21.31850624]
[126.44349670 -14.72640800]
[123.44052887 -6.10298300]
[123.65969849 8.89541531]
[123.87887573 23.89381409]
[124.09804535 38.89221191]
[124.31722260 53.89060974]
[124.53639221 68.88900757]
[131.01132202 55.35847855]
[145.79162598 52.80064392]
[156.43693542 63.36840057]
[153.98722839 78.16701508]
[140.50430298 84.74068451]
[155.50390625 84.85028076]
[170.50350952 84.95986938]
[185.50311279 85.06945801]
[200.50270081 85.17904663]
[215.50230408 85.28863525]
[230.50190735 85.39822388]
[245.50151062 85.50781250]
[260.50109863 85.61740112]
[275.50070190 85.72698975]
[280.31951904 71.40090942]
[289.31823730 59.28210831]
[301.60549927 50.54991150]
[315.97070312 46.04923630]
[331.00323486 46.20883942]
[345.23107910 51.00050354]
[357.26480103 59.94304657]
[365.93350220 72.15058899]
[370.39840698 86.42033386]
[385.39801025 86.52992249]
[400.39761353 86.63951111]
[415.39721680 86.74909973]
[430.39682007 86.85868835]
[444.38354492 78.29694366]
[458.66040039 86.36559296]
[458.54058838 102.76430511]
[444.14736938 110.62348938]
[430.28723145 101.85829163]
[415.28762817 101.74869537]
[400.28802490 101.63910675]
[385.28842163 101.52951813]
[370.28881836 101.41992950]
[365.61587524 115.62290955]
[356.76974487 127.70248413]
[344.60662842 136.46824646]
[330.31030273 141.05149841]
[315.27703857 140.99143982]
[300.97915649 136.28134155]
[288.82077026 127.37054443]
[280.00009155 115.12155151]
[275.39111328 100.72659302]
[260.39151001 100.61700439]
[245.39192200 100.50741577]
[230.39231873 100.39782715]
[215.39271545 100.28823090]
[200.39311218 100.17864227]
[185.39352417 100.06905365]
[170.39392090 99.95946503]
[155.39431763 99.84987640]
[140.39471436 99.74028778]
[100.11095428 119.21530151]
[94.95777130 133.30233765]
[89.80459595 147.38938904]
[90.70306396 152.52523804]
[89.64894867 157.04145813]
[87.20458984 160.29853821]
[84.10456085 161.97247314]
[78.33900452 175.82015991]
[72.57344818 189.66784668]
[66.80789948 203.51553345]
[61.04234314 217.36322021]
[60.63327408 226.48538208]
[55.09004974 231.37013245]
[49.12277603 245.13209534]
[43.15550232 258.89407349]
[37.18822861 272.65603638]
[31.22095299 286.41799927]
[25.25367737 300.17996216]
[19.28640366 313.94192505]
[18.74409103 323.05712891]
[13.13008308 327.86035156]
[6.96236229 341.53366089]
[0.79464155 355.20697021]
[7.28242254 371.45437622]
[0.15127847 387.05917358]
[-15.74079895 392.56613159]
[-21.70807457 406.32809448]
[-21.33382988 412.92407227]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 29]
[2 28]
[3 27]
[6 24]
[7 23]
[8 22]
[10 21]
[11 20]
[12 19]
[13 18]
[30 213]
[31 212]
[35 209]
[36 208]
[37 207]
[38 205]
[39 204]
[40 203]
[41 202]
[42 201]
[43 200]
[44 199]
[45 197]
[46 196]
[47 195]
[48 194]
[49 193]
[50 189]
[51 188]
[52 187]
[53 79]
[54 78]
[55 77]
[57 75]
[58 74]
[59 73]
[60 72]
[61 71]
[82 132]
[83 131]
[84 130]
[85 129]
[86 128]
[87 127]
[88 125]
[89 124]
[90 123]
[92 122]
[93 121]
[94 120]
[95 119]
[96 118]
[98 116]
[99 115]
[100 113]
[101 112]
[137 186]
[138 185]
[139 184]
[140 183]
[141 182]
[142 181]
[143 180]
[144 179]
[145 178]
[146 177]
[155 168]
[156 167]
[157 166]
[158 165]
[159 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
