%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:37:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAGUCUCGCUCAGGCUCGGUUUUACCCCGGAGUCUAUUCGAAGGGGGCUGCUACGUCAGCGCGUCUCAGCGUAAGACGGCGCUAUUCCGCUGUAACAGCUUCCGGCGGGUCCUGGAUGUUGAUGUCCUGCAUCUAACGCGGUGUAACCCCCGAAGCCGAGCGAGCUCCGGAGGAAUUUCAGUAUCUGCUACGGUAACUUCAUCAGCCCGCCAAG\
) } def
/len { sequence length } bind def

/coor [
[326.60394287 417.64019775]
[340.60873413 423.01980591]
[331.30520630 411.25357056]
[322.00167847 399.48733521]
[315.38980103 396.19143677]
[312.64990234 387.48162842]
[303.51846313 375.58132935]
[294.38705444 363.68103027]
[285.25564575 351.78073120]
[276.12420654 339.88043213]
[266.99279785 327.98013306]
[257.86135864 316.07983398]
[251.29812622 312.68811035]
[248.68518066 303.93939209]
[239.72779846 291.90756226]
[230.77043152 279.87570190]
[221.81304932 267.84387207]
[212.76840210 255.87747192]
[203.63697815 243.97717285]
[194.50556946 232.07687378]
[177.75148010 230.59489441]
[167.04365540 217.18902588]
[169.39154053 199.85208130]
[160.08799744 188.08584595]
[150.78446960 176.31961060]
[141.48094177 164.55337524]
[127.51776886 159.36885071]
[125.02767181 143.74484253]
[115.72414398 131.97860718]
[106.42060852 120.21236420]
[87.79381561 120.04255676]
[74.64113617 104.33157349]
[78.33499908 82.28532410]
[66.17414856 73.50388336]
[54.01329422 64.72243500]
[41.85244370 55.94099808]
[29.50292206 47.42693329]
[16.97060585 39.18429947]
[4.43828869 30.94166374]
[-8.09402847 22.69902802]
[-20.62634659 14.45639420]
[-35.91458893 17.44090843]
[-48.50672150 8.90317726]
[-51.25778580 -5.69022036]
[-63.79010391 -13.93285465]
[-76.32241821 -22.17548943]
[-88.85473633 -30.41812325]
[-101.38705444 -38.66075897]
[-113.91937256 -46.90339279]
[-126.45169067 -55.14602661]
[-138.98400879 -63.38866425]
[-154.76559448 -64.50756073]
[-161.14735413 -77.96572876]
[-173.67967224 -86.20836639]
[-186.21199036 -94.45100403]
[-215.43756104 -82.15930176]
[-229.37777710 -87.69739532]
[-243.31799316 -93.23548889]
[-261.47286987 -90.14588165]
[-271.80953979 -104.32955170]
[-285.82882690 -109.66430664]
[-299.84811401 -114.99906921]
[-313.86740112 -120.33383179]
[-328.18215942 -113.63582611]
[-343.01174927 -119.10015106]
[-349.55801392 -133.48492432]
[-343.93722534 -148.25590515]
[-329.48403931 -154.64974976]
[-314.77331543 -148.87309265]
[-308.53262329 -134.35311890]
[-294.51333618 -129.01835632]
[-280.49407959 -123.68359375]
[-266.47479248 -118.34883118]
[-255.31616211 -123.01302338]
[-243.59428406 -118.68622589]
[-237.77989197 -107.17569733]
[-223.83969116 -101.63760376]
[-209.89947510 -96.09951782]
[-200.85482788 -108.06590271]
[-209.98625183 -119.96620941]
[-219.11767578 -131.86650085]
[-228.24909973 -143.76679993]
[-243.94892883 -145.58093262]
[-253.70199585 -158.01689148]
[-251.72198486 -173.69667053]
[-239.18359375 -183.31770325]
[-223.52563477 -181.17202759]
[-214.03768921 -168.53262329]
[-216.34880066 -152.89822388]
[-207.21737671 -140.99792480]
[-198.08595276 -129.09762573]
[-188.95452881 -117.19732666]
[-177.96936035 -106.98331451]
[-165.43704224 -98.74068451]
[-152.90472412 -90.49804688]
[-138.01953125 -89.96871948]
[-130.74136353 -75.92098236]
[-118.20905304 -67.67834473]
[-105.67673492 -59.43571091]
[-93.14441681 -51.19307709]
[-80.61209869 -42.95044327]
[-68.07978821 -34.70780563]
[-55.54746628 -26.46517181]
[-43.01515198 -18.22253799]
[-28.52561760 -21.47661781]
[-15.69864655 -13.29594135]
[-12.38371086 1.92407703]
[0.14860605 10.16671181]
[12.68092346 18.40934563]
[25.21323967 26.65198135]
[37.74555588 34.89461517]
[41.25061417 34.54544067]
[45.09898758 35.87427139]
[48.50123596 39.02402878]
[50.63388824 43.78014755]
[62.79473877 52.56158829]
[74.95558929 61.34302902]
[87.11643982 70.12447357]
[101.88855743 67.51974487]
[110.31258392 55.10863495]
[118.73661804 42.69752502]
[127.07017517 30.22548103]
[135.31280518 17.69316292]
[143.55543518 5.16084671]
[151.79808044 -7.37147045]
[160.04071045 -19.90378761]
[163.69281006 -36.45970917]
[180.61271667 -37.53346634]
[186.32841492 -21.57203674]
[172.57302856 -11.66115284]
[164.33039856 0.87116420]
[156.08775330 13.40348148]
[147.84512329 25.93579865]
[139.60249329 38.46811676]
[138.55360413 45.78109741]
[131.14773560 51.12155533]
[122.72370148 63.53266907]
[114.29966736 75.94377899]
[123.84942627 93.98389435]
[118.18684387 110.90883636]
[127.49037933 122.67507172]
[136.79391479 134.44129944]
[151.42253113 140.46742249]
[153.24717712 155.24984741]
[162.55070496 167.01608276]
[171.85423279 178.78231812]
[181.15777588 190.54855347]
[194.62452698 190.56138611]
[205.46749878 198.21524048]
[209.85848999 210.53366089]
[206.40586853 222.94544983]
[215.53727722 234.84574890]
[224.66870117 246.74604797]
[232.37257385 251.64686584]
[233.84489441 258.88647461]
[242.80227661 270.91833496]
[251.75964355 282.95016479]
[260.71704102 294.98202515]
[269.76165771 306.94842529]
[278.89309692 318.84872437]
[288.02450562 330.74902344]
[297.15594482 342.64932251]
[306.28735352 354.54962158]
[315.41876221 366.44992065]
[324.55020142 378.35021973]
[333.76791382 390.18380737]
[343.07144165 401.95004272]
[352.37496948 413.71627808]
[362.61306763 418.08938599]
[365.87622070 427.41531372]
[377.50588989 436.88897705]
[389.13555908 446.36264038]
[400.76525879 455.83633423]
[416.27764893 454.42108154]
[427.93685913 464.19442749]
[429.19046021 478.99185181]
[440.82015991 488.46551514]
[452.44982910 497.93920898]
[467.96224976 496.52395630]
[479.62142944 506.29727173]
[480.87506104 521.09472656]
[492.50473022 530.56842041]
[504.13439941 540.04205322]
[520.40148926 542.11895752]
[526.48596191 557.34759521]
[516.12860107 570.06207275]
[499.98422241 567.18280029]
[494.66073608 551.67175293]
[483.03106689 542.19805908]
[471.40136719 532.72442627]
[456.65612793 534.48895264]
[444.72705078 525.04699707]
[442.97616577 509.56887817]
[431.34646606 500.09521484]
[419.71679688 490.62152100]
[404.97155762 492.38610840]
[393.04244995 482.94412231]
[391.29156494 467.46600342]
[379.66189575 457.99234009]
[368.03222656 448.51864624]
[356.40252686 439.04498291]
[361.57742310 453.12405396]
[361.76898193 468.12283325]
[356.95541382 482.32949829]
[347.68600464 494.12265015]
[335.01870728 502.15634155]
[320.39926147 505.51364136]
[305.49615479 503.81146240]
[292.01028442 497.24401855]
[281.48080444 486.56085205]
[275.10940552 472.98126221]
[273.62329102 458.05505371]
[277.19207764 443.48577881]
[285.40841675 430.93621826]
[297.33459473 421.83862305]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 168]
[3 167]
[4 166]
[6 165]
[7 164]
[8 163]
[9 162]
[10 161]
[11 160]
[12 159]
[14 158]
[15 157]
[16 156]
[17 155]
[18 153]
[19 152]
[20 151]
[23 147]
[24 146]
[25 145]
[26 144]
[28 142]
[29 141]
[30 140]
[33 118]
[34 117]
[35 116]
[36 115]
[37 111]
[38 110]
[39 109]
[40 108]
[41 107]
[44 104]
[45 103]
[46 102]
[47 101]
[48 100]
[49 99]
[50 98]
[51 97]
[53 95]
[54 94]
[55 93]
[56 78]
[57 77]
[58 76]
[60 73]
[61 72]
[62 71]
[63 70]
[79 92]
[80 91]
[81 90]
[82 89]
[119 138]
[120 137]
[121 136]
[122 134]
[123 133]
[124 132]
[125 131]
[126 130]
[170 201]
[171 200]
[172 199]
[173 198]
[176 195]
[177 194]
[178 193]
[181 190]
[182 189]
[183 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
