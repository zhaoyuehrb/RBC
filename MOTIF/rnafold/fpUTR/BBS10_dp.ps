%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:39:15 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (BBS10)
} def

/sequence { (\
AUUCCGUUUCCGGCCGUUCCCACCCCUGUUUUCGGUCGGCCCGGGUGUUCUGCAAGCUGGUCAAAAAGGGGAAGCGGCCCAGAU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.018455568 ubox
1 84 0.012045535 ubox
2 6 0.019014264 ubox
2 82 0.003606256 ubox
2 83 0.013624947 ubox
3 45 0.010878697 ubox
3 81 0.004695698 ubox
3 82 0.012907383 ubox
3 83 0.037932843 ubox
4 12 0.003245538 ubox
4 13 0.012290158 ubox
4 44 0.014787826 ubox
4 77 0.018210830 ubox
4 82 0.040419183 ubox
5 12 0.030337451 ubox
5 43 0.014807380 ubox
5 76 0.018425439 ubox
6 11 0.067460727 ubox
6 42 0.014686221 ubox
6 75 0.018430519 ubox
6 84 0.372478371 ubox
7 74 0.018412425 ubox
7 82 0.057888616 ubox
7 83 0.401391114 ubox
8 73 0.018356559 ubox
8 81 0.070054993 ubox
8 82 0.403252788 ubox
8 83 0.194028679 ubox
9 72 0.018330856 ubox
9 81 0.365827721 ubox
9 82 0.203905742 ubox
9 83 0.438178201 ubox
10 39 0.015095698 ubox
10 71 0.018067411 ubox
10 82 0.468013837 ubox
11 38 0.015303052 ubox
11 70 0.017588398 ubox
12 21 0.005749933 ubox
12 37 0.020171082 ubox
12 41 0.008413285 ubox
12 62 0.003887851 ubox
12 79 0.986971504 ubox
12 80 0.144575447 ubox
13 20 0.005711605 ubox
13 36 0.020230284 ubox
13 40 0.009564635 ubox
13 61 0.003904006 ubox
13 78 0.994368941 ubox
13 79 0.102338067 ubox
14 35 0.020243452 ubox
14 39 0.009676388 ubox
14 60 0.003908620 ubox
14 77 0.999704824 ubox
15 34 0.020243007 ubox
15 38 0.009676121 ubox
15 59 0.003906337 ubox
15 76 0.999689173 ubox
16 33 0.020163313 ubox
16 37 0.009651219 ubox
16 75 0.999559007 ubox
17 52 0.003174051 ubox
17 72 0.008884795 ubox
17 73 0.103358208 ubox
17 74 0.989917742 ubox
18 71 0.015354208 ubox
18 72 0.145623424 ubox
18 73 0.859335916 ubox
19 35 0.006488087 ubox
19 70 0.019484653 ubox
19 71 0.151693792 ubox
20 34 0.006467875 ubox
20 35 0.004798039 ubox
20 69 0.019789318 ubox
20 70 0.134309161 ubox
20 71 0.115426005 ubox
21 28 0.016660799 ubox
21 34 0.004819780 ubox
21 47 0.006379085 ubox
21 68 0.020019008 ubox
21 69 0.113549285 ubox
21 70 0.092138017 ubox
22 27 0.014314518 ubox
22 29 0.009849795 ubox
22 36 0.022627453 ubox
22 46 0.011738722 ubox
22 61 0.019045033 ubox
23 28 0.010767144 ubox
23 35 0.024463811 ubox
23 39 0.015372251 ubox
23 45 0.012433708 ubox
23 60 0.019133305 ubox
23 69 0.060751023 ubox
23 70 0.049699279 ubox
23 71 0.973163917 ubox
24 34 0.024326660 ubox
24 35 0.018138088 ubox
24 38 0.015412685 ubox
24 39 0.007049115 ubox
24 44 0.012438467 ubox
24 59 0.018994280 ubox
24 60 0.007795670 ubox
24 68 0.061650110 ubox
24 69 0.053612018 ubox
24 70 0.979584284 ubox
24 71 0.095880937 ubox
25 34 0.018363566 ubox
25 35 0.018998279 ubox
25 38 0.007101611 ubox
25 43 0.012405943 ubox
25 59 0.007910016 ubox
25 60 0.019890953 ubox
25 68 0.054409136 ubox
25 69 0.984289589 ubox
25 70 0.096931452 ubox
25 71 0.031303076 ubox
26 34 0.019055582 ubox
26 35 0.035319390 ubox
26 39 0.011469906 ubox
26 56 0.005617486 ubox
26 59 0.019894565 ubox
26 68 0.986566496 ubox
26 69 0.097833120 ubox
26 70 0.031813326 ubox
27 34 0.035614893 ubox
27 38 0.011532263 ubox
27 54 0.005770116 ubox
27 55 0.004126170 ubox
27 63 0.032041283 ubox
27 67 0.961252332 ubox
27 68 0.095718533 ubox
27 69 0.032898632 ubox
28 33 0.039362249 ubox
28 37 0.012725473 ubox
28 40 0.006556947 ubox
28 53 0.007036464 ubox
28 57 0.028142615 ubox
28 62 0.033572308 ubox
29 39 0.006495811 ubox
29 52 0.006978661 ubox
29 56 0.028133717 ubox
29 64 0.060308694 ubox
29 65 0.278956693 ubox
29 66 0.704759499 ubox
29 67 0.161233974 ubox
29 68 0.008937252 ubox
30 38 0.005702667 ubox
30 55 0.027967153 ubox
30 63 0.062056246 ubox
30 64 0.318458167 ubox
30 65 0.823139225 ubox
30 66 0.307891481 ubox
30 67 0.016820601 ubox
30 68 0.003574658 ubox
31 45 0.004926801 ubox
31 54 0.026100439 ubox
31 60 0.005062021 ubox
31 63 0.276692849 ubox
31 64 0.836999023 ubox
31 65 0.334086196 ubox
31 66 0.027584885 ubox
31 67 0.005705768 ubox
32 44 0.007349950 ubox
32 60 0.160500929 ubox
32 63 0.828431127 ubox
32 64 0.330218584 ubox
32 65 0.025851290 ubox
32 66 0.008781060 ubox
33 43 0.008256246 ubox
33 47 0.006879366 ubox
33 52 0.027654710 ubox
33 59 0.174574535 ubox
34 42 0.008427908 ubox
34 46 0.006900720 ubox
34 51 0.027713223 ubox
34 58 0.174625134 ubox
34 62 0.963674942 ubox
35 41 0.008389680 ubox
35 50 0.027691397 ubox
35 57 0.174755660 ubox
35 61 0.919887469 ubox
36 44 0.007447365 ubox
36 45 0.003619665 ubox
36 56 0.173623028 ubox
36 60 0.931694813 ubox
37 43 0.007652042 ubox
37 44 0.003986972 ubox
37 47 0.007113629 ubox
37 52 0.007124373 ubox
37 59 0.981387009 ubox
38 42 0.007166827 ubox
38 46 0.006377600 ubox
38 49 0.006483409 ubox
38 51 0.006976783 ubox
38 58 0.981111506 ubox
38 62 0.057187476 ubox
39 46 0.024851280 ubox
39 48 0.008538860 ubox
39 50 0.006751593 ubox
39 53 0.172767904 ubox
39 57 0.981867518 ubox
39 61 0.057444392 ubox
40 45 0.025026025 ubox
40 47 0.008855973 ubox
40 52 0.169331605 ubox
40 56 0.981337053 ubox
40 60 0.050637247 ubox
41 59 0.042574823 ubox
41 60 0.037677819 ubox
42 52 0.934429321 ubox
42 59 0.047120092 ubox
43 49 0.023674957 ubox
43 50 0.079650680 ubox
43 51 0.942267471 ubox
43 58 0.054331245 ubox
44 48 0.016736426 ubox
44 49 0.063311564 ubox
44 50 0.942339802 ubox
44 51 0.260726414 ubox
44 57 0.054508912 ubox
44 58 0.015902632 ubox
45 49 0.610451139 ubox
45 50 0.264412314 ubox
45 53 0.125895304 ubox
45 57 0.017397642 ubox
46 52 0.124016319 ubox
46 54 0.074703185 ubox
46 56 0.016818239 ubox
46 63 0.004051892 ubox
47 51 0.057595807 ubox
47 53 0.076665082 ubox
47 57 0.004967471 ubox
47 62 0.005040450 ubox
48 52 0.071732906 ubox
48 55 0.005015371 ubox
48 56 0.005010068 ubox
49 54 0.004774492 ubox
49 55 0.004785744 ubox
49 60 0.004532754 ubox
49 83 0.014078652 ubox
50 59 0.006010873 ubox
50 82 0.015101728 ubox
51 81 0.015089624 ubox
52 61 0.004111477 ubox
52 62 0.003272187 ubox
52 80 0.014986125 ubox
53 60 0.005265566 ubox
56 75 0.005430746 ubox
56 78 0.014124929 ubox
57 68 0.008207125 ubox
57 74 0.005431923 ubox
57 77 0.014131467 ubox
58 67 0.008249240 ubox
58 73 0.005320650 ubox
58 76 0.014110970 ubox
59 75 0.014079948 ubox
61 69 0.003838533 ubox
61 70 0.003738042 ubox
61 72 0.012870281 ubox
62 68 0.010104415 ubox
62 69 0.004841820 ubox
62 71 0.013000301 ubox
12 79 0.9500000 lbox
13 78 0.9500000 lbox
14 77 0.9500000 lbox
15 76 0.9500000 lbox
16 75 0.9500000 lbox
17 74 0.9500000 lbox
18 73 0.9500000 lbox
23 71 0.9500000 lbox
24 70 0.9500000 lbox
25 69 0.9500000 lbox
26 68 0.9500000 lbox
27 67 0.9500000 lbox
29 66 0.9500000 lbox
30 65 0.9500000 lbox
31 64 0.9500000 lbox
32 63 0.9500000 lbox
34 62 0.9500000 lbox
35 61 0.9500000 lbox
36 60 0.9500000 lbox
37 59 0.9500000 lbox
38 58 0.9500000 lbox
39 57 0.9500000 lbox
40 56 0.9500000 lbox
42 52 0.9500000 lbox
43 51 0.9500000 lbox
44 50 0.9500000 lbox
showpage
end
%%EOF
