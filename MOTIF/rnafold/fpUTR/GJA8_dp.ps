%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:09:13 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GJA8)
} def

/sequence { (\
GAGAAAGAGCACAUAUUUCUCCGUGGGACACUCCUUGUAUUGGUGGGUGAGAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 19 0.031724213 ubox
1 21 0.983271116 ubox
2 18 0.031708784 ubox
2 20 0.988407594 ubox
3 17 0.031098313 ubox
3 18 0.003605218 ubox
3 19 0.990218394 ubox
3 21 0.011990236 ubox
4 16 0.029352357 ubox
4 17 0.011275729 ubox
4 18 0.988879840 ubox
4 20 0.011375629 ubox
5 16 0.013937564 ubox
5 17 0.982404675 ubox
5 18 0.026447197 ubox
6 16 0.957407290 ubox
6 17 0.036527393 ubox
6 18 0.018725100 ubox
6 20 0.026867902 ubox
7 16 0.040659462 ubox
7 17 0.046881203 ubox
7 18 0.010658419 ubox
7 19 0.031120518 ubox
7 21 0.021229167 ubox
8 16 0.057155613 ubox
8 17 0.018077718 ubox
8 18 0.030795867 ubox
8 20 0.021289942 ubox
9 16 0.020463724 ubox
9 17 0.026978416 ubox
9 19 0.021067409 ubox
9 24 0.003245464 ubox
10 23 0.003405641 ubox
10 25 0.051098324 ubox
10 45 0.004286437 ubox
10 49 0.042076309 ubox
11 24 0.051216143 ubox
11 44 0.004296826 ubox
11 48 0.042194481 ubox
12 23 0.051186260 ubox
12 25 0.026904432 ubox
12 43 0.004260874 ubox
12 45 0.003604614 ubox
12 47 0.042068252 ubox
12 49 0.007590357 ubox
13 24 0.026906742 ubox
13 44 0.003668029 ubox
13 48 0.007592537 ubox
14 23 0.026721322 ubox
14 43 0.003551759 ubox
14 45 0.034968607 ubox
14 47 0.007108990 ubox
14 49 0.003316269 ubox
15 24 0.003555267 ubox
15 44 0.039371031 ubox
15 48 0.003970352 ubox
16 23 0.003462253 ubox
16 28 0.024759601 ubox
16 43 0.039123096 ubox
16 47 0.003675128 ubox
16 52 0.038613245 ubox
17 27 0.027425129 ubox
17 28 0.021838680 ubox
17 42 0.036715213 ubox
17 46 0.003391164 ubox
17 47 0.005866645 ubox
17 50 0.003996913 ubox
17 51 0.041696531 ubox
17 52 0.003397273 ubox
17 53 0.022591074 ubox
18 26 0.028496100 ubox
18 27 0.023722097 ubox
18 28 0.057999829 ubox
18 43 0.006174831 ubox
18 46 0.011671402 ubox
18 49 0.003873456 ubox
18 50 0.042817451 ubox
18 52 0.030798246 ubox
19 25 0.029064049 ubox
19 26 0.024591858 ubox
19 27 0.062899956 ubox
19 42 0.007000310 ubox
19 45 0.012297478 ubox
19 46 0.004747496 ubox
19 49 0.042861509 ubox
19 51 0.031578559 ubox
20 25 0.021998570 ubox
20 26 0.062634688 ubox
20 27 0.005711546 ubox
20 28 0.069720825 ubox
20 45 0.004505366 ubox
20 47 0.032856583 ubox
20 50 0.030360036 ubox
21 25 0.060693853 ubox
21 26 0.010761220 ubox
21 27 0.093685327 ubox
21 43 0.015125347 ubox
21 46 0.036249907 ubox
21 47 0.026342961 ubox
21 49 0.024206814 ubox
21 51 0.003469588 ubox
22 26 0.101900405 ubox
22 37 0.043565545 ubox
22 42 0.016564384 ubox
22 45 0.036941358 ubox
22 46 0.026697689 ubox
22 49 0.008179622 ubox
23 29 0.023073031 ubox
23 31 0.032200904 ubox
23 36 0.038229615 ubox
23 38 0.005284972 ubox
23 40 0.011225607 ubox
23 41 0.013305594 ubox
23 44 0.033483639 ubox
23 48 0.006136036 ubox
24 28 0.022614187 ubox
24 30 0.032734546 ubox
24 37 0.004906689 ubox
24 39 0.013739044 ubox
24 42 0.005019867 ubox
24 43 0.030326669 ubox
24 49 0.003544660 ubox
25 29 0.032634667 ubox
25 32 0.009125766 ubox
25 33 0.005682056 ubox
25 34 0.038824952 ubox
25 35 0.062780878 ubox
25 36 0.006258031 ubox
25 38 0.010554007 ubox
25 41 0.006044280 ubox
25 48 0.004851739 ubox
26 31 0.010284023 ubox
26 32 0.005776575 ubox
26 33 0.038798462 ubox
26 34 0.066713474 ubox
26 35 0.005874106 ubox
26 40 0.005997114 ubox
26 41 0.028788467 ubox
27 31 0.007378427 ubox
27 32 0.030291053 ubox
27 33 0.066734701 ubox
27 34 0.005934739 ubox
27 36 0.009004974 ubox
27 40 0.024682860 ubox
27 41 0.015757952 ubox
28 32 0.058080826 ubox
28 35 0.008355694 ubox
28 38 0.032801494 ubox
28 40 0.015943335 ubox
28 48 0.040702883 ubox
29 37 0.033071036 ubox
29 45 0.031443368 ubox
29 47 0.041686501 ubox
29 49 0.985965745 ubox
30 36 0.030605217 ubox
30 38 0.019349329 ubox
30 44 0.031420479 ubox
30 48 0.990560595 ubox
31 37 0.019866870 ubox
31 43 0.030772412 ubox
31 46 0.038511913 ubox
31 47 0.990902858 ubox
31 51 0.070451510 ubox
32 42 0.026238692 ubox
32 45 0.039460612 ubox
32 46 0.977351823 ubox
32 47 0.027328395 ubox
32 50 0.071531097 ubox
33 42 0.013414951 ubox
33 43 0.142488883 ubox
33 45 0.969078162 ubox
33 46 0.153722800 ubox
33 47 0.021376433 ubox
33 49 0.071358027 ubox
34 42 0.149354742 ubox
34 43 0.960503395 ubox
34 45 0.154164523 ubox
34 46 0.022288063 ubox
34 47 0.070787021 ubox
34 51 0.008661740 ubox
35 42 0.945010271 ubox
35 43 0.092134514 ubox
35 45 0.022040772 ubox
35 46 0.070563573 ubox
35 47 0.005477808 ubox
35 50 0.008777200 ubox
35 52 0.008684911 ubox
36 42 0.090889627 ubox
36 45 0.068617609 ubox
36 46 0.005659489 ubox
36 49 0.008007980 ubox
36 50 0.004090109 ubox
36 51 0.009839854 ubox
37 41 0.045548359 ubox
37 44 0.043454742 ubox
37 48 0.004887227 ubox
38 43 0.024417217 ubox
38 45 0.005635346 ubox
38 47 0.004568948 ubox
38 49 0.022628446 ubox
39 44 0.006650506 ubox
39 48 0.025508373 ubox
40 47 0.025568553 ubox
40 50 0.004288320 ubox
41 46 0.024062128 ubox
41 49 0.004596187 ubox
41 50 0.004375779 ubox
42 48 0.004463742 ubox
1 21 0.9500000 lbox
2 20 0.9500000 lbox
3 19 0.9500000 lbox
4 18 0.9500000 lbox
5 17 0.9500000 lbox
6 16 0.9500000 lbox
29 49 0.9500000 lbox
30 48 0.9500000 lbox
31 47 0.9500000 lbox
32 46 0.9500000 lbox
33 45 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
showpage
end
%%EOF
