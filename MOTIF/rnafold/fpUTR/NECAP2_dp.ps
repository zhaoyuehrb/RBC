%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:46:25 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NECAP2)
} def

/sequence { (\
GAAACCUGGUCAGAGAGUCGCACCGCUUCCGUCCGUCGGACAGAGGAACGGUGGAAGUCGCCGGAAGUUCGGUGGGCUCCAGGCGUCGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.005203098 ubox
1 19 0.004312669 ubox
1 70 0.008900297 ubox
1 87 0.966709572 ubox
2 10 0.005010270 ubox
2 18 0.003967378 ubox
2 69 0.008447987 ubox
2 86 0.964413659 ubox
3 68 0.007446809 ubox
3 69 0.003694185 ubox
4 18 0.011430372 ubox
4 68 0.004743325 ubox
4 86 0.012235180 ubox
5 17 0.012523400 ubox
5 67 0.005436069 ubox
5 83 0.997065052 ubox
5 85 0.009830684 ubox
6 13 0.005173368 ubox
6 15 0.016444568 ubox
6 17 0.006409761 ubox
6 64 0.010573900 ubox
6 82 0.998320361 ubox
7 12 0.004865981 ubox
7 14 0.016419971 ubox
7 16 0.006497764 ubox
7 25 0.003750072 ubox
7 63 0.010687111 ubox
7 81 0.998052220 ubox
7 85 0.004349508 ubox
7 88 0.005780337 ubox
8 24 0.010064948 ubox
8 62 0.011140700 ubox
8 78 0.016916857 ubox
8 79 0.011452426 ubox
8 80 0.997734036 ubox
8 84 0.004387038 ubox
8 87 0.007649055 ubox
9 18 0.003552267 ubox
9 23 0.010223766 ubox
9 61 0.011140329 ubox
9 77 0.041508248 ubox
9 79 0.857330491 ubox
9 84 0.048225967 ubox
9 86 0.003548688 ubox
10 16 0.107759725 ubox
10 17 0.015267207 ubox
10 20 0.004218213 ubox
10 22 0.009917416 ubox
10 55 0.012895464 ubox
10 60 0.010884591 ubox
10 75 0.013913008 ubox
10 76 0.061856398 ubox
10 83 0.048367974 ubox
11 15 0.115270876 ubox
11 54 0.013749780 ubox
11 74 0.013958327 ubox
11 75 0.067959882 ubox
11 82 0.047884861 ubox
12 73 0.008169750 ubox
12 78 0.105533584 ubox
13 19 0.090735801 ubox
13 59 0.019940537 ubox
13 77 0.111666462 ubox
13 79 0.044132680 ubox
13 87 0.003738359 ubox
14 18 0.079119645 ubox
14 58 0.021133233 ubox
14 78 0.072916544 ubox
14 86 0.003676901 ubox
15 28 0.004579050 ubox
15 59 0.041027080 ubox
15 70 0.005728256 ubox
15 77 0.069922735 ubox
15 79 0.504680394 ubox
15 87 0.003954405 ubox
16 27 0.005808506 ubox
16 58 0.044288974 ubox
16 69 0.005679977 ubox
16 78 0.858231356 ubox
16 86 0.003800319 ubox
17 23 0.008798379 ubox
17 26 0.006171290 ubox
17 58 0.006396733 ubox
17 68 0.005106463 ubox
17 77 0.863659392 ubox
17 84 0.004064023 ubox
17 89 0.004003300 ubox
18 22 0.007956108 ubox
18 25 0.005061981 ubox
18 54 0.011257921 ubox
18 55 0.412733103 ubox
18 57 0.004644528 ubox
18 64 0.004031913 ubox
18 65 0.003885422 ubox
18 75 0.008561958 ubox
18 76 0.863101992 ubox
18 83 0.004065544 ubox
18 88 0.003723946 ubox
19 25 0.005858191 ubox
19 53 0.012068428 ubox
19 54 0.441980899 ubox
19 63 0.004311508 ubox
19 64 0.003920254 ubox
19 74 0.009348714 ubox
19 75 0.858171314 ubox
19 82 0.004042952 ubox
19 85 0.006831886 ubox
19 90 0.013847837 ubox
20 24 0.014904459 ubox
20 26 0.008060915 ubox
20 52 0.011020195 ubox
20 58 0.008101043 ubox
20 61 0.003168964 ubox
20 62 0.003962583 ubox
20 73 0.009617805 ubox
20 77 0.014490930 ubox
20 84 0.007031916 ubox
20 89 0.015394099 ubox
21 25 0.008535573 ubox
21 51 0.010723846 ubox
21 53 0.585149973 ubox
21 57 0.007435733 ubox
21 60 0.003769003 ubox
21 72 0.009663722 ubox
21 74 0.791899425 ubox
21 76 0.014486753 ubox
21 83 0.007020169 ubox
21 88 0.015371685 ubox
22 52 0.586418057 ubox
22 58 0.003872562 ubox
22 73 0.792977319 ubox
22 86 0.004772844 ubox
23 51 0.586659940 ubox
23 54 0.013336622 ubox
23 57 0.003998380 ubox
23 72 0.793133986 ubox
23 75 0.012227636 ubox
23 76 0.012460166 ubox
23 85 0.003671895 ubox
24 50 0.586631593 ubox
24 53 0.013395435 ubox
24 60 0.011688894 ubox
24 71 0.792282033 ubox
24 74 0.011603664 ubox
24 75 0.012559721 ubox
24 85 0.013301388 ubox
25 49 0.579953832 ubox
25 52 0.013381097 ubox
25 58 0.164478711 ubox
25 59 0.017871983 ubox
25 68 0.395746211 ubox
25 70 0.661698656 ubox
25 84 0.013700580 ubox
26 43 0.018523495 ubox
26 45 0.028115102 ubox
26 46 0.550912233 ubox
26 51 0.013176892 ubox
26 54 0.006911846 ubox
26 57 0.192184879 ubox
26 64 0.004720285 ubox
26 67 0.683724592 ubox
26 83 0.013691668 ubox
27 42 0.018406603 ubox
27 44 0.024232845 ubox
27 45 0.555138874 ubox
27 46 0.003868952 ubox
27 47 0.055664974 ubox
27 48 0.409070130 ubox
27 50 0.011093546 ubox
27 53 0.006753405 ubox
27 56 0.192437082 ubox
27 66 0.688379137 ubox
27 67 0.005681949 ubox
27 82 0.013163046 ubox
28 40 0.028503520 ubox
28 43 0.017480218 ubox
28 44 0.556393672 ubox
28 46 0.054325815 ubox
28 47 0.415833160 ubox
28 55 0.192617051 ubox
28 65 0.688353486 ubox
28 66 0.004138377 ubox
28 81 0.007854067 ubox
29 39 0.030668298 ubox
29 43 0.556466889 ubox
29 45 0.054167212 ubox
29 46 0.416724429 ubox
29 51 0.015574710 ubox
29 54 0.192709621 ubox
29 64 0.688295295 ubox
30 38 0.031119019 ubox
30 45 0.416511115 ubox
30 50 0.016971425 ubox
30 53 0.192693479 ubox
30 60 0.004270482 ubox
30 63 0.664014904 ubox
31 37 0.031041525 ubox
31 41 0.831845473 ubox
31 49 0.267697050 ubox
31 52 0.185977867 ubox
31 58 0.004002372 ubox
31 59 0.009751819 ubox
31 61 0.033562706 ubox
31 62 0.320562811 ubox
31 77 0.006571433 ubox
32 39 0.004151001 ubox
32 40 0.833218511 ubox
32 44 0.050101929 ubox
32 47 0.339875603 ubox
32 48 0.189962459 ubox
32 51 0.004214538 ubox
32 54 0.003974748 ubox
32 55 0.308289958 ubox
32 57 0.006632404 ubox
32 60 0.038405272 ubox
32 76 0.006581333 ubox
33 38 0.007058688 ubox
33 39 0.833462554 ubox
33 43 0.051391751 ubox
33 45 0.003617437 ubox
33 46 0.403354080 ubox
33 50 0.003977814 ubox
33 51 0.199329056 ubox
33 54 0.311417230 ubox
33 75 0.006588581 ubox
34 38 0.827402483 ubox
34 45 0.402826261 ubox
34 50 0.200366194 ubox
34 53 0.311392694 ubox
34 60 0.007185747 ubox
34 74 0.006588323 ubox
35 41 0.051665775 ubox
35 49 0.200731731 ubox
35 52 0.294617692 ubox
35 59 0.007179167 ubox
35 61 0.003956747 ubox
35 73 0.006233895 ubox
36 40 0.046638184 ubox
36 44 0.378624880 ubox
36 46 0.011874582 ubox
36 47 0.140025271 ubox
36 48 0.143309826 ubox
36 51 0.296738204 ubox
36 72 0.006285081 ubox
37 43 0.388744654 ubox
37 45 0.023385051 ubox
37 46 0.197288389 ubox
37 50 0.311033420 ubox
37 71 0.006587967 ubox
38 49 0.310658153 ubox
38 70 0.006589753 ubox
39 59 0.004259992 ubox
39 69 0.006584659 ubox
40 58 0.004597602 ubox
40 68 0.006596856 ubox
41 53 0.006117443 ubox
41 57 0.004702918 ubox
41 67 0.006587194 ubox
42 52 0.006016958 ubox
43 69 0.006770940 ubox
43 70 0.016105439 ubox
44 68 0.007539838 ubox
44 69 0.016572272 ubox
45 62 0.022037611 ubox
45 68 0.016533849 ubox
46 59 0.004723624 ubox
46 61 0.021946370 ubox
46 68 0.004121427 ubox
46 70 0.014970502 ubox
47 58 0.003520106 ubox
47 68 0.004043871 ubox
47 69 0.021748556 ubox
48 58 0.014338485 ubox
48 68 0.022888891 ubox
48 86 0.003301067 ubox
49 57 0.015258314 ubox
49 60 0.036394419 ubox
49 63 0.416565867 ubox
49 67 0.019174916 ubox
49 85 0.003556000 ubox
50 59 0.037119254 ubox
50 62 0.714947260 ubox
50 84 0.003553416 ubox
51 58 0.029615523 ubox
51 61 0.718222632 ubox
52 57 0.015466772 ubox
52 60 0.717955233 ubox
52 63 0.011091123 ubox
52 81 0.011777133 ubox
53 59 0.716378030 ubox
53 62 0.033954516 ubox
53 80 0.017165231 ubox
54 58 0.464173403 ubox
54 61 0.034334713 ubox
54 77 0.010986972 ubox
54 78 0.004801749 ubox
54 79 0.039891893 ubox
54 87 0.003877228 ubox
55 78 0.041766945 ubox
55 86 0.003840011 ubox
56 78 0.419653252 ubox
57 77 0.444656005 ubox
57 89 0.009233633 ubox
58 64 0.004174820 ubox
58 65 0.049895162 ubox
58 75 0.306950152 ubox
58 76 0.366474230 ubox
58 88 0.008872709 ubox
59 63 0.006305393 ubox
59 64 0.056665345 ubox
59 74 0.541863311 ubox
59 75 0.267086775 ubox
59 85 0.017631062 ubox
60 68 0.019880795 ubox
60 73 0.600460381 ubox
60 77 0.010909670 ubox
60 84 0.018788102 ubox
61 67 0.020721110 ubox
61 72 0.608354594 ubox
61 76 0.010885073 ubox
61 83 0.018791203 ubox
62 71 0.608419892 ubox
62 75 0.010835957 ubox
62 82 0.018781168 ubox
63 69 0.004692131 ubox
63 70 0.606126121 ubox
63 80 0.018662131 ubox
64 68 0.014103580 ubox
64 69 0.476847657 ubox
64 70 0.067475549 ubox
64 79 0.018733050 ubox
65 69 0.063772323 ubox
65 78 0.013269815 ubox
66 78 0.013732729 ubox
67 77 0.019103210 ubox
68 76 0.018808796 ubox
69 75 0.018322346 ubox
69 76 0.003477016 ubox
70 74 0.017726472 ubox
70 75 0.004770559 ubox
72 89 0.010866622 ubox
73 88 0.010894967 ubox
74 87 0.010895363 ubox
75 86 0.009817173 ubox
76 84 0.011244747 ubox
77 83 0.011255124 ubox
78 82 0.010139688 ubox
83 89 0.018470123 ubox
84 88 0.019789672 ubox
84 90 0.026874757 ubox
85 89 0.027242268 ubox
1 87 0.9500000 lbox
2 86 0.9500000 lbox
5 83 0.9500000 lbox
6 82 0.9500000 lbox
7 81 0.9500000 lbox
8 80 0.9500000 lbox
9 79 0.9500000 lbox
16 78 0.9500000 lbox
17 77 0.9500000 lbox
18 76 0.9500000 lbox
19 75 0.9500000 lbox
21 74 0.9500000 lbox
22 73 0.9500000 lbox
23 72 0.9500000 lbox
24 71 0.9500000 lbox
25 70 0.9500000 lbox
26 67 0.9500000 lbox
27 66 0.9500000 lbox
28 65 0.9500000 lbox
29 64 0.9500000 lbox
30 63 0.9500000 lbox
31 41 0.9500000 lbox
32 40 0.9500000 lbox
33 39 0.9500000 lbox
34 38 0.9500000 lbox
50 62 0.9500000 lbox
51 61 0.9500000 lbox
52 60 0.9500000 lbox
53 59 0.9500000 lbox
showpage
end
%%EOF
