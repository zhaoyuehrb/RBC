%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:07:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAACGGCCGUAACUGCCAUAACGGCCGGCUGCGCGAGGCCCUUCCAGCAUUUCCACUUUCGUCAGGUACUGGAGAGGGCUGCCGGCCGGAUGCCAGGGCAGAGGGGCAGGGCGGACGGCUAGGAGUUCAAGAAACAUCCUGGUCUGAGGGAAAGGCUGCAGCCUGCACCGCC\
) } def
/len { sequence length } bind def

/coor [
[3.02868509 81.15015411]
[-5.89219713 81.41894531]
[-14.36945534 78.77040100]
[-21.48052025 73.52259827]
[-26.46128654 66.27479553]
[-28.78817177 57.83916092]
[-28.23305893 49.14976120]
[-41.35672760 41.88551331]
[-54.48040009 34.62126541]
[-66.51931763 41.37365723]
[-80.21396637 41.28731155]
[-91.97910309 34.49201965]
[-98.78766632 22.85993576]
[-98.94931793 9.49107552]
[-111.93969727 1.99107575]
[-124.93007660 -5.50892448]
[-137.92045593 -13.00892448]
[-150.91084290 -20.50892448]
[-162.54379272 -10.81874084]
[-176.76348877 -5.70284271]
[-191.84715271 -5.76052284]
[-205.97436523 -10.96551991]
[-217.44673157 -20.67151260]
[-224.89207458 -33.69231415]
[-227.42855835 -48.44681931]
[-224.76904297 -63.15097809]
[-237.75942993 -70.65097809]
[-250.74980164 -78.15097809]
[-263.74017334 -85.65097809]
[-276.73056030 -93.15097809]
[-289.72094727 -100.65097809]
[-302.71133423 -108.15097809]
[-311.74221802 -109.74137878]
[-315.86679077 -115.90546417]
[-328.71963501 -123.63877106]
[-335.36791992 -124.14375305]
[-340.04202271 -127.45235443]
[-341.88977051 -131.89044189]
[-354.45504761 -140.08271790]
[-367.02035522 -148.27500916]
[-379.58563232 -156.46730042]
[-392.15090942 -164.65957642]
[-404.71621704 -172.85186768]
[-417.35491943 -180.93038940]
[-430.06607056 -188.89448547]
[-442.77722168 -196.85858154]
[-455.48837280 -204.82267761]
[-468.19952393 -212.78677368]
[-484.00195312 -213.55715942]
[-490.67913818 -226.87123108]
[-503.39025879 -234.83532715]
[-516.10144043 -242.79942322]
[-528.81256104 -250.76351929]
[-541.55828857 -248.64399719]
[-551.98950195 -255.56700134]
[-554.80004883 -267.35479736]
[-567.36535645 -275.54705811]
[-583.76080322 -275.89413452]
[-591.41979980 -290.39489746]
[-582.46337891 -304.13223267]
[-566.10516357 -302.97433472]
[-559.17309570 -288.11236572]
[-546.60778809 -279.92007446]
[-529.07354736 -279.93191528]
[-520.84844971 -263.47467041]
[-508.13732910 -255.51057434]
[-495.42617798 -247.54647827]
[-482.71502686 -239.58238220]
[-467.82177734 -239.38163757]
[-460.23541260 -225.49790955]
[-447.52426147 -217.53381348]
[-434.81314087 -209.56971741]
[-422.10198975 -201.60562134]
[-409.39083862 -193.64152527]
[-402.02767944 -192.75164795]
[-396.52392578 -185.41716003]
[-383.95861816 -177.22486877]
[-371.39334106 -169.03257751]
[-358.82806396 -160.84030151]
[-346.26275635 -152.64801025]
[-333.69747925 -144.45573425]
[-320.98632812 -136.49163818]
[-308.13348389 -128.75833130]
[-295.21133423 -121.14135742]
[-282.22094727 -113.64135742]
[-269.23056030 -106.14135742]
[-256.24017334 -98.64135742]
[-243.24980164 -91.14135742]
[-230.25942993 -83.64135742]
[-217.26904297 -76.14135742]
[-205.86462402 -85.79663849]
[-191.81860352 -90.97724152]
[-176.81959534 -91.03977966]
[-162.67776489 -85.95741272]
[-151.10650635 -76.32539368]
[-143.51472473 -63.29139709]
[-140.83537292 -48.41883469]
[-143.41084290 -33.49930573]
[-130.42045593 -25.99930573]
[-117.43007660 -18.49930573]
[-104.43969727 -10.99930573]
[-91.44931793 -3.49930525]
[-76.69182587 -10.65291214]
[-60.41299438 -7.58223391]
[-49.05017090 4.69955397]
[-47.21615219 21.49759674]
[-34.09247971 28.76184464]
[-20.96881104 36.02609253]
[-1.23649383 28.22598076]
[18.11163330 37.60141754]
[24.38003922 58.46184921]
[38.10516357 64.51337433]
[51.83028793 70.56490326]
[65.55541229 76.61643219]
[79.28053284 82.66796112]
[95.45362091 69.32807922]
[119.17789459 70.72045135]
[137.64544678 89.82862854]
[152.63566589 90.37016296]
[167.62590027 90.91169739]
[182.61611938 91.45323944]
[197.60633850 91.99477386]
[212.59655762 92.53630829]
[227.58677673 93.07784271]
[242.57699585 93.61938477]
[257.57150269 94.02557373]
[272.56906128 94.29638672]
[287.56661987 94.56719971]
[300.06546021 84.50944519]
[315.68975830 88.15100098]
[322.45388794 102.69837952]
[315.16897583 116.99207306]
[299.42340088 120.06718445]
[287.29580688 109.56475067]
[272.29824829 109.29393768]
[257.30068970 109.02312469]
[250.53271484 112.05673981]
[242.03546143 108.60960388]
[227.04524231 108.06806946]
[212.05502319 107.52652740]
[197.06480408 106.98499298]
[182.07458496 106.44345856]
[167.08435059 105.90192413]
[152.09413147 105.36038971]
[137.10391235 104.81884766]
[133.23725891 111.24527740]
[146.13279724 118.90721893]
[159.02832031 126.56915283]
[171.79479980 134.44424438]
[164.06198120 147.29739380]
[151.12353516 139.70701599]
[138.31373596 131.90257263]
[125.50395203 124.09813690]
[121.63729858 130.52456665]
[129.13729858 143.51495361]
[136.63729858 156.50532532]
[144.13729858 169.49571228]
[158.60218811 177.22222900]
[158.87277222 193.61914062]
[144.67068481 201.81871033]
[130.60583496 193.38592529]
[131.14691162 176.99571228]
[123.64691925 164.00532532]
[116.14691925 151.01495361]
[108.64691925 138.02456665]
[90.79806519 134.80380249]
[77.73206329 124.36002350]
[71.79190063 110.23782349]
[73.22900391 96.39308167]
[59.50388336 90.34155273]
[45.77875900 84.29002380]
[32.05363464 78.23850250]
[18.32851219 72.18697357]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 108]
[8 107]
[9 106]
[14 102]
[15 101]
[16 100]
[17 99]
[18 98]
[26 90]
[27 89]
[28 88]
[29 87]
[30 86]
[31 85]
[32 84]
[34 83]
[35 82]
[38 81]
[39 80]
[40 79]
[41 78]
[42 77]
[43 76]
[44 74]
[45 73]
[46 72]
[47 71]
[48 70]
[50 68]
[51 67]
[52 66]
[53 65]
[56 63]
[57 62]
[111 173]
[112 172]
[113 171]
[114 170]
[115 169]
[118 145]
[119 144]
[120 143]
[121 142]
[122 141]
[123 140]
[124 139]
[125 138]
[126 136]
[127 135]
[128 134]
[154 165]
[155 164]
[156 163]
[157 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
