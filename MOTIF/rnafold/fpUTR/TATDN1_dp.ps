%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:04:32 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TATDN1)
} def

/sequence { (\
GGCCACUUCCGCUUCCGCUGGGGAGGUCCUCCAUGCGCAGUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.028771326 ubox
1 8 0.010940233 ubox
1 9 0.050768440 ubox
1 10 0.619699677 ubox
1 13 0.261451029 ubox
1 14 0.011674176 ubox
1 15 0.015731434 ubox
1 16 0.023066434 ubox
1 19 0.003289743 ubox
1 28 0.268462592 ubox
1 29 0.199751646 ubox
1 30 0.016841151 ubox
1 31 0.025859182 ubox
1 32 0.178972886 ubox
1 42 0.033278114 ubox
2 6 0.032463708 ubox
2 7 0.011687467 ubox
2 8 0.043073229 ubox
2 9 0.613931930 ubox
2 12 0.307978439 ubox
2 14 0.007955273 ubox
2 15 0.022542701 ubox
2 18 0.003917162 ubox
2 27 0.273356167 ubox
2 28 0.199123332 ubox
2 29 0.020008143 ubox
2 30 0.023595905 ubox
2 31 0.178636045 ubox
2 36 0.114028170 ubox
2 38 0.166253766 ubox
2 41 0.034125319 ubox
3 11 0.307982951 ubox
3 17 0.003912941 ubox
3 21 0.006003672 ubox
3 26 0.312879618 ubox
3 35 0.113189512 ubox
3 37 0.166340560 ubox
3 40 0.033975701 ubox
4 20 0.006032501 ubox
4 25 0.311649787 ubox
4 35 0.162528651 ubox
5 19 0.005918324 ubox
5 27 0.213350220 ubox
5 34 0.155659902 ubox
5 41 0.049360140 ubox
6 21 0.004431129 ubox
6 22 0.021068084 ubox
6 23 0.295631149 ubox
6 25 0.061758874 ubox
6 26 0.224183840 ubox
6 40 0.052732386 ubox
7 20 0.004372025 ubox
7 21 0.016828019 ubox
7 22 0.288906326 ubox
7 23 0.068178025 ubox
7 24 0.073062215 ubox
7 25 0.223932257 ubox
7 39 0.050877825 ubox
7 40 0.007335486 ubox
8 20 0.012325524 ubox
8 21 0.281734367 ubox
8 22 0.099384775 ubox
8 23 0.074405908 ubox
8 24 0.226447150 ubox
8 39 0.010400272 ubox
9 20 0.281737567 ubox
9 21 0.122176513 ubox
9 22 0.074355980 ubox
9 23 0.226535828 ubox
9 26 0.008129784 ubox
10 17 0.013038370 ubox
10 20 0.122708996 ubox
10 21 0.073778904 ubox
10 22 0.226146448 ubox
10 25 0.007649698 ubox
10 37 0.030979215 ubox
11 16 0.014150545 ubox
11 18 0.323099445 ubox
11 19 0.032160797 ubox
11 27 0.196274866 ubox
11 36 0.031484815 ubox
11 38 0.086863642 ubox
11 41 0.722501955 ubox
12 17 0.323788829 ubox
12 21 0.198761602 ubox
12 23 0.004736390 ubox
12 25 0.051059433 ubox
12 26 0.200480328 ubox
12 35 0.031105987 ubox
12 37 0.080116864 ubox
12 40 0.753429321 ubox
13 20 0.195840180 ubox
13 22 0.004583280 ubox
13 24 0.054746175 ubox
13 25 0.200230767 ubox
13 39 0.718084525 ubox
13 40 0.156926971 ubox
14 20 0.004565961 ubox
14 21 0.008491453 ubox
14 22 0.004133148 ubox
14 23 0.055177068 ubox
14 24 0.200577432 ubox
14 39 0.243963017 ubox
15 20 0.009128305 ubox
15 21 0.021720640 ubox
15 22 0.056603977 ubox
15 23 0.200475311 ubox
16 20 0.021632037 ubox
16 21 0.057820785 ubox
16 22 0.200200039 ubox
16 35 0.027118712 ubox
16 37 0.880377661 ubox
17 34 0.028396431 ubox
17 36 0.895096846 ubox
17 38 0.029827758 ubox
17 41 0.009110295 ubox
18 35 0.894891858 ubox
18 37 0.029816295 ubox
18 40 0.009507715 ubox
19 33 0.859372052 ubox
19 35 0.010154248 ubox
19 39 0.009407331 ubox
20 29 0.006061500 ubox
20 30 0.006794509 ubox
20 31 0.098636046 ubox
20 32 0.878014752 ubox
20 34 0.024231567 ubox
20 36 0.003554601 ubox
20 38 0.009150651 ubox
21 28 0.006097899 ubox
21 29 0.010200285 ubox
21 30 0.106244072 ubox
21 31 0.877141716 ubox
21 32 0.111226868 ubox
22 27 0.005722093 ubox
22 28 0.011623766 ubox
22 29 0.445056022 ubox
22 30 0.762434794 ubox
22 31 0.107154166 ubox
22 32 0.108330194 ubox
23 27 0.007846333 ubox
23 28 0.445292389 ubox
23 29 0.761006340 ubox
23 30 0.084448880 ubox
23 31 0.112581029 ubox
24 30 0.116408681 ubox
25 29 0.114810216 ubox
25 32 0.020643229 ubox
26 31 0.020843863 ubox
26 36 0.005893484 ubox
26 38 0.003596731 ubox
27 35 0.005750582 ubox
27 37 0.003495942 ubox
29 40 0.043830971 ubox
30 39 0.043703925 ubox
33 41 0.026893848 ubox
34 40 0.028005320 ubox
35 41 0.037145830 ubox
36 40 0.038776591 ubox
1 10 0.9500000 lbox
2 9 0.9500000 lbox
11 41 0.9500000 lbox
12 40 0.9500000 lbox
13 39 0.9500000 lbox
16 37 0.9500000 lbox
17 36 0.9500000 lbox
18 35 0.9500000 lbox
19 33 0.9500000 lbox
20 32 0.9500000 lbox
21 31 0.9500000 lbox
22 30 0.9500000 lbox
23 29 0.9500000 lbox
showpage
end
%%EOF
