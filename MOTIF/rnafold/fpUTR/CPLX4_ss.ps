%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:50:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUUACGGCCGACAAACCACUCUUCUCUAUCAGUAUGCCCUUGAAUAGAUGAGGUUGUGCAAAGUCCUUUGCUCUUAAAUGUAUUGCUGUCAUUGAGAAUAUUUGGAGGUUUUCUCUUGGGUUUGUUUGGAUUUUUUUUUUCAGCUUUUGUCUGAAUUUUGGUUUUAUUUUUCUGGGGCAGAGAAA\
) } def
/len { sequence length } bind def

/coor [
[93.77526093 164.96061707]
[78.86773682 161.13433838]
[65.39968109 153.97044373]
[54.09791946 143.92790222]
[45.55515289 131.61886597]
[40.19900513 117.77149200]
[38.27092361 103.18713379]
[39.81595230 88.69388580]
[44.68371201 75.09963989]
[52.54043579 63.14703751]
[41.93383408 52.54043579]
[31.32723236 41.93383408]
[20.72063065 31.32723236]
[10.02577877 20.80962181]
[-0.75657672 10.38173485]
[-11.53893185 -0.04615195]
[-22.32128716 -10.47403812]
[-33.10364151 -20.90192413]
[-43.88599777 -31.32981110]
[-61.23332977 -25.04892731]
[-79.41163635 -27.73617172]
[-94.08188629 -38.67962265]
[-101.77586365 -55.20512390]
[-100.71597290 -73.32944489]
[-113.87022400 -80.53817749]
[-127.02447510 -87.74690247]
[-140.17872620 -94.95562744]
[-153.33297729 -102.16435242]
[-169.47158813 -93.93596649]
[-187.16644287 -97.00028229]
[-199.38281250 -109.94801331]
[-201.37869263 -127.47898865]
[-214.76647949 -134.24414062]
[-228.15426636 -141.00929260]
[-241.54205322 -147.77444458]
[-254.92982483 -154.53959656]
[-268.37365723 -161.19265747]
[-281.87261963 -167.73315430]
[-295.37158203 -174.27365112]
[-310.14102173 -169.32373047]
[-323.73770142 -176.14901733]
[-328.36569214 -190.25991821]
[-341.86465454 -196.80041504]
[-355.36358643 -203.34091187]
[-368.86254883 -209.88140869]
[-381.29397583 -206.39456177]
[-392.40896606 -212.13557434]
[-396.48956299 -223.53631592]
[-409.87734985 -230.30146790]
[-424.72741699 -225.59902954]
[-438.20816040 -232.65057373]
[-442.59970093 -246.83683777]
[-455.98748779 -253.60198975]
[-469.37527466 -260.36712646]
[-482.76306152 -267.13229370]
[-496.20690918 -273.78533936]
[-509.70584106 -280.32583618]
[-524.55157471 -274.90551758]
[-538.84643555 -281.64596558]
[-544.10943604 -296.54818726]
[-537.21826172 -310.77093506]
[-522.26123047 -315.87615967]
[-508.11212158 -308.83496094]
[-503.16534424 -293.82479858]
[-489.66638184 -287.28430176]
[-482.26126099 -287.19696045]
[-475.99789429 -280.52008057]
[-462.61010742 -273.75491333]
[-449.22235107 -266.98977661]
[-435.83456421 -260.22460938]
[-421.80865479 -265.10412598]
[-408.13516235 -258.43399048]
[-403.11218262 -243.68925476]
[-389.72439575 -236.92410278]
[-372.29019165 -238.85226440]
[-362.32205200 -223.38037109]
[-348.82308960 -216.83987427]
[-335.32412720 -210.29937744]
[-321.82519531 -203.75888062]
[-307.88278198 -208.87207031]
[-294.09973145 -202.43136597]
[-288.83108521 -187.77261353]
[-275.33212280 -181.23211670]
[-261.83316040 -174.69160461]
[-254.42802429 -174.60426331]
[-248.16467285 -167.92738342]
[-234.77690125 -161.16223145]
[-221.38911438 -154.39707947]
[-208.00132751 -147.63192749]
[-194.61354065 -140.86677551]
[-184.73730469 -147.96452332]
[-172.70794678 -150.19517517]
[-160.80372620 -147.07369995]
[-151.30583191 -139.13468933]
[-146.06137085 -127.84188080]
[-146.12425232 -115.31860352]
[-132.97000122 -108.10987854]
[-119.81575012 -100.90114594]
[-106.66149902 -93.69242096]
[-93.50724792 -86.48369598]
[-87.86610413 -91.84883118]
[-81.22823334 -95.91649628]
[-73.88681793 -98.50701141]
[-66.16611481 -99.50598145]
[-58.40713501 -98.86926270]
[-50.95257568 -96.62499237]
[-42.46337128 -108.99161530]
[-33.97416306 -121.35823822]
[-25.48495674 -133.72485352]
[-26.99190903 -149.69697571]
[-15.34441566 -160.72944641]
[0.52256364 -158.35910034]
[8.43723965 -144.40426636]
[2.32815003 -129.56990051]
[-13.11833382 -125.23565674]
[-21.60754013 -112.86902618]
[-30.09674644 -100.50240326]
[-38.58595276 -88.13578033]
[-29.90594482 -74.22508240]
[-28.04438782 -57.82324219]
[-33.45811081 -42.11216736]
[-22.67575645 -31.68428040]
[-11.89340115 -21.25639343]
[-1.11104560 -10.82850742]
[9.67130947 -0.40062079]
[20.45366478 10.02726555]
[27.46142006 12.42208290]
[31.32723236 20.72063065]
[41.93383408 31.32723236]
[52.54043579 41.93383408]
[63.14703751 52.54043579]
[76.02332306 44.21459198]
[90.73423004 39.35201263]
[106.35555267 38.34305573]
[121.88430023 41.33325958]
[136.30310059 48.20877838]
[148.64678955 58.59867859]
[158.06700134 71.89418030]
[163.89013672 87.28401947]
[165.66511536 103.80377197]
[163.19729614 120.39624786]
[177.66433716 124.35918427]
[192.13137817 128.32211304]
[206.59841919 132.28504944]
[221.06546021 136.24797058]
[233.82096863 127.20192719]
[249.40266418 128.52285767]
[260.45333862 139.58705139]
[261.75521851 155.17034912]
[252.69357300 167.91477966]
[237.54704285 171.80282593]
[223.46736145 164.99867249]
[217.10252380 150.71501160]
[202.63548279 146.75207520]
[188.16844177 142.78915405]
[173.70141602 138.82621765]
[159.23437500 134.86328125]
[154.11123657 140.34083557]
[165.06634521 150.58709717]
[176.02143860 160.83335876]
[186.97653198 171.07962036]
[200.56170654 177.43910217]
[198.71151733 192.32455444]
[183.98284912 195.16473389]
[176.73027039 182.03471375]
[165.77517700 171.78845215]
[154.82008362 161.54219055]
[143.86499023 151.29592896]
[138.74185181 156.77348328]
[143.66223145 170.94352722]
[148.58259583 185.11355591]
[153.50297546 199.28359985]
[158.42333984 213.45362854]
[163.34371948 227.62367249]
[168.26408386 241.79370117]
[173.18446350 255.96374512]
[184.09188843 268.94311523]
[174.63920593 283.01733398]
[158.49826050 277.83020020]
[159.01443481 260.88412476]
[154.09405518 246.71408081]
[149.17367554 232.54403687]
[144.25331116 218.37400818]
[139.33293152 204.20396423]
[134.41256714 190.03393555]
[129.49218750 175.86389160]
[124.57181549 161.69386292]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 131]
[11 130]
[12 129]
[13 128]
[14 126]
[15 125]
[16 124]
[17 123]
[18 122]
[19 121]
[24 100]
[25 99]
[26 98]
[27 97]
[28 96]
[32 90]
[33 89]
[34 88]
[35 87]
[36 86]
[37 84]
[38 83]
[39 82]
[42 79]
[43 78]
[44 77]
[45 76]
[48 74]
[49 73]
[52 70]
[53 69]
[54 68]
[55 67]
[56 65]
[57 64]
[106 118]
[107 117]
[108 116]
[109 115]
[141 157]
[142 156]
[143 155]
[144 154]
[145 153]
[169 187]
[170 186]
[171 185]
[172 184]
[173 183]
[174 182]
[175 181]
[176 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
