%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:58:02 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (WFDC6)
} def

/sequence { (\
ACACCGGGGCAGGCAAAGUGCAGAUGUAGGAGCUGCUGAGGAGCAGUUCUUAGUUUUGGUGCCAUCAACCAGGCCAGUACUUCCUAAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 19 0.005758399 ubox
1 27 0.010227190 ubox
1 60 0.005042410 ubox
1 78 0.154692228 ubox
2 18 0.006080286 ubox
2 20 0.012557333 ubox
2 26 0.011854126 ubox
2 59 0.004666559 ubox
2 61 0.282469397 ubox
2 77 0.163622379 ubox
3 19 0.012594331 ubox
3 25 0.011443651 ubox
3 27 0.009058790 ubox
3 60 0.365350898 ubox
3 78 0.108507600 ubox
4 13 0.243103571 ubox
4 18 0.011088907 ubox
4 26 0.010204611 ubox
4 59 0.373318359 ubox
4 73 0.380976224 ubox
4 77 0.113424720 ubox
5 12 0.244258356 ubox
5 26 0.012573133 ubox
5 58 0.373384612 ubox
5 72 0.381473262 ubox
6 25 0.012441292 ubox
6 57 0.371269144 ubox
6 63 0.010636789 ubox
6 66 0.022918634 ubox
6 70 0.238408782 ubox
6 75 0.054223332 ubox
6 81 0.091591072 ubox
6 82 0.051763755 ubox
6 83 0.066750068 ubox
6 84 0.243663872 ubox
6 85 0.289175991 ubox
7 56 0.369775579 ubox
7 62 0.010644909 ubox
7 65 0.020761608 ubox
7 66 0.009026895 ubox
7 69 0.239009019 ubox
7 70 0.306434599 ubox
7 74 0.053741219 ubox
7 75 0.043865249 ubox
7 80 0.098091035 ubox
7 81 0.065019360 ubox
7 82 0.065658039 ubox
7 83 0.243626243 ubox
7 84 0.303570497 ubox
7 85 0.231965129 ubox
8 55 0.368824778 ubox
8 63 0.049882603 ubox
8 65 0.010010725 ubox
8 66 0.042775628 ubox
8 69 0.307502895 ubox
8 70 0.069645235 ubox
8 74 0.040484991 ubox
8 75 0.289870409 ubox
8 80 0.072073736 ubox
8 81 0.071120671 ubox
8 82 0.208699246 ubox
8 83 0.303076754 ubox
8 84 0.239289449 ubox
8 85 0.012570777 ubox
9 19 0.017468835 ubox
9 21 0.133238949 ubox
9 27 0.063092803 ubox
9 54 0.368890647 ubox
9 60 0.010869047 ubox
9 62 0.050071567 ubox
9 65 0.041885049 ubox
9 69 0.069796380 ubox
9 74 0.291306983 ubox
9 78 0.235451072 ubox
9 80 0.075772237 ubox
9 81 0.084417689 ubox
9 82 0.219361922 ubox
9 83 0.238962599 ubox
9 84 0.011164594 ubox
10 18 0.018767710 ubox
10 20 0.135904517 ubox
10 26 0.071067197 ubox
10 53 0.368732913 ubox
10 59 0.010873161 ubox
10 61 0.050066226 ubox
10 73 0.291644384 ubox
10 77 0.257344095 ubox
11 19 0.133503233 ubox
11 25 0.069562907 ubox
11 51 0.009720061 ubox
11 60 0.045710965 ubox
11 81 0.203844538 ubox
11 82 0.076742975 ubox
11 85 0.537376088 ubox
12 50 0.004754709 ubox
12 51 0.005790230 ubox
12 55 0.003511899 ubox
12 63 0.400570601 ubox
12 66 0.026805117 ubox
12 70 0.248563754 ubox
12 75 0.275981729 ubox
12 80 0.205194531 ubox
12 81 0.075293177 ubox
12 82 0.009138691 ubox
12 83 0.012359674 ubox
12 84 0.564452808 ubox
12 85 0.050815541 ubox
13 19 0.034676979 ubox
13 21 0.430457743 ubox
13 27 0.029126579 ubox
13 54 0.004073264 ubox
13 60 0.012518897 ubox
13 62 0.401331935 ubox
13 65 0.024322401 ubox
13 69 0.248208316 ubox
13 74 0.276347102 ubox
13 78 0.135117989 ubox
13 80 0.073109099 ubox
13 81 0.005325464 ubox
13 82 0.012116421 ubox
13 83 0.563052013 ubox
13 84 0.052639534 ubox
14 18 0.036438202 ubox
14 20 0.432475650 ubox
14 26 0.032910299 ubox
14 53 0.004148391 ubox
14 58 0.033088127 ubox
14 59 0.014521946 ubox
14 61 0.401210429 ubox
14 73 0.275891343 ubox
14 77 0.140074474 ubox
15 19 0.350560211 ubox
15 25 0.030379796 ubox
15 56 0.004502000 ubox
15 57 0.033090641 ubox
15 60 0.352018326 ubox
15 82 0.143546403 ubox
16 55 0.005708423 ubox
16 56 0.031864566 ubox
16 57 0.010508386 ubox
16 81 0.102233436 ubox
16 82 0.554311195 ubox
17 54 0.005506715 ubox
17 55 0.028707673 ubox
17 56 0.011264559 ubox
17 57 0.027744936 ubox
17 81 0.654185977 ubox
17 82 0.009938036 ubox
17 85 0.004199253 ubox
18 25 0.035376817 ubox
18 54 0.017618306 ubox
18 55 0.009657553 ubox
18 56 0.025793295 ubox
18 60 0.043055573 ubox
18 62 0.245872678 ubox
18 65 0.095156202 ubox
18 69 0.093161039 ubox
18 74 0.014277752 ubox
18 80 0.665832248 ubox
18 84 0.004220083 ubox
19 24 0.037528952 ubox
19 26 0.006294578 ubox
19 28 0.047800000 ubox
19 52 0.005710864 ubox
19 53 0.011409478 ubox
19 58 0.021941578 ubox
19 59 0.109373782 ubox
19 61 0.245658459 ubox
19 64 0.098477577 ubox
19 67 0.047764473 ubox
19 68 0.088100831 ubox
19 71 0.007132030 ubox
19 73 0.013570060 ubox
19 76 0.033821921 ubox
19 79 0.665440756 ubox
20 25 0.005619226 ubox
20 27 0.063405496 ubox
20 51 0.004568484 ubox
20 54 0.050975296 ubox
20 57 0.026012922 ubox
20 60 0.233083145 ubox
20 62 0.108701159 ubox
20 63 0.090001755 ubox
20 66 0.052715267 ubox
20 70 0.007931035 ubox
20 74 0.028157562 ubox
20 75 0.033463255 ubox
20 78 0.662875337 ubox
21 26 0.069328932 ubox
21 53 0.052006079 ubox
21 58 0.495159546 ubox
21 59 0.186148521 ubox
21 61 0.115497668 ubox
21 73 0.028871482 ubox
21 77 0.654079185 ubox
22 55 0.029020935 ubox
22 56 0.264590239 ubox
22 57 0.567326686 ubox
22 60 0.110132139 ubox
22 81 0.003597942 ubox
22 85 0.003216429 ubox
23 51 0.003810356 ubox
23 54 0.030271775 ubox
23 55 0.365888652 ubox
23 56 0.612556807 ubox
23 57 0.054843728 ubox
23 66 0.050568909 ubox
23 80 0.003821746 ubox
23 83 0.004901214 ubox
23 84 0.003289477 ubox
24 54 0.380903584 ubox
24 55 0.617252105 ubox
24 56 0.059385960 ubox
24 60 0.003682121 ubox
24 65 0.050780429 ubox
24 82 0.004805950 ubox
25 52 0.020109941 ubox
25 53 0.350233214 ubox
25 58 0.005109277 ubox
25 59 0.003493521 ubox
25 64 0.050750106 ubox
25 71 0.003637759 ubox
25 76 0.086056072 ubox
26 51 0.017064984 ubox
26 54 0.057169712 ubox
26 57 0.006178536 ubox
26 62 0.007290209 ubox
26 63 0.050174562 ubox
26 70 0.003363074 ubox
26 74 0.030325520 ubox
26 75 0.086675609 ubox
26 80 0.005134765 ubox
27 52 0.939938711 ubox
27 53 0.015773129 ubox
27 61 0.009583962 ubox
27 73 0.024800332 ubox
27 79 0.004648300 ubox
27 86 0.003251220 ubox
28 50 0.040120464 ubox
28 51 0.983024882 ubox
28 60 0.007746733 ubox
28 78 0.003863809 ubox
28 85 0.003635959 ubox
29 49 0.032016681 ubox
29 50 0.996748047 ubox
29 51 0.008517601 ubox
29 84 0.003665387 ubox
30 48 0.019918437 ubox
30 49 0.999445314 ubox
30 83 0.003487283 ubox
31 47 0.016563584 ubox
31 48 0.999216637 ubox
32 47 0.999373210 ubox
33 46 0.999980092 ubox
34 45 0.999751865 ubox
35 44 0.999986201 ubox
36 43 0.999946712 ubox
37 42 0.989928490 ubox
51 58 0.003206215 ubox
51 76 0.016679479 ubox
52 57 0.003774786 ubox
52 78 0.003705515 ubox
52 81 0.080792581 ubox
52 82 0.003254548 ubox
52 85 0.003175518 ubox
53 60 0.003449450 ubox
53 62 0.023495109 ubox
53 69 0.005912759 ubox
53 74 0.334074577 ubox
53 80 0.108898825 ubox
53 84 0.003241279 ubox
54 59 0.003567504 ubox
54 61 0.023312406 ubox
54 68 0.005645454 ubox
54 72 0.007869563 ubox
54 73 0.291313071 ubox
54 77 0.003599013 ubox
54 79 0.108731167 ubox
55 67 0.004623534 ubox
55 71 0.004124779 ubox
55 72 0.231413924 ubox
55 73 0.301119008 ubox
55 76 0.007980849 ubox
55 77 0.004730674 ubox
56 68 0.017365854 ubox
56 71 0.162692710 ubox
56 72 0.472792661 ubox
56 73 0.011262468 ubox
56 76 0.008392523 ubox
56 77 0.103222278 ubox
57 64 0.006784810 ubox
57 67 0.024206162 ubox
57 71 0.585509742 ubox
57 72 0.009444401 ubox
57 76 0.219417083 ubox
57 79 0.050097735 ubox
58 63 0.007562448 ubox
58 66 0.025727383 ubox
58 70 0.629836017 ubox
58 75 0.240858639 ubox
58 78 0.058980330 ubox
58 81 0.032389291 ubox
58 84 0.003266067 ubox
59 65 0.025250124 ubox
59 69 0.630522363 ubox
59 74 0.205231700 ubox
59 78 0.014008825 ubox
59 80 0.040760816 ubox
59 83 0.003329062 ubox
60 64 0.023447281 ubox
60 67 0.097809333 ubox
60 68 0.620705009 ubox
60 71 0.019288301 ubox
60 73 0.167097371 ubox
60 76 0.104856316 ubox
60 77 0.008596106 ubox
60 79 0.040618134 ubox
61 66 0.135807132 ubox
61 70 0.029823026 ubox
61 74 0.462093843 ubox
61 75 0.082118607 ubox
61 78 0.022503040 ubox
62 73 0.522229238 ubox
62 77 0.022317494 ubox
63 72 0.525032744 ubox
64 78 0.003732054 ubox
65 73 0.025913192 ubox
65 77 0.003713355 ubox
66 72 0.051509019 ubox
68 78 0.024778856 ubox
69 77 0.025648575 ubox
71 81 0.060814740 ubox
71 82 0.049664768 ubox
71 85 0.137054848 ubox
72 80 0.065974879 ubox
72 81 0.062270327 ubox
72 82 0.003686127 ubox
72 83 0.017596985 ubox
72 84 0.143933633 ubox
72 85 0.012087289 ubox
73 80 0.063855223 ubox
73 81 0.003728547 ubox
73 82 0.016884122 ubox
73 83 0.142720191 ubox
73 84 0.012446497 ubox
76 82 0.026846627 ubox
76 85 0.108649153 ubox
77 81 0.022855494 ubox
77 84 0.113416246 ubox
78 86 0.024297498 ubox
79 85 0.024840074 ubox
81 87 0.018377889 ubox
81 88 0.012710705 ubox
82 86 0.017098479 ubox
82 87 0.015925873 ubox
4 73 0.9500000 lbox
5 72 0.9500000 lbox
7 70 0.9500000 lbox
8 69 0.9500000 lbox
12 63 0.9500000 lbox
13 62 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
21 58 0.9500000 lbox
22 57 0.9500000 lbox
23 56 0.9500000 lbox
24 55 0.9500000 lbox
27 52 0.9500000 lbox
28 51 0.9500000 lbox
29 50 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
32 47 0.9500000 lbox
33 46 0.9500000 lbox
34 45 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
showpage
end
%%EOF
