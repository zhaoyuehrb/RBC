%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:41:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGGCGAUCAUGGCAAGUUAGAAGUUUUCUGACUCCUUUCGGAGGAGCCUCCGGGACCCCGGGGAGUAACAGGUGUCUGGAGGCUGAAGGGUGGAGGGGUUCCUGGAUUUGGGGUUUGCUUGUGAAACUCCCCUCCACCCUCCUCUCUCGCACCCACCCACCCCCUCACCCCCUUCUUUUUCCGUCCUUGGAAA\
) } def
/len { sequence length } bind def

/coor [
[125.51354980 192.66154480]
[119.63405609 178.86186218]
[113.75455475 165.06216431]
[98.77839661 165.90753174]
[94.48921204 180.28121948]
[103.24439240 193.23809814]
[101.57131958 208.78593445]
[90.25997162 219.58348083]
[74.65120697 220.53250122]
[62.11502457 211.18489075]
[58.57061005 195.95428467]
[65.69154358 182.03213501]
[80.11552429 175.99203491]
[84.40470886 161.61834717]
[78.00202942 157.71249390]
[58.79398727 145.99493408]
[47.97595215 156.38580322]
[37.15791321 166.77667236]
[26.33987808 177.16752625]
[15.52184105 187.55839539]
[4.70380449 197.94926453]
[-6.11423206 208.34013367]
[-16.93226814 218.73098755]
[-24.16704369 234.06378174]
[-40.90340424 231.35627747]
[-42.93480301 214.52447510]
[-27.32313347 207.91296387]
[-16.50509834 197.52209473]
[-5.68706083 187.13122559]
[5.13097572 176.74035645]
[15.94901276 166.34950256]
[26.76704979 155.95863342]
[37.58508682 145.56776428]
[48.40312195 135.17689514]
[45.35259628 128.32530212]
[39.25154877 114.62212372]
[36.20102310 107.77053833]
[21.24042702 108.85705566]
[6.27982903 109.94358063]
[-8.68076801 111.03010559]
[-23.64136505 112.11662292]
[-38.60196304 113.20314789]
[-53.56256104 114.28966522]
[-68.52315521 115.37619019]
[-81.78282928 125.02570343]
[-96.65748596 118.12088013]
[-97.84535980 101.76480865]
[-84.12445831 92.78321838]
[-69.60968018 100.41559601]
[-54.64908218 99.32907104]
[-39.68848419 98.24254608]
[-24.72788811 97.15602875]
[-9.76729012 96.06950378]
[5.19330692 94.98297882]
[20.15390396 93.89646149]
[35.11450195 92.80993652]
[47.33847809 74.23443604]
[63.77988434 62.72963333]
[81.25603485 58.74325943]
[96.84192657 61.47000885]
[108.31654358 69.09613800]
[115.50045013 55.92832184]
[122.68436432 42.76050568]
[129.86828613 29.59269142]
[131.23452759 20.54719925]
[137.27548218 16.27196884]
[144.67059326 3.22159481]
[136.14320374 -10.93702507]
[135.91699219 -27.36986351]
[143.95903015 -41.59444809]
[157.99394226 -49.77834702]
[174.14678955 -49.77156448]
[181.33070374 -62.93938065]
[188.51461792 -76.10719299]
[195.69853210 -89.27500916]
[202.88244629 -102.44282532]
[197.63966370 -119.12544250]
[205.91557312 -134.14582825]
[222.16621399 -138.45314026]
[229.13706970 -151.73498535]
[236.10791016 -165.01683044]
[243.07876587 -178.29867554]
[250.04960632 -191.58050537]
[249.71569824 -195.94010925]
[250.69538879 -199.78823853]
[252.66445923 -202.77307129]
[255.21737671 -204.68521118]
[257.92120361 -205.47174072]
[265.73291016 -218.27709961]
[273.54461670 -231.08245850]
[281.35632324 -243.88781738]
[289.16802979 -256.69317627]
[296.97973633 -269.49853516]
[304.79144287 -282.30389404]
[312.60314941 -295.10925293]
[320.41485596 -307.91461182]
[328.22656250 -320.71997070]
[336.03826904 -333.52532959]
[343.84997559 -346.33068848]
[335.53933716 -350.58267212]
[329.31301880 -359.83660889]
[327.62911987 -372.86563110]
[332.14929199 -387.16836548]
[323.60400391 -400.26461792]
[325.52731323 -415.78344727]
[337.01116943 -426.39739990]
[352.63317871 -427.09481812]
[365.01715088 -417.54644775]
[368.31573486 -402.26074219]
[360.97143555 -388.45510864]
[346.45202637 -382.64816284]
[341.93185425 -368.34545898]
[354.86138916 -360.74105835]
[365.16476440 -371.64242554]
[375.46817017 -382.54382324]
[385.77154541 -393.44522095]
[396.07492065 -404.34658813]
[394.09381104 -419.85818481]
[402.59030151 -432.98614502]
[417.55258179 -437.53192139]
[431.91595459 -431.34906006]
[438.89846802 -417.35696411]
[435.20315552 -402.16226196]
[422.57489014 -392.93945312]
[406.97631836 -394.04321289]
[396.67294312 -383.14181519]
[386.36953735 -372.24044800]
[376.06616211 -361.33905029]
[365.76278687 -350.43765259]
[356.65533447 -338.51898193]
[348.84362793 -325.71362305]
[341.03192139 -312.90826416]
[333.22021484 -300.10290527]
[325.40850830 -287.29754639]
[317.59680176 -274.49218750]
[309.78509521 -261.68682861]
[301.97338867 -248.88146973]
[294.16168213 -236.07611084]
[286.34997559 -223.27075195]
[278.53826904 -210.46539307]
[270.72656250 -197.66003418]
[263.33145142 -184.60966492]
[256.36059570 -171.32781982]
[249.38975525 -158.04597473]
[242.41889954 -144.76414490]
[235.44805908 -131.48229980]
[240.96658325 -119.83004761]
[238.72872925 -106.93512726]
[229.33137512 -97.54842377]
[216.05026245 -95.25891876]
[208.86634827 -82.09110260]
[201.68243408 -68.92328644]
[194.49851990 -55.75546646]
[187.31460571 -42.58765030]
[195.18309021 -31.41632080]
[197.47888184 -17.87917519]
[193.69729614 -4.61091948]
[184.52210999 5.78108978]
[171.70275879 11.22919941]
[157.72096252 10.61671066]
[150.32585144 23.66708374]
[143.03610229 36.77660370]
[135.85218811 49.94441986]
[128.66827393 63.11223602]
[121.48435974 76.28005219]
[148.09588623 107.27510834]
[127.55424500 159.18266296]
[133.43374634 172.98236084]
[139.31324768 186.78205872]
[144.45645142 172.69136047]
[156.16113281 163.31051636]
[171.03369141 161.35937500]
[184.76202393 167.40362549]
[193.36576843 179.69082642]
[194.35040283 194.65847778]
[187.43041992 207.96690369]
[174.61221313 215.75749207]
[159.61221313 215.77146912]
[146.78117371 208.00656128]
[150.83824158 222.44749451]
[154.89530945 236.88841248]
[158.95237732 251.32933044]
[163.00944519 265.77026367]
[167.06651306 280.21118164]
[179.17329407 291.27273560]
[175.38331604 307.22793579]
[159.59539795 311.66342163]
[148.05078125 300.01635742]
[152.62559509 284.26824951]
[148.56852722 269.82733154]
[144.51145935 255.38639832]
[140.45439148 240.94548035]
[136.39732361 226.50456238]
[132.34025574 212.06364441]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 169]
[2 168]
[3 167]
[4 14]
[5 13]
[16 34]
[17 33]
[18 32]
[19 31]
[20 30]
[21 29]
[22 28]
[23 27]
[37 56]
[38 55]
[39 54]
[40 53]
[41 52]
[42 51]
[43 50]
[44 49]
[61 165]
[62 164]
[63 163]
[64 162]
[66 161]
[67 160]
[72 154]
[73 153]
[74 152]
[75 151]
[76 150]
[79 146]
[80 145]
[81 144]
[82 143]
[83 142]
[88 141]
[89 140]
[90 139]
[91 138]
[92 137]
[93 136]
[94 135]
[95 134]
[96 133]
[97 132]
[98 131]
[99 130]
[102 112]
[103 111]
[113 129]
[114 128]
[115 127]
[116 126]
[117 125]
[179 194]
[180 193]
[181 192]
[182 191]
[183 190]
[184 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
