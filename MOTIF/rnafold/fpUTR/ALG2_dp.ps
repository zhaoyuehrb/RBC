%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:04:17 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ALG2)
} def

/sequence { (\
GAGCUACGAGCGCGGAGCUUGCGCAGAAGACCCCCAUCAGGGUGCGGGGUGCAGUUGCGGCUCCAGGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 20 0.052407719 ubox
1 63 0.112828134 ubox
2 19 0.055531998 ubox
2 62 0.113244404 ubox
3 11 0.181833851 ubox
3 13 0.065183947 ubox
3 18 0.055940798 ubox
3 22 0.009202371 ubox
3 24 0.004953282 ubox
3 58 0.004128336 ubox
3 61 0.113309643 ubox
3 69 0.935355436 ubox
4 10 0.182012587 ubox
4 12 0.065216264 ubox
4 17 0.055940873 ubox
4 21 0.008851167 ubox
4 23 0.004956095 ubox
4 57 0.004122826 ubox
4 60 0.113100574 ubox
4 66 0.070021993 ubox
4 67 0.188559035 ubox
4 68 0.933400441 ubox
5 9 0.163989908 ubox
5 16 0.042812773 ubox
5 59 0.052262979 ubox
5 65 0.068941583 ubox
5 66 0.205493869 ubox
5 67 0.911894191 ubox
6 55 0.004101562 ubox
7 14 0.055702869 ubox
7 21 0.115704446 ubox
7 54 0.004295460 ubox
7 57 0.014496462 ubox
8 13 0.055896531 ubox
8 20 0.117570783 ubox
8 56 0.013971775 ubox
8 63 0.956035672 ubox
9 19 0.117829088 ubox
9 55 0.012951023 ubox
9 62 0.959920236 ubox
10 18 0.117893058 ubox
10 24 0.022377709 ubox
10 61 0.960304796 ubox
10 69 0.124926352 ubox
11 17 0.117873540 ubox
11 23 0.022405490 ubox
11 59 0.048897151 ubox
11 60 0.958356290 ubox
11 68 0.125157250 ubox
12 18 0.009276470 ubox
12 22 0.023932261 ubox
12 24 0.004684260 ubox
12 58 0.069075829 ubox
12 69 0.126886336 ubox
13 17 0.009221961 ubox
13 21 0.024048677 ubox
13 23 0.004690135 ubox
13 57 0.069130833 ubox
13 59 0.953852267 ubox
13 68 0.127044909 ubox
14 20 0.022056972 ubox
14 22 0.004704944 ubox
14 56 0.055022597 ubox
14 58 0.957241642 ubox
14 64 0.244806412 ubox
15 19 0.014335074 ubox
15 55 0.033452994 ubox
15 56 0.008936860 ubox
15 63 0.245225502 ubox
16 55 0.010061095 ubox
16 56 0.949877444 ubox
16 62 0.245194161 ubox
17 52 0.014223265 ubox
17 55 0.958626457 ubox
17 61 0.245219988 ubox
18 51 0.014220818 ubox
18 54 0.959071915 ubox
18 60 0.244960355 ubox
19 49 0.012692541 ubox
19 53 0.677067585 ubox
19 54 0.038909068 ubox
19 59 0.119754939 ubox
19 60 0.007776126 ubox
20 48 0.015704146 ubox
20 51 0.003218846 ubox
20 53 0.676653019 ubox
20 59 0.049590971 ubox
21 52 0.958755031 ubox
21 55 0.007316675 ubox
21 58 0.070123501 ubox
21 61 0.011014612 ubox
22 46 0.016857685 ubox
22 51 0.958839918 ubox
22 54 0.007400668 ubox
22 57 0.070065335 ubox
22 59 0.233970348 ubox
22 60 0.007849634 ubox
23 45 0.017259332 ubox
23 50 0.945610346 ubox
23 52 0.050788008 ubox
23 55 0.025612004 ubox
23 56 0.058750577 ubox
23 58 0.268337162 ubox
24 44 0.017263255 ubox
24 49 0.941962430 ubox
24 51 0.050880416 ubox
24 54 0.036138191 ubox
24 57 0.268399155 ubox
25 43 0.013572433 ubox
25 50 0.035222759 ubox
25 56 0.267519729 ubox
26 55 0.259578795 ubox
26 56 0.009359653 ubox
27 55 0.014241567 ubox
30 43 0.929227346 ubox
30 50 0.319318112 ubox
31 41 0.005901194 ubox
31 42 0.934355549 ubox
31 47 0.011301701 ubox
31 48 0.078926664 ubox
31 49 0.333042445 ubox
32 40 0.006149792 ubox
32 41 0.933733048 ubox
32 42 0.057443758 ubox
32 46 0.011374475 ubox
32 47 0.078895716 ubox
32 48 0.339020126 ubox
32 49 0.011811805 ubox
33 40 0.931230563 ubox
33 41 0.066482889 ubox
33 42 0.048805386 ubox
33 46 0.077553867 ubox
33 47 0.339023312 ubox
33 48 0.014120033 ubox
34 40 0.074181519 ubox
34 41 0.051742947 ubox
34 42 0.016659483 ubox
34 46 0.338956783 ubox
34 47 0.014256991 ubox
35 40 0.052690415 ubox
35 41 0.017031607 ubox
35 44 0.345480810 ubox
35 46 0.014331787 ubox
36 43 0.340531333 ubox
37 42 0.321667503 ubox
38 44 0.020372266 ubox
39 43 0.016545934 ubox
46 64 0.004334834 ubox
47 63 0.004358755 ubox
48 62 0.004250605 ubox
49 61 0.004262376 ubox
50 59 0.004071726 ubox
51 58 0.018187366 ubox
52 57 0.018182522 ubox
59 70 0.051817805 ubox
60 69 0.065030571 ubox
61 67 0.003262691 ubox
61 68 0.065030839 ubox
62 66 0.003484553 ubox
62 67 0.059779248 ubox
63 67 0.007425620 ubox
3 69 0.9500000 lbox
4 68 0.9500000 lbox
5 67 0.9500000 lbox
8 63 0.9500000 lbox
9 62 0.9500000 lbox
10 61 0.9500000 lbox
11 60 0.9500000 lbox
13 59 0.9500000 lbox
14 58 0.9500000 lbox
16 56 0.9500000 lbox
17 55 0.9500000 lbox
18 54 0.9500000 lbox
19 53 0.9500000 lbox
21 52 0.9500000 lbox
22 51 0.9500000 lbox
23 50 0.9500000 lbox
24 49 0.9500000 lbox
30 43 0.9500000 lbox
31 42 0.9500000 lbox
32 41 0.9500000 lbox
33 40 0.9500000 lbox
showpage
end
%%EOF
