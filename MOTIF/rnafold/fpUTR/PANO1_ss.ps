%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:44:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACAGCAGGAGAGCAGAGACCACCCCACAGGAAGAUACCGCUGCUUCCGAAUCUGCAGGGGUAAAAUCCUCCACCCAAGAAGCCGCCAGGCUCCUCCUACCCCCAAGAAAGGCA\
) } def
/len { sequence length } bind def

/coor [
[109.82514954 283.66159058]
[104.01033783 275.06777954]
[100.64804840 265.23321533]
[99.98236084 254.84387207]
[102.06892395 244.62687683]
[106.77043915 235.29969788]
[113.76565552 227.51974487]
[122.57131195 221.83801270]
[118.95124054 207.28138733]
[115.33116913 192.72477722]
[111.71110535 178.16815186]
[108.09103394 163.61154175]
[98.33522034 164.10243225]
[88.61803436 163.10580444]
[79.16497040 160.64482117]
[70.19538879 156.77656555]
[61.91741943 151.59078979]
[54.52316284 145.20785522]
[48.18420410 137.77586365]
[43.04763412 129.46728516]
[39.23265076 120.47490692]
[36.82777786 111.00740814]
[35.88882446 101.28448486]
[36.43758011 91.53175354]
[38.46130753 81.97552490]
[41.91304398 72.83756256]
[46.71269608 64.32990265]
[52.74888611 56.64997101]
[59.88154602 49.97598267]
[67.94515228 44.46281052]
[62.01777649 30.68361664]
[56.09040070 16.90442085]
[50.16302109 3.12522745]
[35.16608810 -0.39588568]
[25.23420715 -11.93759632]
[24.01732254 -26.93703651]
[31.77321625 -39.62498474]
[25.84583855 -53.40417862]
[19.91846085 -67.18337250]
[13.99108315 -80.96257019]
[1.43024266 -90.58212280]
[3.50853658 -105.33102417]
[-2.41884136 -119.11021423]
[-8.34621906 -132.88940430]
[-14.27359772 -146.66860962]
[-29.53602982 -148.38725281]
[-41.88482285 -157.51977539]
[-47.99821472 -171.60955811]
[-46.23173523 -186.86653137]
[-37.06055450 -199.18663025]
[-22.95167732 -205.25582886]
[-7.70031929 -203.44152832]
[4.59098005 -194.23178101]
[10.61592293 -180.10394287]
[8.75383091 -164.85835266]
[-0.49440348 -152.59597778]
[5.43297482 -138.81678772]
[11.36035252 -125.03759766]
[17.28773117 -111.25839996]
[29.42460442 -102.62442017]
[27.77027702 -86.88994598]
[33.69765472 -73.11075592]
[39.62503433 -59.33155823]
[45.55241013 -45.55236435]
[60.09753036 -42.45761108]
[70.15020752 -31.25905418]
[71.69928741 -16.11132240]
[63.94221497 -2.80215049]
[69.86959076 10.97704315]
[75.79697418 24.75623703]
[81.72434998 38.53543091]
[91.80606079 36.40163803]
[102.09938812 35.91033554]
[112.33849335 37.07421875]
[122.25894165 39.86322403]
[131.60453796 44.20532608]
[140.13391113 49.98838425]
[147.62678528 57.06304169]
[153.88963318 65.24659729]
[158.76074219 74.32769012]
[162.11428833 84.07180023]
[163.86366272 94.22727203]
[178.85816956 94.63346100]
[193.85266113 95.03964996]
[208.84716797 95.44584656]
[223.00047302 87.16236877]
[237.11499023 95.51177216]
[236.67091370 111.90490723]
[222.12506104 119.47792053]
[208.44097900 110.44034576]
[193.44647217 110.03414917]
[178.45198059 109.62796021]
[163.45747375 109.22177124]
[149.97914124 140.17434692]
[122.64765167 159.99147034]
[126.26772308 174.54808044]
[129.88778687 189.10470581]
[133.50785828 203.66131592]
[137.12792969 218.21794128]
[156.96873474 222.50813293]
[172.01451111 236.02513123]
[178.35179138 255.15510559]
[174.38090515 274.83737183]
[161.21902466 289.90319824]
[167.14639282 303.68240356]
[181.91914368 309.29858398]
[188.31747437 323.74978638]
[182.54541016 338.46231079]
[168.02737427 344.70751953]
[153.37669373 338.78021240]
[147.28533936 324.19696045]
[153.36720276 309.60977173]
[147.43981934 295.83056641]
[137.17050171 296.71423340]
[127.01206207 294.86984253]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 99]
[9 98]
[10 97]
[11 96]
[12 95]
[30 71]
[31 70]
[32 69]
[33 68]
[37 64]
[38 63]
[39 62]
[40 61]
[42 59]
[43 58]
[44 57]
[45 56]
[82 93]
[83 92]
[84 91]
[85 90]
[104 113]
[105 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
