%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:00:57 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (EFCAB10)
} def

/sequence { (\
GACCGCGCCGGGUAGAGGGAGACAGAGUCGCACGGCUGAGACGCCAGGCAGUCGCCUAGCAACAGCGGGACGCGGAGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 13 0.015875259 ubox
3 11 0.006773026 ubox
3 12 0.016351936 ubox
3 68 0.134602379 ubox
3 69 0.010931247 ubox
3 75 0.835254033 ubox
4 10 0.006833116 ubox
4 11 0.016334174 ubox
4 38 0.006295565 ubox
4 67 0.134932249 ubox
4 68 0.010165503 ubox
4 74 0.839005624 ubox
4 79 0.492291636 ubox
5 9 0.006436413 ubox
5 31 0.003322069 ubox
5 37 0.006232408 ubox
5 66 0.134974601 ubox
5 73 0.839074497 ubox
5 78 0.526232587 ubox
6 30 0.003332433 ubox
6 65 0.134805549 ubox
6 67 0.009226105 ubox
6 72 0.839026972 ubox
6 77 0.525259179 ubox
6 79 0.004340751 ubox
7 13 0.004102530 ubox
7 29 0.003209175 ubox
7 31 0.004702360 ubox
7 36 0.135627561 ubox
7 49 0.025815444 ubox
7 60 0.019181086 ubox
7 66 0.009838893 ubox
7 71 0.823781553 ubox
7 78 0.004644361 ubox
8 12 0.004776059 ubox
8 18 0.169410710 ubox
8 19 0.246149882 ubox
8 27 0.003609430 ubox
8 30 0.004017076 ubox
8 35 0.139453665 ubox
8 48 0.025897002 ubox
8 59 0.019183945 ubox
8 65 0.009897526 ubox
8 68 0.400577111 ubox
8 69 0.667927523 ubox
8 75 0.525195202 ubox
8 77 0.003535461 ubox
9 17 0.170179966 ubox
9 18 0.247179633 ubox
9 30 0.008587106 ubox
9 34 0.145446137 ubox
9 38 0.003198842 ubox
9 47 0.025824038 ubox
9 67 0.421779463 ubox
9 68 0.654983320 ubox
9 74 0.526085716 ubox
10 29 0.030324193 ubox
10 33 0.166442994 ubox
10 37 0.005026240 ubox
10 42 0.009328670 ubox
10 45 0.041025213 ubox
10 56 0.005723907 ubox
10 57 0.052454652 ubox
10 66 0.432419588 ubox
10 73 0.525699340 ubox
11 28 0.028697607 ubox
11 29 0.018827461 ubox
11 36 0.005123132 ubox
11 37 0.031254319 ubox
11 44 0.041015984 ubox
11 45 0.036056722 ubox
11 55 0.005631471 ubox
11 56 0.054955882 ubox
12 23 0.132463839 ubox
12 28 0.015083644 ubox
12 31 0.170662008 ubox
12 33 0.125961399 ubox
12 36 0.032949625 ubox
12 42 0.045328914 ubox
12 44 0.036152467 ubox
12 49 0.004309519 ubox
12 55 0.054961582 ubox
12 60 0.104886483 ubox
12 63 0.450711746 ubox
12 66 0.157393479 ubox
12 71 0.522666135 ubox
13 22 0.131753090 ubox
13 27 0.007615012 ubox
13 30 0.164849850 ubox
13 32 0.122709406 ubox
13 35 0.032829296 ubox
13 38 0.025982891 ubox
13 41 0.044502143 ubox
13 43 0.035401545 ubox
13 48 0.004292914 ubox
13 54 0.052396311 ubox
13 58 0.015157939 ubox
13 59 0.104558509 ubox
13 62 0.438837629 ubox
13 65 0.153965867 ubox
13 70 0.506999554 ubox
13 72 0.003361677 ubox
14 37 0.035301838 ubox
14 57 0.014600353 ubox
15 29 0.202755960 ubox
15 36 0.035834744 ubox
15 53 0.038737260 ubox
15 56 0.012607720 ubox
16 28 0.200096953 ubox
16 37 0.025361727 ubox
16 52 0.036522314 ubox
16 57 0.233290516 ubox
17 29 0.077982412 ubox
17 36 0.025836123 ubox
17 37 0.034560783 ubox
17 45 0.099913260 ubox
17 53 0.009210136 ubox
17 56 0.234422274 ubox
17 57 0.458396178 ubox
18 28 0.073826733 ubox
18 29 0.081446002 ubox
18 36 0.034791920 ubox
18 37 0.005658815 ubox
18 44 0.099751012 ubox
18 45 0.135021892 ubox
18 52 0.007435649 ubox
18 53 0.012159299 ubox
18 55 0.232502042 ubox
18 56 0.474636642 ubox
18 57 0.031326381 ubox
19 28 0.076705090 ubox
19 29 0.197959209 ubox
19 36 0.005552251 ubox
19 44 0.135297266 ubox
19 52 0.009674259 ubox
19 53 0.091396499 ubox
19 55 0.474760997 ubox
19 56 0.031304392 ubox
20 28 0.196293038 ubox
20 37 0.004073532 ubox
20 52 0.086347070 ubox
20 57 0.013471184 ubox
21 29 0.690659416 ubox
21 36 0.003995881 ubox
21 53 0.518068132 ubox
21 56 0.013500861 ubox
22 28 0.690954891 ubox
22 52 0.520323071 ubox
23 27 0.684352693 ubox
23 38 0.045942833 ubox
23 51 0.519175989 ubox
24 37 0.042800967 ubox
25 36 0.039583318 ubox
25 53 0.043907414 ubox
26 37 0.228083054 ubox
26 52 0.043688238 ubox
26 57 0.004695929 ubox
27 33 0.076707834 ubox
27 36 0.232580027 ubox
27 42 0.204795734 ubox
27 49 0.411429328 ubox
27 52 0.003997245 ubox
27 55 0.003407892 ubox
27 56 0.004745398 ubox
27 63 0.021919802 ubox
27 71 0.095726701 ubox
27 78 0.005060271 ubox
28 32 0.069225573 ubox
28 35 0.232742377 ubox
28 39 0.014195875 ubox
28 41 0.205104054 ubox
28 48 0.411173948 ubox
28 51 0.028244083 ubox
28 62 0.021787749 ubox
28 68 0.041244011 ubox
28 69 0.008677331 ubox
28 70 0.100824245 ubox
28 75 0.013471131 ubox
28 77 0.004398304 ubox
29 34 0.235486131 ubox
29 38 0.015243864 ubox
29 40 0.204259100 ubox
29 47 0.407187609 ubox
29 54 0.007236750 ubox
29 67 0.061227026 ubox
29 68 0.008715989 ubox
29 69 0.102468566 ubox
29 72 0.007603216 ubox
29 74 0.017754931 ubox
30 36 0.051493220 ubox
30 37 0.008602916 ubox
30 44 0.027398111 ubox
30 49 0.387680899 ubox
30 53 0.008924975 ubox
30 55 0.013332050 ubox
30 60 0.063063359 ubox
30 66 0.068332684 ubox
30 71 0.017438418 ubox
30 73 0.019221480 ubox
30 78 0.003517262 ubox
31 35 0.051310677 ubox
31 38 0.189872190 ubox
31 43 0.027140536 ubox
31 48 0.388330933 ubox
31 51 0.003568385 ubox
31 54 0.013471812 ubox
31 59 0.063078059 ubox
31 65 0.068215321 ubox
31 72 0.019270056 ubox
31 77 0.003515966 ubox
32 37 0.162208464 ubox
32 52 0.015383242 ubox
33 43 0.163258724 ubox
33 51 0.015556202 ubox
33 54 0.112259561 ubox
33 67 0.270122046 ubox
33 72 0.006095226 ubox
33 74 0.003168448 ubox
34 42 0.164897299 ubox
34 45 0.606694144 ubox
34 53 0.114712146 ubox
34 56 0.043658557 ubox
34 66 0.192829968 ubox
34 71 0.006718693 ubox
35 44 0.609323793 ubox
35 49 0.015221843 ubox
35 52 0.114719903 ubox
35 55 0.043714328 ubox
35 60 0.038373283 ubox
35 66 0.647988405 ubox
36 43 0.608536926 ubox
36 47 0.015831897 ubox
36 48 0.012933411 ubox
36 51 0.114751235 ubox
36 54 0.043634425 ubox
36 59 0.038386877 ubox
36 65 0.676888479 ubox
36 68 0.038733323 ubox
36 69 0.004439267 ubox
37 43 0.014207057 ubox
37 46 0.019166750 ubox
37 47 0.009921682 ubox
37 50 0.114690430 ubox
37 58 0.038135530 ubox
37 64 0.677132507 ubox
37 67 0.040436298 ubox
37 68 0.004241222 ubox
38 42 0.066531547 ubox
38 45 0.022116603 ubox
38 49 0.114209234 ubox
38 53 0.009568039 ubox
38 57 0.031217274 ubox
38 63 0.675238132 ubox
38 66 0.043756333 ubox
39 52 0.009256335 ubox
39 57 0.003470943 ubox
40 53 0.075160458 ubox
40 56 0.004026125 ubox
41 52 0.075283367 ubox
42 51 0.075307879 ubox
42 54 0.004094678 ubox
42 67 0.017957666 ubox
42 79 0.008573149 ubox
43 49 0.062976670 ubox
43 53 0.004018395 ubox
43 60 0.736347107 ubox
43 66 0.017989920 ubox
43 71 0.003793403 ubox
43 78 0.009031056 ubox
44 48 0.062782888 ubox
44 51 0.004312134 ubox
44 59 0.736776403 ubox
44 65 0.017905725 ubox
44 68 0.009891574 ubox
44 69 0.011460981 ubox
44 77 0.009018329 ubox
45 67 0.009956779 ubox
45 68 0.011480826 ubox
46 57 0.790168667 ubox
47 53 0.005913656 ubox
47 56 0.809560447 ubox
48 52 0.003859871 ubox
48 55 0.809682730 ubox
48 60 0.007712806 ubox
48 66 0.018539167 ubox
48 73 0.009903499 ubox
49 54 0.808523461 ubox
49 59 0.007715552 ubox
49 65 0.018537366 ubox
49 72 0.009922145 ubox
50 57 0.009740937 ubox
51 56 0.009934566 ubox
51 60 0.007107085 ubox
51 63 0.029827967 ubox
51 71 0.067715601 ubox
51 73 0.006546670 ubox
52 59 0.006898227 ubox
52 62 0.029636043 ubox
52 68 0.048475977 ubox
52 69 0.005260492 ubox
52 70 0.070095622 ubox
52 72 0.004027977 ubox
53 67 0.071470695 ubox
53 68 0.006038774 ubox
53 69 0.071152609 ubox
53 72 0.020424993 ubox
53 74 0.003310195 ubox
54 60 0.033081746 ubox
54 66 0.072058843 ubox
54 71 0.032443883 ubox
54 73 0.003408491 ubox
55 59 0.032888875 ubox
55 65 0.068556838 ubox
55 68 0.074181481 ubox
55 69 0.203079640 ubox
55 72 0.003321656 ubox
56 65 0.022776721 ubox
56 67 0.073916312 ubox
56 68 0.203856060 ubox
56 69 0.044399930 ubox
57 64 0.030405967 ubox
57 67 0.180974518 ubox
57 68 0.043311704 ubox
59 66 0.426171308 ubox
59 78 0.005096719 ubox
60 65 0.426245900 ubox
60 77 0.005096920 ubox
65 73 0.018555487 ubox
66 72 0.018906041 ubox
66 74 0.003923479 ubox
67 71 0.018620905 ubox
67 73 0.004402235 ubox
71 79 0.117231436 ubox
72 78 0.123158627 ubox
73 77 0.122276247 ubox
73 79 0.006217613 ubox
74 78 0.006309079 ubox
3 75 0.9500000 lbox
4 74 0.9500000 lbox
5 73 0.9500000 lbox
6 72 0.9500000 lbox
7 71 0.9500000 lbox
8 69 0.9500000 lbox
9 68 0.9500000 lbox
21 29 0.9500000 lbox
22 28 0.9500000 lbox
23 27 0.9500000 lbox
35 66 0.9500000 lbox
36 65 0.9500000 lbox
37 64 0.9500000 lbox
38 63 0.9500000 lbox
43 60 0.9500000 lbox
44 59 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
