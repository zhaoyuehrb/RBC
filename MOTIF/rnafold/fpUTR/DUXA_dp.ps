%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:51:47 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DUXA)
} def

/sequence { (\
CUUGUCUCCCAGACAGUGGCUCAGCCUUCAGGACUCUCUUCCAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.006482207 ubox
1 16 0.213649107 ubox
1 19 0.021792649 ubox
1 24 0.006440741 ubox
1 31 0.010554073 ubox
1 32 0.013269009 ubox
1 44 0.055194314 ubox
2 11 0.005980083 ubox
2 12 0.009638656 ubox
2 15 0.152795111 ubox
2 16 0.763764281 ubox
2 18 0.019687047 ubox
2 23 0.005941524 ubox
2 24 0.010681795 ubox
2 30 0.010079207 ubox
2 31 0.012564034 ubox
2 43 0.047983634 ubox
2 44 0.009889186 ubox
3 11 0.011811266 ubox
3 15 0.957935513 ubox
3 23 0.013875110 ubox
3 30 0.010337205 ubox
3 43 0.007594302 ubox
4 10 0.012346892 ubox
4 14 0.998300181 ubox
4 20 0.008904675 ubox
4 22 0.014464786 ubox
4 25 0.009337939 ubox
4 29 0.008607289 ubox
4 34 0.018298770 ubox
4 42 0.003256844 ubox
4 45 0.004672656 ubox
5 13 0.998265341 ubox
5 19 0.008801751 ubox
5 24 0.007509675 ubox
5 33 0.018187925 ubox
5 44 0.003244153 ubox
6 12 0.998073212 ubox
6 18 0.008786145 ubox
6 24 0.009089045 ubox
6 32 0.017784214 ubox
6 44 0.007530089 ubox
7 11 0.899153482 ubox
7 13 0.004724243 ubox
7 23 0.009108307 ubox
7 31 0.015401194 ubox
7 33 0.014151985 ubox
7 43 0.007391434 ubox
8 12 0.005606351 ubox
8 19 0.004554662 ubox
8 31 0.007181476 ubox
8 32 0.015293961 ubox
9 18 0.004425120 ubox
9 19 0.024791606 ubox
9 31 0.015238874 ubox
9 32 0.014278534 ubox
10 18 0.024959721 ubox
10 31 0.014573741 ubox
11 17 0.024546875 ubox
11 27 0.004083825 ubox
11 39 0.015029194 ubox
12 26 0.003841508 ubox
12 27 0.003327280 ubox
12 28 0.007523258 ubox
12 29 0.022777934 ubox
12 38 0.015952394 ubox
13 27 0.007650742 ubox
13 28 0.021656183 ubox
13 37 0.015771452 ubox
15 27 0.009623450 ubox
15 28 0.040922644 ubox
15 35 0.019047351 ubox
15 39 0.006107342 ubox
16 20 0.003466892 ubox
16 25 0.037043029 ubox
16 26 0.007157180 ubox
16 27 0.075892449 ubox
16 34 0.022151652 ubox
16 36 0.004024200 ubox
16 38 0.008478591 ubox
16 45 0.035411636 ubox
17 23 0.012880183 ubox
17 24 0.036777406 ubox
17 30 0.050511660 ubox
17 33 0.022002221 ubox
17 43 0.129089348 ubox
17 44 0.029112051 ubox
18 22 0.014235114 ubox
18 26 0.973158864 ubox
18 27 0.017946847 ubox
18 29 0.050025099 ubox
18 35 0.009953060 ubox
18 36 0.010816281 ubox
18 37 0.010916583 ubox
18 38 0.016885666 ubox
18 39 0.016813143 ubox
18 40 0.003832142 ubox
18 41 0.009054892 ubox
18 42 0.143465378 ubox
19 25 0.974974539 ubox
19 26 0.018157729 ubox
19 28 0.044777171 ubox
19 34 0.011308711 ubox
19 35 0.008823380 ubox
19 36 0.012200587 ubox
19 37 0.015993778 ubox
19 38 0.018186479 ubox
19 39 0.004403003 ubox
19 40 0.008572352 ubox
19 41 0.143223900 ubox
19 45 0.047882374 ubox
20 24 0.967917361 ubox
20 31 0.008891721 ubox
20 32 0.006865285 ubox
20 44 0.048453064 ubox
21 30 0.009124804 ubox
21 31 0.005405865 ubox
21 32 0.009846078 ubox
21 33 0.010267302 ubox
21 43 0.047761784 ubox
22 31 0.011632833 ubox
22 32 0.010272550 ubox
23 35 0.128289082 ubox
23 37 0.046709319 ubox
23 39 0.022019811 ubox
24 34 0.133360964 ubox
24 36 0.047775983 ubox
24 38 0.022116633 ubox
24 45 0.035117431 ubox
25 32 0.149139545 ubox
25 44 0.033381587 ubox
26 31 0.148705222 ubox
26 32 0.023080454 ubox
26 44 0.029653402 ubox
27 31 0.020968896 ubox
27 33 0.013042827 ubox
27 43 0.041775016 ubox
27 44 0.049136814 ubox
28 32 0.012121543 ubox
28 43 0.050140132 ubox
30 37 0.038779974 ubox
30 39 0.074631890 ubox
30 40 0.120558193 ubox
31 36 0.041177111 ubox
31 37 0.014825487 ubox
31 38 0.079525890 ubox
31 39 0.143273305 ubox
31 40 0.007985582 ubox
31 41 0.048011677 ubox
31 42 0.953543149 ubox
32 36 0.018117097 ubox
32 37 0.062178577 ubox
32 38 0.145935958 ubox
32 39 0.007368203 ubox
32 40 0.047935905 ubox
32 41 0.954481660 ubox
33 37 0.127069838 ubox
33 39 0.055557111 ubox
33 40 0.892402147 ubox
34 44 0.020745041 ubox
35 43 0.020137214 ubox
36 44 0.016878762 ubox
37 43 0.016455775 ubox
38 44 0.014510382 ubox
39 43 0.013300093 ubox
2 16 0.9500000 lbox
3 15 0.9500000 lbox
4 14 0.9500000 lbox
5 13 0.9500000 lbox
6 12 0.9500000 lbox
7 11 0.9500000 lbox
18 26 0.9500000 lbox
19 25 0.9500000 lbox
20 24 0.9500000 lbox
31 42 0.9500000 lbox
32 41 0.9500000 lbox
33 40 0.9500000 lbox
showpage
end
%%EOF
