%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:20:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCAUCUGGUUGCCAGGGAAACAGCGGUCCCACAGGCAGGAGGGAUCUGGACCGGCGGCUUCUUCCACUACCAGAGAGGCUGAGGUGGCGGGAGAGACCCCUCUCCUCUGGGGGUAAGUGGCUGGCGCGGCGAGUGUCUGCGGCGCGCUUCUGCGGCCAUCUGCGCCCUGACUGACGGCGGCCAGUUCCUCGAGGAGGCCCGGCGGGAAGGAUUUCA\
) } def
/len { sequence length } bind def

/coor [
[270.69979858 301.83114624]
[260.67883301 290.66958618]
[250.65788269 279.50802612]
[240.63691711 268.34646606]
[230.61596680 257.18490601]
[215.77540588 256.64297485]
[205.45373535 245.46632385]
[206.12277222 229.90386963]
[196.10182190 218.74230957]
[186.08085632 207.58074951]
[176.05990601 196.41918945]
[166.03894043 185.25762939]
[156.01799011 174.09606934]
[145.99702454 162.93450928]
[139.19355774 160.05902100]
[135.91378784 151.54022217]
[126.05397034 140.23606873]
[116.19415283 128.93191528]
[106.33433533 117.62774658]
[96.55707550 117.55141449]
[88.60605621 112.67113495]
[84.52697754 104.78208923]
[85.08628082 96.36734772]
[72.31639099 88.49778748]
[59.54650497 80.62822723]
[46.77661896 72.75866699]
[25.98189545 79.36054230]
[7.35516357 68.55776215]
[2.87874031 47.78689575]
[-10.42228031 40.85271454]
[-23.72330093 33.91853333]
[-37.02431870 26.98435211]
[-50.32534027 20.05017090]
[-66.13922119 20.53157806]
[-73.84814453 7.78709888]
[-87.14916229 0.85291839]
[-100.45018768 -6.08126211]
[-107.05135345 -6.17863750]
[-111.88926697 -9.14626026]
[-114.02907562 -13.40991879]
[-127.12570190 -20.72280502]
[-140.22233582 -28.03569031]
[-153.31896973 -35.34857559]
[-166.41558838 -42.66146088]
[-179.51222229 -49.97434616]
[-195.33340454 -49.94678116]
[-202.67356873 -62.90715790]
[-215.77018738 -70.22003937]
[-228.86682129 -77.53292847]
[-241.31312561 -72.39402771]
[-254.25808716 -75.31721497]
[-263.02728271 -85.01731110]
[-264.58682251 -97.80435181]
[-277.57720947 -105.30435181]
[-293.39715576 -105.50373840]
[-300.55065918 -118.56806946]
[-313.54101562 -126.06806946]
[-329.36096191 -126.26746368]
[-336.51446533 -139.33180237]
[-349.50485229 -146.83180237]
[-362.49523926 -154.33180237]
[-375.48559570 -161.83180237]
[-388.47598267 -169.33180237]
[-403.56484985 -165.46339417]
[-416.63208008 -173.25451660]
[-420.22702026 -187.66326904]
[-433.21740723 -195.16326904]
[-449.03735352 -195.36265564]
[-456.19085693 -208.42698669]
[-469.18124390 -215.92698669]
[-484.98742676 -213.18032837]
[-496.89373779 -223.93295288]
[-495.76669312 -239.93637085]
[-482.47085571 -248.91412354]
[-467.20565796 -243.97924805]
[-461.68124390 -228.91737366]
[-448.69085693 -221.41737366]
[-433.80004883 -221.75442505]
[-425.71740723 -208.15364075]
[-412.72702026 -200.65364075]
[-398.45120239 -204.74470520]
[-385.17028809 -197.32369995]
[-380.97598267 -182.32217407]
[-367.98559570 -174.82217407]
[-354.99523926 -167.32217407]
[-342.00485229 -159.82217407]
[-329.01446533 -152.32217407]
[-314.12368774 -152.65924072]
[-306.04101562 -139.05845642]
[-293.05065918 -131.55845642]
[-278.15985107 -131.89552307]
[-270.07720947 -118.29473114]
[-257.08682251 -110.79473114]
[-241.03981018 -115.83675385]
[-226.01681519 -107.54704285]
[-221.55393982 -90.62955475]
[-208.45730591 -83.31667328]
[-195.36067200 -76.00378418]
[-180.47625732 -76.55442047]
[-172.19934082 -63.07097626]
[-159.10270691 -55.75809097]
[-146.00607300 -48.44520569]
[-132.90945435 -41.13232040]
[-119.81282043 -33.81943512]
[-106.71618652 -26.50654793]
[-93.51600647 -19.38228226]
[-80.21498871 -12.44810200]
[-66.91396332 -5.51392126]
[-52.05146027 -6.49130678]
[-43.39115906 6.74915171]
[-30.09013939 13.68333244]
[-16.78911972 20.61751366]
[-3.48809934 27.55169296]
[9.81292057 34.48587418]
[16.66484833 29.29137611]
[24.87233734 26.58631897]
[33.55690765 26.68988228]
[41.77935028 29.61902428]
[48.64132309 35.08360291]
[53.38345337 42.51488876]
[55.46936035 51.12466049]
[54.64617920 59.98878098]
[67.41606903 67.85833740]
[80.18595123 75.72789764]
[92.95584106 83.59746552]
[107.86911011 81.98674011]
[118.66418457 71.57202911]
[129.45925903 61.15731049]
[140.25434875 50.74259567]
[151.04942322 40.32788086]
[155.60890198 25.17790794]
[170.14047241 21.90949821]
[180.93556213 11.49478340]
[178.65005493 -3.85305500]
[185.85212708 -17.59750366]
[199.77241516 -24.45354080]
[215.05828857 -21.78488159]
[225.83201599 -10.61767769]
[227.95088196 4.75405025]
[220.60014343 18.41956139]
[206.60629272 25.12418747]
[191.35026550 22.28986168]
[180.55519104 32.70457458]
[176.76785278 47.10961914]
[161.46414185 51.12295914]
[150.66905212 61.53767395]
[139.87397766 71.95239258]
[129.07890320 82.36710358]
[118.28382111 92.78182220]
[117.63848877 107.76792908]
[127.49830627 119.07209015]
[137.35812378 130.37625122]
[147.21794128 141.68040466]
[157.15858459 152.91355896]
[167.17955017 164.07511902]
[177.20050049 175.23667908]
[187.22146606 186.39822388]
[197.24241638 197.55978394]
[207.26338196 208.72134399]
[217.28433228 219.88290405]
[232.82865906 220.88885498]
[242.83233643 232.35101318]
[241.77752686 247.16394043]
[251.79847717 258.32550049]
[261.81942749 269.48706055]
[271.84039307 280.64862061]
[281.86135864 291.81018066]
[292.42984009 302.45474243]
[303.51925659 312.55551147]
[314.60864258 322.65628052]
[330.17550659 322.09887695]
[341.27783203 332.50042725]
[341.71328735 347.34448242]
[352.80270386 357.44525146]
[363.89208984 367.54602051]
[379.30462646 371.11868286]
[383.50366211 385.40914917]
[394.59304810 395.50991821]
[405.68243408 405.61068726]
[412.03988647 407.39044189]
[415.95962524 411.49505615]
[416.93975830 416.16378784]
[427.73483276 426.57849121]
[438.52990723 436.99322510]
[443.58413696 438.24963379]
[447.28414917 441.03765869]
[449.27368164 444.58660889]
[449.55319214 448.09585571]
[459.89022827 458.96533203]
[470.22723389 469.83483887]
[486.10061646 473.95404053]
[490.20858765 489.83032227]
[478.32522583 501.13156128]
[462.67510986 496.23196411]
[459.35772705 480.17187500]
[449.02072144 469.30236816]
[438.68368530 458.43286133]
[428.11520386 447.78829956]
[417.32012939 437.37356567]
[406.52505493 426.95886230]
[395.58169556 416.70007324]
[384.49227905 406.59930420]
[373.40289307 396.49856567]
[358.78353882 393.64834595]
[353.79132080 378.63540649]
[342.70193481 368.53463745]
[331.61254883 358.43389893]
[316.79241943 359.38241577]
[305.40231323 349.29678345]
[304.50787354 333.74566650]
[293.41848755 323.64489746]
[282.32910156 313.54415894]
[283.16009521 328.52111816]
[274.26681519 340.60043335]
[259.71878052 344.25473022]
[246.17294312 337.81185913]
[239.82775879 324.22000122]
[243.58671570 309.69863892]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 167]
[2 166]
[3 165]
[4 164]
[5 163]
[8 160]
[9 159]
[10 158]
[11 157]
[12 156]
[13 155]
[14 154]
[16 153]
[17 152]
[18 151]
[19 150]
[23 125]
[24 124]
[25 123]
[26 122]
[29 114]
[30 113]
[31 112]
[32 111]
[33 110]
[35 108]
[36 107]
[37 106]
[40 105]
[41 104]
[42 103]
[43 102]
[44 101]
[45 100]
[47 98]
[48 97]
[49 96]
[53 93]
[54 92]
[56 90]
[57 89]
[59 87]
[60 86]
[61 85]
[62 84]
[63 83]
[66 80]
[67 79]
[69 77]
[70 76]
[126 149]
[127 148]
[128 147]
[129 146]
[130 145]
[132 143]
[133 142]
[168 212]
[169 211]
[170 210]
[173 207]
[174 206]
[175 205]
[177 203]
[178 202]
[179 201]
[182 200]
[183 199]
[184 198]
[188 197]
[189 196]
[190 195]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
