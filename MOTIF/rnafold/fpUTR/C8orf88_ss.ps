%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:17:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCGCCCCCCGCCGCCGCCACCGCGGUCAGCCAGCGGACCAGCGGCAGGAGCCGUUCCCCGACGGGCAGCAGGGCGCUCGGCCUCCGCGUGUGGGCUGAGCGCGGCGACGCUGCUGCCCCGAAAUCCCCGUGGAUUUUGAGUCGUAUGGAACCUCAAAGUCUUUGUGACA\
) } def
/len { sequence length } bind def

/coor [
[78.81591797 152.15621948]
[70.89057159 139.42088318]
[80.55345917 127.94803619]
[73.60475159 125.12571716]
[60.75434113 132.86309814]
[52.92291641 146.61006165]
[38.02844620 146.54661560]
[25.17803764 154.28399658]
[21.30512619 166.61305237]
[10.41125107 172.78689575]
[-1.37508821 169.96095276]
[-14.36546898 177.46095276]
[-27.35585022 184.96095276]
[-40.34622955 192.46095276]
[-53.33661270 199.96095276]
[-52.61299515 213.95088196]
[-57.96976089 226.82315063]
[-68.30603027 236.08105469]
[-81.56122589 239.95574951]
[-95.12574005 237.74392700]
[-106.35466003 229.93475342]
[-119.48063660 237.19483948]
[-132.60659790 244.45494080]
[-145.73257446 251.71502686]
[-158.79130554 259.09536743]
[-171.78167725 266.59536743]
[-179.50819397 281.06027222]
[-195.90510559 281.33084106]
[-204.10469055 267.12878418]
[-195.67190552 253.06391907]
[-179.28167725 253.60499573]
[-166.29130554 246.10499573]
[-162.05467224 240.01419067]
[-152.99266052 238.58905029]
[-139.86669922 231.32896423]
[-126.74072266 224.06887817]
[-113.61475372 216.80879211]
[-113.71919250 200.66764832]
[-105.63227844 186.58982849]
[-91.47379303 178.45510864]
[-75.05136108 178.56007385]
[-60.83661270 186.97058105]
[-47.84622955 179.47058105]
[-34.85585022 171.97058105]
[-21.86546898 164.47058105]
[-8.87508774 156.97058105]
[-0.95560861 141.32830811]
[17.44065857 141.43359375]
[30.29106712 133.69621277]
[37.20334625 120.50266266]
[53.01696396 120.01268768]
[65.86737061 112.27530670]
[78.43151093 78.79696655]
[107.80496216 77.07476807]
[116.79914093 65.07040405]
[125.79331970 53.06603622]
[134.78750610 41.06167221]
[143.78167725 29.05731010]
[145.23748779 8.97652245]
[163.27497864 2.07133698]
[171.82211304 -10.25533009]
[180.36923218 -22.58199692]
[188.91635132 -34.90866470]
[194.94177246 -48.64526367]
[198.22200012 -63.28221130]
[201.50221252 -77.91915894]
[204.78242493 -92.55609894]
[208.06263733 -107.19304657]
[211.34286499 -121.82999420]
[214.62307739 -136.46693420]
[217.90328979 -151.10388184]
[221.18350220 -165.74082947]
[211.84638977 -187.69088745]
[227.73143005 -204.51214600]
[229.38156128 -219.42111206]
[231.03167725 -234.33007812]
[232.68180847 -249.23902893]
[234.33192444 -264.14797974]
[235.98205566 -279.05694580]
[237.63217163 -293.96591187]
[239.28228760 -308.87487793]
[240.93241882 -323.78384399]
[242.58253479 -338.69277954]
[244.23266602 -353.60174561]
[232.66841125 -363.94812012]
[229.42709351 -379.12289429]
[235.75506592 -393.29104614]
[249.21910095 -401.00463867]
[264.64199829 -399.29760742]
[276.09332275 -388.82641602]
[279.16986084 -373.61737061]
[272.68853760 -359.51870728]
[259.14163208 -351.95162964]
[257.49151611 -337.04266357]
[255.84138489 -322.13369751]
[254.19125366 -307.22476196]
[252.54113770 -292.31579590]
[250.89100647 -277.40682983]
[249.24089050 -262.49786377]
[247.59075928 -247.58891296]
[245.94064331 -232.67994690]
[244.29051208 -217.77099609]
[242.64039612 -202.86203003]
[248.03627014 -199.06585693]
[252.00920105 -193.73411560]
[254.13664246 -187.37989807]
[254.17559814 -180.62739563]
[252.08993530 -174.15058899]
[248.05715942 -168.60600281]
[242.45381165 -164.56617737]
[235.82044983 -162.46061707]
[232.54023743 -147.82366943]
[229.26002502 -133.18672180]
[225.97981262 -118.54977417]
[222.69958496 -103.91283417]
[219.41937256 -89.27588654]
[216.13916016 -74.63893890]
[212.85894775 -60.00199509]
[209.57872009 -45.36504745]
[218.68280029 -33.44380951]
[233.66697693 -32.75510406]
[248.65115356 -32.06640244]
[263.63534546 -31.37769890]
[278.61950684 -30.68899536]
[293.60369873 -30.00029182]
[308.58789062 -29.31158829]
[323.57205200 -28.62288475]
[337.87896729 -36.63816071]
[351.83361816 -28.02423859]
[351.08068848 -11.64238453]
[336.39468384 -4.34484577]
[322.88336182 -13.63870335]
[307.89916992 -14.32740688]
[292.91500854 -15.01611042]
[277.93081665 -15.70481396]
[262.94662476 -16.39351654]
[247.96244812 -17.08222198]
[232.97827148 -17.77092552]
[217.99409485 -18.45962906]
[207.95970154 -20.77816391]
[201.24301147 -26.36154366]
[192.69589233 -14.03487682]
[184.14877319 -1.70820940]
[175.60165405 10.61845779]
[178.32537842 20.51522255]
[175.06425476 30.47994041]
[166.67156982 37.12495804]
[155.78604126 38.05148697]
[146.79187012 50.05585098]
[137.79768372 62.06021500]
[128.80351257 74.06458282]
[119.80932617 86.06894684]
[124.22341156 90.72148132]
[127.46721649 96.72447968]
[129.14208984 103.76306152]
[128.93859863 111.40858459]
[126.66801453 119.14481354]
[122.28594971 126.40234375]
[115.90613556 132.59930420]
[119.72183228 147.10586548]
[123.53753662 161.61242676]
[136.61383057 170.90705872]
[137.35601807 186.93293762]
[125.19476318 197.39637756]
[109.45914459 194.27072144]
[102.22016907 179.95370483]
[109.03096771 165.42813110]
[105.21527100 150.92155457]
[101.39957428 136.41499329]
[94.45086670 133.59268188]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 52]
[5 51]
[7 49]
[8 48]
[11 46]
[12 45]
[13 44]
[14 43]
[15 42]
[21 37]
[22 36]
[23 35]
[24 34]
[25 32]
[26 31]
[54 152]
[55 151]
[56 150]
[57 149]
[58 148]
[60 144]
[61 143]
[62 142]
[63 141]
[64 119]
[65 118]
[66 117]
[67 116]
[68 115]
[69 114]
[70 113]
[71 112]
[72 111]
[74 103]
[75 102]
[76 101]
[77 100]
[78 99]
[79 98]
[80 97]
[81 96]
[82 95]
[83 94]
[84 93]
[120 139]
[121 138]
[122 137]
[123 136]
[124 135]
[125 134]
[126 133]
[127 132]
[159 169]
[160 168]
[161 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
