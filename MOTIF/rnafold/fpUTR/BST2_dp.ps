%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:22:23 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (BST2)
} def

/sequence { (\
AUAAAGGGGUGGCCCGUAGAAGAUUCCAGCACCCUCCCCUAACUCCAGGCCAGACUCUAAAGGGGAGAUCUGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 17 0.019382787 ubox
1 24 0.008898340 ubox
2 16 0.019937822 ubox
2 18 0.084552160 ubox
2 23 0.010231944 ubox
2 41 0.045147735 ubox
3 17 0.086380893 ubox
3 40 0.029953554 ubox
4 25 0.003829774 ubox
5 24 0.004141586 ubox
5 35 0.063585782 ubox
5 40 0.850485339 ubox
5 44 0.005811232 ubox
5 71 0.005041713 ubox
6 14 0.017046374 ubox
6 15 0.334826106 ubox
6 27 0.009821439 ubox
6 33 0.005953507 ubox
6 34 0.066060854 ubox
6 35 0.283663382 ubox
6 36 0.068022032 ubox
6 37 0.036217203 ubox
6 38 0.026387128 ubox
6 39 0.882090619 ubox
6 40 0.020659459 ubox
6 43 0.003882796 ubox
6 46 0.009042312 ubox
6 70 0.005157738 ubox
7 13 0.017079630 ubox
7 14 0.335197054 ubox
7 15 0.076444892 ubox
7 26 0.009865497 ubox
7 32 0.005958924 ubox
7 33 0.064730074 ubox
7 34 0.308671072 ubox
7 35 0.018772626 ubox
7 36 0.034829377 ubox
7 37 0.026872197 ubox
7 38 0.882221429 ubox
7 39 0.021289045 ubox
7 45 0.008976252 ubox
8 13 0.334838689 ubox
8 14 0.076561111 ubox
8 15 0.009952139 ubox
8 25 0.009841669 ubox
8 32 0.063170281 ubox
8 33 0.309908060 ubox
8 34 0.020201180 ubox
8 35 0.031982245 ubox
8 36 0.026991399 ubox
8 37 0.882183019 ubox
8 38 0.021129438 ubox
8 44 0.008883269 ubox
9 13 0.075385602 ubox
9 14 0.009898902 ubox
9 24 0.009848961 ubox
9 30 0.056155066 ubox
9 32 0.310405531 ubox
9 33 0.019155739 ubox
9 34 0.032953855 ubox
9 35 0.024798306 ubox
9 36 0.880937628 ubox
9 37 0.020946855 ubox
9 43 0.008889674 ubox
10 23 0.009836417 ubox
10 28 0.056845035 ubox
10 29 0.035247179 ubox
10 31 0.309540540 ubox
10 42 0.008532287 ubox
11 26 0.003989628 ubox
11 27 0.067006998 ubox
11 30 0.292627059 ubox
11 33 0.236191474 ubox
11 34 0.843424310 ubox
11 35 0.054106478 ubox
11 36 0.004478167 ubox
11 37 0.003643427 ubox
11 39 0.003430758 ubox
12 25 0.004267982 ubox
12 26 0.067016285 ubox
12 30 0.126871053 ubox
12 32 0.238832306 ubox
12 33 0.840908671 ubox
12 34 0.056959316 ubox
12 35 0.003824949 ubox
12 36 0.003649353 ubox
12 38 0.003414706 ubox
13 29 0.165037545 ubox
16 24 0.089093528 ubox
16 30 0.568089765 ubox
16 32 0.124622008 ubox
17 23 0.090486956 ubox
17 29 0.560219593 ubox
17 31 0.119910908 ubox
17 41 0.003596836 ubox
17 72 0.004952865 ubox
18 25 0.056688087 ubox
18 35 0.003880515 ubox
18 40 0.003935688 ubox
18 71 0.005390744 ubox
19 24 0.038125443 ubox
19 25 0.083123410 ubox
19 26 0.775848484 ubox
19 34 0.003968351 ubox
19 39 0.003944906 ubox
19 70 0.005425883 ubox
20 24 0.074982196 ubox
20 25 0.727265910 ubox
20 69 0.005278480 ubox
21 35 0.003681184 ubox
21 71 0.020881318 ubox
22 34 0.003896113 ubox
22 36 0.003542948 ubox
22 70 0.021535769 ubox
23 35 0.003375738 ubox
23 69 0.021519460 ubox
24 68 0.021157141 ubox
25 67 0.006984191 ubox
25 73 0.003703101 ubox
26 72 0.004328689 ubox
26 73 0.333144655 ubox
27 72 0.341239256 ubox
28 71 0.341142846 ubox
29 34 0.003298775 ubox
29 70 0.340118922 ubox
30 72 0.012265131 ubox
31 71 0.011808809 ubox
32 73 0.012248591 ubox
33 49 0.004020003 ubox
33 72 0.012387294 ubox
34 48 0.004072069 ubox
34 67 0.343579803 ubox
35 47 0.003895913 ubox
35 66 0.345363116 ubox
36 48 0.004548815 ubox
36 49 0.029878090 ubox
36 65 0.346058507 ubox
37 48 0.030111625 ubox
37 49 0.042710271 ubox
37 64 0.346058722 ubox
37 65 0.003385311 ubox
38 48 0.041016759 ubox
38 49 0.284675794 ubox
38 63 0.346053609 ubox
38 64 0.003747839 ubox
39 48 0.287552304 ubox
39 49 0.014251324 ubox
39 62 0.345931231 ubox
39 63 0.004073705 ubox
40 47 0.276093553 ubox
40 48 0.014702004 ubox
40 59 0.010937238 ubox
40 61 0.333634467 ubox
40 62 0.004053415 ubox
41 58 0.017360629 ubox
43 49 0.110124405 ubox
43 53 0.011672560 ubox
43 62 0.007176087 ubox
43 65 0.004484794 ubox
43 67 0.009812457 ubox
44 48 0.099826212 ubox
44 52 0.011304045 ubox
44 54 0.044758695 ubox
44 61 0.014246555 ubox
44 64 0.004508681 ubox
44 66 0.009868284 ubox
45 53 0.045714270 ubox
45 63 0.004540201 ubox
45 65 0.009868769 ubox
45 73 0.037940329 ubox
46 62 0.004545991 ubox
46 64 0.009847109 ubox
46 72 0.038740232 ubox
47 56 0.282583664 ubox
47 58 0.087173439 ubox
47 71 0.038534209 ubox
48 55 0.292751842 ubox
48 56 0.040540631 ubox
48 57 0.090252831 ubox
48 58 0.008788359 ubox
48 70 0.038304112 ubox
49 55 0.047474269 ubox
49 56 0.068914026 ubox
49 57 0.009062084 ubox
49 69 0.035165810 ubox
50 63 0.007515320 ubox
50 64 0.003588301 ubox
50 65 0.005947727 ubox
50 73 0.919494821 ubox
51 62 0.007518768 ubox
51 63 0.003602675 ubox
51 64 0.005914151 ubox
51 72 0.937232456 ubox
52 58 0.008480405 ubox
52 71 0.937103855 ubox
53 57 0.008638065 ubox
53 70 0.937314619 ubox
54 69 0.934242438 ubox
55 62 0.005233318 ubox
55 63 0.005703871 ubox
55 64 0.028223069 ubox
55 65 0.049091926 ubox
55 67 0.934272998 ubox
56 61 0.004922387 ubox
56 62 0.005351043 ubox
56 63 0.028164465 ubox
56 64 0.049112394 ubox
56 65 0.028285502 ubox
56 66 0.934362024 ubox
56 68 0.050421072 ubox
57 62 0.027847391 ubox
57 63 0.049458624 ubox
57 64 0.055615864 ubox
57 65 0.933237718 ubox
57 67 0.050730900 ubox
58 62 0.044979572 ubox
58 63 0.070077703 ubox
58 64 0.914479772 ubox
58 66 0.049761679 ubox
5 40 0.9500000 lbox
6 39 0.9500000 lbox
7 38 0.9500000 lbox
8 37 0.9500000 lbox
9 36 0.9500000 lbox
11 34 0.9500000 lbox
12 33 0.9500000 lbox
19 26 0.9500000 lbox
20 25 0.9500000 lbox
50 73 0.9500000 lbox
51 72 0.9500000 lbox
52 71 0.9500000 lbox
53 70 0.9500000 lbox
54 69 0.9500000 lbox
55 67 0.9500000 lbox
56 66 0.9500000 lbox
57 65 0.9500000 lbox
58 64 0.9500000 lbox
showpage
end
%%EOF
