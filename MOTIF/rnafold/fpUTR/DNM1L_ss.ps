%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:07:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGCAUGGCCUGCCGGGAGGGGGCAGGUAGCCGGCGGGCCCGGUCCAAUGGGUGCCGGCUUCCGAGGAGAGGGCGGAGGAGAGGAGGAAGGAGGCGAACUGUGGGCCCCGGCCCCAUUCAUUGCCGUGGCCGGCGGGCACUGGGGCCCCGUGUUUUCAGAGUC\
) } def
/len { sequence length } bind def

/coor [
[-48.45257950 220.86517334]
[-56.08960342 224.49914551]
[-64.25804901 226.83204651]
[-72.73691559 227.78791809]
[-81.29467773 227.32815552]
[-89.69557953 225.45303345]
[-97.70615387 222.20198059]
[-105.10169220 217.65281677]
[-111.67254639 211.91995239]
[-121.60293579 223.16217041]
[-131.53332520 234.40438843]
[-141.46369934 245.64660645]
[-151.39408875 256.88882446]
[-161.32447815 268.13104248]
[-171.25486755 279.37326050]
[-168.75244141 294.80932617]
[-176.80195618 308.21600342]
[-191.60266113 313.26309204]
[-206.16610718 307.56750488]
[-213.61590576 293.81854248]
[-210.43447876 278.50799561]
[-198.12397766 268.86508179]
[-182.49707031 269.44287109]
[-172.56669617 258.20065308]
[-162.63630676 246.95843506]
[-152.70591736 235.71621704]
[-142.77554321 224.47399902]
[-132.84515381 213.23178101]
[-122.91476440 201.98956299]
[-127.95550537 187.86189270]
[-142.75949097 185.44488525]
[-157.56347656 183.02787781]
[-172.36747742 180.61087036]
[-187.17146301 178.19384766]
[-201.97544861 175.77684021]
[-216.77943420 173.35983276]
[-223.15776062 175.36096191]
[-228.73698425 174.01097107]
[-232.09657288 170.55865479]
[-246.79780579 167.57980347]
[-261.49905396 164.60095215]
[-276.20028687 161.62208557]
[-290.90151978 158.64323425]
[-303.93341064 167.58444214]
[-319.45523071 164.60980225]
[-328.25817871 151.48411560]
[-325.11959839 135.99459839]
[-311.90155029 127.33093262]
[-296.44610596 130.63310242]
[-287.92266846 143.94200134]
[-273.22143555 146.92085266]
[-258.52020264 149.89970398]
[-243.81895447 152.87857056]
[-229.11770630 155.85742188]
[-214.36242676 158.55584717]
[-199.55844116 160.97285461]
[-184.75445557 163.38986206]
[-169.95045471 165.80688477]
[-155.14646912 168.22389221]
[-140.34248352 170.64089966]
[-125.53849792 173.05790710]
[-120.59227753 154.92173767]
[-109.67926025 139.84342957]
[-94.30623627 129.68209839]
[-76.51885223 125.63333893]
[-58.62972641 128.08958435]
[-42.91787720 136.60607910]
[-31.33837128 149.97454834]
[-17.57773018 144.00422668]
[-3.81708813 138.03390503]
[9.94355392 132.06358337]
[23.70419502 126.09325409]
[32.30028152 113.92951965]
[48.03984070 115.53476715]
[61.80047989 109.56444550]
[75.56112671 103.59412384]
[89.32176208 97.62380219]
[74.38333893 96.26605225]
[59.46970367 97.87333679]
[45.14756775 93.41503143]
[33.78112411 83.62708282]
[27.24665642 70.12519836]
[26.62281990 55.13817978]
[32.01259232 41.13995361]
[42.52627945 30.44124031]
[56.42835617 24.80810165]
[71.42398071 25.17041016]
[85.03778839 31.46835899]
[95.02252960 42.66233063]
[99.72989655 56.90371323]
[96.96423340 71.64654541]
[106.45941925 60.03442001]
[109.48892212 51.36779022]
[116.24760437 48.29385757]
[125.96215057 36.86461258]
[135.67669678 25.43537140]
[131.09130859 10.70520782]
[135.21957397 -4.15954638]
[146.74420166 -14.41560268]
[161.98770142 -16.79029083]
[176.08593750 -10.52585602]
[184.54022217 2.37874269]
[184.65281677 17.80569458]
[176.38778687 30.83231735]
[162.38247681 37.30186081]
[147.10594177 35.14991760]
[137.39138794 46.57915878]
[127.67684937 58.00840378]
[118.07154083 69.52960968]
[108.57635498 81.14173126]
[113.48237610 95.31674194]
[128.12423706 98.57495880]
[142.76609802 101.83316803]
[157.40795898 105.09137726]
[172.04981995 108.34958649]
[186.69168091 111.60780334]
[201.33354187 114.86601257]
[211.75126648 103.66699219]
[226.27989197 99.21548462]
[240.98823547 102.61125946]
[251.94868469 112.84474945]
[256.28601074 127.09442902]
[270.92785645 130.35263062]
[285.56973267 133.61085510]
[300.21157837 136.86906433]
[314.85345459 140.12727356]
[329.49530029 143.38548279]
[344.96853638 137.95307922]
[357.23178101 148.84091187]
[353.66964722 164.84851074]
[337.94656372 169.50863647]
[326.23709106 158.02734375]
[311.59524536 154.76913452]
[296.95336914 151.51092529]
[282.31152344 148.25270081]
[267.66964722 144.99449158]
[253.02778625 141.73628235]
[243.05709839 152.80203247]
[228.79135132 157.42201233]
[214.03096008 154.26019287]
[202.76098633 144.06781006]
[198.07531738 129.50787354]
[183.43347168 126.24965668]
[168.79161072 122.99144745]
[154.14974976 119.73323822]
[139.50788879 116.47502899]
[124.86602783 113.21681213]
[110.22416687 109.95860291]
[95.29208374 111.38444519]
[81.53144836 117.35476685]
[67.77080536 123.32508850]
[54.01016235 129.29541016]
[44.42982483 141.88618469]
[29.67451668 139.85389709]
[15.91387463 145.82421875]
[2.15323305 151.79454041]
[-11.60740852 157.76486206]
[-25.36805153 163.73518372]
[-23.74062538 171.72854614]
[-23.45461464 179.91841125]
[-24.53025627 188.08023071]
[-26.95028114 195.98812866]
[-30.66004372 203.42124939]
[-35.56871414 210.16981506]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 29]
[10 28]
[11 27]
[12 26]
[13 25]
[14 24]
[15 23]
[30 61]
[31 60]
[32 59]
[33 58]
[34 57]
[35 56]
[36 55]
[39 54]
[40 53]
[41 52]
[42 51]
[43 50]
[68 158]
[69 157]
[70 156]
[71 155]
[72 154]
[74 152]
[75 151]
[76 150]
[77 149]
[91 110]
[92 109]
[94 108]
[95 107]
[96 106]
[111 148]
[112 147]
[113 146]
[114 145]
[115 144]
[116 143]
[117 142]
[122 137]
[123 136]
[124 135]
[125 134]
[126 133]
[127 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
