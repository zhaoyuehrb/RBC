%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:07:43 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ZPR1)
} def

/sequence { (\
GAGAGCGGCGGAAGUAGGAAGCCGAGGUCUGAAUUGCGCGUGGUGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 29 0.590716619 ubox
1 35 0.011138690 ubox
2 28 0.589632919 ubox
2 30 0.412336115 ubox
2 34 0.009430955 ubox
2 35 0.004700839 ubox
3 29 0.423274386 ubox
3 34 0.004257195 ubox
3 35 0.006297653 ubox
4 28 0.411647429 ubox
4 30 0.039814710 ubox
4 34 0.006712638 ubox
4 35 0.004232531 ubox
5 15 0.026431478 ubox
5 22 0.003617770 ubox
5 28 0.040128087 ubox
5 29 0.040744710 ubox
5 34 0.003659848 ubox
5 37 0.191296819 ubox
5 39 0.041058675 ubox
5 41 0.162420056 ubox
5 44 0.128560585 ubox
5 47 0.201433336 ubox
6 14 0.027026332 ubox
6 21 0.003623384 ubox
6 24 0.892786749 ubox
6 27 0.067747797 ubox
6 31 0.006967729 ubox
6 36 0.191504541 ubox
6 38 0.041063050 ubox
6 40 0.170297285 ubox
6 42 0.124040918 ubox
6 43 0.134195601 ubox
6 45 0.035926591 ubox
6 46 0.201091046 ubox
7 23 0.900189094 ubox
7 29 0.006437061 ubox
7 30 0.006741234 ubox
7 35 0.181260347 ubox
7 37 0.035536408 ubox
7 39 0.124420776 ubox
7 41 0.112601560 ubox
7 44 0.039283608 ubox
7 48 0.020915221 ubox
8 15 0.039812244 ubox
8 22 0.900221670 ubox
8 28 0.006564681 ubox
8 29 0.006737363 ubox
8 34 0.139974939 ubox
8 37 0.048272679 ubox
8 39 0.260321417 ubox
8 41 0.121693698 ubox
8 44 0.197226209 ubox
8 47 0.020950745 ubox
9 14 0.040689421 ubox
9 21 0.900033611 ubox
9 24 0.078144932 ubox
9 27 0.007016675 ubox
9 31 0.193311425 ubox
9 36 0.051887182 ubox
9 38 0.285713253 ubox
9 40 0.121895169 ubox
9 42 0.050175298 ubox
9 43 0.194180086 ubox
9 46 0.020607109 ubox
10 23 0.078356575 ubox
10 30 0.197126141 ubox
10 35 0.046520077 ubox
10 37 0.286241686 ubox
10 39 0.120603322 ubox
10 41 0.059954204 ubox
10 44 0.003316598 ubox
10 48 0.003654491 ubox
11 22 0.078114509 ubox
11 29 0.197619762 ubox
11 34 0.034871191 ubox
11 35 0.011460354 ubox
11 47 0.003672735 ubox
12 28 0.196345222 ubox
12 34 0.013179984 ubox
12 35 0.279140869 ubox
13 30 0.013856076 ubox
13 34 0.278512975 ubox
13 35 0.050790364 ubox
14 22 0.008677714 ubox
14 29 0.014048240 ubox
14 34 0.054138760 ubox
14 37 0.222844772 ubox
14 39 0.018499833 ubox
15 21 0.009436541 ubox
15 27 0.003588505 ubox
15 31 0.087138623 ubox
15 33 0.053876239 ubox
15 36 0.222980999 ubox
15 38 0.018032254 ubox
15 42 0.005188815 ubox
15 45 0.006820658 ubox
16 30 0.091984633 ubox
16 35 0.222030018 ubox
16 41 0.004590780 ubox
16 44 0.006893168 ubox
17 23 0.197663473 ubox
17 29 0.091463758 ubox
17 30 0.279938288 ubox
17 34 0.214858592 ubox
17 35 0.004096763 ubox
17 48 0.065466984 ubox
18 22 0.194536862 ubox
18 28 0.062303041 ubox
18 29 0.282151460 ubox
18 34 0.004173548 ubox
18 35 0.010381222 ubox
18 47 0.066026358 ubox
19 28 0.267470443 ubox
19 34 0.010068788 ubox
19 35 0.006336465 ubox
20 30 0.206831386 ubox
20 34 0.007091971 ubox
21 28 0.122337845 ubox
21 29 0.206019168 ubox
21 37 0.010460360 ubox
21 39 0.032808015 ubox
21 41 0.004029116 ubox
21 44 0.066088410 ubox
21 47 0.010379720 ubox
22 27 0.246501804 ubox
22 36 0.008179195 ubox
22 38 0.032765339 ubox
22 40 0.004138627 ubox
22 43 0.066134686 ubox
22 46 0.010411333 ubox
23 31 0.013123317 ubox
23 36 0.033316094 ubox
23 38 0.005484830 ubox
23 42 0.066057326 ubox
23 45 0.010407991 ubox
24 30 0.011545538 ubox
24 35 0.034251601 ubox
24 37 0.007470252 ubox
24 39 0.005309846 ubox
24 41 0.059417292 ubox
24 44 0.009842830 ubox
25 34 0.034895229 ubox
25 35 0.010789585 ubox
26 34 0.011071693 ubox
26 35 0.013969060 ubox
26 48 0.491932636 ubox
27 34 0.017151050 ubox
27 37 0.047619801 ubox
27 39 0.050951059 ubox
27 47 0.496164767 ubox
28 33 0.016510464 ubox
28 36 0.046447250 ubox
28 38 0.049323601 ubox
28 40 0.003432686 ubox
28 43 0.006604830 ubox
28 46 0.494390990 ubox
29 42 0.011428872 ubox
29 43 0.018969454 ubox
29 45 0.491761992 ubox
29 46 0.038079432 ubox
30 36 0.023290708 ubox
30 38 0.036201098 ubox
30 40 0.047177202 ubox
30 42 0.021417247 ubox
30 45 0.037243988 ubox
31 35 0.015065779 ubox
31 37 0.067402885 ubox
31 39 0.050373721 ubox
31 41 0.018008434 ubox
31 44 0.025253728 ubox
33 41 0.253371894 ubox
33 44 0.090933365 ubox
34 40 0.247249124 ubox
34 43 0.092184825 ubox
34 46 0.109150780 ubox
35 42 0.083687610 ubox
35 45 0.148523086 ubox
36 41 0.042540300 ubox
36 44 0.256432960 ubox
36 47 0.425324309 ubox
37 43 0.258658077 ubox
37 45 0.165374578 ubox
37 46 0.421423388 ubox
38 44 0.180604028 ubox
38 47 0.574198924 ubox
39 43 0.181359987 ubox
39 45 0.138702799 ubox
39 46 0.575110489 ubox
40 44 0.086434690 ubox
40 47 0.116880237 ubox
41 46 0.115714934 ubox
42 48 0.055011276 ubox
43 47 0.054859084 ubox
1 29 0.9500000 lbox
2 28 0.9500000 lbox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
8 22 0.9500000 lbox
9 21 0.9500000 lbox
38 47 0.9500000 lbox
39 46 0.9500000 lbox
showpage
end
%%EOF
