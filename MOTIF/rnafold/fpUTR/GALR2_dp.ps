%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:14:03 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GALR2)
} def

/sequence { (\
AGCGGCCGCAGCCCCGGGAGCUUCCCGCUCGCGGAGACCCAGACGGCUGCAGGAGCCCGGGCAGCCUCGGGGUCAGCGGCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 9 0.011435666 ubox
2 77 0.013452907 ubox
2 80 0.028913795 ubox
3 8 0.011431089 ubox
3 76 0.013453082 ubox
3 79 0.028454992 ubox
4 13 0.023670908 ubox
4 83 0.057834792 ubox
5 12 0.023725281 ubox
5 77 0.021943315 ubox
5 80 0.997311017 ubox
5 82 0.039731532 ubox
6 11 0.023649585 ubox
6 34 0.005358527 ubox
6 76 0.021529842 ubox
6 79 0.999322483 ubox
7 33 0.007175473 ubox
7 78 0.999339810 ubox
8 32 0.007221775 ubox
8 50 0.005337847 ubox
8 77 0.999288813 ubox
8 80 0.006884209 ubox
9 31 0.007220016 ubox
9 49 0.005365193 ubox
9 76 0.998195958 ubox
9 79 0.006862823 ubox
10 29 0.007408404 ubox
10 48 0.005444796 ubox
11 28 0.007507603 ubox
11 32 0.013141854 ubox
11 47 0.005454316 ubox
11 73 0.537873519 ubox
11 77 0.009074967 ubox
11 80 0.012815599 ubox
12 27 0.006870402 ubox
12 31 0.013135823 ubox
12 34 0.012505523 ubox
12 46 0.005453943 ubox
12 72 0.546715550 ubox
12 76 0.009450066 ubox
12 79 0.012828908 ubox
13 33 0.011336858 ubox
13 34 0.054382988 ubox
13 45 0.005449307 ubox
13 71 0.546730922 ubox
13 78 0.012803207 ubox
14 33 0.038837671 ubox
14 34 0.833285787 ubox
14 70 0.546711161 ubox
15 27 0.015079512 ubox
15 31 0.003232718 ubox
15 33 0.836123294 ubox
15 69 0.546701022 ubox
16 26 0.016987522 ubox
16 32 0.837001907 ubox
16 40 0.003965517 ubox
16 68 0.546481918 ubox
17 25 0.017002532 ubox
17 30 0.004952424 ubox
17 39 0.004018494 ubox
17 40 0.003249344 ubox
17 66 0.004684608 ubox
17 67 0.546085005 ubox
18 24 0.016997595 ubox
18 30 0.837080700 ubox
18 38 0.004013103 ubox
18 39 0.003260111 ubox
18 65 0.003519567 ubox
18 66 0.546166888 ubox
18 67 0.003702123 ubox
19 23 0.014788215 ubox
19 29 0.837207756 ubox
20 28 0.837326073 ubox
20 65 0.546303941 ubox
21 27 0.836699415 ubox
21 36 0.003698808 ubox
21 64 0.546350064 ubox
22 35 0.003453961 ubox
22 63 0.535695438 ubox
22 64 0.003240443 ubox
23 37 0.006541872 ubox
23 61 0.057388884 ubox
23 63 0.021030244 ubox
24 36 0.006992876 ubox
24 60 0.058515976 ubox
24 61 0.542468932 ubox
25 34 0.008394782 ubox
25 59 0.058443690 ubox
25 60 0.542938149 ubox
25 61 0.005745462 ubox
26 33 0.008503258 ubox
26 59 0.540702013 ubox
26 60 0.005838424 ubox
27 32 0.008978276 ubox
27 44 0.014652918 ubox
27 56 0.483183703 ubox
27 58 0.248113526 ubox
27 62 0.014582446 ubox
28 34 0.005328916 ubox
28 36 0.049526090 ubox
28 42 0.018211514 ubox
28 52 0.024100974 ubox
28 53 0.046735182 ubox
28 55 0.529579200 ubox
28 61 0.014588059 ubox
29 33 0.004823434 ubox
29 35 0.049723842 ubox
29 37 0.018613162 ubox
29 41 0.017953557 ubox
29 43 0.068621938 ubox
29 51 0.024064186 ubox
29 52 0.046023662 ubox
29 53 0.034120244 ubox
29 54 0.529464864 ubox
29 60 0.014565502 ubox
30 34 0.049331127 ubox
30 36 0.020144875 ubox
30 42 0.073921197 ubox
30 45 0.005200158 ubox
30 52 0.074518649 ubox
30 53 0.522522568 ubox
30 59 0.014567911 ubox
31 44 0.011327962 ubox
31 47 0.009750375 ubox
31 50 0.466572903 ubox
31 56 0.013978719 ubox
31 58 0.014400851 ubox
32 45 0.004145989 ubox
32 46 0.009239790 ubox
32 49 0.468567638 ubox
32 55 0.013979422 ubox
33 39 0.031662577 ubox
33 40 0.097634165 ubox
33 44 0.007202756 ubox
33 48 0.462663748 ubox
33 57 0.012467004 ubox
34 38 0.031268236 ubox
34 39 0.097425350 ubox
34 47 0.460685888 ubox
34 56 0.012449060 ubox
35 48 0.259621057 ubox
36 47 0.265143772 ubox
36 74 0.836046087 ubox
37 73 0.836962668 ubox
38 46 0.395094064 ubox
38 53 0.010690543 ubox
38 61 0.007458379 ubox
38 71 0.021853912 ubox
38 72 0.836986881 ubox
39 45 0.393901568 ubox
39 46 0.327323605 ubox
39 52 0.010744205 ubox
39 60 0.007496066 ubox
39 70 0.028773647 ubox
39 71 0.836788635 ubox
40 45 0.328226301 ubox
40 49 0.018394488 ubox
40 59 0.007473707 ubox
40 69 0.033924504 ubox
40 70 0.833538142 ubox
41 48 0.019261457 ubox
42 47 0.019244190 ubox
42 68 0.817272512 ubox
43 67 0.821092979 ubox
44 69 0.005979682 ubox
45 57 0.116058213 ubox
45 58 0.003481263 ubox
45 66 0.837222849 ubox
46 56 0.116415157 ubox
46 65 0.837503766 ubox
47 55 0.116442246 ubox
47 64 0.837501524 ubox
48 54 0.115919863 ubox
48 63 0.837304575 ubox
49 56 0.003921570 ubox
49 62 0.837492735 ubox
50 55 0.004000427 ubox
50 61 0.836628245 ubox
52 58 0.819183117 ubox
53 57 0.806317466 ubox
53 74 0.005909344 ubox
54 73 0.005910796 ubox
56 71 0.005933863 ubox
57 70 0.005936145 ubox
58 69 0.006037505 ubox
59 68 0.006026138 ubox
60 67 0.005657323 ubox
61 66 0.005567028 ubox
5 80 0.9500000 lbox
6 79 0.9500000 lbox
7 78 0.9500000 lbox
8 77 0.9500000 lbox
9 76 0.9500000 lbox
14 34 0.9500000 lbox
15 33 0.9500000 lbox
16 32 0.9500000 lbox
18 30 0.9500000 lbox
19 29 0.9500000 lbox
20 28 0.9500000 lbox
21 27 0.9500000 lbox
36 74 0.9500000 lbox
37 73 0.9500000 lbox
38 72 0.9500000 lbox
39 71 0.9500000 lbox
40 70 0.9500000 lbox
42 68 0.9500000 lbox
43 67 0.9500000 lbox
45 66 0.9500000 lbox
46 65 0.9500000 lbox
47 64 0.9500000 lbox
48 63 0.9500000 lbox
49 62 0.9500000 lbox
50 61 0.9500000 lbox
52 58 0.9500000 lbox
53 57 0.9500000 lbox
showpage
end
%%EOF
