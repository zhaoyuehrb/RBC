%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:58:56 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MAMDC4)
} def

/sequence { (\
GGAACUUCCCAGGCACCCUGUGUGGCCGCACUGCUCCCUCUGGCCCAACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.006405779 ubox
1 8 0.060154869 ubox
1 9 0.837494372 ubox
1 10 0.228597594 ubox
1 17 0.054516378 ubox
1 18 0.036072523 ubox
1 19 0.004680711 ubox
1 27 0.029411143 ubox
1 32 0.006996942 ubox
1 37 0.027016699 ubox
1 38 0.011566268 ubox
1 41 0.015437312 ubox
1 45 0.046930340 ubox
1 46 0.076074449 ubox
1 50 0.096006099 ubox
2 6 0.006252569 ubox
2 7 0.048124929 ubox
2 8 0.840231766 ubox
2 9 0.231521079 ubox
2 16 0.054748763 ubox
2 17 0.035903376 ubox
2 18 0.004931799 ubox
2 26 0.029402606 ubox
2 31 0.007454575 ubox
2 36 0.027163710 ubox
2 37 0.011434664 ubox
2 40 0.016357205 ubox
2 44 0.047236260 ubox
2 45 0.075052125 ubox
2 49 0.096774305 ubox
3 7 0.731175249 ubox
3 35 0.026164117 ubox
3 39 0.015982556 ubox
4 21 0.007995009 ubox
4 23 0.031141103 ubox
5 12 0.038228377 ubox
5 13 0.051472100 ubox
5 20 0.007086385 ubox
5 22 0.032049335 ubox
5 25 0.010359773 ubox
5 43 0.022945772 ubox
6 11 0.034997817 ubox
6 12 0.050739360 ubox
6 13 0.005127878 ubox
6 24 0.010530292 ubox
6 42 0.022602497 ubox
6 48 0.014788015 ubox
7 11 0.038738040 ubox
7 12 0.005002852 ubox
7 13 0.005838354 ubox
7 43 0.005362818 ubox
7 47 0.015950107 ubox
8 12 0.006785574 ubox
8 24 0.004616546 ubox
8 25 0.006567511 ubox
8 42 0.006163071 ubox
8 43 0.020888565 ubox
9 24 0.006556753 ubox
9 25 0.049386548 ubox
9 42 0.019455019 ubox
9 43 0.131644838 ubox
10 20 0.936832699 ubox
10 22 0.008710338 ubox
10 24 0.059412744 ubox
10 33 0.041332681 ubox
10 42 0.134626400 ubox
11 19 0.954391826 ubox
11 21 0.007179242 ubox
11 23 0.070271825 ubox
11 32 0.043780400 ubox
11 35 0.003344437 ubox
11 39 0.023211635 ubox
11 41 0.134463608 ubox
12 18 0.956374367 ubox
12 19 0.015355391 ubox
12 27 0.032656199 ubox
12 31 0.043991113 ubox
12 35 0.061850247 ubox
12 36 0.014621963 ubox
12 37 0.007831882 ubox
12 38 0.025744843 ubox
12 39 0.006030642 ubox
12 40 0.130011652 ubox
12 45 0.041640152 ubox
12 46 0.014897306 ubox
12 50 0.014716049 ubox
13 17 0.940934724 ubox
13 18 0.016940940 ubox
13 21 0.078567773 ubox
13 23 0.158841241 ubox
13 26 0.032733248 ubox
13 29 0.045769968 ubox
13 34 0.096094959 ubox
13 36 0.008069041 ubox
13 37 0.025655534 ubox
13 38 0.044380022 ubox
13 39 0.087752061 ubox
13 44 0.041830339 ubox
13 45 0.011669507 ubox
13 49 0.014404061 ubox
14 20 0.080373939 ubox
14 22 0.164648633 ubox
14 24 0.022812804 ubox
14 25 0.024986217 ubox
14 28 0.045779838 ubox
14 33 0.096909822 ubox
14 42 0.005936651 ubox
14 43 0.041325714 ubox
15 19 0.065158792 ubox
15 21 0.164454656 ubox
15 23 0.031467811 ubox
15 32 0.095801857 ubox
15 41 0.007980067 ubox
16 20 0.162881352 ubox
16 22 0.031954642 ubox
16 25 0.016774476 ubox
16 43 0.006531980 ubox
17 24 0.016754791 ubox
17 25 0.043149742 ubox
17 42 0.007075129 ubox
17 43 0.009085680 ubox
18 24 0.043331035 ubox
18 42 0.009558318 ubox
19 30 0.075165898 ubox
19 33 0.011709278 ubox
19 47 0.014908763 ubox
20 29 0.076231371 ubox
20 31 0.109288616 ubox
20 32 0.009812144 ubox
20 34 0.048742300 ubox
20 46 0.017267454 ubox
20 49 0.147384074 ubox
21 28 0.076120861 ubox
21 30 0.109557387 ubox
21 33 0.047103667 ubox
21 47 0.794041139 ubox
21 48 0.143114154 ubox
22 27 0.074470169 ubox
22 29 0.109603647 ubox
22 31 0.084140815 ubox
22 32 0.006273054 ubox
22 34 0.024233901 ubox
22 46 0.884078106 ubox
22 49 0.150848694 ubox
23 28 0.105093678 ubox
23 30 0.084499796 ubox
23 33 0.024198044 ubox
23 47 0.104835308 ubox
23 48 0.137495505 ubox
24 29 0.084485004 ubox
24 32 0.024210465 ubox
24 35 0.021647976 ubox
24 36 0.004940128 ubox
24 37 0.008362929 ubox
24 38 0.024264513 ubox
24 45 0.976903657 ubox
24 46 0.100971197 ubox
25 31 0.024233572 ubox
25 34 0.024274844 ubox
25 36 0.008379620 ubox
25 37 0.024292568 ubox
25 44 0.980737080 ubox
25 45 0.071927918 ubox
26 33 0.024210799 ubox
26 43 0.983355645 ubox
27 33 0.004925734 ubox
27 42 0.982906457 ubox
28 32 0.006307408 ubox
28 34 0.227041265 ubox
28 41 0.753088908 ubox
28 44 0.011876037 ubox
29 33 0.227412365 ubox
29 42 0.012745540 ubox
29 43 0.011782513 ubox
30 41 0.022860733 ubox
32 47 0.025666839 ubox
33 41 0.011336853 ubox
33 44 0.064788437 ubox
33 46 0.027675145 ubox
34 43 0.065206357 ubox
35 42 0.060120702 ubox
35 43 0.003973888 ubox
36 42 0.012546264 ubox
36 43 0.038244626 ubox
37 42 0.038450940 ubox
37 43 0.020194543 ubox
38 42 0.020364724 ubox
41 47 0.006549479 ubox
42 46 0.006991527 ubox
42 50 0.022657286 ubox
43 49 0.022903990 ubox
1 9 0.9500000 lbox
2 8 0.9500000 lbox
3 7 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
12 18 0.9500000 lbox
13 17 0.9500000 lbox
21 47 0.9500000 lbox
22 46 0.9500000 lbox
24 45 0.9500000 lbox
25 44 0.9500000 lbox
26 43 0.9500000 lbox
27 42 0.9500000 lbox
28 41 0.9500000 lbox
showpage
end
%%EOF
