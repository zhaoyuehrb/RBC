%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:01:10 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PSME4)
} def

/sequence { (\
GGUGGGGGCCGGGGAGGGUUCGGGUGGGAGGGGGUGGGGGGGGUGUCCCUGGGCUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.037728535 ubox
1 21 0.003837652 ubox
1 55 0.006945276 ubox
1 56 0.011360441 ubox
2 9 0.037802222 ubox
2 20 0.003196243 ubox
2 25 0.019573717 ubox
2 54 0.007996855 ubox
2 55 0.006224163 ubox
3 8 0.037390863 ubox
3 22 0.013307680 ubox
3 24 0.016452922 ubox
3 26 0.008848278 ubox
3 53 0.007908490 ubox
4 21 0.016104315 ubox
4 25 0.008459033 ubox
4 55 0.007268991 ubox
4 56 0.080837562 ubox
5 20 0.012950376 ubox
5 21 0.070834083 ubox
5 54 0.006969855 ubox
5 55 0.073344760 ubox
5 56 0.885207447 ubox
6 19 0.006969271 ubox
6 20 0.070231809 ubox
6 21 0.230254470 ubox
6 54 0.059829364 ubox
6 55 0.936257970 ubox
6 56 0.184676417 ubox
7 19 0.069646332 ubox
7 20 0.231152410 ubox
7 21 0.010039287 ubox
7 54 0.944178887 ubox
7 55 0.192447138 ubox
7 56 0.006892724 ubox
8 19 0.233213918 ubox
8 20 0.007135342 ubox
8 25 0.053751401 ubox
8 54 0.194037856 ubox
9 17 0.070490050 ubox
9 18 0.233744058 ubox
9 23 0.048028614 ubox
9 24 0.054988971 ubox
9 27 0.005156420 ubox
9 52 0.952245525 ubox
9 53 0.162934530 ubox
10 16 0.070909656 ubox
10 17 0.233571487 ubox
10 22 0.048702878 ubox
10 23 0.054537013 ubox
10 26 0.005174224 ubox
10 51 0.958189252 ubox
10 52 0.123860229 ubox
11 21 0.049692226 ubox
11 25 0.004823652 ubox
11 49 0.008600465 ubox
11 50 0.963280620 ubox
12 20 0.049005050 ubox
12 21 0.053630168 ubox
12 48 0.008631322 ubox
12 49 0.965568394 ubox
12 50 0.028860810 ubox
13 19 0.046822536 ubox
13 20 0.049495313 ubox
13 21 0.009440304 ubox
13 47 0.008639577 ubox
13 48 0.965600246 ubox
13 49 0.027010554 ubox
14 19 0.036491315 ubox
14 20 0.009449326 ubox
14 21 0.009622053 ubox
14 46 0.008417688 ubox
14 47 0.965605956 ubox
14 48 0.025147340 ubox
15 19 0.008347810 ubox
15 20 0.009064504 ubox
15 46 0.961530797 ubox
16 47 0.020078113 ubox
16 56 0.020869974 ubox
17 46 0.018934687 ubox
17 47 0.003379795 ubox
17 55 0.021757605 ubox
18 35 0.021413981 ubox
18 44 0.093568368 ubox
18 46 0.003699435 ubox
18 54 0.021900987 ubox
19 28 0.026721571 ubox
19 29 0.122687838 ubox
19 30 0.198893384 ubox
19 31 0.011000094 ubox
19 32 0.081816691 ubox
19 33 0.046800472 ubox
19 34 0.026189898 ubox
19 37 0.004673236 ubox
19 38 0.095117852 ubox
19 39 0.124384097 ubox
19 40 0.210724759 ubox
19 41 0.372992367 ubox
19 42 0.739873068 ubox
19 43 0.156231790 ubox
19 45 0.006090457 ubox
19 53 0.021875838 ubox
20 27 0.028814615 ubox
20 28 0.124443694 ubox
20 29 0.207627975 ubox
20 30 0.005018471 ubox
20 31 0.086030939 ubox
20 32 0.048477279 ubox
20 33 0.030585369 ubox
20 34 0.021051517 ubox
20 37 0.100446707 ubox
20 38 0.129408731 ubox
20 39 0.217576421 ubox
20 40 0.381234381 ubox
20 41 0.754877720 ubox
20 42 0.188919486 ubox
20 43 0.105661208 ubox
20 52 0.021775409 ubox
21 26 0.029634543 ubox
21 27 0.125391674 ubox
21 28 0.208418731 ubox
21 30 0.087848468 ubox
21 31 0.049198337 ubox
21 32 0.031801032 ubox
21 33 0.022691524 ubox
21 36 0.102880423 ubox
21 37 0.131553347 ubox
21 38 0.220477402 ubox
21 39 0.384304622 ubox
21 40 0.758822879 ubox
21 41 0.194388253 ubox
21 42 0.108898055 ubox
21 45 0.009883629 ubox
21 51 0.021800665 ubox
22 35 0.097669496 ubox
22 44 0.009166342 ubox
22 50 0.020595029 ubox
22 55 0.004384773 ubox
22 56 0.095234355 ubox
23 49 0.018886942 ubox
23 54 0.004573171 ubox
23 55 0.098663745 ubox
23 56 0.003316768 ubox
24 35 0.085749673 ubox
24 48 0.018121974 ubox
24 54 0.099192988 ubox
25 34 0.134469550 ubox
25 36 0.394021356 ubox
25 53 0.098424763 ubox
26 35 0.417955880 ubox
26 47 0.016479604 ubox
26 49 0.011212560 ubox
26 55 0.006932307 ubox
26 56 0.011416995 ubox
27 46 0.015415335 ubox
27 48 0.011919987 ubox
27 50 0.005604126 ubox
27 54 0.007535145 ubox
27 55 0.011896078 ubox
27 56 0.004201900 ubox
28 47 0.012572548 ubox
28 49 0.005534109 ubox
28 54 0.011910288 ubox
28 56 0.063512026 ubox
29 46 0.012383086 ubox
29 50 0.071318464 ubox
29 55 0.064344423 ubox
30 48 0.006389805 ubox
30 49 0.072877552 ubox
30 50 0.059243714 ubox
30 54 0.064203683 ubox
30 55 0.015209626 ubox
30 56 0.076330704 ubox
31 47 0.006905619 ubox
31 48 0.072842765 ubox
31 49 0.059717842 ubox
31 50 0.018904898 ubox
31 54 0.016680933 ubox
31 55 0.079246380 ubox
31 56 0.095585108 ubox
32 46 0.006985524 ubox
32 47 0.072781606 ubox
32 48 0.059775550 ubox
32 49 0.019122004 ubox
32 50 0.004883838 ubox
32 54 0.079415344 ubox
32 55 0.100751736 ubox
32 56 0.173875550 ubox
33 46 0.068791485 ubox
33 47 0.059801344 ubox
33 48 0.019175958 ubox
33 49 0.004782330 ubox
33 50 0.003304403 ubox
33 54 0.101242897 ubox
33 55 0.183949734 ubox
33 56 0.006717217 ubox
34 44 0.008284976 ubox
34 46 0.052767028 ubox
34 47 0.019190417 ubox
34 48 0.004709437 ubox
34 54 0.185550760 ubox
35 43 0.017434250 ubox
35 45 0.037192679 ubox
35 51 0.060129672 ubox
35 53 0.182968892 ubox
36 44 0.045000433 ubox
36 47 0.005682583 ubox
36 48 0.003753713 ubox
36 49 0.033140428 ubox
36 50 0.094108749 ubox
36 56 0.003547918 ubox
37 46 0.007293525 ubox
37 47 0.004502725 ubox
37 48 0.033404063 ubox
37 49 0.096853206 ubox
37 50 0.190719208 ubox
37 55 0.003725104 ubox
38 46 0.005030673 ubox
38 47 0.033625154 ubox
38 48 0.096790837 ubox
38 49 0.193258008 ubox
38 50 0.067075801 ubox
38 54 0.003727561 ubox
39 46 0.031657021 ubox
39 47 0.096699727 ubox
39 48 0.193331196 ubox
39 49 0.071913454 ubox
39 50 0.058217750 ubox
40 46 0.092013550 ubox
40 47 0.193310809 ubox
40 48 0.072001099 ubox
40 49 0.059553328 ubox
40 50 0.020164710 ubox
41 46 0.174223450 ubox
41 47 0.072013538 ubox
41 48 0.059627880 ubox
41 49 0.020343703 ubox
42 46 0.046732216 ubox
42 47 0.059505198 ubox
42 48 0.020371322 ubox
43 47 0.020070557 ubox
5 56 0.9500000 lbox
6 55 0.9500000 lbox
7 54 0.9500000 lbox
9 52 0.9500000 lbox
10 51 0.9500000 lbox
11 50 0.9500000 lbox
12 49 0.9500000 lbox
13 48 0.9500000 lbox
14 47 0.9500000 lbox
15 46 0.9500000 lbox
19 42 0.9500000 lbox
20 41 0.9500000 lbox
21 40 0.9500000 lbox
showpage
end
%%EOF
