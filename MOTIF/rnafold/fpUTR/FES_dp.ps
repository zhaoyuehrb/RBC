%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:07:20 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FES)
} def

/sequence { (\
GGAGGAAGCGCGGAAUCAGGAACUGGCCGGGGUCCGCACCGGGCCUGAGUCGGUCCGAGGCCGUCCCAGGAGCAGCUGCCCGUGCGGAACAGCACU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 65 0.009638369 ubox
1 66 0.186876691 ubox
1 67 0.378147073 ubox
1 80 0.258736126 ubox
1 81 0.300203487 ubox
1 96 0.009240679 ubox
2 64 0.004187557 ubox
2 65 0.188215767 ubox
2 66 0.367503781 ubox
2 76 0.003189896 ubox
2 79 0.259638992 ubox
2 80 0.294043363 ubox
2 95 0.006665377 ubox
3 64 0.128165167 ubox
3 77 0.055458037 ubox
3 96 0.015648378 ubox
4 62 0.009879583 ubox
4 65 0.330374477 ubox
4 66 0.514900884 ubox
4 67 0.395483247 ubox
4 76 0.055637583 ubox
4 77 0.319187398 ubox
4 80 0.298802206 ubox
4 81 0.214181277 ubox
4 95 0.013083289 ubox
4 96 0.009640494 ubox
5 61 0.009759931 ubox
5 64 0.134210716 ubox
5 65 0.524471599 ubox
5 66 0.393775159 ubox
5 76 0.335357965 ubox
5 79 0.303774481 ubox
5 80 0.213300529 ubox
5 95 0.009501145 ubox
6 64 0.356139044 ubox
7 77 0.356964715 ubox
7 96 0.014712511 ubox
8 61 0.015792723 ubox
8 64 0.032477780 ubox
8 73 0.342360767 ubox
8 76 0.384235326 ubox
8 79 0.026702842 ubox
8 85 0.037367496 ubox
8 93 0.042328962 ubox
8 95 0.015575113 ubox
9 60 0.015868571 ubox
9 63 0.031867565 ubox
9 72 0.342419183 ubox
9 75 0.384060208 ubox
9 78 0.026296172 ubox
9 84 0.037413815 ubox
9 92 0.042327218 ubox
10 37 0.006357569 ubox
10 61 0.005868193 ubox
10 62 0.015326541 ubox
10 64 0.887888939 ubox
10 73 0.104776610 ubox
10 76 0.007088424 ubox
10 77 0.008584623 ubox
10 79 0.003612117 ubox
10 83 0.037365766 ubox
10 93 0.016482850 ubox
11 29 0.003444305 ubox
11 36 0.006373841 ubox
11 57 0.016561045 ubox
11 60 0.006701133 ubox
11 63 0.992235498 ubox
11 72 0.100283929 ubox
11 75 0.007049641 ubox
11 78 0.003477885 ubox
11 82 0.037381030 ubox
11 92 0.016203928 ubox
12 28 0.004188996 ubox
12 35 0.006432778 ubox
12 56 0.016567037 ubox
12 62 0.998476089 ubox
12 66 0.024296560 ubox
12 67 0.004412497 ubox
12 77 0.003285985 ubox
12 81 0.037314919 ubox
13 27 0.004179172 ubox
13 34 0.006432744 ubox
13 55 0.016556073 ubox
13 61 0.998531515 ubox
13 65 0.024357718 ubox
13 66 0.004090518 ubox
13 76 0.003276413 ubox
13 80 0.037275082 ubox
14 33 0.006097094 ubox
14 54 0.012654442 ubox
14 64 0.024126585 ubox
16 26 0.005863766 ubox
16 31 0.004366688 ubox
16 58 0.991390539 ubox
16 60 0.032735217 ubox
16 71 0.003220932 ubox
17 25 0.007681544 ubox
17 30 0.004738248 ubox
17 57 0.987589869 ubox
17 59 0.038465187 ubox
17 70 0.003225750 ubox
17 78 0.036300824 ubox
18 24 0.007675338 ubox
18 77 0.036302232 ubox
19 23 0.007508441 ubox
19 28 0.006469124 ubox
19 55 0.026266711 ubox
19 56 0.998030481 ubox
19 66 0.003770548 ubox
19 76 0.036166660 ubox
19 77 0.003443242 ubox
20 27 0.006465720 ubox
20 54 0.012248344 ubox
20 55 0.998476746 ubox
20 65 0.003786501 ubox
20 76 0.004120716 ubox
21 54 0.705119589 ubox
21 64 0.003388840 ubox
22 54 0.705443649 ubox
23 53 0.998897242 ubox
23 63 0.003449981 ubox
23 72 0.007006731 ubox
23 75 0.035068875 ubox
24 52 0.998428540 ubox
24 71 0.006535577 ubox
24 74 0.035130476 ubox
25 45 0.004658945 ubox
25 51 0.999031313 ubox
25 62 0.004636012 ubox
25 73 0.035137948 ubox
26 44 0.004686806 ubox
26 50 0.998838973 ubox
26 61 0.004638470 ubox
27 43 0.004640549 ubox
27 49 0.998738506 ubox
27 60 0.004638344 ubox
27 70 0.036851456 ubox
28 42 0.004587038 ubox
28 47 0.301934644 ubox
28 59 0.004629824 ubox
28 69 0.036767845 ubox
29 46 0.262170217 ubox
29 67 0.014526177 ubox
30 40 0.004512950 ubox
30 45 0.217075667 ubox
30 46 0.962159225 ubox
30 66 0.014561870 ubox
30 67 0.034215445 ubox
31 39 0.004510121 ubox
31 44 0.159383555 ubox
31 45 0.975370733 ubox
31 56 0.004003392 ubox
31 65 0.014537770 ubox
31 66 0.034351510 ubox
32 44 0.986453511 ubox
32 55 0.004003332 ubox
32 64 0.013031190 ubox
32 65 0.034342229 ubox
33 42 0.030297189 ubox
33 43 0.996721377 ubox
33 63 0.005941828 ubox
34 41 0.030076964 ubox
34 42 0.998334332 ubox
34 43 0.028746766 ubox
34 53 0.004170822 ubox
35 41 0.998276775 ubox
35 42 0.028886215 ubox
35 52 0.004173250 ubox
35 63 0.014542567 ubox
36 40 0.933897536 ubox
36 51 0.004164276 ubox
36 61 0.035840775 ubox
36 62 0.010341626 ubox
37 60 0.037339311 ubox
38 50 0.004044573 ubox
39 49 0.004056259 ubox
40 47 0.003959063 ubox
40 57 0.037845694 ubox
41 56 0.037897953 ubox
42 55 0.037897770 ubox
43 54 0.037886046 ubox
44 53 0.037892597 ubox
45 52 0.037847145 ubox
47 51 0.003996561 ubox
59 66 0.003800920 ubox
59 67 0.003727074 ubox
59 77 0.004527434 ubox
60 65 0.003751405 ubox
60 66 0.003711191 ubox
60 76 0.004964933 ubox
61 70 0.014436060 ubox
61 75 0.004971670 ubox
62 69 0.014594737 ubox
63 73 0.015309435 ubox
63 90 0.013984277 ubox
64 70 0.012071522 ubox
64 71 0.123014646 ubox
64 72 0.009976823 ubox
64 88 0.042549101 ubox
64 89 0.010017203 ubox
65 69 0.027801937 ubox
65 70 0.177388935 ubox
65 86 0.003923108 ubox
65 87 0.068106032 ubox
66 86 0.068190437 ubox
67 78 0.207089074 ubox
67 84 0.067410933 ubox
68 77 0.210306398 ubox
68 83 0.064757172 ubox
68 96 0.012655996 ubox
69 76 0.210479008 ubox
69 77 0.011170996 ubox
69 80 0.063218771 ubox
69 81 0.818255434 ubox
69 95 0.012910736 ubox
69 96 0.010873737 ubox
70 76 0.012576970 ubox
70 79 0.063235927 ubox
70 80 0.819153066 ubox
70 95 0.012044932 ubox
71 77 0.038079824 ubox
71 96 0.012383644 ubox
72 76 0.037656541 ubox
72 79 0.822221152 ubox
72 85 0.003763712 ubox
72 93 0.022907771 ubox
72 95 0.013500822 ubox
73 78 0.821159362 ubox
73 84 0.003766966 ubox
73 92 0.022900218 ubox
74 83 0.003668878 ubox
75 93 0.057768206 ubox
76 87 0.023927522 ubox
76 92 0.057832701 ubox
77 86 0.023944424 ubox
77 91 0.057798295 ubox
78 85 0.023993269 ubox
78 90 0.057529931 ubox
79 84 0.023891820 ubox
79 87 0.023571833 ubox
80 86 0.023608603 ubox
80 87 0.052321738 ubox
81 86 0.052348300 ubox
82 90 0.006427130 ubox
82 93 0.004880030 ubox
82 95 0.992617206 ubox
83 89 0.006454028 ubox
83 92 0.004776911 ubox
83 94 0.994130822 ubox
84 93 0.994884101 ubox
85 92 0.994652966 ubox
86 96 0.003356378 ubox
87 95 0.003717728 ubox
4 67 0.9500000 lbox
5 66 0.9500000 lbox
10 64 0.9500000 lbox
11 63 0.9500000 lbox
12 62 0.9500000 lbox
13 61 0.9500000 lbox
16 58 0.9500000 lbox
17 57 0.9500000 lbox
19 56 0.9500000 lbox
20 55 0.9500000 lbox
21 54 0.9500000 lbox
23 53 0.9500000 lbox
24 52 0.9500000 lbox
25 51 0.9500000 lbox
26 50 0.9500000 lbox
27 49 0.9500000 lbox
30 46 0.9500000 lbox
31 45 0.9500000 lbox
32 44 0.9500000 lbox
33 43 0.9500000 lbox
34 42 0.9500000 lbox
35 41 0.9500000 lbox
36 40 0.9500000 lbox
69 81 0.9500000 lbox
70 80 0.9500000 lbox
72 79 0.9500000 lbox
73 78 0.9500000 lbox
82 95 0.9500000 lbox
83 94 0.9500000 lbox
84 93 0.9500000 lbox
85 92 0.9500000 lbox
showpage
end
%%EOF
