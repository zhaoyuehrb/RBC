%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:43:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCCUGCGCGCUGCCCUCCCCGGCCCCGCCUCCGCGGCUCCCGCCCGCGAGCGGUUGGGAUUUGAAUCUGCCGCGGACUGCAGCCGGAAGUGUCGAUCCCUCAGCCAGGGC\
) } def
/len { sequence length } bind def

/coor [
[154.56971741 220.45785522]
[146.30128479 207.94253540]
[138.03286743 195.42723083]
[129.76443481 182.91191101]
[121.49600983 170.39659119]
[108.02472687 164.04255676]
[106.87332916 148.26330566]
[98.60490417 135.74798584]
[84.07201385 132.03379822]
[70.81260681 139.04722595]
[57.55319595 146.06063843]
[52.80582047 160.89640808]
[39.25898361 167.82012939]
[25.14459801 163.20280457]
[11.88518715 170.21621704]
[-1.37422287 177.22964478]
[-5.78751278 192.40522766]
[-19.67897606 199.94198608]
[-34.80705261 195.36849976]
[-42.19652557 181.39813232]
[-37.46335220 166.31925964]
[-23.41563606 159.07789612]
[-8.38764095 163.97023010]
[4.87176895 156.95681763]
[18.13117981 149.94338989]
[22.25764275 135.67778015]
[35.60466003 128.37628174]
[50.53977585 132.80122375]
[63.79918671 125.78781128]
[77.05860138 118.77439117]
[74.01578522 93.61448669]
[90.63817596 78.04212189]
[89.38854980 63.09426498]
[88.13892365 48.14640808]
[86.88929749 33.19855118]
[85.63967133 18.25069237]
[84.39004517 3.30283523]
[83.14041901 -11.64502239]
[81.89079285 -26.59287834]
[78.78571320 -41.26797867]
[73.87372589 -55.44092178]
[68.96173859 -69.61386871]
[64.04974365 -83.78681183]
[59.13775635 -97.95975494]
[47.30797958 -108.46532440]
[50.45092010 -123.02455139]
[45.53892899 -137.19749451]
[40.62693787 -151.37043762]
[27.88135529 -161.68946838]
[30.71199799 -177.84246826]
[46.20694351 -183.21263123]
[58.42632294 -172.27558899]
[54.79988480 -156.28244019]
[59.71187210 -142.10948181]
[64.62386322 -127.93654633]
[76.10230255 -118.44471741]
[73.31069946 -102.87174225]
[78.22268677 -88.69879913]
[83.13468170 -74.52585602]
[88.04666901 -60.35291290]
[92.95865631 -46.17996597]
[99.10033417 -59.86499023]
[111.55690002 -68.22166443]
[126.54880524 -68.71440887]
[139.52722168 -61.19373322]
[146.55426025 -47.94153595]
[145.49778748 -32.97878647]
[136.67835999 -20.84546089]
[122.77194214 -15.22303677]
[107.99801636 -17.81746101]
[96.83865356 -27.84250641]
[98.08827972 -12.89464855]
[99.33790588 2.05320835]
[100.58753204 17.00106621]
[101.83715820 31.94892311]
[103.08678436 46.89677811]
[104.33641052 61.84463882]
[105.58603668 76.79249573]
[115.15360260 80.32695007]
[122.70730591 87.76237488]
[126.68376923 98.01747894]
[126.07706451 109.40031433]
[120.66831207 119.88661194]
[111.12021637 127.47956085]
[119.38864136 139.99487305]
[133.45133972 147.24409485]
[134.01132202 162.12817383]
[142.27975464 174.64347839]
[150.54817200 187.15879822]
[158.81660461 199.67411804]
[167.08502197 212.18943787]
[176.31471252 211.03308105]
[185.35899353 213.01036072]
[193.18940735 217.86642456]
[198.92553711 225.02084351]
[201.93399048 233.63674927]
[201.89825439 242.71878052]
[198.85169983 251.22798157]
[193.17047119 258.20071411]
[199.62500000 271.74099731]
[206.07952881 285.28128052]
[212.53405762 298.82153320]
[227.11451721 305.51403809]
[230.83287048 321.12023926]
[220.83670044 333.66839600]
[204.79421997 333.53265381]
[195.01185608 320.81710815]
[198.99378967 305.27606201]
[192.53924561 291.73580933]
[186.08471680 278.19552612]
[179.63018799 264.65524292]
[159.07356262 259.76678467]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 91]
[2 90]
[3 89]
[4 88]
[5 87]
[7 85]
[8 84]
[9 30]
[10 29]
[11 28]
[14 25]
[15 24]
[16 23]
[32 78]
[33 77]
[34 76]
[35 75]
[36 74]
[37 73]
[38 72]
[39 71]
[40 61]
[41 60]
[42 59]
[43 58]
[44 57]
[46 55]
[47 54]
[48 53]
[99 111]
[100 110]
[101 109]
[102 108]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
