%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:27:25 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GFER)
} def

/sequence { (\
GCUGGCCUGGAGGCUGACCUGGAGGCUCAUCUGGAGGCCGAGCUGACCCGGCAGGCCUUGCGCGGGCAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 43 0.256555382 ubox
1 56 0.005701365 ubox
1 63 0.003433165 ubox
1 67 0.923331742 ubox
2 42 0.256973723 ubox
2 55 0.005715257 ubox
2 62 0.003424306 ubox
2 65 0.018054013 ubox
2 66 0.923940285 ubox
3 29 0.009539685 ubox
3 40 0.127252285 ubox
3 41 0.222613339 ubox
3 54 0.005289459 ubox
3 64 0.021754361 ubox
3 65 0.920835653 ubox
3 68 0.074440965 ubox
4 15 0.004592392 ubox
4 27 0.012366612 ubox
4 28 0.010629583 ubox
4 39 0.257619222 ubox
4 57 0.007128337 ubox
4 63 0.024636597 ubox
4 67 0.072264675 ubox
5 14 0.004796758 ubox
5 26 0.017099982 ubox
5 38 0.257951843 ubox
5 52 0.005795035 ubox
5 56 0.007139860 ubox
5 61 0.025782326 ubox
5 63 0.923438960 ubox
5 67 0.271341163 ubox
6 13 0.004801445 ubox
6 25 0.017164207 ubox
6 37 0.257945041 ubox
6 51 0.005899241 ubox
6 55 0.007140230 ubox
6 60 0.025909254 ubox
6 62 0.920865622 ubox
6 65 0.063376190 ubox
6 66 0.273948002 ubox
7 12 0.004793836 ubox
7 24 0.017207800 ubox
7 33 0.004974015 ubox
7 34 0.022123971 ubox
7 36 0.257500445 ubox
7 50 0.005894324 ubox
7 54 0.007136032 ubox
7 64 0.063397656 ubox
7 65 0.273940060 ubox
8 23 0.016548264 ubox
8 29 0.005575640 ubox
8 33 0.034036380 ubox
8 35 0.247208146 ubox
8 53 0.007072539 ubox
8 60 0.156995319 ubox
8 62 0.056495388 ubox
8 64 0.272811500 ubox
9 28 0.005904518 ubox
9 31 0.026226281 ubox
9 32 0.130075355 ubox
9 48 0.005937542 ubox
9 52 0.006324118 ubox
9 57 0.003348634 ubox
9 58 0.003481645 ubox
9 59 0.128400395 ubox
9 61 0.147840221 ubox
9 63 0.270957875 ubox
10 28 0.047411668 ubox
10 30 0.017968311 ubox
10 31 0.136344711 ubox
10 47 0.005969172 ubox
10 56 0.003327557 ubox
10 58 0.061359469 ubox
10 59 0.936125797 ubox
11 20 0.018086525 ubox
11 27 0.048567731 ubox
11 30 0.132970190 ubox
11 32 0.160764070 ubox
11 58 0.960588407 ubox
11 59 0.043801965 ubox
12 19 0.018839700 ubox
12 26 0.049273229 ubox
12 27 0.109334393 ubox
12 28 0.071722198 ubox
12 31 0.166997776 ubox
12 32 0.130365422 ubox
12 39 0.003987741 ubox
12 44 0.006088510 ubox
12 57 0.965378617 ubox
12 58 0.007878782 ubox
13 18 0.018749368 ubox
13 26 0.136041120 ubox
13 27 0.008431472 ubox
13 30 0.163944389 ubox
13 31 0.131877455 ubox
13 38 0.003995370 ubox
13 43 0.006106859 ubox
13 56 0.965360711 ubox
13 57 0.006150966 ubox
14 24 0.049628249 ubox
14 25 0.136232793 ubox
14 37 0.003997297 ubox
14 42 0.006111532 ubox
14 54 0.242516440 ubox
14 55 0.934452572 ubox
15 23 0.049906293 ubox
15 24 0.135539054 ubox
15 29 0.213114726 ubox
15 36 0.003988524 ubox
15 41 0.005528178 ubox
15 53 0.342742114 ubox
15 54 0.900768110 ubox
16 28 0.214928108 ubox
16 39 0.005011071 ubox
16 52 0.370131983 ubox
17 27 0.214071786 ubox
18 25 0.210377453 ubox
18 34 0.005940140 ubox
18 37 0.005922755 ubox
18 51 0.959665992 ubox
18 55 0.003307548 ubox
19 24 0.209747357 ubox
19 25 0.042865234 ubox
19 33 0.005925730 ubox
19 34 0.009870127 ubox
19 36 0.005931414 ubox
19 50 0.959049790 ubox
19 51 0.098693126 ubox
19 54 0.004796214 ubox
20 24 0.038677989 ubox
20 33 0.010042293 ubox
20 35 0.005608156 ubox
20 50 0.100741160 ubox
20 53 0.005038894 ubox
21 32 0.013619689 ubox
21 48 0.952778143 ubox
21 49 0.148122711 ubox
21 52 0.005021329 ubox
22 31 0.014017785 ubox
22 47 0.953469980 ubox
22 48 0.145014638 ubox
23 30 0.013828949 ubox
23 32 0.004158163 ubox
23 44 0.012753545 ubox
24 31 0.004300044 ubox
24 39 0.013016142 ubox
24 43 0.009552766 ubox
24 44 0.963313445 ubox
24 48 0.004423829 ubox
24 49 0.007164325 ubox
25 38 0.013111578 ubox
25 43 0.965217271 ubox
25 47 0.005377388 ubox
25 48 0.007156916 ubox
25 67 0.003271213 ubox
26 36 0.007156124 ubox
26 37 0.011520398 ubox
26 42 0.965265869 ubox
26 66 0.003283900 ubox
27 35 0.010321569 ubox
27 36 0.009285539 ubox
27 41 0.964675951 ubox
27 46 0.011008187 ubox
27 65 0.003286998 ubox
28 33 0.005008836 ubox
28 34 0.011303371 ubox
28 36 0.006299035 ubox
28 40 0.960568582 ubox
28 45 0.011130804 ubox
28 64 0.003515884 ubox
29 44 0.010990999 ubox
30 37 0.273757380 ubox
30 41 0.024222272 ubox
30 66 0.005654764 ubox
31 36 0.291082643 ubox
31 37 0.571739893 ubox
31 40 0.030505842 ubox
31 42 0.010785098 ubox
31 65 0.008439207 ubox
32 36 0.516287147 ubox
32 40 0.075378872 ubox
32 41 0.010001469 ubox
32 62 0.007955943 ubox
32 64 0.008450120 ubox
33 39 0.386622215 ubox
33 61 0.012807996 ubox
33 63 0.008423296 ubox
34 38 0.380609890 ubox
34 59 0.028314500 ubox
35 58 0.034737757 ubox
35 59 0.003805136 ubox
36 57 0.035890075 ubox
37 43 0.003272408 ubox
37 52 0.006520751 ubox
37 56 0.035897781 ubox
38 42 0.003251256 ubox
38 51 0.006579624 ubox
38 55 0.035900424 ubox
39 50 0.006581227 ubox
39 54 0.035893073 ubox
40 49 0.006594643 ubox
42 52 0.035988688 ubox
43 51 0.036052754 ubox
44 50 0.035922834 ubox
44 68 0.223077209 ubox
45 49 0.034229217 ubox
45 67 0.241011131 ubox
47 65 0.004566673 ubox
47 66 0.257736267 ubox
48 64 0.004517052 ubox
48 65 0.257907070 ubox
49 64 0.257903560 ubox
50 63 0.256887699 ubox
51 61 0.257609446 ubox
51 63 0.004471104 ubox
52 60 0.257795377 ubox
52 62 0.006233594 ubox
53 59 0.250801991 ubox
54 58 0.170166629 ubox
55 61 0.005051229 ubox
56 60 0.005040637 ubox
58 69 0.008627327 ubox
59 68 0.012783328 ubox
60 67 0.016212620 ubox
61 66 0.016213940 ubox
1 67 0.9500000 lbox
2 66 0.9500000 lbox
3 65 0.9500000 lbox
5 63 0.9500000 lbox
6 62 0.9500000 lbox
10 59 0.9500000 lbox
11 58 0.9500000 lbox
12 57 0.9500000 lbox
13 56 0.9500000 lbox
14 55 0.9500000 lbox
15 54 0.9500000 lbox
18 51 0.9500000 lbox
19 50 0.9500000 lbox
21 48 0.9500000 lbox
22 47 0.9500000 lbox
24 44 0.9500000 lbox
25 43 0.9500000 lbox
26 42 0.9500000 lbox
27 41 0.9500000 lbox
28 40 0.9500000 lbox
showpage
end
%%EOF
