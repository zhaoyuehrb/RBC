%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:00:00 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TAAR5)
} def

/sequence { (\
UCCAGUGGAGAAGGUGGCCAGUUCUCAGACAGAGGAAGAGUAGAAAUCAUAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.007795961 ubox
1 9 0.142272203 ubox
1 11 0.010182565 ubox
1 29 0.004577136 ubox
1 33 0.050627315 ubox
1 35 0.013826476 ubox
1 36 0.909656699 ubox
1 39 0.009313912 ubox
1 44 0.005843303 ubox
2 7 0.010831777 ubox
2 8 0.152100889 ubox
2 10 0.010812057 ubox
2 13 0.003165502 ubox
2 14 0.025652009 ubox
2 17 0.044138865 ubox
2 28 0.005068226 ubox
2 32 0.054003487 ubox
2 34 0.017368584 ubox
2 35 0.972408033 ubox
2 38 0.007761119 ubox
2 43 0.005938032 ubox
3 7 0.151071567 ubox
3 13 0.025893126 ubox
3 16 0.045944895 ubox
3 34 0.972408248 ubox
4 15 0.044960902 ubox
5 18 0.005857761 ubox
5 22 0.003626708 ubox
5 30 0.481539595 ubox
5 50 0.053021963 ubox
6 14 0.009564995 ubox
6 17 0.005823201 ubox
6 20 0.044463721 ubox
6 27 0.032392839 ubox
6 29 0.477098086 ubox
6 31 0.838268026 ubox
6 49 0.054229942 ubox
6 51 0.016198124 ubox
7 19 0.049331247 ubox
7 25 0.019820293 ubox
7 26 0.027874727 ubox
7 30 0.837319631 ubox
7 48 0.051971279 ubox
7 50 0.017133533 ubox
8 18 0.049227429 ubox
8 24 0.030178861 ubox
8 25 0.011199918 ubox
8 26 0.968922292 ubox
8 47 0.043897871 ubox
8 48 0.046499234 ubox
9 23 0.030141728 ubox
9 25 0.970168275 ubox
9 47 0.049125958 ubox
10 22 0.028678439 ubox
10 23 0.003397343 ubox
10 24 0.970765049 ubox
10 26 0.072649375 ubox
10 48 0.116319618 ubox
11 22 0.018542784 ubox
11 23 0.967002400 ubox
11 25 0.053376544 ubox
11 47 0.113894165 ubox
12 22 0.878250318 ubox
12 23 0.050361600 ubox
12 25 0.105473359 ubox
13 19 0.706034996 ubox
13 22 0.068693187 ubox
13 23 0.010045048 ubox
13 24 0.119142994 ubox
13 25 0.012642417 ubox
13 26 0.007141285 ubox
13 48 0.053977841 ubox
14 18 0.696655904 ubox
14 22 0.015173581 ubox
14 23 0.116982018 ubox
14 24 0.013630997 ubox
14 25 0.006361921 ubox
14 41 0.004091396 ubox
14 47 0.053778876 ubox
14 50 0.041750495 ubox
15 21 0.050884017 ubox
15 27 0.007281428 ubox
15 40 0.004346154 ubox
15 42 0.042840028 ubox
15 46 0.050947730 ubox
15 49 0.042732373 ubox
16 23 0.005014109 ubox
16 24 0.007711802 ubox
16 26 0.007334629 ubox
16 41 0.038796671 ubox
16 48 0.043016564 ubox
17 22 0.006495555 ubox
17 23 0.006539437 ubox
17 24 0.003709758 ubox
17 25 0.005899738 ubox
17 41 0.160825506 ubox
17 47 0.028721044 ubox
18 35 0.008273697 ubox
18 40 0.165072607 ubox
19 34 0.008256903 ubox
21 30 0.009422888 ubox
21 41 0.005516000 ubox
22 29 0.009328173 ubox
22 34 0.006969274 ubox
22 36 0.193345522 ubox
22 37 0.021592220 ubox
22 38 0.003471952 ubox
22 39 0.005738005 ubox
22 40 0.010338743 ubox
22 43 0.007018516 ubox
22 45 0.003663805 ubox
23 28 0.008590633 ubox
23 33 0.009678675 ubox
23 35 0.197841295 ubox
23 36 0.021770405 ubox
23 38 0.004851965 ubox
23 39 0.012199471 ubox
23 42 0.006943527 ubox
23 44 0.004054184 ubox
24 32 0.009860401 ubox
24 34 0.199950622 ubox
24 35 0.018968341 ubox
24 38 0.012321130 ubox
24 40 0.020435275 ubox
24 43 0.004058379 ubox
25 31 0.009457638 ubox
25 33 0.200266746 ubox
25 34 0.014945906 ubox
25 36 0.009168129 ubox
25 37 0.009091524 ubox
25 39 0.020486106 ubox
25 42 0.003778875 ubox
26 32 0.200227409 ubox
26 34 0.003862940 ubox
26 35 0.012304142 ubox
26 38 0.020480981 ubox
28 48 0.004316805 ubox
29 41 0.010226601 ubox
29 47 0.003988830 ubox
30 40 0.010523851 ubox
32 48 0.021272266 ubox
33 47 0.021005639 ubox
34 48 0.006295055 ubox
35 47 0.004443861 ubox
35 48 0.015164128 ubox
36 47 0.014659001 ubox
38 48 0.429248568 ubox
39 47 0.425467051 ubox
40 47 0.058303677 ubox
40 50 0.041049552 ubox
41 46 0.069254202 ubox
41 49 0.041338427 ubox
41 51 0.066020381 ubox
42 50 0.069443968 ubox
1 36 0.9500000 lbox
2 35 0.9500000 lbox
3 34 0.9500000 lbox
6 31 0.9500000 lbox
7 30 0.9500000 lbox
8 26 0.9500000 lbox
9 25 0.9500000 lbox
10 24 0.9500000 lbox
11 23 0.9500000 lbox
12 22 0.9500000 lbox
showpage
end
%%EOF
