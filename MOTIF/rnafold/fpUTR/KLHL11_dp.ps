%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:57:55 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KLHL11)
} def

/sequence { (\
UGUGUCGUACCAACAGCCGCAUCGUUCCGAGGCUGUGGAGGCCGGGCGCAGCGGCGUCAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.024245008 ubox
1 9 0.014601986 ubox
1 12 0.160361565 ubox
1 15 0.324319008 ubox
1 44 0.415250962 ubox
1 50 0.132985829 ubox
1 59 0.051353579 ubox
2 6 0.033719944 ubox
2 8 0.015571325 ubox
2 10 0.137399308 ubox
2 11 0.176270894 ubox
2 14 0.359956395 ubox
2 42 0.051330893 ubox
2 43 0.545119274 ubox
2 47 0.004401292 ubox
2 49 0.147622216 ubox
2 57 0.005592193 ubox
2 58 0.056634117 ubox
3 7 0.006738858 ubox
3 9 0.138788181 ubox
3 12 0.154877061 ubox
3 13 0.337452842 ubox
3 15 0.139081946 ubox
3 41 0.051628166 ubox
3 44 0.050944949 ubox
3 46 0.004392253 ubox
3 48 0.147591602 ubox
3 56 0.042792088 ubox
3 59 0.055217181 ubox
4 8 0.115758524 ubox
4 10 0.167535017 ubox
4 11 0.199521713 ubox
4 14 0.154345324 ubox
4 42 0.622918095 ubox
4 43 0.054568894 ubox
4 47 0.147721509 ubox
4 55 0.046615223 ubox
4 58 0.061069549 ubox
5 9 0.152051315 ubox
5 13 0.149713553 ubox
5 39 0.048780072 ubox
5 41 0.624245021 ubox
5 45 0.033951558 ubox
5 46 0.144949341 ubox
5 54 0.046586350 ubox
5 56 0.005274052 ubox
6 37 0.009485273 ubox
6 38 0.032116782 ubox
6 40 0.623131797 ubox
6 44 0.134617475 ubox
6 45 0.139620858 ubox
6 53 0.046597431 ubox
6 56 0.045492308 ubox
7 14 0.123342549 ubox
7 36 0.004446332 ubox
7 42 0.211161697 ubox
7 43 0.115243285 ubox
7 52 0.046459718 ubox
7 55 0.015352450 ubox
8 13 0.117646063 ubox
8 37 0.013199950 ubox
8 41 0.224495975 ubox
8 51 0.045420517 ubox
8 54 0.006392932 ubox
9 36 0.009076995 ubox
9 57 0.027948701 ubox
10 35 0.006716870 ubox
10 38 0.684808056 ubox
10 41 0.083446932 ubox
10 46 0.003184416 ubox
10 56 0.029968156 ubox
11 37 0.705011042 ubox
11 40 0.083392534 ubox
11 45 0.003182387 ubox
12 36 0.497410836 ubox
13 36 0.563847279 ubox
13 57 0.292444523 ubox
14 35 0.756054442 ubox
14 37 0.005948020 ubox
14 56 0.307592772 ubox
15 34 0.756133156 ubox
15 36 0.004627065 ubox
16 33 0.756329294 ubox
16 36 0.003770204 ubox
16 55 0.653263358 ubox
17 32 0.756325157 ubox
17 35 0.004966757 ubox
17 38 0.003172645 ubox
17 54 0.654088389 ubox
18 29 0.017831069 ubox
18 31 0.755745576 ubox
18 37 0.003740643 ubox
18 53 0.654101100 ubox
19 23 0.005814829 ubox
19 25 0.043223656 ubox
19 28 0.040776918 ubox
19 33 0.006445749 ubox
19 36 0.003756915 ubox
19 52 0.654099665 ubox
20 24 0.043136864 ubox
20 32 0.006593005 ubox
20 35 0.003758793 ubox
20 51 0.653803466 ubox
21 34 0.003685333 ubox
22 30 0.568058419 ubox
23 29 0.572903275 ubox
23 31 0.003458744 ubox
23 48 0.635515844 ubox
24 28 0.536354950 ubox
24 47 0.636568508 ubox
24 49 0.146625908 ubox
25 46 0.547757064 ubox
25 48 0.144980268 ubox
26 39 0.004950802 ubox
26 44 0.004151834 ubox
26 45 0.447095297 ubox
26 46 0.308290816 ubox
27 38 0.005123608 ubox
27 44 0.444886740 ubox
27 45 0.436813855 ubox
27 46 0.174357604 ubox
28 37 0.005140277 ubox
28 44 0.436296818 ubox
28 45 0.177644025 ubox
29 36 0.004045630 ubox
29 43 0.194238236 ubox
31 43 0.622902235 ubox
32 42 0.652147938 ubox
33 40 0.068606353 ubox
33 41 0.650269620 ubox
34 39 0.085458878 ubox
34 40 0.640584386 ubox
35 42 0.007940108 ubox
36 41 0.007866473 ubox
36 59 0.009776853 ubox
37 43 0.010446574 ubox
37 58 0.016788404 ubox
38 42 0.010296366 ubox
38 57 0.009750284 ubox
38 58 0.289585954 ubox
39 57 0.302642316 ubox
40 58 0.009609229 ubox
41 47 0.023717525 ubox
41 49 0.038307789 ubox
41 52 0.003366078 ubox
41 55 0.317454908 ubox
41 57 0.004460203 ubox
42 46 0.023567815 ubox
42 48 0.038310453 ubox
42 51 0.003397005 ubox
42 54 0.317560856 ubox
42 56 0.004178627 ubox
43 53 0.317558240 ubox
44 52 0.316376555 ubox
44 58 0.036211387 ubox
45 57 0.026133300 ubox
45 58 0.662896288 ubox
46 52 0.020759846 ubox
46 55 0.014438333 ubox
46 57 0.667531746 ubox
47 51 0.022534113 ubox
47 54 0.014435040 ubox
47 56 0.668544321 ubox
48 55 0.668554975 ubox
49 54 0.667427803 ubox
51 57 0.016515948 ubox
52 56 0.017014520 ubox
16 55 0.9500000 lbox
17 54 0.9500000 lbox
18 53 0.9500000 lbox
19 52 0.9500000 lbox
20 51 0.9500000 lbox
23 48 0.9500000 lbox
24 47 0.9500000 lbox
25 46 0.9500000 lbox
26 45 0.9500000 lbox
27 44 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
showpage
end
%%EOF
