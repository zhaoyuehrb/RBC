%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:00:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGUCCCAGAGGGAAGAGGGGCGGUGCCUGUCUCCGAAGCGAGGAGCGGAUUGGCUUCACGGAGGCCGCGCCCCCGAAGUCACGGCCGGCGGGCAUUUGGAAAUAGCUUGUCAUUUCCCUCCUUCAACCUGUACCAUUCUUCAAGAAACGGCGCCAACGGAAGUGGGUCGCAGGAAGAGGAAGUCCCGCCUCUCUCUCCUCAGGCAGCAGCAACGCGGAGGAAACGGGAGUGAACGGAGAGCGUAGUGACCAUC\
) } def
/len { sequence length } bind def

/coor [
[229.79760742 473.36605835]
[244.20613098 477.52822876]
[236.33729553 464.75790405]
[223.52365112 463.56942749]
[213.57991028 455.09799194]
[210.27351379 442.25942993]
[215.02549744 429.67483521]
[207.31394958 416.80892944]
[194.13432312 409.87014771]
[193.67611694 394.05557251]
[185.96458435 381.18963623]
[178.25303650 368.32369995]
[170.54150391 355.45779419]
[162.82995605 342.59185791]
[149.65032959 335.65307617]
[149.19212341 319.83850098]
[141.48059082 306.97256470]
[133.76904297 294.10665894]
[126.05750275 281.24072266]
[118.34596252 268.37478638]
[110.63442230 255.50886536]
[102.92288208 242.64292908]
[95.21134186 229.77699280]
[87.49980164 216.91107178]
[79.78825378 204.04513550]
[66.60862732 197.10636902]
[66.15042877 181.29179382]
[58.43888474 168.42585754]
[43.78346252 165.22920227]
[31.41462326 173.71517944]
[19.04578400 182.20115662]
[13.75928688 189.61448669]
[6.47268391 190.71429443]
[-5.99936056 199.04785156]
[-18.47140503 207.38139343]
[-30.94344902 215.71495056]
[-32.46589279 231.27824402]
[-43.67216492 242.18482971]
[-59.27100372 243.28494263]
[-71.89711761 234.05914307]
[-75.58883667 218.86358643]
[-68.60305023 204.87312317]
[-54.23822784 198.69364929]
[-39.27700043 203.24290466]
[-26.80495834 194.90934753]
[-14.33291435 186.57580566]
[-1.86086965 178.24224854]
[10.55980587 169.83232117]
[22.92864609 161.34634399]
[35.29748535 152.86036682]
[32.81418610 145.78341675]
[27.84759331 131.62951660]
[25.36429596 124.55256653]
[10.40493870 125.65603638]
[-4.55441761 126.75950623]
[-19.51377487 127.86296844]
[-34.47313309 128.96644592]
[-49.43248749 130.06991577]
[-64.39184570 131.17337036]
[-79.74326324 138.36853027]
[-90.90692902 125.60887146]
[-81.73632812 111.34925842]
[-65.49531555 116.21401978]
[-50.53595734 115.11054993]
[-35.57659912 114.00708008]
[-20.61724281 112.90361786]
[-5.65788651 111.80014801]
[9.30147076 110.69667816]
[24.26082802 109.59320831]
[25.72400475 102.23731995]
[30.11353683 80.16964722]
[16.71517181 73.42548370]
[3.31680799 66.68131256]
[-10.08155632 59.93714142]
[-23.52104950 53.27531052]
[-37.00116730 46.69606400]
[-50.48128510 40.11682129]
[-63.17169952 48.76834869]
[-78.48887634 49.89957809]
[-92.31256866 43.20621490]
[-100.92427826 30.48874283]
[-102.00748444 15.16809559]
[-95.27082825 1.36545146]
[-82.52642059 -7.20634842]
[-67.20245361 -8.24153233]
[-53.42099762 -1.46164119]
[-44.88918686 11.30956841]
[-43.90204239 26.63670540]
[-30.42192268 33.21595001]
[-16.94180679 39.79519272]
[-9.57347965 39.90435791]
[-3.33738661 46.53877640]
[10.06097794 53.28294754]
[23.45934296 60.02711487]
[36.85770798 66.77128601]
[42.19344711 61.50062561]
[31.65230370 50.82896805]
[42.32413864 40.28800201]
[52.86493301 50.95930481]
[58.20067215 45.68864441]
[51.62142944 32.20852661]
[45.04218674 18.72841072]
[38.46294403 5.24829292]
[31.88369942 -8.23182392]
[25.30445480 -21.71194077]
[9.99961185 -24.26955795]
[-0.85490328 -35.35824966]
[-3.08530831 -50.71419144]
[4.16603327 -64.43270874]
[18.11083221 -71.23874664]
[33.38703156 -68.51525116]
[44.12061691 -57.30946350]
[46.18430710 -41.93022919]
[38.78457260 -28.29118347]
[45.36381531 -14.81106758]
[51.94305801 -1.33095038]
[58.52230453 12.14916611]
[65.10154724 25.62928391]
[71.68078613 39.10940170]
[97.01794434 52.26244736]
[108.71141815 72.85632324]
[116.89129639 60.28295135]
[125.07116699 47.70957947]
[133.25103760 35.13620758]
[141.43092346 22.56283951]
[137.14535522 9.81186485]
[140.92205811 -2.89628315]
[151.17088318 -10.99597549]
[164.01957703 -11.71201038]
[172.35313416 -24.18405342]
[180.68669128 -36.65609741]
[189.02024841 -49.12814331]
[197.35379028 -61.60018539]
[205.61067200 -74.12313080]
[213.79054260 -86.69650269]
[221.97041321 -99.26987457]
[217.68486023 -112.02084351]
[221.46156311 -124.72899628]
[231.71037292 -132.82868958]
[244.55908203 -133.54472351]
[252.89263916 -146.01676941]
[261.22619629 -158.48881531]
[269.55975342 -170.96084595]
[254.69981384 -168.91574097]
[242.67768860 -177.88618469]
[240.40721130 -192.71334839]
[249.19409180 -204.87026978]
[263.98507690 -207.36560059]
[276.27401733 -198.76431274]
[278.99356079 -184.01263428]
[288.22201538 -195.83782959]
[284.78570557 -211.09318542]
[292.00518799 -224.96449280]
[306.47164917 -230.90214539]
[321.35446167 -226.10256958]
[329.62640381 -212.83198547]
[327.38177490 -197.35633850]
[315.68035889 -186.98277283]
[300.04721069 -186.60935974]
[290.81875610 -174.78414917]
[282.03176880 -162.62730408]
[273.69824219 -150.15525818]
[265.36468506 -137.68321228]
[257.03112793 -125.21116638]
[261.00866699 -108.85725403]
[251.73323059 -94.40956116]
[234.54379272 -91.08999634]
[226.36390686 -78.51662445]
[218.18403625 -65.94325256]
[217.17373657 -58.64370346]
[209.82583618 -53.26663208]
[201.49227905 -40.79459000]
[193.15873718 -28.32254410]
[184.82518005 -15.85050106]
[176.49162292 -3.37845635]
[180.46916199 12.97545433]
[171.19372559 27.42314911]
[154.00428772 30.74271393]
[145.82441711 43.31608582]
[137.64454651 55.88945389]
[129.46466064 68.46282196]
[121.28479004 81.03619385]
[138.30020142 128.65066528]
[71.30481720 160.71432495]
[79.01635742 173.58024597]
[92.74756622 181.43928528]
[92.65419006 196.33360291]
[100.36573029 209.19952393]
[108.07727051 222.06546021]
[115.78881073 234.93138123]
[123.50035095 247.79731750]
[131.21189880 260.66323853]
[138.92343140 273.52917480]
[146.63497925 286.39511108]
[154.34651184 299.26104736]
[162.05805969 312.12695312]
[175.78926086 319.98599243]
[175.69589233 334.88031006]
[183.40742493 347.74624634]
[191.11897278 360.61218262]
[198.83050537 373.47808838]
[206.54205322 386.34402466]
[220.27326965 394.20306396]
[220.17988586 409.09738159]
[227.89143372 421.96331787]
[244.94703674 425.91333008]
[253.68440247 440.69262695]
[249.10762024 456.88903809]
[256.97647095 469.65936279]
[267.60299683 476.02172852]
[268.87265015 486.99880981]
[277.95532227 498.93637085]
[292.46911621 505.23403931]
[294.01797485 520.04791260]
[303.10064697 531.98541260]
[312.18331909 543.92297363]
[321.26599121 555.86053467]
[332.02191162 552.74432373]
[343.18984985 553.03576660]
[353.71847534 556.69128418]
[362.62167358 563.35150146]
[369.07061768 572.37628174]
[372.47113037 582.90643311]
[372.51824951 593.94543457]
[369.22369385 604.45361328]
[362.91299438 613.44628906]
[371.39898682 625.81512451]
[386.91345215 626.09936523]
[399.27752686 635.47534180]
[403.73696899 650.33782959]
[398.57705688 664.97186279]
[385.78182983 673.75036621]
[370.27136230 673.29785156]
[358.00970459 663.78826904]
[353.71176147 648.87829590]
[359.03012085 634.30108643]
[350.54415894 621.93225098]
[331.76406860 624.39685059]
[314.27542114 616.91113281]
[302.99728394 601.48944092]
[301.14828491 582.39093018]
[309.32843018 564.94323730]
[300.24575806 553.00567627]
[291.16308594 541.06811523]
[282.08044434 529.13055420]
[268.21630859 523.68676758]
[266.01776123 508.01904297]
[256.93508911 496.08148193]
[255.63195801 511.02478027]
[246.76850891 523.12597656]
[232.91458130 528.87652588]
[218.08694458 526.60906982]
[206.58467102 516.98114014]
[201.74270630 502.78408813]
[204.96488953 488.13427734]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 209]
[3 208]
[7 205]
[8 204]
[10 202]
[11 201]
[12 200]
[13 199]
[14 198]
[16 196]
[17 195]
[18 194]
[19 193]
[20 192]
[21 191]
[22 190]
[23 189]
[24 188]
[25 187]
[27 185]
[28 184]
[29 50]
[30 49]
[31 48]
[33 47]
[34 46]
[35 45]
[36 44]
[53 69]
[54 68]
[55 67]
[56 66]
[57 65]
[58 64]
[59 63]
[71 95]
[72 94]
[73 93]
[74 92]
[75 90]
[76 89]
[77 88]
[100 119]
[101 118]
[102 117]
[103 116]
[104 115]
[105 114]
[121 182]
[122 181]
[123 180]
[124 179]
[125 178]
[129 175]
[130 174]
[131 173]
[132 172]
[133 171]
[134 169]
[135 168]
[136 167]
[140 164]
[141 163]
[142 162]
[143 161]
[150 160]
[151 159]
[211 248]
[212 247]
[214 245]
[215 244]
[216 243]
[217 242]
[226 237]
[227 236]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
