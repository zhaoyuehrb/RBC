%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:19:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCCAAAAUGGGAAGGGAGGAGUCGCAGACGGAUUACGCGAAGGCUCUAUCCCACGAAAGGACUGGGUGCACCCCAGAACGAGGACGCGGAGCUUCCCUGUUCCAAGCAGCAACAGACUGAGAAAAUCCAAGAAAGGAGGCCCGAGGGGCUGCUGUGGCCCCAUCCUCCUGGCACCCGCGGCCCGGGCUCUGCGACGCCUUUCGCCCCACCUGCGGAAGCAGCG\
) } def
/len { sequence length } bind def

/coor [
[116.57038116 447.66516113]
[103.74532318 439.88583374]
[95.36643982 427.44421387]
[92.97939301 412.63534546]
[97.02451324 398.19107056]
[106.75560760 386.77590942]
[120.37757111 380.49563599]
[135.37756348 380.50872803]
[148.98854065 386.81277466]
[158.69825745 398.24221802]
[157.44862366 383.29437256]
[156.19900513 368.34649658]
[154.94937134 353.39865112]
[143.44607544 344.00665283]
[141.96583557 328.86517334]
[151.89503479 316.86315918]
[150.64541626 301.91528320]
[149.39578247 286.96743774]
[148.14616394 272.01959229]
[146.89653015 257.07171631]
[145.64691162 242.12387085]
[136.87622070 230.08541870]
[143.43695068 215.68864441]
[142.18731689 200.74078369]
[140.93769836 185.79292297]
[139.68806458 170.84506226]
[138.43844604 155.89721680]
[137.18881226 140.94935608]
[135.93919373 126.00149536]
[119.87108612 156.60641479]
[79.88037109 172.90158081]
[29.88528824 158.41668701]
[16.00723076 164.10874939]
[2.12917280 169.80079651]
[-11.74888515 175.49285889]
[-15.52467251 190.42770386]
[-27.23371124 200.16175842]
[-42.25168610 201.12324524]
[-54.80582428 193.15257263]
[-68.68388367 198.84463501]
[-78.27861786 212.14399719]
[-94.56397247 210.21542358]
[-100.78696442 195.04286194]
[-90.54591370 182.23455811]
[-74.37593842 184.96656799]
[-60.49788284 179.27450562]
[-57.15608215 164.78416443]
[-45.78808975 154.92349243]
[-30.61619568 153.63238525]
[-17.44094086 161.61479187]
[-3.56288385 155.92274475]
[10.31517410 150.23068237]
[24.19323158 144.53862000]
[24.24535942 137.03880310]
[9.24572182 136.93455505]
[-5.75391579 136.83029175]
[-20.75355339 136.72604370]
[-35.75318909 136.62155151]
[-35.64847183 121.62191772]
[-20.64929771 121.72640228]
[-5.64966011 121.83065796]
[9.34997749 121.93491364]
[24.34961510 122.03916931]
[24.40174294 114.53935242]
[10.60414791 108.65493774]
[-3.19344735 102.77051544]
[-16.99104309 96.88610077]
[-30.78863716 91.00168610]
[-46.15015030 95.62806702]
[-59.26245880 86.38431549]
[-60.06692123 70.36144257]
[-47.94642258 59.85083008]
[-32.19877243 62.91531372]
[-24.90422058 77.20408630]
[-11.10662556 83.08850098]
[2.69096994 88.97292328]
[16.48856544 94.85733795]
[30.28615952 100.74176025]
[35.51523209 95.36524963]
[24.76221848 84.90711212]
[14.00920486 74.44896698]
[3.25619173 63.99082947]
[-10.20219231 57.36724091]
[-8.06147003 42.52078247]
[6.71990156 39.96910858]
[13.71433258 53.23781586]
[24.46734619 63.69595718]
[35.22035980 74.15409851]
[45.97337341 84.61223602]
[51.20244217 79.23573303]
[44.93675232 65.60704041]
[38.67106247 51.97835541]
[32.40536880 38.34967041]
[26.13967896 24.72098160]
[11.23281384 19.47113228]
[4.47971392 5.18228436]
[9.88687325 -9.66824341]
[24.24632072 -16.26989555]
[39.03885269 -10.70602894]
[45.48831558 3.72241211]
[39.76836777 18.45528984]
[46.03405762 32.08397675]
[52.29974747 45.71266556]
[58.56543732 59.34135437]
[64.83113098 72.97003937]
[72.19945526 71.57082367]
[77.14397430 57.40919495]
[86.93610382 68.77239227]
[94.30442810 67.37318420]
[95.13804626 52.39636230]
[95.97166443 37.41954422]
[84.44665527 26.85033989]
[82.46300507 11.33908176]
[90.95733643 -1.79028845]
[105.91888428 -6.33848333]
[120.28326416 -0.15798420]
[127.26805878 13.83296585]
[123.57525635 29.02826881]
[110.94848633 38.25316620]
[110.11486816 53.22998428]
[109.28124237 68.20680237]
[116.41738129 70.51451111]
[121.03279877 56.24223328]
[125.64846039 41.97003555]
[139.92057800 46.58592606]
[135.30508423 60.85765457]
[130.68966675 75.12992859]
[137.82579041 77.43764496]
[145.91946411 64.80860138]
[154.01312256 52.17956161]
[150.38973999 36.79623413]
[158.77622986 23.40061569]
[174.19700623 19.94009209]
[187.50320435 28.46772766]
[190.80049133 43.92422867]
[182.13265991 57.13952637]
[166.64215088 60.27322006]
[158.54849243 72.90225983]
[150.45483398 85.53130341]
[158.46052551 98.21629333]
[173.34329224 96.34456635]
[188.22605896 94.47284698]
[203.10881042 92.60112000]
[217.99157715 90.72940063]
[222.13360596 87.58823395]
[226.61776733 86.45581055]
[230.62422180 87.12736511]
[233.53222656 89.10328674]
[248.48008728 87.85366058]
[263.42794800 86.60403442]
[278.37579346 85.35440826]
[293.32366943 84.10478210]
[308.27151489 82.85515594]
[323.21936035 81.60552979]
[329.74230957 72.91850281]
[339.76083374 69.32373810]
[349.89208984 71.77892303]
[356.85391235 79.24062347]
[371.83071899 78.40700531]
[382.34118652 66.91056824]
[397.54168701 66.27851105]
[408.43701172 76.36946869]
[423.41381836 75.53585052]
[438.39062500 74.70222473]
[448.73950195 62.75749207]
[464.50918579 61.71238708]
[476.34384155 72.18695831]
[477.22216797 87.96681976]
[466.62304688 99.69006348]
[450.83477783 100.40150452]
[439.22424316 89.67904663]
[424.24743652 90.51266479]
[409.27062988 91.34629059]
[399.56246948 102.58405304]
[384.38571167 103.64281464]
[372.66433716 93.38381958]
[357.68753052 94.21744537]
[342.31069946 105.95119476]
[324.46899414 96.55338287]
[309.52114868 97.80301666]
[294.57327271 99.05264282]
[279.62542725 100.30226898]
[264.67758179 101.55189514]
[249.72972107 102.80152130]
[234.78186035 104.05114746]
[219.86329651 105.61215973]
[204.98054504 107.48388672]
[190.09777832 109.35560608]
[175.21501160 111.22733307]
[160.33224487 113.09905243]
[150.88703918 124.75186920]
[152.13667297 139.69972229]
[153.38629150 154.64758301]
[154.63592529 169.59544373]
[155.88554382 184.54330444]
[157.13517761 199.49114990]
[158.38481140 214.43901062]
[167.24487305 227.54663086]
[160.59475708 240.87423706]
[161.84439087 255.82209778]
[163.09402466 270.76995850]
[164.34364319 285.71780396]
[165.59327698 300.66567993]
[166.84289551 315.61352539]
[178.62705994 325.80035400]
[179.68142700 340.97738647]
[169.89723206 352.14901733]
[171.14685059 367.09686279]
[172.39648438 382.04473877]
[173.64610291 396.99258423]
[180.02862549 406.93011475]
[176.86291504 416.94351196]
[180.37472534 431.52664185]
[183.88655090 446.10974121]
[187.39836121 460.69284058]
[199.08113098 472.20132446]
[194.69458008 488.00289917]
[178.75120544 491.84228516]
[167.65219116 479.76983643]
[172.81524658 464.20468140]
[169.30343628 449.62155151]
[165.79161072 435.03845215]
[162.27980042 420.45532227]
[156.65267944 434.35986328]
[145.71192932 444.62142944]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 210]
[11 209]
[12 208]
[13 207]
[16 204]
[17 203]
[18 202]
[19 201]
[20 200]
[21 199]
[23 197]
[24 196]
[25 195]
[26 194]
[27 193]
[28 192]
[29 191]
[32 53]
[33 52]
[34 51]
[35 50]
[39 46]
[40 45]
[64 78]
[65 77]
[66 76]
[67 75]
[68 74]
[90 105]
[91 104]
[92 103]
[93 102]
[94 101]
[109 121]
[110 120]
[111 119]
[128 139]
[129 138]
[130 137]
[140 190]
[141 189]
[142 188]
[143 187]
[144 186]
[148 185]
[149 184]
[150 183]
[151 182]
[152 181]
[153 180]
[154 179]
[158 177]
[159 176]
[162 173]
[163 172]
[164 171]
[212 223]
[213 222]
[214 221]
[215 220]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
