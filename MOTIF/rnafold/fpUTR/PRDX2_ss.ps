%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:20:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCUGCGGGCGCAGUGGACCCGACCGCUCCGCUCGUCCGCUCCCUCCCCCGCGCCGUGCACGUCUUGGUUCGGGCCGGGCAUAAAAGGCUUCGCGGCCCAGGGCUCACUUGGCGCUGAGAACGCGGGUCCACGCGUGUGAUCGUCCGUGCGUCUAGCCUUUGCCCACGCAGCUUUCAGUC\
) } def
/len { sequence length } bind def

/coor [
[-62.69444656 246.94158936]
[-66.65746307 232.47457886]
[-66.48040771 217.47561646]
[-62.17698669 203.10618591]
[-54.08362198 190.48269653]
[-64.64409637 201.13522339]
[-75.20457458 211.78775024]
[-85.76505280 222.44027710]
[-96.32553101 233.09280396]
[-106.88600922 243.74533081]
[-117.44648743 254.39784241]
[-121.27995300 262.71936035]
[-128.28390503 265.14163208]
[-139.02767944 275.60925293]
[-149.77145386 286.07690430]
[-160.51522827 296.54452515]
[-171.25898743 307.01214600]
[-182.00276184 317.47979736]
[-178.81927490 332.57510376]
[-184.32363892 346.98709106]
[-196.75946045 356.11694336]
[-212.15850830 357.05133057]
[-225.60699463 349.49209595]
[-232.81355286 335.85140991]
[-231.47860718 320.48190308]
[-222.02813721 308.28796387]
[-207.47773743 303.16064453]
[-192.47039795 306.73602295]
[-181.72662354 296.26837158]
[-170.98284912 285.80075073]
[-160.23908997 275.33312988]
[-149.49531555 264.86547852]
[-138.75154114 254.39784241]
[-128.09901428 243.83737183]
[-117.53853607 233.18484497]
[-106.97805786 222.53231812]
[-96.41757965 211.87979126]
[-85.85710144 201.22726440]
[-75.29662323 190.57473755]
[-64.73614502 179.92221069]
[-65.64514160 172.47750854]
[-80.01992798 176.76301575]
[-94.38819885 181.07031250]
[-104.07112122 169.61427307]
[-97.43044281 156.16430664]
[-82.44674683 156.88722229]
[-67.46313477 157.58807373]
[-68.37213135 150.14337158]
[-81.18547821 142.34477234]
[-93.99882507 134.54617310]
[-106.81217957 126.74758911]
[-122.62327576 126.18217468]
[-129.47253418 112.95580292]
[-142.28588867 105.15720367]
[-155.09924316 97.35861206]
[-167.91258240 89.56002045]
[-181.73959351 96.40235138]
[-197.06828308 94.66034698]
[-209.00733948 84.88986206]
[-213.74705505 70.20862579]
[-209.77499390 55.30136871]
[-198.35864258 44.92494202]
[-183.14089966 42.39042664]
[-168.97769165 48.50657272]
[-160.38845825 61.32174683]
[-160.11399841 76.74666595]
[-147.30064392 84.54526520]
[-134.48728943 92.34385681]
[-121.67394257 100.14244843]
[-106.77934265 100.15005493]
[-99.01358032 113.93423462]
[-86.20023346 121.73283386]
[-73.38688660 129.53143311]
[-60.57353210 137.33001709]
[-50.69612503 144.92204285]
[-44.97916794 154.26873779]
[-43.53294373 163.77391052]
[-30.45665169 156.42471313]
[-17.38035774 149.07553101]
[-4.30406427 141.72634888]
[8.77222919 134.37715149]
[10.06963539 131.07122803]
[13.04774094 128.23759460]
[17.46314621 126.66609955]
[22.72595215 127.00608826]
[36.16702652 120.34744263]
[49.60810089 113.68880463]
[63.04917526 107.03015900]
[76.49024963 100.37152100]
[89.93132019 93.71287537]
[100.85515594 83.43328857]
[108.31754303 70.42126465]
[108.47116852 54.60080338]
[121.51475525 47.40954971]
[128.97714233 34.39752579]
[136.43952942 21.38550377]
[143.90191650 8.37348175]
[151.25111389 -4.70281219]
[158.48654175 -17.84239197]
[165.72196960 -30.98197174]
[172.95739746 -44.12155151]
[180.19282532 -57.26113129]
[177.12667847 -73.00846100]
[187.63601685 -85.13006592]
[203.65896606 -84.32729340]
[212.90411377 -71.21596527]
[208.27934265 -55.85396194]
[193.33241272 -50.02570343]
[186.09696960 -36.88612366]
[178.86154175 -23.74654198]
[171.62611389 -10.60696220]
[164.39068604 2.53261733]
[163.91719055 9.92846298]
[156.91394043 15.83587170]
[149.45155334 28.84789467]
[141.98916626 41.85991669]
[134.52677917 54.87194061]
[134.90690613 69.76169586]
[121.32956696 77.88365173]
[113.86717987 90.89567566]
[122.95550537 102.82891846]
[137.48295593 99.09352875]
[152.01040649 95.35813141]
[166.53785706 91.62274170]
[181.06530762 87.88735199]
[188.88883972 74.15534973]
[204.15278625 70.05805969]
[217.80130005 78.02633667]
[221.73698425 93.33273315]
[213.62484741 106.89624786]
[198.27769470 110.66988373]
[184.80070496 102.41480255]
[170.27325439 106.15019226]
[155.74580383 109.88558960]
[141.21835327 113.62097931]
[126.69089508 117.35636902]
[126.30054474 124.84620667]
[125.51983643 139.82586670]
[125.12948608 147.31570435]
[139.18992615 152.54103088]
[148.35176086 152.60011292]
[153.44773865 157.98100281]
[167.41535950 163.44956970]
[181.38299561 168.91813660]
[197.50703430 165.92694092]
[207.95234680 178.56922913]
[201.97367859 193.83970642]
[185.72138977 196.02941895]
[175.91442871 182.88577271]
[161.94679260 177.41720581]
[147.97915649 171.94862366]
[133.96459961 166.60147095]
[119.90415955 161.37614441]
[97.62525177 136.14608765]
[96.58996582 107.15394592]
[83.14889526 113.81259155]
[69.70781708 120.47123718]
[56.26674271 127.12987518]
[42.82566833 133.78851318]
[29.38459587 140.44715881]
[16.12141609 147.45344543]
[3.04512215 154.80264282]
[-10.03117180 162.15182495]
[-23.10746574 169.50100708]
[-36.18375778 176.85020447]
[-21.85833740 172.40246582]
[-6.86192083 172.07456970]
[7.64421940 175.89189148]
[20.53678131 183.55882263]
[30.81741333 194.48165894]
[37.69001770 207.81460571]
[40.62240601 222.52517700]
[39.38750458 237.47425842]
[34.08094025 251.50424194]
[25.11363411 263.52868652]
[13.17998123 272.61648560]
[-0.79591852 278.06390381]
[-15.73182297 279.44909668]
[-30.47114944 276.66479492]
[-43.87253952 269.92663574]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 40]
[6 39]
[7 38]
[8 37]
[9 36]
[10 35]
[11 34]
[13 33]
[14 32]
[15 31]
[16 30]
[17 29]
[18 28]
[48 74]
[49 73]
[50 72]
[51 71]
[53 69]
[54 68]
[55 67]
[56 66]
[77 165]
[78 164]
[79 163]
[80 162]
[81 161]
[85 160]
[86 159]
[87 158]
[88 157]
[89 156]
[90 155]
[91 120]
[92 119]
[94 117]
[95 116]
[96 115]
[97 114]
[98 112]
[99 111]
[100 110]
[101 109]
[102 108]
[121 136]
[122 135]
[123 134]
[124 133]
[125 132]
[139 153]
[140 152]
[142 151]
[143 150]
[144 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
