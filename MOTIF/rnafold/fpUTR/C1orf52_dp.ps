%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:24:59 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (C1orf52)
} def

/sequence { (\
GGCUUCCGGCGGAGUGCUGGGUUGUCGCUCGCAGCCGUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.292327981 ubox
1 18 0.184183088 ubox
1 23 0.006281864 ubox
1 26 0.239835711 ubox
1 29 0.006886109 ubox
1 30 0.004723291 ubox
1 36 0.741060425 ubox
1 39 0.064513308 ubox
2 6 0.287953130 ubox
2 10 0.021039136 ubox
2 15 0.048100307 ubox
2 17 0.195112116 ubox
2 22 0.007617528 ubox
2 25 0.240700479 ubox
2 28 0.009087538 ubox
2 35 0.741602135 ubox
2 38 0.068101516 ubox
3 9 0.021351149 ubox
3 14 0.049803397 ubox
3 16 0.195085088 ubox
3 21 0.007559900 ubox
3 24 0.240671729 ubox
3 27 0.009069225 ubox
3 34 0.741467096 ubox
3 37 0.066341632 ubox
4 8 0.019335878 ubox
4 13 0.049071656 ubox
4 14 0.181395570 ubox
4 21 0.005819194 ubox
4 33 0.728667093 ubox
4 34 0.007245991 ubox
5 12 0.047836958 ubox
5 13 0.197377287 ubox
5 21 0.330571286 ubox
5 33 0.047835978 ubox
6 11 0.047443715 ubox
6 12 0.198149232 ubox
6 19 0.006238234 ubox
6 20 0.361670152 ubox
6 21 0.045593696 ubox
7 11 0.196724480 ubox
7 19 0.385919458 ubox
7 20 0.034192396 ubox
7 27 0.010968176 ubox
7 31 0.104284852 ubox
7 37 0.285557869 ubox
8 18 0.387430749 ubox
8 26 0.011040815 ubox
8 29 0.085684594 ubox
8 30 0.102733401 ubox
8 36 0.296614457 ubox
8 39 0.468854066 ubox
9 17 0.388108022 ubox
9 25 0.011045527 ubox
9 28 0.134355162 ubox
9 29 0.015186348 ubox
9 32 0.678938925 ubox
9 35 0.296603794 ubox
9 38 0.485859442 ubox
10 16 0.387952455 ubox
10 19 0.007624539 ubox
10 24 0.011037555 ubox
10 27 0.134830142 ubox
10 31 0.678239596 ubox
10 34 0.295917032 ubox
10 37 0.487267747 ubox
11 15 0.239363939 ubox
11 18 0.008219514 ubox
11 23 0.010091089 ubox
11 26 0.132746898 ubox
11 30 0.505001858 ubox
11 36 0.487581499 ubox
12 17 0.008557978 ubox
12 22 0.008050030 ubox
12 23 0.019375794 ubox
12 25 0.097742243 ubox
12 26 0.023709394 ubox
12 28 0.006415448 ubox
12 29 0.220436213 ubox
12 30 0.538342313 ubox
12 35 0.487113824 ubox
12 39 0.006464339 ubox
13 22 0.025798360 ubox
13 23 0.036459796 ubox
13 25 0.031266052 ubox
13 29 0.703901773 ubox
13 38 0.006559595 ubox
14 22 0.032625004 ubox
14 25 0.003215893 ubox
14 28 0.738052817 ubox
14 32 0.014543531 ubox
14 35 0.006279911 ubox
15 21 0.027467891 ubox
15 24 0.012470144 ubox
15 27 0.737165183 ubox
15 31 0.014223639 ubox
15 33 0.490078145 ubox
15 34 0.006527296 ubox
16 22 0.068880685 ubox
16 23 0.012428593 ubox
16 25 0.114014852 ubox
16 26 0.730780183 ubox
16 28 0.024855885 ubox
16 30 0.011919497 ubox
16 32 0.493204610 ubox
16 35 0.013898529 ubox
16 38 0.010819093 ubox
17 21 0.071675946 ubox
17 24 0.726127084 ubox
17 27 0.024564671 ubox
17 31 0.482492712 ubox
17 34 0.014942220 ubox
17 37 0.011300990 ubox
18 24 0.077067046 ubox
18 27 0.017982754 ubox
18 31 0.102833353 ubox
18 33 0.014616384 ubox
18 37 0.007145551 ubox
19 23 0.045828675 ubox
19 26 0.036191377 ubox
19 29 0.082126250 ubox
19 30 0.484717817 ubox
19 32 0.013876056 ubox
19 36 0.014031236 ubox
19 39 0.005851476 ubox
20 25 0.037639312 ubox
20 26 0.011441369 ubox
20 28 0.083542761 ubox
20 29 0.485966176 ubox
20 30 0.012289652 ubox
20 35 0.010292762 ubox
20 36 0.240679135 ubox
21 25 0.008838582 ubox
21 28 0.487441692 ubox
21 29 0.005981769 ubox
21 32 0.055713604 ubox
21 35 0.254133431 ubox
22 27 0.460391610 ubox
22 31 0.051788643 ubox
22 34 0.254348472 ubox
23 31 0.037126131 ubox
23 33 0.260777175 ubox
24 30 0.050976938 ubox
24 32 0.269345952 ubox
24 36 0.003762975 ubox
25 31 0.262385388 ubox
26 37 0.009308705 ubox
27 35 0.209372276 ubox
27 36 0.016697652 ubox
27 38 0.031684838 ubox
28 34 0.210243018 ubox
28 37 0.033015972 ubox
29 33 0.189412939 ubox
30 37 0.026114677 ubox
31 36 0.025841106 ubox
31 38 0.031822456 ubox
32 37 0.033148603 ubox
8 39 0.9500000 lbox
9 38 0.9500000 lbox
10 37 0.9500000 lbox
11 36 0.9500000 lbox
12 35 0.9500000 lbox
15 33 0.9500000 lbox
16 32 0.9500000 lbox
17 31 0.9500000 lbox
19 30 0.9500000 lbox
20 29 0.9500000 lbox
21 28 0.9500000 lbox
22 27 0.9500000 lbox
showpage
end
%%EOF
