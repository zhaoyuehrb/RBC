%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:25:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUGCAGAGGUCACUAGGAAGGAAAGCCUGCUGAACACAGAUUCAAUUUUCUAGCAGAACUCCAGGUCCUCUGAGUUAAAGGAAGCAUUUAUGGACGCUUAGCAGGGCCCAGAUAUUCACUAUUAAGUGUCCAGGAAGGAUCUUUCUUAUAUAAAGGUGCUUCUGAGGACUUCCAGAGUUACA\
) } def
/len { sequence length } bind def

/coor [
[-224.38449097 347.69003296]
[-231.56640625 346.83261108]
[-237.93894958 343.55795288]
[-250.62031555 351.56936646]
[-263.30166626 359.58081055]
[-275.91418457 367.70022583]
[-288.45690918 375.92700195]
[-300.99963379 384.15377808]
[-313.54238892 392.38055420]
[-326.08511353 400.60733032]
[-337.63952637 410.17263794]
[-348.06350708 420.95877075]
[-358.48748779 431.74493408]
[-362.51394653 447.04519653]
[-376.92224121 450.82015991]
[-387.34619141 461.60632324]
[-397.77017212 472.39245605]
[-408.19412231 483.17858887]
[-405.37289429 498.43704224]
[-412.08950806 512.42510986]
[-425.76132202 519.76416016]
[-441.13122559 517.63214111]
[-452.28918457 506.84881592]
[-454.94473267 491.56066895]
[-448.07678223 477.64624023]
[-434.32614136 470.45596313]
[-418.98028564 472.75463867]
[-408.55630493 461.96847534]
[-398.13232422 451.18234253]
[-387.70837402 440.39620972]
[-384.42749023 425.86743164]
[-369.27362061 421.32095337]
[-358.84963989 410.53482056]
[-348.42568970 399.74865723]
[-363.02304077 403.20071411]
[-377.77951050 400.50869751]
[-390.21759033 392.12454224]
[-398.24908447 379.45587158]
[-400.52554321 364.62960815]
[-396.66482544 350.13494873]
[-387.31506348 338.40542603]
[-374.04602051 331.41024780]
[-359.08541870 330.32385254]
[-344.94497681 335.32867432]
[-333.99874878 345.58441162]
[-328.08447266 359.36923218]
[-328.19512939 374.36880493]
[-334.31188965 388.06460571]
[-321.76916504 379.83782959]
[-309.22640991 371.61105347]
[-296.68368530 363.38427734]
[-284.14096069 355.15747070]
[-280.26300049 348.84484863]
[-271.31311035 346.89944458]
[-258.63174438 338.88803101]
[-245.95039368 330.87658691]
[-237.78158569 309.96487427]
[-214.60856628 309.07641602]
[-202.65649414 300.01287842]
[-190.70442200 290.94934082]
[-178.75234985 281.88580322]
[-166.80026245 272.82223511]
[-160.65136719 254.50439453]
[-140.63703918 252.23275757]
[-129.00137329 242.76644897]
[-117.36570740 233.30012512]
[-105.73004150 223.83380127]
[-94.09436798 214.36749268]
[-82.45870209 204.90116882]
[-70.82302856 195.43484497]
[-59.18735886 185.96853638]
[-74.18733978 185.94371033]
[-86.85835266 177.91592407]
[-93.28804779 164.36384583]
[-91.49118042 149.47184753]
[-82.02255249 137.83805847]
[-67.80573273 133.05456543]
[-53.23034668 136.59831238]
[-42.79674530 147.37513733]
[-39.72644424 162.05755615]
[-44.96690369 176.11143494]
[-32.01941681 168.53762817]
[-19.07193184 160.96382141]
[-6.12444544 153.39001465]
[6.82304049 145.81619263]
[19.77052689 138.24238586]
[32.71801376 130.66857910]
[45.66550064 123.09476471]
[58.61298370 115.52095795]
[71.56047058 107.94715118]
[72.56058502 84.04569244]
[91.76507568 67.06178284]
[119.03027344 69.24858856]
[128.69387817 57.77623367]
[138.35746765 46.30387878]
[148.02105713 34.83152390]
[157.68466187 23.35916901]
[167.34825134 11.88681507]
[177.01185608 0.41446054]
[186.67544556 -11.05789375]
[196.33903503 -22.53024864]
[206.00263977 -34.00260162]
[208.97558594 -49.54197693]
[223.09266663 -54.29141998]
[232.75627136 -65.76377106]
[225.73179626 -79.24432373]
[224.40579224 -94.38731384]
[228.98046875 -108.88355255]
[238.75820923 -120.52245331]
[252.24798584 -127.52919006]
[267.39270020 -128.83526611]
[281.88290405 -124.24153137]
[293.50894165 -114.44847870]
[300.49792480 -100.94949341]
[301.78408813 -85.80307007]
[297.17129517 -71.31892395]
[287.36294556 -59.70578003]
[273.85479736 -52.73456192]
[258.70669556 -51.46833420]
[244.22862244 -56.10017776]
[234.56501770 -44.62782288]
[232.28327942 -29.90902901]
[217.47499084 -24.33900642]
[207.81140137 -12.86665249]
[198.14779663 -1.39429832]
[188.48420715 10.07805634]
[178.82060242 21.55041122]
[169.15701294 33.02276611]
[159.49342346 44.49512100]
[149.82981873 55.96747589]
[140.16622925 67.43982697]
[130.50262451 78.91218567]
[136.36097717 92.72087097]
[151.32600403 93.74450684]
[166.29104614 94.76814270]
[181.25607300 95.79177856]
[196.22109985 96.81541443]
[211.18614197 97.83905029]
[227.40095520 92.88770294]
[236.64750671 107.09818268]
[225.55209351 119.91722870]
[210.16250610 112.80407715]
[195.19746399 111.78044128]
[180.23243713 110.75680542]
[165.26741028 109.73316956]
[150.30236816 108.70953369]
[135.33734131 107.68589783]
[131.31132507 116.37400818]
[125.25862885 123.50724030]
[117.70589447 128.64518738]
[109.26531982 131.51240540]
[100.58573914 132.01161194]
[92.30303955 130.22294617]
[84.99362183 126.39011383]
[79.13428497 120.89463043]
[66.18679810 128.46844482]
[53.23931122 136.04225159]
[40.29182434 143.61605835]
[27.34433746 151.18988037]
[14.39685059 158.76368713]
[1.44936454 166.33749390]
[-11.49812126 173.91130066]
[-24.44560814 181.48512268]
[-37.39309311 189.05892944]
[-49.72104263 197.60420227]
[-61.35671234 207.07052612]
[-72.99237823 216.53683472]
[-84.62805176 226.00315857]
[-96.26371765 235.46948242]
[-107.89939117 244.93579102]
[-119.53505707 254.40211487]
[-131.17073059 263.86843872]
[-131.65962219 274.76449585]
[-137.94625854 283.40704346]
[-147.75050354 287.07324219]
[-157.73672485 284.77432251]
[-169.68879700 293.83786011]
[-181.64086914 302.90142822]
[-193.59295654 311.96496582]
[-205.54502869 321.02850342]
[-204.86717224 328.57214355]
[-206.84185791 335.81353760]
[-211.17585754 341.85787964]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 56]
[4 55]
[5 54]
[6 52]
[7 51]
[8 50]
[9 49]
[10 48]
[11 34]
[12 33]
[13 32]
[15 30]
[16 29]
[17 28]
[18 27]
[58 180]
[59 179]
[60 178]
[61 177]
[62 176]
[64 172]
[65 171]
[66 170]
[67 169]
[68 168]
[69 167]
[70 166]
[71 165]
[81 164]
[82 163]
[83 162]
[84 161]
[85 160]
[86 159]
[87 158]
[88 157]
[89 156]
[90 155]
[93 132]
[94 131]
[95 130]
[96 129]
[97 128]
[98 127]
[99 126]
[100 125]
[101 124]
[102 123]
[104 121]
[105 120]
[133 147]
[134 146]
[135 145]
[136 144]
[137 143]
[138 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
