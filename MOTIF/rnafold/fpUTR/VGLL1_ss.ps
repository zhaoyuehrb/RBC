%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:39:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAGAGGGGCGGAAAGUAACAAGGAGGUGGGGGUACAAAUCCUCAGCUCCUGCUUCCGCAAGCACUAACCUGCUCUGAAGUGAGCCAGGCAGCUCUGGCCAUCUUUUCCCAGCCACAGAAUCAGGUGAUGGUCCAGAAUUAAGAGCUGUCACCUGUGUCAUUCACUCACA\
) } def
/len { sequence length } bind def

/coor [
[128.58030701 199.85913086]
[125.18743134 190.12454224]
[123.49861908 179.95042419]
[123.56455231 169.63287354]
[125.38481140 159.47245789]
[128.90785217 149.76539612]
[116.20175934 141.79325867]
[103.49566650 133.82110596]
[88.60249329 132.03410339]
[74.37109375 136.77406311]
[60.13969040 141.51403809]
[45.90829086 146.25399780]
[31.67689323 150.99395752]
[17.44549370 155.73393250]
[10.25945091 161.43585205]
[2.90891051 160.42764282]
[-11.40716457 164.90536499]
[-14.28345013 168.27304077]
[-17.74127007 170.32092285]
[-21.28648186 171.02929688]
[-24.47056007 170.54354858]
[-26.94125938 169.14427185]
[-41.54745483 172.55880737]
[-56.15365219 175.97334290]
[-70.75984955 179.38786316]
[-85.36604309 182.80239868]
[-97.04263306 193.47796631]
[-111.19705200 188.84098816]
[-125.80324554 192.25550842]
[-140.40943909 195.67004395]
[-155.01564026 199.08456421]
[-169.62184143 202.49909973]
[-184.22804260 205.91363525]
[-198.83422852 209.32815552]
[-210.42031860 220.93395996]
[-226.19232178 216.44216919]
[-229.92533875 200.47355652]
[-217.77917480 189.45526123]
[-202.24876404 194.72196960]
[-187.64256287 191.30743408]
[-173.03636169 187.89289856]
[-158.43017578 184.47837830]
[-143.82397461 181.06384277]
[-129.21777344 177.64930725]
[-114.61157990 174.23478699]
[-103.97972870 163.80343628]
[-88.78057861 168.19619751]
[-74.17437744 164.78167725]
[-59.56818390 161.36714172]
[-44.96198654 157.95260620]
[-30.35578918 154.53808594]
[-15.88488674 150.58929443]
[-1.56881166 146.11157227]
[12.70552826 141.50253296]
[26.93692780 136.76255798]
[41.16832733 132.02259827]
[55.39972687 127.28263092]
[69.63112640 122.54266357]
[83.86252594 117.80270386]
[71.41592407 106.59568787]
[67.84021759 87.12262726]
[58.62702942 75.28551483]
[49.41384125 63.44841003]
[40.20064926 51.61130142]
[24.48869896 49.90538025]
[14.65018654 37.53690338]
[16.52212715 21.84386826]
[28.99393272 12.13667297]
[44.66630173 14.17442608]
[54.24109268 26.74816322]
[52.03775787 42.39810944]
[61.25094604 54.23521805]
[70.46414185 66.07232666]
[79.67733002 77.90943146]
[86.99580383 76.26932526]
[101.63274384 72.98911285]
[108.95121765 71.34899902]
[112.23143768 56.71205521]
[115.51165009 42.07511139]
[118.79187012 27.43816376]
[121.93749237 12.77170467]
[124.94826508 -1.92303133]
[123.60327148 -10.99728775]
[128.15168762 -16.85893822]
[131.43190002 -31.49588394]
[134.71211243 -46.13282776]
[137.99232483 -60.76977539]
[141.27255249 -75.40672302]
[144.55276489 -90.04366302]
[139.14363098 -105.52505493]
[150.04988098 -117.77191162]
[166.05210876 -114.18572998]
[170.68858337 -98.45565796]
[159.18971252 -86.76345062]
[155.90948486 -72.12650299]
[152.62927246 -57.48955917]
[149.34906006 -42.85261154]
[146.06884766 -28.21566772]
[142.78862000 -13.57872105]
[139.64300537 1.08773828]
[136.63223267 15.78247452]
[138.37677002 22.99382019]
[133.42881775 30.71837997]
[130.14860535 45.35532761]
[126.86838531 59.99227142]
[123.58816528 74.62921906]
[129.10360718 103.67866516]
[111.46781158 121.11501312]
[124.17390442 129.08715820]
[136.88000488 137.05929565]
[152.28147888 123.71086121]
[171.22375488 116.24252319]
[191.55157471 115.49000549]
[210.95666504 121.52570343]
[227.23988342 133.65193176]
[238.56045532 150.48155212]
[243.64398193 170.09666443]
[241.92599487 190.26712036]
[255.87466431 195.78385925]
[270.23431396 189.74746704]
[284.30166626 195.54092407]
[289.96795654 209.26786804]
[303.91662598 214.78460693]
[317.86532593 220.30134583]
[331.81399536 225.81808472]
[345.76266479 231.33483887]
[359.71133423 236.85157776]
[373.66000366 242.36831665]
[387.60870361 247.88507080]
[401.55737305 253.40180969]
[415.50604248 258.91854858]
[429.45471191 264.43530273]
[440.63555908 254.04533386]
[455.21975708 249.54371643]
[470.31152344 251.82420349]
[482.91445923 260.43405151]
[490.52618408 273.66372681]
[491.63540649 288.88647461]
[486.02191162 303.07983398]
[474.80020142 313.42565918]
[460.19842529 317.86984253]
[445.11572266 315.52990723]
[432.54681396 306.87051392]
[424.98724365 293.61099243]
[423.93795776 278.38397217]
[409.98928833 272.86721802]
[396.04061890 267.35049438]
[382.09194946 261.83374023]
[368.14328003 256.31698608]
[354.19461060 250.80024719]
[340.24591064 245.28350830]
[326.29724121 239.76676941]
[312.34857178 234.25003052]
[298.39990234 228.73327637]
[284.45123291 223.21653748]
[270.92843628 229.35414124]
[256.70391846 223.95808411]
[250.35792542 209.73252869]
[236.40924072 204.21578979]
[230.75044250 212.76383972]
[223.71742249 220.22833252]
[215.51396179 226.39079285]
[206.37809753 231.07051086]
[196.57528687 234.12982178]
[186.39064026 235.47817993]
[176.12060547 235.07482910]
[166.06442261 232.92999268]
[156.51533508 229.10469055]
[147.75204468 223.70895386]
[140.03063965 216.89866638]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 110]
[7 109]
[8 108]
[9 59]
[10 58]
[11 57]
[12 56]
[13 55]
[14 54]
[16 53]
[17 52]
[22 51]
[23 50]
[24 49]
[25 48]
[26 47]
[28 45]
[29 44]
[30 43]
[31 42]
[32 41]
[33 40]
[34 39]
[61 74]
[62 73]
[63 72]
[64 71]
[77 106]
[78 105]
[79 104]
[80 103]
[81 101]
[82 100]
[84 99]
[85 98]
[86 97]
[87 96]
[88 95]
[89 94]
[118 159]
[119 158]
[122 155]
[123 154]
[124 153]
[125 152]
[126 151]
[127 150]
[128 149]
[129 148]
[130 147]
[131 146]
[132 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
