%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:28:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACAGAGAGGUGUCCUGGGCCUGACCCCACCCAUGAGCCUGGGAAUUGCUGCUGCCCCAGGAAGAGGCUCAGUGCAGAAGGAGGAAGGACAGCACAGCUGACAGCCGUGCUCAGGAAGUUUCUGGAUCCUAGGCUCAUCUCCACAGAGGAGAACACACAGGCAGCAGAGACC\
) } def
/len { sequence length } bind def

/coor [
[74.05350494 532.85552979]
[69.72527313 547.66333008]
[58.06348038 557.76312256]
[42.78935623 559.93218994]
[28.77682114 553.47827148]
[20.49722481 540.46093750]
[20.59255409 525.03387451]
[29.03239059 512.11981201]
[43.12361526 505.83959961]
[45.29509735 490.99761963]
[47.46657944 476.15563965]
[41.65325165 462.44232178]
[51.30683517 449.90762329]
[53.47831726 435.06564331]
[51.32765961 427.96664429]
[55.82635117 419.97482300]
[58.26698303 405.17471313]
[51.19698334 389.12951660]
[62.94908142 374.97460938]
[65.12056732 360.13262939]
[67.29204559 345.29061890]
[69.46353149 330.44863892]
[71.63500977 315.60665894]
[56.63807297 315.30346680]
[43.20604324 308.62658691]
[33.91027832 296.85421753]
[30.53031349 282.23999023]
[33.71318817 267.58157349]
[42.84959412 255.68510437]
[56.19049835 248.82797241]
[71.18199158 248.32287598]
[84.95417786 254.26652527]
[94.87058258 265.52108765]
[99.03290558 279.93286133]
[98.48824310 264.94274902]
[97.94357300 249.95265198]
[97.39891052 234.96253967]
[96.85424805 219.97244263]
[96.30957794 204.98233032]
[95.76491547 189.99221802]
[95.22025299 175.00210571]
[94.67558289 160.01200867]
[94.13092041 145.02189636]
[93.58625793 130.03178406]
[70.22527313 120.11694336]
[59.44919205 92.95499420]
[72.57731628 62.59193039]
[60.75343323 53.36177826]
[48.92954636 44.13162613]
[40.20568085 41.30289841]
[36.97676849 34.62494278]
[25.32243729 25.18161011]
[13.66810513 15.73827648]
[2.01377344 6.29494286]
[-13.49489498 7.75060463]
[-25.17952156 -1.99229896]
[-26.47169685 -16.78641510]
[-38.12602997 -26.22974777]
[-53.44171143 -23.07318497]
[-67.17858124 -30.54530144]
[-72.85050201 -45.11799240]
[-67.77937317 -59.91047668]
[-54.35961914 -67.93820190]
[-38.92764664 -65.41071320]
[-28.76995468 -53.52141953]
[-28.68269539 -37.88407898]
[-17.02836418 -28.44074631]
[-2.28778219 -30.24375534]
[9.66589165 -20.83289146]
[11.45710659 -5.35938883]
[23.11143875 4.08394432]
[34.76576996 13.52727795]
[46.42010117 22.97061157]
[58.15969467 32.30773926]
[69.98358154 41.53789139]
[81.80747223 50.76804352]
[89.17154694 49.34663010]
[83.22027588 35.57773972]
[77.26901245 21.80884552]
[71.31774139 8.03995132]
[62.89530563 -4.37224102]
[63.83353424 -19.34286880]
[73.73976135 -30.60637856]
[88.46800232 -33.44873047]
[101.85414124 -26.68033028]
[108.29577637 -13.13391399]
[105.09769440 1.51975977]
[104.69835663 16.51444244]
[104.29902649 31.50912666]
[103.89969635 46.50381088]
[111.26377106 45.08240128]
[118.80304718 32.11477661]
[126.34233093 19.14715576]
[133.88160706 6.17953300]
[141.42089844 -6.78808928]
[141.66816711 -22.60736275]
[154.75408936 -29.72128105]
[162.29336548 -42.68890381]
[169.83265686 -55.65652466]
[172.56658936 -72.38858795]
[189.40158081 -74.39339447]
[195.98843384 -58.77129745]
[182.80027771 -48.11724472]
[175.26098633 -35.14962006]
[167.72171021 -22.18199921]
[168.01370239 -7.29025602]
[154.38851929 0.75119281]
[146.84924316 13.71881485]
[139.30995178 26.68643761]
[131.77067566 39.65406036]
[124.23139191 52.62168121]
[134.29530334 63.74451828]
[147.95005798 57.53582764]
[161.60481262 51.32713699]
[175.25955200 45.11844635]
[188.91430664 38.90975189]
[200.83027649 26.84965134]
[215.71772766 34.96136856]
[212.04428101 51.51256561]
[195.12300110 52.56450272]
[181.46824646 58.77319336]
[167.81349182 64.98188782]
[154.15875244 71.19057465]
[140.50399780 77.39926910]
[140.99185181 103.69710541]
[127.73992920 122.84123230]
[108.57636261 129.48712158]
[109.12102509 144.47723389]
[109.66569519 159.46733093]
[110.21035767 174.45744324]
[110.75502014 189.44755554]
[111.29969025 204.43766785]
[111.84435272 219.42776489]
[112.38901520 234.41787720]
[112.93368530 249.40798950]
[113.47834778 264.39810181]
[114.02301025 279.38821411]
[121.56229401 292.35583496]
[134.31976318 300.24548340]
[147.07723999 308.13516235]
[159.83471680 316.02484131]
[172.59219360 323.91448975]
[188.47424316 321.64743042]
[200.04972839 332.75540161]
[198.43891907 348.71740723]
[184.87748718 357.28869629]
[169.76861572 351.89413452]
[164.70251465 336.67196655]
[151.94503784 328.78231812]
[139.18757629 320.89263916]
[126.43009949 313.00296021]
[113.67262268 305.11331177]
[106.87371826 308.27951050]
[117.09802246 319.25509644]
[109.81893158 332.37054443]
[95.09607697 329.50042725]
[93.27590942 314.61190796]
[86.47699738 317.77813721]
[84.30551910 332.62011719]
[82.13403320 347.46209717]
[79.96255493 362.30410767]
[77.79106903 377.14608765]
[84.86378479 387.96008301]
[82.72645569 400.29650879]
[73.06709290 407.61535645]
[70.62646484 422.41546631]
[68.32031250 437.23712158]
[66.14882660 452.07910156]
[71.80683136 466.85400391]
[62.30856705 478.32711792]
[60.13708496 493.16909790]
[57.96560287 508.01107788]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 172]
[10 171]
[11 170]
[13 168]
[14 167]
[16 166]
[17 165]
[19 162]
[20 161]
[21 160]
[22 159]
[23 158]
[34 137]
[35 136]
[36 135]
[37 134]
[38 133]
[39 132]
[40 131]
[41 130]
[42 129]
[43 128]
[44 127]
[47 76]
[48 75]
[49 74]
[51 73]
[52 72]
[53 71]
[54 70]
[57 67]
[58 66]
[91 111]
[92 110]
[93 109]
[94 108]
[95 107]
[97 105]
[98 104]
[99 103]
[112 124]
[113 123]
[114 122]
[115 121]
[116 120]
[138 152]
[139 151]
[140 150]
[141 149]
[142 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
