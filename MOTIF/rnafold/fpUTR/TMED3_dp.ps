%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:12:37 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TMED3)
} def

/sequence { (\
AAGGUGCCCGGGCCCACUUUGAGCGCGCGGCUGCGCACUGAGCCGCCGGCCCUCCCGGAAGCGCAGAGCUCCGCUGGUGCCACGUCUAUCCCCUUACAUCCUCCUAGGACCCGGUCGGUAGUCGUCGCCCCAGCCCGCCGGGGGCGCAGCGCCCGAGCCGCGGCCCUCGAGACGGGACCGAGAGCAUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
3 179 0.005296873 ubox
3 188 0.953702252 ubox
4 178 0.005303306 ubox
4 185 0.033878611 ubox
4 187 0.993987306 ubox
5 177 0.005285996 ubox
5 184 0.033803300 ubox
5 186 0.997839531 ubox
6 185 0.999204916 ubox
7 176 0.005269105 ubox
7 184 0.998704369 ubox
8 175 0.005275550 ubox
9 174 0.005277746 ubox
9 180 0.969039474 ubox
10 173 0.005224006 ubox
10 179 0.970167661 ubox
11 178 0.962280792 ubox
11 179 0.242031278 ubox
12 178 0.246589011 ubox
13 175 0.026537224 ubox
13 176 0.981160015 ubox
14 174 0.026533932 ubox
14 175 0.998645222 ubox
14 176 0.043071822 ubox
15 174 0.996624913 ubox
15 175 0.043170576 ubox
17 171 0.300988337 ubox
18 170 0.247340533 ubox
18 171 0.800229957 ubox
18 172 0.070151293 ubox
19 169 0.174302825 ubox
19 170 0.954292239 ubox
19 171 0.061215116 ubox
19 172 0.011299314 ubox
20 169 0.979299722 ubox
20 170 0.054039425 ubox
20 171 0.008775585 ubox
21 168 0.999376818 ubox
22 167 0.997616221 ubox
23 164 0.191570095 ubox
23 166 0.979559945 ubox
24 163 0.213767460 ubox
25 164 0.930935575 ubox
26 162 0.750637062 ubox
26 163 0.659777922 ubox
27 161 0.998562316 ubox
28 160 0.999971032 ubox
29 159 0.999977708 ubox
30 158 0.999995232 ubox
31 157 0.999933658 ubox
32 155 0.395950334 ubox
32 156 0.909914828 ubox
33 152 0.261187070 ubox
33 154 0.803412900 ubox
34 151 0.261517162 ubox
34 155 0.154658010 ubox
35 150 0.260486835 ubox
35 152 0.961043437 ubox
35 154 0.069386746 ubox
36 149 0.235772362 ubox
36 151 0.964231165 ubox
38 149 0.971374096 ubox
39 146 0.005713664 ubox
39 148 0.993711847 ubox
40 147 0.994894555 ubox
42 145 0.998005816 ubox
43 143 0.005403705 ubox
43 144 0.999975264 ubox
44 142 0.007448471 ubox
44 143 0.999840098 ubox
46 141 0.999818726 ubox
46 142 0.007275091 ubox
47 140 0.999960273 ubox
47 141 0.005160402 ubox
48 56 0.003340531 ubox
48 139 0.999971509 ubox
49 55 0.003355168 ubox
49 138 0.999969959 ubox
50 58 0.007106490 ubox
50 137 0.997852941 ubox
51 57 0.013588215 ubox
51 58 0.180990316 ubox
52 57 0.181391371 ubox
52 58 0.019076335 ubox
52 66 0.005910853 ubox
52 68 0.037141085 ubox
52 133 0.006299203 ubox
53 57 0.017296775 ubox
53 59 0.014732897 ubox
53 65 0.005747992 ubox
53 67 0.037571071 ubox
53 132 0.004808822 ubox
54 58 0.015352658 ubox
54 66 0.037546152 ubox
56 63 0.037922048 ubox
56 73 0.222736445 ubox
56 137 0.013695885 ubox
57 62 0.038078590 ubox
57 71 0.009063115 ubox
57 72 0.979147519 ubox
57 136 0.033221552 ubox
58 70 0.004516868 ubox
58 71 0.980111228 ubox
58 135 0.033107699 ubox
59 70 0.692259504 ubox
60 70 0.714834161 ubox
61 69 0.998249937 ubox
62 68 0.998208975 ubox
63 69 0.032594347 ubox
64 68 0.032410291 ubox
73 134 0.972848590 ubox
73 136 0.008918825 ubox
74 133 0.999550569 ubox
75 132 0.999635034 ubox
76 129 0.007184600 ubox
76 130 0.050282591 ubox
76 131 0.998686255 ubox
77 128 0.008031872 ubox
77 129 0.070546380 ubox
77 130 0.996420593 ubox
78 127 0.009235707 ubox
79 126 0.009530174 ubox
79 128 0.998614693 ubox
80 127 0.999012251 ubox
82 125 0.988111881 ubox
83 124 0.999845374 ubox
84 122 0.004439697 ubox
84 123 0.998721020 ubox
85 121 0.003173161 ubox
86 121 0.998694492 ubox
87 120 0.999585006 ubox
88 119 0.997812830 ubox
89 118 0.960754346 ubox
90 114 0.025756492 ubox
90 117 0.952248749 ubox
90 118 0.268934432 ubox
91 108 0.005062608 ubox
91 113 0.027142185 ubox
91 114 0.252306461 ubox
91 117 0.269908365 ubox
91 118 0.040887996 ubox
92 107 0.005015292 ubox
92 108 0.027279138 ubox
92 113 0.252325817 ubox
92 114 0.659271076 ubox
92 117 0.042178268 ubox
92 118 0.018253052 ubox
93 107 0.028839653 ubox
93 108 0.048632188 ubox
93 113 0.659420235 ubox
93 114 0.611373973 ubox
93 117 0.018670796 ubox
93 118 0.006678873 ubox
94 106 0.028054689 ubox
94 107 0.049203422 ubox
94 109 0.008383087 ubox
94 113 0.592113725 ubox
94 114 0.078813981 ubox
94 117 0.006973969 ubox
95 106 0.049447895 ubox
95 108 0.006182991 ubox
95 113 0.094517181 ubox
96 105 0.049096277 ubox
96 115 0.034425837 ubox
97 114 0.035183525 ubox
98 115 0.005374347 ubox
99 108 0.026024426 ubox
99 109 0.975350994 ubox
99 114 0.005223887 ubox
99 118 0.003667537 ubox
100 107 0.028441773 ubox
100 108 0.996475984 ubox
100 113 0.005250382 ubox
100 114 0.010353459 ubox
100 117 0.005022768 ubox
100 118 0.003502937 ubox
101 107 0.996288595 ubox
101 108 0.012809506 ubox
101 113 0.010365293 ubox
101 117 0.003579966 ubox
102 106 0.897544517 ubox
102 107 0.012577530 ubox
102 109 0.020179054 ubox
103 107 0.003900035 ubox
103 108 0.020568721 ubox
103 114 0.013963011 ubox
104 113 0.013977668 ubox
108 116 0.015960485 ubox
109 115 0.017436645 ubox
109 119 0.004630380 ubox
110 114 0.017776900 ubox
110 118 0.006849244 ubox
111 117 0.007002033 ubox
111 118 0.006988788 ubox
112 117 0.007378151 ubox
3 188 0.9500000 lbox
4 187 0.9500000 lbox
5 186 0.9500000 lbox
6 185 0.9500000 lbox
7 184 0.9500000 lbox
9 180 0.9500000 lbox
10 179 0.9500000 lbox
11 178 0.9500000 lbox
13 176 0.9500000 lbox
14 175 0.9500000 lbox
15 174 0.9500000 lbox
18 171 0.9500000 lbox
19 170 0.9500000 lbox
20 169 0.9500000 lbox
21 168 0.9500000 lbox
22 167 0.9500000 lbox
23 166 0.9500000 lbox
25 164 0.9500000 lbox
26 163 0.9500000 lbox
27 161 0.9500000 lbox
28 160 0.9500000 lbox
29 159 0.9500000 lbox
30 158 0.9500000 lbox
31 157 0.9500000 lbox
32 156 0.9500000 lbox
35 152 0.9500000 lbox
36 151 0.9500000 lbox
38 149 0.9500000 lbox
39 148 0.9500000 lbox
40 147 0.9500000 lbox
42 145 0.9500000 lbox
43 144 0.9500000 lbox
44 143 0.9500000 lbox
46 141 0.9500000 lbox
47 140 0.9500000 lbox
48 139 0.9500000 lbox
49 138 0.9500000 lbox
50 137 0.9500000 lbox
57 72 0.9500000 lbox
58 71 0.9500000 lbox
59 70 0.9500000 lbox
61 69 0.9500000 lbox
62 68 0.9500000 lbox
73 134 0.9500000 lbox
74 133 0.9500000 lbox
75 132 0.9500000 lbox
76 131 0.9500000 lbox
77 130 0.9500000 lbox
79 128 0.9500000 lbox
80 127 0.9500000 lbox
82 125 0.9500000 lbox
83 124 0.9500000 lbox
84 123 0.9500000 lbox
86 121 0.9500000 lbox
87 120 0.9500000 lbox
88 119 0.9500000 lbox
89 118 0.9500000 lbox
90 117 0.9500000 lbox
92 114 0.9500000 lbox
93 113 0.9500000 lbox
99 109 0.9500000 lbox
100 108 0.9500000 lbox
101 107 0.9500000 lbox
102 106 0.9500000 lbox
showpage
end
%%EOF
