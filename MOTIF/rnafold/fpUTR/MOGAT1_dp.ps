%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:06:02 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MOGAT1)
} def

/sequence { (\
CGUGGGUGCAGGCUGCAGUGGCUGGCGCCGUCCUCGCCCGGCCAGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.052077161 ubox
1 15 0.004180598 ubox
1 30 0.007847676 ubox
1 36 0.026801535 ubox
1 40 0.012470626 ubox
2 7 0.035202139 ubox
2 9 0.246538782 ubox
2 13 0.083991660 ubox
2 14 0.003342236 ubox
2 16 0.145519602 ubox
2 22 0.005921983 ubox
2 26 0.003194825 ubox
2 29 0.003600072 ubox
2 31 0.014651346 ubox
2 35 0.044679217 ubox
2 37 0.140866423 ubox
2 39 0.007872507 ubox
2 42 0.114405117 ubox
2 47 0.025835930 ubox
3 8 0.236601592 ubox
3 10 0.301995317 ubox
3 12 0.083347439 ubox
3 15 0.143818703 ubox
3 17 0.035967100 ubox
3 18 0.005142178 ubox
3 21 0.005940212 ubox
3 25 0.003190892 ubox
3 30 0.016987413 ubox
3 36 0.141092939 ubox
3 40 0.147452133 ubox
3 41 0.084399023 ubox
3 44 0.013958583 ubox
3 46 0.024665808 ubox
4 9 0.335108166 ubox
4 14 0.146377671 ubox
4 16 0.039615574 ubox
4 19 0.009030363 ubox
4 29 0.020881152 ubox
4 32 0.012218702 ubox
4 33 0.030193201 ubox
4 34 0.023556306 ubox
4 35 0.144755479 ubox
4 38 0.004020443 ubox
4 39 0.411433638 ubox
4 43 0.015588661 ubox
4 48 0.040811809 ubox
5 13 0.144676728 ubox
5 14 0.179732058 ubox
5 23 0.003205372 ubox
5 28 0.015283639 ubox
5 29 0.253543771 ubox
5 32 0.022651978 ubox
5 33 0.043462407 ubox
5 34 0.137150634 ubox
5 37 0.003296535 ubox
5 38 0.411905500 ubox
5 39 0.035327460 ubox
5 42 0.015295289 ubox
5 43 0.008904730 ubox
5 47 0.040713932 ubox
5 48 0.065764365 ubox
6 13 0.191351464 ubox
6 16 0.008784229 ubox
6 19 0.010744734 ubox
6 22 0.003212458 ubox
6 28 0.255048983 ubox
6 31 0.007029631 ubox
6 32 0.043499284 ubox
6 33 0.137011977 ubox
6 37 0.411943429 ubox
6 38 0.034907302 ubox
6 42 0.008916117 ubox
6 47 0.066487200 ubox
7 12 0.191203068 ubox
7 15 0.008696671 ubox
7 17 0.174212358 ubox
7 18 0.003860788 ubox
7 27 0.255421971 ubox
7 30 0.003880794 ubox
7 36 0.411743146 ubox
7 40 0.015000315 ubox
7 41 0.008789463 ubox
7 46 0.058654992 ubox
8 14 0.006191260 ubox
8 16 0.200630989 ubox
8 19 0.005597030 ubox
8 26 0.255634879 ubox
8 31 0.141579015 ubox
8 35 0.408279065 ubox
8 37 0.034533023 ubox
8 39 0.014502091 ubox
8 42 0.005915977 ubox
8 47 0.019582924 ubox
9 15 0.200646381 ubox
9 18 0.006432130 ubox
9 24 0.011876723 ubox
9 25 0.254016969 ubox
9 30 0.147721811 ubox
9 36 0.034546668 ubox
9 41 0.006011131 ubox
9 46 0.019674379 ubox
10 14 0.162617004 ubox
10 23 0.015620634 ubox
10 34 0.333750526 ubox
11 22 0.012057672 ubox
11 23 0.236256549 ubox
11 29 0.261314151 ubox
11 32 0.109560698 ubox
11 33 0.333409624 ubox
11 34 0.005507629 ubox
11 38 0.018239652 ubox
11 43 0.029398796 ubox
11 48 0.777737044 ubox
12 19 0.005518870 ubox
12 22 0.255285785 ubox
12 26 0.008396533 ubox
12 28 0.261846525 ubox
12 31 0.111763725 ubox
12 32 0.331777667 ubox
12 33 0.005875139 ubox
12 37 0.018324829 ubox
12 42 0.029456167 ubox
12 47 0.784410911 ubox
13 18 0.008217028 ubox
13 21 0.255497480 ubox
13 25 0.009661485 ubox
13 27 0.261463952 ubox
13 30 0.220237392 ubox
13 36 0.018214605 ubox
13 41 0.029455346 ubox
13 45 0.011364939 ubox
13 46 0.784272451 ubox
14 20 0.249171142 ubox
14 24 0.009273052 ubox
14 27 0.053689942 ubox
14 30 0.088695885 ubox
14 40 0.028731986 ubox
14 44 0.011761754 ubox
14 45 0.778259007 ubox
15 19 0.115859056 ubox
15 22 0.015643798 ubox
15 26 0.108371615 ubox
15 28 0.205212231 ubox
15 29 0.084469125 ubox
15 31 0.209850211 ubox
15 35 0.009223829 ubox
15 37 0.016783071 ubox
15 39 0.023994942 ubox
15 43 0.006274180 ubox
15 47 0.244201904 ubox
16 21 0.015701983 ubox
16 24 0.250619345 ubox
16 25 0.099240729 ubox
16 27 0.205632922 ubox
16 30 0.217665154 ubox
16 36 0.017439391 ubox
16 46 0.244939983 ubox
17 23 0.254045888 ubox
17 34 0.020650284 ubox
18 22 0.248803891 ubox
18 26 0.204220058 ubox
18 28 0.200396953 ubox
18 31 0.083480069 ubox
18 33 0.020694206 ubox
18 37 0.008446615 ubox
18 47 0.046006142 ubox
19 25 0.203268780 ubox
19 27 0.200505393 ubox
19 30 0.115427332 ubox
19 36 0.008384459 ubox
19 44 0.846394281 ubox
19 46 0.036389949 ubox
20 26 0.200850758 ubox
20 29 0.183332775 ubox
20 32 0.004740150 ubox
20 35 0.007893774 ubox
20 38 0.020549279 ubox
20 43 0.860697024 ubox
20 48 0.024158198 ubox
21 28 0.183661489 ubox
21 31 0.004891609 ubox
21 34 0.006849813 ubox
21 37 0.020567285 ubox
21 42 0.860828488 ubox
21 47 0.024449957 ubox
22 27 0.183350219 ubox
22 30 0.004959136 ubox
22 36 0.020549676 ubox
22 41 0.860822326 ubox
22 45 0.012175180 ubox
22 46 0.021573002 ubox
23 40 0.859507811 ubox
23 44 0.016804402 ubox
23 45 0.018089138 ubox
24 29 0.003273767 ubox
24 32 0.011168172 ubox
24 33 0.017665451 ubox
24 34 0.005366429 ubox
24 38 0.178642030 ubox
24 39 0.842054252 ubox
24 43 0.018069776 ubox
24 48 0.005896835 ubox
25 31 0.011254280 ubox
25 32 0.017515587 ubox
25 33 0.005430268 ubox
25 37 0.250372371 ubox
25 38 0.823527476 ubox
25 42 0.017608432 ubox
25 47 0.005974912 ubox
26 30 0.013569725 ubox
26 36 0.305575812 ubox
26 40 0.003238515 ubox
26 41 0.016884131 ubox
26 46 0.005970680 ubox
27 35 0.297526022 ubox
27 37 0.794486074 ubox
27 39 0.004498963 ubox
27 42 0.018980284 ubox
27 47 0.003906814 ubox
28 36 0.692444404 ubox
28 41 0.019392589 ubox
28 46 0.003937920 ubox
29 36 0.408317568 ubox
29 40 0.019832009 ubox
29 45 0.003946394 ubox
30 35 0.557900859 ubox
30 37 0.020297526 ubox
30 39 0.020095533 ubox
30 42 0.017754667 ubox
30 47 0.124019683 ubox
31 36 0.019234683 ubox
31 41 0.013594915 ubox
31 46 0.028292019 ubox
32 40 0.013487218 ubox
32 41 0.016044099 ubox
32 45 0.024336276 ubox
32 46 0.158904089 ubox
33 40 0.016235948 ubox
33 41 0.003766574 ubox
33 45 0.160295234 ubox
34 40 0.003379573 ubox
34 41 0.008113394 ubox
34 44 0.158927747 ubox
35 40 0.009358963 ubox
36 42 0.161194449 ubox
36 47 0.189569752 ubox
37 41 0.160127102 ubox
37 46 0.189075723 ubox
38 45 0.187737602 ubox
38 46 0.062248914 ubox
39 45 0.065652433 ubox
40 48 0.385016132 ubox
41 47 0.391251100 ubox
42 46 0.388433872 ubox
11 48 0.9500000 lbox
12 47 0.9500000 lbox
13 46 0.9500000 lbox
14 45 0.9500000 lbox
19 44 0.9500000 lbox
20 43 0.9500000 lbox
21 42 0.9500000 lbox
22 41 0.9500000 lbox
23 40 0.9500000 lbox
24 39 0.9500000 lbox
25 38 0.9500000 lbox
27 37 0.9500000 lbox
28 36 0.9500000 lbox
showpage
end
%%EOF
