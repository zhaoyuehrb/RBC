%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:04:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCUCCUCCCUUUUGUCCGGCCCGGCCCGGCCGCCGCCGCCCCCCGCGCCCGGCGCCGAGCUCCCGGGUCUCCGGGCCGGCUGUCGGUGCCGGCAGGGCGCGGAGGGGGCGGGGGCCGCGGCUCGUCCCCCCGCGGAUGAGCCGCCGCGGACGGGGCGCGGGCGGACG\
) } def
/len { sequence length } bind def

/coor [
[60.38614655 346.33615112]
[59.38484573 361.46139526]
[53.26794815 375.33074951]
[42.77410507 386.26947021]
[29.17049217 392.95657349]
[14.09981441 394.58462524]
[-0.61806840 390.95697021]
[-13.20590210 382.51171875]
[-22.14364433 370.26867676]
[-26.35202026 355.70620728]
[-25.32284546 340.58282471]
[-19.18040085 326.72476196]
[-8.66641331 315.80541992]
[4.94949961 309.14337158]
[20.02315140 307.54312134]
[23.61288643 292.97900391]
[27.20262146 278.41485596]
[30.79235649 263.85073853]
[34.38209152 249.28660583]
[32.92378998 242.01014709]
[38.17628098 234.48637390]
[42.03611755 219.99148560]
[45.89595413 205.49661255]
[49.75578690 191.00172424]
[53.48073578 176.47158813]
[57.07046890 161.90745544]
[60.66020584 147.34333801]
[64.24993896 132.77920532]
[89.07917023 92.00721741]
[82.85947418 78.35747528]
[76.63977814 64.70774078]
[70.42008972 51.05799866]
[57.65708923 41.70832443]
[59.42058182 26.91848373]
[53.20088577 13.26874352]
[46.98119354 -0.38099685]
[40.76150131 -14.03073692]
[34.54180527 -27.68047714]
[28.10976219 -34.22452927]
[28.33599472 -41.64223480]
[22.37109947 -55.40523148]
[16.40620422 -69.16822815]
[3.81920481 -78.75352478]
[5.85731077 -93.50803375]
[-0.10758384 -107.27102661]
[-6.07247829 -121.03401947]
[-12.03737354 -134.79701233]
[-18.00226784 -148.56001282]
[-23.96716309 -162.32301331]
[-29.93205643 -176.08599854]
[-35.89694977 -189.84899902]
[-42.36929703 -203.38076782]
[-49.34014130 -216.66261292]
[-56.31098938 -229.94444275]
[-63.28183746 -243.22628784]
[-70.25268555 -256.50811768]
[-77.22353363 -269.78997803]
[-84.19438171 -283.07180786]
[-91.16522980 -296.35363770]
[-98.38175964 -309.50363159]
[-105.84147644 -322.51718140]
[-113.30119324 -335.53073120]
[-121.00151825 -348.40338135]
[-128.93978882 -361.13064575]
[-136.87806702 -373.85794067]
[-144.81634521 -386.58523560]
[-152.75462341 -399.31250000]
[-167.47438049 -406.54165649]
[-168.30351257 -422.91983032]
[-154.38906860 -431.59857178]
[-140.04504395 -423.64993286]
[-140.02734375 -407.25079346]
[-132.08906555 -394.52349854]
[-124.15078735 -381.79620361]
[-116.21250916 -369.06893921]
[-108.27423096 -356.34164429]
[-103.86868286 -354.40435791]
[-100.65235901 -349.65734863]
[-100.28763580 -342.99044800]
[-92.82791901 -329.97689819]
[-85.36820221 -316.96334839]
[-81.03770447 -314.86364746]
[-78.00005341 -310.00036621]
[-77.88338470 -303.32449341]
[-70.91254425 -290.04266357]
[-63.94169235 -276.76080322]
[-56.97084427 -263.47897339]
[-49.99999619 -250.19712830]
[-43.02915192 -236.91529846]
[-36.05830383 -223.63345337]
[-29.08745575 -210.35160828]
[-26.41037369 -209.39849854]
[-23.95781326 -207.30595398]
[-22.17379189 -204.15711975]
[-21.46282578 -200.19706726]
[-22.13395691 -195.81388855]
[-16.16906166 -182.05090332]
[-10.20416737 -168.28790283]
[-4.23927259 -154.52490234]
[1.72562194 -140.76191711]
[7.69051647 -126.99891663]
[13.65541077 -113.23592377]
[19.62030602 -99.47292328]
[31.78065681 -90.87204742]
[30.16919899 -75.13311768]
[36.13409424 -61.37012482]
[42.09898758 -47.60713196]
[48.19154739 -33.90016937]
[54.41123962 -20.25043106]
[60.63093567 -6.60069084]
[66.85062408 7.04904938]
[73.07032013 20.69878960]
[85.38844299 29.07214355]
[84.06982422 44.83830643]
[90.28952026 58.48804474]
[96.50921631 72.13778687]
[102.72890472 85.78752899]
[114.57952118 94.98333740]
[129.34622192 97.61856079]
[144.11293030 100.25379181]
[158.87963867 102.88902283]
[173.64634705 105.52424622]
[188.41305542 108.15947723]
[203.17974854 110.79470825]
[217.94645691 113.42993164]
[232.71316528 116.06516266]
[247.47987366 118.70039368]
[262.24658203 121.33561707]
[275.06640625 112.09294891]
[290.65338135 114.70482635]
[299.76000977 127.62167358]
[296.98348999 143.18016052]
[283.97106934 152.14970398]
[268.44281006 149.20883179]
[259.61135864 136.10232544]
[244.84463501 133.46710205]
[230.07792664 130.83186340]
[215.31123352 128.19664001]
[200.54452515 125.56140900]
[185.77781677 122.92618561]
[171.01110840 120.29095459]
[156.24441528 117.65572357]
[141.47770691 115.02049255]
[126.71099854 112.38526917]
[111.94429779 109.75003815]
[104.60585785 122.83236694]
[114.55269623 134.06002808]
[130.27075195 138.73704529]
[133.81567383 154.74847412]
[121.54073334 165.62310791]
[106.07334900 160.17408752]
[103.32503510 144.00686646]
[93.37819672 132.77920532]
[78.81406403 136.36894226]
[75.22433472 150.93307495]
[71.63459778 165.49719238]
[68.04486084 180.06132507]
[69.02983856 189.18412781]
[64.25067139 194.86155701]
[60.39083481 209.35644531]
[56.53100204 223.85133362]
[52.67116547 238.34620667]
[48.94621658 252.87634277]
[45.35648346 267.44046021]
[41.76674652 282.00460815]
[38.17701340 296.56872559]
[34.58727646 311.13284302]
[47.19065475 319.55490112]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 167]
[16 166]
[17 165]
[18 164]
[19 163]
[21 162]
[22 161]
[23 160]
[24 159]
[25 157]
[26 156]
[27 155]
[28 154]
[29 117]
[30 116]
[31 115]
[32 114]
[34 112]
[35 111]
[36 110]
[37 109]
[38 108]
[40 107]
[41 106]
[42 105]
[44 103]
[45 102]
[46 101]
[47 100]
[48 99]
[49 98]
[50 97]
[51 96]
[52 91]
[53 90]
[54 89]
[55 88]
[56 87]
[57 86]
[58 85]
[59 84]
[60 81]
[61 80]
[62 79]
[63 76]
[64 75]
[65 74]
[66 73]
[67 72]
[118 145]
[119 144]
[120 143]
[121 142]
[122 141]
[123 140]
[124 139]
[125 138]
[126 137]
[127 136]
[128 135]
[146 153]
[147 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
