%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 19:30:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGCCUAUAAAAUGCUUCAAGUAGUCCUGUGCUCAACAUUGCUUAUCGGAGCAUUGGGAGCGCCAUUUUUGUUGGAAGACCCUGCAAACCAGUUCCUACGUCUCAAAAGACAUGUAAAUUUGCAGGAUUACUGGGACCCAGAUCACAGUUCAGAUGUGUGGGUAAACACACUGGCUAAGCAGGUAUUUGUAUUAGAAACAAAUGGUCCUUCACCAUUUAUCUUUUUAAAUAGUCAUUGCAUUAGCUGA\
) } def
/len { sequence length } bind def

/coor [
[77.52320099 129.50997925]
[66.20943451 139.35876465]
[54.89566040 149.20755005]
[43.58189011 159.05633545]
[32.26811981 168.90513611]
[21.01645279 178.82481384]
[9.82733536 188.81498718]
[12.22726250 202.37358093]
[7.65678167 215.24752808]
[-2.59184933 224.11601257]
[-15.77667141 226.74752808]
[-28.43912697 222.56066895]
[-39.75289917 232.40945435]
[-51.06666946 242.25823975]
[-62.38043976 252.10702515]
[-73.69421387 261.95581055]
[-85.00798035 271.80459595]
[-96.32175446 281.65338135]
[-107.63552094 291.50216675]
[-118.76165009 301.56243896]
[-129.69618225 311.83065796]
[-140.63070679 322.09887695]
[-151.56523132 332.36706543]
[-162.49977112 342.63528442]
[-173.43429565 352.90347290]
[-184.36882019 363.17169189]
[-185.02668762 378.73461914]
[-196.26213074 388.99227905]
[-211.09495544 388.26919556]
[-222.02949524 398.53741455]
[-226.24879456 414.38446045]
[-242.15069580 418.39215088]
[-253.37667847 406.43768311]
[-248.37841797 390.81881714]
[-232.29769897 387.60287476]
[-221.36315918 377.33465576]
[-221.15345764 362.48571777]
[-210.21057129 351.91653442]
[-194.63703918 352.23715210]
[-183.70249939 341.96896362]
[-172.76797485 331.70074463]
[-161.83345032 321.43252563]
[-150.89891052 311.16433716]
[-139.96438599 300.89611816]
[-129.02986145 290.62792969]
[-128.54692078 287.15927124]
[-126.37518311 283.74819946]
[-122.55796814 281.17913818]
[-117.48430634 280.18838501]
[-106.17053986 270.33959961]
[-94.85676575 260.49081421]
[-83.54299927 250.64202881]
[-72.22922516 240.79324341]
[-60.91545486 230.94445801]
[-49.60168457 221.09567261]
[-38.28791428 211.24688721]
[-40.24903107 194.93701172]
[-32.01163483 180.53225708]
[-16.65535164 173.81770325]
[-0.16284251 177.62586975]
[11.02627468 167.63569641]
[13.91516685 160.85379028]
[22.41933250 157.59135437]
[33.73310471 147.74256897]
[45.04687500 137.89378357]
[56.36064529 128.04499817]
[67.67441559 118.19621277]
[60.28355789 103.90553284]
[59.40307236 86.69709778]
[45.67445755 80.65350342]
[31.94583893 74.60990906]
[18.21722031 68.56631470]
[4.48860359 62.52271652]
[-11.25929070 64.04402924]
[-19.79040527 51.83463669]
[-33.51902390 45.79104233]
[-48.93301392 50.23945618]
[-61.93754196 40.84467697]
[-62.55664062 24.81357193]
[-50.31539154 14.44383621]
[-34.60423660 17.69024086]
[-27.47542763 32.06242371]
[-13.74680901 38.10601807]
[1.01912212 36.15242386]
[10.53219986 48.79409790]
[24.26081848 54.83769608]
[37.98943329 60.88129044]
[51.71805191 66.92488861]
[65.44667053 72.96848297]
[76.57279968 62.90819931]
[71.93754578 48.64235306]
[67.30228424 34.37650299]
[62.66703033 20.11065674]
[58.03177643 5.84480906]
[53.21762466 -8.36166573]
[48.22533035 -22.50652313]
[43.23303604 -36.65138245]
[38.24074173 -50.79623795]
[26.68414879 -42.77683258]
[9.71109581 -42.58368301]
[-8.07236195 -52.65915680]
[-14.79811096 -66.06678009]
[-21.52385902 -79.47440338]
[-28.24960709 -92.88201904]
[-42.23678207 -101.44303894]
[-41.54588318 -117.82762146]
[-26.88764572 -125.18072510]
[-13.34120941 -115.93810272]
[-14.84198570 -99.60777283]
[-8.11623764 -86.20014954]
[-1.39048922 -72.79252625]
[5.33525896 -59.38490677]
[12.49674320 -61.61272049]
[26.81971169 -66.06834412]
[33.98119354 -68.29615784]
[31.91434097 -83.15307617]
[29.84748650 -98.00999451]
[19.34785843 -110.60721588]
[25.26073647 -125.90328979]
[41.50345993 -128.16293335]
[51.36690521 -115.06161499]
[44.70440674 -100.07685089]
[46.77126312 -85.21993256]
[48.83811569 -70.36300659]
[52.38560104 -55.78853226]
[57.37789536 -41.64367294]
[62.37018967 -27.49881744]
[67.36248016 -13.35395813]
[71.18572998 -10.53038025]
[73.29017639 -5.28563595]
[72.29762268 1.20955431]
[76.93287659 15.47540188]
[81.56813812 29.74124908]
[86.20339203 44.00709915]
[90.83864594 58.27294540]
[112.33888245 57.77442169]
[131.98336792 67.97328949]
[140.95193481 55.94978714]
[149.92051697 43.92628098]
[158.88908386 31.90277672]
[167.85766602 19.87927246]
[168.46339417 14.74540138]
[170.73764038 10.74550724]
[173.97541809 8.32298946]
[177.39784241 7.58015156]
[186.81320190 -4.09678316]
[196.22857666 -15.77371788]
[205.64395142 -27.45065117]
[202.45068359 -42.75872421]
[209.88984680 -56.51346207]
[224.44889832 -62.22029877]
[239.25349426 -57.18464279]
[247.31336975 -43.78417587]
[244.82287598 -28.34618568]
[232.95796204 -18.16002274]
[217.32087708 -18.03528214]
[207.90551758 -6.35834694]
[198.49014282 5.31858730]
[189.07476807 16.99552155]
[179.88116455 28.84784698]
[170.91258240 40.87135315]
[161.94401550 52.89485550]
[152.97543335 64.91835785]
[144.00686646 76.94186401]
[145.31953430 84.32609558]
[158.95457458 78.07424164]
[170.61204529 68.63478088]
[185.44456482 70.87003326]
[193.80244446 83.32579041]
[190.24821472 97.89862823]
[177.09420776 105.10778046]
[162.89921570 100.26416779]
[147.94488525 99.09456635]
[149.25755310 106.47879791]
[161.82048035 114.67471313]
[174.38339233 122.87062836]
[186.94631958 131.06654358]
[199.50924683 139.26245117]
[212.07215881 147.45837402]
[224.68632507 155.57519531]
[237.35124207 163.61259460]
[250.01615906 171.64999390]
[262.68109131 179.68739319]
[275.06976318 173.67774963]
[288.70239258 174.56071472]
[300.03149414 181.99951172]
[306.16189575 193.96539307]
[305.59027100 207.28984070]
[318.15319824 215.48576355]
[330.71609497 223.68167114]
[343.27902222 231.87759399]
[352.15161133 233.93711853]
[355.94741821 240.25625610]
[368.40637207 248.60939026]
[380.86529541 256.96252441]
[393.32424927 265.31567383]
[405.78317261 273.66879272]
[418.24212646 282.02194214]
[430.70104980 290.37506104]
[450.87054443 290.84182739]
[458.58209229 308.58956909]
[471.24700928 316.62695312]
[483.91192627 324.66436768]
[496.57684326 332.70175171]
[509.24179077 340.73916626]
[521.90667725 348.77658081]
[534.57159424 356.81396484]
[550.47894287 354.73162842]
[561.92456055 365.97338867]
[560.12835693 381.91558838]
[546.46820068 390.32867432]
[531.42303467 384.75891113]
[526.53424072 369.47888184]
[513.86932373 361.44149780]
[501.20437622 353.40408325]
[488.53945923 345.36669922]
[475.87454224 337.32928467]
[463.20962524 329.29187012]
[450.54470825 321.25448608]
[440.84426880 324.36608887]
[430.81790161 321.57907104]
[423.82598877 313.57781982]
[422.34793091 302.83401489]
[409.88897705 294.48086548]
[397.43005371 286.12774658]
[384.97109985 277.77459717]
[372.51217651 269.42147827]
[360.05322266 261.06832886]
[347.59429932 252.71519470]
[335.08309937 244.44050598]
[322.52020264 236.24459839]
[309.95727539 228.04867554]
[297.39434814 219.85276794]
[282.23907471 226.19122314]
[266.13290405 222.19842529]
[255.48179626 209.25801086]
[254.64367676 192.35231018]
[241.97875977 184.31491089]
[229.31384277 176.27751160]
[216.64892578 168.24011230]
[209.33602905 167.31204224]
[203.87625122 160.02128601]
[191.31332397 151.82537842]
[178.75039673 143.62945557]
[166.18748474 135.43354797]
[153.62455750 127.23763275]
[141.06164551 119.04171753]
[127.50138855 133.34161377]
[109.90125275 139.97044373]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 67]
[2 66]
[3 65]
[4 64]
[5 63]
[6 61]
[7 60]
[12 56]
[13 55]
[14 54]
[15 53]
[16 52]
[17 51]
[18 50]
[19 49]
[20 45]
[21 44]
[22 43]
[23 42]
[24 41]
[25 40]
[26 39]
[29 36]
[30 35]
[69 89]
[70 88]
[71 87]
[72 86]
[73 85]
[75 83]
[76 82]
[90 135]
[91 134]
[92 133]
[93 132]
[94 131]
[95 128]
[96 127]
[97 126]
[98 125]
[101 112]
[102 111]
[103 110]
[104 109]
[115 124]
[116 123]
[117 122]
[137 164]
[138 163]
[139 162]
[140 161]
[141 160]
[145 159]
[146 158]
[147 157]
[148 156]
[174 247]
[175 246]
[176 245]
[177 244]
[178 243]
[179 242]
[180 240]
[181 239]
[182 238]
[183 237]
[188 233]
[189 232]
[190 231]
[191 230]
[193 229]
[194 228]
[195 227]
[196 226]
[197 225]
[198 224]
[199 223]
[201 219]
[202 218]
[203 217]
[204 216]
[205 215]
[206 214]
[207 213]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
