%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 12:31:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAGGGUCUUGUUUUUUGUCUUUGGAGUCCUUUCCUUGAUGUUCACAGUUCCUCCAGCCAGAAGCUUCAUUUCUAAUGAUGAAUGUCCUUCAGAAUAUUAUCAUUGCAGACUGAAGUGCAAUGCUGAUGAACAUGCAAUUAGAUACUGUGCUGACUUCAGCAUCUGCUGCAAACUGAAGAUCAUUGAAAUUGACGGACAAAAGAAGUGGUGA\
) } def
/len { sequence length } bind def

/coor [
[65.16487122 641.86871338]
[50.11421967 643.04370117]
[35.30491638 640.11328125]
[21.83590889 633.29504395]
[10.70668793 623.09490967]
[2.74311376 610.26977539]
[-1.46386218 595.77136230]
[-1.60205448 580.67553711]
[2.33879161 566.10253906]
[10.06623840 553.13378906]
[21.00685883 542.73162842]
[34.34878540 535.66790771]
[49.10196304 532.46691895]
[49.98227692 517.49279785]
[50.86259079 502.51861572]
[51.74290466 487.54449463]
[52.62321854 472.57034302]
[53.50353241 457.59619141]
[54.38384628 442.62203979]
[55.26416016 427.64788818]
[56.14447784 412.67376709]
[57.02479172 397.69961548]
[44.25764084 405.57360840]
[30.09104919 400.64331055]
[24.97103310 386.54418945]
[32.67293549 373.67248535]
[47.51760864 371.51940918]
[58.55883026 381.67208862]
[60.53491592 366.80279541]
[62.51100159 351.93353271]
[54.95131683 336.09524536]
[66.30296326 321.59487915]
[68.06055450 306.69821167]
[69.81814575 291.80151367]
[71.57574463 276.90484619]
[62.17739868 265.40673828]
[63.74763870 250.27435303]
[75.87164307 240.49446106]
[77.62924194 225.59779358]
[79.38683319 210.70111084]
[81.14442444 195.80444336]
[74.95171356 182.25823975]
[84.25272369 169.45973206]
[86.01032257 154.56306458]
[87.76791382 139.66638184]
[89.52550507 124.76971436]
[76.49861908 113.07436371]
[73.43051147 95.83871460]
[81.62130737 80.36642456]
[74.83107758 66.99134064]
[68.04084778 53.61626053]
[61.25061798 40.24118042]
[48.10439301 31.43848801]
[49.24211884 16.58739853]
[42.45189285 3.21231842]
[35.77827072 -3.02129865]
[35.66178131 -10.40931797]
[29.06862640 -23.88263702]
[22.47547150 -37.35595703]
[7.25176716 -37.34175110]
[-6.41274595 -43.91199112]
[-15.83100605 -55.71523285]
[-19.17682076 -70.37696838]
[-15.83878899 -84.97721100]
[-6.53120279 -96.63201141]
[-13.12435722 -110.10532379]
[-19.71751213 -123.57864380]
[-26.31066704 -137.05197144]
[-32.90382004 -150.52528381]
[-39.49697495 -163.99859619]
[-46.18884659 -177.42315674]
[-52.97907639 -190.79824829]
[-59.76930618 -204.17332458]
[-72.91552734 -212.97601318]
[-71.77780151 -227.82710266]
[-78.56803131 -241.20217896]
[-85.35826111 -254.57727051]
[-92.14849091 -267.95233154]
[-98.93872070 -281.32742310]
[-105.72895050 -294.70251465]
[-112.51918030 -308.07757568]
[-119.30941010 -321.45266724]
[-126.09963989 -334.82775879]
[-141.28987122 -337.38964844]
[-151.93446350 -348.27752686]
[-154.10118103 -363.16943359]
[-147.16645813 -376.32418823]
[-153.95669556 -389.69927979]
[-168.69953918 -396.02603149]
[-172.80595398 -411.53463745]
[-163.12586975 -424.32821655]
[-147.08499146 -424.59262085]
[-136.98852539 -412.12503052]
[-140.58160400 -396.48950195]
[-133.79138184 -383.11441040]
[-119.07912445 -380.94934082]
[-108.33575439 -370.41159058]
[-105.82810974 -355.39279175]
[-112.72456360 -341.61798096]
[-105.93433380 -328.24288940]
[-99.14410400 -314.86782837]
[-92.35387421 -301.49273682]
[-85.56364441 -288.11764526]
[-78.77341461 -274.74258423]
[-71.98318481 -261.36749268]
[-65.19295502 -247.99241638]
[-58.40272141 -234.61734009]
[-45.74217987 -226.77131653]
[-46.39422607 -210.96354675]
[-39.60399628 -197.58847046]
[-32.81376648 -184.21339417]
[-26.98427773 -179.67318726]
[-26.02365685 -170.59175110]
[-19.43050194 -157.11843872]
[-12.83734798 -143.64512634]
[-6.24419308 -130.17179871]
[0.34896123 -116.69847870]
[6.94211578 -103.22516632]
[21.85607910 -103.42315674]
[35.43286896 -97.10016632]
[44.95699310 -85.46177673]
[48.49794006 -70.78247833]
[45.30131531 -55.96125793]
[35.94879150 -43.94910812]
[42.54194641 -30.47579193]
[49.13509750 -17.00247192]
[55.82697296 -3.57791138]
[62.61720276 9.79716969]
[75.27774048 17.64318466]
[74.62569427 33.45095062]
[81.41592407 46.82603073]
[88.20615387 60.20111084]
[94.99638367 73.57619476]
[111.64318848 75.75768280]
[123.75226593 87.38716888]
[138.43658447 84.32595062]
[153.12089539 81.26473999]
[167.80520630 78.20352936]
[175.51110840 67.86219025]
[187.80307007 65.61383820]
[197.99468994 72.12712860]
[212.72235107 69.28180695]
[227.45001221 66.43648529]
[242.17768860 63.59116745]
[231.39434814 53.16429138]
[232.67298889 38.21888733]
[245.07075500 29.77524185]
[259.44592285 34.05944443]
[265.19869995 47.91245270]
[258.08755493 61.11915207]
[272.98422241 59.36155701]
[287.88092041 57.60396194]
[302.77758789 55.84637070]
[317.67425537 54.08877563]
[330.48699951 43.85326004]
[345.65686035 50.08280182]
[347.57839966 66.36898804]
[334.27490234 75.95797729]
[319.43185425 68.98545074]
[304.53518677 70.74304199]
[289.63848877 72.50063324]
[274.74182129 74.25823212]
[259.84515381 76.01582336]
[245.02301025 78.31883240]
[230.29533386 81.16415405]
[215.56767273 84.00947571]
[200.84001160 86.85479736]
[188.21987915 99.05042267]
[170.86640930 92.88784027]
[156.18209839 95.94905090]
[141.49778748 99.01026154]
[126.81348419 102.07147980]
[124.67272949 110.70094299]
[119.83528900 118.16082001]
[112.82987213 123.63573456]
[104.42218018 126.52730560]
[102.66458893 141.42398071]
[100.90699005 156.32064819]
[99.14939880 171.21733093]
[105.21639252 185.82904053]
[96.04109955 197.56204224]
[94.28350830 212.45870972]
[92.52590942 227.35537720]
[90.76831818 242.25205994]
[100.28332520 254.58503723]
[98.28866577 269.66735840]
[86.47241211 278.66244507]
[84.71482086 293.55911255]
[82.95722961 308.45578003]
[81.19963074 323.35247803]
[88.56058502 333.94210815]
[86.79144287 346.31213379]
[77.38026428 353.90963745]
[75.40418243 368.77890015]
[73.42810059 383.64816284]
[71.99893951 398.57992554]
[71.11862183 413.55407715]
[70.23830414 428.52819824]
[69.35799408 443.50234985]
[68.47767639 458.47650146]
[67.59736633 473.45065308]
[66.71704865 488.42480469]
[65.83673859 503.39895630]
[64.95642090 518.37310791]
[64.07611084 533.34722900]
[78.35258484 538.25488281]
[90.77493286 546.83319092]
[100.42134094 558.44567871]
[106.57596588 572.23052979]
[108.78210449 587.16491699]
[106.87604523 602.14056396]
[100.99922943 616.04614258]
[91.58775330 627.84985352]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 205]
[14 204]
[15 203]
[16 202]
[17 201]
[18 200]
[19 199]
[20 198]
[21 197]
[22 196]
[28 195]
[29 194]
[30 193]
[32 190]
[33 189]
[34 188]
[35 187]
[38 184]
[39 183]
[40 182]
[41 181]
[43 179]
[44 178]
[45 177]
[46 176]
[49 133]
[50 132]
[51 131]
[52 130]
[54 128]
[55 127]
[57 126]
[58 125]
[59 124]
[65 118]
[66 117]
[67 116]
[68 115]
[69 114]
[70 113]
[71 111]
[72 110]
[73 109]
[75 107]
[76 106]
[77 105]
[78 104]
[79 103]
[80 102]
[81 101]
[82 100]
[83 99]
[87 95]
[88 94]
[135 172]
[136 171]
[137 170]
[138 169]
[141 167]
[142 166]
[143 165]
[144 164]
[150 163]
[151 162]
[152 161]
[153 160]
[154 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
