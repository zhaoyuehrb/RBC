%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 17:55:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUGGUUCGAGAUUCUCCCCGGACUCUCCGUCAUGGGCGUGUGCUUGUUGAUUCCAGGACUGGCUACUGCGUACAUCCACAGGUUCACUAACGGGGGCAAGGAAAAAAGGGUUGCUCAUUUUGGGUAUCACUGGAGUCUGAUGGAAAGAGAUAGGCGCAUCUCUGGAGUUGAUCGUUACUAUGUGUCAAAGGGUUUGGAGAACAUUGAUUAA\
) } def
/len { sequence length } bind def

/coor [
[89.90379333 459.03765869]
[74.65547943 458.36569214]
[61.21284485 451.13668823]
[52.24494553 438.78601074]
[49.53236008 423.76586914]
[53.61367416 409.05853271]
[63.67853928 397.58413696]
[77.72856903 391.62097168]
[78.38896942 376.63552856]
[79.04937744 361.65008545]
[79.70977783 346.66461182]
[69.49351501 335.88668823]
[69.94978333 320.67990112]
[81.32392883 310.03723145]
[81.98432922 295.05178833]
[82.64472961 280.06631470]
[83.30513000 265.08087158]
[83.96553802 250.09541321]
[84.62593842 235.10995483]
[82.12035370 231.04653931]
[82.13922882 225.36639404]
[85.53209686 219.69616699]
[86.63213348 204.73655701]
[87.73217010 189.77694702]
[88.83220673 174.81733704]
[89.93224335 159.85772705]
[91.03227997 144.89811707]
[92.13231659 129.93850708]
[78.28543091 119.27805328]
[73.13916016 103.73729706]
[77.30195618 89.04862976]
[88.15925598 79.95137787]
[85.09804535 65.26706696]
[72.16072083 56.59161758]
[69.26539612 41.65602875]
[77.61583710 29.37573242]
[74.55462646 14.69142151]
[71.49341583 0.00711156]
[66.67954254 -7.75316191]
[68.49671173 -14.91516590]
[65.65139008 -29.64283180]
[62.80606842 -44.37049866]
[59.96074677 -59.09816360]
[57.11542892 -73.82582855]
[54.27010727 -88.55349731]
[51.42478561 -103.28116608]
[48.57946396 -118.00882721]
[45.73414612 -132.73649597]
[42.88882446 -147.46415710]
[40.04350281 -162.19183350]
[25.37442398 -171.72468567]
[22.20197105 -188.58549500]
[32.00951767 -202.24877930]
[28.94830513 -216.93309021]
[25.88709068 -231.61740112]
[22.82587814 -246.30171204]
[19.76466370 -260.98602295]
[16.48821831 -275.62380981]
[12.99724388 -290.21191406]
[9.50627041 -304.80004883]
[6.01529741 -319.38815308]
[2.52432370 -333.97625732]
[-10.89677525 -323.56622314]
[-30.72104073 -321.75857544]
[-44.47156906 -327.75216675]
[-60.69731903 -325.37368774]
[-70.65639496 -338.40243530]
[-64.10376740 -353.43557739]
[-47.78020477 -355.00827026]
[-38.47799683 -341.50268555]
[-24.72746468 -335.50912476]
[-18.48380852 -339.66442871]
[-31.92465401 -346.32354736]
[-32.87801361 -361.29321289]
[-20.39051819 -369.60360718]
[-6.94981766 -362.94421387]
[-5.99649239 -347.97509766]
[0.24716559 -352.13043213]
[0.02696841 -367.12881470]
[-0.19322878 -382.12719727]
[-11.25004005 -393.09918213]
[-11.25969410 -408.31280518]
[-0.73143387 -418.78616333]
[-0.95163101 -433.78454590]
[-1.17182815 -448.78292847]
[-9.11087894 -462.46804810]
[-1.56124616 -475.30752563]
[-4.81568718 -483.84002686]
[-1.67296398 -490.52731323]
[-1.67296398 -505.52731323]
[-1.67296398 -520.52734375]
[-1.67296398 -535.52734375]
[-14.05794144 -544.68804932]
[-18.62069130 -559.21508789]
[-13.81138134 -573.47460938]
[-1.67296398 -582.06512451]
[-1.67296398 -597.06512451]
[-1.67296398 -612.06512451]
[-1.67296398 -627.06512451]
[-1.67296398 -642.06512451]
[-1.67296398 -657.06512451]
[-15.25484180 -664.12139893]
[-23.99225807 -676.68786621]
[-25.87741852 -691.87683105]
[-20.47712898 -706.19799805]
[-9.03233337 -716.36041260]
[5.82703590 -720.02893066]
[20.68640518 -716.36041260]
[32.13119888 -706.19799805]
[37.53149033 -691.87683105]
[35.64633179 -676.68786621]
[26.90891457 -664.12139893]
[13.32703590 -657.06512451]
[13.32703590 -642.06512451]
[13.32703590 -627.06512451]
[13.32703590 -612.06512451]
[13.32703590 -597.06512451]
[13.32703590 -582.06512451]
[25.46545410 -573.47460938]
[30.27476311 -559.21508789]
[25.71201324 -544.68804932]
[13.32703590 -535.52734375]
[13.32703590 -520.52734375]
[13.32703590 -505.52731323]
[13.32703590 -490.52731323]
[13.43713760 -475.52770996]
[21.36043739 -462.91540527]
[13.82655525 -449.00314331]
[14.04675293 -434.00476074]
[14.26694965 -419.00637817]
[25.09813309 -408.84658813]
[25.53510284 -393.63925171]
[14.80515480 -382.34738159]
[15.02535248 -367.34899902]
[15.24554920 -352.35061646]
[17.11243820 -337.46725464]
[20.60341263 -322.87911987]
[24.09438515 -308.29101562]
[27.58535957 -293.70291138]
[31.07633209 -279.11477661]
[34.60383224 -275.89825439]
[36.14956665 -270.43243408]
[34.44897461 -264.04724121]
[37.51018906 -249.36293030]
[40.57139969 -234.67861938]
[43.63261414 -219.99430847]
[46.69382858 -205.30999756]
[58.35345078 -199.82833862]
[64.82414246 -188.46272278]
[63.54925919 -175.25100708]
[54.77117157 -165.03715515]
[57.61648941 -150.30947876]
[60.46181107 -135.58181763]
[63.30713272 -120.85414886]
[66.15245056 -106.12648010]
[68.99777222 -91.39881897]
[71.84309387 -76.67115021]
[74.68841553 -61.94348526]
[77.53373718 -47.21582031]
[80.37905884 -32.48815155]
[83.22437286 -17.76048660]
[86.17772675 -3.05410194]
[89.23893738 11.63020897]
[92.30014801 26.31451797]
[104.86187744 34.23529434]
[108.17556763 49.08366394]
[99.78235626 62.20585251]
[102.84356689 76.89015961]
[123.40298462 86.29698944]
[128.64292908 111.73870850]
[141.25090027 119.86515808]
[153.85887146 127.99160004]
[166.46684265 136.11804199]
[179.07481384 144.24449158]
[191.74209595 152.27818298]
[204.46798706 160.21865845]
[217.19389343 168.15914917]
[233.59303284 168.17970276]
[241.53918457 182.52511597]
[232.85803223 196.43804932]
[216.48001099 195.60607910]
[209.25341797 180.88505554]
[196.52751160 172.94456482]
[183.80160522 165.00407410]
[176.46450806 164.13032532]
[170.94836426 156.85246277]
[158.34039307 148.72601318]
[145.73242188 140.59956360]
[133.12445068 132.47312927]
[120.51648712 124.34667969]
[107.09192657 131.03854370]
[105.99188995 145.99815369]
[104.89185333 160.95776367]
[103.79181671 175.91737366]
[102.69178009 190.87698364]
[101.59174347 205.83659363]
[100.49170685 220.79620361]
[99.61138916 235.77035522]
[98.95098877 250.75581360]
[98.29058838 265.74127197]
[97.63018799 280.72671509]
[96.96978760 295.71218872]
[96.30937958 310.69763184]
[106.70321655 322.29962158]
[105.81999969 337.48757935]
[94.69522858 347.32501221]
[94.03482819 362.31048584]
[93.37442780 377.29592896]
[92.71402740 392.28137207]
[106.18502045 399.45739746]
[115.20148468 411.77267456]
[117.97320557 426.78201294]
[113.94983673 441.50531006]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 209]
[9 208]
[10 207]
[11 206]
[14 203]
[15 202]
[16 201]
[17 200]
[18 199]
[19 198]
[22 197]
[23 196]
[24 195]
[25 194]
[26 193]
[27 192]
[28 191]
[32 168]
[33 167]
[36 164]
[37 163]
[38 162]
[40 161]
[41 160]
[42 159]
[43 158]
[44 157]
[45 156]
[46 155]
[47 154]
[48 153]
[49 152]
[50 151]
[53 147]
[54 146]
[55 145]
[56 144]
[57 143]
[58 140]
[59 139]
[60 138]
[61 137]
[62 136]
[64 71]
[65 70]
[78 135]
[79 134]
[80 133]
[83 130]
[84 129]
[85 128]
[87 126]
[89 125]
[90 124]
[91 123]
[92 122]
[96 118]
[97 117]
[98 116]
[99 115]
[100 114]
[101 113]
[170 190]
[171 189]
[172 188]
[173 187]
[174 186]
[175 184]
[176 183]
[177 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
