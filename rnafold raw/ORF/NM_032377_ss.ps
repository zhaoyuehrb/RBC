%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 07:41:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGGGCGCAGAAAGUCAAAACGAAAGCCGCCUCCCAAGAAGAAGAUGACAGGCACCCUCGAGACCCAGUUCACCUGCCCCUUCUGCAACCACGAGAAAUCCUGUGAUGUGAAAAUGGACCGUGCCCGCAACACCGGAGUCAUCUCUUGUACCGUGUGCCUAGAGGAAUUCCAGACGCCCAUAACGUAUCUGUCAGAACCCGUGGAUGUGUACAGUGAUUGGAUAGACGCCUGCGAGGCGGCCAAUCAGUAG\
) } def
/len { sequence length } bind def

/coor [
[-13.05725861 301.80203247]
[-20.22677994 297.28140259]
[-26.34824181 291.41918945]
[-39.30746841 298.97290039]
[-52.26669693 306.52658081]
[-65.22592163 314.08029175]
[-78.18515015 321.63400269]
[-91.14437103 329.18771362]
[-95.30194855 346.19314575]
[-110.18569946 354.74990845]
[-126.32485199 349.97756958]
[-139.18928528 357.69161987]
[-152.05371094 365.40567017]
[-148.71121216 380.14624023]
[-150.08666992 395.17791748]
[-156.03285217 409.02966309]
[-165.95587158 420.34994507]
[-178.87445068 428.03842163]
[-193.51702881 431.35296631]
[-208.44680786 429.98120117]
[-222.20283508 424.07003784]
[-233.44290161 414.20993042]
[-246.30732727 421.92395020]
[-259.17175293 429.63800049]
[-263.11712646 444.70690918]
[-276.27337646 452.34677124]
[-290.61495972 448.49261475]
[-294.48910522 460.77667236]
[-305.34042358 466.94116211]
[-317.09603882 464.16226196]
[-330.05526733 471.71597290]
[-343.01449585 479.26968384]
[-355.97372437 486.82339478]
[-360.10589600 501.84213257]
[-373.35598755 509.31805420]
[-387.64862061 505.28613281]
[-400.60784912 512.83984375]
[-401.17535400 528.25677490]
[-410.00656128 540.90637207]
[-424.28341675 546.75231934]
[-439.45025635 543.92907715]
[-450.66738892 533.33758545]
[-454.35546875 518.35754395]
[-449.33761597 503.76901245]
[-437.21505737 494.22717285]
[-421.85601807 492.77676392]
[-408.16156006 499.88058472]
[-395.20233154 492.32690430]
[-391.66705322 477.90338135]
[-378.63217163 470.05825806]
[-363.52743530 473.86416626]
[-350.56820679 466.31045532]
[-337.60897827 458.75674438]
[-324.64974976 451.20303345]
[-316.75527954 435.51718140]
[-298.32897949 435.62817383]
[-294.97308350 421.16189575]
[-282.03662109 413.15548706]
[-266.88580322 416.77355957]
[-254.02136230 409.05953979]
[-241.15693665 401.34548950]
[-244.55990601 386.78591919]
[-243.29432678 371.86718750]
[-237.47161865 358.05139160]
[-227.65040588 346.69644165]
[-214.78302002 338.92260742]
[-200.12306213 335.50195312]
[-185.10339355 336.78173828]
[-171.19599915 342.64916992]
[-159.76774597 352.54122925]
[-146.90332031 344.82717896]
[-134.03887939 337.11315918]
[-132.69543457 324.31390381]
[-124.10335541 314.47296143]
[-111.22460175 311.32284546]
[-98.69808197 316.22848511]
[-85.73885345 308.67477417]
[-72.77962494 301.12106323]
[-59.82040024 293.56738281]
[-46.86117172 286.01367188]
[-33.90194702 278.45996094]
[-36.34983826 259.63232422]
[-30.28964806 241.57670593]
[-16.89515877 227.95370483]
[1.16738367 221.54927063]
[20.26989555 223.70500183]
[27.74299622 210.69912720]
[35.21609497 197.69325256]
[34.84821701 182.80319214]
[48.43224335 174.69239807]
[55.90534210 161.68652344]
[63.37844467 148.68064880]
[70.85153961 135.67477417]
[78.32464600 122.66890717]
[69.04376221 94.95900726]
[86.63671875 71.62531281]
[83.67611694 56.92038345]
[73.39868927 49.15623856]
[71.22401428 36.86711884]
[77.77918243 26.72083855]
[75.00140381 11.98028469]
[72.22362518 -2.76026917]
[62.06456375 -14.88891411]
[67.31113434 -28.82888412]
[64.53335571 -43.56943893]
[61.75557327 -58.30999374]
[51.59651184 -70.43863678]
[56.84308243 -84.37860870]
[54.06529999 -99.11916351]
[51.28752136 -113.85971832]
[48.50974274 -128.60026550]
[34.64255142 -135.30902100]
[27.46852684 -148.73982239]
[29.55399513 -163.64334106]
[39.89162827 -174.33312988]
[37.11384583 -189.07368469]
[34.33606720 -203.81423950]
[25.46113396 -218.25970459]
[36.88525009 -230.78671265]
[52.08520508 -223.27687073]
[49.07662201 -206.59201050]
[51.85440063 -191.85145569]
[54.63218307 -177.11090088]
[68.15148163 -170.91683960]
[75.51826477 -157.79455566]
[73.72463226 -142.67382812]
[63.25029755 -131.37805176]
[66.02807617 -116.63749695]
[68.80585480 -101.89694214]
[71.58363342 -87.15638733]
[81.54401398 -76.08208466]
[76.49613190 -61.08777237]
[79.27391052 -46.34721756]
[82.05168915 -31.60666466]
[92.01206207 -20.53236198]
[86.96417999 -5.53804874]
[89.74195862 9.20250511]
[92.51973724 23.94305992]
[104.65621185 36.63459396]
[98.38104248 53.95978546]
[101.34164429 68.66471100]
[104.37279510 65.09432220]
[107.99347687 61.83509064]
[112.17103577 58.95915222]
[121.78111267 47.44192505]
[131.39117432 35.92469406]
[141.00125122 24.40746689]
[143.74018860 6.18555450]
[160.45791626 0.81092805]
[169.92424011 -10.82474136]
[179.39056396 -22.46041107]
[188.85687256 -34.09608078]
[194.16255188 -50.19844437]
[211.10438538 -49.55770111]
[215.17864990 -33.10058212]
[200.49253845 -24.62976074]
[191.02622986 -12.99409103]
[181.55990601 -1.35842216]
[172.09358215 10.27724743]
[173.02171326 22.32115746]
[165.25379944 32.08901215]
[152.51847839 34.01753616]
[142.90840149 45.53476715]
[133.29833984 57.05199432]
[123.68827057 68.56922150]
[127.50527954 75.02526093]
[140.41735840 67.39124298]
[153.32955933 59.75743866]
[160.96315002 72.66976929]
[148.05137634 80.30332184]
[135.13929749 87.93733978]
[138.95629883 94.39337921]
[153.67932129 91.52413177]
[168.40234375 88.65489197]
[183.12538147 85.78564453]
[195.19071960 75.55147552]
[209.16299438 80.71139526]
[223.88601685 77.84214783]
[231.30186462 64.07482910]
[245.85122681 58.34333038]
[260.66433716 63.35389328]
[268.74688721 76.74068451]
[266.28256226 92.18287659]
[254.43493652 102.38912201]
[238.79808044 102.54035950]
[226.75526428 92.56517792]
[212.03222656 95.43441772]
[201.01998901 105.46336365]
[185.99461365 100.50866699]
[171.27159119 103.37791443]
[156.54856873 106.24716187]
[141.82554626 109.11640167]
[138.31501770 116.03752136]
[133.71905518 122.00585938]
[128.26292419 126.86379242]
[122.19194031 130.50296021]
[115.76126862 132.86618042]
[109.22564697 133.94723511]
[102.82962799 133.78872681]
[96.79852295 132.47808838]
[91.33052063 130.14199829]
[83.85741425 143.14787292]
[76.38431549 156.15374756]
[68.91121674 169.15962219]
[61.43811798 182.16551208]
[61.27147293 197.98583984]
[48.22196960 205.16635132]
[40.74887085 218.17222595]
[33.27577209 231.17810059]
[42.73084641 242.62948608]
[47.68723679 256.57962036]
[47.57753754 271.33776855]
[42.44632721 285.12661743]
[32.94104004 296.29635620]
[46.52507019 304.40716553]
[46.15718842 319.29721069]
[53.63029099 332.30310059]
[61.10338974 345.30895996]
[68.57648468 358.31484985]
[76.04959106 371.32070923]
[83.52268982 384.32659912]
[90.99578857 397.33245850]
[99.25862885 397.97531128]
[106.51934814 401.77334595]
[111.64130402 408.04885864]
[113.85560608 415.74325562]
[112.87596893 423.59533691]
[108.93347931 430.34796143]
[115.75163269 443.70883179]
[122.56978607 457.06967163]
[129.38793945 470.43054199]
[136.20610046 483.79141235]
[148.79129028 495.15139771]
[141.35919189 510.38952637]
[124.65917969 507.46618652]
[122.84523010 490.60958862]
[116.02706909 477.24871826]
[109.20891571 463.88784790]
[102.39076233 450.52697754]
[95.57260895 437.16610718]
[76.36745453 427.16790771]
[77.98991394 404.80557251]
[70.51681519 391.79968262]
[63.04371262 378.79382324]
[55.57061386 365.78793335]
[48.09751511 352.78207397]
[40.62441254 339.77618408]
[33.15131378 326.77032471]
[20.10181236 319.58981323]
[19.93516541 303.76947021]
[11.70690250 305.80261230]
[3.23831129 306.15032959]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 81]
[4 80]
[5 79]
[6 78]
[7 77]
[8 76]
[11 72]
[12 71]
[13 70]
[22 61]
[23 60]
[24 59]
[27 56]
[30 54]
[31 53]
[32 52]
[33 51]
[36 48]
[37 47]
[86 209]
[87 208]
[88 207]
[90 205]
[91 204]
[92 203]
[93 202]
[94 201]
[96 141]
[97 140]
[100 138]
[101 137]
[102 136]
[104 134]
[105 133]
[106 132]
[108 130]
[109 129]
[110 128]
[111 127]
[115 123]
[116 122]
[117 121]
[144 165]
[145 164]
[146 163]
[147 162]
[149 159]
[150 158]
[151 157]
[152 156]
[172 192]
[173 191]
[174 190]
[175 189]
[177 187]
[178 186]
[214 250]
[216 248]
[217 247]
[218 246]
[219 245]
[220 244]
[221 243]
[222 242]
[228 240]
[229 239]
[230 238]
[231 237]
[232 236]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
