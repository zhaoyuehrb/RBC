%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 07:10:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCCGUCCUGACGCCGCUGCUGCUGCGGGGCUUGACAGGCUCGGCCCGGCGGCUCCCAGUGCCGCGCGCCAAGAUCCAUUCGUUGCCGCCGGAGGGGAAGCUUGGGAUCAUGGAAUUGGCCGUUGGGCUUACCUCCUGCUUCGUGACCUUCCUCCUGCCAGCGGGCUGGAUCCUGUCACACCUGGAGACCUACAGGAGGCCAGAGUGA\
) } def
/len { sequence length } bind def

/coor [
[79.05947876 133.27848816]
[77.38823700 118.37237549]
[69.93495178 119.20814514]
[66.17864990 133.73020935]
[62.42235184 148.25225830]
[70.65802002 161.74111938]
[66.86229706 177.08283997]
[53.28712082 185.17543030]
[37.98640060 181.21771240]
[30.03778076 167.55773926]
[34.15703964 152.29971313]
[47.90029144 144.49595642]
[51.65659332 129.97390747]
[55.41289139 115.45184326]
[42.13504791 108.47339630]
[32.30446625 119.80298615]
[22.47388458 131.13258362]
[19.21337700 139.66526794]
[12.41161537 142.55625916]
[2.41344333 153.73823547]
[-7.58472872 164.92021179]
[-17.58290100 176.10218811]
[-20.40525246 192.25663757]
[-35.89744186 197.63476562]
[-48.12243271 186.70399475]
[-44.50419998 170.70898438]
[-28.76487541 166.10401917]
[-18.76670265 154.92204285]
[-8.76853085 143.74006653]
[1.22964084 132.55809021]
[11.14429188 121.30200195]
[20.97487259 109.97240448]
[30.80545425 98.64281464]
[65.47032166 82.44280243]
[95.00001526 93.41753387]
[95.89282990 78.44412994]
[96.78564453 63.47072220]
[97.67845917 48.49731827]
[98.57127380 33.52391052]
[99.46409607 18.55050468]
[100.35691071 3.57709932]
[91.73541260 -12.69408226]
[101.96307373 -26.95458412]
[102.63285828 -41.93962479]
[103.30264282 -56.92466354]
[103.97242737 -71.90969849]
[104.64221191 -86.89473724]
[105.31199646 -101.87977600]
[105.98178864 -116.86481476]
[106.65157318 -131.84985352]
[97.33668518 -143.60710144]
[82.59572601 -146.38272095]
[67.85475922 -149.15832520]
[53.11380005 -151.93394470]
[38.37283707 -154.70954895]
[26.39365387 -144.65802002]
[10.75615597 -144.70986938]
[-1.15610778 -154.84062195]
[-3.71853137 -170.26683044]
[4.27878332 -183.70472717]
[19.05974960 -188.80934143]
[33.64524460 -183.17042542]
[41.14844894 -169.45051575]
[55.88941193 -166.67489624]
[70.63037109 -163.89929199]
[85.37133789 -161.12368774]
[100.11229706 -158.34806824]
[107.18940735 -171.57359314]
[96.70190430 -182.29797363]
[86.21440125 -193.02235413]
[71.03392792 -197.47924805]
[67.66729736 -211.98838806]
[57.17979431 -222.71276855]
[46.69229126 -233.43714905]
[36.12524414 -244.08314514]
[25.47923660 -254.65019226]
[9.49550724 -256.02859497]
[0.72779173 -269.46386719]
[5.90193176 -284.64962769]
[21.04876900 -289.93667603]
[34.54894638 -281.26922607]
[36.04628372 -265.29620361]
[46.69229126 -254.72915649]
[53.65407181 -252.24813843]
[57.41667175 -243.92463684]
[67.90417480 -233.20025635]
[78.39167786 -222.47589111]
[92.82200623 -218.78607178]
[96.93878174 -203.50985718]
[107.42628479 -192.78547668]
[117.91378021 -182.06109619]
[136.03794861 -186.58003235]
[150.62467957 -180.74543762]
[159.58537292 -192.77481079]
[168.45626831 -204.87057495]
[177.23687744 -217.03202820]
[186.01747131 -229.19348145]
[194.70730591 -241.41996765]
[203.30586243 -253.71080017]
[211.90441895 -266.00164795]
[220.50299072 -278.29248047]
[229.10154724 -290.58331299]
[230.67247009 -306.32635498]
[244.30809021 -312.31961060]
[252.90664673 -324.61044312]
[261.50521851 -336.90130615]
[263.07614136 -352.64431763]
[276.71173096 -358.63760376]
[285.31030273 -370.92843628]
[286.48147583 -389.30532837]
[302.66067505 -396.10238647]
[311.07528687 -408.51989746]
[313.29873657 -417.37957764]
[319.70877075 -421.05834961]
[328.30734253 -433.34918213]
[336.90588379 -445.64001465]
[331.17547607 -461.55410767]
[336.01171875 -477.58880615]
[349.31906128 -487.48208618]
[365.73480225 -487.49392700]
[374.14944458 -499.91140747]
[382.56405640 -512.32891846]
[390.97866821 -524.74639893]
[391.61746216 -541.13311768]
[406.25225830 -548.53277588]
[419.82800293 -539.33325195]
[418.37918091 -522.99822998]
[403.39617920 -516.33178711]
[394.98153687 -503.91427612]
[386.56692505 -491.49679565]
[378.15231323 -479.07928467]
[383.83697510 -466.99926758]
[382.80200195 -453.58016968]
[375.21109009 -442.33526611]
[362.95837402 -436.26159668]
[349.19674683 -437.04144287]
[340.59817505 -424.75061035]
[331.99960327 -412.45977783]
[323.49276733 -400.10528564]
[315.07815552 -387.68777466]
[317.05206299 -375.75335693]
[310.14331055 -365.33926392]
[297.60113525 -362.32986450]
[289.00256348 -350.03903198]
[288.04669189 -335.17514038]
[273.79605103 -328.30273438]
[265.19747925 -316.01190186]
[256.59890747 -303.72106934]
[255.64303589 -288.85714722]
[241.39239502 -281.98474121]
[232.79382324 -269.69390869]
[224.19526672 -257.40307617]
[215.59669495 -245.11224365]
[206.99813843 -232.82139587]
[205.73960876 -225.53869629]
[198.17892456 -220.41287231]
[189.39833069 -208.25141907]
[180.61772156 -196.08996582]
[179.25090027 -188.82679749]
[171.61474609 -183.81411743]
[162.65405273 -171.78474426]
[168.98912048 -149.15121460]
[151.77539062 -128.51023865]
[121.63661194 -131.18006897]
[120.96682739 -116.19503021]
[120.29703522 -101.20999146]
[119.62725067 -86.22495270]
[118.95746613 -71.23991394]
[118.28768158 -56.25487518]
[117.61789703 -41.26983643]
[116.94811249 -26.28479958]
[124.87705231 -17.14923859]
[124.44168091 -4.65947485]
[115.33031464 4.46991539]
[114.43750000 19.44332123]
[113.54468536 34.41672516]
[112.65187073 49.39013290]
[111.75904846 64.36354065]
[110.86623383 79.33694458]
[109.97341919 94.31034851]
[113.07752991 108.98564911]
[119.95693970 122.31507874]
[126.83635712 135.64451599]
[133.81480408 148.92236328]
[140.89190674 162.14788818]
[147.96902466 175.37341309]
[155.04612732 188.59893799]
[170.28807068 190.83262634]
[181.16500854 201.48840332]
[183.65238953 216.33013916]
[177.00297546 229.63139343]
[184.08007812 242.85691833]
[198.28823853 251.04595947]
[198.02980042 267.44308472]
[183.57064819 275.18029785]
[169.78509521 266.29827881]
[170.85455322 249.93402100]
[163.77745056 236.70849609]
[149.02192688 234.86122131]
[138.05380249 224.55763245]
[135.22282410 209.59637451]
[141.82060242 195.67604065]
[134.74348450 182.45051575]
[127.66638184 169.22499084]
[120.58927917 155.99946594]
[114.66181946 151.58505249]
[113.50692749 142.52392578]
[106.62751007 129.19448853]
[99.74810028 115.86506653]
[92.29481506 116.70083618]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 14]
[4 13]
[5 12]
[15 33]
[16 32]
[17 31]
[19 30]
[20 29]
[21 28]
[22 27]
[35 180]
[36 179]
[37 178]
[38 177]
[39 176]
[40 175]
[41 174]
[43 171]
[44 170]
[45 169]
[46 168]
[47 167]
[48 166]
[49 165]
[50 164]
[51 67]
[52 66]
[53 65]
[54 64]
[55 63]
[68 91]
[69 90]
[70 89]
[72 87]
[73 86]
[74 85]
[75 83]
[76 82]
[93 161]
[94 160]
[95 158]
[96 157]
[97 156]
[98 154]
[99 153]
[100 152]
[101 151]
[102 150]
[104 148]
[105 147]
[106 146]
[108 144]
[109 143]
[111 140]
[112 139]
[114 138]
[115 137]
[116 136]
[120 131]
[121 130]
[122 129]
[123 128]
[181 209]
[182 208]
[183 207]
[184 205]
[185 204]
[186 203]
[187 202]
[191 198]
[192 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
