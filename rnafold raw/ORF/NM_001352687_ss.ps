%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 14:23:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACCUCAGUUUCAACACAGUUGUCCUUAGUCCUCAUGUCACUGCUUUUGGUGCUGCCUGUUGUGGAAGCAGUAGAAGCCGGUGAUGCAAUCGCCCUUUUGUUAGGUGUGGUUCUCAGCAUUACAGGCAUUUGUGCCUGCUUGGGGGUAUAUGCACGAAAAAGAAAUGGACAGAUGUGA\
) } def
/len { sequence length } bind def

/coor [
[87.60963440 470.24737549]
[88.43537140 485.35278320]
[84.55090332 499.97351074]
[76.33679199 512.67718506]
[64.59777832 522.21923828]
[50.48392487 527.66485596]
[35.37796783 528.48046875]
[20.75983047 524.58618164]
[8.06165314 516.36358643]
[-1.47252786 504.61816406]
[-6.90865088 490.50064087]
[-7.71413946 475.39416504]
[-3.81008077 460.77862549]
[4.42104578 448.08596802]
[16.17283821 438.55966187]
[30.29397583 433.13299561]
[45.40101242 432.33761597]
[49.26233673 417.84313965]
[53.12366486 403.34866333]
[56.98498917 388.85415649]
[52.78471756 374.56405640]
[63.81372833 363.22070312]
[67.67504883 348.72622681]
[71.53637695 334.23175049]
[75.39769745 319.73724365]
[79.25902557 305.24276733]
[83.12035370 290.74829102]
[64.10800171 275.74746704]
[54.82241058 253.31695557]
[57.68278122 229.15020752]
[72.01739502 209.41188049]
[94.22023773 199.16523743]
[93.95989990 184.16749573]
[93.69956207 169.16976929]
[93.43922424 154.17202759]
[93.17887878 139.17428589]
[92.91854095 124.17654419]
[67.23905945 101.81356049]
[84.42217255 62.69171906]
[72.18069458 54.02302933]
[59.93921661 45.35433960]
[47.69773865 36.68564987]
[35.45625687 28.01695824]
[23.21477890 19.34826660]
[10.97330093 10.67957592]
[-1.34294689 2.11744761]
[-13.73303509 -6.33747435]
[-26.12312508 -14.79239655]
[-38.51321411 -23.24731827]
[-50.90330124 -31.70223999]
[-63.29338837 -40.15716171]
[-79.05363464 -41.54473114]
[-85.20521545 -55.10966110]
[-97.59530640 -63.56458282]
[-109.98538971 -72.01950073]
[-122.37548065 -80.47442627]
[-138.13572693 -81.86199188]
[-144.28730774 -95.42692566]
[-156.67739868 -103.88184357]
[-172.15892029 -100.70414734]
[-185.30682373 -109.47389984]
[-188.32064819 -124.98815918]
[-179.41238403 -138.04260254]
[-163.86712646 -140.89224243]
[-150.90760803 -131.84645081]
[-148.22247314 -116.27193451]
[-135.83238220 -107.81700897]
[-120.95836639 -107.03419495]
[-113.92056274 -92.86451721]
[-101.53047180 -84.40959167]
[-89.14038086 -75.95467377]
[-76.75028992 -67.49974823]
[-61.87627411 -66.71693420]
[-54.83846664 -52.54724884]
[-42.44837952 -44.09232712]
[-30.05829048 -35.63740540]
[-17.66820145 -27.18248558]
[-5.27811384 -18.72756195]
[7.11197519 -10.27264118]
[14.42901325 -9.09633636]
[19.64199066 -1.56190240]
[31.88347054 7.10678816]
[44.12495041 15.77547932]
[56.36642838 24.44417000]
[68.60790253 33.11286163]
[80.84938812 41.78155136]
[93.09086609 50.45024109]
[107.65018463 46.84106445]
[114.42522430 33.45828247]
[120.73170471 19.84842300]
[126.56203461 6.02788591]
[132.39236450 -7.79265165]
[138.22270203 -21.61318970]
[144.05302429 -35.43372726]
[149.88336182 -49.25426483]
[155.59352112 -63.12487793]
[161.18310547 -77.04452515]
[166.77268982 -90.96417236]
[160.33689880 -105.39871979]
[166.07080078 -120.12616730]
[180.57258606 -126.40899658]
[195.23858643 -120.51970673]
[201.36773682 -105.95230865]
[195.32371521 -91.34938049]
[180.69233704 -85.37458801]
[175.10275269 -71.45494080]
[169.51316833 -57.53529739]
[169.93952942 -50.13658142]
[163.70388794 -43.42393494]
[157.87356567 -29.60339737]
[152.04322815 -15.78285885]
[146.21290588 -1.96232176]
[140.38256836 11.85821533]
[134.55224609 25.67875290]
[135.50492859 28.34235573]
[135.44540405 31.54864502]
[134.15974426 34.90860748]
[131.58070374 37.96247482]
[127.80800629 40.23332214]
[121.03296661 53.61610413]
[125.31403351 59.77422714]
[137.63041687 51.21230316]
[146.19213867 63.52883530]
[133.87615967 72.09047699]
[138.15722656 78.24859619]
[153.06185913 76.55989075]
[167.96650696 74.87118530]
[182.87113953 73.18247986]
[197.77578735 71.49377441]
[212.68041992 69.80506134]
[225.54034424 59.62889099]
[240.68124390 65.92849731]
[242.52746582 82.22338867]
[229.17977905 91.75077820]
[214.36912537 84.70970154]
[199.46449280 86.39840698]
[184.55984497 88.08712006]
[169.65521240 89.77582550]
[154.75056458 91.46453094]
[139.84593201 93.15323639]
[133.73394775 110.56845093]
[121.57624054 121.23274994]
[107.91628265 123.91619873]
[108.17662048 138.91394043]
[108.43695831 153.91168213]
[108.69730377 168.90942383]
[108.95764160 183.90716553]
[109.21797943 198.90490723]
[116.21897125 200.43916321]
[122.91346741 202.98721313]
[129.15565491 206.49226379]
[134.80970764 210.87666321]
[139.75286865 216.04365540]
[143.87797546 221.87951660]
[147.09591675 228.25604248]
[149.33744812 235.03337097]
[150.55473328 242.06303406]
[150.72239685 249.19123840]
[149.83796692 256.26220703]
[147.92196655 263.12161255]
[145.01744080 269.61987305]
[141.18893433 275.61553955]
[136.52113342 280.97827148]
[131.11692810 285.59164429]
[125.09519196 289.35580444]
[118.58812714 292.18954468]
[111.73838806 294.03207397]
[104.69596100 294.84426880]
[97.61483765 294.60958862]
[93.75351715 309.10409546]
[89.89218903 323.59857178]
[86.03086090 338.09307861]
[82.16954041 352.58755493]
[78.30821228 367.08203125]
[82.23229980 382.40887451]
[71.47947693 392.71548462]
[67.61814880 407.20996094]
[63.75682449 421.70446777]
[59.89550018 436.19894409]
[72.60468292 444.40454102]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 179]
[18 178]
[19 177]
[20 176]
[22 174]
[23 173]
[24 172]
[25 171]
[26 170]
[27 169]
[32 148]
[33 147]
[34 146]
[35 145]
[36 144]
[37 143]
[39 87]
[40 86]
[41 85]
[42 84]
[43 83]
[44 82]
[45 81]
[46 79]
[47 78]
[48 77]
[49 76]
[50 75]
[51 74]
[53 72]
[54 71]
[55 70]
[56 69]
[58 67]
[59 66]
[88 120]
[89 119]
[90 114]
[91 113]
[92 112]
[93 111]
[94 110]
[95 109]
[96 107]
[97 106]
[98 105]
[125 140]
[126 139]
[127 138]
[128 137]
[129 136]
[130 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
