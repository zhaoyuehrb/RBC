%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sat Sep 12 08:57:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACGACUGAAAUUGGUUGGUGGAAGCUGACUUUCCUCCGGAAAAAGAAAUCCACUCCCAAAGUGCUGUAUGAGAUCCCUGACACCUAUGCCCAAACAGAGGGAGAUGCAGAACCCCCGAGGCCUGACGCUGGAGGCCCCAACAGCGACUUUAACACCCGCCUGGAGAAGAUUGUGGACAAGAGCACAAAGGGCAAGCACGUCAAGGUCUCCAACUCAGGACGCUUCAAGGAGAAGAAGAAAGUGAGAGCCACG\
CUGGCAGAGAACCCUAACCUCUUUGAUGAUCACGAGGAAGGACGGUCAUCAAAGUGA\
) } def
/len { sequence length } bind def

/coor [
[305.39648438 1059.25769043]
[290.42825317 1060.23327637]
[275.81329346 1056.85644531]
[262.79010010 1049.41357422]
[252.46237183 1038.53527832]
[245.70526123 1025.14343262]
[243.09141541 1010.37286377]
[244.84234619 995.47540283]
[250.80964661 981.71343994]
[260.48764038 970.25323486]
[273.05618286 962.06597900]
[287.45016479 957.84545898]
[302.44982910 957.94927979]
[316.78399658 962.36877441]
[329.23794556 970.72930908]
[338.75833130 982.32574463]
[335.32623291 967.72369385]
[331.89413452 953.12158203]
[328.46203613 938.51953125]
[325.02993774 923.91748047]
[321.59783936 909.31536865]
[317.03295898 903.55377197]
[318.20535278 894.54949951]
[314.91998291 879.91375732]
[298.23483276 868.34637451]
[291.33752441 851.04705811]
[294.84381104 834.46551514]
[305.79879761 823.81646729]
[300.35540771 809.83898926]
[288.52691650 800.78717041]
[290.72879028 785.11993408]
[285.28540039 771.14245605]
[279.84201050 757.16497803]
[274.39859009 743.18750000]
[268.95520020 729.21002197]
[263.51181030 715.23260498]
[251.68333435 706.18072510]
[253.88520813 690.51348877]
[248.44181824 676.53601074]
[240.87254333 675.58349609]
[234.02632141 672.21740723]
[221.79446411 680.89965820]
[209.56260681 689.58190918]
[209.52595520 705.09893799]
[200.34844971 717.61108398]
[185.55902100 722.30712891]
[170.84452820 717.38134766]
[161.86297607 704.72784424]
[162.06796265 689.21209717]
[171.38064575 676.80029297]
[186.22013855 672.26495361]
[200.88034058 677.35003662]
[213.11219788 668.66778564]
[225.34405518 659.98553467]
[225.40905762 644.89379883]
[234.91532898 632.68383789]
[231.48323059 618.08178711]
[228.05113220 603.47967529]
[224.61901855 588.87762451]
[209.94323730 580.61560059]
[205.72557068 563.96124268]
[215.06047058 549.13684082]
[211.48197937 534.56994629]
[207.90348816 520.00305176]
[204.32499695 505.43612671]
[200.74650574 490.86923218]
[197.02198792 476.33898926]
[193.15182495 461.84686279]
[189.28166199 447.35473633]
[172.49191284 441.74768066]
[162.37301636 427.03167725]
[163.16110229 409.03173828]
[174.72845459 395.01269531]
[170.56817627 380.60116577]
[166.40788269 366.18963623]
[162.24760437 351.77813721]
[157.39945984 346.25274658]
[158.11866760 337.20104980]
[154.10324097 322.74850464]
[143.24130249 312.55694580]
[147.00198364 297.18920898]
[142.98655701 282.73663330]
[138.97113037 268.28408813]
[134.95570374 253.83154297]
[120.25749207 251.29614258]
[108.06754303 242.59472656]
[100.83478546 229.40957642]
[100.04075623 214.33013916]
[105.89643097 200.34449768]
[117.28977966 190.24731445]
[113.27435303 175.79476929]
[109.25892639 161.34220886]
[105.24349976 146.88964844]
[101.22807312 132.43710327]
[92.93347168 136.26977539]
[82.99954224 137.79577637]
[72.09327698 136.48562622]
[61.03167343 132.00393677]
[50.72591782 124.24848175]
[42.11597061 113.37348938]
[36.10006332 99.79497528]
[33.46385956 84.17710114]
[21.49893951 75.13051605]
[9.53401947 66.08393097]
[-6.14025354 63.93270874]
[-11.62589550 50.08507538]
[-26.43254280 54.72650146]
[-41.12876129 49.74646759]
[-50.06356049 37.05989838]
[-49.80132294 21.54504013]
[-40.44288635 9.16767025]
[-25.58676147 4.68714094]
[-10.94542885 9.82630634]
[-2.14878225 22.60905457]
[-2.57931042 38.12015533]
[12.23915100 39.62430191]
[18.58060455 54.11900711]
[30.54552460 63.16559219]
[42.51044464 72.21218109]
[48.13577652 67.25177765]
[59.38644791 57.33096695]
[65.01178741 52.37056351]
[57.53352356 39.36765671]
[50.05526733 26.36474609]
[42.57700729 13.36183643]
[35.09875107 0.35892746]
[19.65569305 -1.15489566]
[8.07418156 -11.48195648]
[4.80753946 -26.65129089]
[11.11185932 -40.82997894]
[24.56299973 -48.56602478]
[39.98872375 -46.88476181]
[51.45752716 -36.43267059]
[54.55941772 -21.22879410]
[48.10165787 -7.11933136]
[55.57991791 5.88357782]
[63.05817413 18.88648796]
[70.53643799 31.88939667]
[78.01469421 44.89230728]
[92.36195374 40.51552963]
[91.30892944 25.55253601]
[90.25590515 10.58954430]
[81.69492340 3.98880720]
[78.22323608 -6.01733017]
[80.75002289 -16.07724380]
[88.21623230 -22.95832825]
[87.46376801 -37.93944168]
[86.71130371 -52.92055893]
[72.79255676 -59.28663635]
[63.43575668 -71.39897919]
[60.79102707 -86.47425842]
[65.46611023 -101.04827881]
[76.38670349 -111.77204895]
[91.04334259 -116.18131256]
[106.06803131 -113.26286316]
[118.00820160 -103.68733215]
[124.12010193 -89.65511322]
[122.99925995 -74.39070129]
[114.90322876 -61.40174484]
[101.69242096 -53.67301941]
[102.44488525 -38.69190598]
[103.19734955 -23.71079063]
[114.82601166 -8.22429943]
[105.21890259 9.53652191]
[106.27191925 24.49951553]
[107.32494354 39.46250534]
[114.65099335 41.06844711]
[117.86286926 26.41635513]
[121.07499695 11.76431465]
[135.72697449 14.97668076]
[132.51496887 29.62823486]
[129.30308533 44.28032684]
[136.62913513 45.88626862]
[143.84487915 32.73587036]
[151.06062317 19.58547020]
[158.27636719 6.43507195]
[165.49212646 -6.71532679]
[158.75244141 -20.69232178]
[161.54853821 -35.95539856]
[172.80522156 -46.63559341]
[188.19409180 -48.62615585]
[201.79780579 -41.16166687]
[208.38545227 -27.11238098]
[205.42396545 -11.88053417]
[194.05207825 -1.32308078]
[178.64251709 0.50042152]
[171.42677307 13.65081978]
[164.21102905 26.80121803]
[156.99526978 39.95161819]
[149.77952576 53.10201645]
[149.81742859 107.81060791]
[115.68062592 128.42167664]
[119.69605255 142.87422180]
[123.71147919 157.32678223]
[127.72690582 171.77934265]
[131.74232483 186.23188782]
[146.71141052 189.00466919]
[158.94233704 197.96520996]
[166.04083252 211.29306030]
[166.64625549 226.31951904]
[160.69201660 240.06201172]
[149.40824890 249.81611633]
[153.42367554 264.26867676]
[157.43910217 278.72122192]
[161.45452881 293.17376709]
[172.60368347 304.39904785]
[168.55580139 318.73306274]
[172.57122803 333.18560791]
[176.65913391 347.61782837]
[180.81941223 362.02935791]
[184.97969055 376.44088745]
[189.13998413 390.85241699]
[201.29479980 393.50119019]
[211.12585449 401.00588989]
[216.81877136 411.90475464]
[217.35551453 424.11709595]
[212.69592285 435.34045410]
[203.77378845 443.48455811]
[207.64395142 457.97671509]
[211.51411438 472.46884155]
[215.85041809 477.34616089]
[216.94818115 482.85446167]
[215.31340027 487.29074097]
[218.89189148 501.85763550]
[222.47038269 516.42456055]
[226.04887390 530.99145508]
[229.62736511 545.55834961]
[241.84870911 551.14385986]
[248.53875732 562.57275391]
[247.45768738 575.57659912]
[239.22109985 585.44549561]
[242.65319824 600.04760742]
[246.08531189 614.64965820]
[249.51741028 629.25177002]
[265.74078369 638.02325439]
[270.91616821 655.40930176]
[262.41928101 671.09265137]
[267.86267090 685.07012939]
[280.08050537 695.12170410]
[277.48928833 709.78918457]
[282.93267822 723.76666260]
[288.37606812 737.74414062]
[293.81945801 751.72155762]
[299.26284790 765.69903564]
[304.70623779 779.67651367]
[316.92407227 789.72814941]
[314.33285522 804.39562988]
[319.77624512 818.37304688]
[342.79211426 820.76312256]
[358.57522583 843.69555664]
[372.35287476 849.62646484]
[386.13052368 855.55743408]
[399.90817261 861.48840332]
[416.84729004 862.19750977]
[420.85510254 878.67095947]
[406.13491821 887.08239746]
[393.97723389 875.26605225]
[380.19958496 869.33508301]
[366.42190552 863.40411377]
[352.64425659 857.47320557]
[346.87213135 862.26196289]
[356.44973755 873.80621338]
[366.02713013 885.35064697]
[354.48254395 894.92785645]
[344.90548706 883.38385010]
[335.32788086 871.83959961]
[329.55575562 876.62835693]
[332.84112549 891.26416016]
[336.19992065 905.88330078]
[339.63201904 920.48535156]
[343.06411743 935.08740234]
[346.49621582 949.68951416]
[349.92831421 964.29156494]
[353.36041260 978.89367676]
[360.98144531 987.53411865]
[359.60913086 997.67510986]
[365.60913086 1011.42285156]
[371.60916138 1025.17053223]
[377.60919189 1038.91833496]
[383.60922241 1052.66601562]
[389.60922241 1066.41369629]
[395.60925293 1080.16149902]
[401.60928345 1093.90917969]
[407.60931396 1107.65686035]
[413.60931396 1121.40454102]
[419.60934448 1135.15234375]
[434.86370850 1135.66967773]
[448.37890625 1142.76208496]
[457.47152710 1155.02124023]
[460.33621216 1170.01306152]
[456.40417480 1184.76110840]
[446.45614624 1196.33691406]
[432.46728516 1202.44213867]
[417.21508789 1201.86462402]
[403.72790527 1194.71911621]
[394.68362427 1182.42419434]
[391.87799072 1167.42126465]
[395.86807251 1152.68884277]
[405.86163330 1141.15234375]
[399.86160278 1127.40466309]
[393.86157227 1113.65686035]
[387.86157227 1099.90917969]
[381.86154175 1086.16149902]
[375.86151123 1072.41369629]
[369.86148071 1058.66601562]
[363.86148071 1044.91833496]
[357.86145020 1031.17065430]
[351.86141968 1017.42285156]
[345.86138916 1003.67517090]
[345.18676758 1018.65997314]
[340.22497559 1032.81555176]
[331.39651489 1044.94238281]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 274]
[17 273]
[18 272]
[19 271]
[20 270]
[21 269]
[23 268]
[24 267]
[28 248]
[29 247]
[31 245]
[32 244]
[33 243]
[34 242]
[35 241]
[36 240]
[38 238]
[39 237]
[41 54]
[42 53]
[43 52]
[56 234]
[57 233]
[58 232]
[59 231]
[62 227]
[63 226]
[64 225]
[65 224]
[66 223]
[67 220]
[68 219]
[69 218]
[73 212]
[74 211]
[75 210]
[76 209]
[78 208]
[79 207]
[81 205]
[82 204]
[83 203]
[84 202]
[90 196]
[91 195]
[92 194]
[93 193]
[94 192]
[102 119]
[103 118]
[104 117]
[106 115]
[122 139]
[123 138]
[124 137]
[125 136]
[126 135]
[140 166]
[141 165]
[142 164]
[146 162]
[147 161]
[148 160]
[173 190]
[174 189]
[175 188]
[176 187]
[177 186]
[250 260]
[251 259]
[252 258]
[253 257]
[276 309]
[277 308]
[278 307]
[279 306]
[280 305]
[281 304]
[282 303]
[283 302]
[284 301]
[285 300]
[286 299]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
