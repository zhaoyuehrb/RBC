%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sat Sep 12 02:09:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUUCCCACCAGCCAGGGGGAAGGAGCUGCUCUCGUUUGAGGAUGUGGCGAUGUACUUCACCAGAGAGGAGUGGGGCCACCUCAACUGGGGUCAGAAGGACCUCUACCGAGAUGUGAUGUUGGAGAACUACAGGAACAUGGUCUUGCUGGGUAGGACACGGCUUGAAGAUUGGGCUUUGUCUGUGUUCUGA\
) } def
/len { sequence length } bind def

/coor [
[110.14254761 145.05377197]
[97.02417755 137.77993774]
[99.88780212 123.05648041]
[92.44361877 123.96982574]
[86.06134796 137.54431152]
[79.67907715 151.11878967]
[73.29680634 164.69328308]
[66.91454315 178.26776123]
[66.09220123 187.38069153]
[60.31631851 192.00996399]
[53.71394348 205.47875977]
[57.52550125 221.06245422]
[47.60450745 233.67013550]
[31.56150627 233.63026428]
[21.70330811 220.97341919]
[25.59228325 205.40887451]
[40.24514008 198.87638855]
[46.84751511 185.40757751]
[53.34005356 171.88549805]
[59.72232437 158.31100464]
[66.10459900 144.73652649]
[72.48686981 131.16203308]
[78.86914062 117.58755493]
[71.51054382 104.51655579]
[56.59442520 102.93244171]
[44.37301254 112.59032440]
[29.26851273 110.77132416]
[20.13651085 99.06055450]
[5.22039270 97.47644043]
[-9.69572544 95.89232635]
[-24.61184311 94.30821228]
[-39.52796173 92.72409058]
[-54.44408035 91.13997650]
[-69.36019897 89.55586243]
[-81.58161163 99.21375275]
[-96.68611145 97.39474487]
[-105.81811523 85.68397522]
[-120.73423004 84.09986115]
[-135.65034485 82.51574707]
[-150.56646729 80.93163300]
[-162.78788757 90.58952332]
[-177.89237976 88.77051544]
[-187.02438354 77.05974579]
[-201.94050598 75.47563171]
[-216.48062134 81.71226501]
[-228.31959534 72.67413330]
[-243.23571777 71.09001923]
[-258.15182495 69.50590515]
[-270.28579712 79.63223267]
[-286.01846313 78.12943268]
[-296.01596069 65.88908386]
[-294.34689331 50.17317581]
[-282.00152588 40.30567169]
[-266.30413818 42.14078903]
[-256.56771851 54.58978653]
[-241.65161133 56.17390060]
[-226.73548889 57.75801468]
[-213.26226807 51.40808105]
[-200.35638428 60.55951691]
[-185.44027710 62.14363098]
[-174.05230713 52.61211395]
[-158.90267944 54.00614548]
[-148.98236084 66.01551819]
[-134.06623840 67.59963226]
[-119.15011597 69.18374634]
[-104.23400116 70.76786041]
[-92.84603119 61.23634338]
[-77.69640350 62.63037491]
[-67.77608490 74.63974762]
[-52.85996628 76.22386169]
[-37.94384766 77.80797577]
[-23.02772903 79.39208984]
[-8.11161137 80.97620392]
[6.80450726 82.56031799]
[21.72062492 84.14443207]
[33.10858917 74.61291504]
[48.25822067 76.00695038]
[58.17854309 88.01631927]
[73.09465790 89.60043335]
[82.47425079 77.89474487]
[77.67675018 63.68263626]
[72.87924957 49.47052765]
[68.08174896 35.25842285]
[63.28424835 21.04631424]
[50.62231827 10.62481689]
[53.58317184 -5.50482607]
[69.12093353 -10.74982071]
[81.25168610 0.28543329]
[77.49635315 16.24881363]
[82.29385376 30.46092033]
[87.09135437 44.67302704]
[91.88885498 58.88513565]
[96.68635559 73.09724426]
[111.21145630 76.84177399]
[122.28206635 66.72042847]
[133.35267639 56.59908676]
[138.31697083 41.57689285]
[152.93099976 38.69952393]
[164.00161743 28.57818031]
[175.07221985 18.45683479]
[186.14282227 8.33548832]
[197.21343994 -1.78585696]
[208.28404236 -11.90720272]
[218.22384644 -23.14108849]
[226.92169189 -35.36187363]
[235.61953735 -47.58265686]
[238.05172729 -56.40343857]
[244.55973816 -59.93001556]
[253.45533752 -72.00760651]
[262.35095215 -84.08519745]
[271.24655151 -96.16278839]
[273.20074463 -111.86283875]
[286.97839355 -117.52196503]
[295.87399292 -129.59954834]
[300.39889526 -145.93852234]
[317.35192871 -146.11352539]
[322.21319580 -129.87145996]
[307.95159912 -120.70394897]
[299.05599976 -108.62635803]
[297.73806763 -93.79017639]
[283.32415771 -87.26718140]
[274.42852783 -75.18959045]
[265.53292847 -63.11199951]
[256.63732910 -51.03440857]
[247.84031677 -38.88481903]
[239.14247131 -26.66403389]
[230.44464111 -14.44324875]
[244.32383728 -20.13250351]
[259.31954956 -19.77355385]
[272.91064453 -13.42674541]
[282.81219482 -2.15911627]
[287.35949707 12.13500404]
[285.78811646 27.05246735]
[278.36215210 40.08532333]
[266.33013916 49.04247284]
[251.71488953 52.41802597]
[236.97354126 49.64447403]
[224.58442688 41.18811798]
[216.63044739 28.47064781]
[214.44880676 13.63014698]
[218.40539551 -0.83659410]
[207.33477783 9.28475094]
[196.26417542 19.40609741]
[185.19355774 29.52744293]
[174.12295532 39.64878845]
[163.05235291 49.77013397]
[158.87989807 64.06838226]
[143.47401428 67.66969299]
[132.40341187 77.79103851]
[121.33280182 87.91238403]
[127.38352966 93.28858185]
[131.84930420 101.10915375]
[133.84930420 110.84188843]
[143.32385254 122.47085571]
[152.79840088 134.09982300]
[162.27296448 145.72879028]
[171.74751282 157.35775757]
[181.22206116 168.98672485]
[190.69660950 180.61569214]
[200.17115784 192.24465942]
[209.64572144 203.87362671]
[219.12026978 215.50259399]
[231.85842896 217.59013367]
[239.50979614 227.48374939]
[238.39918518 239.53875732]
[247.68319702 251.32038879]
[256.96722412 263.10205078]
[266.25122070 274.88366699]
[275.53524780 286.66531372]
[291.25714111 288.27697754]
[301.16964722 300.58624268]
[299.39184570 316.29022217]
[286.97848511 326.07202148]
[271.29418945 324.12829590]
[261.64416504 311.61221313]
[263.75360107 295.94934082]
[254.46958923 284.16769409]
[245.18557739 272.38604736]
[235.90156555 260.60440063]
[226.61755371 248.82276917]
[209.99610901 243.21307373]
[207.49130249 224.97714233]
[198.01675415 213.34817505]
[188.54219055 201.71920776]
[179.06764221 190.09024048]
[169.59309387 178.46127319]
[160.11854553 166.83230591]
[150.64399719 155.20333862]
[141.16943359 143.57437134]
[131.69488525 131.94540405]
[122.22033691 120.31643677]
[114.77616119 121.22978973]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 23]
[5 22]
[6 21]
[7 20]
[8 19]
[10 18]
[11 17]
[24 79]
[25 78]
[28 75]
[29 74]
[30 73]
[31 72]
[32 71]
[33 70]
[34 69]
[37 66]
[38 65]
[39 64]
[40 63]
[43 60]
[44 59]
[46 57]
[47 56]
[48 55]
[80 93]
[81 92]
[82 91]
[83 90]
[84 89]
[94 150]
[95 149]
[96 148]
[98 146]
[99 145]
[100 144]
[101 143]
[102 142]
[103 141]
[104 127]
[105 126]
[106 125]
[108 124]
[109 123]
[110 122]
[111 121]
[113 119]
[114 118]
[153 191]
[154 190]
[155 189]
[156 188]
[157 187]
[158 186]
[159 185]
[160 184]
[161 183]
[162 182]
[165 180]
[166 179]
[167 178]
[168 177]
[169 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
