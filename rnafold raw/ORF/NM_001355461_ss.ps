%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 05:53:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAUUAAGUUCCAGGAAAGGGUGACAUUCAAGGACAUAGCUGUUAUCUUCACCAAGGAAGAGCUGGCAGUAUUGGAUAAAGCCCAGAUAAACCUGUACCAAGACGUGAUGCUGGAAAACUUCAGGAACUUCAUCUCAGUGGGGUCUUGCUCUGUCACCCAGGUGGCUGGAGUACAGUGGCCUGAUCAUGGCUCGCUGCUGAAGCCUUGA\
) } def
/len { sequence length } bind def

/coor [
[175.38917542 397.59835815]
[161.84564209 404.04605103]
[147.08972168 406.74099731]
[132.14140320 405.49691772]
[118.03398132 400.39981079]
[105.74263000 391.80197144]
[96.11698914 380.29776001]
[89.82241058 366.68237305]
[87.29402924 351.89700317]
[88.70659637 336.96368408]
[93.96248627 322.91461182]
[102.69837952 310.72100830]
[114.31040192 301.22570801]
[127.99589539 295.08508301]
[142.80883789 292.72357178]
[157.72529602 294.30447388]
[171.71418762 299.71844482]
[183.80850220 308.59127808]
[193.17312622 320.31106567]
[205.47441101 328.89468384]
[198.79421997 315.46432495]
[192.11402893 302.03393555]
[185.43383789 288.60354614]
[178.75363159 275.17318726]
[172.07344055 261.74279785]
[165.39324951 248.31242371]
[158.71305847 234.88204956]
[143.83871460 234.09492493]
[131.27188110 225.91381836]
[124.44217682 212.45195007]
[125.27313232 197.27940369]
[133.64157104 184.47640991]
[126.96137238 171.04603577]
[120.28117371 157.61566162]
[113.60098267 144.18528748]
[106.92078400 130.75491333]
[94.32845306 136.37725830]
[78.68788147 136.31803894]
[62.67263031 129.21702576]
[49.47703171 114.97278595]
[34.52729797 113.74581146]
[19.57756424 112.51883698]
[4.62783003 111.29186249]
[-10.32190323 110.06488800]
[-25.27163696 108.83791351]
[-40.22137070 107.61093140]
[-55.18771362 106.60667419]
[-70.16735077 105.82535553]
[-85.14698792 105.04402924]
[-100.12662506 104.26271057]
[-115.10626221 103.48138428]
[-126.67928314 114.24431610]
[-142.46994019 113.58801270]
[-153.10990906 101.90184784]
[-152.28669739 86.11901093]
[-140.48869324 75.60318756]
[-124.71544647 76.59322357]
[-114.32494354 88.50174713]
[-99.34530640 89.28307343]
[-84.36566925 90.06439209]
[-69.38603210 90.84571838]
[-54.40639114 91.62703705]
[-50.32141113 89.15277100]
[-44.63874435 89.21839905]
[-38.99439621 92.66120148]
[-24.04466057 93.88817596]
[-9.09492779 95.11515045]
[5.85480547 96.34212494]
[20.80453873 97.56909943]
[35.75427246 98.79608154]
[50.70400620 100.02305603]
[53.89330673 93.23494720]
[45.32501602 80.92298889]
[60.27191162 79.65874481]
[63.46121597 72.87063599]
[52.97371674 62.14625931]
[37.16960144 62.22042084]
[26.00091934 51.03846359]
[26.09385490 35.23444748]
[37.39326859 24.18461418]
[53.19541931 24.44463348]
[64.12516785 35.86024094]
[63.69809341 51.65876007]
[74.18559265 62.38313675]
[86.47643280 53.78457260]
[79.99694061 40.25622940]
[73.51744080 26.72788239]
[58.52976608 21.71339226]
[51.55252838 7.53264141]
[56.72519684 -7.40118074]
[70.97891998 -14.22810173]
[85.85722351 -8.89783192]
[92.53306580 5.42727518]
[87.04578400 20.24838638]
[93.52528381 33.77673340]
[100.00477600 47.30507660]
[103.14099121 54.47027206]
[105.29454041 61.78404999]
[106.46212769 69.14546204]
[112.94161987 55.61711502]
[119.42111969 42.08876801]
[117.58028412 23.76684570]
[132.43472290 14.42273235]
[138.71208191 0.79941612]
[137.46014404 -14.97217941]
[149.81356812 -23.29336739]
[156.09092712 -36.91668320]
[162.36830139 -50.54000092]
[168.64566040 -64.16331482]
[174.61721802 -77.92341614]
[172.66229248 -93.62338257]
[184.63183594 -102.48787689]
[190.29461670 -116.37790680]
[195.95741272 -130.26792908]
[201.62019348 -144.15795898]
[207.28297424 -158.04798889]
[204.51687622 -174.21217346]
[217.30357361 -184.48019409]
[232.48921204 -178.28919983]
[234.45211792 -162.00794983]
[221.17300415 -152.38520813]
[215.51022339 -138.49517822]
[209.84742737 -124.60514832]
[204.18464661 -110.71511841]
[198.52186584 -96.82509613]
[200.88182068 -82.11863708]
[188.50724792 -72.26063538]
[189.53038025 -68.88639069]
[188.97000122 -64.84893799]
[186.53219604 -60.89793396]
[182.26896667 -57.88595581]
[175.99160767 -44.26263809]
[169.71424866 -30.63932419]
[163.43688965 -17.01600647]
[165.13781738 -2.21884227]
[152.33540344 7.07677698]
[146.05804443 20.70009232]
[149.95140076 32.15296555]
[144.83312988 43.55414963]
[132.94946289 48.56826401]
[126.46997070 62.09661102]
[119.99047089 75.62495422]
[131.52311707 99.76531982]
[120.35116577 124.07471466]
[127.03135681 137.50509644]
[133.71154785 150.93547058]
[140.39175415 164.36584473]
[147.07194519 177.79621887]
[162.33114624 178.84695435]
[174.93243408 187.33837891]
[181.54753113 200.90698242]
[180.48988342 215.86483765]
[172.14343262 228.20185852]
[178.82362366 241.63223267]
[185.50381470 255.06260681]
[192.18400574 268.49298096]
[198.86421204 281.92337036]
[205.54440308 295.35372925]
[212.22459412 308.78411865]
[218.90478516 322.21447754]
[229.78411865 332.54116821]
[243.54423523 338.51272583]
[257.30432129 344.48428345]
[271.06442261 350.45584106]
[286.80413818 348.85202026]
[295.39913940 361.01654053]
[309.15924072 366.98809814]
[322.91934204 372.95965576]
[336.67944336 378.93121338]
[352.06991577 374.40209961]
[365.12347412 383.72857666]
[365.82659912 399.75622559]
[353.63986206 410.18997192]
[337.91189575 407.02593994]
[330.70788574 392.69131470]
[316.94775391 386.71975708]
[303.18765259 380.74819946]
[289.42755127 374.77664185]
[274.67205811 376.80758667]
[265.09286499 364.21594238]
[251.33276367 358.24438477]
[237.57266235 352.27282715]
[223.81256104 346.30126953]
[218.45037842 351.54501343]
[207.72599792 362.03250122]
[202.36380005 367.27627563]
[208.02659607 381.16629028]
[213.68937683 395.05630493]
[226.06396484 404.91433716]
[223.70399475 419.62078857]
[229.36677551 433.51080322]
[235.02957153 447.40084839]
[240.69235229 461.29086304]
[246.45838928 475.13833618]
[261.20721436 480.81707764]
[267.54428101 495.29522705]
[261.70993042 509.98318481]
[247.16558838 516.16680908]
[232.54014587 510.17752075]
[226.51060486 495.56860352]
[232.65420532 481.00729370]
[227.14422607 476.08166504]
[226.80232239 466.95364380]
[221.13954163 453.06362915]
[215.47674561 439.17358398]
[209.81396484 425.28356934]
[197.84442139 416.41906738]
[199.79934692 400.71911621]
[194.13656616 386.82907104]
[188.47377014 372.93905640]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 160]
[21 159]
[22 158]
[23 157]
[24 156]
[25 155]
[26 154]
[27 153]
[32 148]
[33 147]
[34 146]
[35 145]
[36 144]
[40 71]
[41 70]
[42 69]
[43 68]
[44 67]
[45 66]
[46 65]
[47 62]
[48 61]
[49 60]
[50 59]
[51 58]
[75 84]
[76 83]
[85 96]
[86 95]
[87 94]
[99 142]
[100 141]
[101 140]
[103 137]
[104 136]
[106 134]
[107 133]
[108 132]
[109 131]
[110 127]
[112 125]
[113 124]
[114 123]
[115 122]
[116 121]
[161 183]
[162 182]
[163 181]
[164 180]
[166 178]
[167 177]
[168 176]
[169 175]
[186 210]
[187 209]
[188 208]
[190 206]
[191 205]
[192 204]
[193 203]
[194 201]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
