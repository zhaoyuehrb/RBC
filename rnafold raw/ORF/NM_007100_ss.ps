%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sat Sep 12 02:28:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGUGCCACCGGUGCAGGUCUCUCCGCUCAUCAAGCUCGGCCGCUACUCCGCCCUGUUCCUCGGUGUGGCCUACGGAGCCACGCGCUACAAUUACCUAAAACCUCGGGCAGAAGAGGAGAGGAGGAUAGCAGCAGAAGAGAAGAAGAAGCAGGAUGAACUGAAACGGAUUGCCAGAGAAUUGGCAGAAGAUGACAGCAUAUUAAAGUGA\
) } def
/len { sequence length } bind def

/coor [
[111.24205780 225.50581360]
[109.01693726 210.67176819]
[106.79182434 195.83772278]
[97.25214386 184.39901733]
[102.85671234 169.60377502]
[100.63159180 154.76972961]
[91.09191895 143.33102417]
[96.69647980 128.53578186]
[94.47136688 113.70173645]
[89.75122833 99.46374512]
[82.67412567 86.23822021]
[75.59701538 73.01268768]
[60.35507584 70.77899933]
[49.47813416 60.12322617]
[46.99076080 45.28149414]
[53.64016342 31.98023796]
[46.56305695 18.75471115]
[39.48595047 5.52918291]
[26.15294266 -2.98794198]
[26.97011757 -17.86011314]
[19.89301300 -31.08564186]
[7.79730988 -35.56412125]
[2.17504692 -46.72539139]
[5.55313110 -58.34068680]
[-1.32628131 -71.67012024]
[-8.20569420 -84.99954224]
[-15.18414593 -98.27738953]
[-22.26125145 -111.50292206]
[-29.33835793 -124.72844696]
[-36.51372528 -137.90092468]
[-49.97206497 -146.21859741]
[-49.37640381 -161.10128784]
[-56.64963150 -174.21998596]
[-73.46456909 -176.05134583]
[-85.75263214 -187.43136597]
[-88.80570221 -203.72984314]
[-81.61524963 -218.48704529]
[-89.08299255 -231.49598694]
[-96.64736938 -244.44898987]
[-110.34738922 -252.36227417]
[-110.19510651 -267.25610352]
[-117.85570526 -280.15243530]
[-131.55572510 -288.06570435]
[-131.40344238 -302.95953369]
[-139.06404114 -315.85586548]
[-146.72463989 -328.75219727]
[-154.38523865 -341.64849854]
[-161.45846558 -347.42840576]
[-162.06224060 -354.79437256]
[-169.52998352 -367.80331421]
[-176.99772644 -380.81228638]
[-189.22140503 -384.92861938]
[-195.17349243 -395.91757202]
[-192.14273071 -407.62829590]
[-199.41595459 -420.74697876]
[-206.68919373 -433.86566162]
[-213.58718872 -439.85360718]
[-213.97138977 -447.23428345]
[-221.04849243 -460.45980835]
[-228.12559509 -473.68533325]
[-235.20269775 -486.91085815]
[-242.27981567 -500.13638306]
[-249.35691833 -513.36193848]
[-276.40219116 -516.05914307]
[-290.89700317 -545.55151367]
[-302.72329712 -554.77862549]
[-314.54956055 -564.00573730]
[-326.37582397 -573.23278809]
[-338.20208740 -582.45989990]
[-350.02838135 -591.68701172]
[-361.85464478 -600.91412354]
[-373.74926758 -610.05291748]
[-390.08044434 -611.54437256]
[-396.70779419 -626.54473877]
[-386.81362915 -639.62286377]
[-370.57626343 -637.32513428]
[-364.69927979 -622.01525879]
[-357.46844482 -620.48657227]
[-352.62753296 -612.74035645]
[-340.80126953 -603.51330566]
[-328.97500610 -594.28619385]
[-317.14874268 -585.05908203]
[-305.32244873 -575.83197021]
[-293.49618530 -566.60485840]
[-281.66992188 -557.37780762]
[-275.08367920 -560.96545410]
[-282.25903320 -574.13793945]
[-289.43441772 -587.31042480]
[-296.60977173 -600.48291016]
[-303.78494263 -613.65551758]
[-290.61221313 -620.83044434]
[-283.43731689 -607.65826416]
[-276.26193237 -594.48577881]
[-269.08657837 -581.31329346]
[-261.91119385 -568.14080811]
[-255.32496643 -571.72851562]
[-256.66320801 -586.66870117]
[-258.00143433 -601.60888672]
[-271.38726807 -609.45739746]
[-277.57257080 -623.68841553]
[-274.17892456 -638.82983398]
[-262.51129150 -649.05944824]
[-247.05609131 -650.44384766]
[-233.75617981 -642.45062256]
[-227.72563171 -628.15332031]
[-231.28332520 -613.04962158]
[-243.06124878 -602.94714355]
[-241.72302246 -588.00695801]
[-240.38478088 -573.06677246]
[-231.16358948 -565.19738770]
[-225.41275024 -555.28240967]
[-223.41848755 -544.66540527]
[-224.99137878 -534.64324951]
[-229.52990723 -526.31036377]
[-236.13139343 -520.43902588]
[-229.05429077 -507.21350098]
[-221.97717285 -493.98794556]
[-214.90007019 -480.76242065]
[-207.82296753 -467.53689575]
[-200.74586487 -454.31137085]
[-193.57049561 -441.13888550]
[-186.29727173 -428.02020264]
[-179.02403259 -414.90151978]
[-163.51574707 -406.68811035]
[-163.98876953 -388.27999878]
[-156.52102661 -375.27105713]
[-149.05328369 -362.26211548]
[-141.48890686 -349.30911255]
[-133.82830811 -336.41278076]
[-126.16771698 -323.51644897]
[-118.50711823 -310.62011719]
[-105.35503387 -303.62927246]
[-104.95938110 -287.81301880]
[-97.29878235 -274.91668701]
[-84.14669800 -267.92584229]
[-83.75104523 -252.10958862]
[-77.63238525 -247.96424866]
[-76.07403564 -238.96372986]
[-68.60630035 -225.95478821]
[-55.25692368 -225.76417542]
[-43.65184784 -218.94755554]
[-36.87652588 -207.19320679]
[-36.79332733 -193.51799011]
[-43.53093719 -181.49320984]
[-36.25770950 -168.37451172]
[-23.31959915 -160.99517822]
[-23.39502907 -145.17414856]
[-17.40250397 -140.84848022]
[-16.11282921 -131.80555725]
[-9.03572369 -118.58002472]
[-1.95861876 -105.35449982]
[3.96883965 -100.94008636]
[5.12373543 -91.87895966]
[12.00314808 -78.54953003]
[18.88256073 -65.22010040]
[34.13942337 -56.54859161]
[33.11853790 -38.16274643]
[40.19564438 -24.93721962]
[53.02245331 -17.36607361]
[52.71147919 -1.54792273]
[59.78858566 11.67760468]
[66.86569214 24.90313148]
[81.62121582 26.75040817]
[92.58934784 37.05400467]
[95.42031860 52.01525497]
[88.82254791 65.93558502]
[95.89965057 79.16110992]
[102.97675323 92.38664246]
[112.63683319 83.33506775]
[126.87386322 79.74188995]
[143.25630188 83.22873688]
[155.61080933 91.73556519]
[167.96533203 100.24239349]
[180.31983948 108.74922180]
[192.67434692 117.25605011]
[208.16906738 114.14332581]
[221.28004456 122.96816254]
[224.22877502 138.49493408]
[215.26582336 151.51187134]
[199.70874023 154.29627991]
[186.78729248 145.19619751]
[184.16751099 129.61054993]
[171.81300354 121.10372925]
[159.45849609 112.59690094]
[147.10398865 104.09007263]
[134.74948120 95.58325195]
[128.38845825 99.55658722]
[139.87741089 109.20044708]
[134.25566101 123.10713959]
[119.29241943 122.05775452]
[115.66642761 107.50327301]
[109.30540466 111.47661591]
[111.53052521 126.31066132]
[121.22935486 138.81039429]
[115.46563721 152.54461670]
[117.69075012 167.37866211]
[127.38957977 179.87838745]
[121.62586212 193.61260986]
[123.85098267 208.44665527]
[126.07609558 223.28070068]
[140.55444336 228.24415588]
[151.05932617 239.37547302]
[155.17677307 254.11676025]
[151.96064758 269.08053589]
[142.14997864 280.82827759]
[127.99919891 286.66043091]
[112.76004028 285.23681641]
[99.93436432 276.88452148]
[92.46940613 263.52291870]
[92.08055878 248.22233582]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 200]
[2 199]
[3 198]
[5 196]
[6 195]
[8 193]
[9 192]
[10 168]
[11 167]
[12 166]
[16 162]
[17 161]
[18 160]
[20 158]
[21 157]
[24 155]
[25 154]
[26 153]
[27 151]
[28 150]
[29 149]
[30 147]
[32 145]
[33 144]
[37 139]
[38 138]
[39 136]
[41 134]
[42 133]
[44 131]
[45 130]
[46 129]
[47 128]
[49 127]
[50 126]
[51 125]
[54 123]
[55 122]
[56 121]
[58 120]
[59 119]
[60 118]
[61 117]
[62 116]
[63 115]
[65 85]
[66 84]
[67 83]
[68 82]
[69 81]
[70 80]
[71 79]
[72 77]
[96 109]
[97 108]
[98 107]
[171 186]
[172 185]
[173 184]
[174 183]
[175 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
