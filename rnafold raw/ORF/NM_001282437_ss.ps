%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 16:10:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUUCUCCAAAAUGGCCACUUACCUGACUGGGGAACUGACGGCCACCAGUGAAGACUAUAAGCUCCUGGAAAAUAUGAAUAAACUCACCAGCUUGAAGUAUCUUGAAAUGAAAGAUAUUGCUAUAAACAUUAGUAGGAACUUAAAGGACUUAAACCAGAAAUAUGCUGGACUGCAGCCUUAUCUGGAUCAGAUCAAUGUCAUUGAAGAGCAGGUAGCAGCUCUUGAGCAGGCAGCUUACAAGUUGGAUGCAUAU\
UCAAAAAAACUGGAAGCCAAGUACAAGAAGCUGGAGAAGCGAUGA\
) } def
/len { sequence length } bind def

/coor [
[-107.18601990 896.65631104]
[-119.03481293 899.47491455]
[-131.15411377 898.54321289]
[-137.23608398 912.25482178]
[-143.31805420 925.96649170]
[-149.40002441 939.67816162]
[-155.48200989 953.38983154]
[-161.56398010 967.10150146]
[-167.64595032 980.81311035]
[-173.72792053 994.52478027]
[-164.80352783 1006.94665527]
[-163.30488586 1022.06787109]
[-169.53483582 1035.81750488]
[-181.72900391 1044.54443359]
[-196.55422974 1045.98608398]
[-202.63619995 1059.69775391]
[-195.59953308 1073.66271973]
[-199.23591614 1088.87158203]
[-211.82836914 1098.14331055]
[-227.43110657 1097.09997559]
[-238.67700195 1086.23425293]
[-240.25608826 1070.67663574]
[-231.42276001 1057.77282715]
[-216.34785461 1053.61584473]
[-210.26588440 1039.90417480]
[-219.14779663 1027.94689941]
[-220.86344910 1013.05010986]
[-214.85260010 999.20324707]
[-202.63768005 990.16485596]
[-187.43959045 988.44281006]
[-181.35760498 974.73114014]
[-175.27563477 961.01953125]
[-169.19366455 947.30786133]
[-163.11169434 933.59619141]
[-157.02970886 919.88452148]
[-150.94773865 906.17285156]
[-144.86576843 892.46118164]
[-156.83836365 879.35656738]
[-161.84956360 862.27270508]
[-158.83491516 844.67205811]
[-148.36154175 830.14318848]
[-132.52215576 821.66943359]
[-114.51707458 821.01586914]
[-108.86734772 807.12054443]
[-116.97103882 790.66693115]
[-110.31374359 773.23297119]
[-92.71092987 766.12811279]
[-87.35246277 752.11785889]
[-81.99400330 738.10760498]
[-76.63553619 724.09735107]
[-71.27707672 710.08709717]
[-83.34484100 696.49884033]
[-86.81556702 678.57269287]
[-80.63373566 661.30090332]
[-66.44441223 649.53900146]
[-48.15660477 646.64062500]
[-43.23937988 632.46954346]
[-38.32215118 618.29840088]
[-45.37670517 609.40417480]
[-47.30342484 598.09533691]
[-43.51391602 587.14093018]
[-34.83387375 579.27947998]
[-23.32626152 576.53448486]
[-18.11431503 562.46911621]
[-12.90236855 548.40368652]
[-15.73532867 533.78100586]
[-3.68506050 523.52905273]
[1.52688611 509.46368408]
[6.73883295 495.39825439]
[11.95077896 481.33285522]
[0.94588310 471.24218750]
[-5.37441635 457.67019653]
[-6.01877356 442.67187500]
[-0.85788751 428.53140259]
[9.35105705 417.41424561]
[23.07531357 411.03555298]
[38.23664856 410.39556885]
[43.44859695 396.33016968]
[48.66054535 382.26473999]
[53.87248993 368.19934082]
[59.08443832 354.13394165]
[64.29638672 340.06854248]
[57.42901611 331.02902222]
[55.73876190 319.68240356]
[59.75609589 308.80947876]
[68.59833527 301.13092041]
[80.16073608 298.62673950]
[85.66513824 284.67318726]
[91.09664154 270.69110107]
[96.45510101 256.68087769]
[101.81356812 242.67062378]
[107.17202759 228.66038513]
[112.53049469 214.65014648]
[117.88895416 200.63990784]
[123.24742126 186.62965393]
[128.60588074 172.61941528]
[53.71620941 169.58195496]
[10.93256760 101.92557526]
[-0.49636796 92.21066284]
[-11.92530346 82.49575806]
[-23.35423851 72.78084564]
[-34.78317261 63.06594086]
[-46.21210861 53.35103226]
[-57.64104462 43.63612366]
[-69.06997681 33.92121506]
[-84.45568848 36.71657562]
[-98.01295471 28.92334557]
[-103.34046173 14.22124767]
[-97.92271423 -0.44783750]
[-84.31781006 -8.15761471]
[-68.94957733 -5.26776409]
[-59.07440948 6.85721588]
[-59.35507202 22.49228096]
[-47.92613602 32.20718765]
[-36.49720001 41.92209625]
[-25.06826591 51.63700485]
[-13.63932991 61.35191345]
[-2.21039486 71.06681824]
[9.21854019 80.78173065]
[20.64747620 90.49663544]
[32.42359543 81.20561981]
[25.63466835 67.82987976]
[18.84574318 54.45413208]
[12.05681896 41.07839203]
[-3.21440578 37.71331787]
[-12.70878983 25.28791237]
[-11.94337559 9.66907215]
[-1.27956843 -1.76846421]
[14.24750805 -3.62424183]
[27.30644226 4.97798061]
[31.73120689 19.97649574]
[25.43256187 34.28946686]
[32.22148514 47.66520691]
[39.01041031 61.04095078]
[45.79933548 74.41669464]
[60.11745834 69.94552612]
[58.08844757 55.08338928]
[56.05943680 40.22125244]
[43.75906372 30.66412926]
[41.91307449 15.56290436]
[51.10013199 3.89527702]
[49.07112122 -10.96685982]
[40.93783188 -25.84254265]
[52.98065186 -37.77597809]
[67.78150940 -29.50730133]
[63.93325806 -12.99587154]
[65.96227264 1.86626518]
[77.94062042 10.64434338]
[80.21004486 25.68775940]
[70.92156982 38.19224167]
[72.95058441 53.05437851]
[74.97959900 67.91651154]
[82.39387512 69.04722595]
[91.76657867 57.33602524]
[97.22241974 71.30866241]
[104.63669586 72.43937683]
[111.00354767 58.85765457]
[117.37039948 45.27593231]
[123.73725128 31.69420624]
[130.10409546 18.11248398]
[121.53241730 7.09208822]
[118.54906464 -6.47927952]
[121.67878723 -19.94982147]
[130.25750732 -30.71240997]
[142.57221985 -36.70916748]
[156.20286560 -36.82482910]
[162.71112061 -50.33936310]
[169.21937561 -63.85389328]
[175.72763062 -77.36843109]
[171.80744934 -92.92515564]
[181.64024353 -105.60173035]
[197.68313599 -105.67378235]
[207.62939453 -93.08602142]
[203.84909058 -77.49471283]
[189.24217224 -70.86016846]
[182.73390198 -57.34563828]
[176.22564697 -43.83110428]
[169.71739197 -30.31657219]
[179.15008545 -17.16904068]
[180.66000366 -0.96389902]
[173.73910522 13.87046719]
[160.19631958 23.23203468]
[143.68582153 24.47933388]
[137.31896973 38.06105804]
[130.95211792 51.64278030]
[124.58527374 65.22450256]
[118.21842194 78.80622864]
[123.77802277 83.84020233]
[133.84596252 72.72100830]
[143.91409302 61.60198212]
[155.03295898 71.67029572]
[144.96516418 82.78895569]
[134.89721680 93.90814972]
[140.45681763 98.94211578]
[153.34156799 91.26207733]
[166.22631836 83.58203125]
[179.11106873 75.90198517]
[191.99583435 68.22193909]
[202.50564575 54.91854858]
[218.19853210 61.33488846]
[216.37716675 78.19071960]
[199.67587280 81.10668945]
[186.79112244 88.78673553]
[173.90637207 96.46678162]
[161.02160645 104.14682770]
[148.13685608 111.82687378]
[153.64125061 125.78042603]
[168.29920959 122.59542084]
[182.95716858 119.41042328]
[197.61512756 116.22541809]
[212.27308655 113.04041290]
[218.39677429 98.78278351]
[231.74855042 90.87647247]
[247.19438171 92.36162567]
[258.79504395 102.66716766]
[262.08984375 117.83041382]
[255.81184387 132.02078247]
[242.37509155 139.78178406]
[226.94627380 138.12916565]
[215.45808411 127.69837189]
[200.80012512 130.88337708]
[186.14216614 134.06837463]
[171.48420715 137.25338745]
[156.82624817 140.43838501]
[157.45230103 155.42530823]
[172.32482910 157.37673950]
[187.19734192 159.32817078]
[202.06987000 161.27958679]
[216.94239807 163.23101807]
[230.49057007 154.63877869]
[245.60777283 160.00997925]
[250.69737244 175.22428894]
[241.85507202 188.61061096]
[225.86392212 189.90008545]
[214.99096680 178.10354614]
[200.11845398 176.15211487]
[185.24592590 174.20068359]
[170.37339783 172.24926758]
[155.50088501 170.29783630]
[142.61611938 177.97789001]
[137.25765991 191.98812866]
[131.89920044 205.99836731]
[126.54073334 220.00860596]
[121.18226624 234.01884460]
[115.82380676 248.02909851]
[110.46533966 262.03933716]
[105.10688019 276.04956055]
[104.97003937 285.13323975]
[99.61869049 290.17758179]
[94.11428833 304.13113403]
[102.30487823 321.25576782]
[95.44753265 338.61199951]
[78.36178589 345.28048706]
[73.14984131 359.34588623]
[67.93789673 373.41128540]
[62.72594833 387.47668457]
[57.51399994 401.54211426]
[52.30205536 415.60751343]
[63.38548279 425.97250366]
[69.63932800 439.75411987]
[70.13895416 454.83932495]
[64.83936310 468.92840576]
[54.57727051 479.88534546]
[40.93918228 486.06173706]
[26.01618385 486.54479980]
[20.80423737 500.61019897]
[15.59229088 514.67559814]
[10.38034439 528.74102783]
[12.84051037 544.36981201]
[1.16303587 553.61566162]
[-4.04891062 567.68103027]
[-9.26085758 581.74645996]
[-0.71461195 598.69635010]
[-7.20819092 616.19195557]
[-24.15102386 623.21563721]
[-29.06824875 637.38671875]
[-33.98547363 651.55786133]
[-25.07931137 659.50726318]
[-19.37329102 669.95385742]
[-17.50869370 681.67529297]
[-19.67885208 693.30902100]
[-25.60939598 703.51031494]
[-34.59269714 711.10797119]
[-45.57223511 715.23883057]
[-57.26683044 715.44561768]
[-62.62529373 729.45581055]
[-67.98375702 743.46606445]
[-73.34222412 757.47631836]
[-78.70068359 771.48657227]
[-71.86078644 781.13934326]
[-70.52072906 792.77331543]
[-74.89670563 803.50689697]
[-83.80330658 810.73706055]
[-94.97200012 812.77026367]
[-100.62173462 826.66558838]
[-91.47016144 834.95825195]
[-85.29958344 845.62799072]
[-82.68638611 857.64837646]
[-83.86557770 869.86846924]
[-88.70976257 881.12268066]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 37]
[4 36]
[5 35]
[6 34]
[7 33]
[8 32]
[9 31]
[10 30]
[15 25]
[16 24]
[43 295]
[44 294]
[47 289]
[48 288]
[49 287]
[50 286]
[51 285]
[56 277]
[57 276]
[58 275]
[63 272]
[64 271]
[65 270]
[67 268]
[68 267]
[69 266]
[70 265]
[77 258]
[78 257]
[79 256]
[80 255]
[81 254]
[82 253]
[87 250]
[88 249]
[89 247]
[90 246]
[91 245]
[92 244]
[93 243]
[94 242]
[95 241]
[96 240]
[98 120]
[99 119]
[100 118]
[101 117]
[102 116]
[103 115]
[104 114]
[105 113]
[121 135]
[122 134]
[123 133]
[124 132]
[136 152]
[137 151]
[138 150]
[141 147]
[142 146]
[156 187]
[157 186]
[158 185]
[159 184]
[160 183]
[166 178]
[167 177]
[168 176]
[169 175]
[194 206]
[195 205]
[196 204]
[197 203]
[198 202]
[207 224]
[208 223]
[209 222]
[210 221]
[211 220]
[225 239]
[226 238]
[227 237]
[228 236]
[229 235]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
