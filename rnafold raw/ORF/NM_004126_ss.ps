%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 06:47:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCCUGCCCUUCACAUCGAAGAUUUGCCAGAGAAGGAAAAACUGAAAAUGGAAGUUGAGCAGCUUCGCAAAGAAGUGAAGUUGCAGAGACAACAAGUGUCUAAAUGUUCUGAAGAAAUAAAGAACUAUAUUGAAGAACGUUCUGGAGAGGAUCCUCUAGUAAAGGGAAUUCCAGAAGACAAGAACCCCUUUAAAGAAAAAGGCAGCUGUGUUAUUUCAUAA\
) } def
/len { sequence length } bind def

/coor [
[161.81106567 274.36489868]
[162.01951599 270.44201660]
[163.60551453 266.42114258]
[160.87371826 251.67201233]
[156.56861877 245.67279053]
[158.20886230 236.69593811]
[155.68510437 221.90977478]
[153.16134644 207.12361145]
[150.63758850 192.33744812]
[135.78619385 190.23124695]
[129.25076294 203.73266602]
[122.71531677 217.23406982]
[116.17987823 230.73547363]
[120.06873322 246.30006409]
[110.21044922 258.95681763]
[94.16744232 258.99658203]
[84.24654388 246.38882446]
[88.05821228 230.80516052]
[102.67846680 224.20002747]
[109.21391296 210.69862366]
[115.74935150 197.19721985]
[122.28479004 183.69581604]
[111.64089966 173.12663269]
[98.18585968 179.75700378]
[84.73082733 186.38739014]
[71.27578735 193.01777649]
[64.96816254 199.61233521]
[57.58417511 199.64527893]
[44.03706741 206.08546448]
[30.48996162 212.52563477]
[29.33964920 229.02429199]
[20.07691383 242.61224365]
[5.30964470 249.63208008]
[-10.88861656 248.25228882]
[-24.10223961 238.94409180]
[-37.55727768 245.57447815]
[-42.40384293 260.61727905]
[-56.50568008 267.75268555]
[-71.49641418 262.74734497]
[-78.48231506 248.57086182]
[-73.31876373 233.63388062]
[-59.06921005 226.79824829]
[-44.18766022 232.11944580]
[-30.73262215 225.48905945]
[-30.73653793 211.83660889]
[-24.83111954 199.45411682]
[-14.11670113 190.78114319]
[-0.64712048 187.55349731]
[12.96387100 190.45608521]
[24.04978371 198.97853088]
[37.59689331 192.53836060]
[51.14399719 186.09817505]
[64.64540863 179.56274414]
[78.10044098 172.93235779]
[91.55548096 166.30197144]
[105.01052094 159.67158508]
[77.39115143 152.21784973]
[57.72798538 133.47766113]
[49.85637665 108.99220276]
[54.39483643 85.14299774]
[41.03453827 78.32373047]
[27.67424011 71.50446320]
[14.31394196 64.68518829]
[0.95364410 57.86592102]
[-12.40665340 51.04664993]
[-25.76695061 44.22737885]
[-39.12725067 37.40811157]
[-52.48754501 30.58884048]
[-65.84784698 23.76956940]
[-80.80287933 28.88058281]
[-94.95472717 21.84489632]
[-99.90734100 6.83665991]
[-92.72241974 -7.24000692]
[-77.66266632 -12.03366756]
[-63.66274643 -4.70032787]
[-59.02857590 10.40927219]
[-45.66827774 17.22854233]
[-32.30797958 24.04781151]
[-18.94768143 30.86708260]
[-5.58738375 37.68635178]
[7.77291441 44.50562286]
[21.13321114 51.32489395]
[34.49351120 58.14416122]
[47.85380554 64.96343231]
[61.21410370 71.78269958]
[64.43795013 67.81456757]
[68.06585693 64.21212006]
[72.05660248 61.01630783]
[65.33161163 47.60830688]
[58.60662079 34.20030594]
[51.88162613 20.79230690]
[45.15663528 7.38430691]
[30.44478416 0.98579192]
[26.41395760 -14.54263401]
[36.15626144 -27.28889084]
[52.19823456 -27.47514153]
[62.23384476 -14.95851040]
[58.56463623 0.65931427]
[65.28962708 14.06731415]
[72.01461792 27.47531509]
[78.73961639 40.88331604]
[85.46460724 54.29131699]
[136.08418274 59.92995071]
[158.64830017 112.09051514]
[163.42401123 97.87107086]
[168.19972229 83.65162659]
[172.97543335 69.43218231]
[177.75114441 55.21273804]
[182.52685547 40.99329376]
[187.30256653 26.77385139]
[192.07827759 12.55440712]
[184.73562622 1.26906478]
[185.22338867 -11.99120712]
[193.13981628 -22.39687347]
[205.41844177 -26.28708267]
[210.39399719 -40.43783951]
[207.67231750 -56.02318573]
[219.19323730 -65.46340179]
[224.16879272 -79.61415100]
[229.14434814 -93.76490784]
[222.08349609 -107.90422058]
[227.16790771 -122.86832428]
[241.38108826 -129.77928162]
[256.29058838 -124.53694153]
[263.05090332 -110.25149536]
[257.65121460 -95.39824677]
[243.29508972 -88.78936005]
[238.31954956 -74.63860321]
[233.34399414 -60.48784637]
[236.42155457 -45.91465759]
[224.54475403 -35.46228790]
[219.56919861 -21.31153107]
[227.48411560 -6.46816778]
[222.10472107 9.82650185]
[206.29771423 17.33011627]
[201.52200317 31.54956055]
[196.74629211 45.76900482]
[191.97058105 59.98844910]
[187.19488525 74.20789337]
[182.41917419 88.42733765]
[177.64346313 102.64678192]
[172.86775208 116.86622620]
[184.09001160 126.81914520]
[197.63713074 120.37897491]
[211.18423462 113.93879700]
[224.73133850 107.49861908]
[238.27844238 101.05844116]
[251.82556152 94.61826324]
[256.88354492 79.64521027]
[271.08450317 72.70919037]
[286.00323486 77.92520905]
[292.78872681 92.19870758]
[287.41528320 107.06146240]
[273.07083130 113.69566345]
[258.26574707 108.16536713]
[244.71862793 114.60554504]
[231.17152405 121.04572296]
[217.62440491 127.48590088]
[204.07730103 133.92607117]
[190.53019714 140.36625671]
[191.79660034 155.31269836]
[206.23414612 159.38175964]
[220.67169189 163.45083618]
[235.10922241 167.51989746]
[249.54676819 171.58895874]
[263.98431396 175.65802002]
[278.42187500 179.72708130]
[290.02954102 174.11662292]
[301.96688843 177.79676819]
[307.99978638 188.27520752]
[322.37860107 192.54725647]
[336.75738525 196.81930542]
[347.85168457 186.19799805]
[362.77407837 182.56240845]
[377.51052856 186.89050293]
[388.09701538 198.01803589]
[391.68582153 212.95175171]
[387.31155396 227.67457581]
[376.15087891 238.22613525]
[361.20599365 241.76809692]
[346.49694824 237.34770203]
[335.98043823 226.15402222]
[332.48532104 211.19808960]
[318.10653687 206.92604065]
[303.72775269 202.65399170]
[286.90032959 207.64756775]
[274.35281372 194.16462708]
[259.91525269 190.09556580]
[245.47770691 186.02650452]
[231.04016113 181.95744324]
[216.60261536 177.88838196]
[202.16506958 173.81930542]
[187.72752380 169.75024414]
[182.15158081 174.76611328]
[192.87091064 185.25877380]
[206.89257812 190.58729553]
[209.64735413 205.33216858]
[198.49543762 215.36384583]
[184.12335205 211.06932068]
[180.30337524 196.56396484]
[170.99971008 184.79783630]
[165.42376709 189.81369019]
[167.94750977 204.59985352]
[170.47126770 219.38601685]
[172.99502563 234.17219543]
[175.62286377 248.94021606]
[178.35466003 263.68936157]
[181.50090027 278.35568237]
[185.05905151 292.92755127]
[188.61721802 307.49942017]
[192.17536926 322.07128906]
[205.81106567 330.06152344]
[209.72212219 345.37423706]
[201.58819580 358.92468262]
[186.23498535 362.67361450]
[172.77128601 354.39688110]
[169.18487549 339.00491333]
[177.60350037 325.62945557]
[174.04534912 311.05758667]
[170.48718262 296.48571777]
[166.92901611 281.91384888]
[164.61561584 280.34545898]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 207]
[4 206]
[6 205]
[7 204]
[8 203]
[9 202]
[10 22]
[11 21]
[12 20]
[13 19]
[23 56]
[24 55]
[25 54]
[26 53]
[28 52]
[29 51]
[30 50]
[35 44]
[36 43]
[60 85]
[61 84]
[62 83]
[63 82]
[64 81]
[65 80]
[66 79]
[67 78]
[68 77]
[69 76]
[88 102]
[89 101]
[90 100]
[91 99]
[92 98]
[104 142]
[105 141]
[106 140]
[107 139]
[108 138]
[109 137]
[110 136]
[111 135]
[115 132]
[116 131]
[118 129]
[119 128]
[120 127]
[143 160]
[144 159]
[145 158]
[146 157]
[147 156]
[148 155]
[161 193]
[162 192]
[163 191]
[164 190]
[165 189]
[166 188]
[167 187]
[170 185]
[171 184]
[172 183]
[208 221]
[209 220]
[210 219]
[211 218]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
