%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 06:47:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGAGGAGUGGGACGUGCCACAGAUGAAGAAAGAGGUGGAGAGCCUCAAGUACCAGCUGGCCUUCCAGCGGGAGAUGGCGUCCAAGACCAUCCCCGAGCUGCUGAAGUGGAUCGAGGACGGGAUCCCCAAGGACCCCUUCCUGAACCCCGACCUGAUGAAGAACAACCCAUGGGUGGAAAAGGGCAAAUGCACCAUCCUGUGA\
) } def
/len { sequence length } bind def

/coor [
[51.03055191 271.26290894]
[47.67166901 255.57542419]
[57.95343781 243.26019287]
[50.21613693 230.53292847]
[57.95343781 216.73275757]
[57.95343781 201.73275757]
[57.95343781 186.73275757]
[57.95343781 171.73275757]
[43.37462234 168.20314026]
[36.51361084 181.54205322]
[29.65259933 194.88096619]
[22.79158783 208.21986389]
[27.85581398 223.19081116]
[20.77591324 237.32058716]
[5.75226355 242.22625732]
[-8.30186844 234.99736023]
[-13.04841614 219.92268372]
[-5.67133760 205.94577026]
[9.45267868 201.35885620]
[16.31369019 188.01994324]
[23.17470169 174.68104553]
[30.03571320 161.34213257]
[25.17578697 155.62976074]
[13.75105762 165.34962463]
[2.32632780 175.06947327]
[-9.09840202 184.78932190]
[-16.96038628 197.56387329]
[-31.53919029 194.03421021]
[-32.68735504 179.07821655]
[-18.81825638 173.36459351]
[-7.39352560 163.64474487]
[4.03120422 153.92488098]
[15.45593452 144.20503235]
[10.59600735 138.49267578]
[-3.66984034 143.12792969]
[-17.93568802 147.76318359]
[-32.20153427 152.39843750]
[-46.46738434 157.03369141]
[-55.00261688 170.61784363]
[-70.96026611 172.27105713]
[-82.09897614 160.72512817]
[-79.87409973 144.83709717]
[-65.99235535 136.79490662]
[-51.10263824 142.76783752]
[-36.83679199 138.13258362]
[-22.57094383 133.49732971]
[-8.30509567 128.86207581]
[5.96075249 124.22682190]
[6.19058895 116.73034668]
[-8.80236626 116.27066803]
[-23.79532051 115.81099701]
[-38.78826904 115.35108948]
[-38.32813263 100.35815430]
[-23.33564758 100.81803894]
[-8.34269238 101.27771759]
[6.65026236 101.73738861]
[6.88009930 94.24091339]
[-7.07499409 88.74042511]
[-21.03008652 83.23993683]
[-34.98517990 77.73944855]
[-48.94027328 72.23895264]
[-65.07111359 75.19329071]
[-75.48749542 62.52715683]
[-69.47393799 47.27038193]
[-53.21667480 45.11782837]
[-43.43978500 58.28386307]
[-29.48469162 63.78435135]
[-15.52959824 69.28484344]
[-1.57450521 74.78533173]
[12.38058758 80.28582001]
[21.83527374 68.64069366]
[13.58552647 56.11305618]
[5.33578014 43.58541870]
[-2.00119853 38.13605499]
[-2.94268322 30.80199432]
[-10.99948502 18.14940643]
[-19.05628586 5.49681997]
[-27.11308670 -7.15576696]
[-35.16988754 -19.80835342]
[-43.32340240 -32.39883423]
[-58.85159302 -35.34006882]
[-67.68274689 -48.44679260]
[-64.57750702 -63.94301987]
[-51.37814713 -72.63510895]
[-35.91561508 -69.36620331]
[-27.36356163 -56.07568359]
[-30.79576492 -40.64858246]
[-24.48854065 -36.78934097]
[-22.51730156 -27.86515427]
[-14.46050072 -15.21256828]
[-6.40369892 -2.55998135]
[1.65310228 10.09260559]
[9.70990372 22.74519157]
[17.86341667 35.33567429]
[26.11316299 47.86331177]
[34.36291122 60.39094543]
[61.92716217 40.91207123]
[92.54241180 36.51538467]
[119.11192322 45.71554184]
[119.80130005 30.73139191]
[120.49067688 15.74724197]
[110.78575897 2.97249651]
[114.86206055 -12.54405308]
[129.59259033 -18.89943695]
[143.67735291 -11.21834946]
[146.31172180 4.60693741]
[135.47482300 16.43661690]
[134.78544617 31.42076683]
[134.09606934 46.40491867]
[147.73620605 52.64564514]
[158.62341309 42.32727814]
[163.31735229 27.21842003]
[177.87739563 24.07928085]
[188.76460266 13.76091099]
[192.84321594 5.58216858]
[199.89860535 3.36942410]
[210.94265747 -6.78089476]
[221.98670959 -16.93121338]
[233.03074646 -27.08153343]
[237.95567322 -42.11668396]
[252.56211853 -45.03233337]
[263.60617065 -55.18265533]
[274.65020752 -65.33296967]
[279.57513428 -80.36812592]
[294.18157959 -83.28377533]
[305.22561646 -93.43408966]
[316.26968384 -103.58441162]
[320.65872192 -119.38530731]
[336.60269165 -123.22217560]
[347.69979858 -111.14797211]
[342.53430176 -95.58361053]
[326.41998291 -92.54035950]
[315.37594604 -82.39004517]
[304.33187866 -72.23972321]
[300.19692993 -57.93059158]
[284.80053711 -54.28892517]
[273.75646973 -44.13860321]
[262.71243286 -33.98828506]
[258.57745361 -19.67915154]
[243.18107605 -16.03748322]
[232.13702393 -5.88716507]
[221.09297180 4.26315403]
[210.04891968 14.41347313]
[199.08297729 24.64811707]
[188.19577026 34.96648788]
[184.28056335 49.33730316]
[168.94178772 53.21448517]
[158.05458069 63.53285217]
[161.47238159 78.13828278]
[175.80758667 82.55438232]
[184.93510437 82.09040833]
[190.32768250 87.14954376]
[204.59353638 91.78480530]
[218.85939026 96.42005920]
[233.12522888 101.05531311]
[242.25878906 100.73126984]
[247.57321167 105.87244415]
[261.76635742 110.72576904]
[275.95950317 115.57909393]
[287.47659302 105.41780090]
[302.53451538 102.39214325]
[317.08276367 107.31600952]
[327.20788574 118.86490631]
[330.18634033 133.93223572]
[325.21688843 148.46496582]
[313.63632202 158.55386353]
[298.55972290 161.48506165]
[284.04263306 156.47009277]
[273.99011230 144.85794067]
[271.10617065 129.77223206]
[256.91302490 124.91891479]
[242.71989441 120.06558990]
[228.48997498 115.32115936]
[214.22413635 110.68590546]
[199.95828247 106.05065155]
[185.69242859 101.41539764]
[171.39149475 96.88958740]
[157.05628967 92.47348785]
[155.66908264 104.48833466]
[151.85585022 115.59080505]
[145.93498230 125.31355286]
[138.30973816 133.28129578]
[129.44401550 139.22496033]
[136.50863647 152.45716858]
[143.67443848 165.63485718]
[150.94099426 178.75723267]
[165.26542664 186.74111938]
[165.24282837 203.14025879]
[150.89642334 211.08460999]
[136.98457336 202.40171814]
[137.81860352 186.02380371]
[130.55204773 172.90141296]
[124.55874634 168.57067871]
[123.27642822 159.52177429]
[116.21181488 146.28958130]
[99.25559235 162.84992981]
[72.95343781 171.73275757]
[72.95343781 186.73275757]
[72.95343781 201.73275757]
[72.95343781 216.73275757]
[80.69073486 230.53292847]
[72.95343781 243.26019287]
[83.23520660 255.57542419]
[79.87632751 271.26290894]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 202]
[5 200]
[6 199]
[7 198]
[8 197]
[9 22]
[10 21]
[11 20]
[12 19]
[34 48]
[35 47]
[36 46]
[37 45]
[38 44]
[57 70]
[58 69]
[59 68]
[60 67]
[61 66]
[71 96]
[72 95]
[73 94]
[75 93]
[76 92]
[77 91]
[78 90]
[79 89]
[80 87]
[99 109]
[100 108]
[101 107]
[110 148]
[111 147]
[113 145]
[114 144]
[116 143]
[117 142]
[118 141]
[119 140]
[121 138]
[122 137]
[123 136]
[125 134]
[126 133]
[127 132]
[149 178]
[150 177]
[152 176]
[153 175]
[154 174]
[155 173]
[157 172]
[158 171]
[159 170]
[183 195]
[184 194]
[185 192]
[186 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
