%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 20:25:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAAGAGUGAUAAGGAAAUUGUUGGUACUCUUCUAGGAUUUGAUGACUUUGUCAAUAUGGUACUGGAAGAUGUCACUGAGUUUGAAAUCACACCAGAAGGAAGAAGGAUUACUAAAUUAGAUCAGAUUUUGCUAAAUGGAAAUAAUAUAACAAUGCUGGUUCCUGGAGGAGAAGGACCUGAAGUGUGA\
) } def
/len { sequence length } bind def

/coor [
[90.43972015 166.73735046]
[75.44344330 167.07167053]
[62.13524246 160.15129089]
[53.79664230 147.68261719]
[52.48377609 132.74018860]
[58.52036667 119.00848389]
[70.41791534 109.87347412]
[85.24150848 107.58754730]
[70.29274750 106.34886169]
[55.34397507 105.11016846]
[40.39521027 103.87147522]
[25.44644165 102.63278961]
[17.24593353 113.72435760]
[4.73309660 119.26728821]
[-8.77614594 117.90979004]
[-19.75932312 110.11344910]
[-25.40587616 98.00460815]
[-40.33211899 96.51892853]
[-55.25836182 95.03324890]
[-70.18460846 93.54756165]
[-76.38381958 95.92794800]
[-82.00567627 94.95354462]
[-85.57694244 91.75801086]
[-100.44590759 89.77962494]
[-115.31486511 87.80124664]
[-130.18382263 85.82286072]
[-145.05279541 83.84448242]
[-159.93759155 81.98908997]
[-174.83723450 80.25682068]
[-189.75068665 78.64778900]
[-204.67692566 77.16210938]
[-219.60317993 75.67642212]
[-234.52941895 74.19074249]
[-249.45565796 72.70505524]
[-264.38189697 71.21937561]
[-279.30813599 69.73368835]
[-294.23440552 68.24800873]
[-308.73306274 74.58042145]
[-320.63140869 65.62058258]
[-335.55764771 64.13490295]
[-350.48388672 62.64921951]
[-361.55105591 75.42903137]
[-377.89123535 79.06455994]
[-393.02951050 72.31787109]
[-401.08755493 58.02538300]
[-416.03631592 56.78669357]
[-430.98507690 55.54800415]
[-445.93386841 54.30931091]
[-462.21820068 59.02701569]
[-471.25949097 44.68506622]
[-459.98089600 32.02687073]
[-444.69515991 39.36054611]
[-429.74639893 40.59923553]
[-414.79763794 41.83792496]
[-399.84884644 43.07661438]
[-392.10519409 32.18886566]
[-379.89297485 26.50776291]
[-366.36102295 27.61622047]
[-355.05718994 35.33104706]
[-348.99819946 47.72297287]
[-334.07196045 49.20865631]
[-319.14572144 50.69433975]
[-305.71469116 44.25566483]
[-292.74871826 53.32176590]
[-277.82247925 54.80744934]
[-262.89620972 56.29313278]
[-247.96998596 57.77881241]
[-233.04373169 59.26449585]
[-218.11749268 60.75017929]
[-203.19125366 62.23586273]
[-188.26499939 63.72154617]
[-181.28509521 61.25109482]
[-173.10496521 65.35718536]
[-158.20532227 67.08945465]
[-151.18551636 64.73474121]
[-143.07440186 68.97551727]
[-128.20544434 70.95390320]
[-113.33648682 72.93228149]
[-98.46752167 74.91066742]
[-83.59856415 76.88904572]
[-68.69892120 78.62131500]
[-53.77267838 80.10700226]
[-38.84643555 81.59268188]
[-23.92019272 83.07836914]
[-13.40982437 70.47917938]
[2.69909024 66.58199310]
[18.11212921 73.11316681]
[26.68513107 87.68402100]
[41.63389969 88.92271423]
[56.58266830 90.16139984]
[71.53143311 91.40009308]
[86.48020172 92.63877869]
[91.87408447 81.61058044]
[105.89973450 75.89590454]
[115.87509918 64.69358063]
[125.85047150 53.49126053]
[124.51465607 36.05754471]
[135.96853638 23.29677963]
[152.76998901 22.76995850]
[162.55877686 11.40423584]
[165.70190430 -4.10161209]
[179.87020874 -8.69600391]
[189.65899658 -20.06172562]
[199.44778442 -31.42745018]
[209.23657227 -42.79317093]
[207.61268616 -60.20241928]
[218.85401917 -73.15081787]
[235.64447021 -73.95536041]
[245.24400330 -85.48137665]
[254.84352112 -97.00739288]
[264.44305420 -108.53340912]
[259.71029663 -123.21688080]
[263.68939209 -138.12225342]
[275.11065674 -148.49328613]
[290.32958984 -151.02061462]
[304.48989868 -144.89776611]
[313.07308960 -132.07853699]
[313.34027100 -116.65348816]
[305.20617676 -103.54469299]
[291.26641846 -96.93512726]
[275.96908569 -98.93388367]
[266.36953735 -87.40786743]
[256.77001953 -75.88185120]
[247.17048645 -64.35583496]
[250.12449646 -51.80305099]
[245.23097229 -39.66173935]
[234.07086182 -32.45443726]
[220.60229492 -33.00438690]
[210.81350708 -21.63866234]
[201.02471924 -10.27293968]
[191.23593140 1.09278297]
[188.79296875 15.78567791]
[173.92449951 21.19302177]
[164.13571167 32.55874634]
[166.88177490 45.15865326]
[161.78817749 57.21739578]
[150.51042175 64.23918915]
[137.05279541 63.46662903]
[127.07742310 74.66895294]
[117.10205841 85.87126923]
[131.22694397 80.82275391]
[143.34939575 71.98837280]
[158.30667114 70.85709381]
[171.61997986 77.76766205]
[179.30276489 90.65077972]
[179.05451965 105.64872742]
[170.94955444 118.27051544]
[157.41482544 124.73667908]
[142.50318909 123.11099243]
[130.68028259 113.88096619]
[116.73004150 108.36819458]
[126.32956696 119.89421082]
[135.92909241 131.42022705]
[151.30828857 130.53332520]
[164.11116028 138.77590942]
[169.54133606 152.81076050]
[165.71182251 167.17991638]
[180.48884583 172.83235168]
[182.68855286 187.56362915]
[192.28807068 199.08964539]
[201.88760376 210.61566162]
[209.79917908 215.21797180]
[211.54866028 222.41253662]
[220.95629883 234.09568787]
[230.36395264 245.77885437]
[245.85467529 244.87498474]
[258.90002441 253.27729797]
[264.48376465 267.75491333]
[260.45886230 282.74090576]
[248.37297058 292.47283936]
[232.87335205 293.20858765]
[219.91993713 284.66528320]
[214.49356079 270.12792969]
[218.68078613 255.18649292]
[209.27314758 243.50334167]
[199.86549377 231.82017517]
[190.36158752 220.21519470]
[180.76205444 208.68917847]
[171.16253662 197.16316223]
[157.07212830 192.33514404]
[154.18580627 176.77944946]
[139.36097717 177.94670105]
[126.53983307 170.06745911]
[120.74901581 155.98484802]
[124.40308380 141.01976013]
[114.80355072 129.49374390]
[105.20402527 117.96772766]
[111.84658051 131.41676331]
[111.20092773 146.40286255]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 92]
[9 91]
[10 90]
[11 89]
[12 88]
[17 84]
[18 83]
[19 82]
[20 81]
[23 80]
[24 79]
[25 78]
[26 77]
[27 76]
[28 74]
[29 73]
[30 71]
[31 70]
[32 69]
[33 68]
[34 67]
[35 66]
[36 65]
[37 64]
[39 62]
[40 61]
[41 60]
[45 55]
[46 54]
[47 53]
[48 52]
[94 140]
[95 139]
[96 138]
[99 134]
[100 133]
[102 131]
[103 130]
[104 129]
[105 128]
[108 124]
[109 123]
[110 122]
[111 121]
[151 187]
[152 186]
[153 185]
[157 181]
[159 179]
[160 178]
[161 177]
[163 176]
[164 175]
[165 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
