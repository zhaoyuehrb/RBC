%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 14:41:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAACCGCCUGUACCUCACCCCCGACGGCUUCUUCUUCCGAGUCCACAUGUUAGCCCUGGACUCCUCCAGCUGCAAUAAGCCGUGUCCAGAGUUUAAACCUGGUAUUGAAACUGACCUGAAUGACGCUGCAUAUGUACUUUAUACCACCGUUUGUAACGUGGGUGCCACAGCCCGGGCUGUAGGUCGCCCAGCCUUUUUUUGGGAGCGAUGGGAAACAAUGACAUGA\
) } def
/len { sequence length } bind def

/coor [
[97.20162964 513.57604980]
[89.68322754 500.50222778]
[85.65314484 485.96917725]
[85.36471558 470.89047241]
[88.83607483 456.21392822]
[95.84901428 442.86218262]
[105.96268463 431.67449951]
[118.54133606 423.35412598]
[132.79426575 418.42413330]
[131.56097412 403.47491455]
[130.32766724 388.52569580]
[129.09437561 373.57647705]
[127.86108398 358.62728882]
[116.36806488 349.22271729]
[114.90437317 334.07965088]
[124.84667969 322.08847046]
[123.61338043 307.13925171]
[122.38008881 292.19003296]
[118.70233154 285.79052734]
[121.23385620 277.02752686]
[120.20575714 262.06280518]
[106.01931763 253.79150391]
[99.49733734 238.53955078]
[103.39463043 222.24496460]
[116.36679077 211.38102722]
[115.13349152 196.43180847]
[106.37596130 184.38378906]
[112.95242310 169.99418640]
[111.71912384 155.04496765]
[110.48583221 140.09574890]
[109.25254059 125.14653778]
[102.21835327 127.74849701]
[96.13362885 141.45893860]
[90.04891205 155.16937256]
[79.67991638 166.00837708]
[65.47082520 170.81478882]
[50.65110016 168.49621582]
[38.58910370 159.57975769]
[50.82676315 150.90567017]
[63.06441879 142.23158264]
[56.03023148 144.83354187]
[41.13209534 146.57872009]
[26.23396492 148.32389832]
[11.33583260 150.06907654]
[-3.56230044 151.81425476]
[-18.46043205 153.55943298]
[-33.35856628 155.30461121]
[-38.78674316 169.61521912]
[-50.25131607 179.75534058]
[-65.11780548 183.39486694]
[-79.97000122 179.69744873]
[-91.39497375 169.51272583]
[-96.76735687 155.18107605]
[-94.85260773 139.99581909]
[-86.09072876 127.44639587]
[-72.49513245 120.41658020]
[-57.18998337 120.52177429]
[-43.69229889 127.73780060]
[-35.10374451 140.40647888]
[-20.20561218 138.66130066]
[-5.30747890 136.91612244]
[9.59065342 135.17094421]
[24.48878670 133.42576599]
[39.38691711 131.68058777]
[54.28504944 129.93540955]
[55.81753922 122.59364319]
[40.90554428 124.21611023]
[34.75445175 110.53531647]
[45.86487961 100.45770264]
[58.88251877 107.91011810]
[60.41500854 100.56835938]
[47.45906067 93.00903320]
[34.50311279 85.44970703]
[19.28447723 89.71218872]
[5.55039692 81.89230347]
[1.44905519 66.62945557]
[9.41370583 52.97881699]
[24.71906281 49.03907394]
[38.28472900 57.14760208]
[42.06243515 72.49375916]
[55.01838684 80.05308533]
[67.97433472 87.61241150]
[78.68950653 77.11549377]
[71.39836884 64.00674438]
[56.12213516 62.02108765]
[45.07343292 51.54351425]
[42.34515381 36.74417114]
[48.77748489 23.33659363]
[41.48635101 10.22784328]
[34.19521713 -2.88090777]
[26.90408134 -15.98965931]
[20.00692177 -21.95859528]
[19.60424614 -29.32863045]
[12.49362755 -42.53617096]
[-1.73524213 -50.68916321]
[-1.51839268 -67.08687592]
[12.92109966 -74.86074829]
[26.72912407 -66.01368713]
[25.70116806 -49.64678955]
[32.81178665 -36.43924713]
[40.01283264 -23.28079414]
[47.30396652 -10.17204189]
[54.59510040 2.93670893]
[61.88623428 16.04545975]
[76.66983795 17.65265846]
[87.80399323 27.77662277]
[90.87776184 42.68988037]
[84.50711823 56.71561050]
[91.79825592 69.82436371]
[99.22779083 70.85004425]
[99.11388397 55.85047531]
[98.99998474 40.85091019]
[98.88608551 25.85134125]
[91.68578339 12.69247627]
[93.63562775 -2.18025494]
[103.98458862 -13.03838539]
[118.74660492 -15.69973755]
[132.23585510 -9.13924789]
[139.25674438 4.11620712]
[137.10507202 18.96108055]
[126.60797119 29.67847633]
[122.43426514 44.08612061]
[118.26055908 58.49376297]
[114.08686066 72.90140533]
[121.51639557 73.92708588]
[132.08654785 63.28417206]
[142.65672302 52.64125443]
[146.89155579 37.39735031]
[161.35000610 33.81929779]
[171.92016602 23.17638016]
[182.49032593 12.53346443]
[193.06050110 1.89054775]
[197.29533386 -13.35335922]
[211.75378418 -16.93140984]
[222.32394409 -27.57432747]
[232.89410400 -38.21724319]
[227.34849548 -52.40054703]
[228.05769348 -67.61294556]
[234.89880371 -81.21878815]
[246.68658447 -90.86078644]
[261.37872314 -94.86840820]
[276.42971802 -92.54730988]
[289.23190308 -84.29962921]
[297.56719971 -71.55432892]
[299.99148560 -56.51961136]
[296.08471680 -41.80033112]
[286.52380371 -29.94669342]
[272.96520996 -23.01241112]
[257.75802612 -22.19889259]
[243.53703308 -27.64708138]
[232.96687317 -17.00416565]
[222.39669800 -6.36124849]
[218.91790771 8.12140560]
[203.70341492 12.46070957]
[193.13325500 23.10362625]
[182.56307983 33.74654388]
[171.99291992 44.38945770]
[168.51412964 58.87211227]
[153.29963684 63.21141815]
[142.72947693 73.85433197]
[132.15930176 84.49725342]
[137.00930786 98.69152832]
[151.88209534 100.64092255]
[166.75488281 102.59030914]
[181.62767029 104.53970337]
[196.50047302 106.48909760]
[211.38627625 108.33642578]
[226.28440857 110.08160400]
[241.19416809 111.72454834]
[256.11483765 113.26518250]
[271.03549194 114.80582428]
[285.95617676 116.34645844]
[300.87686157 117.88710022]
[315.61685181 110.69931793]
[329.05850220 120.09370422]
[327.37414551 136.40612793]
[312.29653931 142.85575867]
[299.33621216 132.80776978]
[284.41552734 131.26713562]
[269.49487305 129.72650146]
[254.57420349 128.18585205]
[239.65351868 126.64521790]
[232.68621826 129.08164978]
[224.53923035 124.97973633]
[209.64109802 123.23455811]
[202.64102173 125.57517242]
[194.55107117 121.36188507]
[179.67828369 119.41249084]
[164.80549622 117.46310425]
[149.93270874 115.51371002]
[135.05992126 113.56431580]
[124.20175171 123.91324615]
[125.43505096 138.86245728]
[126.66834259 153.81167603]
[127.90163422 168.76089478]
[136.74737549 181.87817383]
[130.08270264 195.19851685]
[131.31600952 210.14773560]
[143.58969116 216.40457153]
[151.11212158 227.81661987]
[152.00946045 241.34696960]
[146.15417480 253.45764160]
[135.17048645 261.03469849]
[136.19857788 275.99942017]
[137.32929993 290.95675659]
[138.56259155 305.90597534]
[139.79588318 320.85516357]
[151.56892395 331.05487061]
[152.60668945 346.23306274]
[142.81030273 357.39398193]
[144.04359436 372.34320068]
[145.27688599 387.29241943]
[146.51017761 402.24163818]
[147.74346924 417.19082642]
[162.61163330 419.71838379]
[176.38378906 425.86483765]
[188.19418335 435.24380493]
[197.30041504 447.26574707]
[203.13006592 461.17495728]
[205.31668091 476.09707642]
[203.72279358 491.09408569]
[198.44860840 505.22326660]
[189.82565308 517.59643555]
[178.39599609 527.43585205]
[164.87809753 534.12292480]
[150.12170410 537.23736572]
[135.05441284 536.58331299]
[120.62337494 532.20202637]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 214]
[10 213]
[11 212]
[12 211]
[13 210]
[16 207]
[17 206]
[18 205]
[20 204]
[21 203]
[25 198]
[26 197]
[28 195]
[29 194]
[30 193]
[31 192]
[41 65]
[42 64]
[43 63]
[44 62]
[45 61]
[46 60]
[47 59]
[71 82]
[72 81]
[73 80]
[83 109]
[84 108]
[88 104]
[89 103]
[90 102]
[91 101]
[93 100]
[94 99]
[125 161]
[126 160]
[127 159]
[129 157]
[130 156]
[131 155]
[132 154]
[134 152]
[135 151]
[136 150]
[162 191]
[163 190]
[164 189]
[165 188]
[166 187]
[167 185]
[168 184]
[169 182]
[170 181]
[171 180]
[172 179]
[173 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
