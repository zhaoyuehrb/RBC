%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 10:40:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACCCGCGGUAACCAGCGUGAGCUCGCCCGCCAGAAGAAUAUGAAAAAGCAGAGCGACUCGGUUAAGGGAAAGCGCCGAGAUGACGGGCUUUCUGCUGCCGCCCGCAAGCAGAGGGACUCGGAGAUCAUGCAGCAGAAGCAGAAAAAGGCAAACGAGAAGAAGGAGGAACCCAAGUAG\
) } def
/len { sequence length } bind def

/coor [
[68.27421570 194.42056274]
[73.64568329 180.41539001]
[74.42639160 165.43571472]
[75.20709991 150.45605469]
[75.98780060 135.47637939]
[76.76850891 120.49671173]
[69.27867126 120.10636139]
[62.04324722 133.24594116]
[54.80781555 146.38551331]
[47.57238770 159.52510071]
[54.29112625 173.51217651]
[51.47219467 188.77104187]
[40.19952774 199.43437195]
[24.80769539 201.40188599]
[11.21517086 193.91703796]
[4.64855909 179.85791016]
[7.63285494 164.63050842]
[19.02053642 154.09010315]
[34.43280792 152.28967285]
[41.66823578 139.15008545]
[48.90366364 126.01050568]
[56.13909531 112.87092590]
[73.33052063 106.55246735]
[90.96229553 101.79821777]
[76.16575623 99.33605957]
[61.36920929 96.87389374]
[48.59881210 105.79324341]
[33.62808609 103.08547974]
[25.20355034 90.85589600]
[10.40700436 88.39373016]
[-4.38954115 85.93157196]
[-19.24516869 83.85543823]
[-34.14980698 82.16672516]
[-49.05444717 80.47801971]
[-63.97317886 78.91872406]
[-78.90488434 77.48896027]
[-91.02576447 87.27272034]
[-106.14826202 85.61002350]
[-115.40089417 73.99432373]
[-123.74636841 84.98361206]
[-136.33497620 90.36508942]
[-149.83012390 88.82890320]
[-160.71215820 80.88352966]
[-166.19633484 68.69485474]
[-181.10098267 67.00614929]
[-193.30567932 77.04711151]
[-209.02742004 75.43399048]
[-218.93878174 63.12381363]
[-217.15953064 47.41999817]
[-204.74525452 37.63933563]
[-189.06114197 39.58452225]
[-179.41227722 52.10150909]
[-164.50762939 53.79021454]
[-153.83090210 41.33711243]
[-137.67565918 37.65536880]
[-122.35335541 44.38613510]
[-113.97112274 59.06262207]
[-102.68234253 49.41384125]
[-87.51910400 50.65111923]
[-77.47511292 62.55725479]
[-62.54341125 63.98702240]
[-55.56648636 61.48797226]
[-47.36574173 65.57337952]
[-32.46110153 67.26208496]
[-17.55646133 68.95079803]
[-14.57032013 67.02846527]
[-10.49731731 66.47234344]
[-5.99690819 67.78067780]
[-1.92738056 71.13502502]
[12.86916542 73.59718323]
[27.66571045 76.05934906]
[39.59664917 67.21693420]
[54.63752365 69.50312805]
[63.83136749 82.07734680]
[78.62791443 84.53951263]
[93.42446136 87.00167084]
[107.81351471 82.76432800]
[118.91411591 72.67588043]
[130.01470947 62.58743668]
[127.88627625 39.41261292]
[142.47003174 21.57716751]
[165.14167786 19.11114311]
[172.60408020 6.09912109]
[180.06646729 -6.91290140]
[175.17788696 -23.69594193]
[183.75918579 -38.53665924]
[200.08782959 -42.51229095]
[207.32325745 -55.65187073]
[214.55868530 -68.79145050]
[221.79411316 -81.93103027]
[228.91523743 -95.13290405]
[235.92153931 -108.39608765]
[242.92782593 -121.65926361]
[249.93411255 -134.92243958]
[256.94039917 -148.18562317]
[263.94668579 -161.44880676]
[270.95297241 -174.71197510]
[277.95925903 -187.97515869]
[284.96554565 -201.23834229]
[291.85647583 -214.56181335]
[298.63153076 -227.94459534]
[295.02069092 -243.57601929]
[305.10299683 -256.05508423]
[321.14413452 -255.80889893]
[330.83877563 -243.02632141]
[326.74993896 -227.51307678]
[312.01431274 -221.16957092]
[305.23925781 -207.78677368]
[305.02273560 -200.37895203]
[298.22872925 -194.23204041]
[291.22244263 -180.96887207]
[284.21615601 -167.70568848]
[277.20986938 -154.44250488]
[270.20358276 -141.17933655]
[263.19729614 -127.91615295]
[256.19100952 -114.65297699]
[249.18470764 -101.38979340]
[242.17842102 -88.12661743]
[241.83335876 -80.72366333]
[234.93370056 -74.69560242]
[227.69827271 -61.55601883]
[220.46284485 -48.41643906]
[213.22740173 -35.27685928]
[218.51301575 -23.50845528]
[216.00976562 -10.65428734]
[206.41311646 -1.45975840]
[193.07849121 0.54948843]
[185.61610413 13.56151104]
[178.15370178 26.57353401]
[183.45771790 33.54827881]
[186.51606750 41.75962067]
[201.50195312 42.41030121]
[216.48782349 43.06097794]
[226.91551208 31.40776443]
[242.40139771 29.23485374]
[255.63351440 37.56822968]
[260.36404419 52.47312546]
[254.35942078 66.91190338]
[240.45480347 74.06701660]
[225.21554565 70.56004333]
[215.83714294 58.04685974]
[200.85127258 57.39617920]
[185.86538696 56.74550247]
[182.66935730 64.03775787]
[177.64628601 70.26026154]
[171.13537598 74.96350098]
[163.58409119 77.80152130]
[155.51739502 78.55735016]
[147.50129700 77.15943909]
[140.10314941 73.68803406]
[129.00256348 83.77648163]
[117.90196228 93.86492920]
[132.48031616 90.33338928]
[145.34399414 82.61810303]
[160.30221558 81.49942780]
[174.17039490 87.21553802]
[183.99597168 98.54946899]
[187.68708801 113.08823395]
[184.45791626 127.73652649]
[174.99592590 139.37571716]
[161.31559753 145.52784729]
[146.32946777 144.88310242]
[133.22807312 137.57876587]
[124.80106354 125.17089081]
[113.05854797 115.83744049]
[118.88887787 129.65797424]
[133.62176514 135.37792969]
[139.91831970 149.87374878]
[134.04292297 164.54533386]
[119.48133850 170.68827820]
[104.87269592 164.65809631]
[98.88404083 150.03237915]
[105.06834412 135.48831177]
[99.23801422 121.66777039]
[91.74817657 121.27742004]
[90.96747589 136.25708008]
[90.18676758 151.23675537]
[89.40605927 166.21643066]
[88.62535858 181.19609070]
[92.51181030 195.68386841]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 22]
[8 21]
[9 20]
[10 19]
[24 76]
[25 75]
[26 74]
[29 71]
[30 70]
[31 69]
[32 65]
[33 64]
[34 63]
[35 61]
[36 60]
[39 57]
[44 53]
[45 52]
[77 152]
[78 151]
[79 150]
[82 129]
[83 128]
[84 127]
[87 123]
[88 122]
[89 121]
[90 120]
[91 118]
[92 117]
[93 116]
[94 115]
[95 114]
[96 113]
[97 112]
[98 111]
[99 110]
[100 108]
[101 107]
[131 143]
[132 142]
[133 141]
[165 174]
[166 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
