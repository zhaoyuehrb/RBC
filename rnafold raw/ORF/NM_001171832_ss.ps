%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 05:28:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUUUCAAGAAGUCAAGGAAGUCAUGAAAUGUUGGGGCAAGUCAGGCAGGUGCAGAACAACAUGUAAAGAAAGUGAAGUAUACUAUAUAUUAUGCAAAACUGAGGCUAAGUGCUGUGUGGAUCCCAAGUAUGUACCUGUAAAACCAAAAUUAACAGACACAAAUACAAGCCUGGAAUCAACUUCUGCAGUCUGA\
) } def
/len { sequence length } bind def

/coor [
[-17.33633041 267.50561523]
[-32.11994171 268.91287231]
[-41.47229004 280.64035034]
[-50.82463455 292.36782837]
[-60.17698288 304.09530640]
[-69.52932739 315.82275391]
[-78.88167572 327.55023193]
[-88.23402405 339.27770996]
[-97.58637238 351.00518799]
[-100.14137268 366.61871338]
[-114.12596130 371.74517822]
[-112.54964447 387.24203491]
[-122.20131683 399.00213623]
[-136.98492432 400.40942383]
[-146.33728027 412.13690186]
[-155.68962097 423.86434937]
[-158.24462891 439.47790527]
[-172.22921753 444.60433960]
[-171.86901855 460.64337158]
[-184.27609253 470.81411743]
[-199.93278503 467.31448364]
[-206.82862854 452.82907104]
[-199.67372131 438.46984863]
[-183.95668030 435.25201416]
[-182.07063293 420.47729492]
[-167.41709900 414.51202393]
[-158.06474304 402.78454590]
[-148.71240234 391.05706787]
[-150.63008118 376.33096313]
[-141.31253052 364.30441284]
[-125.85343170 362.39282227]
[-123.96737671 347.61813354]
[-109.31384277 341.65283203]
[-99.96149445 329.92535400]
[-90.60914612 318.19790649]
[-81.25679779 306.47042847]
[-71.90445709 294.74295044]
[-62.55210876 283.01547241]
[-53.19976044 271.28799438]
[-43.84741211 259.56054688]
[-45.76508713 244.83442688]
[-36.44754028 232.80787659]
[-20.98844528 230.89628601]
[-11.63609791 219.16882324]
[-2.28375053 207.44134521]
[7.06859636 195.71388245]
[16.42094421 183.98640442]
[25.77329063 172.25892639]
[25.73851967 168.72142029]
[27.42323303 164.99217224]
[30.89835930 161.88311768]
[35.86796570 160.20678711]
[45.77320480 148.94241333]
[55.67844772 137.67803955]
[65.58368683 126.41365814]
[75.48892975 115.14928436]
[85.39417267 103.88490295]
[88.26155090 89.16152191]
[83.30736542 75.00326538]
[78.35317993 60.84502029]
[66.49216461 50.37473297]
[69.59172058 35.80620575]
[64.63753510 21.64795685]
[59.68334961 7.48970604]
[44.57139587 7.78333569]
[30.12813950 3.39757848]
[17.76440048 -5.22601414]
[8.68380070 -17.23258591]
[3.76559401 -31.43870544]
[3.47954345 -46.44900513]
[7.84108162 -60.79324341]
[16.41102982 -73.07029724]
[28.33978844 -82.08504486]
[23.38560295 -96.24329376]
[18.43141747 -110.40155029]
[3.71585464 -114.95768738]
[-5.38882494 -127.16252899]
[-5.55902481 -142.21028137]
[3.06096053 -154.32778931]
[-1.89322555 -168.48603821]
[-6.84741163 -182.64428711]
[-11.80159760 -196.80253601]
[-16.75578308 -210.96078491]
[-31.65544510 -215.29434204]
[-41.13569260 -227.57865906]
[-41.55117798 -243.09017944]
[-32.74214172 -255.86437988]
[-18.09583282 -260.98934937]
[-3.24405789 -256.49441528]
[6.10237122 -244.10797119]
[6.34956264 -228.59286499]
[-2.59753323 -215.91497803]
[2.35665250 -201.75672913]
[7.31083870 -187.59848022]
[12.26502419 -173.44023132]
[17.21920967 -159.28196716]
[31.51372528 -155.18260193]
[40.76277924 -143.31167603]
[41.25405121 -128.09286499]
[32.58966827 -115.35573578]
[37.54385376 -101.19747925]
[42.49803925 -87.03923035]
[57.44492340 -87.42868042]
[71.79979706 -83.17336273]
[84.15326691 -74.67796326]
[93.28839874 -62.76408768]
[98.30056000 -48.59084702]
[98.68703461 -33.54206848]
[94.39739990 -19.09120750]
[85.83967590 -6.65706158]
[73.84159851 2.53552008]
[78.79578400 16.69376945]
[83.74996948 30.85202026]
[95.25662994 40.30961227]
[92.51142883 55.89083099]
[97.46561432 70.04907990]
[102.41980743 84.20732880]
[114.22184753 93.46539307]
[129.15254211 94.90573883]
[143.63189697 88.52932739]
[155.55740356 97.45298004]
[170.48808289 98.89332581]
[185.41877747 100.33367157]
[199.89813232 93.95726013]
[211.82363892 102.88092041]
[226.75431824 104.32126617]
[241.68501282 105.76161194]
[256.16436768 99.38520050]
[268.08987427 108.30885315]
[283.02056885 109.74919891]
[297.49993896 103.37278748]
[309.42541504 112.29644775]
[324.35610962 113.73679352]
[339.28680420 115.17713928]
[354.21749878 116.61748505]
[366.34530640 106.84230804]
[381.46661377 108.51571655]
[390.71099854 120.13796997]
[405.64169312 121.57831573]
[420.57238770 123.01866150]
[426.37969971 109.06278229]
[436.04385376 97.43972015]
[448.70550537 89.18299103]
[463.23883057 85.02677155]
[478.35150146 85.34064484]
[492.69970703 90.09668732]
[505.00765991 98.87200165]
[514.18090820 110.88629150]
[519.40374756 125.07125854]
[520.21179199 140.16557312]
[516.53326416 154.82707214]
[508.69512939 167.75205994]
[497.39440918 177.79124451]
[483.63595581 184.05197144]
[468.64318848 185.97752380]
[453.74920654 183.39668274]
[440.27838135 176.53895569]
[429.42855835 166.01409912]
[422.16445923 152.75798035]
[419.13204956 137.94934082]
[404.20135498 136.50900269]
[389.27066040 135.06864929]
[377.97503662 144.70944214]
[362.81268311 143.46141052]
[352.77713013 131.54817200]
[337.84646606 130.10781860]
[322.91577148 128.66748047]
[307.98507690 127.22713470]
[294.57366943 133.70657349]
[281.58023071 124.67988586]
[266.64953613 123.23954010]
[253.23811340 129.71897888]
[240.24465942 120.69229889]
[225.31398010 119.25195312]
[210.38330078 117.81160736]
[196.97187805 124.29104614]
[183.97842407 115.26435852]
[169.04774475 113.82401276]
[154.11705017 112.38366699]
[140.70564270 118.86310577]
[127.71218872 109.83642578]
[112.78150177 108.39608002]
[105.41196442 113.71144104]
[96.65855408 113.79014587]
[86.75331116 125.05452728]
[76.84806824 136.31889343]
[66.94282532 147.58328247]
[57.03758240 158.84765625]
[47.13233948 170.11203003]
[37.50076294 181.61128235]
[28.14841652 193.33874512]
[18.79606819 205.06622314]
[9.44372177 216.79370117]
[0.09137477 228.52116394]
[-9.26097202 240.24864197]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 40]
[3 39]
[4 38]
[5 37]
[6 36]
[7 35]
[8 34]
[9 33]
[11 31]
[14 28]
[15 27]
[16 26]
[18 24]
[43 195]
[44 194]
[45 193]
[46 192]
[47 191]
[48 190]
[52 189]
[53 188]
[54 187]
[55 186]
[56 185]
[57 184]
[58 117]
[59 116]
[60 115]
[62 113]
[63 112]
[64 111]
[73 102]
[74 101]
[75 100]
[79 96]
[80 95]
[81 94]
[82 93]
[83 92]
[118 182]
[119 181]
[121 179]
[122 178]
[123 177]
[125 175]
[126 174]
[127 173]
[129 171]
[130 170]
[132 168]
[133 167]
[134 166]
[135 165]
[138 162]
[139 161]
[140 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
