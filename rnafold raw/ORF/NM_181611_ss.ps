%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 13:25:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAACUACUACGGCAACUACUAUGGAGGCCUGGGCUACGGCUACGGAGGCUUCGAUGACCUGGGCUAUGGCUAUGGCUGUGGAUGUGGCAGCUUCCGCAGACUGGGCUAUGGCGGUGGCUACGGAGGCUACGGAUACGGCUCUGGCUUCGGAGGCUAUGGAUACCGCAGCUGCCGUCCAUCAUGCUAUGGAGGAUAUGGAUUCUCUGGAUUUUAUUGA\
) } def
/len { sequence length } bind def

/coor [
[-6.28451824 218.24325562]
[-7.88857222 203.32926941]
[-6.07347155 188.43948364]
[-0.93353075 174.34761047]
[7.26417446 161.78585815]
[18.09368324 151.40695190]
[30.99228668 143.75018311]
[45.28975677 139.21340942]
[60.24319077 138.03237915]
[75.07559204 140.26843262]
[89.01625061 145.80538940]
[101.34080505 154.35556030]
[111.40820312 165.47375488]
[107.18221283 151.08135986]
[102.95622253 136.68896484]
[98.73023987 122.29657745]
[78.59945679 114.35130310]
[72.39752960 90.46950531]
[58.58067703 96.30855560]
[44.76382065 102.14761353]
[33.33681488 118.75967407]
[14.26926231 115.52492523]
[0.62478274 121.75614929]
[-13.01969719 127.98737335]
[-22.35858536 140.75827026]
[-37.14990997 139.00727844]
[-50.79438782 145.23849487]
[-64.43886566 151.46972656]
[-78.08335114 157.70094299]
[-91.72782898 163.93217468]
[-105.37230682 170.16340637]
[-119.01679230 176.39462280]
[-130.37393188 194.57182312]
[-150.81716919 191.71130371]
[-164.18226624 198.52116394]
[-177.54736328 205.33102417]
[-186.02032471 219.37171936]
[-202.40893555 218.78376770]
[-209.85398865 204.17202759]
[-200.69667053 190.56777954]
[-184.35722351 191.96592712]
[-170.99212646 185.15606689]
[-157.62702942 178.34620667]
[-156.29782104 169.57916260]
[-151.00584412 162.29356384]
[-142.83383179 158.19494629]
[-133.55487061 158.31391907]
[-125.24801636 162.75015259]
[-111.60353088 156.51892090]
[-97.95905304 150.28768921]
[-84.31457520 144.05647278]
[-70.67009735 137.82524109]
[-57.02561569 131.59402466]
[-43.38113403 125.36279297]
[-35.01819229 113.03759766]
[-19.25092316 114.34289551]
[-5.60644245 108.11167145]
[8.03803730 101.88044739]
[10.73009014 92.03160095]
[18.56101036 85.14293671]
[29.10741234 83.66751099]
[38.92477036 88.33075714]
[52.74162292 82.49170685]
[66.55847931 76.65265656]
[70.88712311 62.29079819]
[62.59814453 49.78908157]
[54.30916977 37.28736877]
[46.02019501 24.78565216]
[37.73122025 12.28393745]
[29.44224358 -0.21777837]
[21.15326881 -12.71949387]
[12.86429310 -25.22120857]
[4.57531786 -37.72292328]
[-7.88383102 -41.04259109]
[-14.53117561 -51.62039948]
[-12.26676369 -63.49887466]
[-20.37637520 -76.11767578]
[-28.57587814 -88.67825317]
[-36.86485291 -101.17996979]
[-45.15382767 -113.68168640]
[-53.44280624 -126.18340302]
[-61.73178101 -138.68511963]
[-70.02075195 -151.18682861]
[-78.30973053 -163.68855286]
[-92.38431549 -170.91464233]
[-92.96875000 -185.79779053]
[-101.25772858 -198.29949951]
[-116.17274475 -205.11671448]
[-117.45679474 -221.46551514]
[-103.78896332 -230.52764893]
[-89.22953796 -222.98078918]
[-88.75601196 -206.58847046]
[-80.46704102 -194.08676147]
[-66.98533630 -187.75486755]
[-65.80801392 -171.97752380]
[-57.51903915 -159.47581482]
[-49.23006439 -146.97409058]
[-40.94108963 -134.47238159]
[-32.65211487 -121.97066498]
[-24.36313820 -109.46894836]
[-16.07416344 -96.96723175]
[-9.76235580 -93.13202667]
[-7.75757265 -84.22728729]
[0.35203946 -71.60848236]
[16.36214828 -64.41525269]
[17.07703209 -46.01189804]
[25.36600876 -33.51018524]
[33.65498352 -21.00846863]
[41.94395828 -8.50675392]
[50.23293304 3.99496150]
[58.52191162 16.49667740]
[66.81088257 28.99839211]
[75.09986115 41.50010681]
[83.38883972 54.00182343]
[97.89604187 57.81509781]
[111.26113892 51.00524139]
[124.62623596 44.19538116]
[137.99133301 37.38552475]
[151.35643005 30.57566833]
[155.26516724 25.25669098]
[160.48822021 23.03817558]
[165.20184326 23.76833916]
[178.75595093 17.34291267]
[192.31005859 10.91748714]
[205.86416626 4.49206114]
[215.01974487 -8.41088581]
[229.83456421 -6.87128067]
[243.38867188 -13.29670620]
[256.94277954 -19.72213173]
[270.49688721 -26.14755821]
[279.65246582 -39.05050659]
[294.46728516 -37.51089859]
[308.02139282 -43.93632507]
[321.57550049 -50.36175156]
[334.89163208 -57.26686096]
[347.95281982 -64.64285278]
[361.01403809 -72.01885223]
[366.94265747 -78.95892334]
[374.31481934 -79.40539551]
[382.71884155 -92.80997467]
[397.59738159 -92.11864471]
[410.76257324 -99.30738068]
[423.92776489 -106.49611664]
[437.09292603 -113.68484497]
[450.25811768 -120.87358093]
[458.32669067 -135.15049744]
[474.72540283 -135.03079224]
[482.58465576 -120.63761139]
[473.81954956 -106.77742004]
[457.44686890 -107.70839691]
[444.28167725 -100.51966095]
[431.11648560 -93.33093262]
[417.95129395 -86.14219666]
[404.78613281 -78.95346069]
[397.32376099 -66.06306458]
[381.50354004 -66.24021149]
[368.39001465 -58.95765686]
[355.32882690 -51.58166504]
[342.26763916 -44.20566940]
[355.81530762 -37.76668930]
[359.37054443 -23.19410133]
[350.31027222 -11.23953056]
[335.31918335 -10.72303772]
[325.45764160 -22.02568817]
[328.00094604 -36.80764389]
[314.44680786 -30.38221550]
[300.89270020 -23.95679092]
[292.70660400 -11.51343250]
[276.92233276 -12.59344864]
[263.36819458 -6.16802263]
[249.81410217 0.25740355]
[236.25999451 6.68282938]
[228.07389832 19.12618637]
[212.28959656 18.04617119]
[198.73548889 24.47159767]
[185.18138123 30.89702415]
[171.62725830 37.32244873]
[158.16629028 43.94076538]
[144.80119324 50.75062180]
[131.43609619 57.56048203]
[118.07099152 64.37033844]
[104.70589447 71.18019867]
[125.07013702 94.04759216]
[113.12263489 118.07058716]
[117.34861755 132.46298218]
[121.57460785 146.85537720]
[125.80059814 161.24777222]
[131.35655212 165.55497742]
[133.93269348 171.38757324]
[133.45117188 177.09300232]
[142.09376526 189.35290527]
[150.73635864 201.61282349]
[159.37895203 213.87274170]
[168.02156067 226.13265991]
[176.66415405 238.39257812]
[185.30674744 250.65249634]
[200.41033936 257.04101562]
[202.16073608 273.34646606]
[188.75724792 282.79522705]
[173.98826599 275.66720581]
[173.04682922 259.29510498]
[164.40423584 247.03517151]
[155.76164246 234.77525330]
[147.11904907 222.51533508]
[138.47644043 210.25541687]
[129.83384705 197.99551392]
[121.19126129 185.73559570]
[123.63713837 200.53483582]
[122.66797638 215.50349426]
[118.33413696 229.86378479]
[110.86080170 242.86952209]
[100.63629913 253.84492493]
[88.19189453 262.21969604]
[74.17422485 267.55868530]
[59.31164169 269.58447266]
[44.37643433 268.19177246]
[30.14464569 263.45297241]
[17.35577011 255.61431885]
[6.67432976 245.08309937]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 187]
[14 186]
[15 185]
[16 184]
[18 64]
[19 63]
[20 62]
[22 58]
[23 57]
[24 56]
[26 54]
[27 53]
[28 52]
[29 51]
[30 50]
[31 49]
[32 48]
[34 43]
[35 42]
[36 41]
[65 114]
[66 113]
[67 112]
[68 111]
[69 110]
[70 109]
[71 108]
[72 107]
[73 106]
[76 104]
[77 103]
[78 101]
[79 100]
[80 99]
[81 98]
[82 97]
[83 96]
[84 95]
[86 93]
[87 92]
[115 182]
[116 181]
[117 180]
[118 179]
[119 178]
[122 177]
[123 176]
[124 175]
[125 174]
[127 172]
[128 171]
[129 170]
[130 169]
[132 167]
[133 166]
[134 165]
[135 159]
[136 158]
[137 157]
[139 156]
[141 154]
[142 153]
[143 152]
[144 151]
[145 150]
[190 207]
[191 206]
[192 205]
[193 204]
[194 203]
[195 202]
[196 201]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
