%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 19:29:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGACCCCAACUGCUCUUGCGCCACUGGUGGCUCCUGCACGUGCGCCGGCUCCUGCAAGUGCAAAGAGUGCAAAUGCACCUCCUGCAAGAAGAGCUGCUGUUCCUGCUGCCCCGUGGGCUGUGCCAAGUGUGCCCAGGGCUGCGUCUGCAAAGGGGCAUCGGAGAAGUGCAGCUGCUGUGCCUGA\
) } def
/len { sequence length } bind def

/coor [
[42.09171677 212.59062195]
[35.58106232 213.66632080]
[29.10939217 212.67416382]
[19.96964264 224.56806946]
[10.82989311 236.46197510]
[1.79037380 248.43223572]
[-7.14827824 260.47799683]
[-15.98543167 272.59841919]
[-24.72046280 284.79266357]
[-33.45549393 296.98687744]
[-29.64512253 315.52816772]
[-40.39521408 330.71911621]
[-58.51641083 333.20623779]
[-66.83686066 345.68704224]
[-75.15731812 358.16781616]
[-75.67214966 374.55889893]
[-90.25054932 382.06903076]
[-103.89550018 372.97247314]
[-102.57025146 356.62698364]
[-87.63810730 349.84738159]
[-79.31764984 337.36657715]
[-70.99720001 324.88580322]
[-75.61316681 314.42562866]
[-74.58641815 302.91793823]
[-68.05735016 293.24121094]
[-57.55706024 287.87203979]
[-45.64972305 288.25186157]
[-36.91469193 276.05761719]
[-28.17966080 263.86340332]
[-26.83764267 256.57958984]
[-19.19404411 251.53935242]
[-10.25539303 239.49359131]
[-8.79120255 232.23336792]
[-1.06401181 227.32223511]
[8.07573795 215.42832947]
[17.21548653 203.53442383]
[17.48411751 180.40551758]
[39.48455048 171.19229126]
[47.38103485 158.43904114]
[55.27751541 145.68577576]
[63.17399597 132.93252563]
[71.07048035 120.17926025]
[65.30113983 106.33315277]
[50.68527222 102.96025085]
[36.06940842 99.58734894]
[21.45354271 96.21444702]
[6.83767605 92.84155273]
[-6.46009159 100.95370483]
[-21.23460960 97.32489777]
[-28.88636398 84.59751892]
[-43.50223160 81.22461700]
[-59.01758194 86.53553772]
[-71.19508362 75.55189514]
[-67.50756836 59.57271576]
[-51.74843597 55.03600693]
[-40.12932968 66.60874939]
[-25.51346207 69.98165131]
[-13.05830383 61.89434052]
[1.81231093 65.10673523]
[10.21057796 78.22568512]
[24.82644272 81.59858704]
[39.44231033 84.97148895]
[54.05817413 88.34439087]
[68.67404175 91.71729279]
[65.88751221 83.71524048]
[65.15336609 74.47012329]
[56.01361465 62.57621384]
[48.28642273 57.66508484]
[46.82223129 50.40485764]
[37.88357925 38.35909271]
[28.94492912 26.31332588]
[20.00627708 14.26755810]
[4.75154543 8.24882126]
[2.60451746 -8.00917149]
[15.77387142 -17.78158951]
[30.71210480 -11.01540756]
[32.05204391 5.32890654]
[40.99069595 17.37467384]
[49.92934799 29.42044067]
[58.86800003 41.46620941]
[67.90751648 53.43646622]
[77.04727173 65.33036804]
[90.79511261 59.32896805]
[104.54173279 53.32810974]
[102.03357697 38.53929138]
[89.00348663 29.59545135]
[86.19625092 14.04247856]
[95.27735901 1.10767615]
[110.85913849 -1.53496623]
[123.69721222 7.68238401]
[126.17496490 23.29123688]
[116.82239532 36.03113556]
[119.33055115 50.81995392]
[131.66979980 59.34889984]
[146.39073181 56.46890259]
[161.11164856 53.58890533]
[175.83258057 50.70890427]
[190.55349731 47.82890701]
[205.27442932 44.94890976]
[214.10865784 32.11949158]
[229.07879639 29.40846825]
[241.25524902 37.90962982]
[255.97616577 35.02962875]
[270.69708252 32.14963150]
[285.39331055 29.14608002]
[300.06378174 26.01918983]
[314.73425293 22.89229774]
[326.61831665 12.44820213]
[340.67889404 17.36240196]
[355.34936523 14.23551083]
[370.01983643 11.10861969]
[384.69030762 7.98172855]
[399.36077881 4.85483742]
[414.03121948 1.72794592]
[428.61825562 -1.76760828]
[443.11254883 -5.62960577]
[457.60687256 -9.49160290]
[472.10116577 -13.35360050]
[486.59548950 -17.21559906]
[501.08978271 -21.07759666]
[508.59518433 -26.32143021]
[515.86004639 -24.88053894]
[530.41723633 -28.49849892]
[544.94342041 -32.23860931]
[559.43774414 -36.10060883]
[573.93206787 -39.96260452]
[581.88488770 -53.35628128]
[596.63916016 -57.06641769]
[609.35900879 -49.40208435]
[617.06243896 -63.20182419]
[632.29003906 -67.43212891]
[646.00756836 -59.58323669]
[650.07659912 -44.31175613]
[642.08312988 -30.67798233]
[626.76947021 -26.77059555]
[613.22100830 -34.90777588]
[606.00109863 -21.93052864]
[591.35681152 -17.80743599]
[577.79406738 -25.46829605]
[563.29974365 -21.60630035]
[548.80541992 -17.74430275]
[543.13970947 -12.97413635]
[534.03515625 -13.94135857]
[519.47802734 -10.32339859]
[504.95178223 -6.58328724]
[490.45748901 -2.72128987]
[475.96316528 1.14070761]
[461.46887207 5.00270510]
[446.97454834 8.86470222]
[432.48025513 12.72669983]
[430.40182495 15.59928608]
[426.81912231 17.59892845]
[422.16186523 18.02528000]
[417.15811157 16.39841080]
[402.48767090 19.52530289]
[387.81719971 22.65219307]
[373.14672852 25.77908516]
[358.47625732 28.90597725]
[343.80578613 32.03286743]
[332.97103882 42.25330734]
[317.86114502 37.56276321]
[303.19067383 40.68965530]
[288.52020264 43.81654739]
[282.62136841 48.29522324]
[273.57708740 46.87055588]
[258.85617065 49.75055313]
[244.13525391 52.63055420]
[236.06025696 65.09369659]
[221.17216492 68.22413635]
[208.15441895 59.66983414]
[193.43350220 62.54983139]
[178.71257019 65.42983246]
[163.99165344 68.30982971]
[149.27072144 71.18982697]
[134.54980469 74.06982422]
[138.17939758 110.50952911]
[113.67835999 133.30120850]
[83.82373810 128.07574463]
[75.92725372 140.82901001]
[68.03076935 153.58226013]
[60.13428879 166.33551025]
[52.23780823 179.08877563]
[55.47743988 185.19087219]
[56.65253448 191.94654846]
[55.67841721 198.68194580]
[52.68319702 204.73527527]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 36]
[4 35]
[5 34]
[6 32]
[7 31]
[8 29]
[9 28]
[10 27]
[13 22]
[14 21]
[15 20]
[38 182]
[39 181]
[40 180]
[41 179]
[42 178]
[43 64]
[44 63]
[45 62]
[46 61]
[47 60]
[50 57]
[51 56]
[66 82]
[67 81]
[69 80]
[70 79]
[71 78]
[72 77]
[84 93]
[85 92]
[94 175]
[95 174]
[96 173]
[97 172]
[98 171]
[99 170]
[102 167]
[103 166]
[104 165]
[105 163]
[106 162]
[107 161]
[109 159]
[110 158]
[111 157]
[112 156]
[113 155]
[114 154]
[115 150]
[116 149]
[117 148]
[118 147]
[119 146]
[120 145]
[122 144]
[123 143]
[124 141]
[125 140]
[126 139]
[129 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
