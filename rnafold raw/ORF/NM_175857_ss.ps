%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 06:46:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCUCUGCGACAACUUCCCCGGGGCUGUCUUCCCAGGAUGCUACUGGGGCAGCUAUGGCUACCCGCUGGGAUAUAGCGUUGGCUGUGGCUAUGGCAGCACCUACUCUCCAGUGGGCUAUGGCUUCGGCUAUGGCUACAACGGCUGUGGGGCUUUCGGCUACAGGAGAUACUCGCCAUUUGCUCUCUACUGA\
) } def
/len { sequence length } bind def

/coor [
[167.85092163 499.12838745]
[158.37686157 487.33441162]
[153.01290894 473.18936157]
[152.28457642 458.07891846]
[156.26322937 443.48355103]
[164.55908203 430.83306885]
[176.35937500 421.36691284]
[190.50804138 416.01245117]
[189.77583313 401.03033447]
[189.04362488 386.04821777]
[188.31141663 371.06607056]
[173.60748291 366.63552856]
[161.30059814 357.39688110]
[152.90693665 344.46102905]
[149.46998596 329.39587402]
[151.43080139 314.03659058]
[158.57157898 300.26171875]
[170.03959656 289.76370239]
[164.32756042 275.89385986]
[158.61552429 262.02401733]
[152.90347290 248.15419006]
[147.19143677 234.28434753]
[135.19050598 225.46237183]
[137.08970642 209.75556946]
[131.37767029 195.88572693]
[125.66562653 182.01588440]
[119.95358276 168.14604187]
[114.24153900 154.27619934]
[108.52949524 140.40635681]
[91.57519531 141.63562012]
[75.08273315 135.85394287]
[61.90463638 123.65985870]
[54.47639465 106.79077911]
[39.89227295 110.29839325]
[25.30814934 113.80600739]
[10.72402573 117.31362152]
[-3.86009669 120.82123566]
[-10.66943550 134.89842224]
[-24.95542908 141.25801086]
[-39.97266769 136.89721680]
[-48.63047028 123.87505341]
[-46.84088898 108.34020996]
[-35.44890594 97.62775421]
[-19.83347130 96.79577637]
[-7.36771250 106.23711395]
[7.21641016 102.72949982]
[21.80053329 99.22188568]
[36.38465500 95.71427155]
[50.96877670 92.20664978]
[55.53431320 77.91834259]
[45.68626404 66.60392761]
[30.78974533 61.27436066]
[28.27002525 46.59443283]
[18.42197418 35.28002167]
[8.57392502 23.96560860]
[-1.27412426 12.65119648]
[-11.12217426 1.33678484]
[-20.97022438 -9.97762680]
[-30.81827354 -21.29203987]
[-40.66632462 -32.60644913]
[-50.51437378 -43.92086411]
[-60.36242294 -55.23527527]
[-70.21047211 -66.54969025]
[-80.24137878 -77.70230103]
[-90.45249176 -88.69017029]
[-100.92881775 -99.42546844]
[-111.66411591 -109.90179443]
[-122.39941406 -120.37812042]
[-133.13470459 -130.85444641]
[-149.12956238 -132.09713745]
[-158.01097107 -145.45753479]
[-152.96588135 -160.68667603]
[-137.86445618 -166.10206604]
[-124.29120636 -157.54948425]
[-122.65837860 -141.58973694]
[-111.92308807 -131.11341858]
[-101.18778992 -120.63709259]
[-90.45249176 -110.16075897]
[-86.92651367 -109.84315491]
[-83.38119507 -107.79259491]
[-80.63360596 -104.01964569]
[-79.46462250 -98.90128326]
[-69.25351715 -87.91341400]
[-64.58406067 -86.84705353]
[-60.54033279 -82.82677460]
[-58.89606094 -76.39773560]
[-49.04801178 -65.08332825]
[-39.19995880 -53.76891327]
[-29.35191154 -42.45450211]
[-19.50386047 -31.14008904]
[-9.65581131 -19.82567596]
[0.19223800 -8.51126480]
[10.04028797 2.80314708]
[19.88833809 14.11755943]
[29.73638725 25.43197060]
[39.58443832 36.74638367]
[53.77655792 41.26666641]
[57.00067520 56.75587845]
[66.84872437 68.07028961]
[78.78231812 58.88056946]
[93.11485291 53.99787903]
[108.33574677 53.99089813]
[114.04779053 40.12105560]
[119.75983429 26.25121117]
[125.47187805 12.38136768]
[131.18391418 -1.48847640]
[128.47518921 -17.66237068]
[141.29824829 -27.88495827]
[156.46182251 -21.64011574]
[158.36692810 -5.35200357]
[145.05375671 4.22356558]
[139.34172058 18.09341049]
[133.62968445 31.96325302]
[127.91763306 45.83309937]
[122.20559692 59.70294189]
[133.98724365 68.98695374]
[146.13682556 60.18994141]
[158.28642273 51.39292526]
[170.43600464 42.59591293]
[182.58560181 33.79890060]
[194.73518372 25.00188637]
[206.88478088 16.20487213]
[219.03436279 7.40785789]
[225.23129272 -7.77536392]
[241.51330566 -9.73190403]
[251.13087463 3.55095720]
[244.19026184 18.40895271]
[227.83139038 19.55744934]
[215.68179321 28.35446167]
[203.53219604 37.15147781]
[191.38261414 45.94849014]
[179.23301697 54.74550247]
[167.08343506 63.54251862]
[154.93383789 72.33953094]
[142.78425598 81.13654327]
[145.26434326 93.95766449]
[144.07409668 106.65427399]
[139.47941589 118.22091675]
[132.00898743 127.78952026]
[122.39933777 134.69430542]
[128.11138916 148.56414795]
[133.82342529 162.43400574]
[139.53546143 176.30384827]
[145.24751282 190.17369080]
[150.95954895 204.04353333]
[163.36903381 213.85755920]
[161.06127930 228.57229614]
[166.77331543 242.44213867]
[172.48536682 256.31198120]
[178.19740295 270.18182373]
[183.90943909 284.05166626]
[201.06120300 283.68572998]
[217.03758240 289.82339478]
[229.47309875 301.52279663]
[236.53910828 317.02102661]
[237.21264648 333.99978638]
[231.42443848 349.93218994]
[242.81863403 359.68780518]
[254.21281433 369.44345093]
[265.00976562 367.97689819]
[274.62979126 372.60711670]
[279.99325562 381.58334351]
[279.53219604 391.80975342]
[290.60281372 401.93109131]
[306.37805176 400.97357178]
[318.15435791 411.51370239]
[318.94503784 427.29818726]
[308.28097534 438.96240234]
[292.48901367 439.58615112]
[280.93820190 428.79937744]
[280.48144531 413.00167847]
[269.41085815 402.88034058]
[250.28068542 400.12625122]
[244.45718384 380.83764648]
[233.06298828 371.08200073]
[221.66880798 361.32635498]
[216.04182434 365.28106689]
[209.86619568 368.30834961]
[203.29354858 370.33389282]
[204.02574158 385.31600952]
[204.75794983 400.29812622]
[205.49015808 415.28024292]
[220.09352112 419.22955322]
[232.76063538 427.49993896]
[242.25048828 439.28118896]
[247.63339233 453.41906738]
[248.38197327 468.52847290]
[244.42288208 483.12918091]
[236.14399719 495.79077148]
[224.35639954 505.27273560]
[210.21492004 510.64614868]
[195.10499573 511.38461304]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 182]
[9 181]
[10 180]
[11 179]
[18 151]
[19 150]
[20 149]
[21 148]
[22 147]
[24 145]
[25 144]
[26 143]
[27 142]
[28 141]
[29 140]
[33 49]
[34 48]
[35 47]
[36 46]
[37 45]
[50 99]
[51 98]
[53 96]
[54 95]
[55 94]
[56 93]
[57 92]
[58 91]
[59 90]
[60 89]
[61 88]
[62 87]
[63 86]
[64 83]
[65 82]
[66 78]
[67 77]
[68 76]
[69 75]
[102 115]
[103 114]
[104 113]
[105 112]
[106 111]
[116 135]
[117 134]
[118 133]
[119 132]
[120 131]
[121 130]
[122 129]
[123 128]
[157 176]
[158 175]
[159 174]
[163 172]
[164 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
