%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sat Sep 12 11:56:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGGUCACCAGCAGCUGUACUGGAGCCACCCGCGAAAAUUCGGCCAGGGUUCUCGCUCUUGUCGUGUCUGUUCAAACCGGCACGGUCUGAUCCGGAAAUAUGGCCUCAAUAUGUGCCGCCAGUGUUUCCGUCAGUACGCGAAGGAUAUCGGUUUCAUUAAGAAAGACCUGAGCUGUCUUCCUUGGCACUGCCUAUGGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[98.06121063 133.93569946]
[104.61380768 120.44270325]
[97.18502808 119.41155243]
[89.51974487 132.30509949]
[81.85446930 145.19863892]
[74.18918610 158.09217834]
[79.55748749 176.25685120]
[70.11006927 192.30448914]
[52.24558258 196.28570557]
[44.97902298 209.40809631]
[37.71246338 222.53048706]
[30.44590378 235.65287781]
[37.13146591 249.65583801]
[34.27636719 264.90798950]
[22.97845268 275.54455566]
[7.58199930 277.47558594]
[-5.99274158 269.95852661]
[-12.52600574 255.88386536]
[-9.50561810 240.66358948]
[1.90701890 230.15020752]
[17.32351494 228.38632202]
[24.59007263 215.26393127]
[31.85663223 202.14154053]
[39.12319183 189.01914978]
[33.66989136 178.99145508]
[33.73728943 167.45716858]
[39.42436600 157.28456116]
[49.41827393 151.05915833]
[61.29564285 150.42689514]
[68.96092224 137.53335571]
[76.62620544 124.63981628]
[84.29148102 111.74626923]
[79.38793182 106.07131195]
[64.67726898 89.04643250]
[50.80810547 94.76013184]
[36.93894196 100.47382355]
[27.36495590 113.78813171]
[11.07661724 111.88496399]
[4.82996988 96.72213745]
[15.05102921 83.89786530]
[31.22524643 86.60466003]
[45.09440994 80.89096832]
[58.96357346 75.17726898]
[69.61073303 64.61138153]
[75.43052673 50.78640747]
[81.25032806 36.96142960]
[87.07012177 23.13645363]
[92.88992310 9.31147861]
[98.70971680 -4.51349783]
[104.52951050 -18.33847427]
[95.37021637 -30.58815002]
[93.58393860 -45.67808151]
[99.55094910 -59.54390717]
[111.57675934 -68.50135803]
[126.37183380 -70.22509003]
[132.08552551 -84.09425354]
[137.69277954 -98.00679016]
[143.30003357 -111.91932678]
[148.90730286 -125.83186340]
[142.96432495 -140.23043823]
[148.84907532 -154.25984192]
[162.61253357 -159.83683777]
[168.21978760 -173.74937439]
[173.82704163 -187.66191101]
[167.16114807 -199.36904907]
[168.43788147 -212.58477783]
[176.96788025 -222.50415039]
[189.46591187 -225.65058899]
[195.28570557 -239.47557068]
[201.10549927 -253.30055237]
[190.98095703 -266.37002563]
[188.83976746 -282.66839600]
[195.17231750 -297.73635864]
[208.16346741 -307.49923706]
[224.21171570 -309.36892700]
[229.81896973 -323.28146362]
[235.42622375 -337.19400024]
[241.03347778 -351.10653687]
[246.64073181 -365.01907349]
[252.24800110 -378.93161011]
[257.85525513 -392.84414673]
[262.70858765 -407.03726196]
[259.02243042 -422.42306519]
[269.93365479 -432.56182861]
[274.01907349 -446.99475098]
[266.56863403 -460.67425537]
[270.91744995 -475.25311279]
[284.00466919 -482.27166748]
[288.09011841 -496.70458984]
[292.17553711 -511.13751221]
[296.26098633 -525.57043457]
[295.01104736 -532.07049561]
[296.94436646 -537.42095947]
[300.69906616 -540.37939453]
[305.22488403 -554.68035889]
[309.75070190 -568.98132324]
[314.27648926 -583.28228760]
[318.80230713 -597.58319092]
[323.32812500 -611.88415527]
[327.85394287 -626.18511963]
[332.37973022 -640.48602295]
[336.79583740 -654.82122803]
[341.10195923 -669.18988037]
[345.40808105 -683.55847168]
[349.71420288 -697.92712402]
[342.47427368 -711.71917725]
[347.04598999 -726.22967529]
[360.23922729 -733.04681396]
[364.54534912 -747.41546631]
[358.23175049 -762.16394043]
[365.95275879 -776.22686768]
[381.78543091 -778.81634521]
[393.58435059 -767.94598389]
[392.29837036 -751.95452881]
[378.91397095 -743.10931396]
[374.60784912 -728.74072266]
[381.87719727 -715.79107666]
[377.71487427 -701.15795898]
[364.08282471 -693.62097168]
[359.77670288 -679.25238037]
[355.47058105 -664.88372803]
[351.16445923 -650.51513672]
[352.25607300 -643.20190430]
[346.68069458 -635.96020508]
[342.15487671 -621.65930176]
[337.62905884 -607.35833740]
[333.10327148 -593.05737305]
[328.57745361 -578.75646973]
[324.05163574 -564.45550537]
[319.52581787 -550.15454102]
[315.00003052 -535.85363770]
[310.69390869 -521.48498535]
[306.60845947 -507.05206299]
[302.52304077 -492.61914062]
[298.43759155 -478.18621826]
[305.90454102 -465.34954834]
[301.96691895 -450.65429688]
[288.45199585 -442.90933228]
[284.36657715 -428.47640991]
[288.34494019 -414.12295532]
[277.14151001 -402.95184326]
[290.21060181 -410.31381226]
[304.97750854 -407.67980957]
[314.69525146 -396.25326538]
[314.92373657 -381.25500488]
[305.55862427 -369.53771973]
[290.87881470 -366.45507812]
[277.59149170 -373.41549683]
[271.76779175 -387.23687744]
[266.16052246 -373.32434082]
[260.55328369 -359.41180420]
[254.94601440 -345.49926758]
[249.33876038 -331.58673096]
[243.73150635 -317.67419434]
[238.12425232 -303.76165771]
[247.23356628 -293.58291626]
[251.08612061 -280.40881348]
[248.87507629 -266.79519653]
[240.97579956 -255.40876770]
[228.88348389 -248.50485229]
[214.93048096 -247.48075867]
[209.11067200 -233.65577698]
[203.29087830 -219.83079529]
[210.29745483 -204.54438782]
[203.95762634 -188.60557556]
[187.73957825 -182.05464172]
[182.13232422 -168.14210510]
[176.52507019 -154.22956848]
[182.57467651 -140.66720581]
[177.08630371 -126.47804260]
[162.81983948 -120.22460938]
[157.21257019 -106.31207275]
[151.60531616 -92.39953613]
[145.99806213 -78.48699951]
[146.41358948 -71.10443878]
[140.19680786 -64.40529633]
[149.30479431 -52.61927032]
[151.30377197 -37.75791168]
[145.55764771 -23.79909515]
[133.51702881 -14.52977180]
[118.35449219 -12.51867771]
[112.53469086 1.30629873]
[106.71489716 15.13127518]
[100.89509583 28.95625114]
[95.07530212 42.78122711]
[89.25550842 56.60620499]
[83.43570709 70.43118286]
[104.43784332 63.39104462]
[127.22670746 70.88554382]
[142.09426880 92.00825500]
[141.39396667 119.67237091]
[145.25775146 134.16619873]
[149.12152100 148.66003418]
[152.98530579 163.15386963]
[164.94322205 174.37617493]
[160.94044495 190.27931213]
[145.09466553 194.50349426]
[133.70669556 182.70324707]
[138.49147034 167.01765442]
[134.62770081 152.52381897]
[130.76391602 138.02998352]
[126.90013885 123.53614807]
[119.47135925 122.50499725]
[122.10120392 137.27265930]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 32]
[4 31]
[5 30]
[6 29]
[9 24]
[10 23]
[11 22]
[12 21]
[34 43]
[35 42]
[36 41]
[44 187]
[45 186]
[46 185]
[47 184]
[48 183]
[49 182]
[50 181]
[55 176]
[56 174]
[57 173]
[58 172]
[59 171]
[62 168]
[63 167]
[64 166]
[68 163]
[69 162]
[70 161]
[75 155]
[76 154]
[77 153]
[78 152]
[79 151]
[80 150]
[81 149]
[82 141]
[84 139]
[85 138]
[88 135]
[89 134]
[90 133]
[91 132]
[94 131]
[95 130]
[96 129]
[97 128]
[98 127]
[99 126]
[100 125]
[101 124]
[102 122]
[103 121]
[104 120]
[105 119]
[108 116]
[109 115]
[191 202]
[192 201]
[193 200]
[194 199]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
