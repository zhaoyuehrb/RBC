%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 22:25:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCUUCACAUCCCUUCAUGCGGUUGUUCUCUGGGAUGAACAAUCAAUACACCCGUCGGGAGGUCUUCUGCCGGAACACCUGCCAUGAUCUCAAGCAUUUCUGGGAAAGGGAAAUUGGCAAACAGACUUACUACCGAGAAUCAGAGGAACGUCGUCUGGGAAGAAGCGCACUGAGAAAGCUCAGAGAAGAAUGGAAGCAGAGGCUGGAAACAAAGCUGAGGCUGCGGAACAAUCCAGAGGACACUGAAAAGAGG\
ACAAAUGUUGGCUGA\
) } def
/len { sequence length } bind def

/coor [
[98.00279236 253.93333435]
[111.21017456 246.40780640]
[109.30257416 231.52960205]
[107.39497375 216.65139771]
[105.48737335 201.77317810]
[103.57978058 186.89497375]
[101.67218018 172.01676941]
[99.76457977 157.13856506]
[78.51937103 159.19476318]
[56.09281540 152.97360229]
[48.02313995 165.61799622]
[39.95346451 178.26237488]
[31.88378906 190.90675354]
[23.81411171 203.55113220]
[15.74443626 216.19551086]
[23.68352127 229.18521118]
[25.18933105 244.27227783]
[20.01649284 258.45895386]
[9.24133205 268.94976807]
[-4.96159458 273.70227051]
[-19.75821495 271.82461548]
[-27.82789230 284.46899414]
[-28.01545334 300.86709595]
[-42.44104004 308.66674805]
[-56.26484299 299.84436035]
[-55.26611710 283.47564697]
[-40.47227097 276.39932251]
[-32.40259552 263.75494385]
[-40.33730316 251.12539673]
[-42.00852585 236.24195862]
[-37.03155518 222.05073547]
[-26.34300232 211.38420105]
[-12.02504539 206.39590454]
[3.10005713 208.12582397]
[11.16973305 195.48144531]
[19.23940849 182.83706665]
[27.30908585 170.19268799]
[35.37876129 157.54830933]
[43.44843674 144.90393066]
[39.05412674 138.82609558]
[26.89846420 147.61471558]
[14.74279881 156.40333557]
[2.58713508 165.19195557]
[-9.56852913 173.98057556]
[-18.41343880 186.09535217]
[-32.66848755 181.42698669]
[-32.63363647 166.42701721]
[-18.35714912 161.82492065]
[-6.20148420 153.03630066]
[5.95417976 144.24768066]
[18.10984421 135.45906067]
[30.26550865 126.67044067]
[25.87119865 120.59260559]
[11.33469868 124.29262543]
[-3.20180106 127.99265289]
[-17.06006432 137.75917053]
[-30.28125191 127.14613342]
[-23.74296761 111.50365448]
[-6.90182447 113.45615387]
[7.63467503 109.75612640]
[22.17117500 106.05610657]
[25.19339943 91.36372375]
[13.29751205 82.22655487]
[1.40162396 73.08938599]
[-10.49426365 63.95221710]
[-22.39015198 54.81504822]
[-34.28604126 45.67787933]
[-51.60479736 48.26259995]
[-65.15643311 37.71553802]
[-66.83546448 20.96549034]
[-78.83647919 11.96683788]
[-90.83748627 2.96818399]
[-102.83849335 -6.03046942]
[-114.83950806 -15.02912235]
[-126.84051514 -24.02777672]
[-140.94569397 -18.11243629]
[-156.01838684 -20.03879547]
[-168.02331543 -29.19017601]
[-173.79713440 -43.02921677]
[-171.88159180 -57.80068588]
[-183.88259888 -66.79933929]
[-195.88360596 -75.79799652]
[-214.22697449 -77.59067535]
[-220.45477295 -94.01375580]
[-232.55929565 -102.87268066]
[-247.97764587 -100.65629578]
[-260.12713623 -109.81294250]
[-262.14511108 -124.52564240]
[-274.24963379 -133.38456726]
[-287.96520996 -126.59184265]
[-303.26623535 -126.96272278]
[-316.63659668 -134.41198730]
[-325.00393677 -147.22785950]
[-326.44546509 -162.46533203]
[-320.62994385 -176.62295532]
[-308.89370728 -186.44740295]
[-293.93371582 -189.68109131]
[-279.18762207 -185.58094788]
[-268.04397583 -175.08915710]
[-263.06350708 -160.61663818]
[-265.39068604 -145.48908997]
[-253.28617859 -136.63015747]
[-238.65206909 -139.15570068]
[-226.25016785 -130.34393311]
[-223.70036316 -114.97720337]
[-211.59584045 -106.11827087]
[-199.62095642 -107.66191864]
[-189.47023010 -100.41137695]
[-186.88496399 -87.79900360]
[-174.88394165 -78.80035400]
[-162.88293457 -69.80169678]
[-149.24002075 -75.77968597]
[-134.33749390 -74.11510468]
[-122.18877411 -65.15547943]
[-116.11599731 -51.22643661]
[-117.84185791 -36.02878571]
[-105.84085083 -27.03013229]
[-93.83984375 -18.03147888]
[-81.83882904 -9.03282547]
[-69.83782196 -0.03417224]
[-57.83681107 8.96448135]
[-45.48337173 5.37515163]
[-33.13007355 9.60900784]
[-25.34706688 20.33600998]
[-25.14887238 33.78199005]
[-13.25298309 42.91915894]
[-1.35709548 52.05632782]
[10.53879261 61.19349670]
[22.43468094 70.33066559]
[34.33057022 79.46783447]
[43.61406708 64.79966736]
[55.92218781 53.40748978]
[70.22685242 45.83875656]
[85.42613220 42.34122086]
[100.42696381 42.86254883]
[102.50691223 28.00745583]
[90.34986877 18.62119675]
[84.52953339 4.40784740]
[86.61155701 -10.80927372]
[96.03587341 -22.93683624]
[110.26739502 -28.71258736]
[125.47792053 -26.58288002]
[137.57588196 -17.12059212]
[143.30699158 -2.87103486]
[141.12962341 12.33273506]
[131.62945557 24.40097809]
[117.36200714 30.08739853]
[115.28205872 44.94249344]
[128.86216736 50.68625641]
[140.52032471 59.71385956]
[149.48020935 71.42414856]
[155.14515686 85.03732300]
[170.01205444 83.04351807]
[184.87896729 81.04971313]
[197.52824402 71.54674530]
[211.17102051 77.52368164]
[226.03791809 75.52987671]
[240.90483093 73.53607178]
[255.77172852 71.54226685]
[270.63861084 69.54846191]
[285.50552368 67.55465698]
[289.46145630 52.90452576]
[298.70001221 40.91738129]
[311.78878784 33.40085983]
[326.71768188 31.47336388]
[341.20782471 35.39772415]
[353.05929565 44.54587555]
[360.48507690 57.49913025]
[375.35198975 55.50532532]
[390.21887207 53.51152420]
[384.28393555 34.69773102]
[395.53268433 11.86849689]
[408.13006592 3.72566652]
[420.72744751 -4.41716385]
[433.32485962 -12.55999470]
[445.92224121 -20.70282555]
[452.91268921 -35.53744125]
[469.27532959 -36.63102341]
[478.17770386 -22.85859108]
[470.46179199 -8.38803864]
[454.06506348 -8.10543251]
[441.46768188 0.03739844]
[428.87030029 8.18022919]
[416.27288818 16.32305908]
[403.67550659 24.46589088]
[405.18661499 31.81208229]
[419.87899780 28.78985786]
[434.57138062 25.76763153]
[449.26376343 22.74540710]
[462.30322266 15.33106709]
[473.38397217 25.44131279]
[467.19253540 39.10388947]
[452.28598022 37.43778992]
[437.59359741 40.46001816]
[422.90121460 43.48224258]
[408.20883179 46.50446701]
[409.71994019 53.85065842]
[424.50854492 56.36019135]
[439.29711914 58.86972427]
[450.40075684 48.19190979]
[465.48638916 46.12387085]
[478.74035645 53.25104904]
[485.17898560 66.65559387]
[499.96759033 69.16512299]
[514.75616455 71.67465973]
[529.54473877 74.18418884]
[540.54254150 63.23760223]
[555.87939453 60.87924957]
[569.65783691 68.01596832]
[576.57995605 81.90354156]
[573.98388672 97.20191193]
[562.86798096 108.02854919]
[547.50646973 110.22039032]
[533.80621338 102.93462372]
[527.03521729 88.97277832]
[512.24664307 86.46324158]
[497.45803833 83.95371246]
[482.66946411 81.44417572]
[472.16925049 91.97430420]
[457.30606079 94.33017731]
[443.74716187 87.40132904]
[436.78759766 73.65830994]
[421.99899292 71.14877319]
[407.21041870 68.63924408]
[392.21267700 68.37842560]
[377.34579468 70.37223053]
[362.47888184 72.36603546]
[358.72842407 86.81813812]
[349.70611572 98.76567078]
[336.76199341 106.36924744]
[321.85275269 108.44335938]
[307.24603271 104.64108276]
[295.17550659 95.51171112]
[287.49932861 82.42156219]
[272.63241577 84.41536713]
[257.76553345 86.40916443]
[242.89862061 88.40296936]
[228.03172302 90.39677429]
[213.16482544 92.39057922]
[201.57893372 101.75093842]
[186.87277222 95.91661835]
[172.00585938 97.91041565]
[157.13896179 99.90422058]
[156.54562378 108.21362305]
[154.75033569 116.34843445]
[151.79127502 124.13574219]
[147.73133850 131.41001892]
[142.65682983 138.01664734]
[136.67559814 143.81518555]
[129.91479492 148.68240356]
[122.51811218 152.51480103]
[114.64279175 155.23095703]
[116.55039215 170.10917664]
[118.45798492 184.98738098]
[120.36558533 199.86558533]
[122.27318573 214.74378967]
[124.18077850 229.62199402]
[126.08837891 244.50021362]
[140.76710510 248.45034790]
[152.81376648 257.72106934]
[160.39135742 270.89862061]
[162.34434509 285.97360229]
[158.37490845 300.64709473]
[149.08834839 312.68157959]
[135.90081787 320.24182129]
[120.82331085 322.17495728]
[106.15502930 318.18621826]
[94.13278961 308.88385010]
[86.58989716 295.68640137]
[84.67658234 280.60635376]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 258]
[3 257]
[4 256]
[5 255]
[6 254]
[7 253]
[8 252]
[10 39]
[11 38]
[12 37]
[13 36]
[14 35]
[15 34]
[21 28]
[22 27]
[53 61]
[54 60]
[55 59]
[62 130]
[63 129]
[64 128]
[65 127]
[66 126]
[67 125]
[70 121]
[71 120]
[72 119]
[73 118]
[74 117]
[75 116]
[80 111]
[81 110]
[82 109]
[84 106]
[85 105]
[88 102]
[89 101]
[135 148]
[136 147]
[152 243]
[153 242]
[154 241]
[156 239]
[157 238]
[158 237]
[159 236]
[160 235]
[161 234]
[168 227]
[169 226]
[170 225]
[172 185]
[173 184]
[174 183]
[175 182]
[176 181]
[197 224]
[198 223]
[199 222]
[203 218]
[204 217]
[205 216]
[206 215]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
