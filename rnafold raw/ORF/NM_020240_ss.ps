%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 21:07:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAGUGAAUUCUGGUUGUGUUUCAACUGCUGUAUUGCAGAACAGCCUCAGCCUAAAAGGCGACGGCGGAUUGACAGAAGUAUGAUUGGAGAGCCCACAAACUUUGUGCAUACAGCUCAUGUUGGAUCAGGAGACCUGUUCAGUGGAAUGAAUUCAGUUAGCUCCAUUCAGAACCAAAUGCAGUCCAAGGGAGGUUAUGGAGGUGGAAUGCCUGCCAAUGUCCAGAUGCAGCUCGUGGAUACGAAGGCGGGAUAG\
) } def
/len { sequence length } bind def

/coor [
[123.18287659 936.87481689]
[111.02149200 946.16778564]
[95.93251801 948.73321533]
[81.38327789 943.98150635]
[70.71708679 933.00469971]
[66.38496399 918.32507324]
[69.38238525 903.31591797]
[79.02057648 891.42626953]
[93.08473969 885.38824463]
[94.18820953 870.42889404]
[95.29167938 855.46954346]
[96.39514923 840.51019287]
[97.49861908 825.55084229]
[98.60208130 810.59149170]
[91.82202148 797.32946777]
[100.55356598 784.13592529]
[101.65703583 769.17657471]
[94.87697601 755.91455078]
[103.60851288 742.72100830]
[104.71198273 727.76159668]
[105.81545258 712.80224609]
[106.82711029 697.83642578]
[107.74691772 682.86462402]
[108.66673279 667.89288330]
[109.58654022 652.92108154]
[97.99774170 643.60241699]
[94.07189178 629.07482910]
[99.51686096 614.85491943]
[112.44026947 606.47088623]
[113.36008453 591.49914551]
[114.27989197 576.52734375]
[115.19970703 561.55560303]
[116.11951447 546.58380127]
[117.03932953 531.61206055]
[117.95913696 516.64025879]
[118.87895203 501.66848755]
[113.23004913 496.73495483]
[105.24498749 509.43292236]
[100.63331604 523.70642090]
[86.17755890 527.71026611]
[74.87960815 517.84338379]
[76.90113831 502.98019409]
[90.42441559 496.48916626]
[101.93225098 486.86785889]
[96.28334808 481.93429565]
[81.57156372 484.86065674]
[66.85978699 487.78701782]
[52.16624069 490.80358887]
[37.49148178 493.91024780]
[29.77043915 498.73620605]
[22.61761856 496.96383667]
[7.90583944 499.89019775]
[-6.80593967 502.81652832]
[-21.51771927 505.74288940]
[-35.87292480 514.76312256]
[-48.51454926 503.46597290]
[-41.15844345 488.19100952]
[-24.44407272 491.03112793]
[-9.73229408 488.10476685]
[4.97948456 485.17840576]
[19.69126320 482.25204468]
[34.38481140 479.23547363]
[49.05957031 476.12881470]
[54.93552780 471.68164062]
[63.93343353 473.07522583]
[78.64521027 470.14886475]
[93.35699463 467.22250366]
[102.72988129 455.51144409]
[102.36176300 440.51596069]
[101.99364471 425.52050781]
[101.62552643 410.52502441]
[101.25740814 395.52954102]
[100.88928986 380.53405762]
[97.59278870 373.94335938]
[100.60980225 365.35253906]
[100.42572784 350.35366821]
[86.72325897 341.29006958]
[81.07637787 325.68515015]
[85.90141296 309.63305664]
[99.48327637 299.52911377]
[99.11515808 284.53363037]
[89.18077850 270.05258179]
[98.16574860 253.96415710]
[97.61363983 238.97431946]
[97.06153107 223.98448181]
[88.86102295 211.55062866]
[96.08512878 197.47502136]
[95.53302002 182.48518372]
[94.98091888 167.49534607]
[94.42881012 152.50550842]
[93.87670135 137.51567078]
[77.32877350 137.58369446]
[60.28769302 130.00329590]
[46.30559540 114.63122559]
[38.87397766 92.94191742]
[40.70981216 67.92079926]
[31.77432251 55.87268448]
[22.83883286 43.82457352]
[13.90334415 31.77646065]
[4.96785450 19.72834778]
[-9.32397079 10.60803699]
[-4.51645708 -5.65001202]
[12.43707275 -5.53105307]
[17.01596832 10.79285717]
[25.95145798 22.84097099]
[34.88694763 34.88908386]
[43.82243729 46.93719482]
[52.75792694 58.98530960]
[59.55739212 55.82030869]
[53.22760010 42.22127533]
[66.82672882 35.89168930]
[73.15632629 49.49030304]
[79.95579529 46.32530212]
[76.48992157 31.73120117]
[73.02405548 17.13710213]
[69.55818176 2.54300332]
[57.91171265 -9.00220203]
[62.34801102 -24.78989601]
[78.30339813 -28.57905197]
[89.36433411 -16.47171211]
[84.15228271 -0.92286825]
[87.61815643 13.67123127]
[91.08402252 28.26533127]
[94.54989624 42.85942841]
[109.52703094 42.03150177]
[111.36318970 27.14430809]
[105.37336731 12.50079155]
[114.61043549 0.81636238]
[116.44659424 -14.07083035]
[118.28275299 -28.95802307]
[120.11891174 -43.84521484]
[116.05692291 -60.30536652]
[130.74932861 -68.76523590]
[142.94584656 -56.98893356]
[135.00610352 -42.00905609]
[133.16995239 -27.12186432]
[131.33378601 -12.23467064]
[129.49761963 2.65252256]
[135.61878967 16.23120689]
[126.25038147 28.98046875]
[124.41422272 43.86766052]
[138.59832764 48.74731445]
[139.05653381 32.93274689]
[152.23616028 25.99396706]
[159.94770813 13.12803841]
[167.65924072 0.26210928]
[175.37078857 -12.60381985]
[172.88311768 -28.45282745]
[183.82910156 -40.18162918]
[199.81193542 -38.79289246]
[208.57095337 -25.35193634]
[203.38697815 -10.16951466]
[188.23672485 -4.89227867]
[180.52517700 7.97365046]
[172.81362915 20.83958054]
[165.10209656 33.70550919]
[165.19546509 48.59982300]
[151.46426392 56.45885849]
[158.94926453 88.49147034]
[150.09249878 116.41070557]
[130.74809265 133.35081482]
[108.86653137 136.96356201]
[109.41864014 151.95339966]
[109.97074890 166.94323730]
[110.52285767 181.93307495]
[111.07496643 196.92291260]
[119.31497192 210.42893982]
[112.05136871 223.43237305]
[112.60347748 238.42221069]
[113.15558624 253.41204834]
[122.04686737 262.73007202]
[122.21350098 275.20800781]
[114.11064148 284.16549683]
[114.47875977 299.16098022]
[126.36379242 306.11013794]
[133.21520996 317.92694092]
[133.33944702 331.47760010]
[126.81088257 343.22894287]
[115.42459869 350.16958618]
[115.60867310 365.16845703]
[115.88477325 380.16592407]
[116.25289154 395.16140747]
[116.62100983 410.15689087]
[116.98912811 425.15237427]
[117.35724640 440.14785767]
[117.72536469 455.14334106]
[136.09008789 440.14434814]
[158.09529114 440.45516968]
[173.43515015 453.75854492]
[176.29652405 472.14163208]
[190.35661316 477.36791992]
[204.41670227 482.59420776]
[220.04795837 480.14996338]
[229.28190613 491.83685303]
[243.34199524 497.06314087]
[249.86778259 496.34295654]
[255.01736450 498.66076660]
[257.68035889 502.59405518]
[271.60794067 508.16381836]
[285.53555298 513.73358154]
[299.49703979 519.21777344]
[313.49194336 524.61621094]
[327.48684692 530.01464844]
[341.48171997 535.41302490]
[356.67208862 530.25244141]
[370.09957886 539.03210449]
[371.46374512 555.01702881]
[359.71810913 565.94500732]
[343.87295532 563.43292236]
[336.08331299 549.40795898]
[322.08840942 544.00952148]
[308.09350586 538.61108398]
[294.09863281 533.21264648]
[286.74810791 533.73608398]
[279.96578979 527.66113281]
[266.03820801 522.09143066]
[252.11059570 516.52166748]
[238.11570740 511.12322998]
[224.05563354 505.89694214]
[209.43003845 508.71499634]
[199.19041443 496.65429688]
[185.13032532 491.42800903]
[171.07025146 486.20172119]
[157.24310303 500.76800537]
[133.85072327 502.58831787]
[132.93090820 517.56005859]
[132.01109314 532.53186035]
[131.09129333 547.50360107]
[130.17147827 562.47540283]
[129.25166321 577.44714355]
[128.33186340 592.41894531]
[127.41204834 607.39068604]
[139.21197510 617.29364014]
[142.87533569 632.07312012]
[137.20066833 646.01092529]
[124.55831146 653.84094238]
[123.63850403 668.81268311]
[122.71868896 683.78448486]
[121.79888153 698.75622559]
[124.39072418 707.48474121]
[120.77480316 713.90576172]
[119.67134094 728.86511230]
[118.56787109 743.82446289]
[125.26900482 758.15643311]
[116.61638641 770.28002930]
[115.51292419 785.23937988]
[122.21405029 799.57135010]
[113.56143951 811.69494629]
[112.45796967 826.65429688]
[111.35450745 841.61364746]
[110.25103760 856.57299805]
[109.14756775 871.53234863]
[108.04409790 886.49169922]
[121.07008362 894.52801514]
[128.85937500 907.70324707]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 253]
[10 252]
[11 251]
[12 250]
[13 249]
[14 248]
[16 246]
[17 245]
[19 243]
[20 242]
[21 241]
[22 239]
[23 238]
[24 237]
[25 236]
[29 232]
[30 231]
[31 230]
[32 229]
[33 228]
[34 227]
[35 226]
[36 225]
[45 67]
[46 66]
[47 65]
[48 63]
[49 62]
[51 61]
[52 60]
[53 59]
[54 58]
[68 186]
[69 185]
[70 184]
[71 183]
[72 182]
[73 181]
[75 180]
[76 179]
[80 174]
[81 173]
[83 170]
[84 169]
[85 168]
[87 166]
[88 165]
[89 164]
[90 163]
[91 162]
[96 108]
[97 107]
[98 106]
[99 105]
[100 104]
[113 124]
[114 123]
[115 122]
[116 121]
[125 141]
[126 140]
[128 138]
[129 137]
[130 136]
[131 135]
[142 158]
[144 156]
[145 155]
[146 154]
[147 153]
[190 223]
[191 222]
[192 221]
[194 219]
[195 218]
[198 217]
[199 216]
[200 215]
[201 213]
[202 212]
[203 211]
[204 210]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
