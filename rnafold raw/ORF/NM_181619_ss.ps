%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 08:08:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUGUUGCAACUACUACGGCAACUCCUGUGGCUAUGGCUCCGGCUGUGGCUGUGGCUAUGGCUCUGGCUCUGGCUGUGGCUGUGGCUAUGGAACUGGCUAUGGCUGUGGGUAUGGCUGUGGGUUUGGCUCCCAUUAUGGCUGUGGUUAUGGAACUGGCUAUGGCUGUGGAUAUGGCUCUGGCUCUGGCUACUGUGGCUACCGGCCAUUUUGCUUUAGAAGAUGCUAUUCUUCCUGCUAA\
) } def
/len { sequence length } bind def

/coor [
[27.51544762 171.55746460]
[22.84908295 157.30175781]
[23.73929596 142.32820129]
[30.06188774 128.72581482]
[40.93476486 118.39234161]
[54.84099197 112.76946259]
[69.84194183 112.64191437]
[84.23723602 108.42582703]
[69.58287811 105.22431946]
[60.13816452 117.16412354]
[46.50161362 123.79219818]
[31.40135956 123.84208679]
[17.83262634 117.35745239]
[8.46360397 105.67280579]
[5.11079931 91.13925171]
[-9.54356384 87.93775177]
[-24.19792747 84.73624420]
[-38.85229111 81.53473663]
[-53.50665283 78.33322906]
[-68.16101837 75.13172913]
[-82.81538391 71.93022156]
[-93.18968201 83.16948700]
[-107.70096588 87.67720032]
[-122.42234039 84.33839417]
[-133.42231750 74.14740753]
[-137.81477356 59.91463089]
[-152.46914673 56.71312332]
[-167.12350464 53.51161957]
[-181.77786255 50.31011200]
[-196.43223572 47.10860825]
[-211.08659363 43.90710449]
[-225.74095154 40.70559692]
[-240.39532471 37.50409317]
[-255.04968262 34.30258560]
[-269.70404053 31.10108185]
[-284.35839844 27.89957619]
[-299.01278687 24.69807053]
[-313.66714478 21.49656487]
[-328.32150269 18.29505920]
[-342.97586060 15.09355450]
[-353.35015869 26.33281898]
[-367.86145020 30.84053421]
[-382.58282471 27.50172806]
[-393.58279419 17.31073952]
[-397.97525024 3.07796216]
[-412.62960815 -0.12354305]
[-427.28399658 -3.32504845]
[-441.93835449 -6.52655363]
[-456.59271240 -9.72805882]
[-471.24707031 -12.92956448]
[-485.90142822 -16.13106918]
[-500.55578613 -19.33257484]
[-515.21014404 -22.53408051]
[-529.86450195 -25.73558617]
[-544.51892090 -28.93709183]
[-559.17327881 -32.13859558]
[-573.82763672 -35.34010315]
[-588.48199463 -38.54160690]
[-603.13635254 -41.74311066]
[-617.79071045 -44.94461823]
[-632.44506836 -48.14612198]
[-647.09942627 -51.34762955]
[-661.75378418 -54.54913330]
[-676.40814209 -57.75063705]
[-687.90808105 -47.33279800]
[-703.33874512 -45.69754791]
[-716.76678467 -53.47367477]
[-723.02874756 -67.67110443]
[-719.71691895 -82.83062744]
[-708.10461426 -93.12310028]
[-692.65716553 -94.59085846]
[-679.31427002 -86.66952515]
[-673.20666504 -72.40499878]
[-658.55230713 -69.20349884]
[-643.89794922 -66.00199127]
[-629.24359131 -62.80048752]
[-614.58917236 -59.59897995]
[-599.93481445 -56.39747620]
[-585.28045654 -53.19596863]
[-570.62609863 -49.99446487]
[-555.97174072 -46.79296112]
[-541.31738281 -43.59145355]
[-526.66302490 -40.38994980]
[-512.00866699 -37.18844223]
[-497.35430908 -33.98693848]
[-482.69992065 -30.78543282]
[-468.04556274 -27.58392715]
[-453.39120483 -24.38242149]
[-438.73684692 -21.18091774]
[-424.08248901 -17.97941208]
[-409.42813110 -14.77790642]
[-394.77374268 -11.57640076]
[-384.84597778 -22.68066978]
[-370.59820557 -27.35584068]
[-355.82568359 -24.25118256]
[-344.51635742 -14.10249710]
[-339.77435303 0.43919152]
[-325.11999512 3.64069676]
[-310.46563721 6.84220219]
[-295.81127930 10.04370785]
[-281.15689087 13.24521255]
[-266.50253296 16.44671822]
[-251.84817505 19.64822388]
[-237.19381714 22.84972954]
[-222.53944397 26.05123329]
[-207.88508606 29.25273895]
[-193.23072815 32.45424652]
[-178.57635498 35.65575027]
[-163.92199707 38.85725403]
[-149.26763916 42.05876160]
[-134.61326599 45.26026535]
[-124.68549347 34.15599823]
[-110.43772888 29.48082542]
[-95.66520691 32.58548355]
[-84.35587311 42.73416901]
[-79.61387634 57.27585983]
[-64.95951080 60.47736359]
[-50.30514908 63.67887115]
[-35.65078354 66.88037109]
[-20.99642181 70.08187866]
[-6.34205866 73.28338623]
[8.31230450 76.48489380]
[17.42058945 64.67368317]
[30.80888176 57.96078110]
[45.84569168 57.72552872]
[59.54938889 64.06815338]
[69.17942810 75.77922821]
[72.78437805 90.56996155]
[87.43874359 93.77146149]
[88.56822205 84.29781342]
[96.33637238 75.44696808]
[109.88216400 71.43409729]
[125.90937042 75.54325867]
[140.56373596 72.34175873]
[149.11505127 59.32205582]
[164.02227783 56.28403091]
[176.38186646 64.51664734]
[191.03622437 61.31514359]
[205.69059753 58.11363983]
[220.34495544 54.91213226]
[234.99931335 51.71062851]
[249.65368652 48.50912094]
[264.30804443 45.30761719]
[278.94122314 42.01066589]
[293.55261230 38.61840820]
[308.16400146 35.22615051]
[322.77539062 31.83389473]
[337.38677979 28.44163704]
[351.99816895 25.04937935]
[366.60955811 21.65712357]
[381.22091675 18.26486588]
[395.83230591 14.87260914]
[399.61630249 11.33566475]
[403.94412231 9.74881840]
[407.98693848 9.99455833]
[411.08108521 11.64523029]
[425.81393433 8.82682800]
[440.54678345 6.00842571]
[455.27960205 3.19002342]
[470.01245117 0.37162116]
[484.74530029 -2.44678116]
[496.84588623 -12.63923740]
[510.80026245 -7.43111467]
[525.53314209 -10.24951744]
[540.26593018 -13.06791878]
[554.99877930 -15.88632107]
[569.73162842 -18.70472336]
[581.83221436 -28.89718056]
[595.78662109 -23.68905830]
[610.51947021 -26.50745964]
[619.18750000 -39.72263336]
[634.67803955 -42.85610580]
[647.80084229 -34.04884720]
[650.77032471 -18.52604103]
[641.82482910 -5.49709702]
[626.27148438 -2.69185662]
[613.33782959 -11.77461815]
[598.60504150 -8.95621586]
[587.55822754 1.03464961]
[572.55004883 -3.97188234]
[557.81719971 -1.15348029]
[543.08435059 1.66492200]
[528.35150146 4.48332405]
[513.61865234 7.30172634]
[502.57186890 17.29259300]
[487.56369019 12.28606033]
[472.83087158 15.10446262]
[458.09802246 17.92286491]
[443.36517334 20.74126625]
[428.63232422 23.55966949]
[413.89950562 26.37807083]
[399.22457886 29.48399353]
[384.61318970 32.87625122]
[370.00180054 36.26850891]
[355.39041138 39.66076660]
[340.77902222 43.05302429]
[326.16763306 46.44527817]
[311.55627441 49.83753586]
[296.94488525 53.22979355]
[282.33349609 56.62205124]
[276.54055786 61.18699646]
[267.50955200 59.96197891]
[252.85519409 63.16348648]
[238.20082092 66.36499023]
[223.54646301 69.56649780]
[208.89210510 72.76800537]
[194.23773193 75.96950531]
[179.58337402 79.17101288]
[171.78309631 91.80791473]
[156.96708679 95.26345062]
[143.76522827 86.99611664]
[129.11087036 90.19762421]
[125.67549133 96.86457062]
[140.47991943 99.27883911]
[142.75845337 114.10477448]
[129.36216736 120.85308075]
[118.80472565 110.19845581]
[115.36934662 116.86540222]
[121.26728821 130.65722656]
[127.16522980 144.44903564]
[133.06317139 158.24085999]
[138.96112061 172.03266907]
[153.72183228 177.68040466]
[160.08930969 192.14521790]
[154.28582764 206.84539795]
[139.75450134 213.05958557]
[125.11650848 207.10101318]
[119.05630493 192.50480652]
[125.16930389 177.93061829]
[119.27135468 164.13879395]
[113.37341309 150.34698486]
[107.47547150 136.55516052]
[101.57752228 122.76334381]
[100.14130402 137.69442749]
[102.83462524 152.45065308]
[99.92533875 167.16581726]
[91.81933594 179.78694153]
[79.64752197 188.55317688]
[65.10805511 192.24151611]
[50.22940063 190.33738708]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 129]
[9 128]
[15 122]
[16 121]
[17 120]
[18 119]
[19 118]
[20 117]
[21 116]
[26 111]
[27 110]
[28 109]
[29 108]
[30 107]
[31 106]
[32 105]
[33 104]
[34 103]
[35 102]
[36 101]
[37 100]
[38 99]
[39 98]
[40 97]
[45 92]
[46 91]
[47 90]
[48 89]
[49 88]
[50 87]
[51 86]
[52 85]
[53 84]
[54 83]
[55 82]
[56 81]
[57 80]
[58 79]
[59 78]
[60 77]
[61 76]
[62 75]
[63 74]
[64 73]
[133 212]
[134 211]
[137 208]
[138 207]
[139 206]
[140 205]
[141 204]
[142 203]
[143 202]
[144 200]
[145 199]
[146 198]
[147 197]
[148 196]
[149 195]
[150 194]
[151 193]
[152 192]
[156 191]
[157 190]
[158 189]
[159 188]
[160 187]
[161 186]
[163 184]
[164 183]
[165 182]
[166 181]
[167 180]
[169 178]
[170 177]
[218 233]
[219 232]
[220 231]
[221 230]
[222 229]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
