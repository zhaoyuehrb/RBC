%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sat Sep 12 00:29:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGCUGUGAGCUCAGACACUUGCAGAUCUCUUAAGUAUCCUUACGUUGCAGUGAUGCUAAAAGUGGCAGAUCAUUCAGGCCAAGUAAAGACCAAGUGCUUUGAAAUGACGAUUCCACAGUUUCAGAAUUUCUACAGACAGUUCAAGGAAAUUGCUGCAGUUAUUGAAACGGUGUGA\
) } def
/len { sequence length } bind def

/coor [
[403.02987671 284.27243042]
[393.51879883 283.55975342]
[384.87564087 279.39141846]
[378.31744385 272.30718994]
[374.78475952 263.26065063]
[374.80700684 253.49079895]
[361.60165405 246.37609863]
[348.39630127 239.26141357]
[333.52188110 240.03628540]
[325.04269409 226.67910767]
[310.89340210 231.18827820]
[297.39993286 224.16108704]
[292.76623535 209.28941345]
[279.56091309 202.17472839]
[266.35556030 195.06002808]
[253.15020752 187.94534302]
[239.94485474 180.83065796]
[226.67724609 173.83277893]
[213.34838867 166.95223999]
[200.01953125 160.07171631]
[186.69068909 153.19119263]
[173.36183167 146.31066895]
[160.03297424 139.43013000]
[150.39190674 151.17958069]
[138.49433899 160.63728333]
[124.87304688 167.37971497]
[110.13797760 171.10496521]
[94.94893646 171.64620972]
[79.98607635 168.97924805]
[65.91941833 163.22348022]
[53.37884140 154.63662720]
[42.92590332 143.60322571]
[35.02867508 130.61732483]
[30.04077911 116.26041412]
[28.18557167 101.17539215]
[13.24394035 99.85340118]
[-1.69769144 98.53141785]
[-16.63932228 97.20942688]
[-31.58095360 95.88743591]
[-46.52258682 94.56545258]
[-61.47529984 93.37537384]
[-76.43793488 92.31728363]
[-86.31797028 104.28242493]
[-101.35238647 108.12246704]
[-115.76014709 102.36085510]
[-124.00115967 89.21302795]
[-122.90660095 73.73461151]
[-112.89734650 61.87735367]
[-97.82215881 58.20062637]
[-83.47776031 64.11820221]
[-75.37985229 77.35465240]
[-60.41721725 78.41273499]
[-53.50235748 75.74005127]
[-45.20059967 79.62381744]
[-30.25896645 80.94580841]
[-15.31733513 82.26779938]
[-0.37570405 83.58978271]
[14.56592751 84.91177368]
[29.50755882 86.23375702]
[31.75086594 77.62257385]
[35.04178238 69.35487366]
[39.32979584 61.55757523]
[44.54908752 54.35035706]
[50.61953735 47.84385300]
[57.44796753 42.13793564]
[49.87167358 29.19190407]
[42.29537964 16.24587059]
[34.71908569 3.29983783]
[18.51702881 -5.42149353]
[19.06388283 -22.94911385]
[11.26029015 -35.75942230]
[-3.38240051 -43.14343262]
[-4.03873014 -59.52944183]
[9.96647739 -68.06092834]
[24.22586441 -59.96142578]
[24.07059669 -43.56301498]
[31.87418938 -30.75270653]
[43.56789017 -27.58389473]
[50.16890717 -16.94936943]
[47.66511917 -4.27645636]
[55.24141312 8.66957664]
[62.81770706 21.61561012]
[70.39400482 34.56164169]
[86.56867218 29.44297981]
[103.49272156 28.26092720]
[120.22189331 31.08143425]
[135.82283020 37.74713898]
[149.42507935 47.88613510]
[160.26974487 60.93273926]
[167.75177002 76.15903473]
[171.45368958 92.71549225]
[171.16897583 109.67838287]
[166.91349792 126.10128021]
[180.24235535 132.98181152]
[193.57121277 139.86233521]
[206.90007019 146.74285889]
[220.22891235 153.62339783]
[233.55776978 160.50392151]
[242.64903259 161.66664124]
[247.05955505 167.62530518]
[260.26489258 174.74000549]
[273.47024536 181.85469055]
[286.67559814 188.96937561]
[299.88095093 196.08406067]
[314.84948730 191.77355957]
[328.14022827 199.17698669]
[332.15737915 213.47377014]
[347.97634888 213.20777893]
[355.51098633 226.05606079]
[368.71633911 233.17076111]
[381.92169189 240.28544617]
[401.58639526 232.91940308]
[420.06170654 242.27008057]
[425.61163330 261.91580200]
[439.28594971 268.08126831]
[453.01416016 274.12585449]
[466.79513550 280.04904175]
[480.57614136 285.97222900]
[496.31011963 284.31311035]
[504.94778442 296.44735718]
[518.72875977 302.37054443]
[532.50976562 308.29370117]
[546.29077148 314.21688843]
[560.07177734 320.14007568]
[573.85278320 326.06326294]
[587.63378906 331.98645020]
[597.47100830 324.21740723]
[609.61035156 321.39627075]
[621.72412109 324.00079346]
[631.51623535 331.47430420]
[637.15777588 342.34335327]
[637.62811279 354.50793457]
[651.19146729 360.91378784]
[666.97418213 359.81097412]
[675.17822266 372.24252319]
[688.74163818 378.64834595]
[702.30499268 385.05419922]
[711.43164062 385.89535522]
[716.04968262 391.69467163]
[729.49792480 398.33886719]
[742.94610596 404.98309326]
[756.39428711 411.62731934]
[769.84252930 418.27154541]
[784.72955322 412.96566772]
[798.97204590 419.81594849]
[804.12023926 434.75823975]
[797.11975098 448.92752075]
[782.12390137 453.91744995]
[768.02941895 446.76754761]
[763.19830322 431.71975708]
[749.75012207 425.07553101]
[736.30187988 418.43130493]
[722.85369873 411.78707886]
[709.40545654 405.14285278]
[695.89916992 398.61758423]
[682.33575439 392.21173096]
[668.77239990 385.80587769]
[653.95983887 387.36688232]
[644.78564453 374.47717285]
[631.22222900 368.07131958]
[616.17401123 377.26821899]
[598.45947266 375.59899902]
[585.16168213 363.54223633]
[581.71057129 345.76745605]
[567.92956543 339.84426880]
[554.14855957 333.92108154]
[540.36761475 327.99789429]
[526.58660889 322.07470703]
[512.80560303 316.15151978]
[499.02459717 310.22833252]
[484.27633667 312.31112671]
[474.65295410 299.75320435]
[460.87194824 293.83001709]
[447.09097290 287.90682983]
[439.68173218 288.15505981]
[433.12048340 281.75558472]
[419.44616699 275.59011841]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 111]
[7 110]
[8 109]
[10 107]
[13 104]
[14 103]
[15 102]
[16 101]
[17 100]
[18 98]
[19 97]
[20 96]
[21 95]
[22 94]
[23 93]
[35 59]
[36 58]
[37 57]
[38 56]
[39 55]
[40 54]
[41 52]
[42 51]
[65 83]
[66 82]
[67 81]
[68 80]
[70 77]
[71 76]
[114 177]
[115 176]
[116 174]
[117 173]
[118 172]
[120 170]
[121 169]
[122 168]
[123 167]
[124 166]
[125 165]
[126 164]
[132 160]
[133 159]
[135 157]
[136 156]
[137 155]
[139 154]
[140 153]
[141 152]
[142 151]
[143 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
