%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 11:18:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCCAACAACAUGGCCAAGAUUGCCGAGGCCCGCAAGACGGUGGAACAGCUGAAGCUGGAGGUGAACAUCGACCGCAUGAAGGUGUCGCAGGCAGCAGCGGAACUCCUGGCUUUCUGCGAGACGCAUGCCAAAGAUGACCCGCUGGUGACGCCAGUACCCGCCGCGGAGAACCCCUUCCGCGACAAGCGCCUCUUUUGUGUUCUGCUCUGA\
) } def
/len { sequence length } bind def

/coor [
[-99.34527588 456.29269409]
[-102.62171936 470.93048096]
[-105.89817047 485.56826782]
[-109.17461395 500.20605469]
[-100.49958038 513.41662598]
[-103.78845978 528.87493896]
[-117.09001160 537.40979004]
[-132.51266479 533.95770264]
[-140.90644836 520.56665039]
[-137.29144287 505.18133545]
[-123.81240845 496.92962646]
[-120.53595734 482.29183960]
[-117.25951385 467.65402222]
[-113.98306274 453.01623535]
[-127.40762329 446.32437134]
[-137.12420654 457.75189209]
[-146.84078979 469.17941284]
[-156.55737305 480.60690308]
[-155.46925354 496.14569092]
[-165.48603821 507.59640503]
[-180.30659485 508.53799438]
[-180.45104980 524.58038330]
[-193.17187500 534.35589600]
[-208.71075439 530.36553955]
[-215.14758301 515.67041016]
[-207.54457092 501.54333496]
[-191.73411560 498.82141113]
[-193.18765259 484.04229736]
[-183.49644470 472.31475830]
[-167.98487854 470.89031982]
[-158.26829529 459.46282959]
[-148.55172729 448.03530884]
[-138.83514404 436.60778809]
[-145.28105164 423.90969849]
[-147.81698608 410.04391479]
[-146.31378174 396.17401123]
[-140.97784424 383.44036865]
[-132.32725525 372.86633301]
[-121.14255524 365.27593994]
[-108.39686584 361.23016357]
[-95.17139435 360.98577881]
[-82.56380463 364.48077393]
[-74.81098938 351.63967896]
[-67.05816650 338.79858398]
[-59.30535126 325.95748901]
[-51.55253601 313.11639404]
[-43.79971695 300.27529907]
[-36.04689789 287.43417358]
[-28.29408073 274.59307861]
[-20.54126167 261.75198364]
[-27.17810822 253.72250366]
[-31.33401871 244.14717102]
[-32.67173767 233.77371216]
[-31.07457924 223.41575623]
[-26.65651131 213.88896179]
[-19.75409889 205.94680786]
[-10.90089703 200.22100830]
[-0.78621584 197.17126465]
[9.79854679 197.04838562]
[20.02182388 199.87368774]
[28.69547844 187.63572693]
[37.36913300 175.39776611]
[46.04278564 163.15980530]
[54.71644211 150.92184448]
[63.39009476 138.68388367]
[72.06375122 126.44592285]
[61.64407730 102.94007111]
[68.35951996 78.12077332]
[89.21001434 63.07579422]
[87.89049530 48.13394547]
[86.57096863 33.19209671]
[85.25144958 18.25024605]
[71.42752838 11.70451832]
[62.79308319 -0.79920703]
[61.58459473 -15.84599876]
[68.02680206 -29.38682175]
[80.29913330 -37.82811737]
[78.97961426 -52.76996613]
[77.66008759 -67.71181488]
[76.34056854 -82.65366364]
[75.02104187 -97.59551239]
[66.29550934 -104.08483124]
[62.65555954 -114.09834290]
[65.07563019 -124.24885559]
[72.52218628 -131.24205017]
[71.64187622 -146.21620178]
[63.10800934 -159.53849792]
[70.08504486 -172.69792175]
[69.20472717 -187.67207336]
[68.32440948 -202.64620972]
[67.44409943 -217.62036133]
[66.56378174 -232.59449768]
[65.68347168 -247.56864929]
[64.80315399 -262.54278564]
[56.26929092 -275.86511230]
[63.24632263 -289.02450562]
[62.36600876 -303.99865723]
[61.48569489 -318.97280884]
[50.45690155 -326.70220947]
[45.95844650 -339.18972778]
[49.42155457 -351.80139160]
[59.36608124 -359.99295044]
[58.70568085 -374.97842407]
[49.43735886 -388.50729370]
[56.76262283 -403.17944336]
[73.14586639 -403.90145874]
[81.73341370 -389.93054199]
[73.69113922 -375.63882446]
[74.35153961 -360.65335083]
[87.22984314 -349.83566284]
[88.32001495 -332.71368408]
[76.45983887 -319.85311890]
[77.34015656 -304.87896729]
[78.22046661 -289.90484619]
[86.69136810 -277.65359497]
[79.77730560 -263.42309570]
[80.65761566 -248.44895935]
[81.53793335 -233.47482300]
[82.41824341 -218.50067139]
[83.29856110 -203.52651978]
[84.17887115 -188.55238342]
[85.05918884 -173.57823181]
[93.53008270 -161.32698059]
[86.61602020 -147.09651184]
[87.49633789 -132.12236023]
[99.28219604 -116.79164124]
[89.96289825 -98.91503906]
[91.28241730 -83.97318268]
[92.60193634 -69.03133392]
[93.92146301 -54.08948898]
[95.24098206 -39.14763641]
[108.80275726 -32.98777008]
[117.51834869 -20.78553772]
[118.96557617 -5.75983047]
[112.65609741 8.06360054]
[100.19329834 16.93072319]
[101.51281738 31.87257195]
[102.83234406 46.81442261]
[104.15186310 61.75627136]
[111.33846283 61.19899750]
[118.83193207 62.03499985]
[126.35644531 64.35072327]
[133.61621094 68.17736053]
[140.30659485 73.48675537]
[154.72686768 69.35689545]
[169.14714050 65.22704315]
[183.56741333 61.09718323]
[197.98768616 56.96732712]
[212.40795898 52.83747101]
[225.97023010 42.66392517]
[239.50061035 52.87985992]
[233.42948914 68.70951080]
[216.53781128 67.25774384]
[202.11753845 71.38760376]
[187.69726562 75.51745605]
[173.27699280 79.64731598]
[158.85671997 83.77716827]
[144.43644714 87.90702820]
[143.94134521 95.39067078]
[158.90863037 96.38086700]
[173.87588501 97.37132263]
[172.88519287 112.33856964]
[157.91842651 111.34815216]
[142.95114136 110.35794830]
[142.45603943 117.84159088]
[156.20657349 123.83516693]
[169.95710754 129.82873535]
[183.70762634 135.82231140]
[197.45816040 141.81588745]
[211.20869446 147.80946350]
[224.95921326 153.80303955]
[239.57550049 147.79139709]
[254.12927246 153.95280457]
[259.98605347 168.63183594]
[253.67111206 183.11965942]
[238.93098450 188.82090759]
[224.51074219 182.35314941]
[218.96565247 167.55355835]
[205.21511841 161.55999756]
[191.46458435 155.56642151]
[177.71405029 149.57284546]
[163.96353149 143.57926941]
[150.21299744 137.58569336]
[136.46246338 131.59211731]
[127.98701477 137.27912903]
[118.79878235 140.86997986]
[109.38742828 142.32821655]
[100.22444916 141.72666931]
[91.73979187 139.23782349]
[84.30171204 135.11956787]
[75.62805939 147.35754395]
[66.95440674 159.59550476]
[58.28075027 171.83346558]
[49.60709381 184.07142639]
[40.93344116 196.30938721]
[32.25978470 208.54734802]
[41.47490692 226.20129395]
[40.44319534 246.00976562]
[29.53120422 262.47912598]
[11.83448219 271.08270264]
[-7.70016336 269.50482178]
[-15.45298195 282.34591675]
[-23.20579910 295.18701172]
[-30.95861816 308.02810669]
[-38.71143723 320.86920166]
[-46.46425247 333.71029663]
[-54.21707153 346.55139160]
[-61.96989059 359.39248657]
[-69.72270966 372.23358154]
[-57.89637375 386.32156372]
[-52.51592255 404.22872925]
[-54.68807220 423.10641479]
[-64.29753876 439.85147095]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 14]
[2 13]
[3 12]
[4 11]
[15 33]
[16 32]
[17 31]
[18 30]
[21 27]
[42 209]
[43 208]
[44 207]
[45 206]
[46 205]
[47 204]
[48 203]
[49 202]
[50 201]
[60 196]
[61 195]
[62 194]
[63 193]
[64 192]
[65 191]
[66 190]
[69 139]
[70 138]
[71 137]
[72 136]
[77 131]
[78 130]
[79 129]
[80 128]
[81 127]
[85 125]
[86 124]
[88 122]
[89 121]
[90 120]
[91 119]
[92 118]
[93 117]
[94 116]
[96 114]
[97 113]
[98 112]
[102 109]
[103 108]
[144 158]
[145 157]
[146 156]
[147 155]
[148 154]
[149 153]
[165 184]
[166 183]
[167 182]
[168 181]
[169 180]
[170 179]
[171 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
