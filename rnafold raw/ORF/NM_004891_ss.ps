%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 01:47:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUUCCUCUCCGCGGUCUUCUUUGCCAAGAGCAAGUCAAAAAACAUUCUGGUGAGAAUGGUGAGCGAAGCUGGGACAGGUUUCUGCUUCAACACCAAGAGAAACCGACUGCGGGAAAAACUGACUCUUUUGCAUUAUGAUCCAGUUGUGAAACAAAGAGUCCUCUUCGUGGAAAAGAAAAAAAUACGCUCCCUUUAA\
) } def
/len { sequence length } bind def

/coor [
[286.21142578 167.57452393]
[300.47735596 162.93949890]
[315.36886597 164.71524048]
[301.47692871 159.05712891]
[287.58499146 153.39901733]
[274.00057983 159.39898682]
[259.83157349 153.85874939]
[253.63038635 139.56948853]
[239.73844910 133.91137695]
[232.35063171 134.30021667]
[225.67301941 128.05274963]
[211.87213135 122.17604065]
[198.07125854 116.29933167]
[184.27037048 110.42263031]
[170.46948242 104.54592133]
[156.66860962 98.66921234]
[142.86772156 92.79251099]
[129.06684875 86.91580200]
[143.59812927 105.45551300]
[143.82664490 134.86053467]
[123.42786407 163.90330505]
[84.39138031 178.58959961]
[72.49709320 187.72883606]
[60.60280228 196.86808777]
[48.70851135 206.00733948]
[36.81422043 215.14659119]
[33.31333542 230.80299377]
[18.82738495 237.69769287]
[4.46874762 230.54164124]
[1.25214171 214.82435608]
[11.64507198 202.60279846]
[27.67497253 203.25228882]
[39.56926346 194.11305237]
[51.46355438 184.97380066]
[63.35784531 175.83454895]
[75.25213623 166.69529724]
[73.14947510 159.49607849]
[58.75102615 163.70141602]
[44.35258484 167.90673828]
[29.95406914 172.11183167]
[25.74921799 157.71324158]
[40.14725494 153.50830078]
[54.54570007 149.30296326]
[68.94414520 145.09764099]
[66.84147644 137.89840698]
[51.89798737 136.59762573]
[36.95449448 135.29684448]
[22.01100349 133.99606323]
[7.06751060 132.69528198]
[-7.87598181 131.39450073]
[-22.49863815 138.81809998]
[-36.08942795 129.64082336]
[-34.66731262 113.30345917]
[-19.69524193 106.61248779]
[-6.57519865 116.45100403]
[8.36829376 117.75179291]
[23.31178665 119.05257416]
[38.25527954 120.35335541]
[53.19877243 121.65413666]
[68.14226532 122.95492554]
[73.02474976 108.77108002]
[77.90682220 94.58850861]
[62.11925507 93.55728912]
[55.66283417 80.13477325]
[43.08492661 71.96187592]
[30.50701904 63.78898239]
[13.93106747 60.22889709]
[12.76334286 43.31521225]
[28.69277573 37.51094818]
[38.67991257 51.21107483]
[51.25782394 59.38396835]
[63.83573151 67.55686188]
[78.72364044 68.00350189]
[86.07971191 82.01059723]
[92.23653412 77.72765350]
[83.67083740 65.41388702]
[95.98473358 56.84838104]
[104.55016327 69.16176605]
[110.70697784 64.87882233]
[107.41865540 50.24369812]
[104.13033295 35.60857010]
[100.84201050 20.97344398]
[97.55368805 6.33831739]
[94.26536560 -8.29680920]
[90.97704315 -22.93193626]
[86.03791809 -30.62780380]
[87.75424957 -37.82400513]
[84.69737244 -52.50922012]
[81.64049530 -67.19443512]
[67.77966309 -74.43400574]
[61.86297607 -88.90904999]
[66.68411255 -103.78488922]
[79.96668243 -112.03760529]
[95.43905640 -109.77053070]
[105.79565430 -98.05409241]
[106.14640808 -82.42044067]
[96.32570648 -70.25131226]
[99.38258362 -55.56609726]
[102.43946838 -40.88088608]
[105.61216736 -26.22025871]
[108.90048981 -11.58513260]
[112.18881226 3.04999399]
[115.47713470 17.68511963]
[118.76545715 32.32024765]
[122.05378723 46.95537186]
[125.34210968 61.59049988]
[134.94355774 73.11492157]
[148.74443054 78.99163055]
[162.54531860 84.86833191]
[176.34619141 90.74504089]
[190.14707947 96.62174225]
[203.94795227 102.49845123]
[217.74884033 108.37516022]
[231.54971313 114.25186157]
[245.39656067 120.01944733]
[259.28848267 125.67755890]
[273.70870972 119.78730011]
[287.71649170 125.72332001]
[293.24310303 139.50709534]
[307.13504028 145.16519165]
[321.02697754 150.82330322]
[329.54864502 134.45945740]
[352.69134521 127.00481415]
[367.35198975 123.83211517]
[382.01260376 120.65941620]
[396.67324829 117.48670959]
[411.33386230 114.31401062]
[425.99447632 111.14131165]
[440.65512085 107.96861267]
[455.31573486 104.79590607]
[463.05035400 99.91768646]
[470.23278809 101.69077301]
[479.01388550 88.82492065]
[493.97268677 86.05199432]
[506.18417358 94.50270844]
[520.89306641 91.56184387]
[535.60192871 88.62097168]
[550.31085205 85.68009949]
[565.01971436 82.73923492]
[579.72863770 79.79836273]
[594.43750000 76.85749817]
[608.78381348 67.82311249]
[621.43658447 79.10778809]
[614.09552002 94.38998413]
[597.37835693 91.56637573]
[582.66949463 94.50724792]
[567.96057129 97.44812012]
[553.25170898 100.38898468]
[538.54284668 103.32985687]
[523.83392334 106.27072906]
[509.12506104 109.21159363]
[501.10168457 121.70803833]
[486.22668457 124.90003204]
[473.17364502 116.39965820]
[458.48843384 119.45653534]
[443.82781982 122.62923431]
[429.16720581 125.80194092]
[414.50656128 128.97463989]
[399.84594727 132.14733887]
[385.18530273 135.32003784]
[370.52468872 138.49273682]
[355.86404419 141.66543579]
[353.20025635 148.67645264]
[368.00750732 146.27937317]
[377.48693848 157.90434265]
[372.15905762 171.92623901]
[357.35177612 174.32298279]
[347.87268066 162.69845581]
[345.20889282 169.70945740]
[354.06393433 181.81681824]
[362.91897583 193.92417908]
[377.57165527 189.96641541]
[392.66415405 191.57296753]
[406.15533447 198.52653503]
[416.22064209 209.88673401]
[421.49884033 224.11715698]
[421.27606201 239.29328918]
[415.58245850 253.36267090]
[405.18801880 264.42251587]
[391.49853516 270.97708130]
[376.36538696 272.13995361]
[361.83520508 267.75381470]
[349.87307739 258.41186523]
[342.09680176 245.37753296]
[339.55801392 230.41360474]
[342.60009766 215.54383850]
[350.81161499 202.77922058]
[341.95657349 190.67187500]
[333.10153198 178.56451416]
[338.43246460 192.58525085]
[337.39031982 207.54899597]
[330.16729736 220.69540405]
[318.09585571 229.59934998]
[303.40280151 232.61833191]
[288.79855347 229.19541931]
[276.97717285 219.96205139]
[270.11935425 206.62150574]
[269.49014282 191.63471985]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 121]
[4 120]
[5 119]
[8 116]
[9 115]
[11 114]
[12 113]
[13 112]
[14 111]
[15 110]
[16 109]
[17 108]
[18 107]
[22 36]
[23 35]
[24 34]
[25 33]
[26 32]
[45 60]
[46 59]
[47 58]
[48 57]
[49 56]
[50 55]
[62 74]
[64 72]
[65 71]
[66 70]
[79 106]
[80 105]
[81 104]
[82 103]
[83 102]
[84 101]
[85 100]
[87 99]
[88 98]
[89 97]
[123 162]
[124 161]
[125 160]
[126 159]
[127 158]
[128 157]
[129 156]
[130 155]
[132 154]
[135 151]
[136 150]
[137 149]
[138 148]
[139 147]
[140 146]
[141 145]
[169 189]
[170 188]
[171 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
