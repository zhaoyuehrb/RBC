%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 18:20:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAUUUACUACAGCAACUAUUAUGGUGGCUAUGGGUAUGGUGGGCUUGGCUGUGGCUAUGGCUGUGGUUAUCGUGGCUAUGGAUGUGGUUAUGGUGGCUAUGGAGGCUAUGGAAAUGGCUACUACUGCCCAUCUUGCUAUGGAAGAUAUUGGUCAUAUGGUUUCUACUGA\
) } def
/len { sequence length } bind def

/coor [
[79.28806305 518.91101074]
[66.01733398 526.17340088]
[51.15153122 528.97753906]
[36.14705276 527.04858398]
[22.47388268 520.57562256]
[11.47158146 510.19271851]
[4.21804094 496.91711426]
[1.42389047 482.04943848]
[3.36287189 467.04626465]
[9.84502316 453.37744141]
[20.23529053 442.38208008]
[33.51573944 435.13745117]
[48.38528824 432.35327148]
[50.29790115 417.47567749]
[44.24657822 403.86575317]
[53.68034744 391.16476440]
[55.59296036 376.28720093]
[57.50556946 361.40963745]
[59.41818237 346.53207397]
[61.33079529 331.65451050]
[63.24340820 316.77694702]
[61.60150909 314.46176147]
[60.79521942 311.34490967]
[61.13899612 307.74789429]
[62.82280731 304.10140991]
[65.87740326 300.89828491]
[68.87090302 286.20001221]
[71.86440277 271.50173950]
[74.85791016 256.80349731]
[77.85140991 242.10522461]
[80.84490967 227.40696716]
[83.83841705 212.70869446]
[68.44660187 194.87374878]
[71.07773590 171.20953369]
[90.41581726 156.89141846]
[90.96364594 141.90142822]
[91.51147461 126.91143799]
[92.05931091 111.92144012]
[85.68560791 99.47686005]
[92.95069885 87.53072357]
[93.49852753 72.54073334]
[94.04636383 57.55074310]
[94.59419250 42.56074905]
[95.14202118 27.57075691]
[95.68984985 12.58076382]
[96.23767853 -2.40922928]
[84.26380920 -21.32871628]
[96.29251099 -39.30659103]
[95.74467468 -54.29658127]
[95.19684601 -69.28657532]
[94.64901733 -84.27656555]
[94.10118866 -99.26656342]
[93.55335999 -114.25655365]
[93.00552368 -129.24655151]
[81.71163940 -139.97434998]
[81.36959839 -155.18414307]
[91.66651917 -165.88502502]
[91.11869049 -180.87501526]
[90.57086182 -195.86500549]
[90.02303314 -210.85501099]
[89.47519684 -225.84500122]
[88.92736816 -240.83499146]
[88.37953949 -255.82498169]
[87.83171082 -270.81497192]
[86.87344360 -285.78433228]
[85.50547028 -300.72183228]
[84.13748932 -315.65930176]
[82.76951599 -330.59680176]
[81.40153503 -345.53430176]
[80.03356171 -360.47180176]
[78.66558075 -375.40927124]
[77.29760742 -390.34677124]
[75.92962646 -405.28427124]
[74.56165314 -420.22174072]
[73.19367218 -435.15924072]
[71.82569885 -450.09674072]
[70.45771790 -465.03424072]
[69.08974457 -479.97171021]
[67.72176361 -494.90921021]
[66.35379028 -509.84671021]
[64.98580933 -524.78417969]
[55.08838272 -537.85986328]
[61.71195602 -552.86187744]
[78.04276276 -554.35742188]
[87.28107452 -540.80804443]
[79.92330170 -526.15216064]
[81.29128265 -511.21469116]
[82.65925598 -496.27719116]
[84.02723694 -481.33969116]
[85.39521027 -466.40219116]
[86.76319122 -451.46472168]
[88.13116455 -436.52722168]
[89.49914551 -421.58972168]
[90.86711884 -406.65225220]
[92.23509979 -391.71475220]
[93.60307312 -376.77725220]
[94.97105408 -361.83975220]
[96.33902740 -346.90228271]
[97.70700836 -331.96478271]
[99.07498169 -317.02728271]
[100.44296265 -302.08981323]
[101.81093597 -287.15231323]
[104.30838013 -284.61419678]
[105.68197632 -280.72613525]
[105.30435181 -276.03823853]
[102.82170105 -271.36279297]
[103.36952972 -256.37280273]
[103.91736603 -241.38281250]
[104.46519470 -226.39282227]
[105.01302338 -211.40283203]
[105.56085205 -196.41284180]
[106.10868073 -181.42285156]
[106.65651703 -166.43286133]
[117.70708466 -156.51214600]
[118.47619629 -141.31796265]
[107.99552155 -129.79437256]
[108.54335022 -114.80438232]
[109.09117889 -99.81439209]
[109.63900757 -84.82439423]
[110.18684387 -69.83440399]
[110.73467255 -54.84441376]
[111.28250122 -39.85441971]
[118.13180542 -35.80133820]
[122.85945129 -29.28225708]
[124.62486267 -21.32871628]
[123.06368256 -13.23659611]
[118.35991669 -6.35500669]
[111.22767639 -1.86139894]
[110.67984772 13.12859344]
[110.13201141 28.11858559]
[109.58418274 43.10857773]
[109.03635406 58.09857178]
[108.48852539 73.08856201]
[107.94068909 88.07855988]
[114.31439209 100.52313995]
[107.04930115 112.46927643]
[106.50147247 127.45926666]
[105.95363617 142.44926453]
[105.40580750 157.43925476]
[111.83468628 160.26985168]
[117.42134094 164.49775696]
[121.86874390 169.88760376]
[124.94291687 176.14251709]
[126.48519135 182.92048645]
[126.42039490 189.85311890]
[124.76049042 196.56555176]
[121.60345459 202.69682312]
[117.12753296 207.91920471]
[111.58119965 211.95578003]
[105.26937866 214.59509277]
[98.53667450 215.70219421]
[95.54317474 230.40046692]
[92.54967499 245.09872437]
[89.55616760 259.79699707]
[86.56266785 274.49523926]
[83.56916809 289.19351196]
[80.57566833 303.89178467]
[78.12097168 318.68957520]
[76.20835876 333.56713867]
[74.29574585 348.44470215]
[72.38313293 363.32226562]
[70.47052002 378.19982910]
[68.55791473 393.07739258]
[74.47243500 407.75149536]
[65.17546082 419.38830566]
[63.26285172 434.26586914]
[76.94468689 440.72052002]
[87.96089172 451.08868408]
[95.23221588 464.35452271]
[98.04628754 479.21844482]
[96.12741852 494.22421265]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 166]
[14 165]
[16 163]
[17 162]
[18 161]
[19 160]
[20 159]
[21 158]
[26 157]
[27 156]
[28 155]
[29 154]
[30 153]
[31 152]
[32 151]
[35 139]
[36 138]
[37 137]
[38 136]
[40 134]
[41 133]
[42 132]
[43 131]
[44 130]
[45 129]
[46 128]
[48 122]
[49 121]
[50 120]
[51 119]
[52 118]
[53 117]
[54 116]
[57 113]
[58 112]
[59 111]
[60 110]
[61 109]
[62 108]
[63 107]
[64 106]
[65 102]
[66 101]
[67 100]
[68 99]
[69 98]
[70 97]
[71 96]
[72 95]
[73 94]
[74 93]
[75 92]
[76 91]
[77 90]
[78 89]
[79 88]
[80 87]
[81 86]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
