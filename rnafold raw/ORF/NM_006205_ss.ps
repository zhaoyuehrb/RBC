%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 17:48:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAGUGACAACACUACUCUGCCUGCUCCAGCUUCAAACCAGGGUCCUACCACCCCACGCAAAGGCCCUCCCAAGUUCAAGCAGAGGCAGACUCGCCAAUUCAAGAGUAAACCUCCAAAGAAAGGUGUGAAAGGAUUUGGAGAUGACAUUCCAGGAAUGGAGGGGCUAGGAACAGAUAUCACAGUGAUUUGUCCAUGGGAGGCAUUCAGCCACCUGGAAUUGCAUGAGCUCGCUCAGUUUGGGAUUAUCUGA\
) } def
/len { sequence length } bind def

/coor [
[126.58673859 149.53129578]
[111.73118591 147.45463562]
[102.10314941 135.95242310]
[102.67442322 120.96138000]
[99.16821289 135.54583740]
[95.66201019 150.13031006]
[92.15579987 164.71476746]
[97.32484436 180.27795410]
[86.23047638 192.35467529]
[70.28562927 188.52142334]
[65.89299011 172.72152710]
[77.57133484 161.20855713]
[81.07754517 146.62409973]
[84.58375549 132.03964233]
[88.08996582 117.45517731]
[82.83628082 112.10271454]
[72.32891846 101.39779663]
[67.07523346 96.04533386]
[52.42800140 99.27929688]
[37.78076553 102.51326752]
[23.13353157 105.74723053]
[8.48629856 108.98119354]
[-6.16093588 112.21515656]
[-20.80817032 115.44912720]
[-35.41411972 118.86471558]
[-49.97653198 122.46140289]
[-64.53894043 126.05809784]
[-72.73499298 139.30432129]
[-87.55458832 142.74443054]
[-100.13232422 134.84910583]
[-114.69474030 138.44580078]
[-129.25715637 142.04249573]
[-143.81956482 145.63917542]
[-158.38197327 149.23587036]
[-160.77423096 160.40011597]
[-167.12039185 169.83000183]
[-176.47738647 176.19248962]
[-187.47994995 178.60533142]
[-198.53974915 176.75921631]
[-208.07464600 170.95687866]
[-214.73503113 162.06419373]
[-229.42129517 165.11602783]
[-244.10755920 168.16787720]
[-258.79382324 171.21971130]
[-266.53430176 176.01751709]
[-273.68133545 174.21707153]
[-288.40435791 177.08631897]
[-303.12738037 179.95556641]
[-306.11645508 194.85972595]
[-314.58575439 207.48271179]
[-327.24371338 215.89961243]
[-342.16012573 218.82691956]
[-357.06033325 215.81822205]
[-369.67218018 207.33235168]
[-378.07241821 194.66331482]
[-380.98010254 179.74307251]
[-377.95181274 164.84683228]
[-369.44934082 152.24617004]
[-356.76928711 143.86259460]
[-341.84521484 140.97454834]
[-326.95297241 144.02243042]
[-314.36352539 152.54145813]
[-305.99664307 165.23254395]
[-291.27359009 162.36329651]
[-276.55056763 159.49404907]
[-261.84564209 156.53344727]
[-247.15939331 153.48161316]
[-232.47312927 150.42976379]
[-217.78686523 147.37792969]
[-211.07676697 129.90603638]
[-195.04684448 119.95621490]
[-176.11166382 121.72430420]
[-161.97866821 134.67346191]
[-147.41624451 131.07676697]
[-132.85383606 127.48007965]
[-118.29142761 123.88339233]
[-103.72901917 120.28669739]
[-96.27338409 107.44345093]
[-81.55626678 103.58844757]
[-68.13563538 111.49568176]
[-53.57321930 107.89899445]
[-39.01081085 104.30230713]
[-35.83037567 100.77233887]
[-30.40836334 99.18652344]
[-24.04213524 100.80188751]
[-9.39490128 97.56792450]
[5.25233316 94.33396149]
[19.89956856 91.09999847]
[34.54680252 87.86602783]
[49.19403458 84.63206482]
[63.84127045 81.39810181]
[49.25630951 77.89396667]
[43.66596222 63.97462845]
[51.77554321 51.35580444]
[66.75933075 50.65858841]
[76.00569153 62.46989822]
[72.86272430 47.80286789]
[69.71976471 33.13583755]
[66.57679749 18.46880531]
[56.11968994 6.59617186]
[61.01848221 -7.46978378]
[57.87551880 -22.13681412]
[43.65504456 -23.77619743]
[30.65387726 -29.71471024]
[20.13540649 -39.36073685]
[13.11727238 -51.76309204]
[10.27291584 -65.70482635]
[11.86698151 -79.82260895]
[17.73074532 -92.74005127]
[27.27987480 -103.20191956]
[39.57262421 -110.19606781]
[36.61202621 -124.90099335]
[33.65142441 -139.60592651]
[30.69082642 -154.31085205]
[16.52845001 -160.65171814]
[8.82713127 -174.12277222]
[10.54818344 -189.54411316]
[21.02982903 -200.98591614]
[36.24165726 -204.04856873]
[50.33441544 -197.55442810]
[57.88914490 -184.00062561]
[56.00090027 -168.59886169]
[45.39575195 -157.27143860]
[48.35634995 -142.56651306]
[51.31695175 -127.86159515]
[54.27754974 -113.15666962]
[69.88470459 -110.98986053]
[83.82787323 -103.59297943]
[94.40966797 -91.84564209]
[100.33479309 -77.15832520]
[100.86853790 -61.30300903]
[95.92786407 -46.19940948]
[86.09366608 -33.68254471]
[72.54254913 -25.27977753]
[75.68550873 -10.61274624]
[85.91781616 0.21080235]
[81.24382782 15.32584190]
[84.38679504 29.99287224]
[87.52975464 44.65990448]
[90.67272186 59.32693481]
[123.42944336 93.48336792]
[138.27676392 95.61808777]
[153.12408447 97.75280762]
[167.97140503 99.88753510]
[182.81872559 102.02225494]
[197.66604614 104.15698242]
[203.89437866 102.07222748]
[209.41938782 103.25004578]
[212.85375977 106.53348541]
[227.64349365 109.03623962]
[242.43322754 111.53899384]
[257.22296143 114.04174805]
[272.01269531 116.54450989]
[286.80242920 119.04726410]
[301.59216309 121.55001831]
[309.73327637 112.93063354]
[320.90588379 109.33607483]
[332.31066895 111.54586029]
[341.14813232 118.90012360]
[345.30566406 129.49082947]
[360.02868652 132.36007690]
[374.75170898 135.22932434]
[389.49227905 138.00711060]
[404.24978638 140.69331360]
[419.00729370 143.37951660]
[433.76480103 146.06573486]
[448.52233887 148.75193787]
[450.90570068 128.13981628]
[473.19885254 111.64897919]
[487.88510132 108.59713745]
[502.57138062 105.54530334]
[510.31185913 100.74749756]
[517.45892334 102.54793549]
[532.18194580 99.67869568]
[546.90496826 96.80944824]
[561.62799072 93.94020081]
[576.35101318 91.07096100]
[585.19458008 78.24799347]
[600.16668701 75.54791260]
[612.33697510 84.05796051]
[626.72705078 75.09351349]
[639.32476807 86.43963623]
[631.90942383 101.68592072]
[615.20617676 98.78098297]
[607.12207031 111.23822784]
[592.23175049 114.35778809]
[579.22021484 105.79398346]
[564.49719238 108.66322327]
[549.77416992 111.53247070]
[535.05114746 114.40171814]
[520.32812500 117.27096558]
[505.62319946 120.23155975]
[490.93695068 123.28340149]
[476.25070190 126.33524323]
[475.50686646 133.79826355]
[474.01922607 148.72431946]
[473.27542114 156.18734741]
[487.07043457 162.07781982]
[500.86544800 167.96830750]
[516.59545898 166.27188110]
[525.26184082 178.38560486]
[539.05688477 184.27607727]
[552.85186768 190.16656494]
[568.21539307 185.54693604]
[581.32366943 194.79644775]
[582.12109375 210.81967163]
[569.99597168 221.32495117]
[554.24963379 218.25355530]
[546.96136475 203.96156311]
[533.16638184 198.07109070]
[519.37139893 192.18060303]
[504.62808228 194.29837036]
[494.97494507 181.76330566]
[481.17996216 175.87283325]
[467.38494873 169.98234558]
[476.97732544 181.51431274]
[480.38281250 196.12261963]
[476.87881470 210.70761108]
[467.20880127 222.17457581]
[453.42465210 228.09037781]
[438.45111084 227.19979858]
[425.46536255 219.69180298]
[417.22277832 207.15945435]
[415.47229004 192.26194763]
[420.58535767 178.16029358]
[431.47705078 167.84666443]
[445.83612061 163.50944519]
[431.07861328 160.82324219]
[416.32107544 158.13703918]
[401.56356812 155.45083618]
[386.80606079 152.76461792]
[379.68191528 154.65367126]
[371.88247681 149.95234680]
[357.15945435 147.08309937]
[342.43643188 144.21386719]
[327.87167358 155.33563232]
[309.49176025 152.19844055]
[299.08938599 136.33975220]
[284.29968262 133.83699036]
[269.50994873 131.33424377]
[254.72019958 128.83148193]
[239.93046570 126.32872772]
[225.14073181 123.82597351]
[210.35099792 121.32321930]
[195.53132629 119.00430298]
[180.68400574 116.86957550]
[165.83668518 114.73485565]
[150.98936462 112.60013580]
[136.14204407 110.46540833]
[121.29472351 108.33068848]
[135.43307495 113.34135437]
[142.56161499 126.53923035]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 15]
[5 14]
[6 13]
[7 12]
[18 91]
[19 90]
[20 89]
[21 88]
[22 87]
[23 86]
[24 85]
[25 82]
[26 81]
[27 80]
[30 77]
[31 76]
[32 75]
[33 74]
[34 73]
[41 69]
[42 68]
[43 67]
[44 66]
[46 65]
[47 64]
[48 63]
[96 140]
[97 139]
[98 138]
[99 137]
[101 135]
[102 134]
[111 126]
[112 125]
[113 124]
[114 123]
[141 250]
[142 249]
[143 248]
[144 247]
[145 246]
[146 245]
[149 244]
[150 243]
[151 242]
[152 241]
[153 240]
[154 239]
[155 238]
[160 235]
[161 234]
[162 233]
[163 231]
[164 230]
[165 229]
[166 228]
[167 227]
[169 194]
[170 193]
[171 192]
[173 191]
[174 190]
[175 189]
[176 188]
[177 187]
[180 184]
[197 215]
[198 214]
[199 213]
[201 211]
[202 210]
[203 209]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
