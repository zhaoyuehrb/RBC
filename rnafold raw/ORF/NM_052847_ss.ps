%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 11:18:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAGCCACUAACAACAUAGCCCAGGCCCGGAAGCUGGUGGAACAGCUACGCAUAGAAGCCGGGAUUGAGCGCAUCAAGGUCUCCAAAGCGGCGUCUGACCUCAUGAGCUACUGUGAGCAACAUGCCCGGAACGACCCCCUGCUGGUCGGAGUCCCUGCCUCGGAGAACCCCUUUAAGGACAAGAAACCUUGUAUUAUUUUAUAA\
) } def
/len { sequence length } bind def

/coor [
[46.09763718 314.49136353]
[31.27455330 316.78836060]
[16.28564835 316.21151733]
[1.68293500 312.78213501]
[-11.99579620 306.62646484]
[-24.24678230 297.97122192]
[-34.61884308 287.13513184]
[-42.72999573 274.51733398]
[-48.28151703 260.58245850]
[-51.06896210 245.84373474]
[-50.98966980 230.84393311]
[-48.04655838 216.13549805]
[-42.34802246 202.26010132]
[-34.10392761 189.72874451]
[-23.61788368 179.00294495]
[-11.27607632 170.47769165]
[2.46696901 164.46697998]
[17.11100006 161.19142151]
[29.17875671 152.28248596]
[41.24651337 143.37355042]
[53.31427002 134.46459961]
[65.38202667 125.55566406]
[50.52040100 127.58840179]
[37.89606094 137.12446594]
[24.23766899 131.18330383]
[9.37604141 133.21603394]
[-0.17799562 145.51881409]
[-15.27875614 147.36859131]
[-26.94868851 138.18444824]
[-41.81031418 140.21719360]
[-56.67194366 142.24993896]
[-71.53356934 144.28268433]
[-86.39519501 146.31541443]
[-93.79303741 159.82757568]
[-107.56773376 166.31687927]
[-122.34747314 163.48432922]
[-132.50367737 152.62203979]
[-147.36531067 154.65476990]
[-162.22692871 156.68751526]
[-177.07278442 158.83242798]
[-191.90202332 161.08940125]
[-206.73124695 163.34637451]
[-212.93016052 177.47354126]
[-225.79536438 185.98765564]
[-241.22161865 186.17187500]
[-254.28648376 177.96742249]
[-260.82098389 163.99230957]
[-258.73999023 148.70593262]
[-248.70755005 136.98614502]
[-233.92497253 132.57266235]
[-219.10931396 136.87382507]
[-208.98822021 148.51713562]
[-194.15898132 146.26016235]
[-179.32975769 144.00320435]
[-173.18864441 139.88803101]
[-164.25967407 141.82589722]
[-149.39805603 139.79315186]
[-134.53642273 137.76040649]
[-127.67011261 124.56981659]
[-114.19384766 117.87247467]
[-99.18250275 120.42448425]
[-88.42794037 131.45379639]
[-73.56631470 129.42105103]
[-58.70468521 127.38831329]
[-43.84305573 125.35556793]
[-28.98143005 123.32283020]
[-20.20635605 111.34227753]
[-5.16350985 109.06907654]
[7.34330034 118.35440826]
[22.20492744 116.32167053]
[33.76626205 106.93099976]
[48.48765945 112.72677612]
[63.34928894 110.69403839]
[51.74375153 101.19079590]
[46.35528564 87.19207001]
[48.59353638 72.36000061]
[57.87297058 60.57474899]
[71.76602936 54.91940689]
[86.63820648 56.87344360]
[98.59886169 65.92567444]
[104.51877594 79.70641327]
[113.94683838 68.03972626]
[123.37490082 56.37303543]
[132.71458435 44.63547897]
[141.96537781 32.82772827]
[151.21615601 21.01997566]
[160.46693420 9.21222401]
[156.36726379 -5.63698149]
[161.73463440 -19.88635635]
[174.31457520 -28.14524078]
[189.16766357 -27.42155457]
[198.41845703 -39.22930527]
[207.66923523 -51.03705978]
[216.92001343 -62.84481049]
[213.91934204 -81.54885101]
[225.34519958 -96.25589752]
[243.57440186 -97.91425323]
[252.46434021 -109.99602509]
[261.35427856 -122.07778931]
[270.24420166 -134.15956116]
[279.13412476 -146.24131775]
[288.02407837 -158.32308960]
[296.91400146 -170.40486145]
[287.92160034 -193.99122620]
[306.69970703 -219.03213501]
[312.01876831 -233.05738831]
[317.33782959 -247.08262634]
[322.65692139 -261.10787964]
[319.28128052 -279.20889282]
[333.29507446 -289.77041626]
[338.40170288 -303.87438965]
[343.50833130 -317.97836304]
[336.57901001 -332.18258667]
[341.80203247 -347.09887695]
[356.07873535 -353.87765503]
[370.93896484 -348.49719238]
[377.56640625 -334.14962769]
[372.02914429 -319.34713745]
[357.61233521 -312.87173462]
[352.50567627 -298.76776123]
[347.39904785 -284.66375732]
[352.24417114 -273.57833862]
[348.10336304 -261.78533936]
[336.68215942 -255.78878784]
[331.36309814 -241.76354980]
[326.04400635 -227.73831177]
[320.72494507 -213.71305847]
[326.59371948 -209.04321289]
[340.55090332 -214.53842163]
[338.33126831 -199.70353699]
[344.20004272 -195.03369141]
[356.67208862 -203.36723328]
[357.14669800 -218.87705994]
[366.67370605 -231.12515259]
[381.58978271 -235.40187073]
[396.15939331 -230.06274414]
[404.78021240 -217.16076660]
[404.13739014 -201.65701294]
[394.47805786 -189.51300049]
[379.51647949 -185.39833069]
[365.00564575 -190.89518738]
[352.53359985 -182.56164551]
[347.21044922 -170.47111511]
[338.42410278 -161.93919373]
[327.95275879 -157.72491455]
[317.62048340 -157.81729126]
[308.99575806 -161.51492310]
[300.10583496 -149.43315125]
[291.21591187 -137.35139465]
[282.32595825 -125.26962280]
[273.43603516 -113.18785858]
[264.54611206 -101.10608673]
[255.65617371 -89.02432251]
[259.77734375 -78.38267517]
[258.23266602 -66.95494080]
[251.29139709 -57.59667587]
[240.58561707 -52.70253754]
[228.72776794 -53.59402847]
[219.47698975 -41.78627396]
[210.22621155 -29.97852325]
[200.97541809 -18.17077065]
[205.23265076 -3.92247438]
[200.22433472 10.26839352]
[187.67352295 18.88990021]
[172.27468872 18.46300697]
[163.02391052 30.27075958]
[153.77311707 42.07851028]
[144.52233887 53.88626480]
[142.87139893 61.09197617]
[135.04158020 65.80110168]
[125.61352539 77.46778870]
[116.18546295 89.13447571]
[118.10591125 104.01103210]
[130.18768311 112.90096283]
[142.26943970 121.79089355]
[158.61053467 126.30812073]
[158.79350281 143.26107788]
[142.55372620 148.12994385]
[133.37951660 133.87266541]
[121.29774475 124.98272705]
[109.21598053 116.09279633]
[98.37181854 126.45639801]
[106.70537567 138.92843628]
[115.03892517 151.40048218]
[123.37248230 163.87252808]
[131.70603943 176.34457397]
[146.64529419 183.10850525]
[147.98770142 199.45260620]
[134.35231018 208.56349182]
[119.76603699 201.06864929]
[119.23398590 184.67813110]
[110.90043640 172.20608521]
[102.56687927 159.73403931]
[94.23332977 147.26199341]
[85.89977264 134.78994751]
[87.23374176 149.73051453]
[88.56770325 164.67108154]
[89.90167236 179.61164856]
[91.23563385 194.55221558]
[98.49227905 207.68009949]
[103.10760498 221.95240784]
[104.91162872 236.84352112]
[103.83791351 251.80503845]
[99.92600250 266.28594971]
[93.31996155 279.75296021]
[84.26309204 291.71011353]
[73.08892822 301.71701050]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 73]
[23 72]
[25 70]
[26 69]
[29 66]
[30 65]
[31 64]
[32 63]
[33 62]
[37 58]
[38 57]
[39 56]
[40 54]
[41 53]
[42 52]
[81 172]
[82 171]
[83 170]
[84 168]
[85 167]
[86 166]
[87 165]
[91 161]
[92 160]
[93 159]
[94 158]
[97 153]
[98 152]
[99 151]
[100 150]
[101 149]
[102 148]
[103 147]
[105 127]
[106 126]
[107 125]
[108 124]
[110 121]
[111 120]
[112 119]
[131 142]
[132 141]
[173 181]
[174 180]
[175 179]
[182 195]
[183 194]
[184 193]
[185 192]
[186 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
