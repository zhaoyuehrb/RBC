%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 07:29:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGCGGUUGGCAAGAACAAGCGCCUUACGAAAGGCGGCAAAAAGGGAGCCAAGAAGAAAGUGGUUGAUCCAUUUUCUAAGAAAGAUUGGUAUGAUGUGAAAGCACCUGCUAUGUUCAAUAUAAGAAAUAUUGGAAAGACGCUCGUCACCAGGACCCAAGGAACCAACAAUGAUUGA\
) } def
/len { sequence length } bind def

/coor [
[68.31947327 287.41522217]
[60.06396866 274.70214844]
[56.65748978 259.93151855]
[58.51137924 244.88694763]
[65.40177917 231.38516235]
[76.49662781 221.05656433]
[90.45617676 215.14837646]
[89.66233063 200.16938782]
[88.86847687 185.19041443]
[88.07462311 170.21144104]
[87.28077698 155.23245239]
[80.67810059 151.67510986]
[74.19346619 165.20098877]
[67.70883179 178.72688293]
[67.07290649 193.71339417]
[54.03423691 201.12911987]
[40.82859421 194.01498413]
[39.84844208 179.04704285]
[52.01486588 170.27139282]
[59.74380875 157.41590881]
[67.47275543 144.56042480]
[60.87007904 141.00308228]
[47.92404556 148.57937622]
[34.97801208 156.15567017]
[22.03198051 163.73196411]
[9.08594704 171.30825806]
[-3.86008573 178.88455200]
[-11.50136948 193.39463806]
[-27.89640808 193.76167297]
[-36.17939377 179.60809326]
[-27.82949829 165.49386597]
[-11.43637943 165.93850708]
[1.50965333 158.36221313]
[14.45568657 150.78591919]
[27.40172005 143.20962524]
[40.34775162 135.63333130]
[53.29378510 128.05703735]
[48.05574036 112.93888855]
[47.49548340 97.23063660]
[51.49773026 82.32186127]
[59.55075073 69.48347473]
[70.80525970 59.75946426]
[84.16136169 53.88248825]
[98.37488556 52.22008896]
[112.17280579 54.75535583]
[118.33827972 41.08103943]
[124.50375366 27.40672493]
[120.67448425 15.06944847]
[126.11447144 3.79677701]
[137.40773010 -0.59029096]
[143.81356812 -14.15366554]
[130.67204285 -6.92177057]
[117.16548920 -13.44655323]
[114.66217804 -28.23619270]
[125.26912689 -38.84244919]
[140.05867004 -36.33813477]
[129.54608154 -47.03792191]
[119.03348541 -57.73770905]
[108.52089691 -68.43750000]
[98.00830841 -79.13728333]
[87.49571991 -89.83707428]
[76.98313141 -100.53685760]
[66.47054291 -111.23664856]
[55.95795059 -121.93643188]
[39.99277115 -123.51525116]
[31.39431381 -137.05947876]
[36.75857925 -152.17913818]
[51.97055817 -157.27572632]
[65.36092377 -148.43957520]
[66.65773773 -132.44902039]
[77.17032623 -121.74923706]
[87.68291473 -111.04945374]
[98.19550323 -100.34966278]
[108.70809937 -89.64987183]
[119.22068787 -78.95008850]
[129.73327637 -68.25029755]
[140.24586487 -57.55051041]
[150.75845337 -46.85072327]
[140.72782898 -58.00359726]
[137.93493652 -72.74129486]
[143.18954468 -86.79081726]
[154.96813965 -96.07869720]
[169.85568237 -97.91202545]
[183.53572083 -91.75926208]
[192.04191589 -79.40431976]
[192.90800476 -64.42934418]
[185.88287354 -51.17613220]
[173.00573730 -43.48792267]
[186.21109009 -50.60261536]
[199.41642761 -57.71730423]
[212.62178040 -64.83199310]
[225.76382446 -72.06293488]
[238.84155273 -79.40957642]
[251.91928101 -86.75621033]
[264.99700928 -94.10284424]
[270.96871948 -101.05565643]
[278.37100220 -101.46141052]
[291.57635498 -108.57610321]
[304.78170776 -115.69078827]
[302.94921875 -135.51010132]
[315.05740356 -154.23806763]
[338.39297485 -162.35139465]
[347.08074951 -174.57933044]
[355.76852417 -186.80728149]
[356.77038574 -203.17579651]
[371.56558228 -210.24926758]
[384.93411255 -200.75112915]
[383.12356567 -184.45223999]
[367.99649048 -178.11949158]
[359.30868530 -165.89155579]
[350.62091064 -153.66362000]
[355.01858521 -147.58822632]
[369.93911743 -149.13012695]
[363.81393433 -135.43742371]
[368.21160889 -129.36203003]
[382.54147339 -133.79539490]
[396.87136841 -138.22877502]
[411.20123291 -142.66213989]
[425.53109741 -147.09552002]
[439.86096191 -151.52888489]
[454.19082642 -155.96226501]
[468.52072144 -160.39562988]
[477.24688721 -173.85792542]
[493.22628784 -175.28567505]
[504.20086670 -163.58361816]
[501.75189209 -147.72859192]
[487.75799561 -139.88319397]
[472.95407104 -146.06576538]
[458.62420654 -141.63238525]
[444.29434204 -137.19902039]
[429.96447754 -132.76564026]
[415.63461304 -128.33227539]
[401.30471802 -123.89889526]
[386.97485352 -119.46552277]
[372.64498901 -115.03215027]
[363.86898804 -100.12064362]
[350.32122803 -91.04605865]
[335.16094971 -88.90222931]
[321.52798462 -93.27645111]
[311.89639282 -102.48544312]
[298.69104004 -95.37075806]
[285.48568726 -88.25606537]
[272.34365845 -81.02512360]
[259.26593018 -73.67848206]
[246.18818665 -66.33184814]
[233.11045837 -58.98521042]
[228.80578613 -52.94962692]
[219.73646545 -51.62664795]
[206.53112793 -44.51195908]
[193.32577515 -37.39726639]
[180.12042236 -30.28257751]
[157.37695312 -7.74781895]
[150.97109985 5.81555557]
[153.36753845 23.18718910]
[138.17807007 33.57220078]
[132.01258850 47.24651718]
[125.84712219 60.92082977]
[138.82302856 71.86846924]
[147.28813171 87.03175354]
[149.91362000 104.59172058]
[146.09091187 122.32865906]
[136.04437256 137.90263367]
[120.83634186 149.16192627]
[102.25975037 154.43859863]
[103.05360413 169.41758728]
[103.84745789 184.39656067]
[104.64130402 199.37553406]
[105.43515778 214.35452271]
[119.94100189 218.75410461]
[132.06541443 227.85214233]
[140.34434509 240.54998779]
[143.77803040 255.31433105]
[141.95187378 270.36227417]
[135.08636475 283.87673950]
[124.01056671 294.22576904]
[110.06192780 300.15966797]
[94.92481232 300.96191406]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 168]
[8 167]
[9 166]
[10 165]
[11 164]
[22 37]
[23 36]
[24 35]
[25 34]
[26 33]
[27 32]
[45 157]
[46 156]
[47 155]
[50 153]
[51 152]
[56 78]
[57 77]
[58 76]
[59 75]
[60 74]
[61 73]
[62 72]
[63 71]
[64 70]
[88 151]
[89 150]
[90 149]
[91 148]
[92 146]
[93 145]
[94 144]
[95 143]
[97 142]
[98 141]
[99 140]
[102 111]
[103 110]
[104 109]
[115 135]
[116 134]
[117 133]
[118 132]
[119 131]
[120 130]
[121 129]
[122 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
