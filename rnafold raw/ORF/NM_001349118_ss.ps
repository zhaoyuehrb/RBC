%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 15:14:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAAGCCAGUAAGUCGUCGCACGCUGGACUGGAUUUAUUCAGUGUUGCUGCUUGCCAUCGUUUUAAUCUCCUGGGGCUGCAUCAUCUAUGCUUCGAUGGUGUCUGCAAGACGACAGCUAAGGAAGAAAUACCCAGACAAAAUCUUUGGGACGAAUGAAAAUUUGUAA\
) } def
/len { sequence length } bind def

/coor [
[77.10571289 122.50861359]
[73.85829926 116.14674377]
[59.55838013 120.67578888]
[45.25846100 125.20484161]
[30.95854187 129.73388672]
[16.65862274 134.26293945]
[2.35870314 138.79199219]
[-5.68208408 155.91114807]
[-23.36670113 161.65873718]
[-39.37783432 152.84468079]
[-53.49952698 157.90213013]
[-67.62122345 162.95957947]
[-81.74291229 168.01702881]
[-95.86460876 173.07447815]
[-109.98629761 178.13192749]
[-120.36968231 190.06909180]
[-134.96046448 187.07600403]
[-149.08215332 192.13345337]
[-153.17655945 202.26530457]
[-162.00296021 208.32760620]
[-172.48918152 208.50480652]
[-181.14414978 202.98071289]
[-195.44407654 207.50976562]
[-209.74398804 212.03881836]
[-224.04391479 216.56785583]
[-238.34382629 221.09690857]
[-252.64375305 225.62596130]
[-266.94366455 230.15501404]
[-281.24359131 234.68406677]
[-285.17700195 249.60156250]
[-296.56643677 260.00753784]
[-311.77755737 262.58148193]
[-325.95657349 256.50207520]
[-334.57897949 243.70919800]
[-334.89343262 228.28503418]
[-326.79956055 215.15138245]
[-312.88009644 208.49913025]
[-297.57672119 210.45100403]
[-285.77264404 220.38414001]
[-271.47271729 215.85510254]
[-257.17279053 211.32604980]
[-242.87287903 206.79699707]
[-228.57296753 202.26794434]
[-214.27304077 197.73889160]
[-199.97312927 193.20983887]
[-185.67320251 188.68078613]
[-173.75569153 173.48367310]
[-154.13960266 178.01176453]
[-140.01791382 172.95431519]
[-130.64460754 161.37889099]
[-115.04374695 164.01022339]
[-100.92205811 158.95277405]
[-86.80036163 153.89532471]
[-72.67867279 148.83787537]
[-58.55697632 143.78042603]
[-44.43528366 138.72297668]
[-41.89519882 127.55195618]
[-34.18453979 118.91735840]
[-23.14416504 115.05518341]
[-11.49561691 117.04066467]
[-2.17034769 124.49207306]
[12.12957191 119.96302795]
[26.42949104 115.43397522]
[40.72941208 110.90492249]
[55.02933121 106.37586975]
[69.32924652 101.84681702]
[80.27383423 76.44190216]
[107.20639038 70.13072205]
[114.17723846 56.84888458]
[121.14808655 43.56704330]
[127.99518585 30.22098732]
[134.71794128 16.81186676]
[141.44070435 3.40274477]
[138.12178040 -9.08844566]
[144.02893066 -20.13094139]
[155.50227356 -24.04274940]
[162.47311401 -37.32458878]
[169.44396973 -50.60643005]
[176.41481018 -63.88827133]
[183.38566589 -77.17011261]
[190.23275757 -90.51616669]
[175.38098145 -118.54319000]
[179.24081421 -133.03807068]
[183.10064697 -147.53295898]
[186.96049500 -162.02783203]
[190.82032776 -176.52272034]
[194.68016052 -191.01760864]
[184.79212952 -202.97613525]
[183.85517883 -218.46488953]
[192.22961426 -231.52815247]
[206.69526672 -237.14280701]
[221.68981934 -233.14991760]
[231.44754028 -221.08482361]
[232.21641541 -205.58680725]
[223.70075989 -192.61517334]
[209.17504883 -187.15777588]
[205.31521606 -172.66288757]
[201.45536804 -158.16799927]
[197.59553528 -143.67312622]
[193.73570251 -129.17823792]
[189.87586975 -114.68334961]
[202.67637634 -106.86370850]
[213.81111145 -116.91447449]
[224.94583130 -126.96524048]
[236.08055115 -137.01600647]
[243.78683472 -152.11732483]
[260.43127441 -148.89268494]
[261.94030762 -132.00602722]
[246.13131714 -125.88128662]
[234.99659729 -115.83052063]
[223.86187744 -105.77975464]
[212.72714233 -95.72898865]
[203.64187622 -83.79341125]
[203.45429993 -76.37462616]
[196.66749573 -70.19926453]
[189.69665527 -56.91742325]
[182.72581482 -43.63558197]
[175.75495911 -30.35374260]
[168.78411865 -17.07190132]
[170.45191956 0.38035604]
[154.84982300 10.12550163]
[148.12705994 23.53462410]
[141.40431213 36.94374466]
[141.21673584 44.36252975]
[134.42993164 50.53789139]
[127.45908356 63.81973267]
[120.48823547 77.10157013]
[126.04174042 81.22198486]
[130.72926331 86.69642639]
[134.22161865 93.33315277]
[136.23429871 100.86104584]
[136.54640198 108.94047546]
[149.49005127 116.52082825]
[162.43371582 124.10118103]
[175.37738037 131.68153381]
[188.32102966 139.26187134]
[201.26469421 146.84222412]
[215.93025208 141.41496277]
[230.63580322 146.73292542]
[238.43783569 160.28514099]
[235.65245056 175.67265320]
[223.59484863 185.62997437]
[207.95823669 185.45553589]
[196.12574768 175.23170471]
[193.68434143 159.78588867]
[180.74067688 152.20553589]
[167.79702759 144.62518311]
[154.85336304 137.04483032]
[141.90971375 129.46449280]
[128.96604919 121.88414001]
[117.64642334 131.72619629]
[123.35445404 145.59768677]
[129.06248474 159.46917725]
[134.77052307 173.34066772]
[140.47856140 187.21217346]
[146.18659973 201.08366394]
[159.49699402 210.66307068]
[157.58718872 226.95063782]
[142.42179871 233.19110107]
[129.60169983 222.96481323]
[132.31509399 206.79170227]
[126.60706329 192.92019653]
[120.89903259 179.04870605]
[115.19099426 165.17721558]
[109.48296356 151.30572510]
[103.77492523 137.43421936]
[95.54967499 135.97026062]
[88.15317535 132.79052734]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 66]
[3 65]
[4 64]
[5 63]
[6 62]
[7 61]
[10 56]
[11 55]
[12 54]
[13 53]
[14 52]
[15 51]
[17 49]
[18 48]
[22 46]
[23 45]
[24 44]
[25 43]
[26 42]
[27 41]
[28 40]
[29 39]
[68 127]
[69 126]
[70 125]
[71 123]
[72 122]
[73 121]
[76 119]
[77 118]
[78 117]
[79 116]
[80 115]
[81 113]
[82 101]
[83 100]
[84 99]
[85 98]
[86 97]
[87 96]
[102 112]
[103 111]
[104 110]
[105 109]
[132 150]
[133 149]
[134 148]
[135 147]
[136 146]
[137 145]
[151 166]
[152 165]
[153 164]
[154 163]
[155 162]
[156 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
