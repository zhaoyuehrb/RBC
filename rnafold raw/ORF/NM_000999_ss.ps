%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 16:03:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCCUCGGAAAAUUGAGGAAAUCAAGGACUUCCUGCUCACAGCCCGACGAAAGGAUGCCAAAUCUGUCAAGAUCAAGAAAAAUAAGGACAACGUGAAGUUUAAAGUUCGAUGCAGCAGAUACCUUUACACCCUGGUCAUCACUGACAAAGAGAAGGCAGAGAAACUGAAGCAGUCCCUGCCCCCCGGUUUGGCAGUGAAGGAACUGAAAUGA\
) } def
/len { sequence length } bind def

/coor [
[-18.88370323 470.44918823]
[-32.25827408 474.57427979]
[-46.19316101 475.81427002]
[-60.07342148 474.11715698]
[-65.04244995 488.27020264]
[-70.01148224 502.42324829]
[-74.98051453 516.57629395]
[-79.94953918 530.72930908]
[-72.88218689 544.86535645]
[-77.95970154 559.83184814]
[-92.16968536 566.74932861]
[-107.08161163 561.51385498]
[-113.84848785 547.23156738]
[-108.45565796 532.37579346]
[-94.10258484 525.76031494]
[-89.13356018 511.60726929]
[-84.16452789 497.45419312]
[-79.19549561 483.30114746]
[-74.22647095 469.14810181]
[-87.69191742 460.54229736]
[-98.72473907 448.96972656]
[-106.68645477 435.09426880]
[-111.11492920 419.71325684]
[-111.75119781 403.71163940]
[-108.55459595 388.01104736]
[-101.70533752 373.51678467]
[-91.59434509 361.06549072]
[-78.80098724 351.37698364]
[-64.05980682 345.01263428]
[-48.21842194 342.34271240]
[-32.18873215 343.52499390]
[-27.63732719 329.23217773]
[-23.08592224 314.93936157]
[-18.53451920 300.64654541]
[-13.98311424 286.35372925]
[-15.34043503 281.77691650]
[-13.83866596 276.29885864]
[-9.08261108 271.71160889]
[-4.11358166 257.55856323]
[0.85544801 243.40553284]
[5.82447767 229.25248718]
[1.17911160 223.36430359]
[-13.66486359 225.52217102]
[-8.11161995 211.58796692]
[-12.75698662 205.69979858]
[-27.67785454 207.23851013]
[-36.29725266 220.28611755]
[-51.30157852 224.69114685]
[-65.60624695 218.37367249]
[-72.45703125 204.31661987]
[-68.61920166 189.15730286]
[-55.90486526 180.05346680]
[-40.31734085 181.30369568]
[-29.21657944 192.31764221]
[-14.29571056 190.77891541]
[4.17552614 198.61764526]
[13.74570084 212.75967407]
[21.68618774 200.03376770]
[29.62667656 187.30786133]
[37.56716537 174.58195496]
[45.50765228 161.85604858]
[53.44813919 149.13014221]
[61.38862610 136.40425110]
[69.32911682 123.67833710]
[77.26959991 110.95243073]
[85.77502441 78.21030426]
[85.77502441 63.21030426]
[85.77502441 48.21030426]
[85.77502441 33.21030426]
[85.77502441 18.21030426]
[81.43154907 32.56768036]
[72.55526733 44.65948105]
[60.15922165 53.10566711]
[45.65817261 56.94227600]
[30.70712471 55.73144150]
[17.01243591 49.61135101]
[6.13708019 39.28049469]
[-0.67773849 25.91792488]
[-2.65424633 11.04871464]
[0.43313503 -3.63011622]
[8.23204327 -16.44327545]
[19.85239029 -25.92839622]
[33.96794891 -31.00294495]
[48.96770859 -31.08776474]
[63.13975143 -26.17317390]
[74.86662292 -16.82007408]
[82.81089020 -4.09359550]
[78.89317322 -18.57294083]
[74.97544861 -33.05228424]
[71.05772400 -47.53163147]
[66.71662140 -61.88972473]
[61.95589447 -76.11418915]
[57.19516373 -90.33866119]
[43.53635406 -98.75391388]
[41.74264526 -114.69637299]
[53.19001770 -125.93635559]
[69.09703064 -123.85150146]
[77.26117706 -110.04113770]
[71.41963196 -95.09938812]
[76.18035889 -80.87492371]
[80.94108582 -66.65045166]
[83.38432312 -65.28055573]
[85.43278503 -62.86141586]
[86.68451691 -59.53832626]
[86.79746246 -55.59913254]
[85.53706360 -51.44935608]
[89.45478821 -36.97000885]
[93.37251282 -22.49066544]
[97.29023743 -8.01132011]
[112.14459991 -5.92614651]
[119.89741516 -18.76724434]
[127.65023804 -31.60834312]
[135.40306091 -44.44944382]
[137.15882874 -53.41116333]
[143.36511230 -57.42095947]
[144.10617065 -73.22480011]
[157.40783691 -79.92667389]
[165.34832764 -92.65258026]
[173.28880310 -105.37848663]
[164.72973633 -117.97460175]
[162.04032898 -132.96415710]
[165.68652344 -147.75013733]
[175.03663635 -159.77076721]
[188.47065735 -166.94340515]
[203.66110229 -168.02534485]
[217.97610474 -162.82913208]
[228.93551636 -152.25505066]
[234.64054871 -138.13513184]
[234.10276794 -122.91570282]
[227.41535950 -109.23365784]
[215.73695374 -99.45947266]
[201.09089661 -95.28659821]
[186.01470947 -97.43799591]
[178.07423401 -84.71208954]
[170.13374329 -71.98618317]
[169.96063232 -57.09258652]
[156.09101868 -49.48046875]
[148.24415588 -36.69662476]
[140.49133301 -23.85552597]
[132.73851013 -11.01442719]
[124.98570251 1.82667160]
[118.47241974 11.71037006]
[109.67326355 17.20969772]
[100.77502441 18.21030426]
[100.77502441 33.21030426]
[100.77502441 48.21030426]
[100.77502441 63.21030426]
[100.77502441 78.21030426]
[103.39145660 63.44025803]
[114.50158691 53.36231613]
[129.45602417 52.19393921]
[141.99655151 60.42406464]
[146.87518311 74.60852814]
[142.05027771 88.81135559]
[129.54098511 97.08889771]
[114.58108521 95.97663879]
[129.11637878 99.68138885]
[143.65167236 103.38613129]
[158.18696594 107.09088135]
[172.72227478 110.79563141]
[188.00588989 106.70644379]
[198.42788696 117.34746552]
[212.96318054 121.05221558]
[219.41706848 119.63439178]
[224.80953979 121.41926575]
[227.86763000 125.08496094]
[242.28791809 129.21481323]
[256.70819092 133.34466553]
[273.59985352 131.89289856]
[279.67095947 147.72254944]
[266.14059448 157.93849182]
[252.57832336 147.76493835]
[238.15805054 143.63508606]
[223.73777771 139.50523376]
[209.25843811 135.58750916]
[194.72314453 131.88276672]
[180.47917175 136.23693848]
[169.01751709 125.33092499]
[154.48222351 121.62618256]
[139.94692993 117.92143250]
[125.41163635 114.21668243]
[110.87633514 110.51193237]
[120.73435974 121.81765747]
[117.22708893 136.40187073]
[103.30654907 141.98922729]
[90.68946838 133.87693787]
[89.99550629 118.89292145]
[82.05501556 131.61882019]
[74.11453247 144.34472656]
[66.17404175 157.07063293]
[58.23355484 169.79653931]
[50.29306793 182.52244568]
[42.35258102 195.24835205]
[34.41209412 207.97425842]
[26.47160530 220.70016479]
[19.97752380 234.22151184]
[15.00849533 248.37455750]
[10.03946590 262.52761841]
[5.07043648 276.68066406]
[0.30970633 290.90512085]
[-4.24169827 305.19793701]
[-8.79310226 319.49075317]
[-13.34450722 333.78356934]
[-17.89591217 348.07641602]
[-5.74440908 355.16067505]
[4.65471792 364.62252808]
[12.84451199 376.04257202]
[18.46584511 388.91555786]
[21.27316284 402.67254639]
[21.14521408 416.70614624]
[18.09028244 430.39733887]
[12.24570560 443.14270020]
[3.87170172 454.38113403]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 19]
[5 18]
[6 17]
[7 16]
[8 15]
[31 204]
[32 203]
[33 202]
[34 201]
[35 200]
[38 199]
[39 198]
[40 197]
[41 196]
[45 55]
[46 54]
[57 195]
[58 194]
[59 193]
[60 192]
[61 191]
[62 190]
[63 189]
[64 188]
[65 187]
[66 148]
[67 147]
[68 146]
[69 145]
[70 144]
[87 109]
[88 108]
[89 107]
[90 106]
[91 101]
[92 100]
[93 99]
[110 141]
[111 140]
[112 139]
[113 138]
[115 137]
[117 135]
[118 134]
[119 133]
[156 182]
[157 181]
[158 180]
[159 179]
[160 178]
[162 176]
[163 175]
[166 174]
[167 173]
[168 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
