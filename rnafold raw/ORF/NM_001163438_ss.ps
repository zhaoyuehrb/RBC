%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 00:12:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGAGGCCUUGGGCUCUGGGCACUAUGUGGGAGGCAGCAUCAGGUCCAUGGCGGCGGCGGCCCUGUCUGGCCUGGCGGUGCGGCUGUCGCGCCCGCAGGGGACCCGCGGCUCUUACGGCGCCUUCUGCAAGACGCUCACGCGCACGCUGCUCACCUUCUUCGACCUGGCCUGGCGGCUGCGCAAGAACUUCUUUUACUUCUAUAUUCUGGCCUCGGUGAUUCUCAACGUCCACCUGCAGGUAUAUAUUUAG\
) } def
/len { sequence length } bind def

/coor [
[107.29789734 190.49337769]
[122.07527161 193.06806946]
[135.62988281 199.49246216]
[146.97856140 209.30039978]
[140.83216858 195.61750793]
[134.68577576 181.93460083]
[128.53938293 168.25169373]
[122.39299774 154.56878662]
[116.24660492 140.88587952]
[81.22922516 128.40518188]
[75.90893555 100.59451294]
[61.54305267 96.27925110]
[47.17717361 91.96398163]
[32.81129456 87.64871979]
[18.44541550 83.33345795]
[4.05302048 79.10746765]
[-10.36533451 74.97091675]
[-24.78368950 70.83436584]
[-39.34609985 67.23767853]
[-54.03236008 64.18583679]
[-68.71862030 61.13399506]
[-83.40488434 58.08215714]
[-98.49061584 62.84989548]
[-109.37747955 52.68498993]
[-124.06374359 49.63314819]
[-130.40942383 51.32743835]
[-135.85070801 49.80907440]
[-139.07472229 46.31887054]
[-153.68067932 42.90327835]
[-168.28662109 39.48768997]
[-182.89257812 36.07209778]
[-197.49851990 32.65650940]
[-212.10447693 29.24091721]
[-226.71041870 25.82532501]
[-241.90989685 30.21698380]
[-252.54098511 19.78486633]
[-261.58200073 20.87747955]
[-267.30654907 16.23512077]
[-281.86895752 12.63842964]
[-289.18209839 18.51396751]
[-298.24075317 20.35453033]
[-307.00274658 17.87355232]
[-313.55114746 11.74455643]
[-316.51358032 3.42432284]
[-330.93194580 -0.71222687]
[-345.35028076 -4.84877634]
[-359.76864624 -8.98532581]
[-374.18701172 -13.12187576]
[-386.40789795 -3.74339056]
[-401.62988281 -3.36368608]
[-414.01022339 -11.91886234]
[-418.92022705 -25.95560074]
[-433.33859253 -30.09214973]
[-447.75692749 -34.22869873]
[-462.24981689 -38.09598923]
[-476.81225586 -41.69268036]
[-491.37466431 -45.28937149]
[-505.93707275 -48.88606262]
[-520.49945068 -52.48274994]
[-535.06188965 -56.07944107]
[-549.62432861 -59.67613220]
[-564.18670654 -63.27282333]
[-578.74914551 -66.86951447]
[-593.37597656 -70.19435120]
[-608.06225586 -73.24619293]
[-622.74853516 -76.29803467]
[-637.43475342 -79.34987640]
[-652.12103271 -82.40171814]
[-665.19720459 -73.52533722]
[-680.70404053 -76.57704163]
[-689.44165039 -89.74629974]
[-686.22619629 -105.22002411]
[-672.96527100 -113.81793213]
[-657.52642822 -110.43904114]
[-649.06921387 -97.08797455]
[-634.38293457 -94.03614044]
[-619.69665527 -90.98429871]
[-605.01043701 -87.93245697]
[-590.32415771 -84.88061523]
[-587.20855713 -86.47657013]
[-583.17095947 -86.65845490]
[-578.87731934 -85.01179504]
[-575.15240479 -81.43192291]
[-560.59002686 -77.83523560]
[-546.02758789 -74.23854065]
[-531.46520996 -70.64185333]
[-516.90277100 -67.04516602]
[-502.34036255 -63.44847107]
[-487.77795410 -59.85178375]
[-473.21554565 -56.25509262]
[-458.65313721 -52.65840149]
[-455.48025513 -54.13721085]
[-451.43872070 -54.16859818]
[-447.20935059 -52.36316681]
[-443.62039185 -48.64705658]
[-429.20202637 -44.51050568]
[-414.78366089 -40.37395477]
[-403.17886353 -49.67268753]
[-388.14599609 -50.36315536]
[-375.44052124 -41.97121048]
[-370.05044556 -27.54023170]
[-355.63211060 -23.40368080]
[-341.21374512 -19.26713181]
[-326.79537964 -15.13058186]
[-312.37704468 -10.99403191]
[-292.83285522 -17.66995430]
[-278.27227783 -1.92398107]
[-263.70986938 1.67270911]
[-249.12539673 5.17891741]
[-234.97064209 0.54295343]
[-223.29483032 11.21937656]
[-208.68888855 14.63496780]
[-194.08293152 18.05055809]
[-179.47698975 21.46615028]
[-164.87103271 24.88174057]
[-150.26509094 28.29733086]
[-135.65913391 31.71292305]
[-121.01190186 34.94688797]
[-106.32564545 37.99872589]
[-92.29037476 33.01269913]
[-80.35304260 43.39589691]
[-65.66678619 46.44773483]
[-50.98052216 49.49957657]
[-36.29426193 52.55141449]
[-43.75036240 39.53578949]
[-39.93046951 25.03032494]
[-27.03090096 17.37519073]
[-12.46847725 20.97183228]
[-4.61611319 33.75230026]
[-7.98865795 48.36824799]
[-20.64714050 56.41601181]
[-6.22878504 60.55256271]
[8.18957043 64.68910980]
[15.46592808 63.51591492]
[22.76067924 68.96757507]
[37.12656021 73.28283691]
[51.49243927 77.59810638]
[65.85831451 81.91336823]
[80.22419739 86.22863007]
[96.91610718 66.09297943]
[130.97567749 68.75714874]
[142.55233765 59.21877289]
[154.12901306 49.68039703]
[165.70568848 40.14201736]
[177.28236389 30.60363770]
[181.89906311 22.75379944]
[189.06251526 21.01977348]
[200.75672913 11.62587833]
[212.45094299 2.23198342]
[224.14517212 -7.16191149]
[235.83938599 -16.55580711]
[247.53359985 -25.94970131]
[249.12051392 -43.38391113]
[262.56903076 -54.05545807]
[279.23782349 -51.73200607]
[290.81448364 -61.27038193]
[287.62377930 -76.23961639]
[291.76623535 -90.97387695]
[302.29000854 -102.08734894]
[316.77676392 -107.02622223]
[331.89755249 -104.65559387]
[344.17776489 -95.52021790]
[350.79547119 -81.71932220]
[350.22998047 -66.42426300]
[342.61120605 -53.14973450]
[329.68994141 -44.94611740]
[314.43536377 -43.69855118]
[300.35287476 -49.69371033]
[288.77621460 -40.15533447]
[289.34777832 -27.29847336]
[282.31188965 -16.29102707]
[270.04348755 -11.26387215]
[256.92749023 -14.25548363]
[245.23327637 -4.86158848]
[233.53906250 4.53230667]
[221.84484863 13.92620182]
[210.15061951 23.32009697]
[198.45640564 32.71399307]
[186.82073975 42.18030930]
[175.24406433 51.71868896]
[163.66738892 61.25706863]
[152.09072876 70.79544830]
[140.51405334 80.33382416]
[145.71235657 94.40427399]
[160.70976257 94.12490082]
[175.70715332 93.84552765]
[190.70455933 93.56615448]
[206.42832947 87.22586060]
[216.87361145 100.57997131]
[206.93292236 114.31383514]
[190.98393250 108.56355286]
[175.98652649 108.84292603]
[160.98913574 109.12229919]
[145.99172974 109.40167236]
[141.97618103 115.73612976]
[155.27157593 122.68109131]
[168.56697083 129.62605286]
[181.86236572 136.57101440]
[195.15776062 143.51597595]
[210.05990601 145.22650146]
[219.11270142 157.18672180]
[216.71263123 171.99345398]
[204.34527588 180.48159790]
[189.66583252 177.39714050]
[181.76066589 164.64959717]
[169.80676270 155.58845520]
[157.85285950 146.52731323]
[145.89897156 137.46618652]
[133.94506836 128.40504456]
[129.92950439 134.73948669]
[136.07589722 148.42239380]
[142.22229004 162.10530090]
[148.36868286 175.78820801]
[154.51507568 189.47111511]
[160.66146851 203.15400696]
[168.53465271 215.92167664]
[178.00097656 227.55734253]
[187.46728516 239.19300842]
[196.93360901 250.82867432]
[211.76815796 247.23719788]
[226.69010925 250.44627380]
[238.73669434 259.81869507]
[245.51605225 273.49362183]
[245.68214417 288.75582886]
[239.20198059 302.57501221]
[227.36219788 312.20739746]
[212.51362610 315.74041748]
[197.60441589 312.47262573]
[185.59483337 303.05282593]
[178.86938477 289.35131836]
[178.76339722 274.08856201]
[185.29794312 260.29498291]
[175.83161926 248.65933228]
[166.36529541 237.02365112]
[156.89898682 225.38798523]
[160.56709290 239.93257141]
[160.22128296 254.92858887]
[155.88664246 269.28863525]
[147.87747192 281.97140503]
[136.77453613 292.05728149]
[123.38294220 298.81491089]
[108.67374420 301.75421143]
[93.71355438 300.66213989]
[79.58716583 295.61779785]
[67.31892395 286.98703003]
[57.79842377 275.39566040]
[51.71603012 261.68417358]
[49.51278305 246.84687805]
[51.34845352 231.95962524]
[57.08993149 218.10194397]
[66.32088470 206.27868652]
[78.37194824 197.34718323]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 215]
[5 214]
[6 213]
[7 212]
[8 211]
[9 210]
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 133]
[17 132]
[18 131]
[19 124]
[20 123]
[21 122]
[22 121]
[24 119]
[25 118]
[28 117]
[29 116]
[30 115]
[31 114]
[32 113]
[33 112]
[34 111]
[36 109]
[38 108]
[39 107]
[44 105]
[45 104]
[46 103]
[47 102]
[48 101]
[52 97]
[53 96]
[54 95]
[55 91]
[56 90]
[57 89]
[58 88]
[59 87]
[60 86]
[61 85]
[62 84]
[63 83]
[64 79]
[65 78]
[66 77]
[67 76]
[68 75]
[141 183]
[142 182]
[143 181]
[144 180]
[145 179]
[147 178]
[148 177]
[149 176]
[150 175]
[151 174]
[152 173]
[155 169]
[156 168]
[184 194]
[185 193]
[186 192]
[187 191]
[216 235]
[217 234]
[218 233]
[219 232]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
