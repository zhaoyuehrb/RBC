%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Sep  9 23:59:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAGCUACUACAGAAGCUAUUAUGGAGGCCUGGGCUAUGGCUAUGGAGGCUUUGGUGGCUGGGGCUAUGGCUAUGGCUGCGGCUAUGGCAGCUUCCGCAGGUUGGGCUAUGGCUGUGGCUACGGAGGCUAUGGAUUCAGCUGUUGCCGACCAUUAUACUACGGAGGAUAUGGAUUCUCUGCCUUCUACUGA\
) } def
/len { sequence length } bind def

/coor [
[103.78437042 176.20062256]
[101.90512085 161.31880188]
[100.02587128 146.43699646]
[92.62501526 147.65243530]
[87.13948822 161.61341858]
[81.65396118 175.57440186]
[76.16843414 189.53538513]
[84.63018799 202.54223633]
[83.79704285 218.03692627]
[73.98934174 230.06143188]
[58.97835922 233.99208069]
[44.53611755 228.31745911]
[36.21595764 215.21957397]
[37.21714783 199.73483276]
[47.15471268 187.81742859]
[62.20745468 184.04985046]
[67.69297791 170.08886719]
[73.17850494 156.12788391]
[78.66403198 142.16690063]
[61.62097549 123.45950317]
[57.29588318 99.78408051]
[65.72055054 78.56726074]
[83.12020874 65.78546906]
[79.25758362 51.29132462]
[75.39495087 36.79718399]
[71.53232574 22.30304527]
[58.23070908 9.57942772]
[63.43494797 -7.17337561]
[59.33691025 -21.60272408]
[55.23887253 -36.03207016]
[40.82233429 -41.46066666]
[32.46434402 -54.18848801]
[33.19495010 -69.21945953]
[42.52463531 -80.79940033]
[38.42659760 -95.22875214]
[34.32855988 -109.65809631]
[30.23052216 -124.08744812]
[15.42436790 -127.92477417]
[4.59837246 -138.58753967]
[0.58972085 -153.14079285]
[4.37844849 -167.64945984]
[14.85014915 -178.24234009]
[10.75211239 -192.67169189]
[6.65407515 -207.10102844]
[2.55603790 -221.53038025]
[-1.21369207 -225.18460083]
[-3.01434112 -229.49064636]
[-2.92863798 -233.58537292]
[-1.37133729 -236.76470947]
[-4.76014042 -251.37690735]
[-8.14894295 -265.98907471]
[-11.53774643 -280.60128784]
[-14.92654896 -295.21347046]
[-18.31535149 -309.82565308]
[-28.97034836 -321.52102661]
[-24.30843735 -335.66723633]
[-27.69724083 -350.27944946]
[-31.08604240 -364.89163208]
[-34.47484589 -379.50381470]
[-37.86364746 -394.11599731]
[-41.25245285 -408.72817993]
[-44.64125443 -423.34036255]
[-55.29624939 -435.03573608]
[-50.63433838 -449.18197632]
[-54.02314377 -463.79415894]
[-57.41194534 -478.40634155]
[-60.80075073 -493.01852417]
[-64.18955231 -507.63070679]
[-67.57835388 -522.24291992]
[-70.96715546 -536.85510254]
[-74.35595703 -551.46728516]
[-77.74476624 -566.07946777]
[-81.13356781 -580.69165039]
[-95.73475647 -585.24713135]
[-106.02735901 -596.42565918]
[-109.32083130 -611.15722656]
[-104.82839966 -625.46368408]
[-93.85210419 -635.53277588]
[-97.24091339 -650.14495850]
[-100.62971497 -664.75714111]
[-104.01851654 -679.36932373]
[-107.40731812 -693.98150635]
[-110.79611969 -708.59368896]
[-121.93202972 -712.80780029]
[-129.56742859 -721.78692627]
[-131.88931274 -733.22021484]
[-128.43309021 -744.23748779]
[-120.16999817 -752.13000488]
[-131.37144470 -764.10748291]
[-126.34117126 -779.71606445]
[-110.25388336 -782.89898682]
[-99.65880585 -770.38195801]
[-105.45524597 -755.04138184]
[-89.66330719 -745.80401611]
[-85.55290985 -727.64929199]
[-96.18393707 -711.98248291]
[-92.79512787 -697.37030029]
[-89.40632629 -682.75811768]
[-86.01752472 -668.14593506]
[-82.62872314 -653.53375244]
[-79.23992157 -638.92156982]
[-64.95208740 -634.71160889]
[-54.62114716 -623.84295654]
[-51.09419632 -609.16552734]
[-55.41581345 -594.59777832]
[-66.52137756 -584.08044434]
[-63.13257599 -569.46826172]
[-59.74377441 -554.85607910]
[-56.35496902 -540.24389648]
[-52.96616745 -525.63171387]
[-49.57736588 -511.01953125]
[-46.18856049 -496.40734863]
[-42.79975891 -481.79513550]
[-39.41095734 -467.18295288]
[-36.02215195 -452.57077026]
[-25.60954666 -441.92056274]
[-30.02906799 -426.72918701]
[-26.64026451 -412.11697388]
[-23.25146103 -397.50479126]
[-19.86265945 -382.89260864]
[-16.47385597 -368.28042603]
[-13.08505344 -353.66824341]
[-9.69624996 -339.05606079]
[0.71635640 -328.40585327]
[-3.70316458 -313.21444702]
[-0.31436175 -298.60226440]
[3.07444119 -283.99008179]
[6.46324396 -269.37789917]
[9.85204697 -254.76570129]
[13.24084949 -240.15351868]
[16.98538589 -225.62841797]
[21.08342361 -211.19906616]
[25.18146133 -196.76972961]
[29.27949715 -182.34037781]
[43.75579834 -178.83290100]
[54.60496140 -168.48150635]
[58.84416580 -153.99372864]
[55.23880768 -139.23236084]
[44.65987015 -128.18548584]
[48.75790787 -113.75613403]
[52.85594559 -99.32678986]
[56.95398331 -84.89743805]
[70.97756195 -79.94998932]
[79.49964905 -67.54684448]
[79.07929993 -52.32591629]
[69.66822052 -40.13010788]
[73.76625824 -25.70075989]
[77.86429596 -11.27141285]
[88.27985382 -5.10109758]
[91.80612946 6.89856911]
[86.02646637 18.44041634]
[89.88909149 32.93455887]
[93.75172424 47.42869949]
[97.61434937 61.92283630]
[109.28978729 61.82400513]
[120.78473663 65.32381439]
[130.98675537 72.29457092]
[138.84771729 82.26462555]
[143.48976135 94.44678497]
[144.29977417 107.79923248]
[141.00209045 121.11438751]
[133.70166016 133.12808228]
[143.36424255 144.60128784]
[153.02680969 156.07450867]
[162.68939209 167.54771423]
[172.35197449 179.02091980]
[182.01455688 190.49412537]
[191.67713928 201.96734619]
[201.33972168 213.44055176]
[216.93574524 218.50968933]
[220.07862854 234.60484314]
[207.53523254 245.16871643]
[192.20913696 239.33409119]
[189.86651611 223.10313416]
[180.20393372 211.62992859]
[170.54135132 200.15670776]
[160.87876892 188.68350220]
[151.21618652 177.21029663]
[141.55360413 165.73709106]
[131.89102173 154.26387024]
[122.22844696 142.79066467]
[114.82759094 144.00610352]
[117.80674744 158.70729065]
[120.78591156 173.40846252]
[123.76507568 188.10963440]
[126.74423981 202.81082153]
[129.72340393 217.51199341]
[134.39692688 231.76535034]
[123.29715729 241.85470581]
[109.55318451 235.84611511]
[109.42211151 220.84606934]
[107.54286957 205.96424866]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 19]
[5 18]
[6 17]
[7 16]
[23 154]
[24 153]
[25 152]
[26 151]
[28 148]
[29 147]
[30 146]
[34 142]
[35 141]
[36 140]
[37 139]
[42 134]
[43 133]
[44 132]
[45 131]
[49 130]
[50 129]
[51 128]
[52 127]
[53 126]
[54 125]
[56 123]
[57 122]
[58 121]
[59 120]
[60 119]
[61 118]
[62 117]
[64 115]
[65 114]
[66 113]
[67 112]
[68 111]
[69 110]
[70 109]
[71 108]
[72 107]
[73 106]
[78 101]
[79 100]
[80 99]
[81 98]
[82 97]
[83 96]
[88 93]
[162 181]
[163 180]
[164 179]
[165 178]
[166 177]
[167 176]
[168 175]
[169 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
