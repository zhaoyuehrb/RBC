%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sat Sep 12 09:44:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAGCUACUAUGGCAACUACUACGGAGGACUGGGCUAUGGCUAUGACUGUAAAUAUAGUUAUACCUCUGGCUUUGGUGCCUUUAGAAUCCUGGACUGUGGCUACAGAUGUGGCUGUGGUGGGGUAUGGAUUUGA\
) } def
/len { sequence length } bind def

/coor [
[125.55358124 155.10809326]
[110.57370758 155.88476562]
[98.25281525 147.32931519]
[93.74701691 133.02204895]
[98.94270325 118.94935608]
[92.25662994 132.37680054]
[85.57054901 145.80424500]
[78.88447571 159.23170471]
[77.23683167 176.10539246]
[60.56645203 179.19323730]
[52.98445892 164.02914429]
[65.45703125 152.54562378]
[72.14310455 139.11817932]
[78.82917786 125.69072723]
[85.51525116 112.26327515]
[76.95354462 124.57981110]
[63.24594879 130.67094421]
[48.36680603 128.77062988]
[36.63013077 119.42983246]
[31.43881226 105.35680389]
[34.29800415 90.63182068]
[44.37872314 79.52420807]
[58.75819778 75.25446320]
[73.26728821 79.06053925]
[83.69811249 89.83677673]
[74.93749237 77.66091919]
[66.17687225 65.48505402]
[57.41625214 53.30920029]
[48.65563202 41.13333893]
[39.75497055 29.05947685]
[30.71545029 17.08921814]
[21.67593193 5.11895943]
[12.63641167 -6.85129881]
[3.59689212 -18.82155800]
[-5.58027744 -30.68661308]
[-14.89387321 -42.44488525]
[-24.20746803 -54.20315552]
[-33.52106476 -65.96142578]
[-50.76708603 -72.29590607]
[-52.74295807 -89.69472504]
[-62.32566071 -101.23474121]
[-70.29019165 -105.89221191]
[-71.99269867 -113.15376282]
[-81.30629730 -124.91203308]
[-90.61988831 -136.67030334]
[-99.93348694 -148.42857361]
[-109.24708557 -160.18684387]
[-118.56067657 -171.94511414]
[-127.87427521 -183.70338440]
[-137.18786621 -195.46165466]
[-146.50146484 -207.21992493]
[-161.93818665 -212.75523376]
[-164.59619141 -228.93754578]
[-151.74114990 -239.11987305]
[-136.59722900 -232.82752991]
[-134.74319458 -216.53352356]
[-125.42959595 -204.77525330]
[-116.11600494 -193.01698303]
[-106.80240631 -181.25871277]
[-97.48880768 -169.50044250]
[-88.17521667 -157.74217224]
[-78.86161804 -145.98390198]
[-69.54802704 -134.22563171]
[-60.23442841 -122.46735382]
[-50.78564835 -110.81743622]
[-41.20294571 -99.27742767]
[-29.13710213 -97.82710266]
[-21.06322289 -88.21287537]
[-21.76279259 -75.27502441]
[-12.44919777 -63.51675034]
[-3.13560224 -51.75848007]
[6.17799330 -40.00020981]
[12.85686874 -36.68038559]
[15.56715012 -27.86107635]
[24.60667038 -15.89081860]
[33.64619064 -3.92056012]
[42.68571091 8.04969788]
[51.72522736 20.01995659]
[58.32564163 23.49316406]
[60.83149338 32.37271881]
[69.59210968 44.54858017]
[78.35272980 56.72443771]
[87.11334991 68.90029907]
[95.87397003 81.07615662]
[112.71607971 81.71787262]
[124.92215729 96.47112274]
[139.03067017 101.56523132]
[153.13917542 106.65933990]
[167.24769592 111.75344849]
[181.35620117 116.84755707]
[195.46470642 121.94166565]
[206.96832275 114.83325195]
[220.26985168 115.66516876]
[230.49417114 123.90668488]
[234.02449036 136.35293579]
[248.01156616 141.77156067]
[261.99865723 147.19018555]
[271.22299194 147.38348389]
[276.24383545 152.89888000]
[291.95446777 151.03164673]
[300.75201416 163.05049133]
[314.61019897 168.79074097]
[328.46838379 174.53099060]
[342.32659912 180.27125549]
[356.18478394 186.01150513]
[370.04296875 191.75175476]
[383.90115356 197.49200439]
[398.40466309 191.21316528]
[413.06906128 197.10649109]
[419.19421387 211.67558289]
[413.14617920 226.27684021]
[398.51315308 232.24760437]
[383.97662354 226.04553223]
[378.16091919 211.35018921]
[364.30273438 205.60993958]
[350.44451904 199.86968994]
[336.58633423 194.12944031]
[322.72814941 188.38919067]
[308.86993408 182.64894104]
[295.01174927 176.90869141]
[280.29235840 179.18650818]
[270.50360107 166.75708008]
[256.58001709 161.17726135]
[242.59294128 155.75863647]
[228.60586548 150.34001160]
[213.57353210 157.79022217]
[197.47257996 151.99000549]
[190.37060547 136.05017090]
[176.26210022 130.95606995]
[162.15357971 125.86196136]
[148.04507446 120.76785278]
[133.93656921 115.67374420]
[119.82805634 110.57963562]
[133.30334473 117.16876984]
[139.92564392 130.62779236]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 15]
[6 14]
[7 13]
[8 12]
[25 84]
[26 83]
[27 82]
[28 81]
[29 80]
[30 78]
[31 77]
[32 76]
[33 75]
[34 74]
[35 72]
[36 71]
[37 70]
[38 69]
[40 66]
[41 65]
[43 64]
[44 63]
[45 62]
[46 61]
[47 60]
[48 59]
[49 58]
[50 57]
[51 56]
[86 133]
[87 132]
[88 131]
[89 130]
[90 129]
[91 128]
[95 125]
[96 124]
[97 123]
[99 122]
[101 120]
[102 119]
[103 118]
[104 117]
[105 116]
[106 115]
[107 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
