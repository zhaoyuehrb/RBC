%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 00:06:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUGCCUGUAUUGCUGGGACAUCGAGCCUUCCCAAGUCAACCCUGAAGGACCAAGACAACAUCAUCCUUCAGAGGUCACUGAGCGGCAGCUUGCAAAUAAACGUAUUCAGAAUAUGCAACACCUAAAGAAAGAGAAGAGGAGACUGAAUAAAAGGUUUUCAAGGCCUUCUCCUAUUCCAGAACCAGGACUCCUAUGGUCAUCUUGA\
) } def
/len { sequence length } bind def

/coor [
[117.33525848 364.89477539]
[127.89254761 354.09106445]
[141.06663513 346.70053101]
[137.69726562 332.08383179]
[133.13049316 326.27069092]
[134.38917542 317.22097778]
[131.24095154 302.55508423]
[128.09274292 287.88916016]
[124.94451904 273.22326660]
[113.23580170 270.00686646]
[103.95135498 262.06982422]
[98.89360046 250.87226868]
[99.07864380 238.51463318]
[104.53272247 227.34378052]
[114.27562714 219.50729370]
[111.57180023 204.75299072]
[108.86797333 189.99868774]
[106.16415405 175.24440002]
[103.46032715 160.49009705]
[100.75650024 145.73579407]
[82.52560425 142.27268982]
[67.17066956 131.85232544]
[57.21880722 116.18965912]
[54.30791855 97.86248779]
[39.64201355 94.71427155]
[24.97611046 91.56605530]
[10.31020641 88.41783905]
[-4.35569715 85.26962280]
[-14.75076008 93.83671570]
[-27.98882103 94.83727264]
[-39.21925354 88.12940216]
[-44.45615768 76.35487366]
[-59.07283783 72.98551941]
[-73.71455383 69.72663879]
[-91.10157776 75.78739929]
[-103.65144348 63.52229691]
[-118.36322784 60.59594345]
[-133.07499695 57.66958618]
[-144.21485901 64.17389679]
[-156.40927124 61.43207169]
[-163.23936462 51.44648743]
[-177.90527344 48.29826736]
[-192.57118225 45.15005112]
[-207.26043701 42.11267853]
[-221.97221375 39.18632507]
[-236.68399048 36.25997162]
[-251.39576721 33.33361435]
[-266.10754395 30.40726089]
[-280.81933594 27.48090553]
[-295.53109741 24.55455208]
[-310.24288940 21.62819672]
[-318.65896606 34.28672028]
[-331.28137207 42.75683212]
[-346.18533325 45.74689865]
[-361.09808350 42.80095673]
[-373.74551392 34.36824417]
[-382.19903564 21.73468399]
[-385.16949463 6.82680655]
[-382.20391846 -8.08204746]
[-373.75457764 -20.71838570]
[-361.10992432 -29.15525818]
[-346.19815063 -32.10610199]
[-331.29321289 -29.12093735]
[-318.66799927 -20.65497971]
[-310.24777222 -7.99922371]
[-307.31652832 6.91641712]
[-292.60476685 9.84277248]
[-277.89297485 12.76912689]
[-263.18118286 15.69548225]
[-248.46942139 18.62183762]
[-233.75764465 21.54819107]
[-219.04585266 24.47454643]
[-204.33407593 27.40090179]
[-197.15882874 25.62224770]
[-189.42295837 30.48414803]
[-174.75704956 33.63236618]
[-160.09115601 36.78058243]
[-143.70619202 30.49847984]
[-130.14865112 42.95780945]
[-115.43686676 45.88416290]
[-100.72509003 48.81051636]
[-90.49488831 42.35257339]
[-78.21309662 44.67182159]
[-70.56632996 55.06072998]
[-63.36503220 53.39065170]
[-55.70347977 58.36883545]
[-41.08679581 61.73819351]
[-27.22277260 52.22020721]
[-10.43375683 55.74249268]
[-1.20748043 70.60371399]
[13.45842361 73.75193024]
[28.12432671 76.90014648]
[42.79022980 80.04836273]
[57.45613480 83.19657898]
[60.08919525 76.01734924]
[63.94410324 69.25814056]
[68.95225525 63.12830353]
[75.00901031 57.82565689]
[81.97566986 53.53028488]
[89.68257904 50.39866257]
[97.93315125 48.55831909]
[106.50890350 48.10323715]
[115.17522430 49.09008408]
[117.87905121 34.33578491]
[120.58287811 19.58148575]
[123.28669739 4.82718754]
[125.99052429 -9.92711067]
[128.69435120 -24.68140984]
[125.60213470 -41.35097885]
[140.76423645 -48.93694687]
[152.25103760 -36.46738815]
[143.44865417 -21.97758484]
[140.74482727 -7.22328568]
[138.04100037 7.53101301]
[135.33717346 22.28531265]
[132.63334656 37.03961182]
[129.92951965 51.79390717]
[135.02883911 57.29363251]
[144.47526550 45.64179993]
[153.92167664 33.98996735]
[163.36808777 22.33813667]
[172.81451416 10.68630314]
[180.28388977 -2.32171273]
[194.61184692 -6.76126575]
[208.12759399 -0.25554198]
[213.59518433 13.71247482]
[208.08741760 27.66469574]
[194.55279541 34.13150024]
[182.22146606 42.67189407]
[169.89013672 51.21229172]
[157.55880737 59.75268555]
[145.22747803 68.29307556]
[150.32679749 73.79280090]
[165.24304199 72.20985413]
[180.15928650 70.62690735]
[195.07551575 69.04396057]
[209.99176025 67.46101379]
[224.90800476 65.87806702]
[242.00531006 51.39460754]
[261.43515015 60.92789459]
[276.22860718 58.44721603]
[291.02206421 55.96653748]
[305.81552124 53.48585510]
[320.60897827 51.00517654]
[335.40240479 48.52449799]
[350.19586182 46.04381943]
[356.99411011 32.09520721]
[370.70855713 24.83617973]
[386.06573486 27.05797958]
[397.16052246 37.90628052]
[399.72671509 53.20968628]
[392.77755737 67.08373260]
[378.98516846 74.19355774]
[363.65298462 71.80529022]
[352.67654419 60.83726883]
[337.88308716 63.31795120]
[323.08966064 65.79862976]
[308.29620361 68.27931213]
[293.50274658 70.75998688]
[278.70928955 73.24066925]
[263.91583252 75.72134399]
[260.81323242 82.96835327]
[255.02996826 88.46279144]
[247.45738220 91.25543213]
[239.30386353 90.82152557]
[231.90203857 87.15764618]
[226.49095154 80.79430389]
[211.57470703 82.37725830]
[196.65846252 83.96020508]
[181.74223328 85.54315186]
[166.82598877 87.12609863]
[151.90974426 88.70904541]
[150.73571777 107.43870544]
[143.25430298 123.93041229]
[130.86387634 136.22131348]
[115.51079559 143.03196716]
[118.21462250 157.78627014]
[120.91844940 172.54057312]
[123.62227631 187.29486084]
[126.32610321 202.04916382]
[129.02992249 216.80346680]
[145.60469055 224.14952087]
[154.37648010 239.83604431]
[151.99879456 257.49194336]
[139.61042786 270.07504272]
[142.75863647 284.74096680]
[145.90686035 299.40686035]
[149.05506897 314.07275391]
[152.31394958 328.71447754]
[155.68331909 343.33114624]
[170.76332092 344.20874023]
[184.98477173 349.30056763]
[197.19480896 358.19393921]
[206.40359497 370.16784668]
[211.86465454 384.25167847]
[213.13523865 399.30364990]
[210.11238098 414.10360718]
[203.04112244 427.45178223]
[192.49468994 438.26611328]
[179.32803345 445.66989136]
[164.60853577 449.06295776]
[149.52941895 448.17022705]
[135.31309509 443.06411743]
[123.11199951 434.15847778]
[113.91523743 422.17532349]
[108.46833801 408.08602905]
[107.21286774 393.03277588]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 190]
[4 189]
[6 188]
[7 187]
[8 186]
[9 185]
[15 181]
[16 180]
[17 179]
[18 178]
[19 177]
[20 176]
[24 94]
[25 93]
[26 92]
[27 91]
[28 90]
[32 87]
[33 86]
[34 84]
[36 81]
[37 80]
[38 79]
[41 77]
[42 76]
[43 75]
[44 73]
[45 72]
[46 71]
[47 70]
[48 69]
[49 68]
[50 67]
[51 66]
[103 117]
[104 116]
[105 115]
[106 114]
[107 113]
[108 112]
[133 172]
[134 171]
[135 170]
[136 169]
[137 168]
[138 167]
[140 161]
[141 160]
[142 159]
[143 158]
[144 157]
[145 156]
[146 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
