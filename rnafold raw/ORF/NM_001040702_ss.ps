%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 19:44:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCAGAGACUUGUGCUGCUAUUAGCCAUUUCUCUUCUACUCUAUCAAGAUCUUCCAGUGAGAAGCGAAUUUGAAUUGGACAGAAUAUGUGGUUAUGGGACUGCCCGUUGCCGGAAGAAAUGUCGCAGCCAAGAAUACAGAAUUGGAAGAUGUCCCAACACCUAUGCAUGCUGUUUGAGAAAAUGGGAUGAGAGCUUACUGAAUCGUACAAAACCCUGA\
) } def
/len { sequence length } bind def

/coor [
[94.28973389 245.20373535]
[87.95027161 231.60920715]
[84.34050751 217.05001831]
[83.59490204 202.06857300]
[85.74226379 187.21876526]
[77.63265228 199.83757019]
[69.52304077 212.45637512]
[61.41342926 225.07518005]
[53.30381393 237.69398499]
[56.44987488 252.94979858]
[48.04581451 265.63153076]
[33.48233414 268.53680420]
[25.37272263 281.15560913]
[23.36793900 290.06036377]
[17.05613136 293.89556885]
[8.76715565 306.39727783]
[0.47818071 318.89898682]
[-7.81079483 331.40069580]
[-8.28432274 347.79299927]
[-22.84374428 355.33987427]
[-36.51157761 346.27774048]
[-35.22752380 329.92895508]
[-20.31250954 323.11172485]
[-12.02353477 310.61001587]
[-3.73455930 298.10830688]
[4.55441618 285.60656738]
[12.75391865 273.04598999]
[20.86353111 260.42718506]
[17.45636940 245.97290039]
[25.50090981 233.06011963]
[40.68501282 229.58436584]
[48.79462433 216.96557617]
[56.90423584 204.34677124]
[65.01384735 191.72796631]
[73.12345886 179.10916138]
[72.41423798 176.01890564]
[72.62836456 172.60244751]
[73.88047028 169.14466858]
[76.19620514 165.96539307]
[79.50276184 163.39167786]
[82.48162079 148.69044495]
[85.46047974 133.98919678]
[88.43933868 119.28796387]
[81.42840576 113.88002014]
[76.87570953 105.97372437]
[75.64615631 96.66201782]
[78.12783813 87.32447815]
[84.14352417 79.42292786]
[92.94819641 74.27309418]
[103.31737518 72.82778168]
[99.29733276 58.37650681]
[95.27729034 43.92523575]
[91.25724792 29.47396469]
[87.23720551 15.02269173]
[83.21717072 0.57141984]
[79.19712830 -13.87985229]
[75.17708588 -28.33112526]
[71.15704346 -42.78239822]
[67.13700104 -57.23366928]
[53.38012695 -57.31798172]
[40.12716293 -60.96036148]
[28.28147507 -67.90567017]
[18.64873886 -77.67388153]
[11.88211918 -89.59323120]
[8.43800354 -102.84639740]
[8.54521561 -116.52660370]
[12.18982506 -129.69958496]
[19.11655235 -141.46745300]
[28.84663582 -151.02986145]
[40.71091843 -157.73844910]
[37.10518646 -172.29862976]
[33.49945831 -186.85879517]
[29.89372635 -201.41897583]
[19.27471924 -208.73246765]
[16.56862259 -220.92895508]
[22.69309807 -231.35568237]
[19.29564667 -245.96585083]
[15.89819622 -260.57601929]
[12.39651585 -275.16159058]
[8.79078484 -289.72177124]
[5.18505383 -304.28192139]
[1.57932281 -318.84210205]
[-13.30548573 -322.03646851]
[-25.27851868 -331.33880615]
[-31.99785995 -344.86175537]
[-32.17873383 -359.89932251]
[-25.83882332 -373.46823120]
[-14.28414059 -382.89981079]
[-25.11188507 -394.43542480]
[-20.66086197 -408.64941406]
[-24.26659393 -423.20959473]
[-27.87232399 -437.76977539]
[-31.47805405 -452.32995605]
[-42.30579758 -463.86557007]
[-37.85477829 -478.07955933]
[-41.46050644 -492.63973999]
[-45.06623840 -507.19992065]
[-48.67197037 -521.76007080]
[-52.27769852 -536.32025146]
[-64.03440094 -547.75317383]
[-59.74977493 -563.58270264]
[-43.83147812 -567.52478027]
[-32.65488815 -555.52410889]
[-37.71752548 -539.92596436]
[-34.11179352 -525.36584473]
[-30.50606346 -510.80563354]
[-26.90033150 -496.24545288]
[-23.29460144 -481.68530273]
[-12.72476387 -471.19110107]
[-16.91787910 -455.93566895]
[-13.31214905 -441.37548828]
[-9.70641804 -426.81533813]
[-6.10068703 -412.25515747]
[4.46915102 -401.76098633]
[0.27603474 -386.50552368]
[14.89678860 -383.55612183]
[26.83617592 -374.51397705]
[33.69374466 -361.12985229]
[34.06166458 -346.03399658]
[27.81341553 -332.21926880]
[16.13949776 -322.44784546]
[19.74522972 -307.88766479]
[23.35095978 -293.32748413]
[26.95668983 -278.76730347]
[31.61261177 -273.03405762]
[30.50837517 -263.97348022]
[33.90582657 -249.36331177]
[37.30327606 -234.75312805]
[49.96502686 -222.59803772]
[44.45390320 -205.02470398]
[48.05963135 -190.46452332]
[51.66536331 -175.90435791]
[55.27109528 -161.34417725]
[71.55614471 -160.44778442]
[86.78560638 -154.55892944]
[99.46625519 -144.24264526]
[108.35096741 -130.49870300]
[112.56137085 -114.66462708]
[111.67465973 -98.28566742]
[105.76602936 -82.96389771]
[95.40244293 -70.20153809]
[81.58827209 -61.25371170]
[85.60831451 -46.80243683]
[89.62835693 -32.35116577]
[93.64839935 -17.89989471]
[97.66844177 -3.44862175]
[101.68848419 11.00265026]
[105.70851898 25.45392227]
[109.72856140 39.90519333]
[113.74860382 54.35646820]
[117.76864624 68.80773926]
[128.96347046 78.79152679]
[143.77879333 81.13803864]
[158.59411621 83.48455811]
[173.40943909 85.83107758]
[188.22476196 88.17758942]
[203.04010010 90.52410889]
[212.74534607 78.70228577]
[226.97087097 73.36084747]
[241.86105347 75.84054565]
[253.43336487 85.37665558]
[258.64358521 99.33084106]
[273.45892334 101.67735291]
[287.42437744 91.13713074]
[304.35803223 93.90706635]
[313.85540771 107.79010773]
[328.70272827 109.92483521]
[343.55004883 112.05955505]
[360.08847046 108.32890320]
[368.25158691 123.18822479]
[356.23275757 135.14581299]
[341.41534424 126.90687561]
[326.56802368 124.77215576]
[311.72070312 122.63743591]
[302.59075928 131.72447205]
[289.70196533 133.92874146]
[277.71969604 128.22515869]
[271.11239624 116.49268341]
[256.29708862 114.14616394]
[247.02978516 125.80732727]
[233.07702637 131.30065918]
[218.14935303 129.05767822]
[206.27067566 119.58174133]
[200.69357300 105.33943176]
[185.87825012 102.99291992]
[171.06292725 100.64640045]
[156.24760437 98.29988098]
[141.43228149 95.95336914]
[126.61695099 93.60684967]
[120.61156464 114.02489471]
[103.14057159 122.26682281]
[100.16172028 136.96806335]
[97.18286133 151.66929626]
[94.20400238 166.37052917]
[103.01061249 154.22790527]
[113.98588562 144.00325012]
[126.72096252 136.07748413]
[140.74143982 130.74586487]
[155.52500916 128.20698547]
[170.52096558 128.55543518]
[185.17065430 131.77824402]
[198.92835999 137.75532532]
[211.28155518 146.26405334]
[221.77008057 156.98745728]
[230.00317383 169.52603149]
[235.67417908 183.41270447]
[238.57179260 198.13017273]
[238.58811951 213.13015747]
[235.72250366 227.85389709]
[230.08172607 241.75286865]
[221.87591553 254.30932617]
[211.41075134 265.05551147]
[199.07608032 273.59109497]
[185.33142090 279.59808350]
[170.68876648 282.85275269]
[155.69360352 283.23382568]
[140.90454102 280.72711182]
[126.87250519 275.42599487]
[114.12021637 267.52792358]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 35]
[6 34]
[7 33]
[8 32]
[9 31]
[12 28]
[13 27]
[15 26]
[16 25]
[17 24]
[18 23]
[40 194]
[41 193]
[42 192]
[43 191]
[50 151]
[51 150]
[52 149]
[53 148]
[54 147]
[55 146]
[56 145]
[57 144]
[58 143]
[59 142]
[70 133]
[71 132]
[72 131]
[73 130]
[76 128]
[77 127]
[78 126]
[79 124]
[80 123]
[81 122]
[82 121]
[88 115]
[90 113]
[91 112]
[92 111]
[93 110]
[95 108]
[96 107]
[97 106]
[98 105]
[99 104]
[152 189]
[153 188]
[154 187]
[155 186]
[156 185]
[157 184]
[162 179]
[163 178]
[166 174]
[167 173]
[168 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
