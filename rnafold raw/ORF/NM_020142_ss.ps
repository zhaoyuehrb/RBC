%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 01:24:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGCAGGAGCCAGUCUUGGGGCCCGCUUCUACCGGCAGAUCAAAAGACAUCCGGGGAUCAUCCCGAUGAUCGGCUUAAUCUGCCUGGGCAUGGGCAGCGCUGCGCUUUACUUGCUGCGACUCGCCCUUCGCAGCCCCGACGUCUGCUGGGACAGAAAGAACAACCCGGAGCCCUGGAACCGCCUGAGCCCCAAUGACCAAUACAAGUUCCUUGCAGUUUCCACUGACUAUAAGAAGCUGAAGAAGGACCGGCCA\
GACUUCUAA\
) } def
/len { sequence length } bind def

/coor [
[466.13879395 616.47131348]
[478.99142456 608.16058350]
[477.57095337 593.22796631]
[476.15048218 578.29541016]
[474.72998047 563.36279297]
[465.82220459 551.42541504]
[472.21789551 536.95458984]
[470.79739380 522.02197266]
[450.85006714 518.32299805]
[434.15481567 507.27981567]
[423.24465942 490.82061768]
[419.67532349 471.67395020]
[423.80606079 452.91717529]
[434.77539062 437.48199463]
[425.95861816 425.34674072]
[417.14184570 413.21148682]
[408.25329590 401.12869263]
[399.29327393 389.09881592]
[390.33325195 377.06893921]
[381.37322998 365.03906250]
[372.41320801 353.00915527]
[363.45318604 340.97927856]
[354.49316406 328.94940186]
[345.46200562 316.97283936]
[328.91699219 311.08026123]
[326.75012207 292.77865601]
[317.50741577 280.96456909]
[292.94830322 242.45407104]
[280.76101685 233.70938110]
[268.57369995 224.96467590]
[256.38641357 216.21998596]
[237.03854370 215.68957520]
[229.08686829 197.14234924]
[216.69567871 188.68904114]
[204.30447388 180.23574829]
[191.91328430 171.78245544]
[179.52207947 163.32914734]
[167.13088989 154.87585449]
[154.73968506 146.42256165]
[142.34849548 137.96925354]
[129.95730591 129.51596069]
[119.36856079 138.35060120]
[106.23175812 143.42816162]
[91.86708069 144.03723145]
[77.78360748 139.92605591]
[65.52080536 131.34852600]
[56.48051834 119.05621338]
[41.67221069 121.44662476]
[26.87833595 123.92477417]
[12.09940815 126.49057007]
[-2.67951846 129.05636597]
[-17.45844650 131.62216187]
[-25.34719276 136.15950012]
[-32.42770386 134.12969971]
[-47.23600769 136.52011108]
[-62.04431534 138.91052246]
[-71.09154510 151.86904907]
[-86.66635895 154.55244446]
[-99.52850342 145.36872864]
[-102.04708862 129.76640320]
[-92.72789001 117.00208282]
[-77.09981537 114.64859009]
[-64.43473053 124.10221863]
[-49.62642288 121.71180725]
[-34.81811905 119.32138824]
[-20.02424240 116.84323883]
[-5.24531555 114.27744293]
[9.53361130 111.71164703]
[24.31253815 109.14585114]
[30.34506416 104.91946411]
[39.28179550 106.63832092]
[54.09010315 104.24790192]
[55.15615845 89.28583527]
[40.83636093 84.82002258]
[26.51656723 80.35421753]
[13.45288563 88.94922638]
[-2.07316422 87.08487701]
[-12.73065567 75.64145660]
[-13.48744678 60.02219391]
[-3.98620462 47.60203552]
[11.28687477 44.24539185]
[25.12031174 51.53717041]
[30.98237801 66.03441620]
[45.30217361 70.50022888]
[59.62196732 74.96604156]
[66.63607025 70.12910461]
[74.03778839 66.91532898]
[67.03063202 53.65261078]
[60.02347565 40.38989258]
[53.01631927 27.12717056]
[32.54590225 22.18430138]
[22.58784866 3.96529055]
[29.28686905 -15.37426949]
[21.65890312 -28.28992271]
[14.03093624 -41.20557785]
[6.40296936 -54.12123108]
[-1.30142093 -66.99144745]
[-9.08196449 -79.81576538]
[-16.93838692 -92.59373474]
[-24.87041283 -105.32492065]
[-32.80243683 -118.05609894]
[-46.66699219 -125.67743683]
[-46.83019638 -140.57115173]
[-54.76222229 -153.30232239]
[-62.69424820 -166.03350830]
[-78.20114899 -168.05094910]
[-88.74521637 -179.59896851]
[-89.34786987 -195.22492981]
[-79.72454834 -207.55075073]
[-64.41909027 -210.75653076]
[-50.65827179 -203.32862854]
[-44.93952560 -188.77424622]
[-49.96306992 -173.96553040]
[-42.03104401 -161.23434448]
[-34.09901428 -148.50317383]
[-20.80181503 -141.79244995]
[-20.07125854 -125.98812103]
[-12.13923168 -113.25694275]
[-4.20720577 -100.52576447]
[1.97653306 -96.52388000]
[3.74235463 -87.59630585]
[11.52289772 -74.77198792]
[17.65876007 -70.69707489]
[19.31862259 -61.74919891]
[26.94659042 -48.83354568]
[34.57455826 -35.91788864]
[42.20252228 -23.00223541]
[51.46627808 -23.57009125]
[60.36111450 -20.72461510]
[67.66502380 -14.81279755]
[72.35872650 -6.60582447]
[73.76779175 2.80135036]
[71.65928650 12.13604259]
[66.27903748 20.12001228]
[73.28619385 33.38273239]
[80.29335785 46.64545441]
[87.30051422 59.90817261]
[106.39385986 58.43378448]
[124.16143036 65.57824707]
[136.91906738 79.86013794]
[142.02145386 98.31807709]
[138.41059875 117.12476349]
[150.80178833 125.57805634]
[163.19299316 134.03135681]
[175.58418274 142.48466492]
[187.97538757 150.93795776]
[200.36657715 159.39125061]
[212.75778198 167.84455872]
[225.14897156 176.29785156]
[237.54016113 184.75114441]
[248.05221558 182.12455750]
[258.07391357 185.62686157]
[264.39498901 193.88156128]
[265.13110352 204.03268433]
[277.31838989 212.77737427]
[289.50570679 221.52206421]
[301.69302368 230.26676941]
[290.64706421 220.11849976]
[287.21188354 205.51715088]
[292.57458496 191.50852966]
[304.88192749 182.93362427]
[319.88088989 182.75570679]
[332.38818359 191.03623962]
[338.08169556 204.91371155]
[334.99383545 219.59243774]
[324.19143677 230.00003052]
[336.16799927 220.96885681]
[348.14456177 211.93769836]
[360.12109375 202.90652466]
[366.02215576 187.60588074]
[382.26312256 185.33369446]
[392.13668823 198.42738342]
[385.48577881 213.41728210]
[369.15228271 214.88308716]
[357.17572021 223.91424561]
[345.19915771 232.94541931]
[333.22259521 241.97659302]
[332.24731445 249.41290283]
[347.11993408 251.36370850]
[345.16888428 266.23626709]
[330.29678345 264.28555298]
[329.32150269 271.72186279]
[338.56420898 283.53594971]
[351.22869873 285.86291504]
[358.68557739 295.86532593]
[357.38482666 307.87084961]
[365.05288696 312.77188110]
[366.52304077 319.98937988]
[375.48306274 332.01925659]
[384.44308472 344.04916382]
[393.40310669 356.07904053]
[402.36312866 368.10891724]
[411.32315063 380.13879395]
[420.28317261 392.16867065]
[427.89260864 397.16027832]
[429.27709961 404.39468384]
[438.09387207 416.52993774]
[446.91064453 428.66519165]
[457.70367432 424.38217163]
[469.30422974 422.84097290]
[481.02142334 424.17791748]
[492.14651489 428.35644531]
[501.99584961 435.16693115]
[509.95288086 444.23660278]
[515.50659180 455.04986572]
[518.28424072 466.97753906]
[518.07611084 479.31329346]
[514.85058594 491.31570435]
[508.75881958 502.25256348]
[520.17932129 511.97735596]
[531.59985352 521.70214844]
[543.02038574 531.42700195]
[554.44085693 541.15179443]
[574.42816162 543.93347168]
[580.03967285 562.45727539]
[591.68750000 571.90856934]
[603.33538818 581.35992432]
[614.98321533 590.81121826]
[626.63110352 600.26257324]
[638.27893066 609.71386719]
[649.92681885 619.16516113]
[663.71197510 612.61285400]
[678.97479248 612.69921875]
[692.68499756 619.40698242]
[702.12023926 631.40441895]
[705.40722656 646.30938721]
[701.89337158 661.16253662]
[692.27624512 673.01470947]
[678.46539307 679.51263428]
[663.20300293 679.36627197]
[649.51934814 672.60449219]
[640.13140869 660.57000732]
[636.90313721 645.65222168]
[640.47546387 630.81304932]
[628.82763672 621.36169434]
[617.17974854 611.91040039]
[605.53192139 602.45910645]
[593.88403320 593.00775146]
[582.23620605 583.55645752]
[570.58831787 574.10516357]
[560.60217285 576.07073975]
[550.97326660 572.14904785]
[544.95318604 563.40490723]
[544.71606445 552.57232666]
[533.29553223 542.84747314]
[521.87506104 533.12268066]
[510.45452881 523.39788818]
[499.03402710 513.67309570]
[485.73001099 520.60150146]
[487.15048218 535.53405762]
[496.15985107 548.53955078]
[489.66256714 561.94232178]
[491.08306885 576.87487793]
[492.50354004 591.80749512]
[493.92401123 606.74011230]
[508.11306763 612.47845459]
[518.00122070 624.16107178]
[521.31628418 639.10327148]
[517.29644775 653.87145996]
[506.86547852 665.07202148]
[492.42028809 670.13116455]
[477.28030396 667.88635254]
[464.92456055 658.85333252]
[458.19235229 645.10797119]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 255]
[3 254]
[4 253]
[5 252]
[7 250]
[8 249]
[14 198]
[15 197]
[16 196]
[17 194]
[18 193]
[19 192]
[20 191]
[21 190]
[22 189]
[23 188]
[24 186]
[26 183]
[27 182]
[28 157]
[29 156]
[30 155]
[31 154]
[33 150]
[34 149]
[35 148]
[36 147]
[37 146]
[38 145]
[39 144]
[40 143]
[41 142]
[47 72]
[48 71]
[49 69]
[50 68]
[51 67]
[52 66]
[54 65]
[55 64]
[56 63]
[73 85]
[74 84]
[75 83]
[87 137]
[88 136]
[89 135]
[90 134]
[93 127]
[94 126]
[95 125]
[96 124]
[97 122]
[98 121]
[99 119]
[100 118]
[101 117]
[103 115]
[104 114]
[105 113]
[166 177]
[167 176]
[168 175]
[169 174]
[209 248]
[210 247]
[211 246]
[212 245]
[213 244]
[215 240]
[216 239]
[217 238]
[218 237]
[219 236]
[220 235]
[221 234]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
