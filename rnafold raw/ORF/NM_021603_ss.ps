%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 23:47:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGACAGGUGGUACCUGGGCGGCAGCCCCAAGGGGGACGUGGACCCGUUCUACUAUGACUAUGAGACCGUUCGCAAUGGGGGCCUGAUCUUCGCUGGACUGGCCUUCAUCGUGGGGCUCCUCAUCCUCCUCAGCAGAAGAUUCCGCUGUGGGGGCAAUAAGAAGCGCAGGCAAAUCAAUGAAGAUGAGCCGUAA\
) } def
/len { sequence length } bind def

/coor [
[85.40680695 117.61694336]
[72.57966614 125.39282990]
[59.75252914 133.16871643]
[46.92538452 140.94461060]
[39.13522720 154.71501160]
[24.24063492 154.69624329]
[11.41349316 162.47212219]
[-1.35091949 170.35057068]
[-14.05178261 178.33103943]
[-26.75264549 186.31152344]
[-39.45351028 194.29200745]
[-52.15437317 202.27249146]
[-59.72282028 216.16598511]
[-74.61579895 216.38594055]
[-87.31666565 224.36642456]
[-90.74875641 230.04080200]
[-95.77899170 232.71885681]
[-100.55498505 232.39157104]
[-113.50511169 239.96087646]
[-126.45523834 247.53016663]
[-139.34428406 255.20300293]
[-147.13444519 268.97341919]
[-162.02903748 268.95465088]
[-174.85617065 276.73052979]
[-178.72892761 291.81826782]
[-191.84825134 299.52139282]
[-206.20822144 295.73632812]
[-219.03536987 303.51220703]
[-231.86250305 311.28808594]
[-244.68965149 319.06399536]
[-255.09999084 332.44537354]
[-270.84027100 326.14617920]
[-269.14462280 309.27725220]
[-252.46553040 306.23684692]
[-239.63839722 298.46096802]
[-226.81124878 290.68505859]
[-213.98411560 282.90917969]
[-210.69790649 268.42691040]
[-197.80012512 260.35830688]
[-182.63206482 263.90338135]
[-169.80493164 256.12750244]
[-162.93225098 242.91328430]
[-147.12017822 242.37586975]
[-143.02488708 236.21232605]
[-134.02453613 234.58004761]
[-121.07440948 227.01074219]
[-108.12428284 219.44145203]
[-95.29714203 211.66555786]
[-82.59628296 203.68507385]
[-75.93628693 190.36239624]
[-60.13485336 189.57162476]
[-47.43399048 181.59114075]
[-34.73312759 173.61065674]
[-22.03226280 165.63018799]
[-9.33140087 157.64970398]
[-5.33543396 151.42131042]
[3.63760424 149.64498901]
[16.46474648 141.86909485]
[23.33742142 128.65487671]
[39.14949799 128.11746216]
[51.97663879 120.34157562]
[64.80377960 112.56568909]
[77.63092041 104.78980255]
[64.07056427 111.20202637]
[49.15079880 109.65261078]
[37.19742203 100.59077454]
[31.67615318 86.64389038]
[34.18781281 71.85566711]
[44.00417709 60.51375580]
[58.27911758 55.90658569]
[72.87380981 59.36995697]
[83.55671692 69.89969635]
[87.23052979 84.44041443]
[85.07417297 69.59622192]
[82.91782379 54.75202560]
[73.27701569 42.20748520]
[79.10431671 28.50012016]
[76.94795990 13.65592480]
[74.79160309 -1.18827009]
[72.63525391 -16.03246498]
[70.47889709 -30.87666130]
[68.32254028 -45.72085571]
[66.16618347 -60.56505203]
[64.00983429 -75.40924835]
[61.85347748 -90.25344086]
[52.21267319 -102.79798126]
[58.03997040 -116.50534821]
[53.70450974 -124.55982208]
[55.96999359 -131.60453796]
[54.05183792 -146.48139954]
[52.13367844 -161.35824585]
[40.36148834 -172.25755310]
[41.68672180 -188.24578857]
[55.09277344 -197.05812073]
[70.29566956 -191.93449402]
[75.63304901 -176.80532837]
[67.01052856 -163.27639771]
[68.92868805 -148.39955139]
[70.84684753 -133.52270508]
[72.88416290 -118.66169739]
[82.37073517 -107.17891693]
[76.69766998 -92.40979767]
[78.85402679 -77.56560516]
[81.01038361 -62.72140503]
[83.16673279 -47.87721252]
[85.32308960 -33.03301620]
[87.47944641 -18.18881989]
[89.63580322 -3.34462500]
[91.79215240 11.49956989]
[93.94850922 26.34376526]
[103.43508148 37.82654953]
[97.76201630 52.59566879]
[99.91837311 67.43986511]
[102.07472229 82.28405762]
[114.23818207 91.06188965]
[126.46726990 81.02397156]
[140.35437012 86.40892792]
[155.12182617 83.77790070]
[169.88928223 81.14687347]
[182.11836243 71.10895538]
[196.00546265 76.49391174]
[210.77291870 73.86289215]
[223.00201416 63.82496643]
[236.88911438 69.20993042]
[251.65655518 66.57890320]
[266.37994385 63.71152115]
[281.05548096 60.60852432]
[295.73101807 57.50553131]
[310.40655518 54.40253448]
[325.08209229 51.29954147]
[336.98318481 40.87481308]
[351.03573608 45.81190491]
[365.71127319 42.70890808]
[380.38681030 39.60591507]
[395.06234741 36.50291824]
[406.96343994 26.07818985]
[421.01599121 31.01528168]
[435.69152832 27.91228676]
[447.52191162 16.55562019]
[463.19476318 21.38195992]
[466.58721924 37.42638016]
[454.20938110 48.18375778]
[438.79452515 42.58782578]
[424.11898804 45.69081879]
[413.26760864 55.89360046]
[398.16534424 51.17845535]
[383.48980713 54.28145218]
[368.81427002 57.38444519]
[354.13873291 60.48744202]
[343.28735352 70.69022369]
[328.18508911 65.97507477]
[313.50955200 69.07807159]
[298.83401489 72.18106842]
[284.15847778 75.28406525]
[269.48294067 78.38706207]
[266.16741943 81.84024811]
[260.64318848 83.23957062]
[254.28758240 81.34635162]
[239.52012634 83.97737885]
[228.34730530 93.82711792]
[213.40394592 88.63034058]
[198.63648987 91.26136780]
[187.46366882 101.11110687]
[172.52030945 95.91432953]
[157.75285339 98.54535675]
[142.98539734 101.17638397]
[131.81257629 111.02611542]
[116.86920929 105.82934570]
[122.82065582 111.29594421]
[127.54981995 118.30856323]
[134.70014954 131.49464417]
[141.85049438 144.68072510]
[156.73463440 149.27421570]
[163.79824829 162.74864197]
[159.32731628 176.91007996]
[166.47766113 190.09616089]
[173.62799072 203.28224182]
[188.84846497 207.53814697]
[196.52865601 221.35083008]
[192.11206055 236.52545166]
[178.21896362 244.05918884]
[163.09187317 239.48240662]
[155.70544434 225.51042175]
[160.44190979 210.43257141]
[153.29158020 197.24649048]
[146.14123535 184.06040955]
[131.83366394 180.08189392]
[124.39435577 166.81118774]
[128.66441345 151.83105469]
[121.51407623 138.64497375]
[114.36373901 125.45890045]
[107.12450409 123.49840546]
[107.86949921 138.47990417]
[93.85147095 143.81794739]
[84.44289398 132.13552856]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 63]
[2 62]
[3 61]
[4 60]
[6 58]
[7 57]
[8 55]
[9 54]
[10 53]
[11 52]
[12 51]
[14 49]
[15 48]
[18 47]
[19 46]
[20 45]
[21 43]
[23 41]
[24 40]
[27 37]
[28 36]
[29 35]
[30 34]
[73 114]
[74 113]
[75 112]
[77 110]
[78 109]
[79 108]
[80 107]
[81 106]
[82 105]
[83 104]
[84 103]
[85 102]
[87 100]
[89 99]
[90 98]
[91 97]
[115 168]
[117 166]
[118 165]
[119 164]
[121 162]
[122 161]
[124 159]
[125 158]
[126 155]
[127 154]
[128 153]
[129 152]
[130 151]
[132 149]
[133 148]
[134 147]
[135 146]
[137 144]
[138 143]
[170 191]
[171 190]
[172 189]
[175 186]
[176 185]
[177 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
