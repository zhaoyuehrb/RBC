%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 23:47:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGAGAGAGUGACCCUGGCCCUUCUCCUACUGGCAGGCCUGACUGCCUUGGAAGCCAAUGACCCAUUUGCCAAUAAAGACGAUCCCUUCUACUAUGACUGGAAAAACCUGCAGCUGAGCGGACUGAUCUGCGGAGGGCUCCUGGCCAUUGCUGGGAUCGCGGCAGUUCUGAGUGGCAAAUGCAAAUGCAAGAGCAGCCAGAAGCAGCACAGUCCUGUACCUGAGAAGGCCAUCCCACUCAUCACUCCAGGCUCU\
GCCACUACUUGCUGA\
) } def
/len { sequence length } bind def

/coor [
[368.23233032 1115.42517090]
[378.27380371 1126.56323242]
[374.82708740 1111.96459961]
[371.38040161 1097.36596680]
[367.93368530 1082.76733398]
[364.48696899 1068.16870117]
[349.10949707 1054.37500000]
[355.75610352 1033.97863770]
[351.80386353 1019.50866699]
[347.85165405 1005.03869629]
[343.89941406 990.56872559]
[339.94720459 976.09875488]
[327.09387207 972.56280518]
[317.58340454 963.06774902]
[313.96896362 950.01177979]
[317.29504395 936.76782227]
[326.79858398 926.81231689]
[323.01437378 912.29754639]
[319.23013306 897.78271484]
[315.44592285 883.26788330]
[311.66171265 868.75311279]
[306.95037842 863.09399414]
[307.91879272 854.04809570]
[304.30310059 839.49035645]
[300.68737793 824.93267822]
[297.07168579 810.37500000]
[293.45596313 795.81726074]
[281.04699707 793.66229248]
[270.32864380 786.96002197]
[262.90396118 776.67126465]
[259.89892578 764.29626465]
[261.79196167 751.65600586]
[268.33801270 740.62408447]
[278.59973145 732.84918213]
[275.32250977 718.21154785]
[272.04525757 703.57391357]
[268.76800537 688.93634033]
[265.49078369 674.29870605]
[255.15971375 663.56939697]
[259.69500732 648.41217041]
[256.41775513 633.77453613]
[253.14051819 619.13690186]
[240.57987976 606.85955811]
[246.27456665 589.33062744]
[242.82786560 574.73199463]
[239.38116455 560.13336182]
[235.93444824 545.53472900]
[223.23234558 533.40380859]
[228.72343445 515.80999756]
[225.10774231 501.25231934]
[221.49203491 486.69461060]
[217.87632751 472.13690186]
[205.02334595 464.69805908]
[201.14913940 449.98599243]
[209.03883362 436.55502319]
[205.42314148 421.99734497]
[191.57191467 416.58605957]
[183.46720886 403.90625000]
[184.39372253 388.70773315]
[194.20533752 376.83178711]
[190.58964539 362.27407837]
[172.86602783 356.23275757]
[162.31562805 340.58068848]
[163.38204956 321.58383179]
[175.81355286 306.98107910]
[171.69384766 292.55789185]
[167.57415771 278.13470459]
[163.45445251 263.71154785]
[159.33474731 249.28836060]
[155.21505737 234.86517334]
[151.09535217 220.44200134]
[146.97564697 206.01881409]
[142.85595703 191.59564209]
[129.96250916 188.20895386]
[120.34262085 178.82476807]
[116.57707214 165.81155396]
[119.74938965 152.52995300]
[129.13688660 142.46496582]
[125.18465424 127.99500275]
[121.23242950 113.52503204]
[115.98820496 136.27124023]
[90.67247009 153.29299927]
[52.67741394 149.61936951]
[18.98099136 118.17224121]
[6.57575989 109.73954773]
[-5.82947111 101.30686188]
[-21.16142845 104.05801392]
[-33.62197113 95.32935333]
[-36.15028763 80.69571686]
[-48.55551910 72.26303101]
[-64.03132629 75.46848297]
[-77.19492340 66.72232819]
[-80.23657990 51.21349335]
[-71.35173798 38.14310455]
[-55.81161118 35.26558685]
[-42.83588791 44.28812027]
[-40.12282944 59.85779953]
[-27.71759796 68.29048920]
[-13.18015194 65.25762939]
[-0.47935629 73.63285828]
[2.60321784 88.90163422]
[15.00844860 97.33432007]
[27.41367912 105.76700592]
[33.38800430 101.23297882]
[21.07153511 92.67116547]
[25.40847969 78.31182098]
[40.40522766 77.99940491]
[45.33665466 92.16491699]
[51.31097794 87.63088226]
[46.52713776 73.41416931]
[41.74329758 59.19746017]
[36.95945740 44.98074722]
[32.17561722 30.76403809]
[27.39177704 16.54732704]
[15.65732574 5.93539000]
[18.93157387 -8.59487343]
[7.19712210 -19.20681000]
[10.47137070 -33.73707581]
[5.68753004 -47.95378494]
[-6.96437693 -58.38744736]
[-3.98802447 -74.51423645]
[11.55477142 -79.74429321]
[23.67491531 -68.69738770]
[19.90424156 -52.73762512]
[24.68808174 -38.52091599]
[36.08036041 -28.92585182]
[33.14828491 -13.37871361]
[44.54056549 -3.78365159]
[41.60848999 11.76348686]
[46.39233017 25.98019791]
[51.17617035 40.19690704]
[55.96001053 54.41362000]
[60.74385071 68.63033295]
[65.52768707 82.84703827]
[72.99935913 82.19577789]
[87.94270325 80.89325714]
[95.41437531 80.24199677]
[97.66638184 65.41201019]
[99.91838837 50.58202362]
[102.17039490 35.75203705]
[98.57057953 19.18467140]
[113.49395752 11.13923168]
[125.35617828 23.25220108]
[117.00038147 38.00404739]
[114.74837494 52.83403015]
[112.49636841 67.66401672]
[110.24435425 82.49400330]
[124.43309784 87.36016846]
[131.75672913 74.26953888]
[139.08035278 61.17891693]
[146.40399170 48.08829117]
[153.72761536 34.99766541]
[161.05123901 21.90703964]
[168.37487793 8.81641483]
[163.83767700 -6.32258987]
[171.40774536 -20.19593620]
[186.59387207 -24.57281113]
[200.38641357 -16.85649490]
[204.60247803 -1.62494063]
[196.74076843 12.08524132]
[181.46549988 16.14004326]
[174.14186096 29.23066902]
[166.81823730 42.32129288]
[159.49461365 55.41191864]
[152.17098999 68.50254059]
[144.84735107 81.59317017]
[137.52372742 94.68379211]
[135.70239258 109.57280731]
[139.65461731 124.04277802]
[143.60684204 138.51274109]
[159.52041626 144.29499817]
[168.74890137 158.29153442]
[167.81239319 174.86373901]
[157.27912903 187.47593689]
[161.39883423 201.89912415]
[165.51852417 216.32229614]
[169.63822937 230.74548340]
[173.75793457 245.16865540]
[177.87762451 259.59182739]
[181.99732971 274.01501465]
[186.11703491 288.43820190]
[190.23672485 302.86135864]
[201.46505737 304.84576416]
[211.10751343 310.83508301]
[217.80203247 319.93850708]
[220.61973572 330.82867432]
[219.19355774 341.93508911]
[213.76568604 351.67065430]
[205.14733887 358.65838623]
[208.76304626 373.21609497]
[222.99099731 379.12130737]
[230.92089844 392.12014771]
[229.69061279 407.11849976]
[219.98083496 418.38162231]
[223.59654236 432.93933105]
[236.85345459 441.11807251]
[240.31291199 455.93316650]
[232.43403625 468.52120972]
[236.04972839 483.07891846]
[239.66543579 497.63662720]
[243.28114319 512.19433594]
[253.89155579 519.48638916]
[256.61755371 531.65917969]
[250.53309631 542.08801270]
[253.97979736 556.68664551]
[257.42651367 571.28527832]
[260.87319946 585.88391113]
[271.39837646 593.29852295]
[273.98306274 605.50207520]
[267.77813721 615.85968018]
[271.05535889 630.49731445]
[274.33261108 645.13488770]
[284.89807129 656.91119385]
[280.12838745 671.02148438]
[283.40563965 685.65905762]
[286.68286133 700.29669189]
[289.96011353 714.93432617]
[293.23733521 729.57189941]
[310.15264893 734.44812012]
[322.19079590 747.17016602]
[326.08581543 764.15472412]
[320.84808350 780.68072510]
[308.01367188 792.20159912]
[311.62939453 806.75927734]
[315.24508667 821.31695557]
[318.86077881 835.87469482]
[322.47650146 850.43237305]
[326.17651367 864.96887207]
[329.96072388 879.48370361]
[333.74496460 893.99847412]
[337.52917480 908.51330566]
[341.31338501 923.02813721]
[357.15887451 928.99444580]
[366.22448730 943.09704590]
[365.09591675 959.65728760]
[354.41714478 972.14654541]
[358.36938477 986.61651611]
[362.32159424 1001.08648682]
[366.27383423 1015.55639648]
[370.22607422 1030.02636719]
[378.90490723 1033.54504395]
[384.91873169 1040.54418945]
[387.02685547 1049.38696289]
[384.88308716 1058.07995605]
[379.08563232 1064.72192383]
[382.53231812 1079.32055664]
[385.97903442 1093.91918945]
[389.42572021 1108.51782227]
[392.87243652 1123.11645508]
[397.49114990 1137.38769531]
[403.25146484 1151.23754883]
[409.01181030 1165.08740234]
[420.67709351 1177.39013672]
[412.08444214 1192.00524902]
[395.66177368 1187.79431152]
[395.16192627 1170.84777832]
[389.40161133 1156.99792480]
[383.64129639 1143.14807129]
[382.02859497 1158.06103516]
[374.88433838 1171.25048828]
[363.27441406 1180.74829102]
[348.93099976 1185.13769531]
[333.99407959 1183.76354980]
[320.69219971 1176.83093262]
[311.00997925 1165.37438965]
[306.39196777 1151.10290527]
[307.52719116 1136.14587402]
[314.24624634 1122.73498535]
[325.54666138 1112.87084961]
[339.74246216 1108.02539062]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 249]
[3 248]
[4 247]
[5 246]
[6 245]
[8 240]
[9 239]
[10 238]
[11 237]
[12 236]
[17 232]
[18 231]
[19 230]
[20 229]
[21 228]
[23 227]
[24 226]
[25 225]
[26 224]
[27 223]
[34 218]
[35 217]
[36 216]
[37 215]
[38 214]
[40 212]
[41 211]
[42 210]
[44 207]
[45 206]
[46 205]
[47 204]
[49 201]
[50 200]
[51 199]
[52 198]
[55 195]
[56 194]
[60 190]
[61 189]
[65 182]
[66 181]
[67 180]
[68 179]
[69 178]
[70 177]
[71 176]
[72 175]
[73 174]
[78 170]
[79 169]
[80 168]
[84 103]
[85 102]
[86 101]
[89 98]
[90 97]
[109 134]
[110 133]
[111 132]
[112 131]
[113 130]
[114 129]
[116 127]
[118 125]
[119 124]
[137 147]
[138 146]
[139 145]
[140 144]
[148 167]
[149 166]
[150 165]
[151 164]
[152 163]
[153 162]
[154 161]
[250 258]
[251 257]
[252 256]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
