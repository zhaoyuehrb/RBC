%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 00:06:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUUUCUGUCUCUUCCUACGUUGACUGUUCUUAUUCCACUGGUUUCUUUAGCAGGACUGUUCUACUCAGCCUCUGUGGAAGAAAACUUCCCACAGGGCUGCACUAGCACAGCCAGCCUUUGCUUUUACAGCCUGCUCUUGCCUAUUACCAUACCAGUGUAUGUAUUCUUCCACCUUUGGACUUGGAUGGGUAUUAAACUCUUCAGGCAUAAUUGA\
) } def
/len { sequence length } bind def

/coor [
[106.59075928 281.75073242]
[103.17510986 267.14480591]
[110.06135559 253.81956482]
[110.16198730 238.81990051]
[110.26261139 223.82023621]
[110.36323547 208.82057190]
[110.46386719 193.82090759]
[110.56449127 178.82124329]
[103.08412933 179.36367798]
[95.80460358 192.47888184]
[88.52507019 205.59407043]
[97.37688446 218.02822876]
[99.94863892 233.07312012]
[95.72972870 247.74157715]
[85.55781555 259.12115479]
[71.45253754 264.95245361]
[56.21451187 264.07763672]
[42.86925888 256.67041016]
[34.06648636 244.20149231]
[31.55398941 229.14659119]
[35.83063126 214.49485779]
[46.04727936 203.15542603]
[60.17541122 197.37973022]
[75.40987396 198.31454468]
[82.68940735 185.19934082]
[89.96893311 172.08415222]
[75.05346680 167.43037415]
[61.65277100 159.77178955]
[50.35371017 149.53755188]
[41.63058853 137.26710510]
[35.82551193 123.58215332]
[33.13540268 109.15532684]
[33.60625458 94.67729187]
[37.13466263 80.82366943]
[43.47644424 68.22349548]
[52.26168823 57.43072510]
[63.01547241 48.89989853]
[75.18302917 42.96725464]
[70.90024567 28.59165764]
[66.61746216 14.21606064]
[62.33467865 -0.15953565]
[58.05189896 -14.53513241]
[53.76911545 -28.91072845]
[49.48633575 -43.28632736]
[28.86768150 -44.31677246]
[10.21284771 -53.09052658]
[-3.69044161 -68.27185059]
[-10.77387714 -87.56934357]
[-9.99623585 -108.08177185]
[-1.49637282 -126.73423004]
[13.43093681 -140.73912048]
[7.31666470 -154.43640137]
[1.20239210 -168.13369751]
[-4.91188049 -181.83097839]
[-11.02615261 -195.52825928]
[-17.14042473 -209.22555542]
[-23.49322510 -215.78266907]
[-23.24246788 -223.16567993]
[-29.15780640 -236.95004272]
[-35.07314301 -250.73440552]
[-40.98848343 -264.51876831]
[-54.11093521 -262.84936523]
[-67.44244385 -265.88458252]
[-79.29678345 -273.55078125]
[-88.07147980 -285.17202759]
[-92.46145630 -299.52224731]
[-91.64558411 -314.95227051]
[-85.42018127 -329.57910156]
[-95.02497864 -341.10073853]
[-104.62977600 -352.62237549]
[-114.23457336 -364.14398193]
[-123.83937073 -375.66561890]
[-131.73434448 -380.25070190]
[-133.49835205 -387.42428589]
[-142.93534851 -399.08374023]
[-152.37234497 -410.74319458]
[-161.80932617 -422.40267944]
[-171.24632263 -434.06213379]
[-180.68331909 -445.72161865]
[-190.20446777 -457.31246948]
[-199.80924988 -468.83407593]
[-209.41404724 -480.35571289]
[-224.98440552 -485.50317383]
[-228.04635620 -501.61392212]
[-215.45002747 -512.11462402]
[-200.15345764 -506.20303345]
[-197.89242554 -489.96051025]
[-188.28762817 -478.43887329]
[-178.68283081 -466.91726685]
[-171.98841858 -463.79370117]
[-169.02384949 -455.15859985]
[-159.58685303 -443.49914551]
[-150.14987183 -431.83966064]
[-140.71287537 -420.18020630]
[-131.27587891 -408.52072144]
[-121.83888245 -396.86126709]
[-112.31774139 -385.27041626]
[-102.71294403 -373.74877930]
[-93.10814667 -362.22717285]
[-83.50334930 -350.70553589]
[-73.89855194 -339.18389893]
[-66.63797760 -341.06381226]
[-70.39752197 -355.58502197]
[-55.87624359 -359.34432983]
[-52.11682129 -344.82357788]
[-44.85624313 -346.70349121]
[-42.04978943 -361.43859863]
[-39.24333572 -376.17373657]
[-36.43688202 -390.90884399]
[-41.45558167 -405.91296387]
[-31.47367859 -416.96786499]
[-28.66722679 -431.70297241]
[-36.46329498 -445.72442627]
[-30.22864342 -460.50646973]
[-14.74596405 -464.70959473]
[-1.89224386 -455.10949707]
[-1.52775574 -439.07058716]
[-13.93210411 -428.89651489]
[-16.73855782 -414.16140747]
[-11.51911926 -400.21124268]
[-21.70175934 -388.10238647]
[-24.50821304 -373.36727905]
[-27.31466675 -358.63214111]
[-30.12112045 -343.89703369]
[-12.84969425 -327.31561279]
[-6.79356098 -305.37655640]
[-12.49953270 -284.56747437]
[-27.20411491 -270.43411255]
[-21.28877640 -256.64974976]
[-15.37343884 -242.86537170]
[-9.45810127 -229.08100891]
[-3.44313860 -215.33982849]
[2.67113400 -201.64253235]
[8.78540611 -187.94525146]
[14.89967918 -174.24795532]
[21.01395226 -160.55067444]
[27.12822342 -146.85339355]
[36.81032181 -148.68870544]
[46.67100525 -148.69421387]
[56.36728668 -146.86743164]
[65.56146240 -143.26966858]
[73.93289185 -138.02389526]
[81.18916321 -131.31068420]
[87.07632446 -123.36181641]
[91.38774872 -114.45245361]
[93.97141266 -104.89147949]
[94.73521423 -95.01086426]
[93.65032196 -85.15412903]
[90.75217438 -75.66436768]
[86.13939667 -66.87234497]
[79.97039795 -59.08494568]
[72.45797729 -52.57446671]
[63.86193085 -47.56910706]
[68.14471436 -33.19351196]
[72.42749786 -18.81791496]
[76.71027374 -4.44231749]
[80.99305725 9.93327904]
[85.27584076 24.30887604]
[89.55862427 38.68447113]
[102.87677765 36.90547943]
[116.47196960 38.02986908]
[129.70930481 42.09266663]
[141.95217896 48.98974609]
[152.59283447 58.47886276]
[161.08230591 70.18737793]
[166.95841980 83.62650299]
[169.87025452 98.21152496]
[169.59802246 113.28717041]
[166.06698608 128.15704346]
[159.35493469 142.11576843]
[173.34431458 147.52844238]
[187.33370972 152.94111633]
[201.32310486 158.35377502]
[217.43505859 155.29811096]
[227.93083191 167.89852905]
[222.01329041 183.19279480]
[205.76988220 185.44749451]
[195.91043091 172.34317017]
[181.92103577 166.93049622]
[167.93165588 161.51783752]
[153.94226074 156.10516357]
[144.93334961 168.09848022]
[154.02883911 180.02626038]
[163.12432861 191.95405579]
[172.21981812 203.88183594]
[181.31530762 215.80963135]
[190.41079712 227.73741150]
[198.09924316 232.66096497]
[199.55012512 239.90435791]
[208.47198486 251.96257019]
[217.39384460 264.02078247]
[226.31568909 276.07897949]
[241.90599060 279.86346436]
[248.53662109 294.47216797]
[241.12113953 308.69854736]
[225.34805298 311.62936401]
[213.31713867 301.01632690]
[214.25747681 285.00085449]
[205.33563232 272.94262695]
[196.41377258 260.88442993]
[187.49191284 248.82621765]
[178.48300171 236.83290100]
[169.38751221 224.90510559]
[160.29202271 212.97732544]
[151.19654846 201.04954529]
[142.10105896 189.12174988]
[133.00556946 177.19396973]
[125.52520752 177.73638916]
[127.78876495 192.56462097]
[130.05232239 207.39285278]
[132.31587219 222.22106934]
[134.57943726 237.04930115]
[136.84298706 251.87753296]
[145.57977295 264.07049561]
[144.30661011 279.01635742]
[133.63336182 289.55590820]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 26]
[10 25]
[11 24]
[38 159]
[39 158]
[40 157]
[41 156]
[42 155]
[43 154]
[44 153]
[51 137]
[52 136]
[53 135]
[54 134]
[55 133]
[56 132]
[58 131]
[59 130]
[60 129]
[61 128]
[68 101]
[69 100]
[70 99]
[71 98]
[72 97]
[74 96]
[75 95]
[76 94]
[77 93]
[78 92]
[79 91]
[80 89]
[81 88]
[82 87]
[106 124]
[107 123]
[108 122]
[109 121]
[111 119]
[112 118]
[170 181]
[171 180]
[172 179]
[173 178]
[182 207]
[183 206]
[184 205]
[185 204]
[186 203]
[187 202]
[189 201]
[190 200]
[191 199]
[192 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
