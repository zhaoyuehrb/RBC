%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 16:49:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGUCGCCAAGCAAAGGAUCCGUAUGGCCAACGAGAAGCACAGCAAGAACAUCACCCAGCGCGGCAACGUCGCCAAGACCUCGAGAAAUGCCCCCGAAGAGAAGGCGUCUGUAGGACCCUGGUUAUUGGCUCUCUUCAUUUUUGUUGUCUGUGGUUCUGCAAUUUUCCAGAUUAUUCAAAGUAUCAGGAUGGGCAUGUGA\
) } def
/len { sequence length } bind def

/coor [
[60.30717850 278.33227539]
[58.13076401 280.65344238]
[55.61128235 281.89801025]
[50.14151001 295.86517334]
[44.67173386 309.83233643]
[39.20196152 323.79949951]
[49.27556229 335.32257080]
[52.82897186 350.20986938]
[49.04565048 365.04040527]
[38.79497147 376.40625000]
[24.43246651 381.69558716]
[9.25853634 379.69299316]
[-3.23996091 370.85861206]
[-10.19096375 357.22253418]
[-9.99718189 341.91827393]
[-2.70314455 328.46258545]
[10.01503086 319.94747925]
[25.23480225 318.32971191]
[30.70457458 304.36257935]
[36.17434692 290.39541626]
[41.64411926 276.42825317]
[46.67687225 262.29772949]
[51.26773071 248.01753235]
[55.85858917 233.73733521]
[60.44944763 219.45713806]
[65.04030609 205.17694092]
[69.63116455 190.89674377]
[66.16042328 176.41215515]
[77.75008392 165.64227295]
[82.34094238 151.36207581]
[86.93180084 137.08187866]
[69.14795685 121.96776581]
[63.57000732 100.20198822]
[71.27615356 80.02384949]
[88.50060272 68.48878479]
[86.63912201 53.60474014]
[84.77764130 38.72069168]
[82.91616058 23.83664322]
[73.52608490 11.10333729]
[79.62413788 -2.48574042]
[77.76265717 -17.36978912]
[75.90117645 -32.25383759]
[74.03969574 -47.13788605]
[72.17821503 -62.02193451]
[70.20104980 -76.89105225]
[68.10832214 -91.74435425]
[66.01558685 -106.59765625]
[56.42862320 -119.18338776]
[62.31460190 -132.86566162]
[60.22187424 -147.71894836]
[51.98398972 -148.67121887]
[44.05617523 -151.48800659]
[36.86072540 -156.07649231]
[30.79344559 -162.24822998]
[26.20202255 -169.72644043]
[23.36637878 -178.15827942]
[22.48209381 -187.13134766]
[23.64787483 -196.19386292]
[26.85783958 -204.87739563]
[31.99912453 -212.72109985]
[18.93168068 -220.08601379]
[5.86423779 -227.45091248]
[-7.26008129 -234.71398926]
[-20.44048309 -241.87478638]
[-36.81117249 -240.90908813]
[-45.60565567 -254.75065613]
[-37.77692413 -269.16049194]
[-21.37850380 -269.31497192]
[-13.27968407 -255.05519104]
[-0.09928305 -247.89439392]
[7.28425789 -247.46325684]
[13.22914886 -240.51835632]
[26.29659271 -233.15345764]
[39.36403656 -225.78854370]
[31.42720222 -238.51672363]
[23.49036789 -251.24490356]
[15.55353451 -263.97308350]
[7.61669970 -276.70126343]
[-5.11100912 -284.63885498]
[-14.57688427 -296.27490234]
[-19.75785446 -310.35174561]
[-20.09396172 -325.34799194]
[-15.54887772 -339.64282227]
[-6.61383629 -351.69125366]
[5.74546480 -360.19113159]
[20.19323349 -364.22372437]
[35.16795349 -363.35327148]
[49.05116272 -357.67376709]
[60.34236145 -347.79913330]
[67.82119751 -334.79653931]
[70.67935944 -320.07138062]
[68.60794067 -305.21508789]
[61.82962799 -291.83172607]
[61.63117599 -276.83303833]
[61.43272400 -261.83435059]
[61.23427200 -246.83567810]
[61.03582001 -231.83699036]
[68.40073395 -244.90443420]
[75.76564026 -257.97186279]
[83.13055420 -271.03930664]
[90.49546814 -284.10675049]
[97.86037445 -297.17419434]
[105.22528839 -310.24163818]
[111.55281067 -323.84173584]
[116.80471039 -337.89227295]
[122.05661011 -351.94281006]
[122.13076782 -361.08435059]
[127.50097656 -366.16995239]
[132.97074890 -380.13711548]
[138.44052124 -394.10427856]
[143.91029358 -408.07144165]
[144.05604553 -425.02474976]
[160.38717651 -429.57785034]
[169.28323364 -415.14538574]
[157.87745667 -402.60168457]
[152.40768433 -388.63452148]
[146.93791199 -374.66735840]
[141.46813965 -360.70019531]
[136.10714722 -346.69091797]
[130.85525513 -332.64038086]
[125.60334778 -318.58984375]
[138.17234802 -326.77642822]
[153.14482117 -327.68475342]
[166.61128235 -321.07760620]
[175.05546570 -308.68020630]
[176.27252197 -293.72964478]
[169.94462585 -280.12973022]
[157.72409058 -271.43154907]
[142.80183411 -269.90628052]
[129.07424927 -275.95223999]
[120.12577057 -287.99069214]
[118.29273224 -302.87673950]
[110.92781830 -289.80929565]
[103.56291199 -276.74185181]
[96.19799805 -263.67440796]
[88.83308411 -250.60696411]
[81.46817780 -237.53952026]
[74.10326385 -224.47207642]
[91.37992859 -213.18084717]
[100.78714752 -195.41331482]
[100.43247986 -175.84713745]
[90.92066956 -159.35957336]
[75.07517242 -149.81169128]
[77.16790009 -134.95838928]
[86.60517883 -123.43505859]
[80.86888885 -108.69038391]
[82.96161652 -93.83708191]
[85.05434418 -78.98378754]
[89.10342407 -72.79447937]
[87.06226349 -63.88341522]
[88.92374420 -48.99936676]
[90.78522491 -34.11531830]
[92.64670563 -19.23126984]
[94.50818634 -4.34722185]
[103.76511383 7.32147741]
[97.80020905 21.97516251]
[99.66168976 36.85921097]
[101.52317047 51.74325943]
[103.38465118 66.62730408]
[112.90990448 68.25944519]
[121.76820374 72.60928345]
[129.18551636 79.42501831]
[134.47859192 88.23516083]
[137.11689758 98.38027954]
[136.77378845 109.06199646]
[133.36212158 119.40580750]
[127.05055237 128.53263855]
[137.06437683 139.70059204]
[147.07820129 150.86856079]
[162.05168152 155.97787476]
[164.78759766 170.61904907]
[174.80142212 181.78701782]
[184.81524658 192.95497131]
[199.82836914 189.71437073]
[214.44551086 194.42976379]
[224.73472595 205.83273315]
[227.92825317 220.85594177]
[223.16706848 235.45822144]
[211.73190308 245.71163940]
[196.69874573 248.85807800]
[182.11146545 244.05113220]
[171.89395142 232.58389282]
[168.79464722 217.54095459]
[173.64729309 202.96879578]
[163.63346863 191.80084229]
[153.61964417 180.63287354]
[139.36241150 176.32235718]
[135.91023254 160.88238525]
[125.89641571 149.71441650]
[115.88259125 138.54646301]
[101.21199799 141.67272949]
[96.62113953 155.95292664]
[92.03028107 170.23312378]
[95.17264557 185.73913574]
[83.91136169 195.48760986]
[79.32050323 209.76780701]
[74.72964478 224.04800415]
[70.13878632 238.32820129]
[65.54792786 252.60839844]
[60.95706558 266.88858032]
[62.02889252 271.11328125]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 21]
[4 20]
[5 19]
[6 18]
[22 200]
[23 199]
[24 198]
[25 197]
[26 196]
[27 195]
[29 193]
[30 192]
[31 191]
[35 159]
[36 158]
[37 157]
[38 156]
[40 154]
[41 153]
[42 152]
[43 151]
[44 150]
[45 148]
[46 147]
[47 146]
[49 144]
[50 143]
[60 74]
[61 73]
[62 72]
[63 70]
[64 69]
[97 138]
[98 137]
[99 136]
[100 135]
[101 134]
[102 133]
[103 132]
[104 121]
[105 120]
[106 119]
[108 118]
[109 117]
[110 116]
[111 115]
[167 190]
[168 189]
[169 188]
[171 186]
[172 185]
[173 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
