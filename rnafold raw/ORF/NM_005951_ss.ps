%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 18:45:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGACCCCAACUGCUCCUGCGAGGCUGGUGGCUCCUGCGCCUGCGCCGGCUCCUGCAAGUGCAAAAAGUGCAAAUGCACCUCCUGCAAGAAGAGCUGCUGCUCCUGUUGCCCCCUGGGCUGUGCCAAGUGUGCCCAGGGCUGCAUCUGCAAAGGGGCGUCAGAGAAGUGCAGCUGCUGUGCCUGA\
) } def
/len { sequence length } bind def

/coor [
[-40.28506470 659.98614502]
[-37.05010605 672.38134766]
[-40.05365753 687.07757568]
[-43.05720901 701.77374268]
[-40.30489731 718.50280762]
[-55.61825562 725.77862549]
[-66.84888458 713.07788086]
[-57.75342178 698.77020264]
[-54.74987030 684.07397461]
[-51.74631882 669.37780762]
[-58.66937256 666.49310303]
[-72.51548004 660.72375488]
[-79.43853760 657.83911133]
[-87.75898743 670.31988525]
[-96.07944489 682.80065918]
[-96.59427643 699.19177246]
[-111.17266846 706.70190430]
[-124.81761932 697.60534668]
[-123.49237823 681.25982666]
[-108.56022644 674.48022461]
[-100.23977661 661.99945068]
[-91.91931915 649.51867676]
[-85.23324585 636.09118652]
[-80.28755951 621.92999268]
[-75.34186554 607.76873779]
[-70.39617920 593.60754395]
[-65.56961060 579.40527344]
[-60.86251831 565.16296387]
[-56.15542221 550.92065430]
[-51.44832611 536.67834473]
[-46.74123383 522.43603516]
[-42.03413773 508.19375610]
[-37.32704163 493.95144653]
[-32.61994553 479.70913696]
[-33.88506317 476.39688110]
[-33.59592819 472.30413818]
[-31.40192413 468.17398071]
[-27.30025673 464.87844849]
[-21.88163185 450.89135742]
[-16.46300697 436.90426636]
[-11.04438114 422.91717529]
[-6.09869099 408.75598145]
[-1.63151872 394.43658447]
[2.83565354 380.11721802]
[7.18238735 365.76083374]
[11.40837574 351.36843872]
[15.63436413 336.97604370]
[19.86035156 322.58364868]
[14.33754444 311.80673218]
[17.75614929 299.77215576]
[28.80568504 293.09213257]
[33.27285767 278.77276611]
[27.93187332 267.90460205]
[31.55216599 255.92913818]
[42.71236038 249.43568420]
[47.41945648 235.19337463]
[52.12655258 220.95106506]
[56.83364868 206.70877075]
[53.48108292 192.19636536]
[65.15812683 181.52130127]
[69.86522675 167.27899170]
[74.57231903 153.03669739]
[79.27941895 138.79438782]
[83.98651123 124.55207825]
[75.42475128 119.97374725]
[68.30400085 112.36985779]
[63.68922043 102.24324799]
[62.45587158 90.46598053]
[65.16474152 78.20510864]
[56.22608566 66.15933990]
[47.28743362 54.11357117]
[38.34878159 42.06780624]
[23.09405136 36.04906845]
[20.94702339 19.79107475]
[34.11637878 10.01865768]
[49.05461121 16.78483963]
[50.39455032 33.12915421]
[59.33320236 45.17491913]
[68.27185059 57.22068787]
[77.21050262 69.26645660]
[84.50401306 67.51867676]
[76.67206573 54.72568512]
[86.41886139 43.32393265]
[100.27442932 49.07052231]
[99.09103394 64.02312469]
[106.38454437 62.27534485]
[108.89270020 47.48652649]
[111.40085602 32.69770813]
[113.90901184 17.90889168]
[108.58817291 3.00925064]
[118.34468079 -8.24507904]
[113.02384186 -23.14472008]
[122.78034210 -34.39904785]
[125.28849792 -49.18786621]
[127.79666138 -63.97668839]
[130.30480957 -78.76550293]
[124.09129333 -93.94194031]
[134.34033203 -106.74386597]
[150.50859070 -104.00175476]
[155.96356201 -88.53646088]
[145.09362793 -76.25734711]
[142.58547974 -61.46852875]
[140.07731628 -46.67971039]
[137.56916809 -31.89089203]
[143.06939697 -18.04904747]
[133.13349915 -5.73692274]
[138.63372803 8.10492229]
[128.69783020 20.41704750]
[126.18967438 35.20586777]
[123.68151855 49.99468613]
[121.17336273 64.78350067]
[122.56165314 72.97849274]
[122.02321625 80.65538025]
[135.45066833 73.96930695]
[148.87811279 67.28322601]
[162.30557251 60.59715271]
[175.73301697 53.91107941]
[189.16046143 47.22500229]
[202.58792114 40.53892899]
[216.01536560 33.85285187]
[215.76239014 18.59183121]
[222.16375732 4.73596191]
[233.94850159 -4.96366358]
[248.77673340 -8.58117771]
[263.70428467 -5.39831924]
[275.76730347 3.95295191]
[282.57067871 17.61593437]
[282.76354980 32.87783432]
[276.30764771 46.70838547]
[264.48480225 56.36153030]
[249.64245605 59.92062378]
[234.72753906 56.67900467]
[222.70144653 47.28030014]
[209.27398682 53.96637726]
[195.84654236 60.65245438]
[182.41909790 67.33853149]
[168.99163818 74.02460480]
[155.56419373 80.71067810]
[142.13674927 87.39675140]
[128.70928955 94.08283234]
[122.15309143 119.19576263]
[98.22881317 129.25917053]
[93.52172089 143.50148010]
[88.81462860 157.74378967]
[84.10752869 171.98609924]
[79.40043640 186.22839355]
[82.41632080 201.75949097]
[71.07595062 211.41586304]
[66.36885834 225.65817261]
[61.66176224 239.90046692]
[56.95466614 254.14277649]
[61.11632919 272.07058716]
[47.59222794 283.23992920]
[43.12505722 297.55929565]
[47.58730316 315.41470337]
[34.25274658 326.80963135]
[30.02675819 341.20202637]
[25.80076981 355.59442139]
[21.57478142 369.98681641]
[22.15887260 379.12396240]
[17.15502357 384.58441162]
[12.68785191 398.90377808]
[8.22067928 413.22314453]
[9.33929348 417.46774292]
[9.06402683 421.44363403]
[7.65337658 424.74249268]
[5.47265196 427.08319092]
[2.94270229 428.33581543]
[-2.47592258 442.32290649]
[-7.89454746 456.30996704]
[-13.31317234 470.29705811]
[-18.37764168 484.41622925]
[-23.08473587 498.65853882]
[-27.79183197 512.90087891]
[-32.49892807 527.14312744]
[-37.20602417 541.38543701]
[-41.91311646 555.62774658]
[-46.62021255 569.87005615]
[-51.32730865 584.11236572]
[-51.05049896 593.26397705]
[-56.23495865 598.55322266]
[-61.18064880 612.71447754]
[-66.12633514 626.87567139]
[-71.07202911 641.03686523]
[-62.94496918 640.72674561]
[-54.34179688 643.75701904]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 10]
[3 9]
[4 8]
[13 22]
[14 21]
[15 20]
[23 184]
[24 183]
[25 182]
[26 181]
[27 179]
[28 178]
[29 177]
[30 176]
[31 175]
[32 174]
[33 173]
[34 172]
[38 171]
[39 170]
[40 169]
[41 168]
[42 163]
[43 162]
[44 161]
[45 159]
[46 158]
[47 157]
[48 156]
[51 154]
[52 153]
[55 151]
[56 150]
[57 149]
[58 148]
[60 146]
[61 145]
[62 144]
[63 143]
[64 142]
[69 80]
[70 79]
[71 78]
[72 77]
[86 111]
[87 110]
[88 109]
[89 108]
[91 106]
[93 104]
[94 103]
[95 102]
[96 101]
[113 140]
[114 139]
[115 138]
[116 137]
[117 136]
[118 135]
[119 134]
[120 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
