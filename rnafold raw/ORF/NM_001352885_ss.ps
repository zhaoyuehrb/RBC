%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 05:44:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGAGCUUCCCUACACCAACUUGGAAAUGGCAUUCAUUUUAUUGGCUUUUGUUAUCUUUUCCUUAUUUACCCUGGCUUCCAUCUACACUACUCCGGAUGACAGUAAUGAAGAGGAAGAACAUGAAAAAAAGGGAAGGGAAAAGAAAAGGAAAAAGUCUGAAAAGAAGAAAAAUUGCUCAGAGGAAGAGCACAGAAUUGAAGCUGUUGAGCUAUGA\
) } def
/len { sequence length } bind def

/coor [
[48.64815140 255.70280457]
[50.65771103 240.69479370]
[57.43371201 227.15357971]
[68.24114227 216.54800415]
[81.90769196 210.02848816]
[80.17428589 195.12898254]
[78.44088745 180.22947693]
[76.70748138 165.32997131]
[74.97407532 150.43046570]
[73.24066925 135.53094482]
[66.32725525 132.62324524]
[60.70526123 146.52983093]
[54.69733810 160.27410889]
[40.87071609 154.45822144]
[46.49275589 140.55221558]
[52.50043106 126.80784607]
[45.58702087 123.90014648]
[33.72538376 133.08174133]
[21.86374855 142.26332092]
[10.00211239 151.44491577]
[10.06643486 160.86575317]
[5.85376835 169.13844299]
[-1.57958019 174.46713257]
[-10.49471283 175.76075745]
[-18.87613487 172.85453796]
[-31.12523460 181.51245117]
[-43.37433624 190.17037964]
[-55.62343597 198.82829285]
[-67.87253571 207.48620605]
[-80.12164307 216.14411926]
[-84.24375916 231.64855957]
[-98.99299622 237.96041870]
[-113.05500793 230.23776245]
[-115.64261627 214.40475464]
[-104.77083588 202.60713196]
[-88.77955627 203.89501953]
[-76.53045654 195.23710632]
[-64.28135681 186.57919312]
[-52.03225327 177.92126465]
[-39.78315353 169.26335144]
[-27.53404999 160.60543823]
[-20.55197525 141.18089294]
[0.82052243 139.58328247]
[12.68215847 130.40168762]
[24.54379463 121.22010040]
[36.40542984 112.03851318]
[96.93328857 53.25992584]
[92.44284058 38.94783783]
[87.95239258 24.63574791]
[83.46195221 10.32365894]
[78.97150421 -3.98842978]
[67.45777893 -14.83945370]
[71.03016663 -29.29930496]
[66.53971863 -43.61139297]
[55.02599335 -54.46241760]
[58.59837723 -68.92227173]
[54.10792923 -83.23435974]
[49.61748505 -97.54644775]
[45.12703705 -111.85853577]
[40.63658905 -126.17062378]
[36.14614487 -140.48271179]
[31.65569687 -154.79479980]
[27.16525078 -169.10688782]
[22.67480278 -183.41897583]
[18.18435669 -197.73106384]
[6.67063141 -208.58209229]
[10.24301720 -223.04194641]
[5.75257063 -237.35403442]
[1.26212394 -251.66612244]
[-12.46564388 -259.02725220]
[-16.81571388 -273.60571289]
[-9.71340847 -286.64767456]
[-21.22713280 -297.49868774]
[-17.65474701 -311.95855713]
[-22.14519310 -326.27062988]
[-35.98979950 -338.41497803]
[-31.49668121 -355.38098145]
[-36.19385147 -369.62658691]
[-40.89102173 -383.87216187]
[-45.58819199 -398.11773682]
[-50.28536224 -412.36331177]
[-55.94219589 -419.52947998]
[-54.94580078 -426.84924316]
[-59.43624878 -441.16134644]
[-63.92669296 -455.47341919]
[-75.44042206 -466.32446289]
[-71.86803436 -480.78430176]
[-76.35848236 -495.09640503]
[-87.87220764 -505.94741821]
[-84.29981995 -520.40728760]
[-88.79026794 -534.71936035]
[-93.28070831 -549.03143311]
[-97.77115631 -563.34350586]
[-112.67799377 -567.31719971]
[-123.05319977 -578.73468018]
[-125.58609009 -593.95269775]
[-119.46842957 -608.11523438]
[-106.65233612 -616.70306396]
[-91.22738647 -616.97589111]
[-78.11562347 -608.84661865]
[-71.50095367 -594.90930176]
[-73.49411011 -579.61120605]
[-83.45906830 -567.83398438]
[-78.96862030 -553.52191162]
[-74.47817993 -539.20977783]
[-69.98773193 -524.89770508]
[-58.79519272 -515.07037354]
[-62.04639053 -499.58685303]
[-57.55594254 -485.27474976]
[-46.36340714 -475.44741821]
[-49.61460495 -459.96386719]
[-45.12415695 -445.65179443]
[-40.63371277 -431.33969116]
[-36.03978348 -417.06048584]
[-31.34261131 -402.81491089]
[-26.64544106 -388.56933594]
[-21.94827080 -374.32373047]
[-17.25110054 -360.07815552]
[-6.59612370 -354.35714722]
[-2.56463170 -342.53097534]
[-7.83310461 -330.76107788]
[-3.34265780 -316.44900513]
[7.84988022 -306.62167358]
[4.59868097 -291.13812256]
[17.87845421 -284.49108887]
[22.63628578 -270.04055786]
[15.57421303 -256.15658569]
[20.06465912 -241.84448242]
[24.55510712 -227.53239441]
[35.74764252 -217.70506287]
[32.49644470 -202.22151184]
[36.98689270 -187.90942383]
[41.47733688 -173.59733582]
[45.96778488 -159.28524780]
[50.45823288 -144.97315979]
[54.94868088 -130.66107178]
[59.43912506 -116.34898376]
[63.92957306 -102.03689575]
[68.42002106 -87.72480774]
[72.91046906 -73.41271973]
[84.10300446 -63.58538818]
[80.85180664 -48.10184097]
[85.34225464 -33.78975296]
[96.53479004 -23.96242523]
[93.28359222 -8.47887611]
[97.77404022 5.83321238]
[102.26448059 20.14530182]
[106.75492859 34.45738983]
[111.24537659 48.76947784]
[109.45615387 33.87657166]
[117.15768433 21.00464821]
[131.12699890 15.54039860]
[145.51818848 19.77052307]
[154.30874634 31.92478371]
[153.81997681 46.91681671]
[144.25642395 58.47270584]
[129.61903381 61.75635529]
[144.60920715 61.21356964]
[159.59938049 60.67078781]
[173.20056152 51.50891876]
[187.81480408 58.94909668]
[188.40820312 75.33750153]
[174.37034607 83.81515503]
[160.14216614 75.66096497]
[145.15199280 76.20375061]
[130.16181946 76.74652863]
[128.12471008 83.96457672]
[142.56079102 88.03879547]
[156.99688721 92.11301422]
[171.43290710 96.18747711]
[167.35821533 110.62342834]
[152.92266846 106.54910278]
[138.48657227 102.47488403]
[124.05048370 98.40066528]
[122.01337433 105.61871338]
[134.50799561 113.91838074]
[147.00260925 122.21804810]
[159.49723816 130.51771545]
[171.99185181 138.81738281]
[186.94067383 134.22752380]
[201.32221985 140.36798096]
[208.34596252 154.33943176]
[204.69549561 169.54495239]
[192.09448242 178.80499268]
[176.49270630 177.74722290]
[165.25686646 166.87110901]
[163.69218445 151.31199646]
[151.19757080 143.01232910]
[138.70294189 134.71266174]
[126.20832825 126.41300201]
[113.71370697 118.11333466]
[107.32032776 122.03438568]
[115.16242981 134.82115173]
[126.57202911 144.55876160]
[120.83674622 158.41900635]
[105.88256836 157.24746704]
[102.37566376 142.66325378]
[94.53356171 129.87649536]
[88.14017487 133.79754639]
[89.87358093 148.69705200]
[91.60698700 163.59655762]
[93.34039307 178.49606323]
[95.07379913 193.39556885]
[96.80720520 208.29507446]
[111.60543823 211.50300598]
[124.55896759 219.34423828]
[134.26268005 230.96821594]
[139.66398621 245.11404419]
[140.17700195 260.24731445]
[135.74607849 274.72644043]
[126.85184479 286.98089600]
[114.45907593 295.68133545]
[99.91205597 299.88406372]
[84.78873444 299.13317871]
[70.72957611 293.51013184]
[59.25960922 283.62484741]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 204]
[6 203]
[7 202]
[8 201]
[9 200]
[10 199]
[17 46]
[18 45]
[19 44]
[20 43]
[25 41]
[26 40]
[27 39]
[28 38]
[29 37]
[30 36]
[47 149]
[48 148]
[49 147]
[50 146]
[51 145]
[53 143]
[54 142]
[56 140]
[57 139]
[58 138]
[59 137]
[60 136]
[61 135]
[62 134]
[63 133]
[64 132]
[65 131]
[67 129]
[68 128]
[69 127]
[72 124]
[74 122]
[75 121]
[77 118]
[78 117]
[79 116]
[80 115]
[81 114]
[83 113]
[84 112]
[85 111]
[87 109]
[88 108]
[90 106]
[91 105]
[92 104]
[93 103]
[157 166]
[158 165]
[159 164]
[175 191]
[176 190]
[177 189]
[178 188]
[179 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
