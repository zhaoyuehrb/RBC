%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sat Sep 12 00:44:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAGCUACUCCGGCAGCUACUAUGGAGGCCUAGGCUACGGCUGUGGAGGAUUCGGUGGCCUGGGCUAUGGCUAUAGCUGUGGAUGUGGCAGCUUCCGCAGACUGGGCUAUGGCUGUGGCUAUGGAGGCUACAGAUACAGCUGCUGCCACCCAUCAUGCUAUGGGGGAUACUGGUCUUCUGGAUUCUAUUGA\
) } def
/len { sequence length } bind def

/coor [
[96.37509918 325.89599609]
[83.99839783 317.42147827]
[75.65451050 304.95635986]
[72.53710175 290.28210449]
[67.05157471 304.24307251]
[61.56604385 318.20404053]
[56.08052063 332.16503906]
[58.23512650 347.83883667]
[46.37938690 356.85498047]
[49.35101318 372.98263550]
[36.69604874 383.41259766]
[21.43283463 377.41540527]
[19.26285934 361.16046143]
[32.41840363 351.36944580]
[29.87143707 336.69421387]
[42.11953735 326.67950439]
[47.60506439 312.71853638]
[53.09059143 298.75753784]
[58.57611847 284.79656982]
[56.84090805 275.00787354]
[63.70607758 266.15786743]
[66.13696289 251.35615540]
[68.56784821 236.55444336]
[66.54643250 229.43370056]
[71.16064453 221.53239441]
[73.83213806 206.77220154]
[76.50362396 192.01202393]
[79.17511749 177.25183105]
[81.84660339 162.49163818]
[84.51808929 147.73146057]
[87.18958282 132.97126770]
[71.78169250 113.50643921]
[74.07891846 91.77145386]
[88.72728729 79.82871246]
[86.05579376 65.06852722]
[83.38430786 50.30833817]
[70.68112946 41.29351807]
[68.18212128 26.28653145]
[76.85466766 14.23154736]
[74.18317413 -0.52864027]
[71.51168823 -15.28882790]
[68.84019470 -30.04901505]
[66.16870880 -44.80920410]
[63.49721909 -59.56939316]
[60.82572937 -74.32958221]
[58.15424347 -89.08976746]
[41.06363678 -99.62664795]
[37.26639175 -119.03165436]
[48.76492310 -134.74156189]
[45.37611771 -149.35374451]
[32.24803925 -157.73773193]
[29.01946640 -172.60484314]
[37.09321976 -185.06878662]
[33.70441818 -199.68098450]
[23.04942131 -211.37634277]
[27.71133232 -225.52258301]
[24.32252884 -240.13476562]
[20.93372536 -254.74694824]
[17.54492378 -269.35913086]
[14.15612030 -283.97134399]
[10.76731682 -298.58352661]
[-2.36076379 -306.96749878]
[-5.58933592 -321.83462524]
[2.48441887 -334.29855347]
[-0.90438414 -348.91076660]
[-4.29318714 -363.52294922]
[-7.68199015 -378.13513184]
[-11.07079315 -392.74731445]
[-14.45959568 -407.35949707]
[-17.84839821 -421.97167969]
[-21.23720169 -436.58386230]
[-24.62600517 -451.19607544]
[-28.01480675 -465.80825806]
[-33.00921631 -473.47491455]
[-31.33779716 -480.68582153]
[-34.48830795 -495.35122681]
[-37.63882065 -510.01663208]
[-40.90858459 -524.65594482]
[-44.29738998 -539.26812744]
[-47.68619156 -553.88031006]
[-51.07499695 -568.49249268]
[-54.46379852 -583.10467529]
[-57.85260010 -597.71685791]
[-61.24140549 -612.32904053]
[-71.89640045 -624.02441406]
[-67.23448944 -638.17065430]
[-70.62329102 -652.78283691]
[-82.20867157 -664.38934326]
[-77.68910980 -680.15338135]
[-61.71395111 -683.85833740]
[-50.71706390 -671.69274902]
[-56.01110458 -656.17163086]
[-52.62230301 -641.55944824]
[-42.20969391 -630.90924072]
[-46.62921524 -615.71783447]
[-43.24041367 -601.10565186]
[-39.85161209 -586.49346924]
[-36.46280670 -571.88128662]
[-33.07400513 -557.26910400]
[-29.68520164 -542.65692139]
[-26.29640007 -528.04473877]
[-21.71568871 -522.23028564]
[-22.97340965 -513.16717529]
[-19.82289886 -498.50173950]
[-16.67238617 -483.83633423]
[-13.40262032 -469.19705200]
[-10.01381779 -454.58486938]
[-6.62501431 -439.97268677]
[-3.23621154 -425.36050415]
[0.15259141 -410.74829102]
[3.54139423 -396.13610840]
[6.93019724 -381.52392578]
[10.31900024 -366.91174316]
[13.70780277 -352.29956055]
[17.09660530 -337.68737793]
[29.83230591 -330.04946899]
[33.47719193 -315.27890015]
[25.37950516 -301.97232056]
[28.76830673 -287.36013794]
[32.15711212 -272.74795532]
[35.54591370 -258.13574219]
[38.93471527 -243.52357483]
[42.32352066 -228.91137695]
[52.73612595 -218.26116943]
[48.31660461 -203.06977844]
[51.70540619 -188.45759583]
[64.44110870 -180.81970215]
[68.08599091 -166.04913330]
[59.98830414 -152.74255371]
[63.37710953 -138.13035583]
[73.25314331 -135.23727417]
[81.09315491 -128.44677734]
[85.43342590 -118.93772888]
[85.42688751 -108.40413666]
[81.00749969 -98.75347900]
[72.91442871 -91.76125336]
[75.58592224 -77.00106812]
[78.25740814 -62.24087906]
[80.92889404 -47.48069382]
[83.60038757 -32.72050476]
[86.27187347 -17.96031761]
[88.94336700 -3.20012927]
[91.61485291 11.56005859]
[103.96253967 19.81053162]
[106.88207245 34.74140549]
[98.14449310 47.63684845]
[100.81598663 62.39703751]
[103.48747253 77.15722656]
[124.16790009 83.54132080]
[134.49224854 107.84193420]
[148.21850586 113.89089203]
[161.94476318 119.93985748]
[175.67102051 125.98881531]
[189.39727783 132.03776550]
[204.03767395 126.08509827]
[218.56648254 132.30514526]
[224.36404419 147.00765991]
[217.99073792 161.46989441]
[203.22775269 167.11169434]
[188.83369446 160.58584595]
[183.34831238 145.76402283]
[169.62205505 139.71507263]
[155.89579773 133.66610718]
[142.16954041 127.61714935]
[128.44328308 121.56819153]
[121.81990814 125.08683014]
[130.96580505 136.97601318]
[140.14804077 148.83714294]
[132.92948914 161.98600769]
[117.99308014 160.60633850]
[113.30510712 146.35818481]
[108.57315063 132.12411499]
[101.94976807 135.64276123]
[99.27828217 150.40293884]
[96.60678864 165.16313171]
[93.93530273 179.92332458]
[91.26381683 194.68350220]
[88.59232330 209.44369507]
[85.92083740 224.20388794]
[83.36956024 238.98532104]
[80.93868256 253.78703308]
[78.50779724 268.58874512]
[88.69357300 257.57739258]
[102.24046326 251.13677979]
[117.21044922 250.18829346]
[131.46189880 254.86764526]
[142.95597839 264.50540161]
[150.04832458 277.72274780]
[151.72431946 292.62881470]
[147.74418640 307.09112549]
[138.67730713 319.04067993]
[125.82083130 326.76797485]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 19]
[5 18]
[6 17]
[7 16]
[9 14]
[21 182]
[22 181]
[23 180]
[25 179]
[26 178]
[27 177]
[28 176]
[29 175]
[30 174]
[31 173]
[34 148]
[35 147]
[36 146]
[39 143]
[40 142]
[41 141]
[42 140]
[43 139]
[44 138]
[45 137]
[46 136]
[49 130]
[50 129]
[53 126]
[54 125]
[56 123]
[57 122]
[58 121]
[59 120]
[60 119]
[61 118]
[64 115]
[65 114]
[66 113]
[67 112]
[68 111]
[69 110]
[70 109]
[71 108]
[72 107]
[73 106]
[75 105]
[76 104]
[77 103]
[78 101]
[79 100]
[80 99]
[81 98]
[82 97]
[83 96]
[84 95]
[86 93]
[87 92]
[150 165]
[151 164]
[152 163]
[153 162]
[154 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
