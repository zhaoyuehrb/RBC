%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 05:09:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGAGGAGCCCACGCCCGAGCCCGUCUAUGUCGACGUAGACAAAGGGCUGACCUUGGCCUGCUUCGUCUUCCUCUGCCUCUUCCUUGUCGUGAUGAUCAUCCGCUGUGCCAAGGUCAUCAUGGACCCUUACAGCGCCAUCCCCACAUCCACCUGGGAGGAGCAGCACCUGGACGACUGA\
) } def
/len { sequence length } bind def

/coor [
[52.51990509 160.61128235]
[46.04003143 147.08312988]
[50.87252808 132.88209534]
[36.90489960 138.35066223]
[22.93726730 143.81924438]
[8.96963692 149.28781128]
[-1.05994439 161.52374268]
[-15.73206615 158.95896912]
[-29.69969749 164.42753601]
[-39.72927856 176.66346741]
[-54.40140152 174.09869385]
[-68.36903381 179.56726074]
[-82.33666229 185.03582764]
[-92.36624146 197.27177429]
[-107.03836823 194.70698547]
[-109.52055359 208.28086853]
[-118.32128143 218.76802063]
[-131.05529785 223.49279785]
[-144.35276794 221.31912231]
[-154.75093079 212.92161560]
[-168.81137085 218.14694214]
[-182.87181091 223.37226868]
[-196.93225098 228.59759521]
[-210.99269104 233.82292175]
[-224.91233826 239.41250610]
[-238.68176270 245.36254883]
[-252.45117188 251.31260681]
[-266.22058105 257.26266479]
[-279.99002075 263.21270752]
[-293.75942993 269.16275024]
[-307.52886963 275.11279297]
[-316.87374878 288.58889771]
[-333.19223022 286.96456909]
[-339.69729614 271.91079712]
[-329.69705200 258.91357422]
[-313.47891235 261.34338379]
[-299.70947266 255.39332581]
[-285.94006348 249.44328308]
[-272.17065430 243.49322510]
[-258.40121460 237.54318237]
[-244.63180542 231.59312439]
[-230.86238098 225.64308167]
[-229.22834778 222.48994446]
[-225.97181702 219.98123169]
[-221.41696167 218.87724304]
[-216.21801758 219.76248169]
[-202.15757751 214.53715515]
[-188.09713745 209.31182861]
[-174.03669739 204.08650208]
[-159.97625732 198.86117554]
[-156.07531738 182.92834473]
[-143.32478333 172.34672546]
[-126.61435699 171.43119812]
[-112.50693512 180.73934937]
[-103.47641754 168.89456177]
[-87.80523682 171.06820679]
[-73.83760071 165.59962463]
[-59.86997223 160.13105774]
[-50.83945084 148.28627014]
[-35.16827011 150.45989990]
[-21.20063972 144.99133301]
[-12.17011547 133.14654541]
[3.50106430 135.32019043]
[17.46869469 129.85160828]
[31.43632698 124.38304138]
[45.40395737 118.91446686]
[59.06803513 112.72633362]
[72.39151764 105.83540344]
[85.71499634 98.94448090]
[93.41965485 87.27700806]
[107.39408112 87.73203278]
[120.71755981 80.84111023]
[134.04104614 73.95018768]
[139.02854919 57.19628525]
[154.28344727 49.37493896]
[170.16070557 54.88341141]
[183.36257935 47.76228714]
[196.56445312 40.64115906]
[209.64074707 33.29197311]
[222.58752441 25.71693993]
[235.53428650 18.14190865]
[248.48106384 10.56687737]
[261.42782593 2.99184608]
[274.37460327 -4.58318520]
[287.32138062 -12.15821648]
[300.26815796 -19.73324776]
[308.99298096 -35.93510818]
[326.52178955 -35.38288116]
[339.33514404 -43.18147659]
[345.05822754 -50.33612823]
[352.43923950 -51.00200272]
[358.28564453 -58.05624390]
[365.67709351 -58.59391403]
[378.75338745 -65.94309998]
[391.82968140 -73.29228973]
[404.90597534 -80.64147186]
[402.40881348 -98.00638580]
[406.74575806 -114.96913147]
[417.22903442 -128.94824219]
[432.23754883 -137.82695007]
[449.46762085 -140.27372742]
[466.28652954 -135.94194031]
[480.13476562 -125.51859283]
[492.81082153 -133.53840637]
[505.48690796 -141.55821228]
[518.16296387 -149.57801819]
[530.83905029 -157.59782410]
[543.51507568 -165.61763000]
[556.19116211 -173.63743591]
[556.49719238 -185.55415344]
[562.46765137 -195.73294067]
[572.51306152 -201.69329834]
[584.06811523 -202.04814148]
[594.24664307 -196.82496643]
[607.19342041 -204.39999390]
[620.14019775 -211.97502136]
[633.08697510 -219.55006409]
[636.84606934 -234.90078735]
[650.40191650 -243.02575684]
[665.71203613 -239.10456848]
[673.69323730 -225.46360779]
[669.61035156 -210.19580078]
[655.88580322 -202.35926819]
[640.66198730 -206.60328674]
[627.71520996 -199.02825928]
[614.76843262 -191.45321655]
[601.82171631 -183.87818909]
[598.28216553 -165.93734741]
[582.49700928 -156.08912659]
[564.21099854 -160.96138000]
[551.53491211 -152.94157410]
[538.85882568 -144.92175293]
[526.18280029 -136.90194702]
[513.50671387 -128.88214111]
[500.83065796 -120.86233521]
[488.15457153 -112.84252930]
[491.35452271 -100.62818146]
[490.98300171 -87.98914337]
[487.05999756 -75.94975281]
[479.89373779 -65.48858643]
[470.05651855 -57.45891571]
[458.33895874 -52.51914978]
[445.68652344 -51.07882690]
[433.12319946 -53.26467514]
[421.66854858 -58.90955734]
[412.25518799 -67.56517792]
[399.17889404 -60.21599197]
[386.10260010 -52.86680603]
[373.02630615 -45.51762009]
[360.01428223 -38.05522919]
[347.13372803 -30.36812782]
[334.32037354 -22.56953239]
[331.14807129 -10.87885380]
[320.51370239 -4.28143692]
[307.84317017 -6.78647661]
[294.89639282 0.78855485]
[281.94964600 8.36358643]
[269.00286865 15.93861771]
[256.05609131 23.51364899]
[243.10931396 31.08868027]
[230.16255188 38.66371155]
[217.21577454 46.23874283]
[215.15682983 50.57517242]
[210.33786011 53.65117645]
[203.68557739 53.84303665]
[190.48370361 60.96416092]
[177.28182983 68.08528900]
[175.34574890 80.84007263]
[166.27548218 90.28603363]
[153.22734070 92.81204224]
[140.93196106 87.27366638]
[127.60848236 94.16459656]
[114.28500366 101.05551910]
[106.58034515 112.72299194]
[92.60591888 112.26796722]
[79.28244019 119.15888977]
[65.95895386 126.04981232]
[79.81949615 131.78439331]
[85.71360779 145.57785034]
[80.27744293 159.55812073]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 66]
[4 65]
[5 64]
[6 63]
[8 61]
[9 60]
[11 58]
[12 57]
[13 56]
[15 54]
[20 50]
[21 49]
[22 48]
[23 47]
[24 46]
[25 42]
[26 41]
[27 40]
[28 39]
[29 38]
[30 37]
[31 36]
[67 177]
[68 176]
[69 175]
[71 173]
[72 172]
[73 171]
[76 167]
[77 166]
[78 165]
[79 162]
[80 161]
[81 160]
[82 159]
[83 158]
[84 157]
[85 156]
[86 155]
[88 152]
[89 151]
[91 150]
[93 149]
[94 148]
[95 147]
[96 146]
[103 136]
[104 135]
[105 134]
[106 133]
[107 132]
[108 131]
[109 130]
[114 127]
[115 126]
[116 125]
[117 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
