%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Sep  9 22:35:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAUUGUGCUUGGCUGGAUGUUUUUUGUUGGACUUGUGUGUUACAUGGGCACGUUUCCAGAGUUGAUGCCUCCAACUCUGAAGUGGCAGGAGAGGUGGCCUGUUCAGGAGAGCAAAACACAACUGAGGAGGCGGGCUUUAGGUGAAGAUCUGCUGCAGAACCAUGUGGAAGGGAUAUAA\
) } def
/len { sequence length } bind def

/coor [
[94.61521912 448.52133179]
[79.73970032 454.52951050]
[65.83894348 446.52026367]
[63.57641983 430.63754272]
[74.68774414 419.06524658]
[75.72832489 404.10137939]
[76.76889801 389.13751221]
[77.80947113 374.17364502]
[78.85005188 359.20977783]
[79.76072693 344.23745728]
[80.54142761 329.25778198]
[81.32213593 314.27813721]
[71.19274902 303.41851807]
[71.77110291 288.21588135]
[83.23033142 277.66488647]
[84.01103973 262.68521118]
[84.79174805 247.70553589]
[77.72734833 234.59280396]
[86.17242432 221.21405029]
[86.95312500 206.23437500]
[87.73383331 191.25471497]
[80.66944122 178.14198303]
[89.11450958 164.76321411]
[89.89521790 149.78355408]
[90.67592621 134.80387878]
[91.45662689 119.82421112]
[86.26963043 114.40710449]
[75.43524933 124.78092957]
[65.06160736 113.94637299]
[75.89562225 103.57289886]
[70.70862579 98.15579224]
[55.70919037 98.28596497]
[40.70975494 98.41613770]
[29.67159653 109.40689850]
[14.45818138 109.32524109]
[4.04819584 98.73431396]
[-10.95123959 98.86448669]
[-25.95067406 98.99466705]
[-40.95011139 99.12483978]
[-55.94954300 99.25501251]
[-69.68205261 107.11178589]
[-82.47599030 99.48522949]
[-94.70152283 109.87348175]
[-110.41757202 106.65087128]
[-117.56813812 92.28949738]
[-110.66790771 77.80618286]
[-95.01015472 74.31128693]
[-82.60616302 84.48579407]
[-69.94651794 76.63832855]
[-56.07971954 84.25557709]
[-41.08028412 84.12540436]
[-26.08084869 83.99523163]
[-11.08141422 83.86505127]
[3.91802096 83.73487854]
[14.14262199 72.96486664]
[29.35232735 72.61917877]
[40.57957840 83.41670990]
[55.57901382 83.28652954]
[70.57845306 83.15635681]
[76.76658630 69.49227905]
[66.97053528 58.13282013]
[57.17448044 46.77335739]
[47.37842941 35.41389847]
[37.58237457 24.05443573]
[27.78632355 12.69497395]
[17.99027061 1.33551311]
[2.35760140 1.72751141]
[-9.83739662 -8.06105518]
[-12.83661842 -23.40832520]
[-5.22392273 -37.06778717]
[9.40620804 -42.58985901]
[24.14587402 -37.36719131]
[32.03545380 -23.86576271]
[29.34973145 -8.46053886]
[39.14578629 2.89892197]
[48.94183731 14.25838280]
[58.73788834 25.61784363]
[68.53394318 36.97730637]
[78.32999420 48.33676529]
[88.12604523 59.69622803]
[100.44163513 66.38504028]
[107.76009369 76.00435638]
[109.66937256 86.23641205]
[106.65985870 94.84479523]
[119.60663605 87.26976013]
[132.55340576 79.69473267]
[145.50018311 72.11969757]
[158.44694519 64.54467010]
[171.39372253 56.96963882]
[184.34048462 49.39460754]
[197.28726196 41.81957245]
[209.60351562 33.25744629]
[221.21414185 23.76042747]
[232.82476807 14.26340771]
[244.43539429 4.76638889]
[250.21855164 -9.95997143]
[264.96875000 -12.02905369]
[270.75189209 -26.75541306]
[285.50207520 -28.82449722]
[297.11270142 -38.32151413]
[308.72332764 -47.81853485]
[320.33395386 -57.31555176]
[326.11712646 -72.04191589]
[340.86730957 -74.11100006]
[352.47793579 -83.60801697]
[364.08856201 -93.10503387]
[375.69918823 -102.60205078]
[387.30981445 -112.09907532]
[382.56524658 -126.51619720]
[383.35302734 -141.67349243]
[389.56661987 -155.52108765]
[400.36569214 -166.18617249]
[414.28979492 -172.22640991]
[429.45574951 -172.82489014]
[443.81250000 -167.90069580]
[455.41842651 -158.11975098]
[462.70394897 -144.80487061]
[464.68368530 -129.75679016]
[461.08996582 -115.01061249]
[452.40878296 -102.56066132]
[439.81417847 -94.09067535]
[425.00949097 -90.74615479]
[409.99694824 -92.97942352]
[396.80682373 -100.48844910]
[385.19619751 -90.99142456]
[373.58557129 -81.49440765]
[361.97494507 -71.99739075]
[350.36431885 -62.50037003]
[345.41165161 -48.45330048]
[329.83099365 -45.70492935]
[318.22036743 -36.20790863]
[306.60974121 -26.71088982]
[294.99911499 -17.21387100]
[290.04641724 -3.16680145]
[274.46575928 -0.41842824]
[269.51306152 13.62864113]
[253.93240356 16.37701416]
[242.32177734 25.87403297]
[230.71115112 35.37105179]
[219.10052490 44.86807251]
[234.10052490 44.88128281]
[246.77885437 52.89751816]
[253.22279358 66.44284058]
[251.44363403 81.33695221]
[241.99044800 92.98329926]
[227.78065491 97.78765106]
[213.19960022 94.26729584]
[202.74723816 83.50867462]
[199.64930725 68.83206940]
[204.86228943 54.76634598]
[191.91552734 62.34137726]
[178.96875000 69.91641235]
[166.02197266 77.49143982]
[153.07521057 85.06647491]
[140.12843323 92.64150238]
[127.18166351 100.21653748]
[114.23489380 107.79156494]
[106.43629456 120.60491943]
[105.65559387 135.58457947]
[104.87488556 150.56425476]
[104.09417725 165.54393005]
[111.10273743 179.72810364]
[102.71350098 192.03541565]
[101.93280029 207.01509094]
[101.15209198 221.99475098]
[108.16064453 236.17892456]
[99.77141571 248.48623657]
[98.99070740 263.46591187]
[98.21000671 278.44558716]
[108.51034546 290.13064575]
[107.50520325 305.31103516]
[96.30180359 315.05883789]
[95.52110291 330.03851318]
[94.74039459 345.01815796]
[97.42428589 353.77828979]
[93.81391144 360.25036621]
[92.77333832 375.21423340]
[91.73275757 390.17810059]
[90.69218445 405.14196777]
[89.65161133 420.10583496]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 180]
[6 179]
[7 178]
[8 177]
[9 176]
[10 174]
[11 173]
[12 172]
[15 169]
[16 168]
[17 167]
[19 165]
[20 164]
[21 163]
[23 161]
[24 160]
[25 159]
[26 158]
[31 59]
[32 58]
[33 57]
[36 54]
[37 53]
[38 52]
[39 51]
[40 50]
[42 48]
[60 80]
[61 79]
[62 78]
[63 77]
[64 76]
[65 75]
[66 74]
[84 157]
[85 156]
[86 155]
[87 154]
[88 153]
[89 152]
[90 151]
[91 150]
[92 140]
[93 139]
[94 138]
[95 137]
[97 135]
[99 133]
[100 132]
[101 131]
[102 130]
[104 128]
[105 127]
[106 126]
[107 125]
[108 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
