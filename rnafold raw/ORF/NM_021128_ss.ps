%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 15:39:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAUCAUCCCUGUACGCUGCUUCACUUGUGGCAAGAUCGUCGGCAACAAGUGGGAGGCUUACCUGGGGCUGCUGCAGGCCGAGUACACCGAGGGGGAUGCGCUGGAUGCCCUGGGCCUGAAGCGCUACUGCUGCCGCCGGAUGCUGCUGGCCCACGUGGACCUGAUCGAGAAGCUGCUCAAUUAUGCACCCCUGGAGAAGUGA\
) } def
/len { sequence length } bind def

/coor [
[84.46235657 1025.90368652]
[69.63616180 1032.03259277]
[55.67076111 1024.13659668]
[53.27921677 1008.27276611]
[64.29611969 996.61053467]
[65.21503448 981.63873291]
[66.13394928 966.66687012]
[67.05286407 951.69506836]
[57.02412415 940.74243164]
[57.74275589 925.54577637]
[69.29887390 915.10101318]
[70.21778870 900.12915039]
[63.27470398 886.95178223]
[71.84288025 873.65155029]
[72.76179504 858.67968750]
[59.77027130 848.64843750]
[55.27112579 832.69079590]
[61.22751999 817.03997803]
[75.47786713 807.93249512]
[76.16723633 792.94830322]
[76.85661316 777.96417236]
[62.25136566 772.08990479]
[50.52000809 761.55230713]
[43.09278488 747.61138916]
[40.88364410 731.94354248]
[44.17778778 716.44000244]
[52.59503174 702.97845459]
[65.13356018 693.19580078]
[80.28914642 688.28894043]
[80.74881744 673.29595947]
[81.20848846 658.30297852]
[81.66816711 643.31005859]
[82.12783813 628.31707764]
[70.85749817 621.15527344]
[64.54816437 609.26379395]
[64.94291687 595.69964600]
[72.04553986 584.01013184]
[84.09163666 577.30517578]
[84.78101349 562.32098389]
[85.47039032 547.33685303]
[86.04492950 532.34783936]
[86.50460052 517.35491943]
[86.96427155 502.36193848]
[87.42395020 487.36898804]
[75.55448914 478.41055298]
[71.18441772 464.01031494]
[76.19020081 449.62991333]
[88.85009003 440.85305786]
[89.30976868 425.86010742]
[81.96612549 412.90170288]
[90.12269592 399.34512329]
[90.58236694 384.35217285]
[91.04204559 369.35922241]
[91.50171661 354.36624146]
[91.96138763 339.37329102]
[82.83489990 324.38653564]
[92.65005493 308.80886841]
[92.87992096 293.81063843]
[93.10978699 278.81240845]
[83.75470734 263.96725464]
[93.32999420 248.24101257]
[93.32999420 233.24101257]
[85.59269714 220.51374817]
[93.32999420 206.71357727]
[93.32999420 191.71357727]
[93.32999420 176.71357727]
[93.32999420 161.71357727]
[93.21505737 146.71401978]
[92.98519897 131.71577454]
[92.75533295 116.71753693]
[77.06817627 101.32211304]
[86.12776184 76.00083160]
[84.06546021 61.14328003]
[82.00315857 46.28572464]
[72.44199371 33.68038177]
[78.35598755 20.01019669]
[76.29368591 5.15264320]
[74.23139191 -9.70491123]
[72.16909027 -24.56246567]
[70.10678864 -39.42002106]
[68.04448700 -54.27757263]
[58.48332214 -66.88291931]
[64.39731598 -80.55310059]
[62.33501434 -95.41065979]
[50.01326370 -104.94020081]
[48.13344955 -120.03725433]
[57.29434967 -131.72543335]
[55.23204803 -146.58299255]
[45.67088318 -159.18832397]
[51.58487701 -172.85852051]
[42.02371216 -185.46385193]
[47.93770599 -199.13404846]
[45.87540436 -213.99159241]
[36.31423950 -226.59693909]
[42.22823334 -240.26712036]
[30.35092354 -251.05180359]
[31.52108765 -267.05212402]
[44.84107208 -275.99401855]
[60.09292984 -271.01803589]
[65.57673645 -255.94131470]
[57.08578873 -242.32942200]
[66.49944305 -230.78678894]
[60.73295975 -216.05389404]
[62.79525757 -201.19635010]
[72.20891571 -189.65371704]
[66.44242859 -174.92082214]
[75.85608673 -163.37818909]
[70.08959961 -148.64527893]
[72.15190125 -133.78773499]
[84.14988708 -125.03650665]
[86.45300293 -109.99821472]
[77.19256592 -97.47296143]
[79.25486755 -82.61540222]
[88.66852570 -71.07276917]
[82.90203857 -56.33987427]
[84.96434021 -41.48231888]
[87.02664185 -26.62476540]
[89.08894348 -11.76721191]
[91.15124512 3.09034228]
[93.21354675 17.94789696]
[102.62719727 29.49053001]
[96.86071777 44.22342682]
[98.92301941 59.08097839]
[100.98531342 73.93853760]
[115.17845917 78.79185486]
[125.90626526 68.30786133]
[129.80903625 52.37988663]
[145.62794495 48.05622101]
[157.08985901 59.78467941]
[152.40373230 75.50003052]
[136.39025879 79.03566742]
[125.66245270 89.51966858]
[121.40090942 108.34372711]
[107.75357056 116.48767090]
[107.98343658 131.48591614]
[108.21330261 146.48414612]
[111.47512054 155.02156067]
[108.32999420 161.71357727]
[108.32999420 176.71357727]
[108.32999420 191.71357727]
[108.32999420 206.71357727]
[116.06729889 220.51374817]
[108.32999420 233.24101257]
[108.32999420 248.24101257]
[116.88340759 257.89929199]
[116.57192230 270.39581299]
[108.10802460 279.04226685]
[107.87815857 294.04049683]
[107.64830017 309.03875732]
[116.05269623 318.82696533]
[115.54975128 331.31723022]
[106.95434570 339.83297729]
[106.49467468 354.82592773]
[106.03499603 369.81887817]
[105.57532501 384.81182861]
[105.11565399 399.80477905]
[112.42641449 413.83560181]
[104.30271912 426.31979370]
[103.84304810 441.31274414]
[115.94148254 450.84866333]
[120.05690765 465.50869751]
[114.81287384 479.61416626]
[102.41690063 487.82867432]
[101.95722961 502.82162476]
[101.49755859 517.81457520]
[101.03787994 532.80755615]
[103.90389252 541.48583984]
[100.45453644 548.02624512]
[99.76515961 563.01037598]
[99.07579041 577.99450684]
[112.42967987 588.37200928]
[116.92386627 604.50366211]
[110.97850800 619.98077393]
[97.12079620 628.77679443]
[96.66111755 643.76971436]
[96.20144653 658.76269531]
[95.74177551 673.75561523]
[95.28209686 688.74859619]
[108.71098328 693.75219727]
[119.92087555 702.64569092]
[127.82369232 714.54901123]
[131.65757751 728.29058838]
[131.06036377 742.52301025]
[126.10367584 755.85485840]
[117.28470612 766.98699951]
[105.47634125 774.83886719]
[91.84076691 778.65356445]
[91.15139008 793.63769531]
[90.46201324 808.62188721]
[101.84157562 816.40460205]
[107.84087372 828.69683838]
[106.98850250 842.23992920]
[99.61395264 853.50189209]
[87.73362732 859.59863281]
[86.81471252 874.57043457]
[93.69206238 888.81872559]
[85.18961334 901.04809570]
[84.27069855 916.01989746]
[94.46276093 927.79949951]
[93.31757355 942.96997070]
[82.02468872 952.61395264]
[81.10577393 967.58581543]
[80.18685913 982.55761719]
[79.26794434 997.52947998]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 204]
[6 203]
[7 202]
[8 201]
[11 198]
[12 197]
[14 195]
[15 194]
[19 189]
[20 188]
[21 187]
[29 178]
[30 177]
[31 176]
[32 175]
[33 174]
[38 170]
[39 169]
[40 168]
[41 166]
[42 165]
[43 164]
[44 163]
[48 159]
[49 158]
[51 156]
[52 155]
[53 154]
[54 153]
[55 152]
[57 149]
[58 148]
[59 147]
[61 144]
[62 143]
[64 141]
[65 140]
[66 139]
[67 138]
[68 136]
[69 135]
[70 134]
[72 124]
[73 123]
[74 122]
[76 120]
[77 119]
[78 118]
[79 117]
[80 116]
[81 115]
[83 113]
[84 112]
[87 109]
[88 108]
[90 106]
[92 104]
[93 103]
[95 101]
[125 132]
[126 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
