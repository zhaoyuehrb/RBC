%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 22:27:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGACCCCAACUGCUCCUGCGCCGCUGGAGGCUCCUACGCCUGCGCCGGCUCCUGCAAGUGCAAAAAGUGCAAAUGCACCUCCUGCAAGAAGAGCUGCUGCUCCUGUUGCCCCCUGGGCUGUGCCAAGUGUGCCCAGGGCUGCAUCCGCAAAGGGGCUUCGGAAAAGUGCAGCUGCUGUGCCUGA\
) } def
/len { sequence length } bind def

/coor [
[88.70479584 542.96008301]
[81.14026642 530.00695801]
[78.13671112 544.70318604]
[75.13316345 559.39941406]
[77.88547516 576.12847900]
[62.57211685 583.40429688]
[51.34148788 570.70349121]
[60.43695068 556.39587402]
[63.44050217 541.69964600]
[66.44405365 527.00341797]
[68.45398712 512.13867188]
[69.46121979 497.17254639]
[62.59601212 483.95446777]
[71.24252319 470.70498657]
[72.24976349 455.73883057]
[62.28582001 444.72723389]
[63.09410477 429.53509521]
[74.71165466 419.15866089]
[75.71888733 404.19250488]
[76.72612762 389.22637939]
[77.73336792 374.26022339]
[78.74060822 359.29406738]
[79.74784851 344.32794189]
[66.81941223 334.22747803]
[62.40742111 318.25326538]
[68.43890381 302.63937378]
[82.72467804 293.60192871]
[75.63838959 280.50100708]
[84.06109619 267.10815430]
[84.81677246 252.12719727]
[85.57244873 237.14625549]
[86.32813263 222.16529846]
[87.08380890 207.18434143]
[87.83948517 192.20338440]
[88.59516144 177.22244263]
[89.35084534 162.24148560]
[90.10652161 147.26052856]
[76.89823914 145.89993286]
[63.81830597 140.73899841]
[51.97749710 131.78263855]
[42.48337936 119.36181641]
[36.34497070 104.12960052]
[34.38000488 87.02939606]
[19.76413727 83.65649414]
[5.14827204 80.28359222]
[-9.46759415 76.91069031]
[-24.08345985 73.53778839]
[-37.38122559 81.64994812]
[-52.15574646 78.02114105]
[-59.80749893 65.29376221]
[-74.42336273 61.92085648]
[-89.93871307 67.23178101]
[-102.11621857 56.24813843]
[-98.42870331 40.26895905]
[-82.66957092 35.73225021]
[-71.05046082 47.30499268]
[-56.43459702 50.67789078]
[-43.97943878 42.59057999]
[-29.10882568 45.80297470]
[-20.71055794 58.92192459]
[-6.09469223 62.29482651]
[8.52117348 65.66773224]
[23.13703918 69.04062653]
[37.75290680 72.41352844]
[41.86056519 66.13841248]
[29.31046486 57.92288208]
[37.52620316 45.37291718]
[50.07588959 53.58817673]
[54.18355179 47.31305695]
[45.24489975 35.26728821]
[36.30624771 23.22152138]
[27.36759567 11.17575455]
[12.11286354 5.15701723]
[9.96583557 -11.10097504]
[23.13518906 -20.87339211]
[38.07342148 -14.10721111]
[39.41336060 2.23710322]
[48.35201263 14.28287029]
[57.29066467 26.32863617]
[66.22931671 38.37440491]
[73.52282715 36.62662888]
[65.69087982 23.83363533]
[75.43767548 12.43188286]
[89.29324341 18.17847252]
[88.10984802 33.13107300]
[95.40335083 31.38329506]
[97.91151428 16.59447670]
[100.41967010 1.80565882]
[102.92782593 -12.98315907]
[97.60698700 -27.88279915]
[107.36348724 -39.13713074]
[102.04265594 -54.03676987]
[111.79915619 -65.29109955]
[114.30731201 -80.07991791]
[116.81546783 -94.86873627]
[119.32362366 -109.65755463]
[113.11010742 -124.83399200]
[123.35914612 -137.63591003]
[139.52740479 -134.89379883]
[144.98237610 -119.42851257]
[134.11244202 -107.14939880]
[131.60429382 -92.36058044]
[129.09613037 -77.57176208]
[126.58797455 -62.78294373]
[132.08821106 -48.94109726]
[122.15230560 -36.62897491]
[127.65254211 -22.78712845]
[117.71664429 -10.47500229]
[115.20848846 4.31381559]
[112.70033264 19.10263443]
[110.19216919 33.89145279]
[130.24256897 50.99302292]
[139.35530090 72.02502441]
[152.78274536 65.33895111]
[166.21020508 58.65287781]
[179.63764954 51.96680069]
[193.06509399 45.28072739]
[206.49255371 38.59465027]
[219.91999817 31.90857697]
[233.34744263 25.22249985]
[233.09446716 9.96148014]
[239.49584961 -3.89438963]
[251.28057861 -13.59401512]
[266.10879517 -17.21152878]
[281.03637695 -14.02867126]
[293.09939575 -4.67739964]
[299.90274048 8.98558235]
[300.09564209 24.24748230]
[293.63973999 38.07803345]
[281.81689453 47.73117828]
[266.97454834 51.29027176]
[252.05963135 48.04865265]
[240.03352356 38.64995193]
[226.60607910 45.33602524]
[213.17861938 52.02210236]
[199.75117493 58.70817566]
[186.32373047 65.39424896]
[172.89627075 72.08032990]
[159.46882629 78.76640320]
[146.04138184 85.45247650]
[147.90219116 93.93218994]
[148.21449280 102.60806274]
[162.88494873 105.73495483]
[177.55541992 108.86184692]
[192.97935486 103.29102325]
[205.33966064 114.06854248]
[201.92111206 130.10742188]
[186.24040222 134.90823364]
[174.42852783 123.53231049]
[159.75805664 120.40541840]
[145.08760071 117.27852631]
[129.42083740 138.28646851]
[105.08747101 148.01620483]
[104.33179474 162.99716187]
[103.57611847 177.97811890]
[102.82044220 192.95907593]
[102.06475830 207.94001770]
[101.30908203 222.92097473]
[100.55340576 237.90193176]
[99.79772186 252.88288879]
[99.04204559 267.86383057]
[106.07428741 282.03628540]
[97.70563507 294.35760498]
[109.05722809 302.19711304]
[115.00080109 314.52648926]
[114.07804871 328.07397461]
[106.63719940 339.30297852]
[94.71398926 345.33517456]
[93.70674896 360.30133057]
[92.69950867 375.26745605]
[91.69227600 390.23361206]
[90.68503571 405.19973755]
[89.67779541 420.16589355]
[99.80017853 432.00546265]
[98.56549835 447.16891479]
[87.21590424 456.74609375]
[86.20866394 471.71221924]
[93.00183105 486.00079346]
[84.42736816 498.17980957]
[83.42012787 513.14593506]
[94.15288544 502.66702271]
[108.97587585 500.36944580]
[122.37727356 507.10757446]
[129.37385559 520.37591553]
[127.36396790 535.24060059]
[117.09499359 546.17443848]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 10]
[3 9]
[4 8]
[11 180]
[12 179]
[14 177]
[15 176]
[18 173]
[19 172]
[20 171]
[21 170]
[22 169]
[23 168]
[27 163]
[29 161]
[30 160]
[31 159]
[32 158]
[33 157]
[34 156]
[35 155]
[36 154]
[37 153]
[43 64]
[44 63]
[45 62]
[46 61]
[47 60]
[50 57]
[51 56]
[69 80]
[70 79]
[71 78]
[72 77]
[86 111]
[87 110]
[88 109]
[89 108]
[91 106]
[93 104]
[94 103]
[95 102]
[96 101]
[113 140]
[114 139]
[115 138]
[116 137]
[117 136]
[118 135]
[119 134]
[120 133]
[142 151]
[143 150]
[144 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
