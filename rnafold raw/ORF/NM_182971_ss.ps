%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 07:10:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCCUCUCCUGCGUGGGCGCUGUCCUGCCCGCCGCCACUACCGCCGCUUGGCCCUGCUCGGCCUGCAGCCCGCUCCCCGCUUCGCCCACUCGGGGCCCCCGCGCCAGCGGCCCCUGUCUGCCGCGGAAAUGGCUGUUGGACUUGUGGUGUUUUUUACGACCUUCUUAACACCAGCUGCAUAUGUGCUAGGCAACCUGAAGCAGUUCAGAAGGAAUUAG\
) } def
/len { sequence length } bind def

/coor [
[95.47520447 269.28558350]
[80.67633057 265.69207764]
[68.62246704 256.38485718]
[61.40201569 242.97645569]
[60.26596451 227.78997803]
[65.41114044 213.45655823]
[75.94610596 202.45953369]
[90.04562378 196.70423889]
[90.47396851 181.71035767]
[90.90230560 166.71647644]
[91.33065033 151.72259521]
[77.27640533 146.48062134]
[67.78121185 158.09274292]
[58.28602982 169.70487976]
[48.87399292 181.38449097]
[39.54558945 193.13102722]
[30.21718597 204.87754822]
[20.88878250 216.62408447]
[11.56037903 228.37060547]
[2.23197508 240.11712646]
[4.28230095 255.78785706]
[-5.41488504 268.26745605]
[-21.10641479 270.15197754]
[-33.48278046 260.32339478]
[-35.20130539 244.61280823]
[-25.24242020 232.34104919]
[-9.51455116 230.78872681]
[-0.18614793 219.04220581]
[9.14225578 207.29566956]
[18.47065926 195.54914856]
[27.79906273 183.80262756]
[37.12746811 172.05609131]
[38.82450867 164.86805725]
[46.67390442 160.20968628]
[56.16909027 148.59756470]
[65.66427612 136.98544312]
[61.83725357 130.53533936]
[48.93703842 138.18937683]
[39.03329849 149.45507812]
[25.25863266 143.51718140]
[26.64949036 128.58180237]
[41.28298950 125.28916931]
[54.18320084 117.63511658]
[50.35617828 111.18501282]
[35.61389923 113.95363617]
[20.87162399 116.72226715]
[8.78615856 127.80709839]
[-6.77295065 122.62577057]
[-9.79982567 106.50839233]
[2.81932306 96.03513336]
[18.10299683 101.97998810]
[32.84527206 99.21136475]
[47.58755112 96.44273376]
[62.72327805 72.73405457]
[85.39005280 62.94038010]
[106.26616669 67.10478210]
[112.30191803 53.37271500]
[118.33767700 39.64064789]
[124.37342834 25.90858078]
[122.84311676 10.16155815]
[135.04763794 1.62347031]
[141.08338928 -12.10859680]
[147.11914062 -25.84066391]
[153.05670166 -39.61547852]
[158.59848022 -53.55422592]
[163.84043884 -67.60846710]
[169.08239746 -81.66271973]
[174.32437134 -95.71696472]
[179.56632996 -109.77120972]
[184.80828857 -123.82545471]
[177.93345642 -110.49366760]
[165.72024536 -101.78518677]
[150.87583923 -99.63031769]
[136.69059753 -104.50670624]
[126.30882263 -115.33346558]
[122.03169250 -129.71073914]
[124.80728912 -144.45170593]
[134.02037048 -156.28890991]
[147.62960815 -162.59867859]
[140.06785583 -175.55322266]
[132.50611877 -188.50775146]
[115.65172577 -189.96820068]
[103.11503601 -201.07844543]
[99.70749664 -217.30967712]
[106.57868195 -232.22155762]
[98.83271790 -245.06678772]
[91.08675385 -257.91201782]
[83.34079742 -270.75726318]
[68.17646027 -275.99392700]
[62.95185471 -291.16241455]
[71.67485046 -304.62677002]
[87.65390778 -306.05828857]
[98.63126373 -294.35882568]
[96.18602753 -278.50323486]
[103.93199158 -265.65798950]
[111.67795563 -252.81275940]
[119.42391968 -239.96751404]
[132.77061462 -240.06497192]
[144.51766968 -233.50361633]
[151.54602051 -221.90315247]
[151.92933655 -208.23680115]
[145.46064758 -196.06950378]
[153.02239990 -183.11495972]
[160.58413696 -170.16043091]
[175.52911377 -171.44406128]
[180.77108765 -185.49830627]
[186.01304626 -199.55255127]
[191.25500488 -213.60679626]
[196.49697876 -227.66104126]
[201.73893738 -241.71528625]
[206.98089600 -255.76953125]
[212.22285461 -269.82379150]
[217.46482849 -283.87802124]
[209.01608276 -294.76406860]
[207.06335449 -308.29562378]
[212.01065063 -320.92468262]
[222.46678162 -329.39306641]
[235.63462830 -331.57293701]
[241.07673645 -345.55090332]
[246.51885986 -359.52886963]
[251.96096802 -373.50683594]
[252.07316589 -390.46041870]
[268.39526367 -395.04580688]
[277.31985474 -380.63098145]
[265.93893433 -368.06472778]
[260.49682617 -354.08676147]
[255.05470276 -340.10879517]
[249.61259460 -326.13082886]
[258.92593384 -312.60903931]
[258.33609009 -296.03448486]
[247.87756348 -282.94918823]
[231.51907349 -278.63604736]
[226.27709961 -264.58181763]
[221.03514099 -250.52757263]
[215.79318237 -236.47332764]
[210.55122375 -222.41908264]
[205.30924988 -208.36483765]
[200.06729126 -194.31059265]
[194.82533264 -180.25634766]
[189.58335876 -166.20208740]
[194.28938293 -160.36228943]
[202.48904419 -172.92276001]
[216.96855164 -169.00564575]
[217.71737671 -154.02433777]
[203.70141602 -148.68266296]
[208.40744019 -142.84284973]
[223.25476074 -144.97756958]
[238.10208130 -147.11228943]
[252.94940186 -149.24700928]
[267.79672241 -151.38174438]
[282.64404297 -153.51646423]
[297.49136353 -155.65118408]
[300.87564087 -170.44682312]
[309.37945557 -183.01861572]
[321.85269165 -191.66632080]
[336.60845947 -195.22041321]
[351.65115356 -193.20024109]
[364.94641113 -185.87898254]
[374.69613647 -174.24681091]
[379.58175659 -159.87687683]
[378.94253540 -144.71258545]
[372.86489868 -130.80477905]
[362.17083740 -120.03438568]
[348.30661011 -113.85801697]
[333.14724731 -113.11096191]
[318.74291992 -117.89425659]
[307.04168701 -127.56101227]
[299.62609863 -140.80386353]
[284.77877808 -138.66914368]
[269.93145752 -136.53442383]
[255.08412170 -134.39968872]
[240.23680115 -132.26496887]
[225.38948059 -130.13024902]
[210.54216003 -127.99552917]
[198.86253357 -118.58348846]
[193.62057495 -104.52924347]
[188.37861633 -90.47499847]
[183.13664246 -76.42075348]
[177.89468384 -62.36650848]
[172.65272522 -48.31226349]
[173.77232361 -44.97539139]
[173.33538818 -40.93128967]
[171.02742004 -36.91558456]
[166.87355042 -33.77642441]
[167.16500854 -26.39653397]
[160.85121155 -19.80491066]
[154.81546021 -6.07284355]
[148.77970886 7.65922403]
[150.74172974 22.42403793]
[138.10549927 31.94433403]
[132.06974792 45.67640305]
[126.03398895 59.40847015]
[119.99823761 73.14053345]
[131.58287048 88.86975098]
[132.41949463 108.38671875]
[122.22337341 125.04958344]
[129.41210938 138.21476746]
[136.60084534 151.37995911]
[143.78958130 164.54513550]
[150.97831726 177.71032715]
[165.25523376 185.77888489]
[165.13552856 202.17759705]
[150.74234009 210.03686523]
[136.88214111 201.27175903]
[137.81312561 184.89906311]
[130.62438965 171.73387146]
[123.43566132 158.56869507]
[116.24692535 145.40350342]
[109.05818939 132.23832703]
[108.43084717 142.17546082]
[106.32453156 152.15092468]
[105.89618683 167.14480591]
[105.46784973 182.13870239]
[105.03950500 197.13258362]
[118.78746796 203.68342590]
[128.67744446 215.26393127]
[132.99595642 229.86770630]
[130.99478149 244.96456909]
[123.02062988 257.93887329]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 214]
[9 213]
[10 212]
[11 211]
[12 36]
[13 35]
[14 34]
[15 32]
[16 31]
[17 30]
[18 29]
[19 28]
[20 27]
[44 53]
[45 52]
[46 51]
[56 193]
[57 192]
[58 191]
[59 190]
[61 188]
[62 187]
[63 186]
[64 184]
[65 180]
[66 179]
[67 178]
[68 177]
[69 176]
[70 175]
[79 104]
[80 103]
[81 102]
[85 97]
[86 96]
[87 95]
[88 94]
[105 140]
[106 139]
[107 138]
[108 137]
[109 136]
[110 135]
[111 134]
[112 133]
[113 132]
[118 128]
[119 127]
[120 126]
[121 125]
[146 174]
[147 173]
[148 172]
[149 171]
[150 170]
[151 169]
[152 168]
[196 209]
[197 208]
[198 207]
[199 206]
[200 205]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
