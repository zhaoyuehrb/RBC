%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 20:08:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGACACCCAGAAGGACGUUCAACCUCCAAAGCAGCAACCAAUGAUAUAUAUCUGUGGAGAGUGUCACACAGAAAAUGAAAUAAAAUCUAGGGAUCCAAUCAGAUGCAGAGAAUGUGGAUACAGAAUAAUGUACAAGAAAAGGACUAAAAGAUUGGUCGUUUUUGAUGCUCGAUGA\
) } def
/len { sequence length } bind def

/coor [
[-1.04254043 245.67895508]
[-18.50674629 248.13542175]
[-24.91259384 261.69879150]
[-31.31843948 275.26217651]
[-37.72428513 288.82553101]
[-44.13013458 302.38891602]
[-39.03347778 317.10836792]
[-45.72313309 330.77230835]
[-59.78727722 335.54046631]
[-66.19312286 349.10385132]
[-64.30543518 365.39398193]
[-77.62883759 374.95529175]
[-92.45735931 367.95193481]
[-93.53668213 351.58834839]
[-79.75650024 342.69799805]
[-73.35065460 329.13461304]
[-78.60233307 315.24377441]
[-72.29911041 301.39733887]
[-57.69350815 295.98306274]
[-51.28766251 282.41970825]
[-44.88181305 268.85632324]
[-38.47596741 255.29295349]
[-32.07012177 241.72956848]
[-39.43440247 232.03598022]
[-41.98191071 220.05792236]
[-39.16683960 208.06564331]
[-31.46578789 198.35896301]
[-20.29833794 192.82627869]
[-7.76567030 192.57731628]
[-0.88514262 179.24845886]
[-5.64332199 165.18093872]
[1.14463651 151.56556702]
[15.93221474 146.67013550]
[16.20726776 139.26184082]
[23.05360222 133.16835022]
[30.16829300 119.96301270]
[37.28298187 106.75765991]
[44.39767075 93.55231476]
[31.82296371 101.73013306]
[19.24825668 109.90795135]
[9.29474735 121.12969971]
[-4.50587749 127.00701141]
[-19.49387932 126.40717316]
[-32.78068161 119.44578552]
[-41.80557251 107.46449280]
[-44.82921982 92.77239990]
[-41.26889420 78.20105743]
[-31.81075668 66.55873871]
[-18.27763748 60.08921814]
[-3.27771974 60.03934097]
[10.29808235 66.41869354]
[25.08013153 68.96643829]
[39.86218262 71.51418304]
[28.11116600 62.19143295]
[16.36015129 52.86868668]
[4.60913563 43.54593658]
[-7.14187956 34.22319031]
[-18.89289474 24.90044022]
[-30.72572136 15.68175220]
[-42.63943863 6.56784391]
[-58.66792297 7.25146055]
[-69.08684540 -4.94795036]
[-65.90370178 -20.67204475]
[-51.56032562 -27.85864449]
[-37.05973053 -20.99480247]
[-33.52553177 -5.34587383]
[-21.61181259 3.76803493]
[-14.36689568 5.33955717]
[-9.57014656 13.14942455]
[2.18086886 22.47217369]
[13.93188381 31.79492188]
[25.68289948 41.11766815]
[37.43391418 50.44041824]
[49.18492889 59.76316833]
[56.45713806 57.92877960]
[50.61421585 44.11355972]
[44.77129364 30.29834366]
[38.92837143 16.48312569]
[30.23314095 4.26048374]
[32.60024643 -10.55156612]
[44.67170334 -19.45549393]
[59.52223206 -17.34320259]
[68.63223267 -5.42649412]
[66.77492523 9.45893955]
[68.18379974 24.39262962]
[69.59268188 39.32631683]
[71.00155640 54.26000595]
[78.27376556 52.42562103]
[84.19695282 38.64462280]
[90.12014008 24.86362457]
[84.50718689 10.33322430]
[90.71045685 -3.55828810]
[104.59755707 -8.81983185]
[102.93844604 -24.55380440]
[115.07269287 -33.19147491]
[120.99587250 -46.97247314]
[126.91905975 -60.75346756]
[120.83275604 -75.33882141]
[126.91967773 -89.92391205]
[141.56855774 -95.85567474]
[156.08848572 -89.61489105]
[161.86503601 -74.90411377]
[155.47108459 -60.45098114]
[140.70005798 -54.83028412]
[134.77687073 -41.04928589]
[128.85368347 -27.26828957]
[130.93647766 -12.52002525]
[118.37855530 -2.89664721]
[124.11719513 10.80020046]
[118.30655670 24.86046982]
[103.90113068 30.78680992]
[97.97795105 44.56780624]
[92.05476379 58.34880447]
[115.71800995 66.03014374]
[128.23875427 83.99738312]
[142.64462280 79.81760406]
[157.05050659 75.63781738]
[171.45639038 71.45803833]
[182.55395508 60.18174744]
[196.93313599 64.06610870]
[211.33901978 59.88632584]
[216.47351074 45.24335480]
[229.25344849 36.44262695]
[244.76469421 36.86819839]
[257.04284668 46.35643387]
[261.36669922 61.25891113]
[256.07366943 75.84532166]
[243.19902039 84.50689697]
[227.69329834 83.91307831]
[215.51879883 74.29220581]
[201.11293030 78.47199249]
[191.04576111 89.44931793]
[175.63616943 85.86392212]
[161.23028564 90.04370117]
[146.82441711 94.22348022]
[132.41853333 98.40326691]
[131.95361328 105.69891357]
[129.86773682 112.70547485]
[141.94044495 121.60770416]
[154.01315308 130.50993347]
[166.08586121 139.41217041]
[178.15856934 148.31439209]
[193.85754395 150.27720642]
[199.50910950 164.05795288]
[211.58181763 172.96018982]
[223.65452576 181.86241150]
[235.72723389 190.76464844]
[247.79994202 199.66687012]
[259.87265015 208.56910706]
[276.22094727 209.85968018]
[283.03219604 224.77740479]
[273.29962158 237.97621155]
[257.03521729 235.87829590]
[250.97042847 220.64181519]
[238.89772034 211.73957825]
[226.82501221 202.83735657]
[214.75230408 193.93511963]
[202.67959595 185.03289795]
[190.60688782 176.13066101]
[175.77142334 174.80459595]
[169.25634766 160.38710022]
[157.18362427 151.48487854]
[145.11091614 142.58264160]
[133.03820801 133.68040466]
[120.96550751 124.77818298]
[98.20518494 135.72756958]
[71.88888550 127.15864563]
[57.60301971 100.66700745]
[50.48833084 113.87235260]
[43.37363815 127.07769775]
[36.25894928 140.28305054]
[29.26106834 153.55065918]
[33.83507919 168.44079590]
[26.66736984 181.86013794]
[12.44371128 186.12899780]
[5.56318378 199.45783997]
[14.18920612 215.37779236]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 23]
[3 22]
[4 21]
[5 20]
[6 19]
[9 16]
[10 15]
[29 176]
[30 175]
[33 172]
[35 171]
[36 170]
[37 169]
[38 168]
[53 74]
[54 73]
[55 72]
[56 71]
[57 70]
[58 69]
[59 67]
[60 66]
[88 113]
[89 112]
[90 111]
[93 108]
[95 106]
[96 105]
[97 104]
[115 136]
[116 135]
[117 134]
[118 133]
[120 131]
[121 130]
[138 165]
[139 164]
[140 163]
[141 162]
[142 161]
[144 159]
[145 158]
[146 157]
[147 156]
[148 155]
[149 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
