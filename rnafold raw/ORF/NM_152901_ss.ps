%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 11:42:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGGAACGAAGCGCGAGGCCAUCCUGAAGGUGCUGGAGAACCUGACACCGGAGGAGCUCAAGAAGUUCAAGAUGAAGCUGGGGACGGUGCCGCUGCGCGAGGGCUUUGAGCGCAUCCCGCGGGGCGCGCUCGGGCAGCUAGAUAUCGUGGACCUCACCGACAAGCUGGUCGCCUCCUACUACGAGGACUACGCAGCCGAGCUCGUCGUGGCCGUGCUGCGCGACAUGCGCAUGUUGGAGGAGGCCGCACGGCUG\
CAGCGGGCUGCGUGA\
) } def
/len { sequence length } bind def

/coor [
[118.92552948 252.51190186]
[117.01221466 267.59194946]
[109.46931458 280.78942871]
[97.44707489 290.09179688]
[82.77880096 294.08053589]
[67.70128632 292.14736938]
[54.51375198 284.58712769]
[45.22719955 272.55267334]
[41.25775909 257.87915039]
[43.21074295 242.80419922]
[50.78833389 229.62661743]
[62.83500671 220.35589600]
[77.51372528 216.40576172]
[79.42132568 201.52755737]
[81.32892609 186.64935303]
[83.23652649 171.77114868]
[77.18061066 158.16323853]
[86.61009979 145.45909119]
[88.51770020 130.58088684]
[90.42530060 115.70267487]
[78.21889496 106.98465729]
[64.76420593 113.61573792]
[51.30951309 120.24681854]
[37.85482025 126.87789917]
[28.89679146 139.91877747]
[14.06024456 138.60494995]
[0.60555142 145.23602295]
[-12.84914112 151.86711121]
[-26.30383492 158.49818420]
[-27.61863899 172.19856262]
[-35.46140671 183.37690735]
[-47.70154572 189.18225098]
[-61.10443497 188.19856262]
[-72.18604279 180.78852844]
[-85.71670532 187.26318359]
[-94.82530212 200.19934082]
[-109.64562225 198.71360779]
[-123.17627716 205.18827820]
[-136.70693970 211.66293335]
[-142.04693604 226.29585266]
[-155.86117554 232.66932678]
[-169.77851868 227.48828125]
[-183.30917358 233.96295166]
[-196.83984375 240.43762207]
[-199.51588440 255.72219849]
[-210.68830872 266.49050903]
[-226.06105042 268.60195923]
[-239.72300720 261.24459839]
[-246.42086792 247.24751282]
[-243.57916260 231.99285889]
[-232.29058838 221.34637451]
[-216.89584351 219.40182495]
[-203.31449890 226.90695190]
[-189.78384399 220.43229675]
[-176.25318909 213.95762634]
[-171.55651855 199.86944580]
[-157.92674255 193.11045837]
[-143.18161011 198.13227844]
[-129.65093994 191.65760803]
[-116.12028503 185.18295288]
[-107.97949219 172.70991516]
[-92.19136810 173.73252869]
[-78.66070557 167.25787354]
[-76.19793701 151.01126099]
[-64.40927124 139.32612610]
[-47.81203842 136.95973206]
[-32.93491745 145.04348755]
[-19.48022270 138.41241455]
[-6.02552986 131.78132629]
[7.42916346 125.15025330]
[15.42482185 112.58367920]
[31.22373772 113.42321014]
[44.67843246 106.79212952]
[58.13312531 100.16104889]
[71.58781433 93.52996826]
[71.24016571 86.03802490]
[70.54486084 71.05415344]
[70.19720459 63.56221390]
[56.18624115 58.20563889]
[42.17527771 52.84906387]
[28.16431236 47.49248886]
[12.06473446 50.61268616]
[1.51854777 38.05442047]
[7.37476492 22.73656464]
[23.60901260 20.41681099]
[33.52088928 33.48152542]
[47.53185272 38.83810043]
[61.54281616 44.19467545]
[75.55377960 49.55125046]
[100.82123566 67.75288391]
[104.06971741 92.58843231]
[116.17424011 83.72949982]
[128.27876282 74.87057495]
[140.38327026 66.01164246]
[152.48779297 57.15271378]
[164.59231567 48.29378510]
[176.69683838 39.43485641]
[188.74980164 30.50591469]
[200.75080872 21.50726128]
[197.18565369 7.52133989]
[198.97422791 -6.73208570]
[205.81935120 -19.28418732]
[216.72892761 -28.41948509]
[211.94509888 -42.63619614]
[207.16125488 -56.85290909]
[202.37741089 -71.06961823]
[197.42909241 -85.22991943]
[192.31694031 -99.33190155]
[187.20480347 -113.43389130]
[182.09266663 -127.53587341]
[176.98051453 -141.63786316]
[171.86837769 -155.73985291]
[166.75624084 -169.84182739]
[161.64408875 -183.94381714]
[149.66677856 -194.28086853]
[152.60328674 -208.88313293]
[147.49114990 -222.98510742]
[142.37899780 -237.08709717]
[129.48861694 -247.22463989]
[132.09030151 -263.41610718]
[147.50765991 -269.00509644]
[159.88064575 -258.24212646]
[156.48098755 -242.19924927]
[161.59312439 -228.09725952]
[166.70527649 -213.99526978]
[178.31694031 -204.66690063]
[175.74607849 -189.05595398]
[180.85821533 -174.95397949]
[185.97036743 -160.85198975]
[191.08250427 -146.75000000]
[196.19464111 -132.64801025]
[201.30679321 -118.54602814]
[206.41893005 -104.44404602]
[211.53106689 -90.34206390]
[215.36882019 -87.55455017]
[217.51640320 -82.34172821]
[216.59411621 -75.85346222]
[221.37796021 -61.63674927]
[226.16180420 -47.42003632]
[230.94564819 -33.20332718]
[237.50022888 -33.46915817]
[244.00341797 -32.60779190]
[250.26278687 -30.64470482]
[256.09313965 -27.63798332]
[261.32196045 -23.67658806]
[265.79455566 -18.87772179]
[269.37863159 -13.38337040]
[271.96807861 -7.35609531]
[286.85708618 -9.17742348]
[301.74612427 -10.99875164]
[316.63513184 -12.82007980]
[324.73876953 -16.95496941]
[331.70715332 -14.57518959]
[346.61630249 -16.22379684]
[361.52542114 -17.87240410]
[376.43453979 -19.52101135]
[391.03866577 -30.76432419]
[406.81735229 -23.04832649]
[421.70635986 -24.86965370]
[436.59536743 -26.69098282]
[451.48437500 -28.51231003]
[466.37341309 -30.33363914]
[481.26242065 -32.15496826]
[496.84454346 -44.98073196]
[514.27502441 -36.56264114]
[529.11779785 -38.72865677]
[538.56103516 -51.11665726]
[553.64459229 -53.10186005]
[565.39648438 -44.02281189]
[580.23925781 -46.18882370]
[595.08203125 -48.35483551]
[609.92486572 -50.52085114]
[624.76763916 -52.68686295]
[618.16540527 -72.00865936]
[629.42144775 -95.76864624]
[642.55432129 -103.01628113]
[655.68719482 -110.26390839]
[668.82000732 -117.51153564]
[672.96331787 -132.76306152]
[686.71881104 -140.54516602]
[701.92565918 -136.24087524]
[709.56195068 -122.40384674]
[705.09710693 -107.24333954]
[691.18011475 -99.75382233]
[676.06768799 -104.37867737]
[662.93481445 -97.13105011]
[649.80194092 -89.88342285]
[636.66906738 -82.63579559]
[638.26525879 -75.30761719]
[652.92169189 -78.49972534]
[656.11358643 -63.84326553]
[641.45758057 -60.65125275]
[643.05377197 -53.32307053]
[658.01123047 -52.19386292]
[672.96862793 -51.06465149]
[687.92608643 -49.93544388]
[702.88354492 -48.80623627]
[717.84722900 -47.76374435]
[732.81677246 -46.80800247]
[741.54394531 -49.37749863]
[747.95397949 -45.75342560]
[762.91137695 -44.62421799]
[777.86883545 -43.49500656]
[789.68884277 -53.98609924]
[805.45996094 -52.96302795]
[815.82550049 -41.03276443]
[814.63574219 -25.27332306]
[802.59655762 -15.03449917]
[786.85058594 -16.39080620]
[776.73962402 -28.53757286]
[761.78222656 -29.66678047]
[746.82476807 -30.79598999]
[731.86102295 -31.83848190]
[716.89154053 -32.79422379]
[710.04089355 -30.09398842]
[701.75433350 -33.84880066]
[686.79687500 -34.97800827]
[671.83941650 -36.10721588]
[656.88201904 -37.23642731]
[641.92456055 -38.36563492]
[626.93365479 -37.84407425]
[612.09088135 -35.67805862]
[597.24804688 -33.51204681]
[582.40527344 -31.34603691]
[567.56250000 -29.18002319]
[558.89526367 -17.12121391]
[543.87341309 -14.71312714]
[531.28381348 -23.88586617]
[516.44104004 -21.71985435]
[511.12457275 -13.04511166]
[501.72116089 -8.61812496]
[491.21386719 -10.10880947]
[483.08374023 -17.26595116]
[468.19473267 -15.44462395]
[453.30572510 -13.62329578]
[438.41668701 -11.80196762]
[423.52767944 -9.98063946]
[408.63867188 -8.15931129]
[400.96173096 1.15976942]
[388.59805298 2.81726933]
[378.08316040 -4.61188269]
[363.17404175 -2.96327567]
[348.26489258 -1.31466842]
[333.35577393 0.33393878]
[318.45645142 2.06893563]
[303.56744385 3.89026356]
[288.67843628 5.71159172]
[273.78939819 7.53291941]
[266.65454102 27.30297852]
[250.06813049 40.37520981]
[228.97856140 42.71452713]
[209.74946594 33.50827026]
[197.74845886 42.50692368]
[194.29476929 49.01030731]
[185.55575562 51.53937531]
[173.45124817 60.39830399]
[161.34672546 69.25723267]
[149.24220276 78.11616516]
[137.13768005 86.97509003]
[125.03316498 95.83402252]
[112.92864990 104.69294739]
[105.30350494 117.61027527]
[103.39591217 132.48847961]
[101.48831177 147.36668396]
[107.40777588 162.03878784]
[98.11473083 173.67874146]
[96.20713043 188.55694580]
[94.29953766 203.43516541]
[92.39193726 218.31336975]
[105.59931183 225.83889771]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 269]
[14 268]
[15 267]
[16 266]
[18 264]
[19 263]
[20 262]
[21 75]
[22 74]
[23 73]
[24 72]
[26 70]
[27 69]
[28 68]
[29 67]
[34 63]
[35 62]
[37 60]
[38 59]
[39 58]
[42 55]
[43 54]
[44 53]
[78 89]
[79 88]
[80 87]
[81 86]
[91 261]
[92 260]
[93 259]
[94 258]
[95 257]
[96 256]
[97 255]
[98 253]
[99 252]
[103 140]
[104 139]
[105 138]
[106 137]
[107 134]
[108 133]
[109 132]
[110 131]
[111 130]
[112 129]
[113 128]
[114 127]
[116 125]
[117 124]
[118 123]
[148 248]
[149 247]
[150 246]
[151 245]
[153 244]
[154 243]
[155 242]
[156 241]
[158 238]
[159 237]
[160 236]
[161 235]
[162 234]
[163 233]
[165 229]
[166 228]
[169 225]
[170 224]
[171 223]
[172 222]
[173 221]
[175 188]
[176 187]
[177 186]
[178 185]
[193 220]
[194 219]
[195 218]
[196 217]
[197 216]
[198 214]
[199 213]
[201 212]
[202 211]
[203 210]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
