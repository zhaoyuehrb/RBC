%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sat Sep 12 01:19:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGCUGAAAAAGCGGGGUCUACAUUUUCACACCUUCUGGUUCCUAUUCUUCUCCUGAUUGGCUGGAUUGUGGGCUGCAUCAUAAUGAUUUAUGUUGUCUUCUCUUAG\
) } def
/len { sequence length } bind def

/coor [
[86.43426514 164.46966553]
[90.55121613 150.04684448]
[90.83312988 135.04948425]
[91.11503601 120.05213928]
[83.67752838 133.07839966]
[76.24001312 146.10466003]
[79.06256866 161.89746094]
[68.36726379 173.85530090]
[52.35861969 172.80514526]
[43.31709671 159.55258179]
[48.17858124 144.26383972]
[63.21375656 138.66714478]
[70.65126801 125.64088440]
[78.08878326 112.61462402]
[80.25892639 102.91838837]
[85.75308228 96.68173981]
[92.34702301 94.71436310]
[85.67233276 81.28125000]
[78.99764252 67.84813690]
[72.32295227 54.41502762]
[65.64826202 40.98191452]
[58.97357178 27.54880333]
[52.29888153 14.11569023]
[45.62419128 0.68257809]
[33.58490753 -4.21541357]
[28.33708954 -15.66462326]
[32.22924042 -27.21839333]
[25.94443703 -40.83827591]
[19.65963364 -54.45816040]
[13.37483120 -68.07804871]
[-1.18197262 -73.62216187]
[-7.36163664 -87.52419281]
[-1.98646021 -101.36771393]
[-16.54326439 -106.91182709]
[-22.72292709 -120.81385803]
[-17.34775162 -134.65737915]
[-23.63255501 -148.27726746]
[-36.44005585 -157.56588745]
[-34.74720764 -172.36398315]
[-41.03200912 -185.98385620]
[-56.25892258 -185.73684692]
[-70.26732635 -191.71049500]
[-80.63018036 -202.86984253]
[-85.55206299 -217.28146362]
[-84.18021393 -232.44847107]
[-76.75233459 -245.74307251]
[-64.55533600 -254.86190796]
[-49.70241928 -258.22506714]
[-34.76695251 -255.24989319]
[-22.33659172 -246.45181274]
[-14.56497097 -233.35517883]
[-12.79856968 -218.22906494]
[-17.34342957 -203.69413757]
[-27.41212463 -192.26866150]
[-21.12732124 -178.64877319]
[-8.76935291 -170.33435059]
[-10.01267052 -154.56207275]
[-3.72786689 -140.94218445]
[10.29325581 -136.04895020]
[16.86096001 -122.32598114]
[11.63342381 -107.65251923]
[25.65454674 -102.75928497]
[32.22225189 -89.03631592]
[26.99471474 -74.36284637]
[33.27951813 -60.74296570]
[39.56432343 -47.12308121]
[45.84912491 -33.50319672]
[60.69126892 -24.26250458]
[59.05730438 -5.99211216]
[65.73199463 7.44099998]
[72.40668488 20.87411308]
[79.08137512 34.30722427]
[85.75606537 47.74033737]
[92.43075562 61.17345047]
[99.10544586 74.60655975]
[105.78013611 88.03967285]
[117.05179596 97.93663025]
[131.23535156 102.81788635]
[145.41891479 107.69913483]
[160.98579407 104.87377930]
[170.50248718 116.33161163]
[184.68605042 121.21286011]
[198.86961365 126.09410858]
[213.05316162 130.97535706]
[227.23672485 135.85661316]
[243.22198486 132.19551086]
[254.18548584 144.39114380]
[248.84893799 159.89770508]
[232.70210266 162.76335144]
[222.35548401 150.04017639]
[208.17192078 145.15892029]
[193.98835754 140.27766418]
[179.80479431 135.39642334]
[165.62123108 130.51516724]
[151.06884766 133.68966675]
[140.53765869 121.88269806]
[126.35410309 117.00144196]
[112.17053986 112.12019348]
[122.27758789 123.20385742]
[132.38464355 134.28752136]
[144.99522400 142.40991211]
[152.92179871 155.14448547]
[154.64204407 170.04551697]
[149.82556152 184.25120544]
[139.39739990 195.03327942]
[125.36030579 200.32101440]
[110.41017914 199.09887695]
[97.41823578 191.60157776]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 14]
[5 13]
[6 12]
[17 76]
[18 75]
[19 74]
[20 73]
[21 72]
[22 71]
[23 70]
[24 69]
[27 67]
[28 66]
[29 65]
[30 64]
[33 61]
[36 58]
[37 57]
[39 55]
[40 54]
[77 98]
[78 97]
[79 96]
[81 94]
[82 93]
[83 92]
[84 91]
[85 90]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
