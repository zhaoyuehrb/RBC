%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 06:47:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCCUCCGGGGCUAGCGCGAGCGCCCUGCAGCGCUUGGUAGAGCAGCUCAAGUUGGAGGCUGGCGUGGAGAGGAUCAAGGUCUCUCAGGCAGCUGCAGAGCUUCAACAGUACUGUAUGCAGAAUGCCUGCAAGGAUGCCCUGCUGGUGGGUGUUCCAGCUGGAAGUAACCCCUUCCGGGAGCCUAGAUCCUGUGCUUUACUCUGA\
) } def
/len { sequence length } bind def

/coor [
[-115.43392181 361.74154663]
[-120.54440308 347.63894653]
[-119.68390656 332.66110229]
[-123.49319458 347.16937256]
[-127.30248260 361.67761230]
[-131.11177063 376.18585205]
[-126.26808929 391.85336304]
[-137.61164856 403.69631958]
[-153.47317505 399.53170776]
[-157.53569031 383.64373779]
[-145.62002563 372.37658691]
[-141.81072998 357.86831665]
[-138.00144958 343.36007690]
[-134.19215393 328.85183716]
[-139.57495117 323.62921143]
[-150.34053040 313.18402100]
[-155.72332764 307.96142578]
[-170.10990906 312.20718384]
[-184.49647522 316.45291138]
[-198.88305664 320.69866943]
[-209.92883301 332.02569580]
[-224.32566833 328.20724487]
[-238.71224976 332.45300293]
[-253.09883118 336.69873047]
[-260.69296265 350.29901123]
[-275.34347534 354.39984131]
[-288.26245117 347.07617188]
[-302.64901733 351.32192993]
[-313.69479370 362.64895630]
[-328.09164429 358.83050537]
[-342.47821045 363.07626343]
[-356.76492310 367.64682007]
[-370.94442749 372.53985596]
[-385.12390137 377.43292236]
[-399.26605225 382.43289185]
[-413.37002563 387.53952026]
[-427.47399902 392.64617920]
[-441.57800293 397.75280762]
[-451.72055054 410.63925171]
[-467.91101074 408.03125000]
[-473.49398804 392.61169434]
[-462.72619629 380.24291992]
[-446.68463135 383.64883423]
[-432.58065796 378.54220581]
[-418.47668457 373.43554688]
[-404.37268066 368.32891846]
[-399.15240479 363.09475708]
[-390.01696777 363.25341797]
[-375.83746338 358.36038208]
[-361.65795898 353.46731567]
[-359.79370117 350.47192383]
[-356.38482666 348.23156738]
[-351.80245972 347.46298218]
[-346.72396851 348.68966675]
[-332.33737183 344.44393921]
[-322.32061768 333.42059326]
[-306.89477539 336.93536377]
[-292.50817871 332.68960571]
[-285.63568115 319.52511597]
[-271.10610962 315.01437378]
[-257.34457397 322.31216431]
[-242.95799255 318.06640625]
[-228.57141113 313.82067871]
[-218.55467224 302.79733276]
[-203.12879944 306.31210327]
[-188.74223328 302.06634521]
[-174.35565186 297.82058716]
[-159.96907043 293.57485962]
[-117.21378326 302.15170288]
[-112.39024353 288.05975342]
[-96.83546448 285.16848755]
[-92.01192474 271.07656860]
[-76.45714569 268.18527222]
[-64.93418121 258.58209229]
[-53.41121674 248.97889709]
[-41.88825607 239.37570190]
[-30.36529160 229.77252197]
[-18.84232712 220.16932678]
[-14.01878643 206.07737732]
[1.53599119 203.18611145]
[13.05895519 193.58291626]
[24.58191872 183.97972107]
[27.70843697 177.28100586]
[36.35220337 174.32009888]
[48.01889420 164.89204407]
[59.68558121 155.46397400]
[71.35227203 146.03591919]
[83.01895905 136.60784912]
[85.17872620 76.28853607]
[87.65940094 61.49508286]
[90.14008331 46.70163345]
[92.62076569 31.90818024]
[95.10144043 17.11472702]
[88.25933838 0.02007269]
[99.94338989 -13.07247257]
[102.20036316 -27.90170479]
[104.45732880 -42.73093414]
[106.71429443 -57.56016541]
[108.97126007 -72.38939667]
[101.96903992 -83.22319794]
[104.15569305 -95.52928925]
[113.82165527 -102.80467987]
[116.30233765 -117.59813690]
[103.80565643 -126.36145020]
[96.35628510 -139.68322754]
[95.43331146 -154.91841125]
[101.21998596 -169.04205322]
[112.56735992 -179.24987793]
[127.22240448 -183.51513672]
[142.27536011 -180.99093628]
[154.73742676 -172.17848206]
[162.13427734 -158.82746887]
[162.99725342 -143.58877563]
[157.15499878 -129.48803711]
[145.76751709 -119.32496643]
[131.09577942 -115.11745453]
[128.61511230 -100.32400513]
[135.63293457 -84.24040985]
[123.80049133 -70.13243103]
[121.54352570 -55.30319977]
[119.28656006 -40.47396851]
[117.02959442 -25.64473724]
[114.77262115 -10.81550503]
[121.68732452 -0.88831890]
[119.92677307 11.48591900]
[109.89489746 19.59540749]
[107.41421509 34.38885880]
[104.93353271 49.18231201]
[102.45285797 63.97576523]
[99.97217560 78.76921844]
[111.27463531 88.63098145]
[125.59544373 84.16843414]
[132.98330688 70.45503998]
[147.57022095 66.13339233]
[160.59832764 73.26110077]
[174.91912842 68.79855347]
[189.23994446 64.33600616]
[203.56076050 59.87346268]
[217.88157654 55.41091537]
[232.20239258 50.94837189]
[246.52319336 46.48582458]
[260.84402466 42.02328110]
[266.70938110 27.52736855]
[280.54449463 20.23874283]
[295.81680298 23.59886742]
[305.31521606 36.02119446]
[304.55484009 51.64028168]
[293.89474487 63.08127213]
[278.36828613 64.94208527]
[265.30654907 56.34409332]
[250.98574829 60.80663681]
[236.66493225 65.26918793]
[222.34411621 69.73172760]
[208.02330017 74.19427490]
[193.70249939 78.65682220]
[179.38168335 83.11936951]
[165.06086731 87.58191681]
[158.38795471 100.84870911]
[143.92817688 105.57836914]
[130.05799866 98.48925018]
[115.73718262 102.95179749]
[115.22782135 110.43447876]
[113.69973755 132.88252258]
[127.28369141 139.24461365]
[140.86766052 145.60668945]
[154.45161438 151.96876526]
[168.03556824 158.33084106]
[182.80859375 152.71540833]
[197.19099426 159.26692200]
[202.64993286 174.09849548]
[195.94671631 188.41081238]
[181.05825806 193.71264648]
[166.81761169 186.85848999]
[161.67349243 171.91481018]
[148.08953857 165.55273438]
[134.50556946 159.19064331]
[120.92161560 152.82856750]
[107.33765411 146.46649170]
[92.44702148 148.27453613]
[80.78033447 157.70260620]
[69.11364746 167.13066101]
[57.44695663 176.55873108]
[45.78026962 185.98678589]
[34.18511200 195.50268555]
[22.66214752 205.10588074]
[11.13918400 214.70907593]
[5.49144363 229.48789978]
[-9.23913479 231.69229126]
[-20.76209831 241.29548645]
[-32.28506088 250.89866638]
[-43.80802536 260.50186157]
[-55.33098984 270.10507202]
[-66.85395050 279.70825195]
[-72.50169373 294.48706055]
[-87.23226929 296.69146729]
[-92.88001251 311.47027588]
[-107.61058807 313.67468262]
[-94.41415405 306.54345703]
[-79.47542572 305.18902588]
[-65.21159363 309.83047485]
[-53.93062210 319.71679688]
[-47.45783997 333.24835205]
[-46.84057999 348.23565674]
[-52.17871857 362.25366211]
[-62.60852051 373.03414917]
[-76.44237518 378.83282471]
[-91.44187927 378.71139526]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 14]
[4 13]
[5 12]
[6 11]
[17 68]
[18 67]
[19 66]
[20 65]
[22 63]
[23 62]
[24 61]
[27 58]
[28 57]
[30 55]
[31 54]
[32 50]
[33 49]
[34 48]
[35 46]
[36 45]
[37 44]
[38 43]
[69 197]
[71 195]
[73 193]
[74 192]
[75 191]
[76 190]
[77 189]
[78 188]
[80 186]
[81 185]
[82 184]
[84 183]
[85 182]
[86 181]
[87 180]
[88 179]
[89 130]
[90 129]
[91 128]
[92 127]
[93 126]
[95 123]
[96 122]
[97 121]
[98 120]
[99 119]
[102 117]
[103 116]
[131 161]
[132 160]
[135 157]
[136 156]
[137 155]
[138 154]
[139 153]
[140 152]
[141 151]
[142 150]
[163 178]
[164 177]
[165 176]
[166 175]
[167 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
