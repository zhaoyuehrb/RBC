%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 01:14:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGGAGAUGUGUGCAAAAAAGCGCCUUGUAAAACGCGCCAAGAAGACGCUGGAGGGAGGCUGUUAGGAGGGACUCUGAGCUUCACACCUGUCUGCUGCCAUGGGUGCAGAGCCCUAGUCCUGAUGGCCCCUGGUGGCACAUAUCGAAUGCCUAGGGCAGAAAGGAAGUGGGAAUGGCGAAGAUGUGACAUUCCUCGGUGUUAG\
) } def
/len { sequence length } bind def

/coor [
[202.66600037 253.31492615]
[197.77664185 244.34306335]
[194.89776611 234.66748047]
[194.10670471 224.72695923]
[195.38732910 214.96147156]
[198.63290405 205.79270935]
[203.65298462 197.60585022]
[192.76577759 187.28747559]
[181.87857056 176.96911621]
[170.99136353 166.65074158]
[160.10415649 156.33236694]
[149.21694946 146.01400757]
[138.32974243 135.69563293]
[127.44253540 125.37726593]
[116.55532837 115.05889893]
[124.68605042 127.66410828]
[122.26517487 142.46746826]
[110.54260254 151.82595825]
[95.57073212 150.90777588]
[85.07956696 140.18698120]
[84.48571777 125.19874573]
[94.09758759 113.68052673]
[82.03025055 122.59002686]
[69.96290588 131.49952698]
[57.89556503 140.40904236]
[51.38917160 154.83045959]
[36.55451584 156.16546631]
[24.48717499 165.07496643]
[18.43157578 180.31510925]
[2.16843963 182.42282104]
[-7.57211208 169.22987366]
[-0.76983595 154.30804443]
[15.57767010 153.00762939]
[27.64501190 144.09812927]
[33.28826523 130.31396484]
[48.98606110 128.34169006]
[61.05340195 119.43218994]
[73.12074280 110.52268982]
[85.18808746 101.61318207]
[72.09234619 108.92767334]
[57.14945984 107.61998749]
[45.52326584 98.14203644]
[41.23145676 83.76913452]
[45.75716782 69.46815491]
[57.53643417 60.18112946]
[72.49867249 59.11739731]
[85.47333527 66.64455414]
[91.97679901 80.16176605]
[87.23236847 65.93185425]
[82.48793793 51.70193863]
[77.74351501 37.47202682]
[73.82913971 34.00446701]
[71.83854675 29.80171394]
[71.72928619 25.72091866]
[73.12440491 22.47782707]
[69.03897095 8.04490566]
[64.95353699 -6.38801670]
[59.60267639 -13.79714012]
[60.91790390 -21.07347298]
[57.05412674 -35.56730652]
[53.19034576 -50.06113815]
[49.32656860 -64.55496979]
[45.46278763 -79.04880524]
[41.59901047 -93.54264069]
[37.73522949 -108.03647614]
[33.87145233 -122.53030396]
[30.00767136 -137.02413940]
[26.14389229 -151.51797485]
[22.28011322 -166.01181030]
[18.08421135 -180.41300964]
[13.55840111 -194.71394348]
[9.03259277 -209.01489258]
[3.45719099 -216.25656128]
[4.54882002 -223.56977844]
[0.24269345 -237.93840027]
[-4.06343269 -252.30702209]
[-8.36955929 -266.67565918]
[-12.67568588 -281.04425049]
[-19.74527931 -267.81472778]
[-33.61605072 -262.10491943]
[-47.95043182 -266.52368164]
[-56.19904327 -279.05206299]
[-54.59309006 -293.96585083]
[-43.86632919 -304.45092773]
[-28.91982651 -305.71664429]
[-16.58375359 -297.18624878]
[-19.32670403 -311.93331909]
[-22.06965446 -326.68041992]
[-24.81260300 -341.42749023]
[-27.55555344 -356.17456055]
[-30.29850388 -370.92163086]
[-33.04145432 -385.66870117]
[-47.10857010 -392.21820068]
[-54.60995483 -405.80160522]
[-52.66117859 -421.19583130]
[-42.01157761 -432.48144531]
[-26.75614548 -435.31896973]
[-12.76090717 -428.61724854]
[-5.40731573 -414.95327759]
[-7.52297783 -399.58111572]
[-18.29437828 -388.41165161]
[-15.55142879 -373.66458130]
[-12.80847836 -358.91751099]
[-10.06552887 -344.17044067]
[-7.32257843 -329.42337036]
[-4.57962847 -314.67626953]
[-1.83667862 -299.92919922]
[1.69293547 -285.35040283]
[5.99906206 -270.98178101]
[10.30518818 -256.61315918]
[14.61131477 -242.24452209]
[18.91744041 -227.87590027]
[23.33353806 -213.54069519]
[27.85934830 -199.23976135]
[32.38515472 -184.93881226]
[35.33396912 -182.99754333]
[37.48708344 -179.52928162]
[38.13603592 -174.92443848]
[36.77394485 -169.87557983]
[40.63772583 -155.38175964]
[44.50150681 -140.88792419]
[48.36528397 -126.39408875]
[52.22906494 -111.90025330]
[56.09284210 -97.40641785]
[59.95662308 -82.91258240]
[63.82040024 -68.41875458]
[67.68418121 -53.92491913]
[71.54795837 -39.43108368]
[75.41173553 -24.93725204]
[79.38645935 -10.47344875]
[83.47189331 3.95947313]
[87.55732727 18.39239502]
[91.97342682 32.72760010]
[96.71784973 46.95751190]
[101.46228027 61.18742371]
[106.20671082 75.41733551]
[126.87369537 104.17169189]
[137.76091003 114.49005890]
[148.64811707 124.80842590]
[159.53532410 135.12680054]
[170.42251587 145.44515991]
[181.30972290 155.76353455]
[192.19692993 166.08190918]
[203.08413696 176.40026855]
[213.97134399 186.71864319]
[235.75068665 175.92237854]
[260.99298096 177.66734314]
[282.72604370 192.47270203]
[294.44851685 217.11822510]
[309.44805908 217.23316956]
[324.44763184 217.34809875]
[339.44720459 217.46304321]
[355.33218384 211.53823853]
[365.42285156 225.16229248]
[355.12460327 238.63012695]
[339.33224487 232.46260071]
[324.33270264 232.34765625]
[309.33312988 232.23272705]
[294.33358765 232.11779785]
[291.05728149 238.86433411]
[304.55035400 245.41693115]
[319.40789795 247.47941589]
[322.03738403 262.24716187]
[308.80493164 269.31127930]
[297.99777222 258.91003418]
[284.50466919 252.35742188]
[281.22836304 259.10397339]
[295.88842773 265.05319214]
[297.79064941 279.82583618]
[307.15582275 291.54306030]
[316.61053467 303.18820190]
[326.15414429 314.76052856]
[335.69778442 326.33285522]
[345.24142456 337.90521240]
[354.78506470 349.47753906]
[364.32870483 361.04989624]
[379.13900757 357.35964966]
[394.08200073 360.46920776]
[406.19076538 369.76116943]
[413.06109619 383.39059448]
[413.32885742 398.65136719]
[406.94091797 412.51345825]
[395.16558838 422.22448730]
[380.34088135 425.85638428]
[365.41024780 422.68798828]
[353.33816528 413.34841919]
[346.52154541 399.69201660]
[346.31387329 384.43032837]
[352.75637817 370.59350586]
[343.21273804 359.02117920]
[333.66909790 347.44885254]
[324.12545776 335.87649536]
[314.58181763 324.30416870]
[305.03817749 312.73184204]
[298.35400391 309.57006836]
[295.43859863 300.90823364]
[286.07342529 289.19100952]
[272.08325195 284.07986450]
[269.51113892 268.46914673]
[259.29125977 272.74349976]
[248.52627563 274.77438354]
[237.69721985 274.52294922]
[227.27726746 272.05120850]
[217.71116638 267.51708984]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 145]
[8 144]
[9 143]
[10 142]
[11 141]
[12 140]
[13 139]
[14 138]
[15 137]
[22 39]
[23 38]
[24 37]
[25 36]
[27 34]
[28 33]
[48 136]
[49 135]
[50 134]
[51 133]
[55 132]
[56 131]
[57 130]
[59 129]
[60 128]
[61 127]
[62 126]
[63 125]
[64 124]
[65 123]
[66 122]
[67 121]
[68 120]
[69 119]
[70 115]
[71 114]
[72 113]
[74 112]
[75 111]
[76 110]
[77 109]
[78 108]
[86 107]
[87 106]
[88 105]
[89 104]
[90 103]
[91 102]
[92 101]
[149 159]
[150 158]
[151 157]
[152 156]
[167 199]
[169 197]
[170 196]
[171 194]
[172 193]
[173 192]
[174 191]
[175 190]
[176 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
