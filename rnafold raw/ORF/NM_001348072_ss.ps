%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 04:58:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAUCUUCACUCCCUUCCUUCCACCUGCUGACCUGUCUGUCUUUCAGAAUGUGAAAGGGCUGCAAAACGACCCUGAGGAAUGGGUGGCUGUGUCUGACGCCACGGAGGACCCAUCCGGUGGCACAGGCUUGCCCAGGGAACCUGCUCUUCUGCGAGGGUCUUGGAGGAGCCGGUUCCAGAGAGCCCUGGCAUGUUUCACCAAGUGUUUCAGGGGAGGAUACCGGGCACUCGGAAUCUGA\
) } def
/len { sequence length } bind def

/coor [
[103.61101532 689.02197266]
[90.69692230 681.39135742]
[81.63217926 669.44018555]
[77.76579285 654.94702148]
[79.67317200 640.06878662]
[87.07044220 627.01965332]
[98.85675049 617.74157715]
[113.27805328 613.61529541]
[128.18817139 615.25494385]
[141.36817932 622.41650391]
[150.85620117 634.03338623]
[148.32640076 619.24822998]
[145.79658508 604.46313477]
[143.26678467 589.67797852]
[140.73698425 574.89288330]
[138.20718384 560.10772705]
[135.67738342 545.32257080]
[122.59319305 541.44628906]
[112.40381622 532.26977539]
[107.13305664 519.53918457]
[107.86067963 505.71365356]
[114.50175476 493.49044800]
[125.81209564 485.27880859]
[123.47524261 470.46197510]
[121.13838196 455.64511108]
[111.51275635 444.27862549]
[117.00565338 429.44155884]
[114.66879272 414.62472534]
[105.04317474 403.25823975]
[110.53606415 388.42117310]
[108.19920349 373.60430908]
[105.86234283 358.78747559]
[99.21793365 355.30868530]
[92.26018524 368.59741211]
[78.97158813 361.63943481]
[85.92910767 348.35116577]
[79.28469086 344.87240601]
[65.77622986 351.39324951]
[52.26776123 357.91409302]
[38.75929260 364.43493652]
[32.13835526 379.04803467]
[16.55057335 382.84283447]
[3.95356059 372.90832520]
[4.01066732 356.86535645]
[16.67808533 347.02075195]
[32.23845673 350.92645264]
[45.74692154 344.40560913]
[59.25539017 337.88479614]
[72.76385498 331.36395264]
[81.06690216 318.87158203]
[81.84868622 303.89196777]
[82.63047028 288.91235352]
[83.41225433 273.93273926]
[84.19403839 258.95312500]
[74.06542969 248.09277344]
[74.64488220 232.89018250]
[86.10487366 222.34001160]
[86.88666534 207.36039734]
[87.66844940 192.38078308]
[88.45023346 177.40116882]
[89.23201752 162.42155457]
[90.01380157 147.44194031]
[80.37353516 144.87004089]
[71.37031555 140.34109497]
[63.40088272 134.00878906]
[56.82560730 126.10710907]
[51.95225143 116.94183350]
[49.02173615 106.87875366]
[48.19651794 96.32914734]
[49.55212021 85.73293304]
[53.07226944 75.54036713]
[39.73838043 68.66960144]
[26.40449142 61.79883575]
[13.07060242 54.92807388]
[-0.72609961 62.02952576]
[-16.05682945 59.63195801]
[-27.02660942 48.65727997]
[-29.41733551 33.32548141]
[-22.30972481 19.53195190]
[-8.43679810 12.58058262]
[6.86702108 15.14431953]
[17.71710205 26.23735237]
[19.94136620 41.59418488]
[33.27525711 48.46494675]
[46.60914612 55.33571243]
[59.94303513 62.20647812]
[71.62683868 52.79963303]
[67.76029205 38.30653763]
[63.89374924 23.81344032]
[51.54755783 18.45998573]
[44.63420868 7.14197254]
[45.48274994 -5.89840126]
[53.56058502 -15.92213154]
[49.88328934 -30.46439743]
[46.20599747 -45.00666428]
[42.52870178 -59.54893112]
[38.85140610 -74.09119415]
[28.20288467 -81.34587097]
[25.43153191 -93.51876068]
[31.48943138 -103.97445679]
[28.00201225 -118.56342316]
[24.51459312 -133.15238953]
[21.02717400 -147.74134827]
[17.53975487 -162.33032227]
[13.95732307 -176.89624023]
[10.28002930 -191.43850708]
[6.60273552 -205.98077393]
[-7.55282068 -212.62564087]
[-14.07842350 -226.83656311]
[-9.89288425 -241.90359497]
[3.02751470 -250.71252441]
[18.58215523 -249.10406494]
[29.42661285 -237.83766174]
[30.44046402 -222.23297119]
[21.14500237 -209.65806580]
[24.82229614 -195.11579895]
[28.49958992 -180.57353210]
[33.17692566 -174.87097168]
[32.12871933 -165.81773376]
[35.61613846 -151.22877502]
[39.10355759 -136.63980103]
[42.59097672 -122.05083466]
[46.07839584 -107.46187592]
[58.81457901 -95.37641907]
[53.39367294 -77.76849365]
[57.07096863 -63.22622299]
[60.74826050 -48.68395996]
[64.42555237 -34.14169312]
[68.10285187 -19.59942627]
[82.90730286 -11.60109806]
[87.42588806 4.95846796]
[78.38684845 19.94689560]
[82.25338745 34.43999100]
[86.11993408 48.93309021]
[100.33911896 48.19100952]
[113.93736267 51.25269699]
[125.93823242 57.73319626]
[135.52479553 67.00832367]
[147.96278381 58.62403488]
[160.40078735 50.23974228]
[172.83877563 41.85545349]
[185.27676392 33.47116089]
[197.71476746 25.08687019]
[204.83306885 10.95746040]
[219.71130371 10.25928307]
[232.14929199 1.87499225]
[244.58729553 -6.50929880]
[257.02526855 -14.89358902]
[269.46328735 -23.27787971]
[281.90127563 -31.66217041]
[294.33926392 -40.04646301]
[306.77725220 -48.43075180]
[319.21524048 -56.81504440]
[326.33355713 -70.94445038]
[341.21179199 -71.64263153]
[353.64978027 -80.02692413]
[363.40396118 -93.89386749]
[379.42922974 -88.35963440]
[378.54748535 -71.42863464]
[362.03408813 -67.58892822]
[349.59606934 -59.20463943]
[343.36743164 -45.67493057]
[327.59954834 -44.37705231]
[315.16156006 -35.99275970]
[302.72354126 -27.60846901]
[290.28555298 -19.22417831]
[277.84756470 -10.83988762]
[265.40957642 -2.45559669]
[252.97158813 5.92869425]
[240.53358459 14.31298542]
[228.09559631 22.69727516]
[221.86692810 36.22698593]
[206.09904480 37.52486420]
[193.66105652 45.90915298]
[181.22306824 54.29344559]
[168.78507996 62.67773438]
[156.34707642 71.06202698]
[143.90908813 79.44631958]
[148.40361023 97.25174713]
[145.95338440 115.45148468]
[136.90997314 131.43431091]
[122.57087708 142.90707397]
[104.99341583 148.22372437]
[104.21163177 163.20333862]
[103.42984772 178.18295288]
[102.64806366 193.16256714]
[101.86627197 208.14218140]
[101.08448792 223.12179565]
[111.38398743 234.80760193]
[110.37775421 249.98791504]
[99.17365265 259.73489380]
[98.39186859 274.71450806]
[97.61008453 289.69412231]
[96.82830048 304.67373657]
[96.04651642 319.65335083]
[115.22795105 328.30270386]
[120.67919159 356.45059204]
[123.01605225 371.26745605]
[125.35291290 386.08432007]
[135.14567566 398.51058960]
[129.48564148 412.28784180]
[131.82249451 427.10470581]
[141.61526489 439.53097534]
[135.95523071 453.30825806]
[138.29208374 468.12509155]
[140.62895203 482.94195557]
[156.12962341 488.72448730]
[166.53479004 501.46578979]
[169.07412720 517.62365723]
[163.14733887 532.76745605]
[150.46250916 542.79278564]
[152.99230957 557.57794189]
[155.52210999 572.36303711]
[158.05192566 587.14819336]
[160.58172607 601.93328857]
[163.11152649 616.71844482]
[165.64132690 631.50360107]
[169.50787354 645.99664307]
[174.67898560 660.07714844]
[179.85009766 674.15759277]
[191.87057495 684.44445801]
[188.99519348 699.05883789]
[194.16630554 713.13934326]
[199.33741760 727.21978760]
[204.50852966 741.30029297]
[217.44123840 751.38378906]
[214.90733337 767.58599854]
[199.51348877 773.23944092]
[187.09556580 762.52838135]
[190.42805481 746.47137451]
[185.25694275 732.39093018]
[180.08583069 718.31042480]
[174.91471863 704.22998047]
[163.26412964 694.95025635]
[165.76962280 679.32873535]
[160.59851074 665.24822998]
[155.42739868 651.16778564]
[152.98651123 665.96783447]
[145.12501526 678.74267578]
[133.01284790 687.59118652]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 217]
[12 216]
[13 215]
[14 214]
[15 213]
[16 212]
[17 211]
[23 206]
[24 205]
[25 204]
[27 202]
[28 201]
[30 199]
[31 198]
[32 197]
[37 49]
[38 48]
[39 47]
[40 46]
[50 195]
[51 194]
[52 193]
[53 192]
[54 191]
[57 188]
[58 187]
[59 186]
[60 185]
[61 184]
[62 183]
[71 86]
[72 85]
[73 84]
[74 83]
[87 134]
[88 133]
[89 132]
[93 129]
[94 128]
[95 127]
[96 126]
[97 125]
[100 123]
[101 122]
[102 121]
[103 120]
[104 119]
[105 117]
[106 116]
[107 115]
[138 178]
[139 177]
[140 176]
[141 175]
[142 174]
[143 173]
[145 171]
[146 170]
[147 169]
[148 168]
[149 167]
[150 166]
[151 165]
[152 164]
[153 163]
[155 161]
[156 160]
[218 237]
[219 236]
[220 235]
[222 233]
[223 232]
[224 231]
[225 230]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
