%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 18:38:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAAAAUGGCCAAUUCUUUAAGAGGAGAAGUACUAAAACUUUAUAAAAAUCUGCUGUAUCUUGGACGAGACUAUCCAAAAGGAGCAGACUAUUUUAAAAAGCGUUUGAAGAACAUUUUCCUUAAAAACAAAGAUGUGAAGAAUCCAGAGAAGAUCAAAGAACUUAUUGCACAGGGCGAAUUUGUAAUGAAAGAGCUAGAAGCUUUGUACUUCCUUAGGAAAUACAGAGCUAUGAAACAACGCUAUUAUUCAGAU\
ACCAACAAAACUAAUUGA\
) } def
/len { sequence length } bind def

/coor [
[106.56321716 299.87966919]
[119.94031525 292.91519165]
[116.53068542 278.30786133]
[113.12105560 263.70050049]
[109.71141815 249.09317017]
[106.21810150 234.50561523]
[102.64121246 219.93833923]
[99.06432343 205.37104797]
[95.48743439 190.80375671]
[91.91054535 176.23646545]
[88.33365631 161.66917419]
[52.53318024 84.67208862]
[37.69949722 82.44454956]
[25.07195091 91.56501007]
[10.06022072 89.09466553]
[1.44307601 77.00002289]
[-13.39060497 74.77248383]
[-28.22428513 72.54495239]
[-43.05796814 70.31741333]
[-57.89164734 68.08987427]
[-74.02245331 81.63355255]
[-94.59809875 78.82470703]
[-106.17350769 61.94144440]
[-121.09371185 60.39632416]
[-136.01391602 58.85120773]
[-150.93412781 57.30608749]
[-165.85433960 55.76096725]
[-180.77455139 54.21584702]
[-195.69474792 52.67073059]
[-210.61495972 51.12561035]
[-225.54377747 49.66604996]
[-240.48072815 48.29209900]
[-254.93159485 54.73282242]
[-266.89666748 45.86227036]
[-281.83358765 44.48831940]
[-298.39617920 52.57516098]
[-312.30703735 41.85080338]
[-327.25872803 40.64820099]
[-342.21044922 39.44559479]
[-357.16217041 38.24299240]
[-372.12667847 37.21189880]
[-387.10205078 36.35244370]
[-402.07739258 35.49298859]
[-416.29821777 42.42687225]
[-428.56127930 33.97304916]
[-443.53662109 33.11359406]
[-458.51199341 32.25413895]
[-473.48733521 31.39468575]
[-488.46270752 30.53523254]
[-506.08139038 40.38006210]
[-521.73260498 28.98903275]
[-536.72369385 28.47317886]
[-551.71484375 27.95732498]
[-566.70593262 27.44147301]
[-581.69708252 26.92561913]
[-596.68823242 26.40976524]
[-610.74633789 33.66790009]
[-623.19995117 25.49748230]
[-631.90466309 35.74636459]
[-644.73242188 39.07369614]
[-656.95727539 34.48455429]
[-664.20745850 23.85885429]
[-679.19165039 23.17115593]
[-694.17590332 22.48345757]
[-709.16009521 21.79575729]
[-724.14434814 21.10805893]
[-733.72540283 33.31389236]
[-748.66027832 37.52460480]
[-763.20611572 32.12108612]
[-771.76977539 19.18110657]
[-771.05841064 3.68034720]
[-761.34545898 -8.42083168]
[-746.36578369 -12.46928024]
[-731.87945557 -6.90828705]
[-723.45666504 6.12383223]
[-708.47241211 6.81153107]
[-693.48822021 7.49922991]
[-678.50396729 8.18692875]
[-663.51971436 8.87462711]
[-651.57092285 -2.98410177]
[-634.40466309 -2.50408363]
[-622.68414307 10.50635433]
[-609.69830322 3.21132445]
[-596.17236328 11.41863918]
[-581.18121338 11.93449211]
[-566.19012451 12.45034504]
[-551.19897461 12.96619892]
[-536.20782471 13.48205185]
[-521.21673584 13.99790478]
[-514.43969727 6.41150856]
[-504.39944458 3.73202872]
[-494.32754517 7.07049656]
[-487.60324097 15.55987453]
[-472.62789917 16.41932869]
[-457.65252686 17.27878189]
[-442.67718506 18.13823700]
[-427.70181274 18.99769020]
[-414.55212402 12.00233459]
[-401.21795654 20.51763153]
[-386.24258423 21.37708473]
[-371.26724243 22.23653984]
[-367.19372559 19.80895996]
[-361.55816650 19.88909340]
[-355.95956421 23.29128075]
[-341.00784302 24.49388313]
[-326.05615234 25.69648552]
[-311.10443115 26.89908791]
[-301.71487427 19.30989456]
[-289.27084351 20.16549683]
[-280.45965576 29.55137634]
[-265.52270508 30.92532730]
[-252.14022827 24.38633156]
[-239.10678101 33.35515594]
[-224.16983032 34.72910690]
[-217.24737549 32.22187424]
[-209.06983948 36.20540237]
[-194.14962769 37.75052261]
[-179.22943115 39.29563904]
[-164.30921936 40.84075928]
[-149.38900757 42.38587952]
[-134.46879578 43.93099976]
[-119.54859161 45.47611618]
[-104.62838745 47.02123642]
[-99.58293915 39.24254608]
[-92.01604462 33.78540039]
[-82.93059540 31.42461205]
[-73.54959106 32.52115250]
[-65.15148926 36.96766663]
[-58.89604187 44.19741058]
[-55.66411209 53.25619888]
[-40.83042908 55.48373413]
[-25.99674988 57.71126938]
[-11.16306973 59.93880463]
[3.67061138 62.16633987]
[15.46002579 53.13609695]
[30.53521919 55.18382263]
[39.92703247 67.61087036]
[54.76071548 69.83840942]
[39.92785263 67.60543823]
[28.40324783 58.00421143]
[23.52831078 43.81848145]
[26.71646309 29.16120720]
[37.04334259 18.28207207]
[51.51480484 14.33533955]
[65.93505096 18.46530914]
[76.12310791 29.47455215]
[79.12509155 44.17108536]
[74.07202911 58.29184723]
[79.13043976 44.17049789]
[73.60397339 29.10936546]
[82.05635071 15.47349930]
[98.00363922 13.72316933]
[109.21243286 25.20107841]
[107.08431244 41.10235596]
[93.25178528 49.22890472]
[88.19338226 63.35025406]
[94.25088501 67.77254486]
[103.09546661 55.65753937]
[111.94004822 43.54253769]
[125.65717316 37.47289658]
[124.05505371 52.38711929]
[115.21047211 64.50212097]
[106.36589050 76.61712646]
[112.42339325 81.03942108]
[124.33241272 71.91937256]
[136.24142456 62.79932785]
[148.15045166 53.67927933]
[160.05946350 44.55923462]
[171.96849060 35.43918610]
[183.87750244 26.31913948]
[195.78652954 17.19909286]
[193.13093567 2.12572527]
[197.79551697 -12.45166492]
[208.70837402 -23.18330002]
[223.36183167 -27.60312843]
[238.38861084 -24.69550514]
[250.33569336 -15.12858391]
[256.45770264 -1.10076976]
[255.34785461 14.16444683]
[247.26118469 27.15923119]
[234.05595398 34.89747620]
[218.76663208 35.60099030]
[204.90657043 29.10811234]
[192.99755859 38.22816086]
[181.08853149 47.34820557]
[169.17951965 56.46825409]
[157.27049255 65.58830261]
[145.36148071 74.70834351]
[133.45245361 83.82839203]
[121.54343414 92.94844055]
[123.08033752 100.28928375]
[137.76202393 97.21547699]
[152.44369507 94.14167786]
[167.12538147 91.06787872]
[181.80711365 87.99430847]
[184.88046265 102.67607880]
[170.19918823 105.74955750]
[155.51750183 108.82336426]
[140.83581543 111.89716339]
[126.15413666 114.97096252]
[127.69104004 122.31180573]
[142.25833130 125.88868713]
[156.82560730 129.46557617]
[171.39289856 133.04246521]
[185.96018982 136.61935425]
[200.52748108 140.19624329]
[215.09475708 143.77313232]
[229.66204834 147.35002136]
[244.22933960 150.92691040]
[259.47644043 146.70358276]
[269.99154663 157.25262451]
[284.55880737 160.82951355]
[299.12609863 164.40640259]
[313.69338989 167.98329163]
[330.51742554 165.88835144]
[337.18783569 181.47494507]
[324.05691528 192.19947815]
[310.11651611 182.55058289]
[295.54922485 178.97369385]
[280.98193359 175.39680481]
[266.41464233 171.81991577]
[252.20948792 176.29907227]
[240.65245056 165.49420166]
[226.08515930 161.91731262]
[211.51788330 158.34042358]
[196.95059204 154.76353455]
[182.38330078 151.18664551]
[167.81600952 147.60975647]
[153.24871826 144.03286743]
[138.68144226 140.45597839]
[124.11415100 136.87908936]
[118.81085205 142.18238831]
[129.87998962 152.30532837]
[140.94914246 162.42828369]
[155.14054871 167.28665161]
[158.52786255 181.89918518]
[147.92138672 192.50590515]
[133.30877686 189.11894226]
[128.45013428 174.92727661]
[118.32719421 163.85813904]
[108.20424652 152.78898621]
[102.90094757 158.09230042]
[106.47783661 172.65957642]
[110.05472565 187.22686768]
[113.63161469 201.79415894]
[117.20850372 216.36145020]
[120.78538513 230.92872620]
[125.85285187 238.48262024]
[124.31875610 245.68353271]
[127.72839355 260.29089355]
[131.13803101 274.89822388]
[134.54765320 289.50555420]
[149.62568665 289.82806396]
[164.14958191 293.89099121]
[177.20635986 301.43893433]
[187.97526550 311.99740601]
[195.77934265 324.90270996]
[200.12805176 339.34362793]
[200.74798584 354.41235352]
[197.60021973 369.16165161]
[190.88259888 382.66442871]
[181.01739502 394.07180786]
[168.62475586 402.66677856]
[154.48368835 407.90899658]
[139.48310852 409.46899414]
[124.56597137 407.24865723]
[110.66998291 401.38757324]
[98.66864777 392.25418091]
[89.31638336 380.42260742]
[83.20108795 366.63662720]
[80.70716095 351.76278687]
[81.99137878 336.73608398]
[86.97302246 322.50112915]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 252]
[3 251]
[4 250]
[5 249]
[6 247]
[7 246]
[8 245]
[9 244]
[10 243]
[11 242]
[12 138]
[13 137]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[23 123]
[24 122]
[25 121]
[26 120]
[27 119]
[28 118]
[29 117]
[30 116]
[31 114]
[32 113]
[34 111]
[35 110]
[37 107]
[38 106]
[39 105]
[40 104]
[41 101]
[42 100]
[43 99]
[45 97]
[46 96]
[47 95]
[48 94]
[49 93]
[51 89]
[52 88]
[53 87]
[54 86]
[55 85]
[56 84]
[58 82]
[62 79]
[63 78]
[64 77]
[65 76]
[66 75]
[148 156]
[149 155]
[164 190]
[165 189]
[166 188]
[167 187]
[168 186]
[169 185]
[170 184]
[171 183]
[201 231]
[202 230]
[203 229]
[204 228]
[205 227]
[206 226]
[207 225]
[208 224]
[209 223]
[211 221]
[212 220]
[213 219]
[214 218]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
