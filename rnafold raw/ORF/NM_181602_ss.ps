%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 02:17:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUGUGGCAGCUACUACGGAAACUACUAUGGCACCCCUGGCUAUGGGUUCUGUGGCUAUGGAGGCCUGGGCUAUGGCUAUGGAGGCCUGGGCUGUGGCUAUGGCUCCUGCUGUGGCUGUGGCUUCCGCAGACUGGGCUGUGGCUAUGGCUAUGGCUCCCGCUCCCUCUGUGGCUAUGGCUAUGGAUGCGGCUCUGGCUCUGGCUACUAUUAUUGA\
) } def
/len { sequence length } bind def

/coor [
[80.44938660 304.70544434]
[79.36994171 289.54287720]
[84.17987061 275.12298584]
[94.14569092 263.64471436]
[107.74768829 256.85839844]
[106.66283417 241.89767456]
[105.57797241 226.93696594]
[104.49311829 211.97624207]
[103.40826416 197.01551819]
[101.99880219 182.08189392]
[100.26539612 167.18238831]
[98.53199005 152.28288269]
[96.79858398 137.38336182]
[95.06517792 122.48386383]
[81.59811401 115.87795258]
[68.75492096 123.62729645]
[55.91172028 131.37663269]
[43.06852341 139.12597656]
[30.22532845 146.87532043]
[17.38213348 154.62466431]
[4.53893709 162.37400818]
[-8.30425930 170.12335205]
[-14.03199577 177.23297119]
[-21.38995552 177.89036560]
[-24.99018478 183.42697144]
[-30.08094978 185.94030762]
[-34.83031464 185.47814941]
[-47.99786377 192.66255188]
[-61.16541290 199.84695435]
[-74.33296204 207.03135681]
[-87.50051117 214.21575928]
[-100.66806030 221.40016174]
[-113.83560944 228.58456421]
[-116.74423218 243.94926453]
[-128.88125610 253.80961609]
[-144.51597595 253.50985718]
[-156.26612854 243.19152832]
[-158.58366394 227.72663879]
[-150.37431335 214.41722107]
[-135.51428223 209.54757690]
[-121.02001190 215.41702271]
[-107.85246277 208.23262024]
[-94.68491364 201.04821777]
[-81.51736450 193.86381531]
[-68.34981537 186.67941284]
[-55.18226624 179.49501038]
[-42.01471710 172.31060791]
[-28.95255661 164.93632507]
[-16.05360222 157.28015137]
[-3.21040606 149.53080750]
[9.63278961 141.78146362]
[22.47598648 134.03211975]
[35.31918335 126.28278351]
[48.16238022 118.53343964]
[61.00557327 110.78409576]
[73.84877014 103.03475189]
[78.33921814 88.72266388]
[72.22494507 75.02537537]
[59.53440857 65.57758331]
[61.41187668 50.80177689]
[55.29760361 37.10448837]
[49.18333054 23.40720367]
[43.06905746 9.70991611]
[36.95478439 -3.98737097]
[30.84051323 -17.68465805]
[24.72624207 -31.38194466]
[18.61196899 -45.07923126]
[4.12551641 -50.80465317]
[-1.88010216 -64.78275299]
[3.66748834 -78.55808258]
[-2.44678426 -92.25537109]
[-8.56105709 -105.95265961]
[-14.67532921 -119.64994812]
[-20.78960228 -133.34722900]
[-26.90387535 -147.04452515]
[-33.01814651 -160.74180603]
[-39.13241959 -174.43910217]
[-45.24669266 -188.13638306]
[-55.60746002 -191.42878723]
[-62.30981827 -199.70762634]
[-63.33018875 -210.08988953]
[-58.57204437 -219.12652588]
[-64.28720856 -232.99508667]
[-70.00237274 -246.86364746]
[-75.71753693 -260.73220825]
[-81.87783813 -267.47048950]
[-81.41344452 -274.84313965]
[-86.92723846 -288.79296875]
[-101.15143585 -295.14196777]
[-106.54448700 -309.36764526]
[-100.40402222 -322.88912964]
[-105.91780853 -336.83895874]
[-111.43160248 -350.78881836]
[-124.60694885 -360.55316162]
[-122.46990204 -376.81246948]
[-107.21886444 -382.84054565]
[-94.54280090 -372.43624878]
[-97.48175812 -356.30261230]
[-91.96797180 -342.35275269]
[-86.45417786 -328.40292358]
[-72.72843933 -322.73373413]
[-66.93795776 -308.66513062]
[-72.97739410 -294.30676270]
[-67.46360016 -280.35693359]
[-61.84897614 -266.44735718]
[-56.13381577 -252.57881165]
[-50.41865158 -238.71025085]
[-44.70348740 -224.84169006]
[-28.56285667 -214.18959045]
[-31.54940605 -194.25065613]
[-25.43513298 -180.55335999]
[-19.32085991 -166.85607910]
[-13.20658779 -153.15879822]
[-7.09231472 -139.46150208]
[-0.97804236 -125.76422119]
[5.13622999 -112.06693268]
[11.25050259 -98.36964417]
[17.36477470 -84.67235565]
[31.32371521 -79.60446167]
[37.71958160 -65.80056000]
[32.30925751 -51.19350433]
[38.42352676 -37.49621582]
[44.53779984 -23.79893112]
[50.65207291 -10.10164356]
[56.76634598 3.59564328]
[62.88061905 17.29293060]
[68.99488831 30.99021721]
[75.10916138 44.68750381]
[87.36236572 53.15557861]
[85.92223358 68.91110229]
[92.03650665 82.60839081]
[100.20088196 80.25263214]
[108.85494232 81.65682220]
[116.30081940 86.77811432]
[120.97995758 94.82329559]
[135.96070862 95.58303070]
[150.94145203 96.34277344]
[165.92221069 97.10250854]
[180.90295410 97.86224365]
[195.88369751 98.62198639]
[210.86444092 99.38172150]
[222.53507996 89.06503296]
[237.71687317 90.04891968]
[247.48033142 101.23867035]
[262.46109009 101.99840546]
[277.44183350 102.75814056]
[292.42257690 103.51788330]
[307.40332031 104.27761841]
[322.38406372 105.03735352]
[337.36480713 105.79709625]
[352.34555054 106.55683136]
[367.32632446 107.31656647]
[382.30706787 108.07630920]
[397.28781128 108.83604431]
[412.26855469 109.59577942]
[427.24929810 110.35551453]
[431.88766479 107.98081207]
[436.51123047 107.65253448]
[440.34396362 109.02307129]
[442.85974121 111.48748779]
[457.79336548 112.89694977]
[472.72702026 114.30641174]
[483.73199463 103.19674683]
[499.30810547 101.81159973]
[512.10076904 110.80498505]
[516.06976318 125.93051147]
[509.34094238 140.04635620]
[495.09152222 146.48745728]
[480.04959106 142.21252441]
[471.31753540 129.24005127]
[456.38391113 127.83058167]
[441.45028687 126.42111969]
[426.48956299 125.33626556]
[411.50881958 124.57653046]
[396.52807617 123.81678772]
[381.54733276 123.05705261]
[366.56655884 122.29731750]
[351.58581543 121.53757477]
[336.60507202 120.77783966]
[321.62432861 120.01810455]
[306.64358521 119.25836182]
[291.66284180 118.49862671]
[276.68209839 117.73889160]
[261.70135498 116.97915649]
[246.72059631 116.21941376]
[235.87518311 126.36399841]
[220.67173767 125.80692291]
[210.10470581 114.36246490]
[195.12396240 113.60272980]
[180.14321899 112.84299469]
[165.16246033 112.08325195]
[150.18171692 111.32351685]
[135.20097351 110.56378174]
[120.22022247 109.80404663]
[109.96469116 120.75045776]
[111.69808960 135.64996338]
[113.43149567 150.54946899]
[115.16490173 165.44897461]
[116.89830780 180.34848022]
[120.00885773 184.52917480]
[121.09882355 189.03440857]
[120.38240051 193.04125977]
[118.36898041 195.93066406]
[119.45383453 210.89138794]
[120.53869629 225.85211182]
[121.62355042 240.81282043]
[122.70840454 255.77354431]
[137.14715576 260.52651978]
[148.66467285 270.44696045]
[155.50462341 284.02206421]
[156.62394714 299.18173218]
[151.85197449 313.61422729]
[141.91639709 325.11868286]
[128.33230591 331.94076538]
[113.17117310 333.04016113]
[98.74497223 328.24920654]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 207]
[6 206]
[7 205]
[8 204]
[9 203]
[10 199]
[11 198]
[12 197]
[13 196]
[14 195]
[15 56]
[16 55]
[17 54]
[18 53]
[19 52]
[20 51]
[21 50]
[22 49]
[24 48]
[27 47]
[28 46]
[29 45]
[30 44]
[31 43]
[32 42]
[33 41]
[57 131]
[58 130]
[60 128]
[61 127]
[62 126]
[63 125]
[64 124]
[65 123]
[66 122]
[67 121]
[70 118]
[71 117]
[72 116]
[73 115]
[74 114]
[75 113]
[76 112]
[77 111]
[78 110]
[82 108]
[83 107]
[84 106]
[85 105]
[87 104]
[88 103]
[91 100]
[92 99]
[93 98]
[135 194]
[136 193]
[137 192]
[138 191]
[139 190]
[140 189]
[141 188]
[144 185]
[145 184]
[146 183]
[147 182]
[148 181]
[149 180]
[150 179]
[151 178]
[152 177]
[153 176]
[154 175]
[155 174]
[156 173]
[160 172]
[161 171]
[162 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
