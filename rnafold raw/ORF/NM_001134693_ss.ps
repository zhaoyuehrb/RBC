%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 14:25:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAUCACGGACGUGCAGCUCGCCAUCUUCGCCAACAUGCUGGGCGUGUCGCUCUUCUUGCUUGUCGUUCUCUAUCACUACGUGGCCGUCAACAAUCCCAAGAAGCAGGAAUGA\
) } def
/len { sequence length } bind def

/coor [
[74.37068939 193.30241394]
[59.77653885 189.83676147]
[47.53837204 181.16340637]
[39.43322754 168.54173279]
[36.63800812 153.80447388]
[39.55859756 139.09153748]
[47.77090836 126.53933716]
[60.08259583 117.97042847]
[45.09518814 117.35594177]
[30.10778046 116.74145508]
[15.11337757 116.33173370]
[0.11477694 116.12685394]
[-14.88382339 115.92197418]
[-29.88242531 115.71709442]
[-43.78699112 123.26518250]
[-56.40739441 115.35475922]
[-71.40599823 115.14987946]
[-86.40459442 114.94499969]
[-101.40319824 114.74011993]
[-106.04051971 129.12715149]
[-114.71383667 141.50717163]
[-126.65192413 150.77937317]
[-140.79324341 156.11926270]
[-155.88037109 157.05201721]
[-170.57176208 153.49472046]
[-183.56106567 145.76365662]
[-193.69329834 134.54627991]
[-200.06748962 120.84004211]
[-202.11686707 105.86367798]
[-199.65917969 90.94888306]
[-192.91297913 77.42185974]
[-182.47813416 66.48543549]
[-169.28250122 59.11206436]
[-154.49942017 55.95737839]
[-139.44340515 57.30189514]
[-125.45321655 63.02605820]
[-113.77285767 72.62088013]
[-105.44093323 85.23319244]
[-101.19831848 99.74152374]
[-86.19971466 99.94640350]
[-71.20111847 100.15128326]
[-56.20251465 100.35616302]
[-43.37074661 92.79341888]
[-29.67754364 100.71849060]
[-14.67894363 100.92337036]
[0.31965703 101.12825012]
[15.31825733 101.33312988]
[22.14175415 98.23604584]
[30.72226906 101.75404358]
[45.70967484 102.36853027]
[60.69708633 102.98302460]
[75.52809143 100.73773956]
[89.66200256 95.71454620]
[103.72599030 90.49877167]
[117.71742249 85.09138489]
[131.70884705 79.68399811]
[145.70028687 74.27661133]
[159.69172668 68.86923218]
[173.68315125 63.46184540]
[187.67459106 58.05445862]
[199.44053650 41.79761887]
[218.38227844 45.26132584]
[232.05754089 39.09794998]
[245.73280334 32.93457413]
[259.40805054 26.77119446]
[268.81027222 14.04684353]
[283.59271240 15.87128544]
[285.22436523 0.66322964]
[294.18997192 -11.60520840]
[308.00088501 -17.69827271]
[322.90753174 -16.07120705]
[334.91744995 -7.26052999]
[348.59271240 -13.42390728]
[362.26797485 -19.58728409]
[375.94323730 -25.75066185]
[381.30462646 -40.61776352]
[395.64370728 -47.26359177]
[410.45327759 -41.74528885]
[416.94714355 -27.33676910]
[411.27258301 -12.58635139]
[396.79620361 -6.24519730]
[382.10659790 -12.07539940]
[368.43133545 -5.91202259]
[354.75607300 0.25135460]
[341.08081055 6.41473198]
[339.72726440 21.24825668]
[331.07305908 33.49409866]
[317.36062622 39.80566788]
[302.23077393 38.39694214]
[289.75610352 29.54654694]
[281.33203125 41.83005142]
[265.57144165 40.44645691]
[251.89617920 46.60983276]
[238.22091675 52.77321243]
[224.54565430 58.93658829]
[221.73440552 68.93276978]
[213.66894531 75.81894684]
[202.91612244 77.08019257]
[193.08197021 72.04589081]
[179.09053040 77.45327759]
[165.09910583 82.86066437]
[151.10766602 88.26805115]
[137.11624146 93.67543030]
[123.12480927 99.08281708]
[109.13337708 104.49020386]
[103.25424194 110.17658997]
[94.68519592 109.84845734]
[80.55128479 114.87165070]
[94.84753418 119.41227722]
[106.40729523 128.97114563]
[113.55204773 142.16024780]
[115.24433899 157.06448364]
[111.23843384 171.51966858]
[102.11601257 183.42687988]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 51]
[9 50]
[10 49]
[11 47]
[12 46]
[13 45]
[14 44]
[16 42]
[17 41]
[18 40]
[19 39]
[52 108]
[53 107]
[54 105]
[55 104]
[56 103]
[57 102]
[58 101]
[59 100]
[60 99]
[62 95]
[63 94]
[64 93]
[65 92]
[67 90]
[72 85]
[73 84]
[74 83]
[75 82]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
