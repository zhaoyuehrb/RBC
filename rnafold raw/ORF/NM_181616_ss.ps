%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sat Sep 12 09:44:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUGCUACUACAGCAACUACUAUGGUGGUCUGCGUUAUGGCUAUGGAGUCCUGGGCGGUGGCUAUGGCUGUGGCUGUGGUUAUGGCCAUGGCUAUGGAGGCCUGGGCUGUGGCUAUGGCCGUGGCUAUGGUGGCUAUGGAUAUGGCUGCUGCCGCCCAUCUUGCUAUGGAAGAUACUGGUCCUGUGGCUUCUACUGA\
) } def
/len { sequence length } bind def

/coor [
[106.29896545 481.34820557]
[105.12026978 466.19302368]
[109.83567810 451.74194336]
[119.72612762 440.19866943]
[133.28340149 433.32342529]
[132.10061646 418.37014771]
[130.91783142 403.41683960]
[129.73503113 388.46356201]
[128.55224609 373.51025391]
[112.84574127 361.99945068]
[110.61881256 342.34741211]
[123.74997711 327.15243530]
[121.86058044 312.27191162]
[119.97119141 297.39138794]
[106.84738922 290.39825439]
[100.28025818 276.85806274]
[102.97684479 261.87200928]
[114.10929871 251.22425842]
[112.21990967 236.34371948]
[102.94110870 224.69241333]
[108.87851715 210.02755737]
[106.98912048 195.14703369]
[105.09972382 180.26649475]
[103.21032715 165.38597107]
[101.32093811 150.50544739]
[99.43154144 135.62490845]
[97.54214478 120.74437714]
[84.90011597 112.67102051]
[70.60527802 117.21610260]
[59.79831314 128.77117920]
[45.32492065 125.25405121]
[31.03008842 129.79913330]
[20.22311783 141.35421753]
[5.74972773 137.83708191]
[-8.54510593 142.38215637]
[-22.83993912 146.92724609]
[-28.62159729 161.45674133]
[-42.41442108 168.82505798]
[-57.70586395 165.55307007]
[-67.27577209 153.18574524]
[-66.60552979 137.56253052]
[-56.01160049 126.06024170]
[-40.49611664 124.10990143]
[-27.38501740 132.63240051]
[-13.09018326 128.08732605]
[1.20465004 123.54225159]
[10.98915672 112.31225586]
[26.48501015 115.50429535]
[40.77984238 110.95922089]
[50.56435013 99.72922516]
[66.06020355 102.92126465]
[80.35503387 98.37619019]
[90.40372467 87.23958588]
[93.46060181 72.55437469]
[96.51748657 57.86915970]
[99.57436371 43.18394470]
[102.63124084 28.49873352]
[105.68812561 13.81352043]
[108.74500275 -0.87169296]
[111.80188751 -15.55690575]
[114.85876465 -30.24211884]
[117.91564178 -44.92733383]
[120.97252655 -59.61254501]
[102.20886993 -97.91242981]
[101.02608490 -112.86572266]
[99.84329224 -127.81901550]
[98.66050720 -142.77230835]
[97.47772217 -157.72560120]
[96.29492950 -172.67889404]
[95.11214447 -187.63218689]
[93.92935181 -202.58549500]
[92.74656677 -217.53878784]
[91.56377411 -232.49208069]
[90.38098907 -247.44537354]
[89.19820404 -262.39865112]
[88.01541138 -277.35195923]
[86.83262634 -292.30526733]
[85.64983368 -307.25854492]
[84.46704865 -322.21185303]
[83.28426361 -337.16513062]
[82.10147095 -352.11843872]
[80.91868591 -367.07171631]
[79.73589325 -382.02502441]
[78.55310822 -396.97830200]
[77.37031555 -411.93161011]
[76.18753052 -426.88491821]
[75.00474548 -441.83819580]
[73.82195282 -456.79150391]
[62.08345032 -467.03088379]
[61.09695053 -482.21249390]
[70.93099213 -493.34027100]
[69.74819946 -508.29357910]
[68.56541443 -523.24688721]
[67.38262177 -538.20013428]
[56.16178131 -549.66632080]
[58.27320862 -565.56982422]
[72.09719086 -573.71087646]
[87.02916718 -567.84436035]
[91.61458588 -552.47058105]
[82.33592224 -539.38293457]
[83.51870728 -524.42962646]
[84.70149231 -509.47634888]
[85.88428497 -494.52307129]
[97.34547424 -485.07971191]
[98.75800323 -469.93179321]
[88.77524567 -457.97427368]
[89.95803833 -443.02099609]
[91.14082336 -428.06768799]
[92.32361603 -413.11441040]
[93.50640106 -398.16110229]
[94.68919373 -383.20779419]
[95.87197876 -368.25451660]
[97.05476379 -353.30120850]
[98.23755646 -338.34793091]
[99.42034149 -323.39462280]
[100.60313416 -308.44134521]
[101.78591919 -293.48803711]
[102.96870422 -278.53475952]
[104.15149689 -263.58145142]
[105.33428192 -248.62815857]
[106.51707458 -233.67486572]
[107.69985962 -218.72157288]
[108.88264465 -203.76828003]
[110.06543732 -188.81498718]
[111.24822235 -173.86169434]
[112.43101501 -158.90838623]
[113.61380005 -143.95509338]
[114.79659271 -129.00180054]
[115.97937775 -114.04850769]
[117.16216278 -99.09521484]
[123.31898499 -94.81227112]
[135.63261414 -86.24638367]
[141.78942871 -81.96343994]
[156.22062683 -86.05498505]
[170.65180969 -90.14653015]
[185.08300781 -94.23807526]
[199.51419067 -98.32962036]
[213.94538879 -102.42116547]
[224.97799683 -114.55432892]
[240.94218445 -110.80247498]
[245.41537476 -95.02519226]
[233.79592896 -83.45279694]
[218.03692627 -87.98997498]
[203.60574341 -83.89842987]
[189.17454529 -79.80688477]
[174.74336243 -75.71533966]
[160.31216431 -71.62379456]
[145.88098145 -67.53224945]
[135.65774536 -56.55566406]
[132.60086060 -41.87045288]
[129.54397583 -27.18523979]
[126.48709869 -12.50002575]
[123.43021393 2.18518734]
[120.37333679 16.87039948]
[117.31645966 31.55561256]
[114.25957489 46.24082565]
[111.20269775 60.92604065]
[108.14581299 75.61125183]
[105.08893585 90.29646301]
[110.38896942 91.72548676]
[115.09192657 96.02748108]
[117.70766449 102.81803131]
[117.01960754 110.98169708]
[112.42267609 118.85498810]
[114.31207275 133.73551941]
[116.20146179 148.61604309]
[118.09085846 163.49658203]
[119.98025513 178.37710571]
[121.86965179 193.25762939]
[123.75904846 208.13816833]
[133.17298889 220.85383606]
[127.10043335 234.45433044]
[128.98983765 249.33485413]
[142.43005371 256.86260986]
[148.78628540 270.69921875]
[145.81140137 285.45095825]
[134.85171509 295.50198364]
[136.74111938 310.38250732]
[138.63050842 325.26306152]
[148.44284058 329.49475098]
[155.55525208 337.36126709]
[158.73124695 347.39489746]
[157.46043396 357.76080322]
[152.03932190 366.59234619]
[143.50553894 372.32748413]
[144.68833923 387.28076172]
[145.87112427 402.23406982]
[147.05390930 417.18734741]
[148.23669434 432.14065552]
[162.70625305 436.79898071]
[174.28848267 446.64382935]
[181.21716309 460.17385864]
[182.43572998 475.32586670]
[177.75836182 489.78927612]
[167.89831543 501.35855103]
[154.35917664 508.26943970]
[139.20556641 509.46804810]
[124.74831390 504.77166748]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 189]
[6 188]
[7 187]
[8 186]
[9 185]
[12 179]
[13 178]
[14 177]
[18 173]
[19 172]
[21 170]
[22 169]
[23 168]
[24 167]
[25 166]
[26 165]
[27 164]
[28 52]
[29 51]
[31 49]
[32 48]
[34 46]
[35 45]
[36 44]
[53 159]
[54 158]
[55 157]
[56 156]
[57 155]
[58 154]
[59 153]
[60 152]
[61 151]
[62 150]
[63 149]
[64 130]
[65 129]
[66 128]
[67 127]
[68 126]
[69 125]
[70 124]
[71 123]
[72 122]
[73 121]
[74 120]
[75 119]
[76 118]
[77 117]
[78 116]
[79 115]
[80 114]
[81 113]
[82 112]
[83 111]
[84 110]
[85 109]
[86 108]
[87 107]
[88 106]
[91 103]
[92 102]
[93 101]
[94 100]
[133 148]
[134 147]
[135 146]
[136 145]
[137 144]
[138 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
