%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 11:53:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCCGGUGCGCUUCAAGGGGCUGAGUGAAUACCAGAGGAACUUCCUGUGGAAAAAGUCUUAUUUGUCCGAGUCUUGUAAUUCCUCCGUGGGGCGAAAGUACCCAUGGGCUGGACUUAGAUCAGAUCAAUUAGGAAAUCAAGGCAGAUGUAGAACCAAGAUCCAGCACAGUGACAUCUCAUCCCUUCUCAUCUUGGUCUGCUCCACAUAA\
) } def
/len { sequence length } bind def

/coor [
[128.32473755 225.26300049]
[114.39894104 230.83723450]
[99.60128021 228.38180542]
[88.22213745 218.60862732]
[83.56085205 204.35374451]
[77.28349304 217.97705078]
[71.00612640 231.60037231]
[64.72876740 245.22369385]
[65.98070526 260.99530029]
[53.62727737 269.31646729]
[61.32896805 282.78732300]
[59.60834122 298.20870972]
[49.12701035 309.65078735]
[33.91526413 312.71386719]
[19.82233047 306.22012329]
[12.26722717 292.66650391]
[14.15504646 277.26470947]
[24.75988388 265.93698120]
[40.00396347 263.03912354]
[38.30302811 248.24194336]
[51.10545349 238.94633484]
[57.38281250 225.32301331]
[63.66017151 211.69969177]
[69.93753052 198.07638550]
[68.78755951 187.30014038]
[77.47115326 178.78053284]
[82.08515930 164.50779724]
[86.69917297 150.23506165]
[81.37616730 144.95153809]
[70.80894470 155.59738159]
[60.16328430 145.02998352]
[70.73015594 134.38449097]
[65.40715027 129.10096741]
[51.16916275 133.82110596]
[36.93117523 138.54124451]
[26.26680183 150.22805786]
[11.75134468 146.88877869]
[-2.48664474 151.60891724]
[-16.72463417 156.32905579]
[-30.96262360 161.04917908]
[-44.09447861 171.77255249]
[-58.03403473 162.12242126]
[-52.61988449 146.05619812]
[-35.68275833 146.81120300]
[-21.44476891 142.09106445]
[-7.20677900 137.37092590]
[7.03120995 132.65078735]
[16.67718697 121.30158997]
[32.21104050 124.30325317]
[46.44902802 119.58312225]
[60.68701935 114.86298370]
[60.74644089 104.39176941]
[63.38644791 94.89186096]
[68.13059235 86.94983673]
[74.38231659 80.97828674]
[81.48080444 77.19514465]
[88.75903320 75.61972046]
[86.53392029 60.78567505]
[84.30879974 45.95162964]
[82.08367920 31.11758804]
[79.85856628 16.28354454]
[76.21047974 1.73392332]
[71.17356110 -12.39510632]
[66.13664246 -26.52413559]
[61.09972763 -40.65316391]
[56.06281281 -54.78219604]
[50.92085266 -68.87333679]
[45.67413330 -82.92580414]
[33.59854889 -93.14788055]
[36.39533234 -107.77754974]
[31.14861488 -121.83002472]
[25.90189743 -135.88249207]
[20.65517807 -149.93496704]
[15.40846062 -163.98744202]
[10.16174221 -178.03990173]
[-1.91384459 -188.26197815]
[0.88294083 -202.89164734]
[-4.36377716 -216.94412231]
[-10.51042271 -203.26133728]
[-23.95892715 -196.61770630]
[-38.56081390 -200.05062866]
[-47.64029694 -211.99060059]
[-47.04636002 -226.97883606]
[-37.05054092 -238.16291809]
[-22.22279739 -240.42962646]
[-9.34099388 -232.74122620]
[-13.09729481 -247.26329041]
[-16.85359573 -261.78533936]
[-20.60989571 -276.30740356]
[-24.36619759 -290.82946777]
[-28.12249756 -305.35153198]
[-31.87879753 -319.87356567]
[-35.74310303 -334.36727905]
[-39.71519852 -348.83178711]
[-51.75673294 -359.96432495]
[-47.87302780 -375.89697266]
[-32.05930328 -380.23956299]
[-20.58336639 -368.52484131]
[-25.25067520 -352.80389404]
[-21.27857971 -338.33935547]
[-16.47605705 -332.72177124]
[-17.35673904 -323.62988281]
[-13.60043812 -309.10781860]
[-9.84413719 -294.58575439]
[-6.08783674 -280.06369019]
[-2.33153605 -265.54165649]
[1.42476463 -251.01959229]
[5.18106508 -236.49752808]
[9.68869400 -222.19084167]
[14.93541241 -208.13836670]
[26.63571930 -198.92141724]
[24.21421432 -183.28662109]
[29.46093178 -169.23414612]
[34.70764923 -155.18168640]
[39.95436859 -141.12921143]
[45.20108795 -127.07673645]
[50.44780350 -113.02426910]
[62.14810944 -103.80731964]
[59.72660446 -88.17252350]
[64.97332764 -74.12005615]
[70.25787354 -68.95330048]
[70.19184113 -59.81911087]
[75.22875977 -45.69008255]
[80.26567841 -31.56105232]
[85.30258942 -17.43202209]
[90.33950806 -3.30299282]
[93.44428253 -17.97815323]
[102.18347931 -30.16940117]
[115.08437347 -37.82229614]
[129.97296143 -39.64719009]
[144.34022522 -35.33655930]
[155.76504517 -25.61681557]
[162.32214355 -12.12591171]
[162.90652466 2.86270022]
[157.41970825 16.82317543]
[146.78633118 27.40292931]
[132.79829407 32.81908798]
[117.81282806 32.15893173]
[104.35524750 25.53370857]
[94.69261169 14.05842686]
[96.91772461 28.89247131]
[99.14284515 43.72651291]
[101.36795807 58.56055832]
[103.59307861 73.39459991]
[133.70899963 92.95239258]
[121.84038544 135.90844727]
[135.11822510 142.88690186]
[144.17050171 144.10922241]
[148.54066467 150.06936646]
[161.71315002 157.24473572]
[174.88562012 164.42010498]
[188.05810547 171.59547424]
[201.23057556 178.77084351]
[210.26365662 180.12779236]
[214.54458618 186.15235901]
[227.60877991 193.52304077]
[240.67295837 200.89373779]
[253.73715210 208.26443481]
[266.80133057 215.63511658]
[279.86550903 223.00581360]
[292.92971802 230.37649536]
[304.09201050 220.18530273]
[317.83917236 213.95166016]
[332.81967163 212.27461243]
[347.56506348 215.30587769]
[360.63378906 222.73628235]
[370.75222778 233.82719421]
[376.93872070 247.48396301]
[378.59890747 262.36395264]
[375.58264160 277.00851440]
[388.64685059 284.37921143]
[401.71102905 291.74987793]
[414.77520752 299.12057495]
[431.15924072 298.41683960]
[439.73123169 312.39727783]
[431.67303467 326.68005371]
[415.27423096 326.57223511]
[407.40451050 312.18475342]
[394.34033203 304.81408691]
[381.27615356 297.44338989]
[368.21197510 290.07269287]
[357.23693848 300.22698975]
[343.64224243 306.50033569]
[328.75402832 308.26693726]
[314.02883911 305.34130859]
[300.91119385 297.99758911]
[290.69189453 286.94403076]
[284.38101196 273.25457764]
[282.60800171 258.26461792]
[285.55902100 243.44067383]
[272.49484253 236.06999207]
[259.43063354 228.69929504]
[246.36645508 221.32861328]
[233.30227661 213.95791626]
[220.23808289 206.58723450]
[207.17390442 199.21653748]
[194.05520630 191.94331360]
[180.88273621 184.76794434]
[167.71025085 177.59257507]
[154.53778076 170.41722107]
[141.36531067 163.24185181]
[128.13977051 156.16474915]
[114.86193085 149.18629456]
[100.97190094 154.84907532]
[96.35789490 169.12181091]
[91.74388885 183.39454651]
[104.83312225 176.06843567]
[119.82398224 176.59214783]
[132.37005615 184.81382751]
[138.83377075 198.34971619]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 24]
[6 23]
[7 22]
[8 21]
[10 19]
[26 206]
[27 205]
[28 204]
[33 51]
[34 50]
[35 49]
[37 47]
[38 46]
[39 45]
[40 44]
[57 144]
[58 143]
[59 142]
[60 141]
[61 140]
[62 126]
[63 125]
[64 124]
[65 123]
[66 122]
[67 120]
[68 119]
[70 117]
[71 116]
[72 115]
[73 114]
[74 113]
[75 112]
[77 110]
[78 109]
[86 108]
[87 107]
[88 106]
[89 105]
[90 104]
[91 103]
[92 102]
[93 100]
[94 99]
[146 203]
[147 202]
[149 201]
[150 200]
[151 199]
[152 198]
[153 197]
[155 196]
[156 195]
[157 194]
[158 193]
[159 192]
[160 191]
[161 190]
[170 181]
[171 180]
[172 179]
[173 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
