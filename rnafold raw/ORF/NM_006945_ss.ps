%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sat Sep 12 01:37:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCUUAUCAACAGCAGCAGUGCAAGCAGCCCUGCCAGCCACCUCCUGUGUGCCCCACGCCAAAGUGCCCAGAGCCAUGUCCACCCCCGAAGUGCCCUGAGCCCUGCCCAUCACCAAAGUGUCCACAGCCCUGCCCACCUCAGCAGUGCCAGCAGAAAUAUCCUCCUGUGACACCUUCCCCACCCUGCCAGCCAAAGUGUCCACCCAAGAGCAAGUAA\
) } def
/len { sequence length } bind def

/coor [
[71.54936981 258.97091675]
[83.05834198 248.38424683]
[82.20201111 233.40870667]
[81.23877716 218.43966675]
[80.16869354 203.47787476]
[79.09860229 188.51609802]
[78.02851868 173.55432129]
[71.00139618 170.93333435]
[65.75942993 184.98757935]
[65.11700439 199.97381592]
[50.66571808 203.99382019]
[42.37680435 191.49205017]
[51.70518494 179.74562073]
[56.94714737 165.69137573]
[49.92002487 163.07038879]
[39.31342316 173.67698669]
[34.95804596 191.57183838]
[17.83831024 195.44233704]
[7.38424635 206.19931030]
[-3.06981730 216.95628357]
[-13.52388096 227.71327209]
[-17.59307480 243.00222778]
[-32.01185226 246.73693848]
[-42.46591568 257.49392700]
[-43.67547607 273.49130249]
[-57.01744080 282.40039062]
[-72.25699615 277.38684082]
[-77.70366669 262.29666138]
[-69.17922211 248.70574951]
[-53.22289276 247.03985596]
[-42.76882935 236.28288269]
[-39.44738007 221.76333618]
[-24.28085709 217.25920105]
[-13.82679462 206.50222778]
[-3.37273073 195.74525452]
[7.08133268 184.98826599]
[7.22097349 172.89669800]
[15.83657265 163.84967041]
[28.70681953 163.07038879]
[39.31342316 152.46379089]
[36.44329453 145.53469849]
[22.58510399 151.27494812]
[8.72691059 157.01519775]
[-5.13137770 162.75521851]
[-10.87116909 148.89683533]
[2.98665905 143.15699768]
[16.84485245 137.41674805]
[30.70304489 131.67649841]
[27.83292007 124.74740601]
[12.83291912 124.74740601]
[-2.16708088 124.74740601]
[-17.16707993 124.74740601]
[-32.16707993 124.74740601]
[-48.00621414 130.79374695]
[-58.20096588 117.24740601]
[-48.00621414 103.70106506]
[-32.16707993 109.74740601]
[-17.16707993 109.74740601]
[-2.16708088 109.74740601]
[12.83291912 109.74740601]
[27.83292007 109.74740601]
[28.43304253 90.58851624]
[33.98634338 72.41874695]
[44.01964951 56.48368835]
[57.75601578 43.85133743]
[74.17428589 35.34062958]
[65.70764160 22.95855331]
[57.24099350 10.57647419]
[41.96382904 7.53574896]
[33.55382919 -5.14204979]
[36.54684448 -19.68775177]
[28.08019638 -32.06983185]
[19.61354828 -44.45190811]
[5.43721008 -51.47629547]
[4.64031172 -66.34957123]
[-3.82633662 -78.73164368]
[-12.38117599 -91.05295563]
[-21.02377129 -103.31287384]
[-28.52084160 -108.51935577]
[-29.70077133 -115.81013489]
[-44.97793579 -118.85086060]
[-53.38793564 -131.52865601]
[-50.39492035 -146.07435608]
[-58.86156845 -158.45643616]
[-67.32821655 -170.83851624]
[-82.90692139 -172.19419861]
[-93.93289948 -183.28302002]
[-95.20000458 -198.86917114]
[-86.10996246 -211.59336853]
[-70.95480347 -215.44761658]
[-56.89033508 -208.61207581]
[-50.55736923 -194.31425476]
[-54.94613647 -179.30516052]
[-46.47948837 -166.92308044]
[-38.01284027 -154.54101562]
[-23.37233543 -152.05279541]
[-14.60956287 -139.61622620]
[-17.31869316 -124.27677917]
[-8.76385403 -111.95546722]
[-0.12125952 -99.69555664]
[6.29749250 -96.04215240]
[8.55574226 -87.19829559]
[17.02239037 -74.81621552]
[30.59313583 -68.67747498]
[31.99562645 -52.91855621]
[40.46227264 -40.53647995]
[48.92892456 -28.15439987]
[63.56942749 -25.66619110]
[72.33219910 -13.22961235]
[69.62306976 2.10982585]
[78.08972168 14.49190426]
[86.55636597 26.87398338]
[101.27849579 24.00016785]
[104.46697998 9.34296417]
[107.65545654 -5.31423855]
[102.14946747 -20.76144218]
[112.97880554 -33.07637024]
[129.00317383 -29.59047890]
[133.73808289 -13.88975716]
[122.31266022 -2.12575936]
[119.12418365 12.53144360]
[115.93569946 27.18864632]
[122.41297150 30.96952057]
[129.97471619 18.01498604]
[137.53666687 5.06056976]
[150.49096680 12.62271881]
[142.92924500 25.57673645]
[135.36750793 38.53126907]
[141.84477234 42.31214523]
[153.03959656 32.32835770]
[158.18911743 17.36864853]
[172.83758545 14.67207241]
[184.03240967 4.68828726]
[195.22723389 -5.29549789]
[206.42205811 -15.27928352]
[204.73962402 -30.70487976]
[212.47463989 -44.15660858]
[226.65284729 -50.46200943]
[241.82243347 -47.19652176]
[252.15037537 -35.61579895]
[253.66537476 -20.17285728]
[245.78488159 -6.80582809]
[231.53910828 -0.65460628]
[216.40583801 -4.08446169]
[205.21102905 5.89932346]
[194.01620483 15.88310909]
[182.82138062 25.86689377]
[178.47257996 40.11249542]
[163.02337646 43.52318192]
[151.82855225 53.50696564]
[157.85975647 66.70732880]
[160.77714539 80.32421112]
[160.68104553 93.66382599]
[175.60617065 92.16692352]
[190.53129578 90.67002106]
[205.45642090 89.17312622]
[211.69692993 75.13917542]
[224.12777710 66.11866760]
[239.40512085 64.53805542]
[253.41943359 70.82252502]
[262.40093994 83.28157806]
[263.93365479 98.56380463]
[257.60528564 112.55834961]
[245.11813354 121.50076294]
[229.83117676 122.98556519]
[215.85653687 116.61336517]
[206.95332336 104.09824371]
[192.02819824 105.59514618]
[177.10307312 107.09204865]
[162.17794800 108.58895111]
[158.36466980 123.09615326]
[170.62458801 131.73873901]
[182.88450623 140.38134766]
[195.14442444 149.02394104]
[207.40434265 157.66653442]
[218.98666382 147.99636841]
[232.67756653 141.65431213]
[247.54357910 139.07278442]
[262.57110596 140.42778015]
[276.73553467 145.62693787]
[289.07113647 154.31575012]
[298.73681641 165.90180969]
[305.07357788 179.59515381]
[307.64938354 194.46215820]
[306.28857422 209.48915100]
[301.08395386 223.65158081]
[292.39038086 235.98382568]
[280.80056763 245.64503479]
[267.10479736 251.97651672]
[252.23678589 254.54656982]
[237.21032715 253.17996216]
[223.04991150 247.96987915]
[210.72102356 239.27153015]
[201.06428528 227.67800903]
[194.73808289 213.97978210]
[192.17378235 199.11079407]
[193.54618835 184.08485413]
[198.76174927 169.92645264]
[186.50183105 161.28385925]
[174.24191284 152.64125061]
[161.98199463 143.99865723]
[149.72207642 135.35606384]
[144.19493103 144.86901855]
[136.83215332 153.49436951]
[127.78211975 160.87687683]
[117.26182556 166.68737793]
[105.55210876 170.63594055]
[92.99029541 172.48422241]
[94.06038666 187.44601440]
[95.13047028 202.40779114]
[96.20056152 217.36956787]
[99.93206024 225.69960022]
[97.17755127 232.55236816]
[98.03388214 247.52790833]
[110.67462158 256.73364258]
[114.39046478 271.92333984]
[107.42689514 285.92486572]
[93.07190704 292.12713623]
[78.10347748 287.60162354]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 214]
[3 213]
[4 211]
[5 210]
[6 209]
[7 208]
[15 40]
[16 39]
[18 36]
[19 35]
[20 34]
[21 33]
[23 31]
[24 30]
[49 61]
[50 60]
[51 59]
[52 58]
[53 57]
[66 112]
[67 111]
[68 110]
[71 107]
[72 106]
[73 105]
[75 103]
[76 102]
[77 100]
[78 99]
[80 98]
[83 95]
[84 94]
[85 93]
[113 122]
[114 121]
[115 120]
[129 150]
[130 149]
[132 147]
[133 146]
[134 145]
[135 144]
[153 170]
[154 169]
[155 168]
[156 167]
[171 202]
[172 201]
[173 200]
[174 199]
[175 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
