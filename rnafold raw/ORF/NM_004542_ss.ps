%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 17:55:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGCUGCGAGAGUCGGCGCCUUCCUCAAGAAUGCCUGGGACAAGGAGCCAGUGCUGGUCGUGUCCUUCGUCGUCGGGGGCCUCGCUGUAAUUCUGCCCCCAUUGAGCCCCUACUUCAAGUACUCCGUCAUGAUCAACAAGGCCACGCCCUACAACUACCCAGUGCCCGUCCGUGAUGAUGGGAACAUGCCCGACGUGCCCAGCCACCCCCAGGACCCUCAGGGCCCCAGCCUGGAGUGGCUGAAGAAACUGUGA\
) } def
/len { sequence length } bind def

/coor [
[226.11849976 344.96517944]
[233.52487183 337.10968018]
[225.19131470 324.63763428]
[216.85775757 312.16558838]
[208.52421570 299.69354248]
[200.19065857 287.22149658]
[191.85710144 274.74945068]
[178.35287476 268.46572876]
[177.11924744 252.69268799]
[162.25389099 252.29368591]
[150.33291626 243.10920715]
[146.05592346 228.49549866]
[151.26423645 213.99792480]
[142.93067932 201.52587891]
[134.59712219 189.05383301]
[126.26357269 176.58178711]
[117.93002319 164.10974121]
[111.61895752 160.30519104]
[109.57182312 151.43312073]
[101.39195251 138.85975647]
[102.54247284 153.81556702]
[103.69299316 168.77137756]
[108.66003418 182.92512512]
[106.50996399 197.77023315]
[97.73139191 209.93315125]
[84.31924438 216.64987183]
[69.32142639 216.39401245]
[56.14619064 209.22370911]
[47.78760529 196.76841736]
[46.14515686 181.85861206]
[51.59209442 167.88253784]
[62.88948822 158.01681519]
[71.26222992 145.57104492]
[79.63497925 133.12527466]
[66.32038116 140.03335571]
[53.04842758 147.02301025]
[39.81961060 154.09396362]
[26.59078979 161.16490173]
[13.36197186 168.23585510]
[12.22662735 183.62138367]
[2.93521810 195.93696594]
[-11.54740238 201.25271606]
[-26.59988213 197.87242126]
[-37.41902924 186.87471008]
[-40.55249405 171.76892090]
[-35.00039673 157.37524414]
[-22.53439522 148.28666687]
[-7.13234377 147.40330505]
[6.29102039 155.00703430]
[19.51984024 147.93609619]
[32.74865723 140.86514282]
[45.97747803 133.79418945]
[50.38230133 127.88642120]
[59.41230392 126.71876526]
[72.72689819 119.81068420]
[67.62647247 91.08704376]
[86.81306458 69.26197815]
[78.32708740 56.89314270]
[64.13979340 49.89090347]
[63.31966782 35.01889420]
[54.83369064 22.65005684]
[46.34771347 10.28121662]
[37.86173630 -2.08762312]
[23.67444611 -9.08986092]
[22.85431862 -23.96187019]
[14.36834145 -36.33070755]
[5.88236475 -48.69955063]
[-2.60361242 -61.06838989]
[-10.01693439 -66.35488129]
[-11.11674118 -73.64148712]
[-19.45029449 -86.11353302]
[-36.15678787 -93.88912964]
[-36.58836365 -111.44493866]
[-45.07434082 -123.81377411]
[-53.56031799 -136.18261719]
[-64.16692352 -146.78921509]
[-76.53575897 -155.27519226]
[-88.90460205 -163.76116943]
[-101.27343750 -172.24714661]
[-113.64228058 -180.73312378]
[-126.01111603 -189.21910095]
[-138.73379517 -180.90034485]
[-153.67240906 -178.08848572]
[-168.54890442 -181.21231079]
[-181.09472656 -189.79547119]
[-189.39674377 -202.52908325]
[-192.18894958 -217.47137451]
[-189.04556274 -232.34375000]
[-180.44590759 -244.87828064]
[-167.70138550 -253.16352844]
[-152.75543213 -255.93608093]
[-137.88720703 -252.77313232]
[-125.36399841 -244.15699768]
[-117.09551239 -231.40158081]
[-114.34262848 -216.45199585]
[-117.52513885 -201.58793640]
[-105.15630341 -193.10195923]
[-92.78746033 -184.61598206]
[-80.41862488 -176.13000488]
[-68.04978180 -167.64402771]
[-55.68094254 -159.15805054]
[-49.57567215 -163.51416016]
[-37.36512756 -172.22636414]
[-31.25985336 -176.58247375]
[-35.26054382 -191.03912354]
[-39.26123810 -205.49575806]
[-54.22747421 -208.28378296]
[-66.44925690 -217.25680542]
[-73.53417969 -230.59187317]
[-74.12427521 -245.61894226]
[-68.15602875 -259.35537720]
[-56.86233521 -269.09796143]
[-60.86302567 -283.55459595]
[-64.86371613 -298.01123047]
[-68.86441040 -312.46786499]
[-78.91622162 -326.12060547]
[-68.57965851 -339.55905151]
[-52.80494690 -333.34658813]
[-54.40776825 -316.46856689]
[-50.40707397 -302.01193237]
[-46.40638351 -287.55529785]
[-42.40569305 -273.09863281]
[-27.71007919 -270.54827881]
[-15.52900696 -261.83444214]
[-8.30969238 -248.64192200]
[-7.53103209 -233.56166077]
[-13.40095997 -219.58200073]
[-24.80459595 -209.49644470]
[-20.80390358 -195.03981018]
[-16.80321312 -180.58316040]
[-23.44953728 -154.52845764]
[-41.19147873 -144.66859436]
[-32.70550156 -132.29975891]
[-24.21952438 -119.93091583]
[-12.40522099 -117.41787720]
[-5.23072815 -107.20744324]
[-6.97825003 -94.44708252]
[1.35530341 -81.97504425]
[9.76522732 -69.55436707]
[18.25120354 -57.18552780]
[26.73718071 -44.81668472]
[35.22315979 -32.44784546]
[48.80347443 -26.33031082]
[50.23057938 -10.57359982]
[58.71655655 1.79523933]
[67.20252991 14.16407871]
[75.68850708 26.53291893]
[89.26882935 32.65045547]
[90.69593048 48.40716553]
[99.18190765 60.77600479]
[97.66469574 45.85293198]
[90.23831177 32.82032776]
[89.54573059 17.83632660]
[95.73825836 4.17424011]
[107.46311188 -5.18139267]
[122.15894318 -8.18679714]
[136.61540222 -4.18542957]
[147.67439270 5.94859505]
[152.92007446 20.00145721]
[151.20646667 34.90325546]
[142.90792847 47.39862823]
[129.84020996 54.75709534]
[120.86686707 66.77703857]
[134.50437927 60.53059769]
[143.82902527 47.74929428]
[158.62228394 49.48378754]
[172.25981140 43.23734283]
[185.89732361 36.99089813]
[199.53485107 30.74445534]
[213.17236328 24.49801254]
[226.80989075 18.25156975]
[232.08078003 3.35213065]
[246.37915039 -3.38078976]
[261.22201538 2.04733038]
[267.80340576 16.41608429]
[262.21865845 31.20074463]
[247.78111267 37.62983322]
[233.05633545 31.88908958]
[219.41880798 38.13553238]
[205.78129578 44.38197708]
[192.14376831 50.62841797]
[178.50625610 56.87486267]
[164.86872864 63.12130737]
[156.51954651 75.45582581]
[140.75082397 74.16812134]
[127.11331177 80.41455841]
[133.51293945 98.79844666]
[128.59458923 117.68515778]
[113.96531677 130.67988586]
[122.14519501 143.25325012]
[130.40206909 155.77619934]
[138.73561096 168.24824524]
[147.06916809 180.72027588]
[155.40272522 193.19232178]
[163.73628235 205.66436768]
[179.12342834 206.40049744]
[190.98800659 215.94435120]
[194.91137695 230.47264099]
[189.59129333 244.35913086]
[203.69158936 251.53494263]
[204.32914734 266.41589355]
[212.66270447 278.88793945]
[220.99624634 291.35998535]
[229.32980347 303.83203125]
[237.66336060 316.30407715]
[245.99691772 328.77612305]
[266.42633057 323.07070923]
[287.51559448 325.08990479]
[306.44573975 334.54544067]
[320.69305420 350.15621948]
[328.36538696 369.82202148]
[328.45361328 390.90582275]
[320.96426392 410.58764648]
[332.67529297 419.96051025]
[341.30401611 422.86740112]
[344.47164917 429.52099609]
[356.06680298 439.03689575]
[367.66195679 448.55279541]
[383.74151611 453.92715454]
[383.02847290 470.86608887]
[366.55410767 474.87008667]
[358.14605713 460.14794922]
[346.55090332 450.63204956]
[334.95574951 441.11614990]
[323.30242920 431.67156982]
[311.59136963 422.29867554]
[308.78253174 424.82409668]
[305.81408691 427.15982056]
[313.04684448 440.30087280]
[320.27960205 453.44192505]
[327.51235962 466.58297729]
[334.74511719 479.72402954]
[349.99194336 483.88458252]
[357.75845337 497.64889526]
[353.43695068 512.85089111]
[339.59130859 520.47143555]
[324.43585205 515.98944092]
[316.96209717 502.06399536]
[321.60406494 486.95678711]
[314.37130737 473.81573486]
[307.13854980 460.67468262]
[299.90579224 447.53363037]
[292.67303467 434.39257812]
[282.38507080 437.37637329]
[271.71636963 438.40286255]
[261.03619385 437.43429565]
[250.71459961 434.50198364]
[241.10963440 429.70529175]
[232.55491638 423.20837402]
[225.34805298 415.23443604]
[219.74028015 406.05807495]
[215.92770386 395.99594116]
[214.04443359 385.39566040]
[214.15789795 374.62396240]
[216.26640320 364.05386353]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 206]
[3 205]
[4 204]
[5 203]
[6 202]
[7 201]
[9 199]
[13 195]
[14 194]
[15 193]
[16 192]
[17 191]
[19 190]
[20 189]
[34 55]
[35 54]
[36 52]
[37 51]
[38 50]
[39 49]
[57 150]
[58 149]
[60 147]
[61 146]
[62 145]
[63 144]
[65 142]
[66 141]
[67 140]
[68 139]
[70 138]
[71 137]
[73 134]
[74 133]
[75 132]
[76 101]
[77 100]
[78 99]
[79 98]
[80 97]
[81 96]
[104 130]
[105 129]
[106 128]
[112 122]
[113 121]
[114 120]
[115 119]
[163 186]
[164 185]
[166 183]
[167 182]
[168 181]
[169 180]
[170 179]
[171 178]
[213 226]
[214 225]
[216 224]
[217 223]
[218 222]
[228 243]
[229 242]
[230 241]
[231 240]
[232 239]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
