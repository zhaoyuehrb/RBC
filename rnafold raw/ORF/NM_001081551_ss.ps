%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 22:19:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAGGAUCCAUUAUCUUCUGUUUGCUUUGCUCUUCCUGUUUUUGGUGCCUGUUCCAGGUCAUGGAGGAAUCAUAAACACAUUACAGAAAUAUUAUUGCAGAGUCAGAGGCGGCCGGUGUGCUGUGCUCAGCUGCCUUCCAAAGGAGGAACAGAUCGGCAAGUGCUCGACGCGUGGCCGAAAAUGCUGCCGAAGAAAGAAAUAA\
) } def
/len { sequence length } bind def

/coor [
[-19.08331108 164.00965881]
[-14.84773445 149.62332153]
[-17.27975273 134.82179260]
[-22.24168777 148.97732544]
[-27.20362091 163.13285828]
[-32.16555405 177.28839111]
[-37.12749100 191.44392395]
[-42.08942413 205.59947205]
[-36.46031570 220.62254333]
[-44.81945419 234.31576538]
[-60.75442505 236.17486572]
[-72.04128265 224.77371216]
[-70.02171326 208.85827637]
[-56.24496078 200.63752747]
[-51.28302765 186.48199463]
[-46.32109070 172.32646179]
[-41.35915756 158.17092896]
[-36.39722443 144.01538086]
[-31.43528938 129.85984802]
[-29.60078430 124.62418365]
[-26.61412811 120.35884094]
[-22.73780823 117.27830505]
[-36.42536163 111.14228058]
[-50.11291504 105.00624847]
[-63.80047226 98.87021637]
[-77.53463745 92.83924866]
[-91.31461334 86.91368866]
[-105.09459686 80.98813629]
[-118.87457275 75.06257629]
[-132.65454102 69.13701630]
[-146.43452454 63.21146011]
[-156.73829651 72.88876343]
[-169.91261292 77.89196777]
[-183.95608521 77.49633026]
[-196.74870300 71.79461670]
[-206.37185669 61.67811203]
[-211.39613342 48.69744492]
[-211.09350586 34.82497787]
[-224.78106689 28.68894768]
[-238.46861267 22.55291939]
[-252.15617371 16.41688919]
[-265.84371948 10.28085995]
[-279.53128052 4.14483023]
[-293.21884155 -1.99119937]
[-306.90640259 -8.12722874]
[-321.02349854 -13.19748211]
[-335.48730469 -17.17220497]
[-349.95111084 -21.14692688]
[-363.57312012 -13.59188843]
[-378.18484497 -17.82886505]
[-385.30346680 -30.86192703]
[-400.66058350 -27.05799866]
[-410.88262939 -37.89120865]
[-425.34643555 -41.86593246]
[-439.81024170 -45.84065628]
[-454.27404785 -49.81537628]
[-468.73785400 -53.79010010]
[-483.33734131 -47.13917542]
[-497.57400513 -54.53488541]
[-500.52673340 -70.30387115]
[-489.93041992 -82.34952545]
[-473.91366577 -81.43144226]
[-464.76312256 -68.25390625]
[-450.29931641 -64.27918243]
[-435.83554077 -60.30445862]
[-421.37173462 -56.32973480]
[-406.90792847 -52.35501099]
[-392.58535767 -56.44324112]
[-381.32873535 -45.32572937]
[-368.54965210 -52.89080429]
[-353.82467651 -49.06591415]
[-345.97637939 -35.61072922]
[-331.51257324 -31.63600731]
[-317.04876709 -27.66128540]
[-326.34552002 -39.43288422]
[-328.61145020 -54.26074982]
[-323.25466919 -68.27162933]
[-311.67443848 -77.80569458]
[-296.89569092 -80.37250519]
[-282.77880859 -75.30157471]
[-273.01138306 -63.91750336]
[-270.14474487 -49.19396973]
[-274.92773438 -34.97697067]
[-286.11093140 -24.98018456]
[-300.77035522 -21.81478310]
[-287.08279419 -15.67875385]
[-273.39526367 -9.54272366]
[-259.70770264 -3.40669441]
[-246.02014160 2.72933507]
[-232.33259583 8.86536503]
[-218.64503479 15.00139427]
[-204.95747375 21.13742447]
[-192.94294739 10.60501480]
[-177.48211670 6.34990311]
[-161.65586853 9.27262497]
[-148.64086914 18.83811760]
[-141.07200623 33.17282104]
[-140.50897217 49.43148422]
[-126.72898865 55.35704041]
[-112.94901276 61.28260040]
[-99.16903687 67.20816040]
[-85.38906097 73.13371277]
[-71.60908508 79.05927277]
[-64.21892548 78.81355286]
[-57.66444016 85.18266296]
[-43.97688675 91.31869507]
[-30.28933334 97.45472717]
[-16.60177803 103.59075165]
[-1.76046240 105.76683807]
[13.11245728 103.81844330]
[27.98537827 101.87004852]
[42.85829926 99.92164612]
[57.73121643 97.97325134]
[72.60414124 96.02485657]
[80.92767334 66.46984100]
[118.91475677 54.29195404]
[128.80854797 43.01751709]
[138.70233154 31.74307823]
[148.59611511 20.46863937]
[151.90652466 11.94995022]
[158.72894287 9.09873009]
[168.79434204 -2.02277040]
[178.85974121 -13.14427090]
[188.92514038 -24.26576996]
[191.84481812 -40.40291595]
[207.36915588 -45.68754578]
[219.52803040 -34.68328094]
[215.81344604 -18.71037102]
[200.04664612 -14.20037270]
[189.98124695 -3.07887292]
[179.91584778 8.04262733]
[169.85044861 19.16412735]
[159.87055969 30.36242676]
[149.97677612 41.63686371]
[140.08299255 52.91130447]
[130.18919373 64.18574524]
[138.43894958 76.71337891]
[152.70478821 72.07812500]
[166.97064209 67.44287109]
[181.23649597 62.80761337]
[188.18727112 48.61387634]
[203.16557312 43.57144165]
[217.28501892 50.67189789]
[222.16882324 65.70266724]
[214.91947937 79.74626923]
[199.83790588 84.47087097]
[185.87174988 77.07346344]
[171.60589600 81.70871735]
[157.34004211 86.34397125]
[143.07420349 90.97922516]
[142.67211914 98.46844482]
[157.65052795 99.27285767]
[156.84587097 114.25125885]
[141.86795044 113.44686890]
[141.46586609 120.93608093]
[155.15341187 127.07211304]
[168.84097290 133.20814514]
[182.52853394 139.34417725]
[196.21607971 145.48020935]
[212.44415283 138.95416260]
[228.06463623 146.04217529]
[233.61634827 161.91496277]
[247.39631653 167.84051514]
[261.17630005 173.76606750]
[276.55154419 169.18554688]
[289.63619995 178.46836853]
[290.39285278 194.49357605]
[278.24105835 204.96797180]
[262.50262451 201.85652161]
[255.25073242 187.54605103]
[241.47076416 181.62048340]
[227.69078064 175.69493103]
[216.50384521 182.09439087]
[203.47937012 180.86224365]
[193.39524841 172.22535706]
[190.08004761 159.16775513]
[176.39250183 153.03172302]
[162.70494080 146.89569092]
[149.01739502 140.75967407]
[135.32983398 134.62364197]
[117.69789886 141.49357605]
[100.44110870 140.75097656]
[86.44876099 133.77970886]
[77.60781097 122.91565704]
[74.55253601 110.89777374]
[59.67961502 112.84616852]
[44.80669403 114.79457092]
[29.93377495 116.74296570]
[15.06085396 118.69136047]
[0.18793404 120.63975525]
[14.17426014 126.06033325]
[29.12699509 124.87049866]
[43.62616348 128.71421814]
[56.02579880 137.15512085]
[64.91828156 149.23501587]
[69.29411316 163.58256531]
[68.65655518 178.56901550]
[63.07798004 192.49307251]
[53.19167328 203.77406311]
[40.11994171 211.13136292]
[25.34671211 213.72976685]
[10.54905796 211.27427673]
[-2.59316969 204.04365540]
[-12.58804607 192.85873413]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 19]
[4 18]
[5 17]
[6 16]
[7 15]
[8 14]
[22 108]
[23 107]
[24 106]
[25 105]
[26 103]
[27 102]
[28 101]
[29 100]
[30 99]
[31 98]
[38 92]
[39 91]
[40 90]
[41 89]
[42 88]
[43 87]
[44 86]
[45 85]
[46 74]
[47 73]
[48 72]
[51 69]
[53 67]
[54 66]
[55 65]
[56 64]
[57 63]
[109 190]
[110 189]
[111 188]
[112 187]
[113 186]
[114 185]
[116 136]
[117 135]
[118 134]
[119 133]
[121 132]
[122 131]
[123 130]
[124 129]
[137 150]
[138 149]
[139 148]
[140 147]
[155 180]
[156 179]
[157 178]
[158 177]
[159 176]
[162 172]
[163 171]
[164 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
