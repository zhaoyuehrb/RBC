%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sat Sep 12 02:10:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCCCGGAACCUGCGCACCGCGCUCAUUUUCGGCGGCUUCAUCUCCCUGAUCGGCGCCGCCUUCUAUCCCAUCUACUUCCGGCCCCUAAUGAGAUUGGAGGAGUACAAGAAGGAACAAGCUAUAAAUCGGGCUGGAAUUGUUCAAGAGGAUGUGCAGCCACCAGGGUUAAAAGUGUGGUCUGAUCCAUUUGGCAGGAAAUGA\
) } def
/len { sequence length } bind def

/coor [
[85.98323822 205.94465637]
[100.95296478 206.89720154]
[114.59897614 213.12507629]
[125.12720490 223.80947876]
[131.15347290 237.54570007]
[131.88551331 252.52783203]
[127.22705841 266.78613281]
[117.79058075 278.44601440]
[104.81671143 285.97451782]
[90.01114655 288.38189697]
[75.32042694 285.35162354]
[62.67595673 277.28210449]
[53.74013901 265.23422241]
[49.68778610 250.79197693]
[51.05095291 235.85665894]
[42.42117310 248.12561035]
[33.79139328 260.39453125]
[25.16161537 272.66348267]
[20.99454498 289.09735107]
[4.04936314 289.64248657]
[-1.16535306 273.51043701]
[12.89267445 264.03369141]
[21.52245331 251.76477051]
[30.15223312 239.49581909]
[38.78201294 227.22688293]
[45.94781113 214.04919434]
[51.55506897 200.13665771]
[57.16232300 186.22412109]
[62.76958084 172.31158447]
[68.37683868 158.39904785]
[73.98409271 144.48651123]
[79.59134674 130.57397461]
[85.19860077 116.66144562]
[76.28910065 104.59410095]
[61.34235001 105.85690308]
[46.39559937 107.11970520]
[31.44885063 108.38250732]
[16.50209999 109.64530945]
[1.55535030 110.90811920]
[-11.54445171 119.77973938]
[-24.87792015 113.14138031]
[-39.82467270 114.40418243]
[-54.76130676 115.78147125]
[-69.68695068 117.27317810]
[-84.61259460 118.76487732]
[-95.84427643 130.22038269]
[-111.78804016 128.43823242]
[-120.21318054 114.78551483]
[-114.65666199 99.73545074]
[-99.38095856 94.83314514]
[-86.10429382 103.83923340]
[-71.17864990 102.34753418]
[-56.25300980 100.85582733]
[-49.90694046 97.06079865]
[-41.08747482 99.45742798]
[-26.14072418 98.19462585]
[-14.11001301 89.41333008]
[0.29254729 95.96136475]
[15.23929691 94.69856262]
[30.18604660 93.43576050]
[45.13279724 92.17295837]
[60.07954788 90.91015625]
[75.02629852 89.64735413]
[61.30386734 83.58971405]
[46.34827423 84.74306488]
[32.04599762 80.22145844]
[20.47130966 70.68067932]
[13.30289268 57.50441742]
[11.58038998 42.60364532]
[15.55361652 28.13943291]
[24.64633369 16.20953178]
[37.53981400 8.54414845]
[52.36411285 6.25499678]
[66.96924591 9.67407513]
[79.23702240 18.30551147]
[87.38823700 30.89748192]
[90.24070740 45.62376404]
[87.37980652 60.35092545]
[91.82374573 74.67752075]
[94.79235840 59.97421265]
[97.76097107 45.27090454]
[100.72959137 30.56759262]
[103.69820404 15.86428261]
[106.66682434 1.16097307]
[109.63543701 -13.54233646]
[112.60404968 -28.24564743]
[115.57266998 -42.94895554]
[102.17398071 -51.83219910]
[93.23072815 -65.14450836]
[90.08737946 -80.83158112]
[93.19612122 -96.48626709]
[102.05206299 -109.71794128]
[115.27499390 -118.51757812]
[130.82438660 -121.56275177]
[133.56733704 -136.30982971]
[128.48405457 -151.29217529]
[138.41824341 -162.38996887]
[141.16119385 -177.13705444]
[143.90414429 -191.88412476]
[130.60533142 -199.09501648]
[120.18717194 -210.06393433]
[113.67032623 -223.71626282]
[111.69325256 -238.71446228]
[114.44963074 -253.58920288]
[121.66943359 -266.88317871]
[132.64532471 -277.29397583]
[146.30201721 -283.80166626]
[161.30154419 -285.76870728]
[176.17442322 -283.00234985]
[189.46356201 -275.77365112]
[199.86700439 -264.79077148]
[206.36555481 -251.12973022]
[208.32252502 -236.12887573]
[205.54621887 -221.25785828]
[198.30860901 -207.97357178]
[187.31875610 -197.57748413]
[173.65336609 -191.08810425]
[158.65121460 -189.14117432]
[155.90826416 -174.39410400]
[153.16531372 -159.64701843]
[158.44479370 -145.71948242]
[148.31442261 -133.56687927]
[145.57147217 -118.81980133]
[157.62072754 -111.62099457]
[166.50732422 -100.71800232]
[171.14764404 -87.40802765]
[170.96487427 -73.28366089]
[165.96057129 -60.04232788]
[156.71694946 -49.28230286]
[144.32926941 -42.30978012]
[130.27598572 -39.98033905]
[127.30736542 -25.27703094]
[124.33874512 -10.57372093]
[121.37013245 4.12958860]
[118.40151978 18.83289909]
[115.43289948 33.53620911]
[112.46428680 48.23951721]
[109.49566650 62.94282913]
[106.52705383 77.64614105]
[118.33720398 88.55014801]
[119.66056824 103.38220978]
[133.15365601 109.93481445]
[146.64674377 116.48741150]
[155.73811340 117.42218781]
[160.29522705 123.24520874]
[173.68632507 130.00381470]
[187.07740784 136.76242065]
[200.46850586 143.52102661]
[216.27467346 142.83161926]
[224.15058899 155.47358704]
[237.54168701 162.23219299]
[250.93276978 168.99078369]
[264.32385254 175.74938965]
[269.54486084 175.45344543]
[273.91818237 177.03445435]
[276.87020874 179.85408020]
[278.16436768 183.13877869]
[291.23068237 190.50566101]
[304.29699707 197.87255859]
[317.41940308 205.13911438]
[330.59707642 212.30491638]
[343.77478027 219.47071838]
[356.95245361 226.63650513]
[370.18466187 233.70112610]
[383.11788940 225.41699219]
[398.46121216 224.72537231]
[412.08731079 231.81231689]
[420.33087158 244.77145386]
[420.97439575 260.11685181]
[413.84478760 273.72070312]
[400.85986328 281.92358398]
[385.51251221 282.51901245]
[371.93109131 275.34677124]
[363.76895142 262.33621216]
[363.22164917 246.98707581]
[355.83435059 246.66636658]
[349.78665161 239.81419373]
[336.60897827 232.64839172]
[323.43127441 225.48260498]
[310.25360107 218.31680298]
[302.87210083 217.88291931]
[296.93011475 210.93888855]
[283.86380005 203.57199097]
[270.79745483 196.20509338]
[257.56524658 189.14048767]
[244.17416382 182.38188171]
[230.78308105 175.62327576]
[217.39199829 168.86466980]
[202.54362488 170.03749084]
[193.70989990 156.91210938]
[180.31880188 150.15350342]
[166.92771912 143.39489746]
[153.53663635 136.63630676]
[140.09414673 129.98049927]
[126.60105896 123.42790222]
[113.10797119 116.87529755]
[99.11113739 122.26869965]
[93.50388336 136.18122864]
[87.89662933 150.09376526]
[82.28937531 164.00630188]
[76.68211365 177.91883850]
[71.07485962 191.83137512]
[65.46760559 205.74391174]
[59.86034775 219.65644836]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 25]
[16 24]
[17 23]
[18 22]
[26 204]
[27 203]
[28 202]
[29 201]
[30 200]
[31 199]
[32 198]
[33 197]
[34 63]
[35 62]
[36 61]
[37 60]
[38 59]
[39 58]
[41 56]
[42 55]
[43 53]
[44 52]
[45 51]
[79 139]
[80 138]
[81 137]
[82 136]
[83 135]
[84 134]
[85 133]
[86 132]
[87 131]
[94 123]
[95 122]
[97 120]
[98 119]
[99 118]
[141 196]
[142 195]
[143 194]
[145 193]
[146 192]
[147 191]
[148 190]
[150 188]
[151 187]
[152 186]
[153 185]
[157 184]
[158 183]
[159 182]
[160 180]
[161 179]
[162 178]
[163 177]
[164 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
