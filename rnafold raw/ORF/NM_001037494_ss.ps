%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 02:21:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUGCGACCGAAAGGCCGUGAUCAAAAAUGCGGACAUGUCGGAAGAGAUGCAACAGGACUCGGUGGAGUGCGCUACUCAGGCGCUGGAGAAAUACAACAUAGAGAAGGACAUUGCGGCUCAUAUCAAGAAGGAAUUUGACAAGAAGUACAAUCCCACCUGGCAUUGCAUCGUGGGGAGGAACUUCGGUAGUUAUGUGACACAUGAAACCAAACACUUCAUCUACUUCUACCUGGGCCAAGUGGCCAUUCUUCUG\
UUCAAAUCUGGUUAA\
) } def
/len { sequence length } bind def

/coor [
[110.80620575 301.30932617]
[101.13021851 312.77124023]
[88.04533386 320.10510254]
[73.21833801 322.37673950]
[58.53795242 319.29678345]
[45.87419510 311.25756836]
[36.84021759 299.28311157]
[32.58679581 284.89880371]
[33.65515137 269.93923950]
[25.15069962 282.29537964]
[16.64624786 294.65151978]
[8.14179707 307.00769043]
[13.15005016 321.57556152]
[8.67228794 336.12902832]
[-3.37398601 345.14852905]
[-18.24342537 345.34286499]
[-26.67611504 357.74807739]
[-35.03675842 370.20199585]
[-43.39739990 382.65588379]
[-51.75804520 395.10977173]
[-60.11868668 407.56369019]
[-54.65337753 422.08642578]
[-58.80055237 437.03903198]
[-70.96553802 446.67193604]
[-86.47065735 447.28106689]
[-99.35386658 438.63223267]
[-104.66130829 424.05105591]
[-100.35217285 409.14431763]
[-88.08339691 399.64395142]
[-72.57258606 399.20303345]
[-64.21194458 386.74914551]
[-55.85130310 374.29522705]
[-47.49065781 361.84133911]
[-39.13001633 349.38745117]
[-38.01505280 342.10879517]
[-30.59957123 336.83840942]
[-35.72800446 322.88000488]
[-31.60500145 308.40710449]
[-19.61017036 299.02746582]
[-4.21434736 298.50323486]
[4.29010391 286.14709473]
[12.79455471 273.79092407]
[21.29900551 261.43478394]
[21.91387749 251.04255676]
[31.29952049 244.03584290]
[37.69564819 230.46788025]
[44.09177780 216.89991760]
[38.83014679 203.01284790]
[45.12345123 189.16189575]
[59.72517014 183.73716736]
[66.12129974 170.16920471]
[66.13085175 162.80566406]
[72.67102051 156.48168945]
[79.22399902 142.98878479]
[85.77698517 129.49589539]
[92.32996368 116.00299072]
[98.88294983 102.51008606]
[86.58176422 129.78710938]
[74.03330231 156.95199585]
[59.07587051 158.08120728]
[44.11843491 159.21041870]
[29.16099739 160.33963013]
[15.92891312 170.02693176]
[1.03461289 163.16458130]
[-0.19992419 146.81196594]
[13.49528790 137.79125977]
[28.03178978 145.38218689]
[42.98922348 144.25297546]
[57.94666290 143.12377930]
[72.90409851 141.99456787]
[74.11998749 127.04392242]
[59.54156876 123.51266479]
[44.96315384 119.98139954]
[30.38473892 116.45013428]
[15.80632401 112.91887665]
[1.41671753 120.01244354]
[-13.03912926 113.05485535]
[-16.47192764 97.38336945]
[-6.24832821 85.01981354]
[9.78899765 85.44844818]
[19.33758736 98.34046173]
[33.91600037 101.87171936]
[48.49441528 105.40298462]
[63.07283020 108.93424988]
[77.65124512 112.46550751]
[83.41157532 98.61564636]
[70.62879181 90.76705170]
[56.33969116 96.81695557]
[41.23116302 93.27970886]
[31.11274910 81.51547241]
[29.87518120 66.04782867]
[37.99433136 52.82440186]
[52.34822083 46.92986679]
[67.41748047 50.63079834]
[77.40768433 62.50411224]
[78.47738647 77.98426819]
[91.26016998 85.83286285]
[83.69345856 72.88123322]
[88.15209961 58.55920410]
[101.73329163 52.19120789]
[115.59491730 57.92315292]
[120.71231842 72.02323151]
[113.75411987 85.31124878]
[126.15935516 76.87855530]
[138.56459045 68.44586945]
[150.96981812 60.01317978]
[163.37504578 51.58049011]
[175.73118591 43.07604218]
[188.03782654 34.50011444]
[194.93644714 20.26214790]
[209.80209351 19.33361626]
[222.10873413 10.75768852]
[234.41537476 2.18176055]
[246.72201538 -6.39416695]
[249.74427795 -18.90901756]
[260.14096069 -25.80222702]
[272.05493164 -23.84314156]
[284.46017456 -32.27582932]
[296.86538696 -40.70851898]
[309.27062988 -49.14120865]
[321.67587280 -57.57389832]
[334.08108521 -66.00658417]
[332.82165527 -78.40230560]
[336.91452026 -90.09411621]
[345.52932739 -98.89499664]
[356.99609375 -103.18619537]
[369.12863159 -102.21482849]
[379.64138794 -96.22518158]
[392.23876953 -104.36801147]
[404.83615112 -112.51084137]
[417.43356323 -120.65367889]
[430.03094482 -128.79650879]
[428.60339355 -142.69172668]
[433.27227783 -155.78654480]
[443.07513428 -165.55094910]
[456.06350708 -170.12442017]
[469.69012451 -168.67030334]
[481.30831909 -161.52822876]
[493.99926758 -169.52447510]
[506.69021606 -177.52073669]
[504.46658325 -199.23686218]
[515.51727295 -218.96998596]
[536.61230469 -229.10563660]
[560.47711182 -225.14724731]
[569.95513916 -236.77336121]
[579.43322754 -248.39947510]
[588.91125488 -260.02560425]
[598.38928223 -271.65173340]
[601.11218262 -287.23684692]
[615.15118408 -292.21246338]
[613.74176025 -307.72540283]
[623.51947021 -319.38095093]
[638.31738281 -320.62899780]
[647.79541016 -332.25512695]
[657.27343750 -343.88122559]
[666.75152588 -355.50735474]
[676.22955322 -367.13348389]
[685.70758057 -378.75961304]
[681.89666748 -393.68551636]
[687.53936768 -407.82812500]
[700.27716064 -415.84146118]
[715.11340332 -414.82986450]
[724.59143066 -426.45599365]
[729.91333008 -442.55297852]
[746.85455322 -441.89517212]
[750.91217041 -425.43395996]
[736.21759033 -416.97793579]
[726.73950195 -405.35180664]
[730.71960449 -391.02365112]
[725.43701172 -376.93255615]
[712.72137451 -368.55609131]
[697.33367920 -369.28155518]
[687.85565186 -357.65542603]
[678.37762451 -346.02932739]
[668.89959717 -334.40319824]
[659.42150879 -322.77706909]
[649.94348145 -311.15093994]
[651.70251465 -296.40505981]
[642.25604248 -284.47949219]
[626.77728271 -282.73443604]
[624.73229980 -267.98089600]
[610.01538086 -262.17367554]
[600.53735352 -250.54756165]
[591.05932617 -238.92143250]
[581.58129883 -227.29531860]
[572.10321045 -215.66918945]
[579.27459717 -202.49455261]
[594.18377686 -204.14315796]
[609.09289551 -205.79176331]
[617.73059082 -215.33876038]
[630.15771484 -216.42254639]
[639.68524170 -209.00588989]
[654.61248779 -210.48155212]
[669.53973389 -211.95721436]
[684.46697998 -213.43289185]
[699.39422607 -214.90855408]
[714.32141113 -216.38421631]
[729.48889160 -223.95944214]
[740.96685791 -211.48175049]
[732.15423584 -196.99818420]
[715.79711914 -201.45698547]
[700.86987305 -199.98130798]
[685.94262695 -198.50564575]
[671.01538086 -197.02998352]
[656.08813477 -195.55432129]
[641.16088867 -194.07865906]
[627.44927979 -183.10169983]
[610.74145508 -190.88264465]
[595.83233643 -189.23403931]
[580.92321777 -187.58541870]
[577.99890137 -176.25648499]
[572.05224609 -166.39987183]
[563.67297363 -158.78450012]
[553.63458252 -153.96791077]
[542.82391357 -152.25611877]
[532.16271973 -153.68608093]
[522.52935791 -158.03132629]
[514.68646240 -164.82978821]
[501.99551392 -156.83354187]
[489.30456543 -148.83729553]
[490.31835938 -132.69360352]
[483.00103760 -118.16247559]
[469.26971436 -109.26212311]
[452.82949829 -108.50721741]
[438.17376709 -116.19911194]
[425.57638550 -108.05628204]
[412.97900391 -99.91345215]
[400.38159180 -91.77062225]
[387.78421021 -83.62779236]
[387.62551880 -65.94044495]
[376.76364136 -51.78091812]
[359.41741943 -46.96060562]
[342.51379395 -53.60135269]
[330.10855103 -45.16866684]
[317.70330811 -36.73597717]
[305.29809570 -28.30328751]
[292.89285278 -19.87059975]
[280.48764038 -11.43791008]
[273.69253540 4.75868893]
[255.29794312 5.91247606]
[242.99130249 14.48840332]
[230.68466187 23.06433105]
[218.37802124 31.64025879]
[212.35964966 45.26481628]
[196.61375427 46.80675507]
[184.30711365 55.38268280]
[180.62939453 61.76204681]
[171.80773926 63.98572159]
[159.40251160 72.41841125]
[146.99726868 80.85109711]
[134.59204102 89.28379059]
[122.18681335 97.71647644]
[112.37585449 109.06306458]
[105.82286835 122.55596924]
[99.26988983 136.04887390]
[92.71690369 149.54177856]
[86.16391754 163.03468323]
[79.68925476 176.56533813]
[73.29312897 190.13330078]
[78.40032959 204.84907532]
[71.72045898 218.51780701]
[57.65973663 223.29605103]
[51.26361084 236.86401367]
[44.86748123 250.43197632]
[57.25826263 241.97805786]
[71.82868958 238.41397095]
[86.72273254 240.19371033]
[100.04314423 247.09056091]
[110.09313965 258.22598267]
[115.59251404 272.18151855]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 43]
[10 42]
[11 41]
[12 40]
[16 36]
[17 34]
[18 33]
[19 32]
[20 31]
[21 30]
[45 264]
[46 263]
[47 262]
[50 259]
[51 258]
[53 257]
[54 256]
[55 255]
[56 254]
[57 253]
[59 70]
[60 69]
[61 68]
[62 67]
[71 85]
[72 84]
[73 83]
[74 82]
[75 81]
[86 97]
[87 96]
[103 252]
[104 251]
[105 250]
[106 249]
[107 248]
[108 246]
[109 245]
[111 243]
[112 242]
[113 241]
[114 240]
[117 238]
[118 237]
[119 236]
[120 235]
[121 234]
[122 233]
[128 229]
[129 228]
[130 227]
[131 226]
[132 225]
[138 220]
[139 219]
[140 218]
[144 186]
[145 185]
[146 184]
[147 183]
[148 182]
[150 180]
[153 177]
[154 176]
[155 175]
[156 174]
[157 173]
[158 172]
[162 168]
[163 167]
[187 210]
[188 209]
[189 208]
[192 206]
[193 205]
[194 204]
[195 203]
[196 202]
[197 201]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
