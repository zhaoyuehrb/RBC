%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 21:07:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAGUGAAUUUUGGCACAAACUGGGCUGCUGUGUGGUAGAGAAACCCCAGCCGAAGAAGAAGAGAAGACGGAUUGACCGGACCAUGAUUGGGGAACCAAUGAAUUUUGUUCACCUGACUCACAUUGGCUCAGGGGAGAUGGGGGCCGGAGAUGGACUUGCCAUGACAGGUGCAGUUCAGGAGCAGAUGAGAUCCAAGGGAAACCGAGAUAGGCCAUGGAGCAAUUCUAGGGGCUUAUAG\
) } def
/len { sequence length } bind def

/coor [
[451.93795776 688.10888672]
[450.34143066 679.74432373]
[450.90750122 671.57946777]
[453.43444824 664.14331055]
[457.59857178 657.87738037]
[462.98492432 653.10919189]
[455.68334961 640.00628662]
[442.72930908 632.65490723]
[442.77053833 616.83380127]
[435.46893311 603.73083496]
[428.16735840 590.62792969]
[420.86578369 577.52496338]
[413.56420898 564.42205811]
[406.26263428 551.31909180]
[391.51971436 553.75469971]
[376.80551147 550.99407959]
[363.89944458 543.35162354]
[354.36901855 531.73297119]
[349.37948608 517.52825928]
[349.55117798 502.44543457]
[354.88275146 488.30517578]
[364.74871826 476.82095337]
[357.44714355 463.71801758]
[350.14556885 450.61508179]
[342.84399414 437.51214600]
[335.54238892 424.40921021]
[328.24081421 411.30627441]
[320.93923950 398.20333862]
[313.63766479 385.10037231]
[306.33609009 371.99743652]
[298.77972412 359.03979492]
[290.97143555 346.23233032]
[283.16314697 333.42489624]
[275.27154541 320.66860962]
[267.29699707 307.96401978]
[259.32241821 295.25946045]
[251.34785461 282.55487061]
[243.37329102 269.85028076]
[235.39871216 257.14572144]
[227.42414856 244.44114685]
[213.29238892 246.24171448]
[199.64512634 241.95175171]
[188.99681091 232.30943298]
[183.33113098 219.04376221]
[183.73161316 204.56477356]
[190.17472839 191.52563477]
[180.92097473 179.72021484]
[171.66723633 167.91477966]
[162.41349792 156.10934448]
[153.15974426 144.30390930]
[134.73587036 138.39649963]
[132.25798035 118.37768555]
[122.69963074 106.81749725]
[117.09468079 115.57494354]
[108.46347809 120.90200806]
[98.62930298 121.93228912]
[89.56129456 118.68099213]
[82.98027039 111.99913025]
[80.03261566 103.36453247]
[81.09389496 94.55904388]
[69.34902191 85.22855377]
[57.60415649 75.89806366]
[41.98588562 73.37213898]
[36.83340073 59.39712524]
[25.08853149 50.06663132]
[13.34366322 40.73614120]
[1.59879494 31.40564919]
[-9.90808010 38.97470093]
[-26.30815125 38.11053467]
[-41.27843094 26.22873688]
[-55.18293381 20.60158157]
[-69.08743286 14.97442627]
[-84.36037445 19.88530350]
[-97.64209747 10.88666725]
[-98.74399567 -5.11849976]
[-86.82078552 -15.85240364]
[-71.01893616 -13.08091068]
[-63.46027756 1.06992590]
[-49.55577850 6.69708157]
[-35.65127563 12.32423687]
[-31.17985153 6.30291176]
[-43.22250366 -2.63993812]
[-49.18034744 -16.40598679]
[-34.27965164 -14.68258858]
[-22.23700142 -5.73973894]
[-17.76557732 -11.76106453]
[-32.44672394 -17.65806007]
[-34.40154648 -32.42382812]
[-43.80838776 -44.10763550]
[-53.21523285 -55.79143906]
[-62.62207794 -67.47524261]
[-72.02892303 -79.15904999]
[-87.50919342 -84.57137299]
[-90.29584503 -100.73202515]
[-77.52221680 -111.01630402]
[-62.32872009 -104.84462738]
[-60.34511566 -88.56589508]
[-50.93827057 -76.88208771]
[-41.53142929 -65.19828033]
[-32.12458420 -53.51447678]
[-22.71774101 -41.83067322]
[-8.70943642 -36.76938248]
[-6.08177280 -21.16790771]
[14.26198292 -1.93092144]
[10.92928600 19.66078186]
[22.67415428 28.99127197]
[34.41902161 38.32176590]
[46.16389084 47.65225601]
[60.94208908 49.51079941]
[66.93464661 64.15319824]
[78.67951202 73.48368835]
[90.42438507 82.81417847]
[101.85257721 78.39189148]
[114.89200592 81.56146240]
[116.25885010 66.62386322]
[117.62569427 51.68627167]
[118.99253845 36.74867630]
[120.35938263 21.81108093]
[113.91178894 7.36327648]
[122.77664185 -4.60599947]
[124.14348602 -19.54359436]
[125.51033020 -34.48118973]
[120.93245697 -50.80538559]
[135.35140991 -59.72334290]
[147.91242981 -48.33662033]
[140.44792175 -33.11434174]
[139.08108521 -18.17674828]
[137.71423340 -3.23915434]
[144.25959778 10.14021397]
[135.29698181 23.17792702]
[133.93013000 38.11552048]
[132.56329346 53.05311584]
[131.19644165 67.99070740]
[129.82960510 82.92830658]
[134.25982666 97.25914764]
[143.81817627 108.81934357]
[154.66241455 109.21525574]
[163.32664490 115.37754822]
[167.09994507 125.08267212]
[164.96517944 135.05017090]
[174.21893311 146.85560608]
[183.47267151 158.66102600]
[192.72640991 170.46646118]
[201.98014832 182.27189636]
[218.44802856 179.45820618]
[234.05976868 184.79981995]
[244.63174438 174.15870667]
[255.20373535 163.51760864]
[258.87112427 147.53378296]
[274.62451172 142.97723389]
[286.25820923 154.53532410]
[281.80441284 170.31809998]
[265.84484863 174.08958435]
[255.27285767 184.73069763]
[244.70088196 195.37181091]
[249.57916260 209.29447937]
[247.94787598 223.95658875]
[240.12872314 236.46656799]
[248.10330200 249.17114258]
[256.07785034 261.87573242]
[264.05242920 274.58029175]
[272.02700806 287.28488159]
[280.00155640 299.98947144]
[287.97613525 312.69403076]
[295.17391968 318.28433228]
[295.97058105 325.61660767]
[303.77886963 338.42404175]
[311.58715820 351.23150635]
[316.13333130 353.71365356]
[318.99874878 357.32440186]
[320.03475952 361.23992920]
[319.43902588 364.69586182]
[326.74060059 377.79879761]
[334.04217529 390.90173340]
[341.34375000 404.00466919]
[348.64532471 417.10760498]
[355.94692993 430.21054077]
[363.24850464 443.31347656]
[370.55007935 456.41641235]
[377.85165405 469.51934814]
[392.80862427 467.17108154]
[407.63873291 470.07629395]
[420.55575562 477.86541748]
[430.01068115 489.58181763]
[434.87741089 503.79931641]
[434.58676147 518.79565430]
[429.19317627 532.76123047]
[419.36557007 544.01751709]
[426.66714478 557.12042236]
[433.96871948 570.22338867]
[441.27029419 583.32629395]
[448.57186890 596.42926025]
[455.87347412 609.53216553]
[469.34976196 617.82073975]
[468.78628540 632.70471191]
[476.08786011 645.80761719]
[503.10961914 646.18499756]
[521.98577881 672.21392822]
[534.84381104 679.93853760]
[551.24096680 679.68243408]
[559.42803955 693.89172363]
[550.98284912 707.94915771]
[534.59313965 707.39361572]
[527.11920166 692.79663086]
[514.26110840 685.07196045]
[508.73797607 690.14593506]
[512.00341797 704.78613281]
[497.69165039 700.29376221]
[492.16851807 705.36767578]
[498.77725220 718.83337402]
[505.38598633 732.29907227]
[511.99475098 745.76470947]
[518.60345459 759.23040771]
[525.21221924 772.69610596]
[531.82098389 786.16180420]
[547.34948730 796.07592773]
[545.46246338 813.53179932]
[552.24621582 826.91021729]
[559.02990723 840.28857422]
[565.81359863 853.66699219]
[580.55334473 860.00091553]
[584.65222168 875.51153564]
[574.96588135 888.30041504]
[558.92492676 888.55694580]
[548.83453369 876.08447266]
[552.43524170 860.45068359]
[545.65148926 847.07232666]
[538.86779785 833.69390869]
[532.08410645 820.31555176]
[520.69903564 816.26586914]
[514.93316650 805.19268799]
[518.35528564 792.77050781]
[511.74655151 779.30487061]
[505.13781738 765.83917236]
[498.52905273 752.37347412]
[491.92031860 738.90777588]
[485.31158447 725.44213867]
[478.70281982 711.97644043]
[469.47451782 708.55322266]
[461.68682861 703.09393311]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 196]
[7 195]
[9 193]
[10 192]
[11 191]
[12 190]
[13 189]
[14 188]
[22 180]
[23 179]
[24 178]
[25 177]
[26 176]
[27 175]
[28 174]
[29 173]
[30 172]
[31 168]
[32 167]
[33 166]
[34 164]
[35 163]
[36 162]
[37 161]
[38 160]
[39 159]
[40 158]
[46 144]
[47 143]
[48 142]
[49 141]
[50 140]
[52 136]
[53 135]
[60 112]
[61 111]
[62 110]
[64 108]
[65 107]
[66 106]
[67 105]
[70 80]
[71 79]
[72 78]
[86 103]
[88 101]
[89 100]
[90 99]
[91 98]
[92 97]
[114 134]
[115 133]
[116 132]
[117 131]
[118 130]
[120 128]
[121 127]
[122 126]
[146 155]
[147 154]
[148 153]
[198 205]
[199 204]
[209 238]
[210 237]
[211 236]
[212 235]
[213 234]
[214 233]
[215 232]
[217 229]
[218 228]
[219 227]
[220 226]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
