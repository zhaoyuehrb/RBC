%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 21:00:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGAAACCUUACAAUCCGAGACUAAAACGAGGGUCCUUCCCUCAUGGCUGACAGCCCAGGUGGCUACAAAGAAUGUGGCACCAAUGAAGGCCCCCAAGAGGAUGAGAAUGGCAGCAGUGCCAGUGGCAGCAGCAAGGUGCGACAGCUCUGGUCAGAAGACUCCUGCGAAUCUGAGCAACUAA\
) } def
/len { sequence length } bind def

/coor [
[195.53295898 368.62683105]
[210.49539185 367.56594849]
[223.29293823 375.38977051]
[218.99998474 361.01721191]
[214.70701599 346.64465332]
[202.61233521 342.16076660]
[195.20411682 331.36416626]
[195.37695312 318.07672119]
[203.29202271 307.16107178]
[199.24507141 292.71728516]
[195.19812012 278.27352905]
[181.19213867 273.27648926]
[172.71398926 260.84326172]
[173.18818665 245.62393188]
[182.64237976 233.46150208]
[178.59542847 219.01774597]
[174.54846191 204.57397461]
[163.66430664 194.40617371]
[167.39144897 179.03024292]
[163.34449768 164.58648682]
[159.29754639 150.14273071]
[154.45382690 144.53678894]
[155.30705261 135.41775513]
[151.50729370 120.90701294]
[138.07571411 136.17897034]
[120.91643524 144.81684875]
[102.89240265 146.30168152]
[86.70509338 141.23612976]
[74.49191284 131.14910889]
[67.54467010 118.16954803]
[53.24749756 122.70726776]
[38.95032501 127.24498749]
[24.65315437 131.78269958]
[10.35598183 136.32041931]
[1.72817409 149.84597778]
[-14.24038982 151.39016724]
[-25.29999352 139.76843262]
[-22.96665573 123.89596558]
[-9.03031349 115.94876862]
[5.81826353 122.02324677]
[20.11543465 117.48553467]
[34.41260529 112.94781494]
[48.70977783 108.41009521]
[63.00695038 103.87237549]
[63.14813614 94.95804596]
[65.40657806 86.33339691]
[69.65251160 78.49392700]
[59.41421509 67.53138733]
[49.17591858 56.56885147]
[38.93762207 45.60631180]
[23.37653923 44.90593338]
[13.14961624 33.64251328]
[13.91321564 18.81171608]
[3.67491889 7.84917736]
[-6.78275156 10.16234303]
[-17.17530251 7.93024492]
[-25.63117599 1.62370110]
[-30.65630722 -7.55901670]
[-31.39793396 -17.91938782]
[-27.78862762 -27.57269669]
[-37.45222092 -39.04505157]
[-47.11581802 -50.51740646]
[-56.77941513 -61.98976135]
[-64.72143555 -66.55146027]
[-66.50803375 -73.74147034]
[-75.97435760 -85.37713623]
[-85.44067383 -97.01280975]
[-94.90699005 -108.64847565]
[-104.37331390 -120.28414917]
[-120.12098694 -123.34850311]
[-127.41564941 -137.63722229]
[-120.66146088 -152.18920898]
[-105.03965759 -155.84144592]
[-92.53395081 -145.79222107]
[-92.73764038 -129.75047302]
[-83.27132416 -118.11479950]
[-73.80500031 -106.47912598]
[-64.33868408 -94.84346008]
[-54.87236404 -83.20778656]
[-45.30706024 -71.65335846]
[-35.64346313 -60.18100357]
[-25.97986794 -48.70864868]
[-16.31627274 -37.23629379]
[3.14365053 -37.03105164]
[16.41091347 -22.38021469]
[14.63745785 -2.38911963]
[24.87575531 8.57341957]
[39.72408676 8.82368946]
[50.26334381 19.79541588]
[49.90016174 35.36801529]
[60.13845825 46.33055496]
[70.37675476 57.29309464]
[80.61505127 68.25563049]
[93.81588745 54.02207947]
[115.40608978 46.58879471]
[118.70822906 31.95677757]
[113.32228088 16.46730804]
[124.24687195 4.23679638]
[140.24371338 7.84694242]
[144.85662842 23.58393860]
[133.34024048 35.25891113]
[130.03810120 49.89093018]
[136.51185608 53.67783356]
[144.08566284 40.73034668]
[151.65946960 27.78286171]
[164.69216919 20.35664368]
[164.60696411 35.35667038]
[157.03314209 48.30415726]
[149.45933533 61.25164413]
[155.93307495 65.03855133]
[167.06881714 54.98890686]
[178.20455933 44.93926620]
[189.34030151 34.88962555]
[200.47604370 24.83998489]
[205.00836182 9.07958698]
[220.98651123 5.38762093]
[231.97355652 17.56206512]
[226.66694641 33.07889557]
[210.52568054 35.97572708]
[199.38993835 46.02536774]
[188.25419617 56.07500839]
[177.11846924 66.12464905]
[165.98272705 76.17428589]
[172.30909729 89.77490997]
[187.16938782 87.73241425]
[199.78746033 78.18805695]
[213.44975281 84.12026215]
[228.31004333 82.07775879]
[243.17033386 80.03526306]
[255.78840637 70.49090576]
[269.45068359 76.42311096]
[280.25119019 64.56018066]
[296.24993896 65.75166321]
[305.17407227 79.08355713]
[300.17776489 94.32876587]
[285.09375000 99.79248047]
[271.49319458 91.28339386]
[259.93801880 100.68166351]
[245.21282959 94.89555359]
[230.35253906 96.93804932]
[215.49224854 98.98055267]
[203.93708801 108.37881470]
[189.21188354 102.59270477]
[174.35159302 104.63520050]
[166.01805115 117.10724640]
[169.81781006 131.61799622]
[173.74130249 146.09577942]
[177.78825378 160.53953552]
[181.83520508 174.98329163]
[193.00883484 186.18421936]
[188.99223328 200.52702332]
[193.03918457 214.97079468]
[197.08613586 229.41455078]
[211.48336792 234.89411926]
[219.79626465 247.65144348]
[219.01248169 262.67974854]
[209.64187622 274.22659302]
[213.68882751 288.67034912]
[217.73577881 303.11410522]
[233.13166809 311.39584351]
[237.69627380 327.92153931]
[229.07957458 342.35171509]
[233.37254333 356.72427368]
[237.66549683 371.09683228]
[242.92927551 385.14291382]
[249.13931274 398.79705811]
[255.34934998 412.45117188]
[270.57894897 415.42428589]
[281.12774658 426.80419922]
[282.93951416 442.21511841]
[275.31759644 455.73126221]
[261.19277954 462.15539551]
[245.99633789 459.01727295]
[235.57160950 447.52359009]
[233.92712402 432.09387207]
[241.69520569 418.66122437]
[235.48516846 405.00708008]
[229.27513123 391.35296631]
[224.77110291 405.66076660]
[212.79635620 414.69436646]
[197.80174255 415.09606934]
[185.36048889 406.71661377]
[180.09683228 392.67047119]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 164]
[4 163]
[5 162]
[9 159]
[10 158]
[11 157]
[15 153]
[16 152]
[17 151]
[19 149]
[20 148]
[21 147]
[23 146]
[24 145]
[30 44]
[31 43]
[32 42]
[33 41]
[34 40]
[47 93]
[48 92]
[49 91]
[50 90]
[53 87]
[54 86]
[60 83]
[61 82]
[62 81]
[63 80]
[65 79]
[66 78]
[67 77]
[68 76]
[69 75]
[95 102]
[96 101]
[110 123]
[111 122]
[112 121]
[113 120]
[114 119]
[124 144]
[125 143]
[127 141]
[128 140]
[129 139]
[131 137]
[165 178]
[166 177]
[167 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
