%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 23:27:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCCGAAGCACGAGUUCUCUGUGGACAUGACCUGUGGAGGCUGUGCUGAAGCUGUCUCUCGGGUCCUCAAUAAGCUUGGAGGAGUUAAGUAUGACAUUGACCUGCCCAACAAGAAGGUCUGCAUUGAAUCUGAGCACAGCAUGGACACUCUGCUUGCAACCCUGAAGAAAACAGGAAAGACUGUUUCCUACCUUGGCCUUGAGUAG\
) } def
/len { sequence length } bind def

/coor [
[111.91808319 127.32732391]
[104.84191895 114.10175323]
[101.91556549 128.81353760]
[98.98921204 143.52531433]
[104.77004242 158.87178040]
[94.16223907 171.37803650]
[78.07819366 168.17872620]
[73.06379700 152.56501770]
[84.27742767 140.59895325]
[87.20378876 125.88717651]
[90.13014221 111.17539978]
[83.26784515 108.14904022]
[71.16374969 117.00856018]
[69.54324341 102.09632111]
[62.68094635 99.06996155]
[53.79101181 111.15173340]
[44.90107727 123.23349762]
[36.01114655 135.31526184]
[36.99383926 151.32818604]
[24.99103928 161.97302246]
[9.21026707 159.08393860]
[1.75717902 144.87721252]
[8.34914780 130.25102234]
[23.92937851 126.42533112]
[32.81931305 114.34356689]
[41.70924377 102.26179504]
[50.59917831 90.18003082]
[46.81652451 83.70380402]
[39.25121689 70.75134277]
[35.46856689 64.27511597]
[20.57793236 66.08316803]
[5.68729925 67.89122009]
[-9.20333385 69.69926453]
[-24.09396744 71.50731659]
[-38.98460007 73.31536865]
[-47.12871933 77.45722961]
[-54.11356735 75.03652191]
[-69.02980804 76.61946869]
[-83.94605255 78.20241547]
[-98.86228943 79.78536224]
[-113.77853394 81.36830902]
[-128.69477844 82.95125580]
[-141.60137939 92.10168457]
[-155.07409668 85.75069427]
[-169.99034119 87.33364105]
[-179.72773743 99.78187561]
[-195.42526245 101.61576843]
[-207.76985168 91.74729919]
[-209.43768311 76.03125763]
[-199.43925476 63.79169464]
[-183.70645142 62.29012299]
[-171.57328796 72.41740417]
[-156.65704346 70.83444977]
[-144.81735229 61.79724884]
[-130.27772522 68.03501892]
[-115.36148071 66.45207214]
[-100.44523621 64.86912537]
[-85.52899933 63.28617477]
[-70.61275482 61.70322800]
[-55.69651413 60.12028122]
[-40.79265213 58.42473221]
[-25.90201759 56.61668396]
[-11.01138401 54.80863190]
[3.87924886 53.00058365]
[18.76988220 51.19253159]
[33.66051483 49.38448334]
[108.35182953 82.99237061]
[120.56648254 74.28592682]
[132.78114319 65.57948303]
[144.99578857 56.87303543]
[157.21044922 48.16659164]
[158.38684082 37.35044479]
[165.18283081 29.13721848]
[175.16767883 26.08573532]
[184.97253418 28.97302055]
[197.44458008 20.63946724]
[209.91662598 12.30591393]
[217.67417908 -4.39324951]
[235.21595764 -4.85959864]
[247.56071472 -13.38057041]
[259.84078979 -21.99452400]
[272.05541992 -30.70096970]
[284.27008057 -39.40741348]
[296.48474121 -48.11385727]
[308.69940186 -56.82030487]
[309.38330078 -70.27336121]
[317.57159424 -80.72320557]
[330.09802246 -84.49240112]
[342.32397461 -80.41921234]
[354.66873169 -88.94018555]
[367.01348877 -97.46115875]
[374.87026978 -110.23890686]
[376.90301514 -125.10053253]
[378.93576050 -139.96215820]
[376.99789429 -148.89112854]
[381.11306763 -155.03224182]
[383.37002563 -169.86146545]
[381.32189941 -176.15168762]
[382.57189941 -181.69857788]
[385.92562866 -185.10177612]
[388.62945557 -199.85607910]
[391.33328247 -214.61038208]
[394.03710938 -229.36466980]
[396.74093628 -244.11897278]
[384.65347290 -253.50788879]
[378.32434082 -267.44348145]
[379.20794678 -282.72344971]
[387.10122681 -295.83660889]
[400.19039917 -303.76959229]
[415.46762085 -304.69949341]
[429.42233276 -298.41265869]
[438.84783936 -286.35366821]
[441.57821655 -271.29367065]
[436.98605347 -256.69332886]
[426.12658691 -245.90765381]
[411.49523926 -241.41514587]
[408.79141235 -226.66085815]
[406.08758545 -211.90655518]
[403.38375854 -197.15225220]
[400.67993164 -182.39794922]
[398.19924927 -167.60450745]
[395.94229126 -152.77526855]
[393.79736328 -137.92941284]
[391.76461792 -123.06779480]
[389.73190308 -108.20616150]
[395.42019653 -103.31809998]
[404.32913208 -115.38585663]
[413.23806763 -127.45361328]
[420.73397827 -140.44636536]
[435.61865234 -138.58988953]
[439.69354248 -124.15398407]
[427.97659302 -114.78853607]
[417.38668823 -104.16525269]
[406.79681396 -93.54196930]
[412.48510742 -88.65390015]
[426.87170410 -92.89965057]
[441.25827026 -97.14539337]
[448.60525513 -102.57708740]
[455.89425659 -101.34485626]
[470.34332275 -105.37283325]
[484.79238892 -109.40081024]
[499.24145508 -113.42879486]
[510.45703125 -124.58769226]
[524.79455566 -120.55225372]
[539.24365234 -124.58023071]
[552.87738037 -134.65780640]
[566.33532715 -124.34663391]
[560.15258789 -108.56021881]
[543.27160645 -110.13117218]
[528.82257080 -106.10319519]
[518.64044189 -95.23239899]
[503.26943970 -98.97972870]
[488.82037354 -94.95175171]
[474.37130737 -90.92377472]
[459.92224121 -86.89579773]
[445.50402832 -82.75881958]
[431.11743164 -78.51306915]
[416.73086548 -74.26732635]
[416.33456421 -66.77780151]
[428.91067505 -58.60214233]
[415.54199219 -51.79875565]
[415.14569092 -44.30923080]
[429.00387573 -38.56898117]
[442.86209106 -32.82872772]
[456.72027588 -27.08847809]
[470.50650024 -34.46911621]
[485.80087280 -31.21081161]
[495.38183594 -18.85204124]
[494.72555542 -3.22823501]
[484.14190674 8.28352261]
[468.62817383 10.24773121]
[455.50946045 1.73695278]
[450.98001099 -13.23028469]
[437.12182617 -18.97053528]
[423.26364136 -24.71078682]
[409.40545654 -30.45103836]
[394.94732666 -38.51097488]
[384.09829712 -49.05470657]
[377.21777344 -61.04787064]
[374.41201782 -73.41898346]
[375.53445435 -85.11639404]
[363.18969727 -76.59542847]
[350.84494019 -68.07445526]
[348.52386475 -51.41864777]
[334.60128784 -41.39672852]
[317.40585327 -44.60564804]
[305.19119263 -35.89920425]
[292.97653198 -27.19275856]
[280.76187134 -18.48631287]
[268.54721069 -9.77986813]
[264.92422485 -3.33613181]
[256.08169556 -1.03581190]
[243.73693848 7.48515940]
[241.24807739 19.32440376]
[231.03114319 26.52411461]
[218.25016785 24.77795792]
[205.77813721 33.11151123]
[193.30609131 41.44506454]
[186.04821777 59.36594772]
[165.91690063 60.38124847]
[153.70223999 69.08769226]
[141.48757935 77.79413605]
[129.27293396 86.50057983]
[117.05827332 95.20703125]
[132.02320862 96.23204803]
[141.35987854 107.97200775]
[138.98959351 122.78354645]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 11]
[3 10]
[4 9]
[15 27]
[16 26]
[17 25]
[18 24]
[30 66]
[31 65]
[32 64]
[33 63]
[34 62]
[35 61]
[37 60]
[38 59]
[39 58]
[40 57]
[41 56]
[42 55]
[44 53]
[45 52]
[67 204]
[68 203]
[69 202]
[70 201]
[71 200]
[75 198]
[76 197]
[77 196]
[79 193]
[80 192]
[81 190]
[82 189]
[83 188]
[84 187]
[85 186]
[89 183]
[90 182]
[91 181]
[92 125]
[93 124]
[94 123]
[96 122]
[97 121]
[100 120]
[101 119]
[102 118]
[103 117]
[104 116]
[135 158]
[136 157]
[137 156]
[139 155]
[140 154]
[141 153]
[142 152]
[144 150]
[145 149]
[162 176]
[163 175]
[164 174]
[165 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
