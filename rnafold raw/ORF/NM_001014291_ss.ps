%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sat Sep 12 01:37:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCUUACCAGCAGCAGCAGUGCAAGCAGCCCUGCCAGCCACCUCCUGUGUGCCCCACGCCAAAGUGCCCAGAGCCAUGUCCACCCCCGAAGUGCCCUGAGCCUUACCUGCCUCCUCCUUGUCCACCUGAGCAUUGCCCACCUCCACCAUGCCAGGAUAAAUGCCCUCCUGUGCAACCAUACCCACCCUGCCAGCAGAAGUAUCCACCCAAGAGCAAGUAA\
) } def
/len { sequence length } bind def

/coor [
[248.32978821 170.09120178]
[239.08374023 173.53222656]
[229.35382080 175.19979858]
[219.47726440 175.03379822]
[209.79679871 173.03770447]
[200.64877319 169.27850342]
[192.35147095 163.88455200]
[185.19403076 157.04107666]
[179.42637634 148.98385620]
[175.25050354 139.99113464]
[172.81338501 130.37397766]
[172.20178223 120.46549988]
[157.43376160 117.83765411]
[142.66574097 115.20981598]
[127.89772034 112.58197021]
[120.32454681 127.78046417]
[104.43152618 137.98165894]
[83.64820099 138.74813843]
[73.30628967 149.61297607]
[62.96437454 160.47782898]
[52.62246323 171.34266663]
[48.71208954 186.67301941]
[34.33282852 190.55711365]
[23.99091721 201.42195129]
[22.94737244 217.43103027]
[9.69854450 226.47802734]
[-5.59220123 221.62284851]
[-11.19511223 206.58999634]
[-2.81211543 192.91136169]
[13.12607193 191.08003235]
[23.46798325 180.21519470]
[26.63863564 165.66197205]
[41.75761795 161.00076294]
[52.09952927 150.13591003]
[62.44144440 139.27107239]
[72.78335571 128.40621948]
[69.75537109 121.54463959]
[56.03220749 127.60061646]
[42.30904388 133.65658569]
[28.58588028 139.71255493]
[14.86271763 145.76852417]
[1.13945377 151.82427979]
[-4.91606283 138.10090637]
[8.80674553 132.04536438]
[22.52990723 125.98939514]
[36.25307083 119.93342590]
[49.97623444 113.87744904]
[63.69939804 107.82147980]
[60.67140961 100.95989990]
[45.67475891 101.27684784]
[30.67810822 101.59380341]
[15.68145847 101.91075897]
[0.68480700 102.22771454]
[-15.02302837 108.60738373]
[-25.50174332 95.27948761]
[-15.59550285 81.52075195]
[0.36785379 87.23106384]
[15.36450481 86.91410828]
[30.36115646 86.59715271]
[45.35780716 86.28019714]
[60.35445786 85.96324921]
[65.06914520 84.44107819]
[69.75595093 83.56410217]
[74.34340668 83.31684113]
[64.15557861 72.30738068]
[53.96774673 61.29792404]
[45.84986496 57.12967682]
[43.71529388 50.06087494]
[33.68357086 38.90898895]
[18.70190430 33.82369232]
[15.94250393 19.18692398]
[5.91078091 8.03503895]
[-4.12094259 -3.11684513]
[-19.10260773 -8.20214272]
[-21.86200714 -22.83891106]
[-31.89373207 -33.99079514]
[-39.95208740 -38.27299118]
[-41.98686600 -45.37116241]
[-51.86049271 -56.66326141]
[-66.76903534 -61.95910645]
[-69.32196808 -76.63329315]
[-79.19559479 -87.92539215]
[-94.82521057 -87.42633057]
[-107.08696747 -97.13114166]
[-110.19123840 -112.45751190]
[-102.67227936 -126.16879272]
[-88.08031464 -131.79093933]
[-73.30522156 -126.66934967]
[-65.32334900 -113.22227478]
[-67.90349579 -97.79901886]
[-58.02986908 -86.50691986]
[-43.82755661 -82.01876068]
[-40.56839752 -66.53688812]
[-30.69476891 -55.24478912]
[-20.74184608 -44.02251816]
[-10.71012402 -32.87063599]
[3.55400634 -28.58299446]
[7.03094196 -13.14856815]
[17.06266594 -1.99668396]
[27.09438896 9.15520096]
[41.35851669 13.44284153]
[44.83545303 28.87726593]
[54.86717606 40.02915192]
[64.97720337 51.11009598]
[75.16503143 62.11955261]
[85.35285950 73.12901306]
[105.08882904 69.82231903]
[122.64904022 79.41822052]
[130.52555847 97.81394958]
[145.29357910 100.44179535]
[160.06159973 103.06963348]
[174.82962036 105.69747925]
[185.01875305 87.73234558]
[201.25181580 75.01071167]
[221.07516479 69.42707825]
[241.50323486 71.79918671]
[259.46823120 81.74831390]
[272.28079224 97.75954437]
[278.03259277 117.41239166]
[293.01437378 118.15171051]
[307.99615479 118.89102173]
[322.97790527 119.63033295]
[337.95968628 120.36964417]
[352.12442017 113.32192993]
[364.45489502 121.67711639]
[382.74731445 97.22862244]
[417.87704468 99.41756439]
[429.23840332 89.62371826]
[440.59976196 79.82987976]
[451.96112061 70.03603363]
[456.41265869 62.06996536]
[463.55221558 60.18562317]
[475.05044556 50.55280685]
[486.54864502 40.91998672]
[498.04684448 31.28717041]
[509.40823364 21.49332809]
[520.63049316 11.54040623]
[518.99053955 -3.88976502]
[526.76257324 -17.32014656]
[540.95806885 -23.58648109]
[556.11865234 -20.27923775]
[566.41461182 -8.67011642]
[567.88708496 6.77693701]
[559.96984863 20.12221527]
[545.70715332 26.23418808]
[530.58343506 22.76267624]
[519.36114502 32.71559906]
[518.18609619 37.33646774]
[514.10095215 41.27145386]
[507.67968750 42.78537750]
[496.18145752 52.41819763]
[484.68325806 62.05101395]
[473.18505859 71.68383026]
[461.75497437 81.39740753]
[450.39361572 91.19124603]
[439.03225708 100.98508453]
[427.67086792 110.77893066]
[428.67163086 118.21186066]
[443.53753662 116.21055603]
[445.53860474 131.07647705]
[430.67318726 133.07772827]
[431.67395020 140.51065063]
[445.22103882 146.95083618]
[458.76815796 153.39100647]
[472.31527710 159.83119202]
[490.63616943 157.94046021]
[500.01696777 172.77615356]
[513.65344238 179.02485657]
[529.42236328 177.73974609]
[537.76953125 190.07563782]
[551.40600586 196.32434082]
[565.04254150 202.57302856]
[574.13885498 203.30139160]
[578.82611084 209.00700378]
[592.37322998 215.44718933]
[605.92034912 221.88735962]
[617.46020508 211.95001221]
[632.04620361 207.57170105]
[647.15112305 209.51100159]
[660.15802002 217.43191528]
[668.81329346 229.96209717]
[671.61749268 244.93061829]
[668.08465576 259.74407959]
[658.82690430 271.83599854]
[645.44818115 279.11132812]
[630.26647949 280.30960083]
[615.91210938 275.22320557]
[604.87200928 264.73336792]
[599.05902100 250.65756226]
[599.48016357 235.43446350]
[585.93304443 228.99429321]
[572.38592529 222.55412292]
[558.79382324 216.20951843]
[545.15734863 209.96083069]
[531.52087402 203.71212769]
[516.72729492 205.44418335]
[507.40475464 192.66134644]
[493.76828003 186.41264343]
[482.32931519 190.32975769]
[470.92037964 185.24253845]
[465.87509155 173.37829590]
[452.32797241 166.93811035]
[438.78088379 160.49794006]
[425.23376465 154.05775452]
[417.51351929 160.61793518]
[408.62478638 164.85307312]
[399.22613525 166.60949707]
[389.97579956 165.91114807]
[381.48556519 162.94905090]
[374.28039551 158.05926514]
[368.76614380 151.69154358]
[365.20721436 144.37145996]
[363.71557617 136.65888977]
[350.62240601 143.75949097]
[337.22036743 135.35140991]
[322.23858643 134.61210632]
[307.25683594 133.87278748]
[292.27505493 133.13348389]
[277.29330444 132.39416504]
[274.55838013 141.84098816]
[270.11608887 150.62219238]
[264.11853027 158.43208313]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 112]
[13 111]
[14 110]
[15 109]
[18 36]
[19 35]
[20 34]
[21 33]
[23 31]
[24 30]
[49 61]
[50 60]
[51 59]
[52 58]
[53 57]
[64 106]
[65 105]
[66 104]
[68 103]
[69 102]
[71 100]
[72 99]
[73 98]
[75 96]
[76 95]
[78 94]
[79 93]
[81 91]
[82 90]
[119 219]
[120 218]
[121 217]
[122 216]
[123 215]
[125 213]
[127 157]
[128 156]
[129 155]
[130 154]
[132 153]
[133 152]
[134 151]
[135 150]
[136 147]
[137 146]
[162 204]
[163 203]
[164 202]
[165 201]
[167 198]
[168 197]
[170 195]
[171 194]
[172 193]
[174 192]
[175 191]
[176 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
