%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sat Sep 12 11:59:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGCCCAGGAUCUCAGCGAGAAGGACCUGUUGAAGAUGGAGGUGGAGCAGCUGAAGAAAGAAGUGAAAAACACAAGAAUUCCGAUUUCCAAAGCGGGAAAGGAAAUCAAGGAGUACGUGGAGGCCCAAGCAGGAAACGAUCCUUUUCUCAAAGGCAUCCCUGAGGACAAGAAUCCCUUCAAGGAGAAAGGUGGCUGUCUGAUAAGCUGA\
) } def
/len { sequence length } bind def

/coor [
[7.97176838 236.65745544]
[-4.88223362 235.76071167]
[-8.08244991 251.25488281]
[-22.26758003 255.79705811]
[-32.09815979 267.12664795]
[-41.92874146 278.45623779]
[-37.82539368 291.61502075]
[-40.73674774 304.97698975]
[-49.79786301 315.07479858]
[-62.56236267 319.34231567]
[-75.66221619 316.76626587]
[-85.66038513 327.94824219]
[-95.65856171 339.13021851]
[-105.65673065 350.31219482]
[-115.57138062 361.56829834]
[-125.40196228 372.89788818]
[-135.23254395 384.22747803]
[-145.06312561 395.55706787]
[-148.32363892 404.08975220]
[-155.12539673 406.98074341]
[-165.12356567 418.16271973]
[-163.99147034 433.92642212]
[-174.40058899 445.81869507]
[-190.17536926 446.78405762]
[-201.95690918 436.24978638]
[-202.75544739 420.46566772]
[-192.09719849 408.79617310]
[-176.30554199 408.16455078]
[-166.30737305 396.98257446]
[-156.39271545 385.72650146]
[-146.56213379 374.39688110]
[-136.73155212 363.06729126]
[-126.90097809 351.73770142]
[-124.89161682 344.62545776]
[-116.83870697 340.31402588]
[-106.84053040 329.13204956]
[-96.84236145 317.95007324]
[-86.84419250 306.76809692]
[-90.82512665 290.84234619]
[-84.46533203 275.52847290]
[-70.08827209 266.93768311]
[-53.25833511 268.62567139]
[-43.42775345 257.29608154]
[-33.59717178 245.96647644]
[-31.10010529 231.28268433]
[-16.21182632 225.93013000]
[-18.11596298 209.22045898]
[-7.12943125 196.04431152]
[10.32437611 194.86790466]
[19.98518562 183.39320374]
[29.64599609 171.91850281]
[39.30680847 160.44381714]
[48.96761703 148.96911621]
[44.16596985 143.41473389]
[39.96601486 137.39248657]
[36.41301727 130.96730042]
[33.54526138 124.20837402]
[31.39365578 117.18858337]
[29.98138428 109.98355103]
[29.32366753 102.67092896]
[29.42759514 95.32952881]
[30.29204178 88.03845978]
[31.90769768 80.87629700]
[34.25714874 73.92021942]
[20.97930145 66.94176483]
[7.70145512 59.96331024]
[-7.98324537 63.33521271]
[-20.30700111 53.06367111]
[-19.81608009 37.02812958]
[-6.88707685 27.52968788]
[8.56198502 31.85473442]
[14.67990780 46.68546677]
[27.95775414 53.66391754]
[41.23559952 60.64236832]
[46.56673813 53.66249466]
[52.72186661 47.39719009]
[59.60606384 41.94306564]
[67.11317444 37.38423157]
[75.12742615 33.79098892]
[71.37113190 19.26893044]
[67.61483002 4.74687195]
[63.85852814 -9.77518749]
[60.10222626 -24.29724693]
[56.13013077 -38.76177216]
[51.94311905 -53.16555405]
[47.75610733 -67.56933594]
[43.56909561 -81.97311401]
[39.38208389 -96.37689972]
[35.19507599 -110.78067780]
[31.00806236 -125.18446350]
[15.99638557 -128.16911316]
[4.09853315 -137.79718018]
[-1.95145535 -151.85620117]
[-0.76333684 -167.11552429]
[7.38986778 -180.06866455]
[20.63461113 -187.73908997]
[35.92734909 -188.36418152]
[49.75392151 -181.80030823]
[58.93708420 -169.55580139]
[61.36661530 -154.44433594]
[56.48422241 -139.93844604]
[45.41184616 -129.37147522]
[49.59885788 -114.96768951]
[53.78586578 -100.56391144]
[57.97287750 -86.16012573]
[62.15988922 -71.75634766]
[66.34690094 -57.35256195]
[70.53391266 -42.94878006]
[74.21366119 -39.90436172]
[76.01998901 -34.51602173]
[74.62428284 -28.05354691]
[78.38058472 -13.53148842]
[82.13688660 0.99057120]
[85.89318848 15.51263046]
[89.64949036 30.03468895]
[99.80810547 29.27347755]
[109.97070312 29.97955513]
[119.92645264 32.13827133]
[129.46881104 35.70484161]
[137.12939453 22.80851555]
[144.78999329 9.91218853]
[144.45231628 -6.48348236]
[158.62071228 -14.74111366]
[172.71997070 -6.36596203]
[172.24597168 10.02633381]
[157.68632507 17.57278633]
[150.02572632 30.46911240]
[142.36512756 43.36544037]
[150.96644592 50.96227264]
[158.22598267 59.85012054]
[163.95260620 69.79499054]
[178.11872864 64.86339569]
[192.28486633 59.93180466]
[206.45100403 55.00020981]
[209.16973877 51.61458206]
[212.49043274 49.48443985]
[215.94448853 48.64484787]
[219.10003662 48.97509766]
[221.60961914 50.22416306]
[236.04417419 46.14449692]
[250.47872925 42.06483078]
[264.88250732 37.87781906]
[279.25473022 33.58369446]
[293.62692261 29.28957176]
[307.99914551 24.99544907]
[322.37136841 20.70132446]
[333.23220825 8.41418362]
[349.24761963 11.94111919]
[353.94226074 27.65392113]
[342.48675537 39.38860703]
[326.66549683 35.07353592]
[312.29327393 39.36766052]
[297.92105103 43.66178513]
[283.54885864 47.95590973]
[269.17663574 52.25003052]
[263.66766357 57.17680740]
[254.55839539 56.49938202]
[240.12384033 60.57905197]
[225.68928528 64.65871429]
[211.38259888 69.16634369]
[197.21646118 74.09793854]
[183.05032349 79.02953339]
[168.88420105 83.96112823]
[169.40603638 113.60440063]
[157.73190308 140.85713196]
[168.98800659 150.77177429]
[180.24409485 160.68643188]
[191.50019836 170.60107422]
[202.75628662 180.51573181]
[211.26448059 183.83967590]
[214.10475159 190.66276550]
[229.21173096 187.64860535]
[243.03526306 194.03323364]
[250.36198425 207.17793274]
[248.56515503 221.93969727]
[259.67239380 232.02082825]
[275.09121704 235.56625366]
[279.31549072 249.84928894]
[290.42272949 259.93041992]
[301.52996826 270.01156616]
[317.55929565 270.67486572]
[326.91818237 283.70523071]
[322.42727661 299.10690308]
[307.53164673 305.06503296]
[293.65789795 297.00903320]
[291.44882202 281.11880493]
[280.34158325 271.03765869]
[269.23434448 260.95651245]
[254.60998535 258.13217163]
[249.59124756 243.12806702]
[238.48402405 233.04692078]
[223.96496582 236.26173401]
[210.17379761 230.23944092]
[202.48330688 217.09754944]
[204.02362061 201.77000427]
[192.84164429 191.77182007]
[181.58554077 181.85717773]
[170.32945251 171.94252014]
[159.07334900 162.02787781]
[147.81726074 152.11322021]
[132.36111450 162.88906860]
[114.60831451 169.20169067]
[95.81876373 170.60307312]
[77.32595062 166.99377441]
[60.44231796 158.62991333]
[50.78150558 170.10461426]
[41.12069702 181.57931519]
[31.45988655 193.05401611]
[21.79907608 204.52871704]
[24.48791504 217.72662354]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 46]
[4 44]
[5 43]
[6 42]
[11 38]
[12 37]
[13 36]
[14 35]
[15 33]
[16 32]
[17 31]
[18 30]
[20 29]
[21 28]
[49 209]
[50 208]
[51 207]
[52 206]
[53 205]
[64 74]
[65 73]
[66 72]
[79 115]
[80 114]
[81 113]
[82 112]
[83 111]
[84 108]
[85 107]
[86 106]
[87 105]
[88 104]
[89 103]
[90 102]
[119 128]
[120 127]
[121 126]
[131 163]
[132 162]
[133 161]
[134 160]
[139 159]
[140 158]
[141 157]
[142 155]
[143 154]
[144 153]
[145 152]
[146 151]
[165 200]
[166 199]
[167 198]
[168 197]
[169 196]
[171 195]
[175 191]
[176 190]
[178 188]
[179 187]
[180 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
