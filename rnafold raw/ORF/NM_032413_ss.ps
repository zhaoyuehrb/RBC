%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 00:41:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAGCUUUUUCCAACUCCUGAUGAAAAGGAAGGAACUCAUUCCCUUGGUGGUGUUCAUGACUGUGGCGGCGGGUGGAGCCUCAUCUUUCGCUGUGUAUUCUCUUUGGAAAACCGAUGUGAUCCUUGAUCGAAAAAAAAAUCCAGAACCUUGGGAAACUGUGGACCCUACUGUACCUCAAAAGCUUAUAACAAUCAACCAACAAUGGAAACCCAUUGAAGAGUUGCAAAAUGUCCAAAGGGUGACCAAAUGA\
) } def
/len { sequence length } bind def

/coor [
[207.36207581 227.45233154]
[196.65715027 216.94496155]
[185.95223999 206.43760681]
[175.24731445 195.93023682]
[164.54238892 185.42288208]
[153.83747864 174.91551208]
[143.13255310 164.40814209]
[132.42764282 153.90078735]
[121.72271729 143.39341736]
[111.01779938 132.88606262]
[96.11137390 134.55891418]
[88.00175476 147.17771912]
[79.89214325 159.79652405]
[82.80809784 170.24003601]
[79.57633209 180.36027527]
[71.48796082 186.90489197]
[61.35239792 187.91004944]
[52.93193436 200.32357788]
[44.51147079 212.73710632]
[36.09100723 225.15065002]
[40.53565598 240.14328003]
[34.25599670 254.46458435]
[20.21709061 261.35247803]
[5.04768133 257.55471802]
[-4.08970070 244.86447144]
[-2.88066220 229.27369690]
[8.10392475 218.14387512]
[23.67747498 216.73017883]
[32.09793854 204.31665039]
[40.51840210 191.90312195]
[48.93886566 179.48957825]
[48.95262527 160.13793945]
[67.27334595 151.68690491]
[75.38295746 139.06809998]
[83.49256897 126.44930267]
[78.09770203 118.61540222]
[75.72589111 110.15074921]
[76.21416473 102.09120941]
[79.07592773 95.30587006]
[83.58845520 90.40475464]
[88.90380096 87.68412781]
[79.29373169 76.16689301]
[69.68366241 64.64966583]
[60.07358932 53.13243866]
[50.46352005 41.61521149]
[34.96584320 40.04685593]
[25.38393211 28.22984886]
[26.97462654 13.46484756]
[17.36455727 1.94761848]
[7.75448656 -9.56961060]
[-6.28341866 -14.85517693]
[-21.10308838 -12.53625870]
[-35.92276001 -10.21734142]
[-43.84620667 3.26423860]
[-58.59893417 8.44989109]
[-73.21515656 2.89111066]
[-80.79354095 -10.78741741]
[-77.75580597 -26.12710953]
[-65.53627014 -35.88503265]
[-49.90463638 -35.45379257]
[-38.24167633 -25.03701019]
[-23.42200661 -27.35592842]
[-8.60233688 -29.67484665]
[-7.67342567 -37.11709976]
[-5.81560421 -52.00160599]
[-4.88669395 -59.44385910]
[-18.68170166 -65.33433533]
[-32.47670746 -71.22482300]
[-46.27171707 -77.11530304]
[-60.06672287 -83.00578308]
[-75.79671478 -81.30935669]
[-84.46314240 -93.42308044]
[-98.25814819 -99.31356049]
[-112.05315399 -105.20404053]
[-125.84816742 -111.09452057]
[-139.64317322 -116.98500824]
[-153.43817139 -122.87548828]
[-169.64567566 -120.37562561]
[-179.70199585 -133.32948303]
[-173.26206970 -148.41123962]
[-156.95072937 -150.10607910]
[-147.54769897 -136.67050171]
[-133.75268555 -130.78001404]
[-119.95767975 -124.88953400]
[-106.16267395 -118.99904633]
[-92.36766815 -113.10856628]
[-78.57266235 -107.21808624]
[-63.82937622 -109.33584595]
[-54.17624283 -96.80078888]
[-40.38123322 -90.91030884]
[-26.58622742 -85.01982880]
[-12.79121971 -79.12934875]
[1.00378788 -73.23886108]
[7.18429470 -77.48754883]
[-2.09791589 -89.27061462]
[-11.38012600 -101.05367279]
[-24.21758842 -108.81251526]
[-24.65738678 -123.80606079]
[-12.29677677 -132.30401611]
[1.54504442 -126.52440643]
[4.19199419 -111.75846863]
[11.86865139 -98.87169647]
[19.54530907 -85.98492432]
[25.72581482 -90.23361206]
[25.16716385 -105.22320557]
[24.60851097 -120.21279907]
[24.04985809 -135.20239258]
[23.49120712 -150.19198608]
[22.93255424 -165.18157959]
[8.30953598 -168.92955017]
[-4.65179586 -176.63838196]
[-14.90539265 -187.67599487]
[-21.62653923 -201.14204407]
[-24.27818680 -215.94139099]
[-22.65385056 -230.87315369]
[-16.89366913 -244.72816467]
[-7.47235584 -256.38684082]
[4.83991575 -264.90969849]
[19.04046249 -269.61306763]
[18.48181152 -284.60266113]
[17.92315865 -299.59225464]
[17.36450577 -314.58184814]
[16.80585480 -329.57144165]
[10.17380524 -345.17440796]
[23.33105850 -355.86660767]
[37.24768829 -346.18344116]
[31.79544830 -330.13009644]
[32.35409927 -315.14050293]
[32.91275024 -300.15090942]
[33.47140503 -285.16131592]
[34.03005600 -270.17172241]
[48.54130554 -266.53842163]
[61.45382309 -258.95565796]
[71.71681976 -248.03060913]
[78.49231720 -234.64280701]
[81.22360229 -219.87336731]
[79.68090057 -204.91770935]
[73.98075104 -190.98872375]
[64.57718658 -179.21850586]
[52.22562027 -170.56626892]
[37.92214966 -165.74023438]
[38.48080063 -150.75064087]
[39.03945160 -135.76104736]
[39.59810257 -120.77144623]
[40.15675735 -105.78185272]
[40.71540833 -90.79225922]
[19.27171516 -19.17967987]
[28.88178444 -7.66245127]
[38.49185562 3.85477710]
[53.30303574 4.93392181]
[63.21308136 16.47713089]
[61.98075104 32.00514221]
[71.59082031 43.52236938]
[81.20088959 55.03959656]
[90.81095886 66.55682373]
[100.42102814 78.07405853]
[115.29371643 80.02425385]
[127.54826355 71.37404633]
[134.36064148 57.09461975]
[149.22038269 56.07619476]
[161.47492981 47.42598724]
[173.72947693 38.77578354]
[185.98402405 30.12557983]
[195.43731689 16.05178642]
[211.57803345 21.23962212]
[211.06112671 38.18568802]
[194.63423157 42.38012695]
[182.37968445 51.03033066]
[170.12513733 59.68053818]
[157.87059021 68.33074188]
[151.93473816 81.99144745]
[136.19847107 83.62859344]
[123.94391632 92.27880096]
[123.33922577 99.75438690]
[137.93235779 96.28443146]
[145.74198914 109.09106445]
[135.97544861 120.47590637]
[122.12985229 114.70555115]
[121.52516174 122.18113708]
[132.23008728 132.68850708]
[142.93499756 143.19586182]
[153.63992310 153.70323181]
[164.34483337 164.21058655]
[175.04975891 174.71795654]
[185.75468445 185.22531128]
[196.45959473 195.73268127]
[207.16452026 206.24005127]
[217.86944580 216.74740601]
[233.30488586 208.04299927]
[251.22384644 205.42170715]
[269.26498413 209.51113892]
[284.94903564 220.03559875]
[296.01937866 235.81706238]
[300.76467896 254.90228271]
[298.27859497 274.80310059]
[311.42141724 282.03268433]
[324.56420898 289.26223755]
[337.70703125 296.49182129]
[350.89447021 303.63964844]
[365.84695435 299.27380371]
[379.16497803 306.62805176]
[383.23498535 320.90988159]
[396.46655273 327.97570801]
[409.69812012 335.04150391]
[422.92968750 342.10733032]
[436.16122437 349.17315674]
[449.39279175 356.23895264]
[465.75610352 355.15554810]
[474.64993286 368.93350220]
[466.92501831 383.39926147]
[450.52813721 383.67169189]
[442.32696533 369.47052002]
[429.09542847 362.40472412]
[415.86386108 355.33889771]
[402.63229370 348.27307129]
[389.40072632 341.20727539]
[376.16915894 334.14144897]
[362.03662109 338.70288086]
[348.51727295 331.72564697]
[343.82864380 316.87121582]
[336.46798706 316.49374390]
[330.47744751 309.63461304]
[317.33465576 302.40505981]
[304.19183350 295.17547607]
[291.04904175 287.94589233]
[285.14404297 292.56988525]
[294.39202881 304.37985229]
[303.63998413 316.18981934]
[312.88793945 327.99975586]
[322.13589478 339.80972290]
[334.58071899 348.18389893]
[330.46200562 362.60739136]
[315.47174072 363.14733887]
[310.32595825 349.05770874]
[301.07797241 337.24774170]
[291.83001709 325.43777466]
[282.58206177 313.62780762]
[273.33410645 301.81784058]
[267.42910767 306.44183350]
[271.29641724 320.93472290]
[283.25704956 332.15414429]
[279.25811768 348.05825806]
[263.41336060 352.28625488]
[252.02252197 340.48876953]
[256.80349731 324.80203247]
[252.93621826 310.30911255]
[237.16749573 308.97006226]
[222.68682861 303.28341675]
[210.64358521 293.86456299]
[201.94635010 281.61773682]
[197.19493103 267.65115356]
[196.64062500 253.17724609]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 188]
[2 187]
[3 186]
[4 185]
[5 184]
[6 183]
[7 182]
[8 181]
[9 180]
[10 179]
[11 35]
[12 34]
[13 33]
[17 31]
[18 30]
[19 29]
[20 28]
[41 156]
[42 155]
[43 154]
[44 153]
[45 152]
[48 149]
[49 148]
[50 147]
[51 63]
[52 62]
[53 61]
[66 93]
[67 92]
[68 91]
[69 90]
[70 89]
[72 87]
[73 86]
[74 85]
[75 84]
[76 83]
[77 82]
[104 146]
[105 145]
[106 144]
[107 143]
[108 142]
[109 141]
[119 131]
[120 130]
[121 129]
[122 128]
[123 127]
[157 173]
[158 172]
[160 170]
[161 169]
[162 168]
[163 167]
[195 225]
[196 224]
[197 223]
[198 222]
[199 220]
[202 217]
[203 216]
[204 215]
[205 214]
[206 213]
[207 212]
[239 246]
[240 245]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
