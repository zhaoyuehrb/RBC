%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 22:59:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUUUCUCCAGUAUUACCUCAACGAGCAGGGAGAUCGAGUCUAUACGCUGAAGAAAUUUGACCCGAUGGGACAACAGACCUGCUCAGCCCAUCCUGCUCGGUUCUCCCCAGAUGACAAAUACUCUCGACACCGAAUCACCAUCAAGAAACGCUUCAAGGUGCUCAUGACCCAGCAACCGCGCCCUGUCCUCUGA\
) } def
/len { sequence length } bind def

/coor [
[-59.16014862 108.25754547]
[-64.41156769 94.20576477]
[-71.56190491 107.39184570]
[-78.71224213 120.57791901]
[-85.86257935 133.76400757]
[-93.01291656 146.95007324]
[-85.10186005 160.04061890]
[-84.80725861 175.23306274]
[-92.10811615 188.44532776]
[-104.95603943 196.17752075]
[-119.84889984 196.43884277]
[-126.99923706 209.62492371]
[-122.26277161 224.70277405]
[-129.64920044 238.67475891]
[-144.77627563 243.25154114]
[-158.66938782 235.71780396]
[-163.08598328 220.54318237]
[-155.40577698 206.73049927]
[-140.18531799 202.47459412]
[-133.03497314 189.28851318]
[-140.94053650 176.66441345]
[-141.46926880 161.67854309]
[-134.37908936 148.35203552]
[-121.48578644 140.31092834]
[-106.19899750 139.79974365]
[-99.04866028 126.61366272]
[-91.89832306 113.42758179]
[-84.74798584 100.24150848]
[-77.59764862 87.05542755]
[-80.70063782 72.37989044]
[-92.57650757 63.21670914]
[-104.45236969 54.05352783]
[-116.32823181 44.89035034]
[-128.20410156 35.72716904]
[-140.07995605 26.56398964]
[-152.02886963 17.49628067]
[-164.05007935 8.52462292]
[-176.07128906 -0.44703534]
[-188.09248352 -9.41869354]
[-200.11369324 -18.39035034]
[-212.13490295 -27.36200905]
[-225.89151001 -19.05076027]
[-241.74584961 -16.65811729]
[-257.26773071 -20.52093506]
[-270.08947754 -30.01951981]
[-278.26687622 -43.67682648]
[-280.57415771 -59.38807678]
[-276.68753052 -74.74513245]
[-288.85098267 -83.52296448]
[-301.01443481 -92.30079651]
[-313.17788696 -101.07862854]
[-325.34133911 -109.85646057]
[-337.64392090 -118.43820953]
[-350.08248901 -126.82167053]
[-364.85934448 -119.41619110]
[-381.26077271 -120.46356201]
[-394.81988525 -129.58372498]
[-401.89175415 -144.21099854]
[-400.63299561 -160.31512451]
[-413.20431519 -168.49815369]
[-425.77563477 -176.68118286]
[-441.56237793 -177.72511292]
[-448.00799561 -191.15281677]
[-460.57931519 -199.33584595]
[-473.15063477 -207.51887512]
[-489.72369385 -211.09230042]
[-490.87780762 -228.00692749]
[-474.94369507 -233.79835510]
[-464.96759033 -220.09019470]
[-452.39627075 -211.90716553]
[-439.82495117 -203.72415161]
[-424.93740845 -203.26551819]
[-417.59262085 -189.25250244]
[-405.02130127 -181.06947327]
[-392.44998169 -172.88644409]
[-380.70278931 -179.86512756]
[-367.02890015 -181.10490417]
[-354.09399414 -176.30679321]
[-344.44433594 -166.35447693]
[-340.00567627 -153.15211487]
[-341.69900513 -139.26022339]
[-329.26046753 -130.87675476]
[-324.47332764 -130.89736938]
[-319.62500000 -127.90252686]
[-316.56350708 -122.01991272]
[-304.40005493 -113.24208069]
[-292.23660278 -104.46424866]
[-280.07315063 -95.68641663]
[-267.90969849 -86.90858459]
[-256.25122070 -94.73146820]
[-242.59320068 -98.11019135]
[-228.57269287 -96.61876678]
[-215.87739563 -90.41619873]
[-206.04248047 -80.22982788]
[-200.26498413 -67.27007294]
[-199.25810242 -53.08664322]
[-203.16323853 -39.38321304]
[-191.14202881 -30.41155624]
[-179.12083435 -21.43989754]
[-167.09962463 -12.46823978]
[-155.07843018 -3.49658179]
[-143.05722046 5.47507620]
[-135.80731201 6.95808697]
[-130.91677856 14.68812656]
[-119.04091644 23.85130692]
[-107.16505432 33.01448441]
[-95.28918457 42.17766571]
[-83.41332245 51.34084320]
[-71.53746033 60.50402451]
[-41.82465744 69.47350311]
[-27.01692963 71.86750031]
[-12.20920277 74.26149750]
[2.59852362 76.65550232]
[16.39752769 71.04865265]
[28.78593254 80.88927460]
[43.59365845 83.28327179]
[58.40138626 85.67727661]
[73.20911407 88.07127380]
[73.96725464 80.26527405]
[77.01274109 72.28375244]
[82.43753052 64.78738403]
[90.14698029 58.46237564]
[99.85482025 53.96906662]
[111.09195709 51.89001083]
[123.22895813 52.68111801]
[135.51118469 56.62950897]
[148.46130371 49.06021118]
[161.41142273 41.49091339]
[169.06054688 26.98495102]
[185.45578003 26.62677002]
[193.73112488 40.78483582]
[185.37359619 54.89454651]
[168.98072815 54.44104004]
[156.03060913 62.01033783]
[143.08047485 69.57963562]
[144.51416016 76.94132996]
[159.23754883 74.07395172]
[173.96093750 71.20657349]
[188.68432617 68.33918762]
[201.80111694 61.06253815]
[212.77481079 71.28887939]
[206.43988037 84.88551331]
[191.55171204 83.06257629]
[176.82832336 85.92995453]
[162.10493469 88.79734039]
[147.38154602 91.66471863]
[148.81523132 99.02641296]
[163.65942383 101.18276215]
[178.50363159 103.33911896]
[193.52827454 96.76705170]
[206.56990051 106.70927429]
[204.21241760 122.93808746]
[188.88098145 128.75866699]
[176.34727478 118.18331146]
[161.50308228 116.02696228]
[146.65887451 113.87060547]
[143.29685974 120.57484436]
[136.57283020 133.98333740]
[133.21083069 140.68757629]
[143.81742859 151.29417419]
[154.42402649 161.90077209]
[165.03062439 172.50738525]
[175.63723755 183.11398315]
[190.87232971 180.83407593]
[204.37084961 187.87988281]
[211.05316162 201.36360168]
[208.54441833 216.02116394]
[219.15101624 226.62776184]
[234.95332336 226.37713623]
[246.24617004 237.43367004]
[246.32971191 253.23774719]
[235.15438843 264.41305542]
[219.35032654 264.32952881]
[208.29377747 253.03666687]
[208.54441833 237.23437500]
[197.93782043 226.62776184]
[183.28024292 229.13652039]
[169.79653931 222.45419312]
[162.75071716 208.95567322]
[165.03062439 193.72058105]
[154.42402649 183.11398315]
[143.81742859 172.50738525]
[133.21083069 161.90077209]
[122.60422516 151.29417419]
[78.46669769 136.86154175]
[70.81511688 102.87899780]
[56.00738907 100.48500061]
[41.19966125 98.09100342]
[26.39193535 95.69700623]
[11.53378391 101.13262177]
[0.20452520 91.46322632]
[-14.60320187 89.06922913]
[-29.41092873 86.67523193]
[-44.21865463 84.28123474]
[-36.30149460 97.02165985]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 29]
[3 28]
[4 27]
[5 26]
[6 25]
[11 20]
[12 19]
[30 109]
[31 108]
[32 107]
[33 106]
[34 105]
[35 104]
[36 102]
[37 101]
[38 100]
[39 99]
[40 98]
[41 97]
[48 89]
[49 88]
[50 87]
[51 86]
[52 85]
[53 82]
[54 81]
[59 75]
[60 74]
[61 73]
[63 71]
[64 70]
[65 69]
[110 194]
[111 193]
[112 192]
[113 191]
[115 189]
[116 188]
[117 187]
[118 186]
[126 135]
[127 134]
[128 133]
[147 156]
[148 155]
[149 154]
[159 184]
[160 183]
[161 182]
[162 181]
[163 180]
[167 176]
[168 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
