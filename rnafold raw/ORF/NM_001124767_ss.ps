%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 22:01:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUUCACCAGGGCCCAGGUGAGACGGAUUCUGCAGCGGGUGCCCGGGAAGCAGCGAUUUGGCAUCUACCGGUUCCUGCCCUUCUUUUUUGUCCUGGGAGGAACGAUGGAGUGGAUCAUGAUUAAAGUGCGCGUGGGCCAGGAGACCUUCUAUGAUGUCUACCGUAGAAAAGCCUCAGAAAGACAGUAUCAGAGAAGGCUGGAAGAUGAAUGA\
) } def
/len { sequence length } bind def

/coor [
[241.30267334 374.60507202]
[237.94378662 358.91757202]
[248.22555542 346.60235596]
[248.22555542 331.60235596]
[248.22555542 316.60235596]
[248.22555542 301.60235596]
[248.22555542 286.60235596]
[247.78521729 271.60882568]
[246.90489197 256.63467407]
[246.02458191 241.66052246]
[245.14427185 226.68637085]
[238.06118774 213.46405029]
[226.08312988 204.43487549]
[214.10505676 195.40568542]
[202.12699890 186.37651062]
[190.14894104 177.34733582]
[178.17088318 168.31814575]
[163.35025024 166.83555603]
[156.98773193 152.35008240]
[145.00967407 143.32090759]
[133.03160095 134.29171753]
[114.02194214 145.50158691]
[91.99989319 146.93620300]
[71.69654083 138.28738403]
[57.47370148 121.41315460]
[43.18088150 125.96456146]
[28.88805962 130.51596069]
[14.59523869 135.06736755]
[0.30241835 139.61877441]
[-13.99040222 144.17018127]
[-28.24942970 148.82637024]
[-42.47389603 153.58709717]
[-56.69836426 158.34782410]
[-70.92282867 163.10856628]
[-78.72373199 180.37492371]
[-96.36623383 186.35142517]
[-112.49204254 177.68344116]
[-126.57062531 182.85969543]
[-140.64920044 188.03594971]
[-150.72798157 200.97233582]
[-166.93110657 198.44436646]
[-172.59019470 183.05258179]
[-161.88365173 170.63075256]
[-145.82545471 173.95738220]
[-131.74688721 168.78111267]
[-117.66830444 163.60485840]
[-115.23966980 152.46002197]
[-107.65493774 143.78097534]
[-96.71067810 139.79920959]
[-85.08527374 141.61224365]
[-75.68356323 148.88409424]
[-61.45909119 144.12336731]
[-47.23462677 139.36264038]
[-33.01015854 134.60189819]
[-27.66607285 129.49925232]
[-18.54180717 129.87736511]
[-4.24898624 125.32595062]
[10.04383469 120.77455139]
[24.33665466 116.22314453]
[38.62947464 111.67173767]
[52.92229462 107.12033844]
[53.37826538 90.33443451]
[59.63312149 74.75074768]
[70.90888214 62.30760956]
[63.72893524 49.13763046]
[56.54898453 35.96765137]
[49.36903763 22.79767418]
[42.18909073 9.62769413]
[35.00914001 -3.54228425]
[14.49301147 -8.16290569]
[4.20969105 -26.16934967]
[10.47477818 -45.62744522]
[2.53429079 -58.35334778]
[-5.40619659 -71.07925415]
[-13.34668446 -83.80516052]
[-21.28717232 -96.53106689]
[-29.22765923 -109.25696564]
[-36.42376709 -114.87935638]
[-37.18971634 -122.22848511]
[-44.94253540 -135.06958008]
[-52.69535446 -147.91067505]
[-67.71923828 -145.59738159]
[-82.48356628 -149.21440125]
[-94.73690033 -158.21020508]
[-102.61068726 -171.21296692]
[-104.90422821 -186.23988342]
[-101.26777649 -200.99943542]
[-92.25587463 -213.24092102]
[-79.24275970 -221.09759521]
[-64.21284485 -223.37136841]
[-49.45807648 -219.71551514]
[-37.22845459 -210.68751526]
[-29.38890648 -197.66407776]
[-27.13490677 -182.63117981]
[-30.81017303 -167.88124084]
[-39.85425568 -155.66349792]
[-32.10143661 -142.82240295]
[-24.34861946 -129.98130798]
[-16.50175476 -117.19745636]
[-8.56126690 -104.47154999]
[-0.62077934 -91.74564362]
[7.31970835 -79.01974487]
[15.26019573 -66.29383850]
[23.20068359 -53.56793213]
[32.51632309 -54.36455536]
[41.53811646 -51.69832230]
[49.01564789 -45.89483261]
[53.89661026 -37.71746063]
[55.47478485 -28.26715088]
[53.49197388 -18.83422661]
[48.17911911 -10.72223282]
[55.35906982 2.44774628]
[62.53901672 15.61772537]
[69.71896362 28.78770447]
[76.89891052 41.95768356]
[84.07885742 55.12766266]
[91.96535492 53.06969070]
[100.08729553 52.38695908]
[108.20668030 53.09946823]
[116.08557129 55.18634415]
[123.49309540 58.58642960]
[130.21218872 63.20009232]
[136.04594421 68.89213562]
[140.82341003 75.49575043]
[144.40460205 82.81743622]
[146.68457031 90.64263916]
[147.59649658 98.74205017]
[147.11367798 106.87831879]
[145.25022888 114.81303406]
[142.06079102 122.31365967]
[154.03884888 131.34283447]
[166.01690674 140.37202454]
[181.69429016 142.50044250]
[187.20005798 156.34008789]
[199.17811584 165.36927795]
[211.15618896 174.39845276]
[223.13424683 183.42762756]
[235.11230469 192.45680237]
[247.09036255 201.48599243]
[250.67251587 199.06980896]
[254.77450562 197.38584900]
[259.24374390 196.54553223]
[263.90402222 196.62799072]
[268.56225586 197.67495728]
[273.01672363 199.68743896]
[277.06549072 202.62382507]
[291.21856689 207.59286499]
[305.37161255 212.56188965]
[319.52465820 217.53091431]
[333.67770386 222.49995422]
[347.83074951 227.46897888]
[363.41482544 224.74011230]
[372.86035156 236.25668335]
[387.01339722 241.22572327]
[401.16644287 246.19474792]
[415.42547607 250.85093689]
[429.78356934 255.19204712]
[444.14166260 259.53314209]
[458.49975586 263.87423706]
[472.85784912 268.21533203]
[486.66751099 261.00900269]
[501.16680908 265.61602783]
[507.95184326 278.82583618]
[521.76147461 271.61950684]
[536.26080322 276.22653198]
[543.04583740 289.43630981]
[557.40393066 293.77743530]
[571.21514893 286.09454346]
[586.39062500 290.50820923]
[593.92700195 304.39987183]
[589.35314941 319.52783203]
[575.38262939 326.91696167]
[560.30383301 322.18341064]
[553.06286621 308.13552856]
[538.70477295 303.79440308]
[525.73748779 311.03219604]
[511.11450195 306.83425903]
[503.61074829 293.18392944]
[490.64349365 300.42172241]
[476.02050781 296.22375488]
[468.51675415 282.57342529]
[454.15866089 278.23233032]
[439.80056763 273.89123535]
[425.44247437 269.55014038]
[411.08438110 265.20904541]
[407.82202148 266.54104614]
[403.75280762 266.36047363]
[399.59399414 264.30541992]
[396.19741821 260.34780884]
[382.04437256 255.37876892]
[367.89132690 250.40974426]
[353.31954956 253.49401855]
[342.86172485 241.62202454]
[328.70864868 236.65299988]
[314.55560303 231.68397522]
[300.40255737 226.71493530]
[286.24951172 221.74591064]
[272.09646606 216.77688599]
[260.11840820 225.80606079]
[260.99871826 240.78021240]
[261.87902832 255.75434875]
[262.75936890 270.72848511]
[265.27163696 274.26370239]
[266.41476440 278.03506470]
[266.28244019 281.58361816]
[265.10769653 284.52783203]
[263.22555542 286.60235596]
[263.22555542 301.60235596]
[263.22555542 316.60235596]
[263.22555542 331.60235596]
[263.22555542 346.60235596]
[273.50732422 358.91757202]
[270.14843750 374.60507202]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 211]
[4 210]
[5 209]
[6 208]
[7 207]
[8 202]
[9 201]
[10 200]
[11 199]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[19 132]
[20 131]
[21 130]
[25 61]
[26 60]
[27 59]
[28 58]
[29 57]
[30 56]
[31 54]
[32 53]
[33 52]
[34 51]
[37 46]
[38 45]
[39 44]
[64 116]
[65 115]
[66 114]
[67 113]
[68 112]
[69 111]
[72 104]
[73 103]
[74 102]
[75 101]
[76 100]
[77 99]
[79 98]
[80 97]
[81 96]
[146 198]
[147 197]
[148 196]
[149 195]
[150 194]
[151 193]
[153 191]
[154 190]
[155 189]
[156 185]
[157 184]
[158 183]
[159 182]
[160 181]
[163 178]
[166 175]
[167 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
