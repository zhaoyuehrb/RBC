%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Sep  9 23:59:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAGAUACUAUGGCAGCUACUACAGAGGCCUGGGAUAUGGCUGUGGAGGCUUUGGUGGUCUGGGCUAUGGCUGUGGCUGUGGAGGCUACAGAUAUGGCUCUGGCUAUGGAGGCUAUAGAUAUGGCUGCUGCCGCCCAUCAUGCCGUGAAGGAUAUGGAUUCUCUGGAUUCUACUAA\
) } def
/len { sequence length } bind def

/coor [
[97.10073853 258.26684570]
[106.63166809 246.47970581]
[119.62086487 238.66583252]
[116.72697449 223.94763184]
[113.83308411 209.22943115]
[110.93919373 194.51123047]
[98.46842957 186.44799805]
[95.32394409 171.56288147]
[103.86595154 158.53706360]
[100.97206116 143.81886292]
[98.07817078 129.10066223]
[95.18428040 114.38246918]
[89.62796783 100.44950867]
[81.59951019 87.77891541]
[73.57105255 75.10832977]
[65.54259491 62.43773651]
[57.51413345 49.76714706]
[49.48567581 37.09655762]
[34.32419205 33.52343750]
[26.36268997 20.55928993]
[29.86254883 6.12715244]
[21.83408928 -6.54343748]
[13.80563068 -19.21402740]
[-0.35885343 -24.15036011]
[-14.52333736 -19.21402740]
[-20.83990097 -7.94581079]
[-32.76256943 -4.13574982]
[-43.71707916 -9.31095219]
[-57.96647644 -4.62536907]
[-72.21587372 0.06021335]
[-86.46527100 4.74579620]
[-91.07978821 19.56085014]
[-103.54117584 28.80712128]
[-119.05776978 28.92922592]
[-131.66313171 19.88021469]
[-136.51022339 5.13961792]
[-131.73526001 -9.62450600]
[-119.17430878 -18.73505020]
[-103.65730286 -18.68882370]
[-91.15084839 -9.50360107]
[-76.90145111 -14.18918324]
[-62.65205765 -18.87476540]
[-48.40266037 -23.56034851]
[-37.44729233 -37.25328064]
[-19.45967102 -33.37851334]
[-5.29518652 -38.31484604]
[-10.11128044 -54.58762741]
[-5.62507582 -70.00334930]
[5.79728317 -79.94134521]
[2.12851000 -94.48576355]
[-1.54026341 -109.03018188]
[-5.20903683 -123.57459259]
[-8.87781048 -138.11901855]
[-12.54658318 -152.66343689]
[-23.42420006 -164.15203857]
[-19.03479576 -178.38517761]
[-22.70356941 -192.92959595]
[-26.37234306 -207.47401428]
[-30.04111481 -222.01843262]
[-33.70988846 -236.56285095]
[-37.37866211 -251.10726929]
[-48.25627899 -262.59588623]
[-43.86687469 -276.82901001]
[-47.53564835 -291.37344360]
[-51.20442200 -305.91784668]
[-54.87319565 -320.46228027]
[-58.54196930 -335.00668335]
[-62.21074295 -349.55111694]
[-65.87951660 -364.09552002]
[-69.54828644 -378.63995361]
[-80.42590332 -390.12857056]
[-76.03649902 -404.36169434]
[-79.70527649 -418.90612793]
[-83.37404633 -433.45053101]
[-87.04281616 -447.99496460]
[-90.71159363 -462.53936768]
[-94.38036346 -477.08380127]
[-98.04914093 -491.62820435]
[-101.71791077 -506.17263794]
[-114.69952393 -515.59906006]
[-115.27957916 -531.63159180]
[-103.01311493 -541.97149658]
[-87.30991364 -538.68682861]
[-80.21612549 -524.29736328]
[-87.17349243 -509.84140015]
[-83.50472260 -495.29699707]
[-79.83594513 -480.75256348]
[-76.16717529 -466.20816040]
[-72.49840546 -451.66372681]
[-68.82962799 -437.11932373]
[-65.16085815 -422.57489014]
[-61.49208069 -408.03048706]
[-50.87688065 -397.58218384]
[-55.00386810 -382.30871582]
[-51.33509445 -367.76431274]
[-47.66632462 -353.21987915]
[-43.99755096 -338.67547607]
[-40.32877731 -324.13104248]
[-36.66000366 -309.58663940]
[-32.99123001 -295.04220581]
[-29.32245636 -280.49780273]
[-18.70725632 -270.04949951]
[-22.83424377 -254.77604675]
[-19.16547012 -240.23162842]
[-15.49669743 -225.68721008]
[-11.82792377 -211.14279175]
[-8.15915108 -196.59837341]
[-4.49037743 -182.05395508]
[6.12482309 -171.60566711]
[1.99783480 -156.33219910]
[5.66660833 -141.78778076]
[9.33538151 -127.24337006]
[13.00415516 -112.69895172]
[16.67292786 -98.15453339]
[20.34170151 -83.61011505]
[29.66018677 -82.12445831]
[38.05250549 -77.34964752]
[44.37182236 -69.76142883]
[47.69400787 -60.22938919]
[47.45033264 -49.91843796]
[43.51823044 -40.14660263]
[36.25623322 -32.21657562]
[26.47622108 -27.24248695]
[34.50468063 -14.57189655]
[42.53313828 -1.90130627]
[57.07767487 1.09737170]
[65.40016937 13.83278370]
[62.15626526 29.06809807]
[70.18472290 41.73868942]
[78.21318054 54.40927887]
[86.24163818 67.07987213]
[94.27010345 79.75045776]
[102.29856110 92.42105103]
[110.40293884 82.95059204]
[123.00151062 77.71659851]
[138.33586121 78.24604034]
[152.31730652 83.67918396]
[167.98292542 81.46582794]
[177.04344177 93.28768158]
[191.02490234 98.72082520]
[205.00634766 104.15396881]
[218.98779297 109.58711243]
[235.94143677 109.68842316]
[240.53732300 126.00756073]
[226.12821960 134.94142151]
[213.55465698 123.56855774]
[199.57321167 118.13541412]
[185.59175110 112.70227051]
[171.61030579 107.26912689]
[156.94473267 109.87110138]
[146.88415527 97.66063690]
[132.90270996 92.22749329]
[127.15265656 97.04276276]
[115.65254211 106.67330170]
[109.90248108 111.48857880]
[112.79637146 126.20677948]
[115.69026184 140.92497253]
[118.58415222 155.64317322]
[131.42190552 164.46530151]
[134.14704895 179.43287659]
[125.65738678 191.61734009]
[128.55128479 206.33554077]
[131.44517517 221.05374146]
[134.33906555 235.77194214]
[149.31968689 238.08639526]
[162.60379028 245.38764954]
[172.58723450 256.79406738]
[178.06449890 270.92828369]
[178.37416077 286.08346558]
[173.47882080 300.42959595]
[163.96961975 312.23431396]
[150.99484253 320.07211304]
[136.12126160 322.99655151]
[121.14492798 320.65447998]
[107.87431335 313.32873535]
[97.91189575 301.90396118]
[92.46069336 287.75967407]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 164]
[4 163]
[5 162]
[6 161]
[9 158]
[10 157]
[11 156]
[12 155]
[13 133]
[14 132]
[15 131]
[16 130]
[17 129]
[18 128]
[21 125]
[22 124]
[23 123]
[24 46]
[25 45]
[28 43]
[29 42]
[30 41]
[31 40]
[49 115]
[50 114]
[51 113]
[52 112]
[53 111]
[54 110]
[56 108]
[57 107]
[58 106]
[59 105]
[60 104]
[61 103]
[63 101]
[64 100]
[65 99]
[66 98]
[67 97]
[68 96]
[69 95]
[70 94]
[72 92]
[73 91]
[74 90]
[75 89]
[76 88]
[77 87]
[78 86]
[79 85]
[136 152]
[137 151]
[139 149]
[140 148]
[141 147]
[142 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
