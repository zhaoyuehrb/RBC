%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sat Sep 12 08:35:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGCGGGGAUGGCGCUGGCGCGGGCCUGGAAGCAGAUGUCCUGGUUCUACUACCAGUACCUGCUGGUCACGGCGCUCUACAUGCUGGAGCCCUGGGAGCGGACGGUGUUCAAUUCCAUGCUGGUUUCCAUUGUGGGGAUGGCACUAUACACAGGAUACGUCUUCAUGCCCCAGCACAUCAUGGCGAUAUUGCACUACUUUGAAAUCGUACAAUGA\
) } def
/len { sequence length } bind def

/coor [
[230.57815552 392.29876709]
[224.66282654 378.51440430]
[212.53349304 369.86981201]
[214.20156860 354.13677979]
[208.28623962 340.35241699]
[196.15690613 331.70785522]
[197.82498169 315.97482300]
[185.69564819 307.33023071]
[187.36372375 291.59722900]
[181.44839478 277.81286621]
[175.53305054 264.02847290]
[169.61770630 250.24411011]
[158.50657654 245.46905518]
[153.46430969 234.03721619]
[157.69181824 221.85462952]
[151.97665405 207.98608398]
[146.26148987 194.11752319]
[140.54632568 180.24896240]
[134.83116150 166.38040161]
[122.82825470 157.56114197]
[124.72392273 141.85391235]
[119.00875854 127.98535156]
[92.53859711 130.26124573]
[74.85833740 113.43129730]
[60.23442078 116.76911163]
[45.61050415 120.10692596]
[30.98658371 123.44474030]
[27.91739273 126.50184631]
[24.39037895 128.25018311]
[20.87232018 128.70635986]
[17.77681541 128.03659058]
[15.42017651 126.52645111]
[0.62758881 129.01228333]
[-14.16499901 131.49810791]
[-28.95758820 133.98393250]
[-43.75017548 136.46975708]
[-49.07758331 140.37287903]
[-54.72847366 140.92083740]
[-59.00649643 138.80694580]
[-73.86485291 140.86347961]
[-86.47390747 150.41973877]
[-100.14179993 144.50044250]
[-115.00015259 146.55696106]
[-129.85850525 148.61349487]
[-144.71685791 150.67002869]
[-159.57521057 152.72656250]
[-168.91180420 165.47817993]
[-184.54306030 167.81036377]
[-197.19525146 158.33949280]
[-199.36206055 142.68443298]
[-189.75793457 130.13308716]
[-174.08085632 128.13192749]
[-161.63174438 137.86819458]
[-146.77339172 135.81167603]
[-131.91503906 133.75514221]
[-117.05667877 131.69860840]
[-102.19832611 129.64208984]
[-90.65203857 120.23291016]
[-75.92137909 126.00511932]
[-61.06302643 123.94858551]
[-46.23600388 121.67716980]
[-31.44341469 119.19134521]
[-16.65082741 116.70552063]
[-1.85823882 114.21968842]
[12.93434906 111.73386383]
[27.64876938 108.82081604]
[42.27268982 105.48300934]
[56.89660645 102.14519501]
[71.52052307 98.80738068]
[69.97797394 92.96691132]
[69.69530487 86.52569580]
[70.83793640 79.76359558]
[60.58239746 68.81717682]
[52.43527985 64.69671631]
[50.25904846 57.63727188]
[40.16305923 46.54353333]
[30.06706619 35.44979858]
[19.97107697 24.35606384]
[9.87508583 13.26232815]
[-0.22090533 2.16859245]
[-16.11408043 -0.01922138]
[-24.18862915 -13.88216496]
[-18.25045013 -28.78577423]
[-2.85480428 -33.29727554]
[10.18808556 -23.95583153]
[10.87283039 -7.92739820]
[20.96882057 3.16633749]
[31.06481171 14.26007271]
[41.16080093 25.35380936]
[51.25679398 36.44754410]
[61.35278320 47.54127884]
[71.52881622 58.56164551]
[81.78434753 69.50805664]
[95.99555969 64.70789337]
[97.51308441 49.78485107]
[99.03060913 34.86181259]
[100.54813385 19.93877220]
[102.06565857 5.01573277]
[103.58318329 -9.90730667]
[105.10070801 -24.83034706]
[102.96398163 -29.58303833]
[102.87030029 -34.21730423]
[104.43320465 -37.97568893]
[107.02188110 -40.36342239]
[109.18590546 -55.20650101]
[111.34993744 -70.04957581]
[113.51396942 -84.89265442]
[115.67799377 -99.73573303]
[117.84202576 -114.57881165]
[106.64198303 -125.31839752]
[103.92667389 -140.59605408]
[110.74018097 -154.53720093]
[124.46257782 -161.78120422]
[139.81732178 -159.54257202]
[150.90019226 -148.68211365]
[153.44961548 -133.37591553]
[146.48527527 -119.50949097]
[132.68510437 -112.41477966]
[130.52107239 -97.57170105]
[128.35704041 -82.72862244]
[126.19301605 -67.88555145]
[124.02898407 -53.04246902]
[121.86495972 -38.19939041]
[120.02374268 -23.31282234]
[118.50621796 -8.38978195]
[116.98869324 6.53325796]
[115.47116852 21.45629692]
[113.95364380 36.37933731]
[112.43611908 51.30237579]
[110.91859436 66.22541809]
[121.90458679 72.77802277]
[129.69747925 82.66703033]
[133.37998962 94.49642944]
[147.36936951 89.08376312]
[161.35876465 83.67109680]
[175.34815979 78.25842285]
[189.33753967 72.84575653]
[203.32693481 67.43309021]
[217.31632996 62.02042007]
[231.30570984 56.60774994]
[245.29510498 51.19507980]
[249.40806580 34.78617859]
[262.36352539 24.16880798]
[278.92855835 23.37526703]
[292.56347656 32.52046204]
[306.47302246 26.90583801]
[312.42147827 12.26372623]
[327.01351929 6.19343472]
[341.59191895 12.29636097]
[347.50759888 26.95174599]
[341.25088501 41.46480942]
[326.53375244 47.22521210]
[312.08764648 40.81540298]
[298.17810059 46.43002701]
[296.16085815 59.62496948]
[287.82110596 70.18552399]
[275.25259399 75.28786469]
[261.69696045 73.50062561]
[250.70776367 65.18447113]
[236.71838379 70.59713745]
[222.72898865 76.00981140]
[208.73960876 81.42247772]
[194.75021362 86.83514404]
[180.76081848 92.24781036]
[166.77143860 97.66048431]
[152.78204346 103.07315063]
[138.79264832 108.48581696]
[132.87731934 122.27018738]
[138.59248352 136.13874817]
[151.00418091 145.94998169]
[148.69972229 160.66523743]
[154.41488647 174.53379822]
[160.13005066 188.40235901]
[165.84521484 202.27091980]
[171.56037903 216.13946533]
[186.40637207 227.03692627]
[183.40208435 244.32878113]
[189.31741333 258.11315918]
[195.23275757 271.89752197]
[201.14808655 285.68188477]
[213.70053101 295.31240845]
[211.60934448 310.05947876]
[224.16177368 319.69000244]
[222.07060242 334.43707275]
[227.98593140 348.22146606]
[240.53837585 357.85198975]
[238.44718933 372.59906006]
[244.36253357 386.38342285]
[250.57579041 400.03610229]
[257.08404541 413.55062866]
[263.59231567 427.06515503]
[270.10055542 440.57968140]
[283.05929565 449.65612793]
[281.61038208 464.48010254]
[288.11865234 477.99462891]
[303.38168335 477.94311523]
[317.15182495 484.52682495]
[326.69506836 496.43856812]
[330.11654663 511.31323242]
[326.73690796 526.19750977]
[317.22723389 538.13604736]
[303.47564697 544.75842285]
[288.21252441 544.74987793]
[274.46838379 538.11199951]
[264.97213745 526.16271973]
[261.60928345 511.27468872]
[265.04748535 496.40386963]
[274.60409546 484.50286865]
[268.09585571 470.98834229]
[255.60263062 462.87857056]
[256.58602905 447.08795166]
[250.07777405 433.57342529]
[243.56951904 420.05886841]
[237.06126404 406.54434204]
[233.87649536 405.04107666]
[231.26014709 401.92291260]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 188]
[2 187]
[4 185]
[5 184]
[7 182]
[9 180]
[10 179]
[11 178]
[12 177]
[15 175]
[16 174]
[17 173]
[18 172]
[19 171]
[21 169]
[22 168]
[24 69]
[25 68]
[26 67]
[27 66]
[32 65]
[33 64]
[34 63]
[35 62]
[36 61]
[39 60]
[40 59]
[42 57]
[43 56]
[44 55]
[45 54]
[46 53]
[72 93]
[73 92]
[75 91]
[76 90]
[77 89]
[78 88]
[79 87]
[80 86]
[94 130]
[95 129]
[96 128]
[97 127]
[98 126]
[99 125]
[100 124]
[104 123]
[105 122]
[106 121]
[107 120]
[108 119]
[109 118]
[133 167]
[134 166]
[135 165]
[136 164]
[137 163]
[138 162]
[139 161]
[140 160]
[141 159]
[145 154]
[146 153]
[189 214]
[190 213]
[191 212]
[192 211]
[194 209]
[195 208]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
