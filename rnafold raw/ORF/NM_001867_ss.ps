%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sat Sep 12 03:34:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUUGGGCCAGAGCAUCCGGAGGUUCACAACCUCUGUGGUCCGUAGGAGCCACUAUGAGGAGGGCCCUGGGAAGAAUUUGCCAUUUUCAGUGGAAAACAAGUGGUCGUUACUAGCUAAGAUGUGUUUGUACUUUGGAUCUGCAUUUGCUACACCCUUCCUUGUAGUAAGACACCAACUGCUUAAAACAUAA\
) } def
/len { sequence length } bind def

/coor [
[127.33049774 223.17111206]
[137.26138306 211.74061584]
[150.36691284 204.15617371]
[147.45553589 189.44143677]
[144.54414368 174.72668457]
[141.63276672 160.01193237]
[138.72137451 145.29718018]
[123.78144836 143.95606995]
[118.29592133 157.91705322]
[121.26754761 174.04470825]
[108.61258698 184.47467041]
[93.34937286 178.47746277]
[91.17939758 162.22251892]
[104.33493805 152.43151855]
[109.82046509 138.47055054]
[103.81806946 133.97373962]
[90.02699280 139.87341309]
[91.81327820 124.98013306]
[85.81088257 120.48332977]
[73.95407104 129.67114258]
[62.09725571 138.85896301]
[50.24044037 148.04678345]
[38.38362885 157.23460388]
[26.52681541 166.42240906]
[14.67000198 175.61022949]
[2.81318903 184.79804993]
[-6.00340939 199.27920532]
[-22.35931587 194.81594849]
[-22.59824753 177.86367798]
[-6.37462759 172.94123840]
[5.48218536 163.75341797]
[17.33899879 154.56559753]
[29.19581223 145.37777710]
[41.05262375 136.18997192]
[52.90943909 127.00215149]
[64.76625061 117.81433105]
[76.62306213 108.62651825]
[71.13729095 94.66491699]
[65.65201569 80.70455170]
[50.71208572 82.04566956]
[35.78356934 83.50833130]
[20.86745071 85.09244537]
[5.95133209 86.67655945]
[-9.16068649 94.36182404]
[-20.72902679 81.96788025]
[-12.02188015 67.42064667]
[4.36721754 71.76044464]
[19.28333664 70.17633057]
[34.19945526 68.59221649]
[40.52848434 64.75368500]
[49.37097168 67.10574341]
[64.31089783 65.76462555]
[76.60206604 57.16653824]
[82.98433685 43.59205246]
[89.36660767 30.01756859]
[95.74887848 16.44308472]
[102.13114929 2.86860037]
[108.51342010 -10.70588398]
[114.89569092 -24.28036880]
[121.27796173 -37.85485077]
[127.66023254 -51.42933655]
[134.04249573 -65.00382233]
[140.42477417 -78.57830811]
[146.80703735 -92.15278625]
[153.18931580 -105.72727203]
[152.45710754 -120.70938873]
[144.78158569 -133.59684753]
[137.00144958 -146.42140198]
[129.11717224 -159.18222046]
[121.23291016 -171.94302368]
[113.34864044 -184.70384216]
[105.46437073 -197.46464539]
[97.58010864 -210.22546387]
[89.69583893 -222.98628235]
[74.34638977 -222.44779968]
[60.79167557 -229.67036438]
[52.67785263 -242.71112061]
[52.18749237 -258.06219482]
[59.45250320 -271.59417725]
[72.51863098 -279.66708374]
[87.87115479 -280.10934448]
[101.38032532 -272.80194092]
[109.41223907 -259.71057129]
[109.80635071 -244.35673523]
[102.45664978 -230.87054443]
[110.34091949 -218.10972595]
[118.22518158 -205.34892273]
[126.10945129 -192.58810425]
[133.99371338 -179.82730103]
[141.87799072 -167.06648254]
[149.76225281 -154.30566406]
[155.96202087 -150.26167297]
[157.66905212 -141.27235413]
[165.34455872 -128.38490295]
[172.73527527 -127.10927582]
[175.28677368 -141.89067078]
[190.06814575 -139.33894348]
[187.51672363 -124.55799866]
[194.90744019 -123.28236389]
[206.45890808 -132.85124207]
[218.01039124 -142.42013550]
[229.56185913 -151.98901367]
[241.11332703 -161.55789185]
[252.66479492 -171.12678528]
[263.97921753 -180.97483826]
[275.04980469 -191.09617615]
[286.12042236 -201.21752930]
[285.93783569 -221.29440308]
[300.34039307 -234.84208679]
[319.76074219 -233.47546387]
[330.32409668 -244.12513733]
[340.88745117 -254.77482605]
[345.11251831 -270.02142334]
[359.56869507 -273.60873413]
[370.13204956 -284.25842285]
[380.69537354 -294.90808105]
[378.07281494 -310.20193481]
[384.97076416 -324.10150146]
[398.73684692 -331.26211548]
[414.07772827 -328.93035889]
[425.09451294 -318.00286865]
[427.55105591 -302.68148804]
[420.50271606 -288.85757446]
[406.65975952 -281.84671021]
[391.34506226 -284.34472656]
[380.78170776 -273.69506836]
[370.21835327 -263.04537964]
[366.74884033 -248.56050110]
[351.53710938 -244.21147156]
[340.97375488 -233.56179810]
[330.41040039 -222.91210938]
[333.22088623 -213.01225281]
[331.64831543 -202.76025391]
[325.91101074 -194.02278137]
[316.99172974 -188.41893005]
[306.46984863 -187.02033997]
[296.24176025 -190.14691162]
[285.17117310 -180.02557373]
[274.10055542 -169.90422058]
[273.58270264 -166.40205383]
[271.33358765 -162.97924805]
[267.41030884 -160.45094299]
[262.23367310 -159.57531738]
[250.68220520 -150.00642395]
[239.13073730 -140.43754578]
[227.57926941 -130.86866760]
[216.02780151 -121.29978180]
[204.47633362 -111.73089600]
[199.96887207 -105.84582520]
[194.60667419 -101.31087494]
[188.73709106 -98.21799469]
[182.70762634 -96.57704163]
[176.84750366 -96.31985474]
[171.45109558 -97.30815887]
[166.76379395 -99.34500122]
[160.38153076 -85.77051544]
[153.99925232 -72.19603729]
[147.61698914 -58.62155151]
[141.23471069 -45.04706573]
[134.85244751 -31.47258186]
[128.47016907 -17.89809799]
[122.08790588 -4.32361364]
[115.70563507 9.25087070]
[109.32336426 22.82535553]
[102.94109344 36.39983749]
[96.55882263 49.97432327]
[90.17655182 63.54880905]
[103.97530365 58.08588409]
[120.30418396 58.21965408]
[136.80203247 64.97738647]
[150.73912048 78.37863922]
[159.44403076 97.32187653]
[160.75672913 119.64849854]
[153.43612671 142.38580322]
[156.34750366 157.10055542]
[159.25889587 171.81529236]
[162.17028809 186.53004456]
[165.08166504 201.24479675]
[180.08795166 203.26716614]
[193.62338257 210.05473328]
[204.21971130 220.87121582]
[210.72755432 234.54333496]
[212.44097900 249.58802795]
[209.17411804 264.37338257]
[201.28134155 277.29556274]
[189.61880493 286.95288086]
[175.45156860 292.29779053]
[160.31639099 292.75051880]
[145.85501099 288.26193237]
[133.63610840 279.31893921]
[124.98507690 266.89163208]
[120.84033966 252.32797241]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 178]
[4 177]
[5 176]
[6 175]
[7 174]
[8 15]
[9 14]
[19 37]
[20 36]
[21 35]
[22 34]
[23 33]
[24 32]
[25 31]
[26 30]
[39 52]
[40 51]
[41 49]
[42 48]
[43 47]
[53 167]
[54 166]
[55 165]
[56 164]
[57 163]
[58 162]
[59 161]
[60 160]
[61 159]
[62 158]
[63 157]
[64 156]
[65 155]
[66 94]
[67 93]
[68 91]
[69 90]
[70 89]
[71 88]
[72 87]
[73 86]
[74 85]
[99 148]
[100 147]
[101 146]
[102 145]
[103 144]
[104 143]
[105 139]
[106 138]
[107 137]
[110 131]
[111 130]
[112 129]
[114 127]
[115 126]
[116 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
