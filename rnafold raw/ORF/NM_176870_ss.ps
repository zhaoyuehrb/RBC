%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 19:29:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGACCCCAACUGCUCCUGCACCACUGGUGUCUCCUGCGCCUGCACCGGCUCCUGCACGUGCAAAGAGUGCAAAUGCACCUCCUGCAAGAAGAGCUGCUGCUCCUGCUGCCCCGUGGGCUGUGCCAAGUGUGCCCACGGCUGUGUCUGCAAAGGGACGUUGGAGAACUGCAGCUGCUGUGCCUGA\
) } def
/len { sequence length } bind def

/coor [
[102.74927521 148.22993469]
[90.19504547 147.30273438]
[78.30661774 143.16345215]
[69.57158661 155.35768127]
[60.83655548 167.55191040]
[52.10152435 179.74613953]
[50.35522079 195.47067261]
[36.65365219 201.31158447]
[27.91862106 213.50581360]
[19.18358994 225.70004272]
[22.99396324 244.24133301]
[12.24387169 259.43228149]
[-5.87732553 261.91940308]
[-14.19777870 274.40017700]
[-22.51823235 286.88098145]
[-23.03306770 303.27203369]
[-37.61146164 310.78219604]
[-51.25641251 301.68563843]
[-49.93116379 285.34011841]
[-34.99901962 278.56051636]
[-26.67856598 266.07974243]
[-18.35811234 253.59893799]
[-22.97408104 243.13877869]
[-21.94733620 231.63110352]
[-15.41826344 221.95436096]
[-4.91797447 216.58518982]
[6.98936081 216.96501160]
[15.72439194 204.77078247]
[24.45942307 192.57655334]
[25.58093834 177.72422791]
[39.90729523 171.01110840]
[48.64232635 158.81687927]
[57.37735748 146.62265015]
[66.11238861 134.42842102]
[58.53675842 124.78881836]
[53.63176346 113.55258179]
[51.71333313 101.44342041]
[36.83224487 99.55842590]
[21.95115662 97.67342377]
[7.07006788 95.78842926]
[-7.81102037 93.90342712]
[-22.47411156 99.84516907]
[-34.12817001 90.56981659]
[-49.00925827 88.68481445]
[-63.89034653 86.79981995]
[-78.77143097 84.91481781]
[-89.29886627 96.31449890]
[-104.52285004 99.31614685]
[-118.58946228 92.76555634]
[-126.08979034 79.18157196]
[-124.13980865 63.78750610]
[-113.48933411 52.50269699]
[-98.23368073 49.66638184]
[-84.23896027 56.36917877]
[-76.88643646 70.03372955]
[-62.00534821 71.91873169]
[-47.12425995 73.80372620]
[-32.24317169 75.68872833]
[-18.64447403 69.61215973]
[-5.92602158 79.02233887]
[8.95506668 80.90734100]
[23.83615494 82.79233551]
[38.71724319 84.67733765]
[53.59833145 86.56233215]
[58.09637070 75.96311951]
[64.97494507 66.72942352]
[55.83519363 54.83552170]
[48.10800171 49.92438889]
[46.64381027 42.66416550]
[37.70515823 30.61839676]
[28.76650810 18.57262993]
[19.82785606 6.52686310]
[4.57312441 0.50812542]
[2.42609668 -15.74986649]
[15.59545040 -25.52228546]
[30.53368378 -18.75610352]
[31.87362289 -2.41178870]
[40.81227493 9.63397789]
[49.75092697 21.67974472]
[58.68957901 33.72551346]
[67.72909546 45.69577026]
[76.86885071 57.58967590]
[96.46420288 51.82133102]
[116.69174957 54.66710663]
[133.93489075 65.61817932]
[145.11062622 82.71656799]
[159.78109741 79.58967590]
[174.45155334 76.46278381]
[178.07502747 62.94054794]
[187.13140869 52.35220337]
[199.80740356 46.72995377]
[213.60255432 47.12039185]
[225.82244873 53.39015961]
[234.10494995 64.26313019]
[248.82588196 61.38313675]
[263.54681396 58.50313568]
[278.26773071 55.62313843]
[292.98864746 52.74314117]
[307.70956421 49.86314011]
[317.65679932 33.75875854]
[335.89965820 30.08074951]
[350.79061890 40.70257568]
[365.40646362 37.32967377]
[380.02233887 33.95677185]
[394.63821411 30.58386993]
[406.34515381 19.94160652]
[420.48629761 24.61890602]
[435.10217285 21.24600410]
[443.50045776 8.12705421]
[458.37106323 4.91466045]
[470.82623291 13.00197220]
[485.44207764 9.62907028]
[500.05795288 6.25616837]
[514.17712402 1.19170034]
[527.60455322 -5.49437523]
[541.03204346 -12.18045044]
[554.45947266 -18.86652565]
[567.88690186 -25.55260086]
[581.31439209 -32.23867798]
[594.74182129 -38.92475128]
[594.48883057 -54.18577194]
[600.89019775 -68.04164124]
[612.67492676 -77.74126434]
[627.50317383 -81.35877991]
[642.43072510 -78.17592621]
[654.49377441 -68.82465363]
[661.29711914 -55.16167068]
[661.48999023 -39.89977264]
[655.03411865 -26.06921768]
[643.21130371 -16.41607475]
[628.36889648 -12.85698223]
[613.45397949 -16.09860039]
[601.42791748 -25.49730301]
[588.00042725 -18.81122780]
[574.57299805 -12.12515163]
[561.14556885 -5.43907642]
[547.71807861 1.24699903]
[534.29064941 7.93307447]
[520.86322021 14.61915016]
[523.12255859 29.44801521]
[537.93194580 31.83185959]
[549.64044189 21.46629143]
[565.27380371 21.10356331]
[577.45043945 30.91494560]
[580.42095947 46.26780319]
[572.78265381 59.91298676]
[558.14221191 65.40766144]
[543.41235352 60.15740204]
[535.54809570 46.64122391]
[520.73870850 44.25738144]
[512.61944580 39.92417908]
[506.92721558 33.96979523]
[503.88864136 27.31441307]
[503.43084717 20.87203407]
[488.81497192 24.24493599]
[474.19912720 27.61783791]
[466.54736328 40.34521866]
[451.77285767 43.97402954]
[438.47506714 35.86186981]
[423.85922241 39.23477173]
[413.19769287 49.63578415]
[398.01110840 45.19973755]
[383.39523315 48.57263947]
[368.77938843 51.94554138]
[354.16351318 55.31843948]
[350.34619141 66.09574890]
[341.70471191 73.76422119]
[330.31585693 76.32584381]
[318.99264526 73.02902985]
[310.58956909 64.58406830]
[295.86865234 67.46406555]
[281.14773560 70.34406281]
[266.42678833 73.22406006]
[251.70587158 76.10405731]
[236.98495483 78.98405457]
[232.12408447 94.38452911]
[220.09474182 105.29949951]
[204.11212158 108.68394470]
[188.51287842 103.52288818]
[177.57844543 91.13324738]
[162.90798950 94.26013947]
[148.23751831 97.38703156]
[147.27484131 109.93859100]
[143.10197449 121.81526947]
[136.00227356 132.21058655]
[126.45784760 140.41865540]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 34]
[4 33]
[5 32]
[6 31]
[8 29]
[9 28]
[10 27]
[13 22]
[14 21]
[15 20]
[37 64]
[38 63]
[39 62]
[40 61]
[41 60]
[43 58]
[44 57]
[45 56]
[46 55]
[66 82]
[67 81]
[69 80]
[70 79]
[71 78]
[72 77]
[86 182]
[87 181]
[88 180]
[94 175]
[95 174]
[96 173]
[97 172]
[98 171]
[99 170]
[102 165]
[103 164]
[104 163]
[105 162]
[107 160]
[108 159]
[111 156]
[112 155]
[113 154]
[114 139]
[115 138]
[116 137]
[117 136]
[118 135]
[119 134]
[120 133]
[140 150]
[141 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
