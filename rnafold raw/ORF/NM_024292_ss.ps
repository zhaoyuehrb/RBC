%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sat Sep 12 08:26:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAUCGAGGUUGUUUGCAACGACCGUCUGGGGAAGAAGGUCCGCGUUAAAUGCAACACGGAUGAUACCAUCGGGGACCUUAAGAAGCUGAUUGCAGCCCAAACUGGUACCCGUUGGAACAAGAUUGUCCUGAAGAAGUGGUACACGAUUUUUAAGGACCACGUGUCUCUGGGGGACUAUGAAAUCCACGAUGGGAUGAACCUGGAGCUUUAUUAUCAAUAG\
) } def
/len { sequence length } bind def

/coor [
[150.58747864 358.64657593]
[135.58761597 358.71264648]
[120.96250916 355.38003540]
[107.47207642 348.82196045]
[95.81730652 339.37918091]
[86.60377502 327.54232788]
[80.31024170 313.92648315]
[77.26371002 299.23913574]
[77.62233734 284.24450684]
[70.70912933 297.55645752]
[63.79592133 310.86837769]
[56.88270950 324.18029785]
[49.96950150 337.49224854]
[43.05629349 350.80416870]
[36.14308548 364.11611938]
[34.20903397 380.95938110]
[17.48860359 383.76358032]
[10.16530514 368.47290039]
[22.83115196 357.20291138]
[29.74435997 343.89096069]
[36.65756989 330.57904053]
[43.57077789 317.26708984]
[50.48398972 303.95516968]
[57.39719772 290.64324951]
[64.31040955 277.33129883]
[63.55501175 268.54681396]
[69.63332367 260.71035767]
[71.73952484 245.85896301]
[73.84571838 231.00756836]
[75.95191193 216.15617371]
[78.05810547 201.30477905]
[80.16430664 186.45338440]
[68.07852173 182.75663757]
[56.64081573 177.37973022]
[46.08340836 170.43182373]
[36.62063980 162.05400085]
[28.44462585 152.41630554]
[21.72135735 141.71444702]
[16.58733368 130.16569519]
[13.14679050 118.00448608]
[-1.74579287 119.79640198]
[-16.63837624 121.58831024]
[-31.53096008 123.38022614]
[-46.42354584 125.17213440]
[-59.20058823 134.50260925]
[-72.76102448 128.34112549]
[-87.65361023 130.13304138]
[-102.54618835 131.92495728]
[-112.10811615 144.50848389]
[-127.77838898 146.56225586]
[-140.26011658 136.86782837]
[-142.14811707 121.17671967]
[-132.32226562 108.79817963]
[-116.61206055 107.07619476]
[-104.33810425 117.03237152]
[-89.44551849 115.24045563]
[-74.55293274 113.44854736]
[-62.84111023 104.24623871]
[-48.21545792 110.27955627]
[-33.32287216 108.48764038]
[-18.43028831 106.69573212]
[-3.53770518 104.90381622]
[11.35487843 103.11190796]
[12.46290302 85.68573761]
[16.96330070 68.81429291]
[24.68166542 53.15141296]
[35.31888199 39.30408096]
[48.46272278 27.80892944]
[40.81073761 14.90748978]
[33.15875244 2.00605154]
[19.46401978 -5.91637325]
[19.62624550 -20.81009483]
[11.97426128 -33.71153259]
[4.32227612 -46.61297226]
[-3.32970929 -59.51441193]
[-17.02444458 -67.43683624]
[-16.86221695 -82.33055878]
[-24.51420212 -95.23199463]
[-32.16618729 -108.13343811]
[-47.05445099 -105.38299561]
[-61.95744324 -107.88755798]
[-75.07966614 -115.32580566]
[-84.84687042 -126.78320312]
[-90.09490204 -140.86437988]
[-90.20845032 -155.86309814]
[-85.19309998 -169.96896362]
[-75.67237091 -181.48594666]
[-83.32435608 -194.38739014]
[-90.97634125 -207.28883362]
[-98.62832642 -220.19026184]
[-113.18292236 -227.74642944]
[-113.64598083 -244.13903809]
[-99.54113770 -252.50477600]
[-85.37825012 -244.23768616]
[-85.72688293 -227.84225464]
[-78.07489777 -214.94081116]
[-70.42291260 -202.03936768]
[-62.77093124 -189.13793945]
[-48.09900665 -191.96987915]
[-33.31574249 -189.60679626]
[-20.20843124 -182.31481934]
[-10.36842537 -170.95718384]
[-4.99793959 -156.89204407]
[-4.76318693 -141.81010437]
[-9.71179962 -127.53133392]
[-19.26474762 -115.78542328]
[-11.61276340 -102.88397980]
[-3.96077776 -89.98254395]
[9.18663597 -82.98291779]
[9.57172966 -67.16639709]
[17.22371483 -54.26495743]
[24.87570000 -41.36351776]
[32.52768707 -28.46208000]
[45.67509842 -21.46245193]
[46.06019211 -5.64593363]
[53.71217728 7.25550508]
[61.36416245 20.15694427]
[71.64995575 15.95289040]
[82.38066864 13.06783867]
[93.38788605 11.54706573]
[104.49887848 11.41443920]
[115.53926086 12.67203808]
[126.33577728 15.30012798]
[136.71899414 19.25746346]
[146.52595520 24.48194122]
[155.60275269 30.89156914]
[163.80694580 38.38575745]
[175.43971252 28.91587639]
[187.07249451 19.44599342]
[198.70526123 9.97611141]
[210.33802795 0.50622886]
[212.42498779 -12.21618271]
[222.30154419 -19.86453438]
[234.34321594 -18.77266312]
[246.10823059 -28.07773018]
[257.87326050 -37.38279724]
[269.63827515 -46.68786240]
[281.40328979 -55.99293137]
[293.16830444 -65.29799652]
[299.19253540 -79.92739868]
[313.97470093 -81.75397491]
[319.52120972 -97.18667603]
[335.70544434 -99.83294678]
[345.87844849 -86.97052765]
[339.57513428 -71.83116913]
[323.27978516 -69.98895264]
[318.09707642 -56.02511215]
[302.47338867 -53.53297806]
[290.70837402 -44.22790909]
[278.94332886 -34.92284393]
[267.17831421 -25.61777496]
[255.41329956 -16.31270790]
[243.64826965 -7.00764132]
[238.05439758 9.62984371]
[219.80790710 12.13899899]
[208.17514038 21.60888100]
[196.54237366 31.07876396]
[184.90960693 40.54864502]
[173.27682495 50.01852798]
[182.12748718 66.49301147]
[187.32730103 84.45698547]
[188.64512634 103.11190796]
[203.53770447 104.90381622]
[218.43028259 106.69573212]
[233.33512878 108.38269806]
[248.25148010 109.96463013]
[263.16781616 111.54656982]
[278.08416748 113.12850952]
[293.00051880 114.71044159]
[309.38897705 110.36825562]
[318.09826660 124.91421509]
[306.53173828 137.30984497]
[291.41857910 129.62678528]
[276.50222778 128.04486084]
[261.58587646 126.46292114]
[246.66954041 124.88098145]
[231.75318909 123.29904175]
[224.77632141 125.71725464]
[216.63838196 121.58831024]
[201.74578857 119.79640198]
[186.85321045 118.00448608]
[184.01629639 128.44123840]
[179.93025208 138.45512390]
[174.65582275 147.89727783]
[186.55076599 157.03569031]
[198.44569397 166.17408752]
[210.34063721 175.31250000]
[225.97639465 173.01057434]
[238.61021423 182.50593567]
[240.74670410 198.16514587]
[231.11830139 210.69787598]
[215.43737793 212.66868591]
[203.00714111 202.90832520]
[201.20223999 187.20742798]
[189.30729675 178.06903076]
[177.41235352 168.93061829]
[165.51742554 159.79222107]
[150.75758362 172.74137878]
[133.51051331 182.12603760]
[114.62135315 187.48632812]
[95.01570129 188.55957031]
[92.90950775 203.41096497]
[90.80330658 218.26235962]
[88.69711304 233.11375427]
[86.59091949 247.96514893]
[84.48471832 262.81655884]
[92.90429688 250.40242004]
[103.91648102 240.21752930]
[116.94907379 232.79112244]
[131.32489014 228.50906372]
[146.29693604 227.59387207]
[161.08726501 230.09307861]
[174.92736816 235.87683105]
[187.09808350 244.64459229]
[196.96701050 255.94079590]
[204.02134705 269.17849731]
[207.89456177 283.66979980]
[208.38537598 298.66177368]
[205.46830750 313.37539673]
[199.29492188 327.04614258]
[190.18598938 338.96365356]
[178.61482239 348.50872803]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 25]
[10 24]
[11 23]
[12 22]
[13 21]
[14 20]
[15 19]
[27 206]
[28 205]
[29 204]
[30 203]
[31 202]
[32 201]
[40 63]
[41 62]
[42 61]
[43 60]
[44 59]
[46 57]
[47 56]
[48 55]
[68 117]
[69 116]
[70 115]
[72 113]
[73 112]
[74 111]
[75 110]
[77 108]
[78 107]
[79 106]
[87 98]
[88 97]
[89 96]
[90 95]
[127 159]
[128 158]
[129 157]
[130 156]
[131 155]
[134 153]
[135 152]
[136 151]
[137 150]
[138 149]
[139 148]
[141 146]
[162 181]
[163 180]
[164 179]
[165 177]
[166 176]
[167 175]
[168 174]
[169 173]
[184 197]
[185 196]
[186 195]
[187 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
