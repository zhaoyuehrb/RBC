%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 11:17:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAAGCUCCUUUUGCUGACUUUGACUGUGCUGCUGCUCUUAUCCCAGCUGACUCCAGGUGGCACCCAAAGAUGCUGGAAUCUUUAUGGCAAAUGCCGUUACAGAUGCUCCAAGAAGGAAAGAGUCUAUGUUUACUGCAUAAAUAAUAAAAUGUGCUGCGUGAAGCCCAAGUACCAGCCAAAAGAAAGGUGGUGGCCAUUUUAA\
) } def
/len { sequence length } bind def

/coor [
[254.99435425 224.92665100]
[238.44738770 222.98587036]
[222.96282959 216.80657959]
[209.60733032 206.80798340]
[199.30253601 193.67253113]
[192.76158142 178.29945374]
[190.43960571 161.74313354]
[192.50219727 145.14082336]
[178.54710388 139.64033508]
[164.59201050 134.13984680]
[150.63691711 128.63935852]
[136.68182373 123.13887024]
[122.72673035 117.63838196]
[108.77163696 112.13789368]
[84.69465637 118.28785706]
[69.96903229 121.14372253]
[63.76582336 133.10247803]
[51.97901535 139.21446228]
[39.01639175 137.44653320]
[29.58185768 128.66642761]
[14.81419849 131.29629517]
[0.04653892 133.92616272]
[-14.72112083 136.55604553]
[-29.48878098 139.18591309]
[-35.18996429 148.45605469]
[-44.85404587 152.96298218]
[-55.18557739 151.43638611]
[-62.80564117 144.61975098]
[-77.64695740 146.79583740]
[-92.48827362 148.97192383]
[-107.32958984 151.14801025]
[-122.17090607 153.32409668]
[-137.01222229 155.50016785]
[-151.85353088 157.67625427]
[-166.69485474 159.85234070]
[-181.37498474 162.93353271]
[-195.83879089 166.90824890]
[-210.30259705 170.88298035]
[-215.64456177 185.45153809]
[-228.54823303 194.06983948]
[-244.05186462 193.42396545]
[-256.19400024 183.76228333]
[-260.30572510 168.79988098]
[-254.80603027 154.29013062]
[-241.80963135 145.81231689]
[-226.31391907 146.62632751]
[-214.27731323 156.41917419]
[-199.81350708 152.44445801]
[-185.34970093 148.46972656]
[-198.83641052 141.90400696]
[-205.99269104 128.72114563]
[-204.15129089 113.83460236]
[-193.99853516 102.79280090]
[-179.31848145 99.71118164]
[-165.58262634 105.73831177]
[-157.91052246 118.62779236]
[-159.16165161 133.57551575]
[-168.87094116 145.01103210]
[-154.02961731 142.83494568]
[-139.18830872 140.65885925]
[-124.34699249 138.48277283]
[-109.50567627 136.30668640]
[-94.66436005 134.13059998]
[-79.82304382 131.95452881]
[-64.98172760 129.77844238]
[-50.73936081 116.70419312]
[-32.11865234 124.41825104]
[-17.35099220 121.78838348]
[-2.58333325 119.15850830]
[12.18432617 116.52863312]
[26.95198631 113.89876556]
[35.97433090 99.70848846]
[52.79894257 96.36609650]
[67.11316681 106.41809845]
[81.83879089 103.56223297]
[89.79840851 90.84828186]
[85.93462372 76.35444641]
[82.07084656 61.86061478]
[78.20706940 47.36678314]
[74.12163544 32.93386078]
[69.81550598 18.56523895]
[65.50938416 4.19661856]
[61.20325470 -10.17200279]
[45.65521622 -18.18438339]
[40.80566788 -34.63798523]
[49.18623734 -49.21648788]
[44.66042709 -63.51743317]
[40.13461685 -77.81838226]
[35.60881042 -92.11932373]
[31.08300018 -106.42027283]
[18.62195969 -117.08115387]
[21.88963509 -133.15144348]
[37.52452469 -138.09941101]
[49.44279099 -126.83499908]
[45.38394547 -110.94608307]
[49.90975571 -96.64513397]
[54.43556595 -82.34419250]
[58.96137238 -68.04324341]
[63.48718262 -53.74229813]
[75.64350891 -49.46158600]
[83.22668457 -38.80088425]
[83.28456116 -25.52375793]
[75.57187653 -14.47812939]
[79.87800598 -0.10950800]
[84.18412781 14.25911331]
[88.49025726 28.62773514]
[92.19918823 31.64339066]
[94.05027771 37.02285004]
[92.70090485 43.50300217]
[96.56468201 57.99683762]
[100.42845917 72.49066925]
[104.29223633 86.98450470]
[114.27212524 98.18280029]
[128.22721863 103.68328857]
[142.18231201 109.18377686]
[156.13740540 114.68427277]
[170.09249878 120.18476105]
[184.04759216 125.68524933]
[198.00268555 131.18572998]
[206.86297607 118.69802094]
[218.43324280 108.68948364]
[232.04301453 101.73174286]
[246.90562439 98.21985626]
[262.16369629 98.34992981]
[276.93859863 102.10814667]
[290.38095093 109.27195740]
[301.71960449 119.42321014]
[314.05432129 110.88769531]
[326.38903809 102.35218048]
[338.72372437 93.81665802]
[351.05844116 85.28114319]
[355.33474731 69.81851196]
[370.14608765 63.65384293]
[384.13052368 71.51613617]
[386.56033325 87.37411499]
[375.57162476 99.06289673]
[359.59396362 97.61584473]
[347.25924683 106.15136719]
[334.92453003 114.68688202]
[322.58984375 123.22239685]
[310.25512695 131.75791931]
[314.46200562 141.65882874]
[316.93414307 152.12852478]
[317.60034180 162.86546326]
[316.44140625 173.56045532]
[313.49072266 183.90547180]
[308.83325195 193.60256958]
[320.76263428 202.69595337]
[332.69201660 211.78933716]
[344.62142944 220.88272095]
[356.55081177 229.97610474]
[368.48022461 239.06947327]
[380.40960693 248.16285706]
[389.13616943 250.87840271]
[392.45071411 257.48812866]
[404.23934937 266.76324463]
[416.02798462 276.03839111]
[429.47048950 282.69418335]
[443.99349976 286.44677734]
[458.48934937 279.57290649]
[472.83767700 286.74960327]
[476.03170776 302.47146606]
[465.62121582 314.67810059]
[449.59225464 314.00555420]
[440.24087524 300.96978760]
[425.71786499 297.21719360]
[421.64111328 303.51242065]
[434.23159790 311.66595459]
[446.82192993 319.81967163]
[438.66799927 332.40988159]
[426.07809448 324.25640869]
[413.48760986 316.10290527]
[409.41085815 322.39816284]
[418.77603149 334.11538696]
[428.14120483 345.83261108]
[437.50637817 357.54983521]
[445.31271362 362.30249023]
[446.92364502 369.51913452]
[456.10815430 381.37850952]
[471.61325073 380.76840210]
[484.49697876 389.41644287]
[489.80532837 403.99728394]
[485.49713135 418.90429688]
[473.22894287 428.40542603]
[457.71817017 428.84729004]
[444.92898560 420.05999756]
[439.77911377 405.42242432]
[444.24880981 390.56301880]
[435.06427002 378.70364380]
[425.78915405 366.91500854]
[416.42398071 355.19778442]
[407.05880737 343.48056030]
[397.69360352 331.76333618]
[406.75286865 287.82702637]
[394.96423340 278.55191040]
[383.17559814 269.27676392]
[371.31622314 260.09225464]
[359.38684082 250.99887085]
[347.45742798 241.90548706]
[335.52804565 232.81210327]
[323.59866333 223.71873474]
[311.66925049 214.62535095]
[299.73986816 205.53196716]
[286.72970581 215.88313293]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 119]
[9 118]
[10 117]
[11 116]
[12 115]
[13 114]
[14 113]
[15 75]
[16 74]
[20 71]
[21 70]
[22 69]
[23 68]
[24 67]
[28 65]
[29 64]
[30 63]
[31 62]
[32 61]
[33 60]
[34 59]
[35 58]
[36 49]
[37 48]
[38 47]
[76 112]
[77 111]
[78 110]
[79 109]
[80 106]
[81 105]
[82 104]
[83 103]
[86 99]
[87 98]
[88 97]
[89 96]
[90 95]
[127 141]
[128 140]
[129 139]
[130 138]
[131 137]
[147 203]
[148 202]
[149 201]
[150 200]
[151 199]
[152 198]
[153 197]
[155 196]
[156 195]
[157 194]
[158 166]
[159 165]
[173 193]
[174 192]
[175 191]
[176 190]
[178 189]
[179 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
