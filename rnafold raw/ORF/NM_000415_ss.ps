%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 18:55:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGGCAUCCUGAAGCUGCAAGUAUUUCUCAUUGUGCUCUCUGUUGCAUUGAACCAUCUGAAAGCUACACCCAUUGAAAGUCAUCAGGUGGAAAAGCGGAAAUGCAACACUGCCACAUGUGCAACGCAGCGCCUGGCAAAUUUUUUAGUUCAUUCCAGCAACAACUUUGGUGCCAUUCUCUCAUCUACCAACGUGGGAUCCAAUACAUAUGGCAAGAGGAAUGCAGUAGAGGUUUUAAAGAGAGAGCCACUGAAU\
UACUUGCCCCUUUAG\
) } def
/len { sequence length } bind def

/coor [
[57.49196625 571.40661621]
[55.94031525 586.68695068]
[46.94338226 599.13482666]
[32.92129135 605.40191650]
[17.64591599 603.80242920]
[5.22625780 594.76647949]
[-0.99685907 580.72485352]
[0.65055275 565.45452881]
[9.72534752 553.06329346]
[23.78645134 546.88421631]
[25.34861374 531.96575928]
[26.91077614 517.04730225]
[28.47293854 502.12890625]
[30.03510094 487.21044922]
[31.59726334 472.29202271]
[22.04899597 460.91809082]
[23.42073250 445.76644897]
[35.41549301 435.82846069]
[36.97765732 420.91003418]
[38.53981781 405.99157715]
[40.10198212 391.07315063]
[41.66414261 376.15472412]
[43.22630310 361.23629761]
[44.78846741 346.31784058]
[38.41871262 332.85400391]
[47.55114365 319.93466187]
[49.11330795 305.01623535]
[50.67546844 290.09780884]
[41.77111053 283.03231812]
[37.32201385 272.44229126]
[38.53349304 260.89944458]
[45.22078323 251.26734924]
[55.82643127 245.99125671]
[57.73402786 231.11305237]
[55.47577286 224.10432434]
[59.75094604 216.07380676]
[61.83088684 201.21870422]
[63.91083145 186.36361694]
[65.99077606 171.50852966]
[68.07071686 156.65342712]
[70.15065765 141.79833984]
[72.23060608 126.94323730]
[63.44198608 114.78757477]
[48.68348312 112.10677338]
[33.92498398 109.42597961]
[19.16648483 106.74517822]
[4.40798426 104.06438446]
[-10.35051632 101.38358307]
[-25.10901642 98.70278931]
[-39.86751556 96.02198792]
[-54.33774185 111.81031799]
[-75.29106903 115.52311707]
[-94.06259155 105.79368591]
[-102.99203491 86.77950287]
[-117.90116882 85.13088989]
[-132.81028748 83.48228455]
[-147.71942139 81.83367920]
[-162.62855530 80.18507385]
[-177.53767395 78.53646088]
[-192.44680786 76.88785553]
[-207.35592651 75.23925018]
[-219.61900330 84.84419250]
[-234.71549988 82.95988464]
[-243.79676819 71.20973206]
[-258.70590210 69.56112671]
[-273.61502075 67.91251373]
[-281.66497803 80.88019562]
[-294.54882812 89.06367493]
[-309.70846558 90.83811188]
[-324.13391113 85.85119629]
[-334.96099854 75.09307861]
[-340.03997803 60.69980240]
[-338.36245728 45.52914810]
[-330.26147461 32.59327316]
[-317.34552002 24.46059418]
[-302.17901611 22.74586868]
[-287.77331543 27.78955078]
[-276.98867798 38.59021759]
[-271.96640015 53.00338745]
[-257.05728149 54.65199661]
[-242.14816284 56.30060196]
[-230.71907043 46.81842422]
[-215.57562256 48.27795792]
[-205.70732117 60.33012390]
[-190.79820251 61.97872925]
[-175.88906860 63.62733841]
[-160.97994995 65.27594757]
[-146.07081604 66.92455292]
[-131.16168213 68.57315826]
[-116.25255585 70.22176361]
[-101.34342957 71.87036896]
[-97.28086853 63.88063431]
[-91.18331146 57.27916336]
[-83.50077057 52.57187271]
[-74.80534363 50.12419891]
[-65.74863434 50.13275909]
[-57.01290512 52.60960388]
[-49.25969315 57.38037109]
[-43.07971573 64.09648895]
[-38.94786072 72.26062012]
[-37.18671799 81.26348877]
[-22.42821884 83.94429016]
[-7.66971827 86.62508392]
[7.08878183 89.30588531]
[21.84728241 91.98667908]
[36.60578156 94.66748047]
[51.36428070 97.34827423]
[66.12277985 100.02907562]
[71.22255707 94.52977753]
[81.42211914 83.53118134]
[86.52189636 78.03188324]
[82.73767090 63.51707840]
[78.95345306 49.00226974]
[75.16923523 34.48745728]
[71.38501740 19.97264862]
[61.73871613 15.04592705]
[56.48686600 5.82405090]
[57.14375305 -4.54854727]
[63.25409317 -12.68362522]
[59.80739212 -27.28226471]
[56.36068726 -41.88090134]
[52.91398621 -56.47954178]
[39.33975220 -64.57372284]
[35.54582214 -79.91587067]
[43.78306198 -93.40377045]
[59.16447067 -97.03528595]
[72.56452179 -88.65589905]
[76.03321075 -73.23695374]
[67.51262665 -59.92624283]
[70.95932770 -45.32760620]
[74.40602875 -30.72896767]
[77.85272980 -16.13032913]
[92.09320831 -3.01951504]
[85.89982605 16.18843079]
[89.68404388 30.70323944]
[93.46826172 45.21804810]
[97.25248718 59.73285675]
[101.03670502 74.24766541]
[108.51202393 74.85561371]
[109.72791290 59.90497208]
[110.94379425 44.95433426]
[107.48019409 30.35969353]
[120.29022217 22.55564308]
[131.67082214 32.32713699]
[125.89443207 46.17021942]
[124.67855072 61.12085724]
[123.46266174 76.07149506]
[130.93798828 76.67944336]
[137.01783752 62.96684647]
[143.09770203 49.25424957]
[137.17802429 34.60048294]
[143.43077087 20.08570862]
[158.14630127 14.32128525]
[172.59416199 20.72714424]
[178.20268250 35.50280380]
[171.64442444 49.88212204]
[156.81030273 55.33411026]
[150.73043823 69.04670715]
[144.65057373 82.75930023]
[149.11505127 88.78578949]
[157.81892395 76.56929779]
[172.12713623 81.07210541]
[172.26617432 96.07145691]
[158.04399109 100.83875275]
[162.50845337 106.86523438]
[177.39747620 105.04390717]
[192.28648376 103.22257996]
[207.17550659 101.40125275]
[222.06451416 99.57992554]
[234.82310486 90.22422791]
[248.39569092 96.35890961]
[263.28469849 94.53758240]
[278.17370605 92.71625519]
[286.27734375 88.58136749]
[293.24575806 90.96114349]
[308.15487671 89.31253815]
[323.06402588 87.66393280]
[337.97314453 86.01532745]
[346.12417603 81.97465515]
[353.06451416 84.43505096]
[367.99176025 82.95938873]
[382.91900635 81.48372650]
[387.73910522 69.99431610]
[396.92367554 61.68204498]
[408.69778442 58.07082748]
[420.82073975 59.78399658]
[431.01245117 66.43762970]
[437.38229370 76.72446442]
[452.33975220 75.59525299]
[467.29718018 74.46604919]
[476.26165771 65.22516632]
[488.71893311 64.57412720]
[497.98281860 72.31758881]
[512.95233154 71.36184692]
[527.92187500 70.40610504]
[534.66619873 56.60721588]
[547.41534424 48.04251480]
[562.73992920 47.01586533]
[576.51757812 53.80343246]
[585.04229736 66.57939148]
[586.02087402 81.90707397]
[579.19018555 95.66341400]
[566.38757324 104.14802551]
[551.05688477 105.07858276]
[537.32202148 98.20477295]
[528.87756348 85.37562561]
[513.90808105 86.33136749]
[498.93853760 87.28710938]
[484.85351562 97.78065491]
[468.42639160 89.42348480]
[453.46896362 90.55268860]
[438.51150513 91.68190002]
[429.91595459 107.14099884]
[413.60629272 114.38446808]
[396.06637573 110.32508850]
[384.39465332 96.41095734]
[369.46740723 97.88662720]
[354.54019165 99.36228943]
[339.62176514 100.92445374]
[324.71261597 102.57305908]
[309.80349731 104.22166443]
[294.89437866 105.87027740]
[279.99505615 107.60527039]
[265.10601807 109.42659760]
[250.21701050 111.24792480]
[238.52339172 120.47335052]
[223.88584900 114.46894073]
[208.99682617 116.29026794]
[194.10781860 118.11159515]
[179.21879578 119.93292236]
[164.32978821 121.75424957]
[167.29884338 136.45747375]
[164.71325684 151.23295593]
[156.92767334 164.05421448]
[145.00988770 173.16278076]
[130.59442139 177.30943298]
[115.65841675 175.92541504]
[102.25033569 169.20057678]
[92.20914459 158.05722046]
[86.91199493 144.02368164]
[87.08570099 129.02317810]
[85.00575256 143.87828064]
[82.92581177 158.73336792]
[80.84587097 173.58847046]
[78.76592255 188.44355774]
[76.68598175 203.29866028]
[74.60604095 218.15374756]
[72.61223602 233.02064514]
[70.70463562 247.89886475]
[82.85154724 262.47360229]
[80.49071503 280.97601318]
[65.59390259 291.65994263]
[64.03173828 306.57839966]
[62.46957779 321.49682617]
[68.72760010 336.02774048]
[59.70690155 347.88000488]
[58.14473724 362.79846191]
[56.58257675 377.71688843]
[55.02041245 392.63531494]
[53.45825195 407.55374146]
[51.89608765 422.47219849]
[50.33392715 437.39062500]
[60.00978851 449.59780884]
[58.21301270 464.70495605]
[46.51569748 473.85418701]
[44.95353317 488.77261353]
[43.39137268 503.69107056]
[41.82920837 518.60949707]
[40.26704788 533.52789307]
[38.70488358 548.44635010]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 270]
[11 269]
[12 268]
[13 267]
[14 266]
[15 265]
[18 262]
[19 261]
[20 260]
[21 259]
[22 258]
[23 257]
[24 256]
[26 254]
[27 253]
[28 252]
[33 249]
[34 248]
[36 247]
[37 246]
[38 245]
[39 244]
[40 243]
[41 242]
[42 241]
[43 108]
[44 107]
[45 106]
[46 105]
[47 104]
[48 103]
[49 102]
[50 101]
[54 91]
[55 90]
[56 89]
[57 88]
[58 87]
[59 86]
[60 85]
[61 84]
[64 81]
[65 80]
[66 79]
[111 138]
[112 137]
[113 136]
[114 135]
[115 134]
[119 132]
[120 131]
[121 130]
[122 129]
[148 159]
[149 158]
[150 157]
[165 231]
[166 230]
[167 229]
[168 228]
[169 227]
[171 225]
[172 224]
[173 223]
[175 222]
[176 221]
[177 220]
[178 219]
[180 218]
[181 217]
[182 216]
[188 212]
[189 211]
[190 210]
[193 208]
[194 207]
[195 206]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
