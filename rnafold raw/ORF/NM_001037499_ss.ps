%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 14:09:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAGGAUCUUUUACUAUCUCCAUUUUCUGUGUUAUGUGACCUUCAUUCUACCAGCCACAUGUACCUUGGUGAAUGCUGAUCGUUGCACCAAACGUUACGGUCGUUGUAAAAGAGACUGUCUUGAGAGUGAAAAGCAAAUAGACAUAUGUUCCUUACCAAGAAAAAUUUGCUGCACUGAGAAAUUGUAUGAAGAAGAUGAUAUGUUUUGA\
) } def
/len { sequence length } bind def

/coor [
[165.45924377 659.59143066]
[160.80140686 645.21099854]
[160.59086609 630.09655762]
[164.84634399 615.59197998]
[173.18943787 602.98706055]
[184.87831116 593.40258789]
[198.87356567 587.69085693]
[197.53532410 572.75067139]
[196.19709778 557.81048584]
[194.85885620 542.87030029]
[193.52062988 527.93011475]
[192.18238831 512.98992920]
[190.84416199 498.04974365]
[182.00224304 486.06350708]
[188.47749329 471.62808228]
[175.62107849 464.15475464]
[169.55877686 450.38116455]
[172.80728149 435.50497437]
[184.32560730 425.27587891]
[172.28118896 419.51617432]
[164.59390259 408.46853638]
[163.35949707 394.95761108]
[169.00688171 382.50265503]
[180.15838623 374.40112305]
[179.04273987 359.44265747]
[177.92709351 344.48422241]
[176.81144714 329.52575684]
[175.69578552 314.56732178]
[167.03330994 302.45077515]
[173.72277832 288.11334229]
[172.60711670 273.15487671]
[171.49147034 258.19644165]
[170.37582397 243.23797607]
[164.76913452 257.15075684]
[152.76040649 266.13909912]
[137.83142090 267.59701538]
[124.31064606 261.10174561]
[116.11823273 248.53652954]
[115.62947845 233.54449463]
[122.98607635 220.47238159]
[136.05509949 213.11026001]
[151.04733276 213.59268188]
[163.61437988 221.77795410]
[155.95378113 208.88162231]
[148.29318237 195.98530579]
[140.63258362 183.08897400]
[132.97200012 170.19264221]
[125.31139374 157.29632568]
[117.65079498 144.39999390]
[109.99020386 131.50366211]
[85.95146179 139.00723267]
[58.07723236 127.00946045]
[41.90811539 95.31716156]
[28.06063080 89.55112457]
[14.21314526 83.78509521]
[0.36565998 78.01905823]
[-15.68382359 84.97846985]
[-31.48971748 78.30848694]
[-37.46115875 62.58650970]
[-51.39295959 57.02728271]
[-65.32475281 51.46805573]
[-78.37614441 59.86096191]
[-93.86621857 58.94594193]
[-105.83872986 49.07483673]
[-109.68999481 34.04329300]
[-103.93913269 19.63124084]
[-90.79746246 11.38041210]
[-75.31822968 12.46341705]
[-63.45351028 22.46381950]
[-59.76552963 37.53625870]
[-45.83373260 43.09548569]
[-31.90193367 48.65470886]
[-20.89076805 41.96264648]
[-7.84091282 42.84772491]
[2.46814990 51.21036148]
[6.13169336 64.17156982]
[19.97917938 69.93760681]
[33.82666397 75.70364380]
[47.67414856 81.46967316]
[52.67323685 75.87868500]
[62.67140961 64.69670868]
[67.67049408 59.10572433]
[60.39726639 45.98703003]
[53.12403488 32.86833572]
[45.85080719 19.74964333]
[30.59123421 15.63612366]
[22.78231239 1.89580786]
[27.05693436 -13.31941986]
[40.87904358 -20.98263359]
[56.04822540 -16.54738617]
[63.56487656 -2.64503050]
[58.96950150 12.47641277]
[66.24272919 25.59510612]
[73.51596069 38.71380234]
[80.78919220 51.83249664]
[88.13819122 50.33510971]
[102.83619690 47.34033203]
[110.18519592 45.84294510]
[111.74571991 30.92434120]
[113.30624390 16.00573730]
[114.86676788 1.08713210]
[116.42729187 -13.83147240]
[117.98780823 -28.75007820]
[111.72819519 -43.28031540]
[120.74758911 -55.13357544]
[122.30811310 -70.05217743]
[113.36334991 -83.37023926]
[118.33605194 -98.62316895]
[133.41159058 -104.11022186]
[147.02529907 -95.62220001]
[148.73390198 -79.67039490]
[137.22671509 -68.49165344]
[135.66619873 -53.57305145]
[142.03742981 -40.10989380]
[132.90641785 -27.18955421]
[131.34588623 -12.27094936]
[129.78536987 2.64765501]
[128.22485352 17.56625938]
[126.66432190 32.48486328]
[125.10379791 47.40346909]
[139.34005737 64.13581085]
[145.21775818 83.34327698]
[143.11801147 101.43750763]
[134.79118347 115.51992035]
[122.88652802 123.84306335]
[130.54711914 136.73939514]
[138.20771790 149.63572693]
[145.86831665 162.53204346]
[153.52891541 175.42837524]
[161.18951416 188.32470703]
[168.85011292 201.22102356]
[176.51071167 214.11735535]
[184.24995422 213.15885925]
[192.31367493 215.54801941]
[207.13073730 213.21252441]
[221.94781494 210.87704468]
[236.76487732 208.54154968]
[251.58193970 206.20606995]
[266.39901733 203.87057495]
[281.21609497 201.53509521]
[283.63662720 186.61535645]
[290.54083252 173.19245911]
[301.24139404 162.57518005]
[314.68145752 155.79435730]
[329.53918457 153.50285339]
[344.35754395 155.91262817]
[357.68737793 162.77525330]
[368.22897339 173.40748596]
[374.95895386 186.75920105]
[389.77603149 184.42372131]
[400.34020996 172.34986877]
[416.35934448 173.22526550]
[425.54498291 186.37837219]
[420.85061646 201.71925354]
[405.87741089 207.47969055]
[392.11151123 199.24078369]
[377.29446411 201.57627869]
[374.99777222 216.35078430]
[368.23773193 229.71012878]
[357.66513062 240.34030151]
[344.30648804 247.19137573]
[329.46426392 249.58120728]
[314.59005737 247.26333618]
[301.14242554 240.45231628]
[290.44406128 229.80395508]
[283.55157471 216.35215759]
[268.73449707 218.68765259]
[253.91743469 221.02313232]
[239.10037231 223.35862732]
[224.28329468 225.69410706]
[209.46623230 228.02960205]
[194.64915466 230.36508179]
[185.33427429 242.12232971]
[186.44992065 257.08078003]
[187.56558228 272.03924561]
[188.68122864 286.99768066]
[197.42350769 300.18417358]
[190.65425110 313.45166016]
[191.76989746 328.41012573]
[192.88554382 343.36856079]
[194.00119019 358.32702637]
[195.11683655 373.28549194]
[209.62211609 381.98565674]
[216.01995850 397.46365356]
[211.97206116 413.54397583]
[199.26579285 423.93762207]
[212.41865540 431.95687866]
[218.25924683 446.01892090]
[214.74128723 460.65066528]
[203.41767883 470.28985596]
[212.35531616 483.34469604]
[205.78434753 496.71151733]
[207.12257385 511.65170288]
[208.46081543 526.59185791]
[209.79904175 541.53204346]
[211.13728333 556.47222900]
[212.47550964 571.41241455]
[213.81375122 586.35260010]
[228.60131836 589.48620605]
[241.80744934 596.84075928]
[252.25787354 607.76226807]
[259.02334595 621.27966309]
[261.50231934 636.19097900]
[259.47430420 651.17022705]
[253.11965942 664.88555908]
[243.00344849 676.11737061]
[230.02517700 683.86694336]
[215.33886719 687.44519043]
[200.25042725 686.53393555]
[186.10150146 681.21423340]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 198]
[8 197]
[9 196]
[10 195]
[11 194]
[12 193]
[13 192]
[15 190]
[19 186]
[24 182]
[25 181]
[26 180]
[27 179]
[28 178]
[30 176]
[31 175]
[32 174]
[33 173]
[43 132]
[44 131]
[45 130]
[46 129]
[47 128]
[48 127]
[49 126]
[50 125]
[53 79]
[54 78]
[55 77]
[56 76]
[59 72]
[60 71]
[61 70]
[82 95]
[83 94]
[84 93]
[85 92]
[98 120]
[99 119]
[100 118]
[101 117]
[102 116]
[103 115]
[105 113]
[106 112]
[134 172]
[135 171]
[136 170]
[137 169]
[138 168]
[139 167]
[140 166]
[149 157]
[150 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
