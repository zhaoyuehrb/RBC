%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 14:46:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGACAGAAGGCGGAUGGCUCUGCGGCCUGGCUCCCGCAGACCGACCGCCUUCUUCUUCCAUUCGAGAUGGCUCGUACCGAACCUCCUUGCCUUCUUCCUGGGUCUCUCGGGGGCUGGACCAAUACAUCUGCCGAUGCCCUGGCCGAAUGGCAGGCGACAUCGGGUCCUGGACCCCCACACGCAGCUCAGUACCCACGAGGCCCCAGGCCGCUGGAAGCCUGUAGCUCCGCGGACGAUGAAAGCCUGCCCGCAG\
GUUCUCCUGGAGUGGUGA\
) } def
/len { sequence length } bind def

/coor [
[17.62057304 235.25973511]
[10.66508675 236.55715942]
[3.75443864 235.39537048]
[-5.90200663 246.87373352]
[-15.55845165 258.35211182]
[-18.67150688 266.89901733]
[-25.39200974 269.90591431]
[-35.17942429 281.27279663]
[-44.96683884 292.63970947]
[-54.75425339 304.00662231]
[-64.54167175 315.37353516]
[-74.32908630 326.74041748]
[-84.11650085 338.10733032]
[-93.90391541 349.47424316]
[-103.69132996 360.84115601]
[-106.83258820 376.34738159]
[-121.00033569 380.94348145]
[-130.78775024 392.31036377]
[-140.57516479 403.67727661]
[-143.78601074 412.18792725]
[-150.54054260 415.11758423]
[-160.45764160 426.37152100]
[-170.37474060 437.62545776]
[-180.29183960 448.87939453]
[-190.20893860 460.13333130]
[-200.12603760 471.38726807]
[-210.04313660 482.64120483]
[-206.52342224 497.75384521]
[-212.58990479 512.03588867]
[-225.90986633 519.99566650]
[-241.36154175 518.57244873]
[-253.00341797 508.31350708]
[-256.35897827 493.16357422]
[-250.13792419 478.94815063]
[-236.73239136 471.13336182]
[-221.29707336 472.72412109]
[-211.37997437 461.47018433]
[-201.46287537 450.21624756]
[-191.54577637 438.96228027]
[-181.62867737 427.70834351]
[-171.71157837 416.45440674]
[-161.79447937 405.20046997]
[-151.94206238 393.88986206]
[-142.15464783 382.52294922]
[-132.36723328 371.15606689]
[-129.92604065 356.46286011]
[-115.05823517 351.05374146]
[-105.27082062 339.68682861]
[-95.48340607 328.31991577]
[-85.69599152 316.95300293]
[-75.90857697 305.58612061]
[-66.12116241 294.21920776]
[-56.33374405 282.85229492]
[-46.54632950 271.48538208]
[-36.75891495 260.11849976]
[-27.03682518 248.69566345]
[-17.38038063 237.21728516]
[-7.72393560 225.73892212]
[-6.08126068 203.34831238]
[15.89476967 195.90489197]
[24.87767410 183.89208984]
[33.86058044 171.87928772]
[42.84348679 159.86648560]
[51.82639313 147.85368347]
[60.80929565 135.84088135]
[55.58931351 121.77845764]
[40.94384003 118.53652191]
[26.29836845 115.29459381]
[13.07375050 123.52546692]
[-1.73265970 120.02906036]
[-9.49803925 107.37068176]
[-24.14351273 104.12875366]
[-39.28976822 108.70056915]
[-50.04397964 98.39540863]
[-64.68945312 95.15348053]
[-79.33492279 91.91155243]
[-96.10648346 94.39169312]
[-103.13253021 78.96214294]
[-90.25097656 67.93935394]
[-76.09299469 77.26607513]
[-61.44752121 80.50801086]
[-46.80204773 83.74993896]
[-32.70333481 78.94623566]
[-20.90158272 89.48327637]
[-6.25610924 92.72521210]
[6.12615538 84.52672577]
[21.02493095 87.60587311]
[29.54029846 100.64912415]
[44.18577194 103.89105225]
[58.83124542 107.13298035]
[61.07101440 95.50804901]
[66.31494904 85.70577240]
[73.73103333 78.41808319]
[82.35691071 74.02201080]
[77.13692474 59.95958710]
[71.91694641 45.89716339]
[57.82904053 39.25120544]
[52.73556137 24.91554642]
[59.15828323 11.52584076]
[53.93830109 -2.53658342]
[41.88217545 -12.78160381]
[44.70677948 -27.40592957]
[39.48679733 -41.46835327]
[34.26681519 -55.53077698]
[29.04683304 -69.59320068]
[18.95688057 -73.52750397]
[12.80742931 -82.17461395]
[12.41978455 -92.55904388]
[17.68108940 -101.26535797]
[12.78492165 -115.44377899]
[7.88875294 -129.62219238]
[2.99258471 -143.80061340]
[-8.82545757 -154.31938171]
[-5.66627026 -168.87509155]
[-10.56243896 -183.05351257]
[-22.38048172 -193.57228088]
[-19.22129440 -208.12799072]
[-24.11746216 -222.30641174]
[-38.99925232 -226.70094299]
[-48.42911911 -239.02398682]
[-48.78108597 -254.53706360]
[-39.91981125 -267.27508545]
[-25.25263977 -272.34005737]
[-10.41939545 -267.78433228]
[-1.12376583 -255.35972595]
[-0.94010866 -239.84373474]
[-9.93904400 -227.20257568]
[-5.04287577 -213.02415466]
[6.42496014 -203.51953125]
[3.61597943 -187.94967651]
[8.51214790 -173.77127075]
[19.97998428 -164.26663208]
[17.17100334 -148.69677734]
[22.06717110 -134.51837158]
[26.96333885 -120.33995056]
[31.85950661 -106.16152954]
[47.34505844 -94.54633331]
[43.10925674 -74.81318665]
[48.32923889 -60.75075912]
[53.54922485 -46.68833542]
[58.76920700 -32.62591171]
[70.45195770 -23.38673019]
[68.00072479 -7.75656605]
[73.22071075 6.30585861]
[86.82451630 12.26170254]
[92.31864166 26.44863892]
[85.97937012 40.67718124]
[91.19934845 54.73960495]
[96.41933441 68.80203247]
[116.42325592 73.23413849]
[129.43574524 89.06055450]
[144.33726501 87.34447479]
[159.23876953 85.62838745]
[174.14028931 83.91230774]
[189.04179382 82.19622040]
[203.94331360 80.48014069]
[218.84481812 78.76405334]
[229.48457336 64.85581970]
[246.55703735 63.00106812]
[259.41815186 73.86363983]
[274.29901123 71.97682190]
[289.17987061 70.08999634]
[304.06072998 68.20317078]
[317.43362427 61.40864182]
[327.73190308 50.50241089]
[338.03015137 39.59617996]
[348.32839966 28.68994522]
[358.62664795 17.78371429]
[365.10482788 2.11624575]
[381.95336914 4.00406742]
[384.80343628 20.71673775]
[369.53289795 28.08197021]
[359.23464966 38.98820114]
[348.93637085 49.89443588]
[338.63812256 60.80066681]
[328.33987427 71.70690155]
[331.15029907 78.66042328]
[342.63986206 69.01728821]
[355.36138916 76.96477509]
[351.73388672 91.51953125]
[336.77117920 92.56746674]
[339.58160400 99.52098083]
[354.56582642 100.20867920]
[369.55004883 100.89638519]
[384.54119873 101.41223145]
[399.53723145 101.75617218]
[414.53329468 102.10011292]
[429.52935791 102.44405365]
[444.52713013 102.70201874]
[459.52615356 102.87400055]
[474.52517700 103.04598236]
[484.45455933 89.33081818]
[500.44763184 84.29984283]
[516.12622070 89.75128174]
[525.36114502 103.34375000]
[540.36114502 103.34375000]
[555.36114502 103.34375000]
[563.90545654 100.22376251]
[570.53283691 103.43073273]
[584.42083740 95.85216522]
[597.05853271 103.73487854]
[612.05755615 103.90686035]
[627.05657959 104.07884216]
[642.05560303 104.25082397]
[657.96301270 98.38648224]
[668.00177002 112.04882050]
[657.65240479 125.47737885]
[641.88360596 119.24983215]
[626.88458252 119.07785034]
[611.88555908 118.90587616]
[596.88659668 118.73389435]
[584.07141113 126.32476044]
[570.36090088 118.42974091]
[555.36114502 118.34375000]
[540.36114502 118.34375000]
[525.36114502 118.34375000]
[518.56402588 129.81066895]
[506.89959717 136.48333740]
[493.35336304 136.53091431]
[481.45385742 129.83430481]
[474.35317993 118.04499817]
[459.35418701 117.87301636]
[444.35516357 117.70103455]
[437.65600586 120.75519562]
[429.18542480 117.44010925]
[414.18936157 117.09616852]
[399.19329834 116.75222778]
[384.19723511 116.40829468]
[380.20962524 118.97452545]
[374.57464600 119.08824921]
[368.86236572 115.88060760]
[353.87814331 115.19290924]
[338.89392090 114.50521088]
[323.35650635 111.39999390]
[312.10119629 103.40721130]
[306.30810547 93.07925415]
[305.94757080 83.08403015]
[291.06671143 84.97085571]
[276.18585205 86.85767365]
[261.30499268 88.74449921]
[254.93008423 99.91725922]
[243.11247253 105.47174072]
[230.05926514 103.18357086]
[220.56089783 93.66556549]
[205.65939331 95.38164520]
[190.75787354 97.09773254]
[175.85636902 98.81381989]
[160.95484924 100.52989960]
[146.05334473 102.24598694]
[131.15182495 103.96206665]
[128.88845825 119.51550293]
[118.67641449 133.46331787]
[101.73072815 141.74626160]
[106.95071411 155.80868530]
[112.17069244 169.87110901]
[117.39067841 183.93353271]
[130.35832214 193.97207642]
[127.88070679 210.18298340]
[112.50659180 215.88986206]
[100.05154419 205.22196960]
[103.32825470 189.15351868]
[98.10826874 175.09109497]
[92.88829041 161.02867126]
[87.66830444 146.96624756]
[72.82209778 144.82379150]
[63.83919144 156.83659363]
[54.85628891 168.84939575]
[45.87338257 180.86219788]
[36.89047623 192.87498474]
[27.90757179 204.88778687]
[30.57788277 211.80488586]
[30.70621300 219.15054321]
[28.32351875 226.02847290]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 58]
[4 57]
[5 56]
[7 55]
[8 54]
[9 53]
[10 52]
[11 51]
[12 50]
[13 49]
[14 48]
[15 47]
[17 45]
[18 44]
[19 43]
[21 42]
[22 41]
[23 40]
[24 39]
[25 38]
[26 37]
[27 36]
[60 270]
[61 269]
[62 268]
[63 267]
[64 266]
[65 265]
[66 90]
[67 89]
[68 88]
[71 85]
[72 84]
[74 82]
[75 81]
[76 80]
[94 149]
[95 148]
[96 147]
[99 144]
[100 143]
[102 141]
[103 140]
[104 139]
[105 138]
[109 136]
[110 135]
[111 134]
[112 133]
[114 131]
[115 130]
[117 128]
[118 127]
[151 250]
[152 249]
[153 248]
[154 247]
[155 246]
[156 245]
[157 244]
[160 240]
[161 239]
[162 238]
[163 237]
[164 176]
[165 175]
[166 174]
[167 173]
[168 172]
[182 233]
[183 232]
[184 231]
[185 228]
[186 227]
[187 226]
[188 225]
[189 223]
[190 222]
[191 221]
[195 216]
[196 215]
[197 214]
[199 213]
[201 211]
[202 210]
[203 209]
[204 208]
[253 264]
[254 263]
[255 262]
[256 261]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
