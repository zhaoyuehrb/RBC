%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sat Sep 12 09:33:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGGACUGUUGACAUUUAGGGAUGUGGCCAUAGAAUUCUCUCUGGAGGAGUGGCAGUGCCUGGACACUGCACAGAAGAAUUUAUAUAGGAAUGUGAUGUUAGAGAACUACAGAAACCUGGCCUUCCUGGGUAUUGCUGUCUCUAAGCCAGACCUCAUCAUCUGUCUGGAGAAAGAAAAAGAGCCCUGGAAUAUGAAGCGAGAUGAGAUGGUGGAUGAACCCCCAGAUGGAGUCUCGCUCUGUCACCCAGGCUGG\
AGUGCAGUGGCGUGA\
) } def
/len { sequence length } bind def

/coor [
[-28.25156212 275.99050903]
[-38.51710129 274.69259644]
[-48.00662613 270.62057495]
[-58.14226151 281.67810059]
[-61.76346588 297.07931519]
[-76.06709290 301.23330688]
[-86.20272064 312.29083252]
[-96.33835602 323.34835815]
[-106.47399139 334.40588379]
[-116.60962677 345.46340942]
[-126.74526215 356.52093506]
[-136.88088989 367.57849121]
[-133.28977966 384.12478638]
[-140.21217346 399.39398193]
[-154.73252869 407.43600464]
[-171.01837158 405.24755859]
[-181.02513123 416.42184448]
[-191.03190613 427.59609985]
[-201.03868103 438.77038574]
[-211.04544067 449.94467163]
[-221.05221558 461.11895752]
[-231.05899048 472.29324341]
[-241.06575012 483.46752930]
[-244.44451904 501.58593750]
[-261.34634399 506.36410522]
[-271.22290039 517.65362549]
[-266.84805298 532.44769287]
[-271.18789673 547.25207520]
[-282.85763550 557.34271240]
[-298.13345337 559.49975586]
[-312.14089966 553.03491211]
[-320.41027832 540.01104736]
[-320.30285645 524.58404541]
[-311.85287476 511.67663574]
[-297.75674438 505.40747070]
[-282.51245117 507.77706909]
[-272.63586426 496.48754883]
[-273.13385010 484.42385864]
[-265.02926636 474.94107056]
[-252.24003601 473.46075439]
[-242.23326111 462.28646851]
[-232.22650146 451.11218262]
[-222.21972656 439.93789673]
[-212.21295166 428.76361084]
[-202.20619202 417.58935547]
[-192.19941711 406.41506958]
[-182.19264221 395.24078369]
[-186.20057678 382.52673340]
[-183.38916016 369.38516235]
[-174.38652039 359.26214600]
[-161.45834351 354.86590576]
[-147.93841553 357.44284058]
[-137.80278015 346.38531494]
[-127.66715240 335.32778931]
[-117.53151703 324.27026367]
[-107.39588928 313.21273804]
[-97.26025391 302.15521240]
[-87.12461853 291.09768677]
[-84.22838593 276.48736572]
[-69.19979095 271.54248047]
[-59.06415558 260.48495483]
[-66.06266022 242.12998962]
[-62.69266510 222.69644165]
[-49.81914520 207.64849854]
[-30.99076653 201.25935364]
[-11.46193600 205.39791870]
[-1.98389268 193.77180481]
[7.49415112 182.14567566]
[16.97219467 170.51956177]
[26.45023918 158.89343262]
[35.92828369 147.26731873]
[45.40632629 135.64118958]
[54.88436890 124.01507568]
[53.45851898 116.65186310]
[39.56689453 122.31072235]
[26.92220306 130.37991333]
[13.14022160 124.45901489]
[10.28881073 109.73252869]
[20.86474037 99.09534454]
[35.60695267 101.86125946]
[50.60681534 101.92543030]
[49.18096542 94.56221008]
[36.04810715 87.31458282]
[22.91525459 80.06695557]
[9.78239918 72.81932831]
[-3.35045576 65.57170105]
[-16.48331070 58.32406998]
[-32.86001587 59.18170929]
[-41.56295776 45.28239822]
[-33.63929749 30.92455673]
[-17.24021339 30.87829971]
[-9.23568153 45.19121552]
[3.89717293 52.43884277]
[17.03002739 59.68647003]
[30.16288185 66.93409729]
[43.29573822 74.18173218]
[56.42859268 81.42935944]
[63.95454025 73.63599396]
[72.63196564 68.20424652]
[81.80389404 65.22690582]
[77.51727295 50.85245514]
[73.23065186 36.47800446]
[68.94402313 22.10355186]
[64.65740204 7.72909880]
[60.37078476 -6.64535332]
[56.08416367 -21.01980591]
[50.65179443 -28.31745529]
[51.83220291 -35.58578491]
[38.29892349 -43.29863358]
[34.32642365 -57.98447418]
[41.76285172 -70.83885956]
[37.64315033 -85.26203918]
[33.52344894 -99.68521118]
[22.66590309 -106.60397339]
[19.51830482 -118.67460632]
[25.23645782 -129.30867004]
[21.28423309 -143.77864075]
[17.33200836 -158.24861145]
[13.37978363 -172.71858215]
[9.42755890 -187.18853760]
[5.47533369 -201.65850830]
[-7.68795919 -210.82951355]
[-8.58113194 -226.84768677]
[3.48098087 -237.42524719]
[19.24535942 -234.44801331]
[26.61891937 -220.19984436]
[19.94529915 -205.61073303]
[23.89752388 -191.14076233]
[27.84975052 -176.67080688]
[31.80197525 -162.20083618]
[35.75419998 -147.73086548]
[39.70642471 -133.26089478]
[52.82265091 -121.57897186]
[47.94662857 -103.80491638]
[52.06632996 -89.38173676]
[56.18602753 -74.95855713]
[69.28988647 -67.97110748]
[73.67330933 -53.40264130]
[66.25538635 -39.70548248]
[70.45861053 -25.30642700]
[74.74523926 -10.93197536]
[79.03186035 3.44247723]
[83.31848145 17.81692886]
[87.60510254 32.19138336]
[91.89172363 46.56583405]
[96.17834473 60.94028473]
[111.21588135 58.14048767]
[127.59912872 61.43181610]
[135.22427368 48.51449203]
[142.84941101 35.59717178]
[150.47454834 22.67984962]
[158.09968567 9.76252651]
[165.72483826 -3.15479589]
[158.10447693 -16.48992348]
[158.18865967 -31.84858513]
[165.95474243 -45.09937668]
[179.31369019 -52.67790222]
[194.67201233 -52.54557800]
[207.89839172 -44.73799515]
[215.43501282 -31.35535812]
[215.25454712 -15.99752617]
[207.40554810 -2.79568028]
[193.99934387 4.69894981]
[178.64215088 4.47034597]
[171.01701355 17.38766861]
[163.39187622 30.30499077]
[155.76673889 43.22231293]
[148.14158630 56.13963318]
[140.51644897 69.05696106]
[143.11334229 76.09301758]
[155.99792480 68.41268921]
[168.88252258 60.73235703]
[177.97137451 48.79951477]
[192.64959717 45.70924377]
[205.77821350 52.96455002]
[210.97190857 67.03670502]
[205.70466614 81.08148956]
[192.53828430 88.26802063]
[177.87666321 85.10116577]
[163.09190369 87.63314819]
[148.30714417 90.16513062]
[150.90403748 97.20119476]
[165.09278870 102.06735992]
[179.28152466 106.93351746]
[193.47027588 111.79968262]
[202.56610107 111.62043762]
[207.79472351 116.80537415]
[221.92610168 121.83568573]
[236.05747986 126.86600494]
[248.84106445 118.27030182]
[264.05700684 118.84347534]
[275.87799072 128.15629578]
[279.90036011 142.47265625]
[294.03173828 147.50297546]
[308.16311646 152.53329468]
[323.75888062 149.87199402]
[333.15441895 161.42939758]
[347.28579712 166.45971680]
[361.41717529 171.49003601]
[375.54855347 176.52033997]
[389.67993164 181.55065918]
[403.81130981 186.58097839]
[417.94268799 191.61129761]
[432.07406616 196.64161682]
[445.21691895 184.92962646]
[462.39788818 181.52653503]
[478.84426880 187.28529358]
[490.03414917 200.52645874]
[492.93972778 217.52674866]
[507.18392944 222.22810364]
[521.42810059 226.92945862]
[530.52124023 226.64479065]
[535.80963135 231.76875305]
[549.99835205 236.63491821]
[564.08276367 229.46513367]
[579.08569336 234.43388367]
[586.10614014 248.59327698]
[580.97906494 263.54281616]
[566.74621582 270.41317749]
[551.85174561 265.12832642]
[545.13220215 250.82365417]
[530.94348145 245.95750427]
[516.72674561 241.17366028]
[502.48257446 236.47230530]
[488.23837280 231.77095032]
[479.80010986 241.12095642]
[468.41577148 246.61645508]
[455.75283813 247.41343689]
[443.68090820 243.35897827]
[433.99560547 235.01904297]
[428.15148926 223.59974670]
[427.04376221 210.77299500]
[412.91238403 205.74267578]
[398.78100586 200.71235657]
[384.64962769 195.68203735]
[370.51824951 190.65173340]
[356.38687134 185.62141418]
[342.25549316 180.59109497]
[328.12408447 175.56077576]
[313.53909302 178.58187866]
[303.13281250 166.66467285]
[289.00143433 161.63435364]
[274.87005615 156.60404968]
[262.70632935 165.15867615]
[247.65969849 164.90750122]
[235.50404358 155.73725891]
[231.02716064 140.99739075]
[216.89578247 135.96707153]
[202.76440430 130.93675232]
[188.60411072 125.98842621]
[174.41535950 121.12226105]
[160.22662354 116.25610352]
[146.03787231 111.38993835]
[134.00555420 133.03587341]
[112.70835114 145.65931702]
[87.95973206 145.82398987]
[66.51049042 133.49311829]
[57.03244781 145.11924744]
[47.55440140 156.74536133]
[38.07635880 168.37147522]
[28.59831619 179.99760437]
[19.12027168 191.62371826]
[9.64222813 203.24984741]
[0.16418447 214.87596130]
[5.57095718 223.89430237]
[8.27377510 234.03422546]
[8.07392025 244.50532532]
[4.99847841 254.49465942]
[-0.70266885 263.22991943]
[-8.57710171 270.03903198]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 61]
[4 60]
[6 58]
[7 57]
[8 56]
[9 55]
[10 54]
[11 53]
[12 52]
[16 47]
[17 46]
[18 45]
[19 44]
[20 43]
[21 42]
[22 41]
[23 40]
[25 37]
[26 36]
[66 264]
[67 263]
[68 262]
[69 261]
[70 260]
[71 259]
[72 258]
[73 257]
[82 97]
[83 96]
[84 95]
[85 94]
[86 93]
[87 92]
[100 146]
[101 145]
[102 144]
[103 143]
[104 142]
[105 141]
[106 140]
[108 139]
[111 136]
[112 135]
[113 134]
[116 132]
[117 131]
[118 130]
[119 129]
[120 128]
[121 127]
[148 169]
[149 168]
[150 167]
[151 166]
[152 165]
[153 164]
[182 253]
[183 252]
[184 251]
[185 250]
[187 249]
[188 248]
[189 247]
[193 243]
[194 242]
[195 241]
[197 239]
[198 238]
[199 237]
[200 236]
[201 235]
[202 234]
[203 233]
[204 232]
[209 225]
[210 224]
[211 223]
[213 222]
[214 221]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
