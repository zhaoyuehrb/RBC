%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 18:56:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGUUUAUUACCCAGAACUCUUUGUCUGGGUCAGUCAAGAACCAUUUCCAAACAAGGACAUGGAGGGAAGGCUUCCUAAGGGAAGACUUCCUGUCCCAAAGGAAGUGAACCGCAAGAAGAACGAUGAGACAAACGCUGCCUCCCUGACUCCACUGGGCAGCAGUGAACUCCGCUCCCCAAGAAUCAGUUACCUCCACUUUUUUUAA\
) } def
/len { sequence length } bind def

/coor [
[-30.22689247 248.32020569]
[-40.00302505 259.69680786]
[-49.77915573 271.07342529]
[-59.55528641 282.45004272]
[-69.33142090 293.82666016]
[-79.10755157 305.20324707]
[-88.88368225 316.57986450]
[-98.39958191 328.17501831]
[-107.65036011 339.98278809]
[-116.90114594 351.79052734]
[-126.06249237 363.66781616]
[-135.13388062 375.61392212]
[-144.20527649 387.56005859]
[-153.27667236 399.50616455]
[-162.34806824 411.45230103]
[-171.41946411 423.39840698]
[-180.49084473 435.34454346]
[-175.88015747 450.16079712]
[-180.89067078 464.84664917]
[-193.59574890 473.75509644]
[-209.11003113 473.46066284]
[-221.46795654 464.07656860]
[-225.91764832 449.21118164]
[-220.74812317 434.58053589]
[-207.94714355 425.81042480]
[-192.43696594 426.27313232]
[-183.36558533 414.32702637]
[-174.29418945 402.38088989]
[-165.22279358 390.43478394]
[-156.15139771 378.48864746]
[-147.08001709 366.54254150]
[-138.00862122 354.59640503]
[-136.46669006 347.36657715]
[-128.70889282 342.53973389]
[-119.45811462 330.73199463]
[-110.20732880 318.92425537]
[-110.26815033 315.39660645]
[-108.62187958 311.66439819]
[-105.19107819 308.53094482]
[-100.26029205 306.80374146]
[-90.48416138 295.42712402]
[-80.70803070 284.05050659]
[-70.93190002 272.67391968]
[-61.15576553 261.29730225]
[-51.37963486 249.92068481]
[-41.60350418 238.54408264]
[-46.85830307 229.74655151]
[-49.66235352 219.89025879]
[-64.64695740 219.21081543]
[-79.63156128 218.53138733]
[-91.13112640 229.37275696]
[-106.92588043 228.82385254]
[-117.64507294 217.21031189]
[-116.92920685 201.42224121]
[-105.20298004 190.82643127]
[-89.42336273 191.70918274]
[-78.95212555 203.54678345]
[-63.96751785 204.22621155]
[-48.98291397 204.90565491]
[-36.09404373 183.75816345]
[-13.00269127 174.40428162]
[11.25743866 180.69407654]
[21.70263672 169.92849731]
[32.14783478 159.16291809]
[42.59303284 148.39732361]
[53.03823090 137.63174438]
[63.48342896 126.86614990]
[55.71224594 117.55834961]
[50.41490936 106.00914764]
[48.22988892 92.90232086]
[49.60070801 79.10016632]
[54.72713852 65.58677673]
[63.53310394 53.39830780]
[53.41782379 42.32215881]
[43.30254364 31.24600601]
[33.18726349 20.16985512]
[23.07198524 9.09370422]
[7.28507662 4.65461254]
[3.49874115 -11.30144310]
[15.60803699 -22.36024094]
[31.15595818 -17.14543724]
[34.14813614 -1.02157533]
[44.26341629 10.05457592]
[54.37869644 21.13072777]
[64.49397278 32.20687866]
[74.60925293 43.28302765]
[87.94335938 36.41268158]
[84.79514313 21.74677849]
[81.64692688 7.08087492]
[78.49871063 -7.58502865]
[75.35049438 -22.25093269]
[72.20227814 -36.91683578]
[69.05406189 -51.58274078]
[55.14844131 -58.73590851]
[49.14178467 -73.17384338]
[53.87024689 -88.07940674]
[67.10119629 -96.41463470]
[82.58737946 -94.24388885]
[93.01670074 -82.59213257]
[93.46474457 -66.96097565]
[83.71996307 -54.73095703]
[86.86817932 -40.06505203]
[90.01639557 -25.39914894]
[93.16461182 -10.73324490]
[96.31282806 3.93265843]
[99.46104431 18.59856224]
[102.60926056 33.26446533]
[109.62188721 35.92400360]
[113.89027405 21.54412651]
[118.15866089 7.16424894]
[122.42704773 -7.21562767]
[126.69544220 -21.59550476]
[130.96382141 -35.97537994]
[135.23222351 -50.35525894]
[134.96594238 -65.35289764]
[145.32864380 -76.19790649]
[160.32287598 -76.61370850]
[171.27067566 -66.35964966]
[171.83595276 -51.37030411]
[161.69125366 -40.32067108]
[155.35057068 -26.72671318]
[149.00987244 -13.13275528]
[142.66918945 0.46120283]
[136.32850647 14.05516052]
[129.98780823 27.64911842]
[123.64712524 41.24307632]
[130.65974426 43.90261078]
[142.74151611 35.01268005]
[154.82328796 26.12274742]
[161.35304260 11.71188927]
[176.18984985 10.40093327]
[188.27160645 1.51100075]
[192.09730530 -14.06923008]
[206.72349548 -20.66119957]
[220.93022156 -13.20811176]
[223.81930542 2.57266164]
[213.17446899 14.57546139]
[197.16154480 13.59276772]
[185.07977295 22.48270035]
[179.41418457 36.25769043]
[163.71321106 38.20451355]
[151.63145447 47.09444809]
[139.54968262 55.98437881]
[149.19465637 82.38160706]
[144.81913757 106.81870270]
[159.07092285 111.49702454]
[173.32270813 116.17535400]
[187.57447815 120.85368347]
[203.09945679 117.80644226]
[212.77870178 129.12728882]
[227.03048706 133.80561829]
[236.43955994 128.34281921]
[247.08264160 128.94898987]
[255.45811462 135.18280029]
[258.94351196 144.79130554]
[273.04748535 149.89794922]
[287.15145874 155.00459290]
[301.25543213 160.11123657]
[316.86538696 157.53428650]
[326.19827271 169.14230347]
[340.30224609 174.24894714]
[354.40625000 179.35559082]
[370.01617432 176.77864075]
[379.34906006 188.38665771]
[393.55328369 181.45732117]
[408.46957397 186.68035889]
[415.24835205 200.95704651]
[409.86788940 215.81727600]
[395.52032471 222.44473267]
[380.71783447 216.90747070]
[374.24243164 202.49064636]
[359.64132690 205.43284607]
[349.29959106 193.45956421]
[335.19561768 188.35292053]
[321.09164429 183.24629211]
[306.49050903 186.18849182]
[296.14880371 174.21520996]
[282.04483032 169.10856628]
[267.94085693 164.00193787]
[253.83686829 158.89529419]
[235.10101318 163.67045593]
[222.35215759 148.05738831]
[208.10037231 143.37907410]
[193.59478760 146.76092529]
[182.89616394 135.10546875]
[168.64437866 130.42713928]
[154.39259338 125.74880981]
[140.14080811 121.07048035]
[127.95783997 135.68766785]
[110.84934235 144.01751709]
[91.82945251 144.59251404]
[74.24901581 137.31135559]
[63.80381775 148.07693481]
[53.35861969 158.84252930]
[42.91342163 169.60810852]
[32.46822357 180.37368774]
[22.02302551 191.13928223]
[26.27657700 199.05616760]
[28.65234947 207.70991516]
[29.03619385 216.66236877]
[27.41465950 225.46162415]
[23.87537766 233.66482544]
[18.60233879 240.86047363]
[11.86634445 246.68902588]
[4.01110172 250.86094666]
[-4.56431437 253.17094421]
[-13.42573166 253.50822449]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 46]
[2 45]
[3 44]
[4 43]
[5 42]
[6 41]
[7 40]
[8 36]
[9 35]
[10 34]
[11 32]
[12 31]
[13 30]
[14 29]
[15 28]
[16 27]
[17 26]
[48 59]
[49 58]
[50 57]
[62 197]
[63 196]
[64 195]
[65 194]
[66 193]
[67 192]
[73 86]
[74 85]
[75 84]
[76 83]
[77 82]
[87 107]
[88 106]
[89 105]
[90 104]
[91 103]
[92 102]
[93 101]
[127 143]
[128 142]
[129 141]
[131 139]
[132 138]
[145 188]
[146 187]
[147 186]
[148 185]
[150 183]
[151 182]
[155 180]
[156 179]
[157 178]
[158 177]
[160 175]
[161 174]
[162 173]
[164 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
