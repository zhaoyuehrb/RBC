%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 07:35:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAAACUUCUUUACCUGUUUCUUGCCAUCCUUCUGGCCAUAGAAGAACCAGUGAUAUCAGGCAAACGCCACAUCCUUCGAUGCAUGGGUAACAGUGGAAUUUGUAGGGCCUCUUGCAAAAAGAACGAACAGCCCUACCUCUAUUGCAGAAAUUGUCAGUCCUGCUGCCUCCAGUCCUACAUGAGGAUAAGCAUUUCUGGCAAAGAGGAAAAUACCGACUGGUCUUAUGAGAAGCAGUGGCCAAGACUACCUUGA\
) } def
/len { sequence length } bind def

/coor [
[10.82835102 524.11407471]
[11.65650082 509.13742065]
[4.16793394 508.72348022]
[-0.36215550 523.02307129]
[-4.89224482 537.32263184]
[-9.42233372 551.62225342]
[-13.95242310 565.92181396]
[-3.53246617 577.20544434]
[-0.16598403 592.19085693]
[-4.75854349 606.84704590]
[-16.07476807 617.23156738]
[-31.07065201 620.55108643]
[-45.71237946 615.91259766]
[-56.06139374 604.56390381]
[-59.33386612 589.55767822]
[-54.64951706 574.93054199]
[-43.26841354 564.61718750]
[-28.25201416 561.39172363]
[-23.72192383 547.09216309]
[-19.19183540 532.79254150]
[-14.66174603 518.49298096]
[-10.13165665 504.19338989]
[4.26033974 489.98431396]
[20.49242973 485.89215088]
[33.39468002 490.62698364]
[35.23083878 475.73977661]
[37.06699753 460.85260010]
[38.90316010 445.96539307]
[40.73931885 431.07821655]
[33.03727341 415.29620361]
[44.28565598 400.70028687]
[45.93899155 385.79168701]
[47.59232330 370.88308716]
[49.24565506 355.97448730]
[50.89899063 341.06588745]
[49.01771164 338.11557007]
[48.45600891 334.11517334]
[49.68860626 329.68753052]
[52.89741898 325.64260864]
[55.09837723 310.80496216]
[57.29933167 295.96731567]
[59.50028992 281.12966919]
[57.44296646 276.84835815]
[58.03343964 271.23214722]
[61.94164658 265.95666504]
[64.50607300 251.17750549]
[67.07050323 236.39834595]
[65.12312317 229.29118347]
[69.75814819 221.45402527]
[72.50374603 206.70744324]
[75.24934387 191.96086121]
[77.99494171 177.21427917]
[80.74053955 162.46769714]
[71.66914368 158.91098022]
[63.22720718 154.04536438]
[55.60228348 147.97898865]
[48.96378708 140.84660339]
[43.45920944 132.80668640]
[39.21085739 124.03788757]
[36.31311417 114.73500824]
[34.83036423 105.10474396]
[19.84052658 104.55263519]
[4.85069132 104.00052643]
[-9.38256359 112.14586639]
[-23.41514587 103.65948486]
[-22.81154060 87.27144623]
[-8.19268131 79.84036255]
[5.40279961 89.01069641]
[20.39263535 89.56280518]
[35.38247299 90.11490631]
[35.73512268 88.03482056]
[36.15471649 85.96719360]
[21.97060585 81.08753204]
[7.78649664 76.20787811]
[-6.39761353 71.32822418]
[-22.38245583 74.99113464]
[-33.34733582 62.79672623]
[-28.01252365 47.28957367]
[-11.86601734 44.42210007]
[-1.51795900 57.14411545]
[12.66615105 62.02377319]
[26.85025978 66.90342712]
[41.03437042 71.78308105]
[45.84207153 63.39318848]
[51.83484650 55.80432129]
[58.88156509 49.18253708]
[66.82803345 43.67273712]
[60.74941635 29.95958900]
[54.67079544 16.24644279]
[48.59217453 2.53329659]
[32.12080765 0.94173986]
[18.78101730 -8.69085693]
[12.16504955 -23.65352249]
[13.99528027 -39.81631470]
[23.67695045 -52.77014542]
[17.43050766 -66.40766144]
[2.21280861 -67.94678497]
[-10.10993671 -76.83760834]
[-16.28689384 -90.61119080]
[-14.75052834 -105.52747345]
[-6.01306391 -117.59073639]
[-12.25950718 -131.22825623]
[-18.50595093 -144.86578369]
[-24.75239372 -158.50329590]
[-30.99883652 -172.14082336]
[-37.24528122 -185.77833557]
[-43.49172592 -199.41586304]
[-49.73816681 -213.05337524]
[-63.41321182 -222.10462952]
[-62.14218140 -238.45445251]
[-47.23260117 -245.28353882]
[-34.02217102 -235.56671143]
[-36.10064697 -219.29981995]
[-29.85420418 -205.66229248]
[-23.60776138 -192.02478027]
[-17.36131859 -178.38726807]
[-11.11487389 -164.74974060]
[-4.86843061 -151.11222839]
[1.37801254 -137.47470093]
[7.62445593 -123.83718109]
[22.46593857 -122.57386780]
[34.76419449 -113.99430847]
[41.15905380 -100.32053375]
[39.84238052 -85.18239594]
[31.06802750 -72.65410614]
[37.31447220 -59.01659012]
[50.95101166 -58.63586044]
[63.15453339 -52.39229202]
[71.52227020 -41.45126724]
[74.37924194 -27.90917587]
[71.11333466 -14.39182854]
[62.30532074 -3.54532313]
[68.38394165 10.16782284]
[74.46256256 23.88097000]
[80.54118347 37.59411621]
[108.36532593 35.16820908]
[134.66236877 44.57743835]
[154.63174438 64.10414124]
[168.03010559 57.35997391]
[181.42846680 50.61580276]
[194.82684326 43.87163544]
[208.22520447 37.12746429]
[214.46128845 30.49304390]
[221.82962036 30.38387871]
[235.30973816 23.80463600]
[248.78985596 17.22539139]
[262.26995850 10.64614868]
[275.70947266 3.98431635]
[289.10781860 -2.75985360]
[302.50619507 -9.50402355]
[315.90457153 -16.24819374]
[329.30291748 -22.99236298]
[342.70129395 -29.73653412]
[348.93737793 -36.37095261]
[356.30572510 -36.48011780]
[369.78582764 -43.05936050]
[375.01235962 -57.73318863]
[388.77682495 -64.21344757]
[402.73388672 -59.14032364]
[416.21398926 -65.71956635]
[429.69412231 -72.29881287]
[443.17422485 -78.87805176]
[456.65432739 -85.45729828]
[469.79537964 -92.69005585]
[482.56573486 -100.55889893]
[495.33605957 -108.42774200]
[508.10638428 -116.29659271]
[515.41558838 -130.97676086]
[531.79803467 -131.71667480]
[540.40087891 -117.75518036]
[532.37420654 -103.45465851]
[515.97521973 -103.52626038]
[503.20489502 -95.65741730]
[490.43457031 -87.78857422]
[477.66424561 -79.91972351]
[492.49456787 -77.67003632]
[503.23678589 -67.20079041]
[505.86734009 -52.43325043]
[499.40097046 -38.89862061]
[486.25967407 -31.66630745]
[471.36553955 -33.44518280]
[460.29714966 -43.56896210]
[457.20022583 -58.24578094]
[463.23358154 -71.97718048]
[449.75347900 -65.39793396]
[436.27334595 -58.81869125]
[422.79324341 -52.23944855]
[409.31311035 -45.66020584]
[404.72567749 -31.53607559]
[391.14865112 -24.67175674]
[376.36508179 -29.57924461]
[362.88494873 -23.00000191]
[349.44546509 -16.33816910]
[336.04708862 -9.59399891]
[322.64874268 -2.84982920]
[309.25036621 3.89434075]
[295.85198975 10.63851070]
[282.45364380 17.38268089]
[277.90515137 23.18056679]
[268.84921265 24.12626457]
[255.36909485 30.70550919]
[241.88897705 37.28475189]
[228.40885925 43.86399460]
[214.96937561 50.52582932]
[201.57101440 57.26999664]
[188.17263794 64.01416779]
[174.77427673 70.75833893]
[161.37591553 77.50251007]
[164.61337280 90.08781433]
[165.29737854 103.06484222]
[163.40086365 115.92075348]
[158.99880981 128.14749146]
[152.26515198 139.26185608]
[143.46603394 148.82463074]
[132.94917297 156.45788574]
[121.13017273 161.85997009]
[108.47613525 164.81739807]
[95.48712158 165.21330261]
[92.74152374 179.95988464]
[89.99592590 194.70646667]
[87.25032806 209.45304871]
[84.50473022 224.19963074]
[81.84966278 238.96278381]
[79.28524017 253.74194336]
[76.72080994 268.52111816]
[74.33793640 283.33062744]
[72.13697815 298.16827393]
[69.93601990 313.00592041]
[67.73506927 327.84356689]
[65.80759430 342.71920776]
[64.15425873 357.62780762]
[62.50092697 372.53643799]
[60.84759521 387.44503784]
[59.19426346 402.35363770]
[66.62207031 412.87542725]
[64.95600891 425.24273682]
[55.62651062 432.91436768]
[53.79035187 447.80154419]
[51.95419312 462.68875122]
[50.11803055 477.57595825]
[48.28187180 492.46313477]
[48.83398056 507.45297241]
[51.76033401 522.16473389]
[54.68669128 536.87652588]
[57.61304474 551.58831787]
[70.09983063 561.66101074]
[69.86596680 577.70239258]
[57.09085464 587.40679932]
[41.57445908 583.32989502]
[35.21963882 568.59912109]
[42.90126419 554.51464844]
[39.97491074 539.80285645]
[37.04855728 525.09112549]
[34.12220001 510.37933350]
[26.63363457 509.96536255]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 22]
[4 21]
[5 20]
[6 19]
[7 18]
[25 241]
[26 240]
[27 239]
[28 238]
[29 237]
[31 234]
[32 233]
[33 232]
[34 231]
[35 230]
[39 229]
[40 228]
[41 227]
[42 226]
[45 225]
[46 224]
[47 223]
[49 222]
[50 221]
[51 220]
[52 219]
[53 218]
[61 70]
[62 69]
[63 68]
[72 83]
[73 82]
[74 81]
[75 80]
[87 135]
[88 134]
[89 133]
[90 132]
[95 126]
[96 125]
[101 120]
[102 119]
[103 118]
[104 117]
[105 116]
[106 115]
[107 114]
[108 113]
[138 208]
[139 207]
[140 206]
[141 205]
[142 204]
[144 203]
[145 202]
[146 201]
[147 200]
[148 198]
[149 197]
[150 196]
[151 195]
[152 194]
[153 193]
[155 192]
[156 191]
[159 188]
[160 187]
[161 186]
[162 185]
[163 184]
[164 175]
[165 174]
[166 173]
[167 172]
[242 254]
[243 253]
[244 252]
[245 251]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
