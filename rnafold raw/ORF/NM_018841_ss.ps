%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 06:47:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCCAGCAAAACAGCAAGCACCAACAAUAUAGCCCAGGCAAGGAGAACUGUGCAGCAGUUAAGAUUAGAAGCCUCCAUUGAAAGAAUAAAGGUUUCGAAGGCAUCAGCGGACCUCAUGUCCUACUGUGAGGAACAUGCCAGGAGUGACCCUUUGCUGAUAGGAAUACCAACUUCAGAAAACCCUUUCAAGGAUAAAAAAACUUGCAUCAUCUUAUAG\
) } def
/len { sequence length } bind def

/coor [
[56.32930374 440.86407471]
[41.28676987 440.21926880]
[26.70711136 436.46063232]
[13.22769165 429.75250244]
[1.43777394 420.38812256]
[-8.14723873 408.77688599]
[-15.10832977 395.42633057]
[-19.14118958 380.92013550]
[-20.06952095 365.89242554]
[-17.85274124 351.00018311]
[-12.58775616 336.89437866]
[-4.50472975 324.19168091]
[6.04298306 313.44741821]
[18.59428215 305.13125610]
[32.60047531 299.60675049]
[47.44927979 297.11538696]
[48.09167862 282.12915039]
[48.73408127 267.14291382]
[49.37648392 252.15667725]
[50.01888657 237.17044067]
[43.65222549 233.20614624]
[35.90368271 246.04981995]
[28.15513611 258.89349365]
[20.40658951 271.73718262]
[12.65804386 284.58084106]
[8.34507275 298.94741821]
[-6.63216496 299.77346802]
[-12.49889755 285.96835327]
[-1.50938475 275.75927734]
[6.59768867 263.13885498]
[14.70476246 250.51841736]
[22.81183624 237.89797974]
[30.91890907 225.27754211]
[24.55224991 221.31324768]
[11.38706589 228.50198364]
[3.31850719 242.77890015]
[-13.08020306 242.65919495]
[-20.93947792 228.26600647]
[-12.17436886 214.40582275]
[4.19833136 215.33680725]
[17.36351585 208.14807129]
[15.50871754 200.88104248]
[0.97465777 204.59063721]
[-13.55945873 208.30000305]
[-17.26860809 193.76583862]
[-2.73493981 190.05657959]
[11.79911995 186.34696960]
[9.94432068 179.07994080]
[-5.05567884 179.07994080]
[-20.05567932 179.07994080]
[-35.05567932 179.07994080]
[-50.05567932 179.07994080]
[-65.05567932 179.07994080]
[-80.89481354 185.12628174]
[-91.08956909 171.57994080]
[-80.89481354 158.03359985]
[-65.05567932 164.07994080]
[-50.05567932 164.07994080]
[-35.05567932 164.07994080]
[-20.05567932 164.07994080]
[-5.05567884 164.07994080]
[9.94432068 164.07994080]
[12.96219826 157.21391296]
[-0.76986951 151.17816162]
[-15.69497395 149.68107605]
[-18.88308716 135.02378845]
[-5.92826986 127.46252441]
[5.26588440 137.44609070]
[18.99795151 143.48184204]
[22.01582909 136.61581421]
[11.87320518 125.56469727]
[1.73058164 114.51358032]
[-8.41204166 103.46246338]
[-18.55466461 92.41134644]
[-28.69728851 81.36022949]
[-38.83991241 70.30911255]
[-54.39431763 69.47350311]
[-64.52294922 58.12161255]
[-63.63047028 43.29801559]
[-73.77309418 32.24689865]
[-83.91571808 21.19577980]
[-99.81797028 19.07492065]
[-107.95082855 5.24610662]
[-102.07546997 -9.68237972]
[-86.69895935 -14.25868130]
[-73.61684418 -4.97225094]
[-72.86460114 11.05315590]
[-62.72197723 22.10427284]
[-52.57935333 33.15539169]
[-37.73376083 33.53471375]
[-27.29026985 44.59763336]
[-27.78879547 60.16648483]
[-17.64617157 71.21760559]
[-7.50354815 82.26872253]
[2.63907504 93.31983948]
[12.78169823 104.37095642]
[22.92432213 115.42207336]
[33.06694412 126.47319031]
[32.43111801 86.81417084]
[52.46647263 54.63268280]
[85.16548157 39.20994949]
[119.26138306 43.76825333]
[124.09986877 29.57004929]
[128.93836975 15.37184525]
[133.77685547 1.17364132]
[138.61534119 -13.02456284]
[137.62677002 -17.23721313]
[137.98970032 -21.15286255]
[139.44570923 -24.38406372]
[141.63734436 -26.66668129]
[144.15669250 -27.88147545]
[138.24884033 -42.29449463]
[144.16777039 -56.30951691]
[157.94477844 -61.85292816]
[163.58593750 -75.75175476]
[169.22709656 -89.65057373]
[174.86825562 -103.54940033]
[180.50941467 -117.44822693]
[186.15057373 -131.34704590]
[177.83467102 -144.44763184]
[178.84088135 -159.93205261]
[188.78230286 -171.84622192]
[203.83625793 -175.60891724]
[218.21420288 -169.77330017]
[226.38751221 -156.58328247]
[225.21337891 -141.11068726]
[215.14329529 -129.30506897]
[200.04940796 -125.70589447]
[194.40824890 -111.80706787]
[188.76708984 -97.90824127]
[183.12593079 -84.00941467]
[177.48477173 -70.11059570]
[171.84361267 -56.21176910]
[177.86013794 -42.63469315]
[172.33718872 -28.45894814]
[158.05551147 -22.24031830]
[152.81355286 -8.18607140]
[147.97505188 6.01213264]
[143.13656616 20.21033669]
[138.29808044 34.40854263]
[133.45957947 48.60674667]
[144.93493652 58.26677704]
[158.10012817 51.07804489]
[171.26530457 43.88930893]
[175.47685242 28.65649986]
[189.26708984 20.93608093]
[204.45451355 25.30843925]
[212.02870178 39.17953110]
[207.49603271 54.31988525]
[193.54562378 61.74699783]
[178.45404053 57.05449295]
[165.28886414 64.24323273]
[152.12367249 71.43196106]
[162.54428101 98.07502747]
[159.45469666 127.97799683]
[142.22875977 154.37051392]
[113.57680511 170.68615723]
[128.53858948 171.75625610]
[143.50036621 172.82633972]
[158.46215820 173.89642334]
[172.30285645 160.95251465]
[190.89019775 162.22100830]
[202.44065857 176.42938232]
[217.42689514 177.07177734]
[231.70895386 169.01234436]
[245.69015503 177.58309937]
[244.98783875 193.96720886]
[230.32447815 201.31008911]
[216.78448486 192.05802917]
[201.79824829 191.41561890]
[195.26992798 200.76281738]
[184.93441772 205.85330200]
[173.30570984 205.32006836]
[163.27503967 199.17996216]
[157.39205933 188.85821533]
[142.43028259 187.78811646]
[127.46849823 186.71803284]
[112.50672150 185.64794922]
[109.78565979 192.63693237]
[123.76361847 198.07904053]
[133.14785767 209.78102112]
[118.32150269 212.05700684]
[104.34354401 206.61488342]
[101.62248993 213.60386658]
[113.36901093 222.93226624]
[125.11553955 232.26068115]
[141.40719604 234.13523865]
[147.68046570 249.28707886]
[137.48193359 262.12927246]
[121.30299377 259.45089722]
[115.78713989 244.00720215]
[104.04061127 234.67880249]
[92.29408264 225.35038757]
[85.47183990 228.46600342]
[91.70307159 242.11048889]
[97.93429565 255.75495911]
[108.07678223 266.80621338]
[100.70046234 279.86721802]
[85.99933624 276.88781738]
[84.28981018 261.98620605]
[78.05858612 248.34170532]
[71.82736206 234.69723511]
[65.00512695 237.81285095]
[64.36272430 252.79908752]
[63.72031784 267.78530884]
[63.07791901 282.77154541]
[62.43551636 297.75778198]
[77.01664734 301.51068115]
[90.49871063 308.21350098]
[102.29230499 317.57324219]
[111.88188934 329.18072510]
[118.84822845 342.52853394]
[122.88679504 357.03314209]
[123.82104492 372.06048584]
[121.61012268 386.95361328]
[116.35068512 401.06149292]
[108.27265930 413.76736450]
[97.72917175 424.51577759]
[85.18114471 432.83688354]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 207]
[17 206]
[18 205]
[19 204]
[20 203]
[34 41]
[35 40]
[48 62]
[49 61]
[50 60]
[51 59]
[52 58]
[53 57]
[70 98]
[71 97]
[72 96]
[73 95]
[74 94]
[75 93]
[76 92]
[79 89]
[80 88]
[81 87]
[102 141]
[103 140]
[104 139]
[105 138]
[106 137]
[111 136]
[114 133]
[115 132]
[116 131]
[117 130]
[118 129]
[119 128]
[142 153]
[143 152]
[144 151]
[157 178]
[158 177]
[159 176]
[160 175]
[163 170]
[164 169]
[184 193]
[185 192]
[186 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
