%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 22:26:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCCUGGGAAGAAGGCGCGCAAGAACGCUCAACCGAGCCCCGCGCGGGCUCCAGCAGAGCUGGAAGUCGAGUGUGCUACUCAACUCAGGAGAUUUGGAGACAAACUGAACUUCCGGCAGAAACUUCUGAAUCUGAUAUCCAAACUCUUCUGCUCAGGAACCUGA\
) } def
/len { sequence length } bind def

/coor [
[111.44306183 340.54357910]
[112.17410278 325.25555420]
[119.93610382 312.06427002]
[132.94543457 304.00100708]
[131.81100464 289.04397583]
[130.67655945 274.08694458]
[129.54212952 259.12988281]
[128.40769958 244.17285156]
[127.27326965 229.21580505]
[118.59558105 217.11015320]
[125.26703644 202.76434326]
[124.13260651 187.80729675]
[122.99817657 172.85026550]
[121.86373901 157.89321899]
[120.72930908 142.93617249]
[119.59487915 127.97913361]
[112.70722198 125.01094818]
[92.04423523 116.10639954]
[80.39300537 125.55355835]
[68.74176788 135.00071716]
[67.34916687 150.74353027]
[55.17913055 160.82646179]
[39.45191956 159.26750183]
[29.49821091 146.99154663]
[31.22336578 131.28169250]
[43.60387802 121.45832825]
[59.29461288 123.34947968]
[70.94584656 113.90232086]
[82.59707642 104.45516205]
[80.42842865 97.27554321]
[66.06918335 101.61283112]
[51.70986938 105.94988251]
[47.37305832 91.59049225]
[61.73189926 87.25358582]
[76.09114075 82.91629791]
[73.92250061 75.73667145]
[58.98960495 74.31939697]
[44.05670929 72.90212250]
[29.12381554 71.48484039]
[14.19092274 70.06756592]
[-0.74197179 68.65029144]
[-13.97357655 77.72245789]
[-29.27352524 72.89636230]
[-34.90500641 57.87418365]
[-26.54802704 44.17963791]
[-10.61335087 42.31801987]
[0.67530519 53.71739578]
[15.60819912 55.13467407]
[30.54109383 56.55194855]
[45.47398758 57.96922684]
[60.40688324 59.38650513]
[75.33977509 60.80377960]
[88.28258514 53.22198105]
[94.34903717 39.50344849]
[100.41548920 25.78491592]
[106.09011078 11.89971828]
[111.36832428 -2.14095259]
[116.64653778 -16.18162346]
[121.92475891 -30.22229385]
[126.26204681 -44.58153915]
[129.63938904 -59.19638062]
[133.01672363 -73.81122589]
[136.39405823 -88.42606354]
[139.77139282 -103.04090118]
[143.14874268 -117.65574646]
[146.52607727 -132.27058411]
[149.90341187 -146.88542175]
[153.28076172 -161.50027466]
[145.17263794 -174.80050659]
[148.80593872 -189.57391357]
[161.53562927 -197.22180176]
[164.91297913 -211.83663940]
[168.29031372 -226.45149231]
[163.85887146 -241.63940430]
[174.26312256 -252.29777527]
[177.64045715 -266.91262817]
[180.87936401 -281.55877686]
[183.97952271 -296.23489380]
[182.68954468 -305.32339478]
[187.27970886 -311.15823364]
[186.16197205 -320.26950073]
[190.86172485 -326.01641846]
[194.51502991 -340.56472778]
[198.16833496 -355.11303711]
[194.02511597 -370.38211060]
[204.62919617 -380.84167480]
[208.28250122 -395.38998413]
[203.27088928 -411.00457764]
[214.48664856 -422.96865845]
[230.39196777 -418.97457886]
[234.62483215 -403.13113403]
[222.83081055 -391.73669434]
[219.17750549 -377.18835449]
[223.58204651 -362.95989990]
[212.71664429 -351.45974731]
[209.06333923 -336.91143799]
[205.41003418 -322.36312866]
[201.89454651 -307.78088379]
[198.65565491 -293.13473511]
[195.55549622 -278.45861816]
[197.25729370 -271.23236084]
[192.25531006 -263.53527832]
[188.87796021 -248.92044067]
[193.55097961 -234.77787781]
[182.90515137 -223.07414246]
[179.52781677 -208.45930481]
[176.15048218 -193.84446716]
[184.23400879 -181.38685608]
[181.01710510 -166.51721191]
[167.89559937 -158.12292480]
[164.51826477 -143.50808716]
[161.14091492 -128.89324951]
[157.76358032 -114.27840424]
[154.38624573 -99.66356659]
[151.00889587 -85.04872131]
[147.63156128 -70.43388367]
[144.25422668 -55.81904221]
[140.87689209 -41.20420074]
[153.72601318 -48.94371033]
[168.56779480 -46.77087021]
[178.65911865 -35.67287827]
[179.41511536 -20.69194031]
[170.49230957 -8.63442230]
[155.94467163 -4.97847605]
[142.38166809 -11.38512516]
[135.96542358 -24.94408035]
[130.68721008 -10.90340805]
[125.40899658 3.13726258]
[120.13078308 17.17793274]
[121.27772522 20.55615997]
[120.81791687 24.66341400]
[118.42437744 28.72564316]
[114.13402557 31.85136795]
[108.06757355 45.56990051]
[102.00112152 59.28843307]
[113.45438385 49.60222244]
[127.60942841 44.63887405]
[142.60374451 45.05146027]
[156.46443176 50.78569412]
[167.36772156 61.08707428]
[173.87896729 74.60016632]
[175.14144897 89.54694366]
[170.98904419 103.96073914]
[161.96810913 115.94501495]
[149.26562500 123.92290497]
[134.55192566 126.84470367]
[135.68635559 141.80174255]
[136.82078552 156.75878906]
[137.95521545 171.71582031]
[139.08964539 186.67286682]
[140.22407532 201.62991333]
[148.98291016 214.80538940]
[142.23031616 228.08137512]
[143.36474609 243.03842163]
[144.49917603 257.99545288]
[145.63360596 272.95251465]
[146.76803589 287.90954590]
[147.90246582 302.86657715]
[161.97911072 308.87548828]
[171.64189148 320.74514771]
[174.67036438 335.74804688]
[170.36863708 350.43661499]
[159.72518921 361.43551636]
[145.18582153 366.21728516]
[130.09156799 363.68310547]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 158]
[5 157]
[6 156]
[7 155]
[8 154]
[9 153]
[11 151]
[12 150]
[13 149]
[14 148]
[15 147]
[16 146]
[18 29]
[19 28]
[20 27]
[36 52]
[37 51]
[38 50]
[39 49]
[40 48]
[41 47]
[53 135]
[54 134]
[55 133]
[56 129]
[57 128]
[58 127]
[59 126]
[60 118]
[61 117]
[62 116]
[63 115]
[64 114]
[65 113]
[66 112]
[67 111]
[68 110]
[71 107]
[72 106]
[73 105]
[75 103]
[76 102]
[77 100]
[78 99]
[80 98]
[82 97]
[83 96]
[84 95]
[86 93]
[87 92]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
