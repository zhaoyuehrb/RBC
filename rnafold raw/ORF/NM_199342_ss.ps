%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 18:04:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGAUCCACCUGCACGUAAAGAAAAAACCAAAGUUAAAGAAUCUGUCAGCAGAGUUGAGAAGGCCAAACAGAAAUCAGCCCAGCAGGAGCUGAAGCAGAGACAAAGAGCAGAGAUCUAUGCCCUCAACAGAGUCAUGACAGAACUGGAGCAGCAGCAGUUUGAUGAGUUCUGUAAACAGAUGCAGCCUCCUGGAGAAUGA\
) } def
/len { sequence length } bind def

/coor [
[80.59806824 227.30601501]
[70.91049957 215.51136780]
[67.30815887 200.67944336]
[70.50628662 185.75514221]
[79.86988831 173.70169067]
[93.53982544 166.91232300]
[93.30654907 151.91413879]
[93.07327271 136.91595459]
[92.83999634 121.91776276]
[78.30136108 118.22341919]
[63.76402664 114.52939606]
[56.39911270 127.59683990]
[62.97931671 141.64961243]
[60.00974655 156.87988281]
[48.63226318 167.43130493]
[33.22174072 169.24664307]
[19.70383835 161.62785339]
[13.27646828 147.50451660]
[16.41108513 132.30735779]
[27.90236092 121.87997437]
[43.33166885 120.23192596]
[50.69658279 107.16448212]
[37.96839905 115.10131836]
[28.48112679 126.71990967]
[16.08728981 135.16932678]
[1.80547869 139.75517273]
[-13.19054508 140.10052490]
[-27.66832542 136.17701721]
[-40.43799591 128.30711365]
[-50.45007706 117.13758850]
[-56.88171387 103.58642578]
[-59.20432663 88.76733398]
[-57.22702408 73.89823151]
[-51.11231232 60.20113754]
[-41.36273575 48.80176544]
[-28.77956772 40.63697052]
[-14.39696121 36.37778473]
[0.60303861 36.37425613]
[14.98764801 40.62666702]
[27.57465935 48.78553772]
[37.32960129 60.18032074]
[43.45049667 73.87360382]
[53.66233063 84.86080170]
[49.96814728 70.32281494]
[46.27396393 55.78482819]
[42.57978058 41.24684143]
[38.88559341 26.70885849]
[35.19141006 12.17087364]
[31.49722862 -2.36711168]
[27.57739830 -16.84588814]
[23.43287277 -31.26195145]
[8.99891281 -36.64404678]
[0.59994102 -49.34486389]
[1.28209329 -64.37811279]
[10.57440186 -75.98806763]
[6.42987585 -90.40412903]
[2.28534985 -104.82019806]
[-1.85917628 -119.23625946]
[-6.00370216 -133.65232849]
[-10.14822865 -148.06838989]
[-14.64228153 -152.93356323]
[-15.82201195 -158.50212097]
[-14.18997765 -162.99751282]
[-17.88416100 -177.53549194]
[-21.57834435 -192.07347107]
[-29.75443459 -191.79039001]
[-37.97294998 -193.35823059]
[-45.81144333 -196.77925110]
[-52.84932327 -201.95869446]
[-58.69020462 -208.70591736]
[-62.98383713 -216.74073792]
[-65.44631195 -225.70465088]
[-65.87754059 -235.17680359]
[-64.17488098 -244.69361877]
[-60.34205627 -253.77160645]
[-54.49285507 -261.93176270]
[-61.65365219 -275.11218262]
[-68.81445312 -288.29257202]
[-75.97525024 -301.47296143]
[-83.13604736 -314.65338135]
[-90.39912415 -327.77767944]
[-97.76403046 -340.84512329]
[-112.14803314 -348.72122192]
[-112.24859619 -365.12005615]
[-97.96226501 -373.17193604]
[-83.98559570 -364.59378052]
[-84.69658661 -348.21005249]
[-77.33168030 -335.14260864]
[-71.30446625 -330.85595703]
[-69.95564270 -321.81417847]
[-62.79484558 -308.63375854]
[-55.63404846 -295.45336914]
[-48.47325134 -282.27297974]
[-41.31245422 -269.09255981]
[-33.83511734 -269.67520142]
[-35.00037384 -284.62985229]
[-36.16563416 -299.58453369]
[-37.33089066 -314.53921509]
[-43.06034088 -328.40185547]
[-31.64664841 -338.13467407]
[-18.86318207 -330.28720093]
[-22.37622070 -315.70446777]
[-21.21096230 -300.74978638]
[-20.04570389 -285.79513550]
[-18.88044739 -270.84045410]
[-11.40311146 -271.42309570]
[-6.37036133 -285.55358887]
[-1.33761120 -299.68411255]
[-9.40535641 -313.07983398]
[-6.92394638 -328.51928711]
[4.93497324 -338.71243286]
[20.57198334 -338.84637451]
[32.60376358 -328.85784912]
[35.34928131 -313.46316528]
[27.51218033 -299.93121338]
[12.79290295 -294.65136719]
[7.76015234 -280.52084351]
[2.72740221 -266.39031982]
[17.98977280 -240.19363403]
[13.06926823 -212.41470337]
[-7.04035997 -195.76765442]
[-3.34617662 -181.22967529]
[0.34800705 -166.69169617]
[4.26783609 -152.21290588]
[8.41236210 -137.79684448]
[12.55688763 -123.38078308]
[16.70141411 -108.96472168]
[20.84593964 -94.54866028]
[24.99046516 -80.13259125]
[39.02991867 -75.23036957]
[47.59194183 -62.85476303]
[47.22066116 -47.63255692]
[37.84893799 -35.40647888]
[41.99346161 -20.99041367]
[45.67044067 -17.93233871]
[47.46108246 -12.52916145]
[46.03521347 -6.06129551]
[49.72939682 8.47668934]
[53.42358017 23.01467514]
[57.11776352 37.55265808]
[60.81194687 52.09064484]
[64.50613403 66.62863159]
[68.20031738 81.16661835]
[87.31263733 67.50818634]
[109.42906952 68.58056641]
[125.08911896 82.26148224]
[128.61570740 101.38610840]
[141.44778442 109.15384674]
[154.27984619 116.92159271]
[167.11192322 124.68933868]
[180.00401306 132.35707092]
[195.82272339 132.63845825]
[202.90838623 145.73970032]
[215.85971069 153.30694580]
[228.81103516 160.87419128]
[242.96859741 154.80215454]
[257.81338501 158.19120789]
[267.69915771 169.53736877]
[268.99276733 184.35171509]
[281.94409180 191.91894531]
[294.89541626 199.48619080]
[307.84674072 207.05343628]
[320.79806519 214.62068176]
[335.90676880 210.83055115]
[348.93347168 218.68931580]
[352.45364380 233.11650085]
[368.84646606 232.66040039]
[377.20620728 246.76878357]
[368.93313599 260.92816162]
[352.53784180 260.57257080]
[344.88641357 246.06782532]
[330.58959961 250.08483887]
[317.34729004 242.59506226]
[313.23083496 227.57200623]
[300.27951050 220.00476074]
[287.32818604 212.43751526]
[274.37686157 204.87026978]
[261.42553711 197.30303955]
[247.88467407 203.44984436]
[233.14646912 200.40861511]
[222.90533447 189.14039612]
[221.24380493 173.82551575]
[208.29246521 166.25827026]
[195.34114075 158.69102478]
[180.44880676 158.95089722]
[172.43676758 145.30839539]
[165.07022095 144.64784241]
[159.34417725 137.52140808]
[146.51211548 129.75367737]
[133.68003845 121.98592377]
[120.84796143 114.21817780]
[107.83818054 121.68448639]
[108.07145691 136.68266296]
[108.30473328 151.68086243]
[108.53800964 166.67904663]
[122.41248322 173.04000854]
[132.14642334 184.79641724]
[135.80714417 199.61402893]
[132.66781616 214.55081177]
[123.35174561 226.64103699]
[109.70865631 233.48419189]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 195]
[7 194]
[8 193]
[9 192]
[11 22]
[12 21]
[43 143]
[44 142]
[45 141]
[46 140]
[47 139]
[48 138]
[49 137]
[50 134]
[51 133]
[55 129]
[56 128]
[57 127]
[58 126]
[59 125]
[60 124]
[63 123]
[64 122]
[65 121]
[76 94]
[77 93]
[78 92]
[79 91]
[80 90]
[81 88]
[82 87]
[106 118]
[107 117]
[108 116]
[147 191]
[148 190]
[149 189]
[150 188]
[151 186]
[153 184]
[154 183]
[155 182]
[159 178]
[160 177]
[161 176]
[162 175]
[163 174]
[166 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
