%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sat Sep 12 03:42:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCCUGGAGCCAUGAAAAUAUUUGUCUUUAUUUUGGCUGCUCUCAUUCUUCUUGCUCAAAUUUUCCAAGCCAGGACAGCAAUUCAUAGAGCACUAAUUAGUAAGAGAAUGGAAGGUCACUGUGAAGCCGAAUGUCUUACCUUUGAAGUAAAGAUUGGGGGCUGUAGAGCUGAAUUAGCACCAUUUUGCUGCAAAAACAGAAAGAAACAUUAA\
) } def
/len { sequence length } bind def

/coor [
[170.99862671 240.87916565]
[175.27381897 235.28858948]
[180.19947815 230.25849915]
[171.70640564 217.89453125]
[163.12281799 205.59323120]
[154.44915771 193.35527039]
[145.77551270 181.11730957]
[132.10345459 175.20762634]
[130.43618774 159.47451782]
[121.76252747 147.23655701]
[113.08887482 134.99858093]
[104.41522217 122.76062775]
[97.19785309 121.16451263]
[91.42681885 117.52932739]
[87.59136200 112.59087372]
[85.87174988 107.16689301]
[86.14306641 102.04061127]
[88.01953125 97.85671234]
[90.93151855 95.04275513]
[79.36260223 85.49497986]
[67.79367828 75.94719696]
[56.22476196 66.39942169]
[44.65584183 56.85163879]
[33.08692169 47.30385971]
[21.51800156 37.75608063]
[5.94952631 34.93949509]
[1.05840957 20.87086868]
[-10.51051044 11.32308865]
[-22.07942963 1.77530885]
[-33.64834976 -7.77247047]
[-45.21726990 -17.32024956]
[-56.78619003 -26.86803055]
[-72.30732727 -25.55192375]
[-83.90383911 -35.39953232]
[-85.06289673 -50.20467377]
[-96.63181305 -59.75245285]
[-108.20073700 -69.30023193]
[-119.76965332 -78.84801483]
[-131.33857727 -88.39579010]
[-144.22740173 -87.94577026]
[-153.66633606 -96.13440704]
[-154.95362854 -108.16082764]
[-166.38114929 -117.87741089]
[-174.94398499 -121.05123138]
[-177.90374756 -127.82147980]
[-189.18737793 -137.70475769]
[-200.47102356 -147.58804321]
[-211.75466919 -157.47134399]
[-223.03831482 -167.35462952]
[-234.32196045 -177.23791504]
[-242.83728027 -180.53709412]
[-245.69734192 -187.35005188]
[-256.83468628 -197.39791870]
[-267.97201538 -207.44578552]
[-279.10937500 -217.49365234]
[-290.24670410 -227.54151917]
[-301.38406372 -237.58937073]
[-313.84066772 -229.14485168]
[-328.53588867 -224.74041748]
[-344.16748047 -224.94842529]
[-359.29510498 -229.92413330]
[-372.47296143 -239.37561035]
[-382.38778687 -252.57553101]
[-387.98864746 -268.41528320]
[-388.59634399 -285.49731445]
[-401.76632690 -292.67724609]
[-414.93630981 -299.85720825]
[-430.02474976 -295.15463257]
[-443.98010254 -302.57244873]
[-448.52288818 -317.70974731]
[-440.95794678 -331.58590698]
[-425.77343750 -335.96838379]
[-411.97805786 -328.25717163]
[-407.75634766 -313.02719116]
[-394.58636475 -305.84722900]
[-381.41638184 -298.66729736]
[-376.47476196 -304.30911255]
[-366.59146118 -315.59274292]
[-361.64981079 -321.23458862]
[-370.50219727 -333.34390259]
[-385.76333618 -331.61386108]
[-399.83847046 -337.76089478]
[-408.94146729 -350.13146973]
[-410.62365723 -365.39794922]
[-404.43252563 -379.45376587]
[-392.03347778 -388.51794434]
[-376.76181030 -390.15225220]
[-362.72546387 -383.91711426]
[-353.70019531 -371.48971558]
[-352.11376953 -356.21298218]
[-358.39288330 -342.19625854]
[-349.54049683 -330.08694458]
[-332.32180786 -331.73471069]
[-315.70263672 -328.14785767]
[-301.20928955 -319.83853149]
[-290.11721802 -307.74383545]
[-283.33911133 -293.12322998]
[-281.35128784 -277.42868042]
[-284.16384888 -262.16110229]
[-291.33618164 -248.72671509]
[-280.19885254 -238.67886353]
[-269.06149292 -228.63099670]
[-257.92416382 -218.58312988]
[-246.78681946 -208.53526306]
[-235.64947510 -198.48739624]
[-224.43867493 -188.52156067]
[-213.15502930 -178.63827515]
[-201.87138367 -168.75498962]
[-190.58773804 -158.87168884]
[-179.30409241 -148.98840332]
[-168.02044678 -139.10511780]
[-156.66456604 -129.30491638]
[-145.23706055 -119.58834076]
[-127.82890320 -117.36188507]
[-121.79079437 -99.96471405]
[-110.22187805 -90.41693115]
[-98.65295410 -80.86915588]
[-87.08403778 -71.32137299]
[-75.51511383 -61.77359390]
[-60.75891495 -63.44393921]
[-48.89037323 -53.92593765]
[-47.23841095 -38.43695068]
[-35.66949081 -28.88916969]
[-24.10057068 -19.34139061]
[-12.53165054 -9.79361057]
[-0.96273065 -0.24583134]
[10.60618877 9.30194855]
[25.34717751 11.43561363]
[31.06578064 26.18716049]
[42.63470078 35.73493958]
[54.20362091 45.28271866]
[65.77253723 54.83050156]
[77.34146118 64.37828064]
[88.91037750 73.92605591]
[100.47930145 83.47383881]
[115.30145264 85.77684784]
[129.22200012 80.18952179]
[143.14256287 74.60219574]
[157.06311035 69.01486969]
[168.09532166 54.27001953]
[185.35832214 57.43062973]
[199.19535828 51.63955688]
[213.03239441 45.84848404]
[226.86943054 40.05741119]
[240.70645142 34.26633835]
[252.98324585 22.57374001]
[267.61743164 31.13391113]
[263.44296265 47.56589127]
[246.49752808 48.10337067]
[232.66049194 53.89444351]
[218.82347107 59.68551636]
[204.98643494 65.47659302]
[191.14939880 71.26766205]
[186.27365112 82.33649445]
[174.79505920 87.27505493]
[162.65043640 82.93542480]
[148.72988892 88.52275085]
[134.80932617 94.11007690]
[120.88877106 99.69740295]
[116.65318298 114.08697510]
[125.32683563 126.32493591]
[134.00048828 138.56289673]
[142.67414856 150.80085754]
[156.96659851 157.58587646]
[158.01347351 172.44364929]
[166.68711853 184.68161011]
[175.36077881 196.91957092]
[182.87445068 202.10993958]
[184.07038879 209.40145874]
[192.56344604 221.76542664]
[216.45127869 215.59339905]
[240.69854736 219.96067810]
[260.87448120 234.03964233]
[273.30468750 255.23068237]
[275.74026489 279.64227295]
[267.76461792 302.80551147]
[279.47244263 312.18243408]
[291.18029785 321.55935669]
[302.88812256 330.93627930]
[314.59594727 340.31320190]
[330.27502441 338.32772827]
[342.71438599 348.07647705]
[344.53399658 363.77566528]
[334.65426636 376.11126709]
[318.93673706 377.76477051]
[306.70626831 367.75518799]
[305.21902466 352.02102661]
[293.51119995 342.64410400]
[281.80337524 333.26721191]
[270.09552002 323.89028931]
[258.38769531 314.51336670]
[253.07290649 319.04238892]
[247.24430847 322.89190674]
[240.98832703 326.00411987]
[234.39778137 328.33227539]
[227.57057190 329.84115601]
[220.60815430 330.50778198]
[213.61407471 330.32165527]
[206.69242859 329.28503418]
[199.94627380 327.41278076]
[193.47615051 324.73217773]
[187.37854004 321.28259277]
[181.74444580 317.11492920]
[176.65805054 312.29067993]
[172.19540405 306.88128662]
[168.42335510 300.96682739]
[165.39848328 294.63507080]
[163.16632080 287.97991943]
[161.76060486 281.10025024]
[161.20280457 274.09832764]
[161.50175476 267.07830811]
[162.65359497 260.14462280]
[164.64172363 253.40058899]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 170]
[4 169]
[5 167]
[6 166]
[7 165]
[9 163]
[10 162]
[11 161]
[12 160]
[19 135]
[20 134]
[21 133]
[22 132]
[23 131]
[24 130]
[25 129]
[27 127]
[28 126]
[29 125]
[30 124]
[31 123]
[32 122]
[35 119]
[36 118]
[37 117]
[38 116]
[39 115]
[42 113]
[43 112]
[45 111]
[46 110]
[47 109]
[48 108]
[49 107]
[50 106]
[52 105]
[53 104]
[54 103]
[55 102]
[56 101]
[57 100]
[65 76]
[66 75]
[67 74]
[79 92]
[80 91]
[136 159]
[137 158]
[138 157]
[139 156]
[141 153]
[142 152]
[143 151]
[144 150]
[145 149]
[176 191]
[177 190]
[178 189]
[179 188]
[180 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
