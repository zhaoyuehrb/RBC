%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 02:33:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGGUGGCGGGUAUGAUCUCAACCUCUUCGCCAGCCCUCCUGACAGCAACUUCGUGUGCUCCGUCUGCCAUGGGGUUCUCAAGAGGCCAGCAAGGUUGCCAUGCAGCCACAUCUUCUGCAAAAAGUGCAUCCUCCGGUGGCUAGCCAGGGGUGGGGCAGGGCUAGGAGAGAAGGCAGGAGAAUCCCAUCUUCAGAGAGAAACAAGUGCAGCCUUGGGACGACCAGACAUAGCUGAGUUUGGAUCGUGGCUCUAC\
UGCUUAGUUGCUGUGUGA\
) } def
/len { sequence length } bind def

/coor [
[19.22112274 335.18914795]
[6.61885023 338.30682373]
[-6.26238966 336.97100830]
[-13.05691814 350.34390259]
[-19.85144806 363.71679688]
[-26.56920052 377.12844849]
[-33.20995712 390.57833862]
[-39.85071564 404.02825928]
[-46.49147034 417.47817993]
[-53.13222885 430.92810059]
[-59.46284103 444.52676392]
[-65.47998047 458.26699829]
[-71.49712372 472.00723267]
[-72.06667328 481.08557129]
[-77.66282654 485.86987305]
[-83.83711243 499.54022217]
[-81.67269135 515.79589844]
[-94.83158112 525.58239746]
[-109.77704620 518.83221436]
[-111.13446808 502.48934937]
[-97.50745392 493.36593628]
[-91.33316803 479.69561768]
[-85.23735809 465.99008179]
[-79.22021484 452.24984741]
[-73.20307159 438.50961304]
[-74.06614685 435.87973022]
[-73.95919037 432.75561523]
[-72.69110870 429.49798584]
[-70.20231628 426.52932739]
[-66.58214569 424.28735352]
[-59.94139099 410.83743286]
[-53.30063248 397.38751221]
[-46.65987778 383.93759155]
[-40.01911926 370.48767090]
[-39.87622452 363.12655640]
[-33.22434616 356.92227173]
[-26.42981529 343.54937744]
[-19.63528633 330.17648315]
[-30.28128815 317.01663208]
[-34.09825134 300.46875000]
[-30.26715088 283.86712646]
[-19.51506805 270.57885742]
[-3.97777557 263.32080078]
[13.22437191 263.60427856]
[19.71048355 250.07910156]
[26.19659424 236.55392456]
[32.68270493 223.02876282]
[39.16881561 209.50358582]
[45.65492630 195.97840881]
[52.14104080 182.45323181]
[58.62715149 168.92805481]
[65.11325836 155.40287781]
[59.94399261 141.48115540]
[66.32916260 127.67231750]
[80.96659088 122.34470367]
[87.45269775 108.81952667]
[89.59516144 93.97332001]
[87.19770050 79.16615295]
[77.22834015 71.02096558]
[75.51936340 58.66520691]
[82.44516754 48.77618027]
[80.21763611 33.94249725]
[67.79058075 24.55068398]
[65.74285889 9.47548962]
[74.77310181 -2.31392479]
[72.54556274 -17.14760590]
[70.31803131 -31.98128700]
[68.09049225 -46.81496811]
[53.82458115 -56.97011566]
[51.38380432 -73.96869659]
[61.79765701 -87.19579315]
[59.40019226 -102.00295258]
[57.00273132 -116.81011963]
[54.60526657 -131.61729431]
[52.20780182 -146.42445374]
[49.81034088 -161.23161316]
[47.41287613 -176.03878784]
[45.01541138 -190.84594727]
[42.61795044 -205.65312195]
[40.22048569 -220.46028137]
[37.82302475 -235.26745605]
[27.94699669 -239.12751770]
[20.60595131 -246.66696167]
[17.06521416 -256.49084473]
[17.89546394 -266.81945801]
[22.88184166 -275.81072998]
[31.07423592 -281.88873291]
[29.18741226 -296.76959229]
[27.30058861 -311.65042114]
[15.90206146 -314.79479980]
[6.23124838 -321.51919556]
[-0.63200438 -331.03604126]
[-3.93357730 -342.24813843]
[-3.32785130 -353.87509155]
[1.08636248 -364.59945679]
[-9.70107937 -375.02206421]
[-20.48852158 -385.44470215]
[-31.27596283 -395.86730957]
[-42.06340408 -406.28994751]
[-52.85084534 -416.71258545]
[-68.44300842 -423.36996460]
[-66.36213684 -440.19570923]
[-49.61788940 -442.85400391]
[-42.42822266 -427.50000000]
[-31.64077950 -417.07739258]
[-20.85333824 -406.65475464]
[-10.06589699 -396.23214722]
[0.72154516 -385.80950928]
[11.50898647 -375.38690186]
[14.97135067 -377.38946533]
[18.64293480 -378.97622681]
[22.47400856 -380.12564087]
[26.41268158 -380.82214355]
[27.95780182 -395.74234009]
[29.50292015 -410.66256714]
[31.04804039 -425.58276367]
[32.59315872 -440.50299072]
[34.13827896 -455.42318726]
[35.59783936 -470.35202026]
[36.97179031 -485.28894043]
[28.94501114 -490.58779907]
[23.41549492 -498.38677979]
[21.09985542 -507.60293579]
[22.27193642 -516.97479248]
[26.73113251 -525.23522949]
[33.83524704 -531.28253174]
[42.59267426 -534.32751465]
[44.64999008 -549.18572998]
[46.70730591 -564.04400635]
[40.93587875 -578.77496338]
[50.34565735 -590.32073975]
[52.40297318 -605.17901611]
[54.37507629 -620.04876709]
[56.26189804 -634.92962646]
[58.14871979 -649.81048584]
[60.03554535 -664.69134521]
[61.83702850 -679.58282471]
[63.55311203 -694.48431396]
[65.26919556 -709.38580322]
[56.46386719 -722.79644775]
[61.59543228 -737.99670410]
[76.72739410 -743.32617188]
[90.25180817 -734.69659424]
[91.79389954 -718.72778320]
[80.17070770 -707.66973877]
[78.45462799 -692.76824951]
[76.73854065 -677.86669922]
[79.08638763 -670.88861084]
[74.91640472 -662.80456543]
[73.02957916 -647.92370605]
[71.14275360 -633.04284668]
[69.25592804 -618.16198730]
[71.52362061 -611.15740967]
[67.26121521 -603.12170410]
[65.20390320 -588.26342773]
[71.12248230 -574.59521484]
[61.56555176 -561.98669434]
[59.50823593 -547.12841797]
[57.45092010 -532.27020264]
[71.08687592 -517.00274658]
[68.90824890 -496.35086060]
[51.90873337 -483.91500854]
[50.53478241 -468.97805786]
[53.04201508 -462.05560303]
[49.05848694 -453.87805176]
[47.51336670 -438.95785522]
[45.96824646 -424.03765869]
[44.42313004 -409.11743164]
[42.87800980 -394.19723511]
[41.33288956 -379.27703857]
[58.38699341 -367.00643921]
[65.18873596 -346.99792480]
[59.07542419 -326.63977051]
[42.18144608 -313.53726196]
[44.06826782 -298.65640259]
[45.95509338 -283.77554321]
[62.19050217 -272.95269775]
[65.22037506 -253.36659241]
[52.63018799 -237.66491699]
[55.02765274 -222.85774231]
[57.42511749 -208.05058289]
[59.82257843 -193.24342346]
[62.22004318 -178.43624878]
[64.61750793 -163.62908936]
[67.01496887 -148.82191467]
[69.41242981 -134.01475525]
[71.80989838 -119.20758820]
[74.20735931 -104.40042114]
[76.60482025 -89.59325409]
[87.99021149 -83.60635376]
[93.94781494 -71.98675537]
[92.10989380 -58.86257553]
[82.92417145 -49.04250336]
[85.15171051 -34.20882034]
[87.37924194 -19.37514114]
[89.60678101 -4.54146004]
[101.70142365 4.07568455]
[104.17177582 19.08741379]
[95.05131531 31.71496201]
[97.27884674 46.54864502]
[108.93406677 59.68939972]
[102.00485992 76.76869202]
[104.40232849 91.57585907]
[113.89781952 91.01883698]
[123.54943848 98.62802124]
[136.15130615 106.76392365]
[148.75317383 114.89982605]
[161.35504150 123.03572845]
[177.14556885 124.02055359]
[183.64140320 137.42404175]
[196.24327087 145.55993652]
[208.84513855 153.69583130]
[221.44702148 161.83174133]
[220.67327881 146.85169983]
[231.82415771 136.81886292]
[246.63951111 139.16513062]
[254.14472961 152.15251160]
[248.78022766 166.16043091]
[234.51921082 170.81233215]
[246.63421631 179.65692139]
[258.74923706 188.50149536]
[270.86422729 197.34608459]
[283.02972412 206.12106323]
[295.24536133 214.82617188]
[307.46096802 223.53126526]
[319.67657471 232.23635864]
[331.89221191 240.94146729]
[344.10781860 249.64656067]
[358.77749634 244.58885193]
[373.60848999 249.15190125]
[382.89797974 261.58108521]
[383.07397461 277.09716797]
[374.06878662 289.73388672]
[359.34512329 294.63214111]
[344.56448364 289.90847778]
[335.41036987 277.37924194]
[335.40270996 261.86218262]
[323.18710327 253.15707397]
[310.97149658 244.45198059]
[298.75585938 235.74688721]
[286.54025269 227.04177856]
[274.32464600 218.33668518]
[267.08099365 217.01908875]
[262.01965332 209.46109009]
[249.90463257 200.61650085]
[237.78964233 191.77192688]
[225.67463684 182.92733765]
[213.31111145 174.43360901]
[200.70924377 166.29769897]
[188.10737610 158.16180420]
[175.50550842 150.02590942]
[160.61634827 149.62301636]
[153.21914673 135.63758850]
[140.61727905 127.50169373]
[128.01541138 119.36579132]
[115.41353607 111.22989655]
[100.97787476 115.30564117]
[94.49176025 128.83081055]
[99.50109863 143.58020020]
[92.73059082 157.20425415]
[78.63843536 161.88899231]
[72.15232849 175.41416931]
[65.66621399 188.93934631]
[59.18010330 202.46452332]
[52.69399261 215.98968506]
[46.20788193 229.51486206]
[39.72177124 243.04003906]
[33.23565674 256.56521606]
[26.74954796 270.09039307]
[35.69854355 279.75756836]
[40.82803726 291.85668945]
[41.55046463 304.94644165]
[37.80183792 317.47546387]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 38]
[4 37]
[5 36]
[6 34]
[7 33]
[8 32]
[9 31]
[10 30]
[11 25]
[12 24]
[13 23]
[15 22]
[16 21]
[44 269]
[45 268]
[46 267]
[47 266]
[48 265]
[49 264]
[50 263]
[51 262]
[52 261]
[55 258]
[56 257]
[57 203]
[58 202]
[61 200]
[62 199]
[65 196]
[66 195]
[67 194]
[68 193]
[71 189]
[72 188]
[73 187]
[74 186]
[75 185]
[76 184]
[77 183]
[78 182]
[79 181]
[80 180]
[81 179]
[87 176]
[88 175]
[89 174]
[95 109]
[96 108]
[97 107]
[98 106]
[99 105]
[100 104]
[113 170]
[114 169]
[115 168]
[116 167]
[117 166]
[118 165]
[119 163]
[120 162]
[127 159]
[128 158]
[129 157]
[131 155]
[132 154]
[133 152]
[134 151]
[135 150]
[136 149]
[137 147]
[138 146]
[139 145]
[205 256]
[206 255]
[207 254]
[208 253]
[210 251]
[211 250]
[212 249]
[213 248]
[219 247]
[220 246]
[221 245]
[222 244]
[223 242]
[224 241]
[225 240]
[226 239]
[227 238]
[228 237]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
