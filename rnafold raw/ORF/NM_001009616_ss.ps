%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 22:59:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGAAAAGCCCACUUCAAGCACCAAUGGGGAGAAGAGGAAGAGCCCCUGUGACUCCAACAGCAAAAAUGAUGAGAUGCAGGAGACACCAAACAGGGACUUAGUCCUCGAACCGAGUUUGAAAAAGAUGAAAACAUCAGAAUAUUCAACAGUAUUAGUGUUGUGCUACAGGAAGACUAAGAAAAUACAUUCAAAUCAACUGGAGAAUGACCAGUCCUGA\
) } def
/len { sequence length } bind def

/coor [
[105.10785675 141.71540833]
[98.53852844 142.00154114]
[95.35005188 156.65873718]
[92.16157532 171.31594849]
[100.91578674 184.47418213]
[97.71980286 199.95195007]
[84.46974945 208.56655884]
[69.02663422 205.20712280]
[60.55259705 191.86671448]
[64.07512665 176.45999146]
[77.50437164 168.12747192]
[80.69284821 153.47026062]
[83.88132477 138.81306458]
[62.82997513 119.61260986]
[58.86283493 91.39774323]
[44.96400833 85.75658417]
[31.06518555 80.11542511]
[17.16636086 74.47426605]
[3.26753569 68.83310699]
[-10.63128853 63.19194794]
[-24.53011322 57.55078888]
[-21.14727974 72.16436005]
[-30.34812355 84.01106262]
[-45.34428406 84.35043335]
[-55.07162476 72.93207550]
[-52.35333252 58.18043518]
[-39.19589233 50.97929382]
[-54.99400711 51.83380890]
[-63.00157928 39.27482605]
[-76.46255493 32.65650940]
[-86.64641571 39.89300156]
[-98.86921692 42.10279846]
[-110.80274963 38.92729187]
[-120.20028687 31.02777481]
[-125.31961060 19.94886208]
[-125.24578857 7.81674099]
[-138.51228333 0.81673115]
[-151.77877808 -6.18327856]
[-165.04527283 -13.18328857]
[-178.31176758 -20.18329811]
[-196.69459534 -19.05808258]
[-205.44963074 -34.27043533]
[-218.81472778 -41.08029175]
[-232.17982483 -47.89014816]
[-247.98852539 -47.26131058]
[-255.81594849 -59.93335724]
[-269.18103027 -66.74321747]
[-282.54614258 -73.55307007]
[-295.91122437 -80.36293030]
[-309.27633667 -87.17278290]
[-322.64144897 -93.98264313]
[-342.83453369 -85.72003174]
[-362.27371216 -94.98268890]
[-368.41204834 -115.32500458]
[-382.22891235 -121.16405487]
[-396.04574585 -127.00310516]
[-409.86260986 -132.84216309]
[-424.35852051 -127.14071655]
[-438.28759766 -133.25917053]
[-443.63369751 -147.11393738]
[-457.45056152 -152.95298767]
[-467.98913574 -142.03039551]
[-481.76339722 -135.65588379]
[-496.91049194 -134.69157410]
[-511.38189697 -139.26788330]
[-523.22052002 -148.76588440]
[-530.82519531 -161.90106201]
[-533.16754150 -176.89698792]
[-529.93072510 -191.72560120]
[-521.55249023 -204.38142395]
[-509.16598511 -213.15289307]
[-494.44635010 -216.85371399]
[-479.38424683 -214.98339844]
[-466.01678467 -207.79487610]
[-456.15173340 -196.26034546]
[-451.12329102 -181.93975830]
[-451.61151123 -166.76985168]
[-437.79464722 -160.93080139]
[-424.13305664 -166.75283813]
[-410.03762817 -161.02803040]
[-404.02355957 -146.65901184]
[-390.20669556 -140.81996155]
[-376.38986206 -134.98091125]
[-362.57299805 -129.14186096]
[-356.16369629 -134.87069702]
[-348.20297241 -138.22842407]
[-339.54031372 -138.82620239]
[-331.10998535 -136.57131958]
[-323.83038330 -131.68031311]
[-318.50393677 -124.65840149]
[-315.72879028 -116.24748230]
[-315.83157349 -107.34774017]
[-302.46649170 -100.53788757]
[-289.10137939 -93.72802734]
[-275.73629761 -86.91816711]
[-262.37118530 -80.10831451]
[-249.00608826 -73.29845428]
[-234.15335083 -74.41437531]
[-225.36996460 -61.25524521]
[-212.00486755 -54.44538879]
[-198.63977051 -47.63553238]
[-187.04656982 -51.07403183]
[-175.85820007 -45.51546478]
[-171.31175232 -33.44979095]
[-158.04525757 -26.44978333]
[-144.77876282 -19.44977188]
[-131.51228333 -12.44976330]
[-118.24578094 -5.44975281]
[-102.77109528 -13.96974182]
[-85.12510681 -11.46792316]
[-72.40592194 1.24018490]
[-69.84423828 19.19553375]
[-56.38326263 25.81385040]
[-41.54796982 24.48595047]
[-32.57757568 37.51831818]
[-18.88895416 43.65196609]
[-4.99013042 49.29312134]
[8.90869427 54.93428040]
[22.80751991 60.57543945]
[36.70634460 66.21659851]
[50.60516739 71.85775757]
[64.50399017 77.49891663]
[72.39318085 65.33003998]
[84.49509430 56.04409027]
[99.71843719 51.09877396]
[116.47249603 51.52882767]
[125.11508942 39.26890945]
[133.75769043 27.00899315]
[142.40028381 14.74907684]
[143.34172058 -1.62302589]
[158.11070251 -8.75105858]
[171.51419067 0.69768667]
[169.76379395 17.00315094]
[154.66020203 23.39167213]
[146.01760864 35.65158844]
[137.37500000 47.91150284]
[128.73240662 60.17142105]
[133.18400574 66.20742035]
[145.25601196 57.30421829]
[157.32800293 48.40102005]
[169.40014648 39.49802399]
[178.30294800 51.57031250]
[166.23120117 60.47301483]
[154.15921021 69.37621307]
[142.08720398 78.27941132]
[146.53880310 84.31540680]
[160.80465698 79.68015289]
[175.07051086 75.04489899]
[189.33634949 70.40964508]
[203.60220337 65.77439117]
[209.29199219 51.20866776]
[223.03800964 43.75340652]
[238.34980774 46.92875671]
[247.99763489 59.23540878]
[247.42605591 74.86254120]
[236.90496826 86.43150330]
[221.40211487 88.47978210]
[208.23745728 80.04023743]
[193.97160339 84.67549133]
[179.70576477 89.31074524]
[165.43991089 93.94600677]
[151.17407227 98.58126068]
[149.50598145 103.98287201]
[147.28746033 109.00978851]
[144.57960510 113.60818481]
[141.44847107 117.73303223]
[137.96392822 121.34844971]
[134.19848633 124.42803955]
[144.65254211 135.18501282]
[155.10661316 145.94200134]
[165.56066895 156.69897461]
[161.54353333 142.24688721]
[163.48678589 127.37329865]
[172.16137695 115.13600159]
[185.55247498 108.37738800]
[200.54966736 108.66728973]
[213.66955566 115.93836975]
[221.86474609 128.50175476]
[223.23179626 143.43888855]
[208.28656006 142.15827942]
[220.78828430 150.44725037]
[233.28999329 158.73622131]
[248.72778320 155.35240173]
[261.99142456 163.94607544]
[265.21185303 179.41877747]
[256.47842407 192.59082031]
[240.97254944 195.64747620]
[227.89356995 186.77526855]
[225.00102234 171.23794556]
[212.49931335 162.94895935]
[199.99758911 154.65998840]
[194.22557068 159.44891357]
[203.80343628 170.99295044]
[213.38108826 182.53713989]
[201.83674622 192.11460876]
[192.25939941 180.57080078]
[182.68154907 169.02676392]
[176.90953064 173.81570435]
[182.74858093 187.63255310]
[188.58763123 201.44940186]
[194.42668152 215.26626587]
[200.26573181 229.08311462]
[215.26492310 233.50556946]
[223.86915588 246.56318665]
[222.01576233 262.09054565]
[210.57986450 272.75610352]
[194.96113586 273.52392578]
[182.53428650 264.03146362]
[179.16685486 248.76074219]
[186.44888306 234.92216492]
[180.60981750 221.10531616]
[174.77076721 207.28845215]
[168.93171692 193.47160339]
[163.09266663 179.65475464]
[154.80369568 167.15303040]
[144.34962463 156.39605713]
[133.89556885 145.63908386]
[123.44150543 134.88211060]
[117.71363831 138.11157227]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 13]
[3 12]
[4 11]
[15 122]
[16 121]
[17 120]
[18 119]
[19 118]
[20 117]
[21 116]
[27 115]
[29 113]
[30 112]
[36 108]
[37 107]
[38 106]
[39 105]
[40 104]
[42 101]
[43 100]
[44 99]
[46 97]
[47 96]
[48 95]
[49 94]
[50 93]
[51 92]
[54 84]
[55 83]
[56 82]
[57 81]
[60 78]
[61 77]
[126 137]
[127 136]
[128 135]
[129 134]
[146 162]
[147 161]
[148 160]
[149 159]
[150 158]
[168 218]
[169 217]
[170 216]
[171 215]
[180 191]
[181 190]
[182 189]
[198 214]
[199 213]
[200 212]
[201 211]
[202 210]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
