%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 17:19:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGAUGCAGUCAGCCAAGUCCCCAUGGAAGUCGUGCUUCCCAAGCACAUCCUGGAUAUCUGGGUUAUUGUCCUCAUCAUCCUGGCCACCAUUGUCAUCAUGACCUCGUUGUUGCUGUGCCCAGCCACUGCAGUAAUCAUCUAUCGCAUGCGGACUCAUCCGAUCCUUAGUGGGGCUGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[-81.37927246 144.15921021]
[-79.14392090 129.32670593]
[-69.54286194 117.80503082]
[-84.43585968 119.59352112]
[-99.32884979 121.38201141]
[-114.22184753 123.17050171]
[-129.11483765 124.95899200]
[-143.87443542 127.63375092]
[-158.44793701 131.18521118]
[-173.02145386 134.73667908]
[-187.59495544 138.28814697]
[-199.17083740 149.07284546]
[-213.36814880 144.56890869]
[-224.94403076 155.35359192]
[-239.14134216 150.84965515]
[-253.71484375 154.40112305]
[-268.28836060 157.95259094]
[-279.86422729 168.73728943]
[-294.06155396 164.23335266]
[-308.63504028 167.78480530]
[-316.87219238 181.00552368]
[-331.70239258 184.39961243]
[-344.25555420 176.46528625]
[-358.82907104 180.01675415]
[-373.40255737 183.56822205]
[-381.02099609 188.65196228]
[-388.25518799 187.05366516]
[-402.88720703 190.35578918]
[-417.51922607 193.65792847]
[-421.46774292 202.26716614]
[-428.83489990 207.99806213]
[-437.87985229 209.65742493]
[-446.53802490 206.99571228]
[-452.89239502 200.73522949]
[-467.67428589 203.28387451]
[-482.45617676 205.83253479]
[-497.23806763 208.38119507]
[-512.01995850 210.92984009]
[-526.80181885 213.47850037]
[-541.38336182 222.12815857]
[-553.73150635 210.51098633]
[-545.98663330 195.42941284]
[-529.35052490 198.69660950]
[-514.56860352 196.14794922]
[-499.78671265 193.59930420]
[-485.00482178 191.05064392]
[-470.22293091 188.50198364]
[-455.44104004 185.95332336]
[-440.82943726 171.39506531]
[-420.82135010 179.02590942]
[-406.18933105 175.72377014]
[-391.55734253 172.42164612]
[-376.95404053 168.99472046]
[-362.38052368 165.44325256]
[-347.80703735 161.89178467]
[-340.31155396 149.07174683]
[-325.58255005 145.26245117]
[-312.18652344 153.21130371]
[-297.61300659 149.65983582]
[-287.07952881 139.12916565]
[-271.83981323 143.37908936]
[-257.26632690 139.82762146]
[-242.69281006 136.27615356]
[-232.15933228 125.74548340]
[-216.91961670 129.99539185]
[-206.38613892 119.46472168]
[-191.14642334 123.71463776]
[-176.57292175 120.16317749]
[-161.99940491 116.61170959]
[-147.42590332 113.06024170]
[-160.19458008 105.18872070]
[-165.05252075 90.99716187]
[-159.78619385 76.95202637]
[-146.79521179 69.45306396]
[-131.99899292 71.91721344]
[-122.13952637 83.22167969]
[-121.70932007 98.21550751]
[-130.90333557 110.06600189]
[-116.01033783 108.27751160]
[-101.11734009 106.48901367]
[-86.22434998 104.70052338]
[-71.33135223 102.91203308]
[-62.90740967 96.37520599]
[-51.23828506 99.09329987]
[-36.72753906 95.29353333]
[-22.21679115 91.49377441]
[-7.70604324 87.69400787]
[-2.01822877 82.94670105]
[7.08491039 83.95549774]
[21.65841675 80.40403748]
[36.23192215 76.85256958]
[50.80542755 73.30110168]
[65.37893677 69.74963379]
[75.98553467 59.14303589]
[79.53700256 44.56952667]
[83.08847046 29.99602127]
[86.63993835 15.42251587]
[84.51565552 -1.39782250]
[100.09059143 -8.09541893]
[110.83801270 5.01675987]
[101.21343994 18.97398186]
[97.66197968 33.54748917]
[94.11051178 48.12099457]
[90.55904388 62.69449997]
[96.79506683 66.86127472]
[105.12861633 54.38923264]
[113.46237946 41.91732788]
[125.93415070 50.25129318]
[117.60066223 62.72278595]
[109.26711273 75.19483185]
[115.50313568 79.36161041]
[127.60820770 70.50344086]
[134.17579651 56.10978699]
[149.01599121 54.83780670]
[161.12106323 45.97964096]
[173.22615051 37.12147522]
[185.33122253 28.26330757]
[191.45150757 13.04903030]
[207.72344971 11.01041222]
[217.40786743 24.24460793]
[210.54226685 39.13741302]
[194.18939209 40.36838531]
[182.08432007 49.22655106]
[169.97923279 58.08471680]
[157.87416077 66.94288635]
[152.17240906 80.70294189]
[136.46636963 82.60852051]
[124.36129761 91.46668243]
[128.89901733 105.76385498]
[143.89683533 106.01995087]
[158.89463806 106.27604675]
[172.82490540 98.77548218]
[185.41822815 106.72895050]
[200.41603088 106.98504639]
[215.41384888 107.24114227]
[226.60273743 96.07940674]
[242.40669250 96.18215179]
[253.44950867 107.48841858]
[253.17968750 123.29040527]
[241.75729370 134.21307373]
[225.95904541 133.77618408]
[215.15776062 122.23896027]
[200.15994263 121.98286438]
[185.16212463 121.72676849]
[172.30461121 129.24565125]
[158.63854980 121.27386475]
[143.64073181 121.01776886]
[128.64291382 120.76167297]
[126.25234222 127.87047577]
[121.47119141 142.08808899]
[119.08061218 149.19689941]
[131.18569946 158.05506897]
[143.29077148 166.91323853]
[155.39584351 175.77139282]
[171.74873352 177.00236511]
[178.61431885 191.89517212]
[168.92990112 205.12936401]
[152.65795898 203.09075928]
[146.53767395 187.87648010]
[134.43260193 179.01831055]
[122.32752228 170.16014099]
[110.22245026 161.30197144]
[91.32376099 157.59175110]
[75.66963959 148.58294678]
[64.56915283 135.88362122]
[58.67142868 121.35800934]
[57.94520950 106.88278961]
[61.74198151 94.11853790]
[68.93040466 84.32314301]
[54.35689545 87.87461090]
[39.78339005 91.42607880]
[25.20988274 94.97753906]
[10.63637638 98.52900696]
[-3.90628028 102.20475769]
[-18.41702843 106.00451660]
[-32.92777634 109.80428314]
[-47.43852234 113.60404205]
[-34.27833939 120.80192566]
[-26.75860977 133.78089905]
[-27.05958557 148.77787781]
[-35.09400177 161.44468689]
[-48.53238297 168.10876465]
[-63.47845459 166.83793640]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 82]
[4 81]
[5 80]
[6 79]
[7 78]
[8 70]
[9 69]
[10 68]
[11 67]
[13 65]
[15 63]
[16 62]
[17 61]
[19 59]
[20 58]
[23 55]
[24 54]
[25 53]
[27 52]
[28 51]
[29 50]
[34 48]
[35 47]
[36 46]
[37 45]
[38 44]
[39 43]
[84 177]
[85 176]
[86 175]
[87 174]
[89 173]
[90 172]
[91 171]
[92 170]
[93 169]
[94 104]
[95 103]
[96 102]
[97 101]
[111 128]
[112 127]
[114 125]
[115 124]
[116 123]
[117 122]
[129 148]
[130 147]
[131 146]
[133 144]
[134 143]
[135 142]
[151 162]
[152 161]
[153 160]
[154 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
