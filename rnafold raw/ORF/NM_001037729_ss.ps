%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 19:45:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAAGAUACUUUGUAUUUUUCUGACCUUUGUCUUCACUGUGUCUUGUGGUCCAUCAGUUCCACAGAAAAAAACAAGAGAAGUUGCAGAGAGAAAAAGAGAAUGUCAGCUUGUUCGUGGUGCUUGCAAGCCGGAAUGCAACAGCUGGGAAUAUGUAUAUUAUUACUGCAAUGUUAACCCCUGCUGUGCGGUAUGGGAAUACCAAAAGCCAAUCAUUAACAAAAUCACUAGUAAACUCCAUCAAAAAUAA\
) } def
/len { sequence length } bind def

/coor [
[-164.36235046 276.18951416]
[-159.80294800 261.89923096]
[-152.86323547 248.60112000]
[-143.74830627 236.68817139]
[-132.72756958 226.51254272]
[-120.13400269 218.37881470]
[-134.93429565 220.81837463]
[-149.73458862 223.25793457]
[-164.53486633 225.69749451]
[-179.30334473 228.32283020]
[-194.03764343 231.13356018]
[-208.77195740 233.94427490]
[-223.50627136 236.75498962]
[-230.18399048 250.63714600]
[-243.59873962 257.84118652]
[-258.50686646 255.78901672]
[-269.21972656 245.47531128]
[-283.95404053 248.28602600]
[-298.68835449 251.09674072]
[-313.42266846 253.90747070]
[-328.15698242 256.71817017]
[-342.89129639 259.52890015]
[-357.62557983 262.33963013]
[-372.35989380 265.15032959]
[-379.03762817 279.03250122]
[-392.45236206 286.23651123]
[-407.36050415 284.18435669]
[-418.07336426 273.87066650]
[-432.80767822 276.68136597]
[-447.54199219 279.49209595]
[-459.64788818 289.67825317]
[-473.59957886 284.46282959]
[-488.33386230 287.27355957]
[-503.06817627 290.08428955]
[-517.80249023 292.89498901]
[-520.27679443 307.83163452]
[-527.69824219 320.99578857]
[-539.15417480 330.80810547]
[-553.24945068 336.09893799]
[-568.27606201 336.24783325]
[-582.42022705 331.25610352]
[-593.98120117 321.74441528]
[-601.57598877 308.87564087]
[-616.31030273 311.68637085]
[-631.04461670 314.49710083]
[-638.86419678 319.16809082]
[-645.98162842 317.24932861]
[-660.75012207 319.87466431]
[-675.51855469 322.50003052]
[-690.28704834 325.12536621]
[-699.34155273 337.80032349]
[-714.35626221 340.25241089]
[-726.38409424 331.54223633]
[-738.57659912 342.50918579]
[-754.08465576 337.17703247]
[-756.95489502 321.03100586]
[-744.23461914 310.68078613]
[-729.00939941 316.77377319]
[-720.72039795 304.45193481]
[-705.78045654 301.57907104]
[-692.91241455 310.35690308]
[-678.14392090 307.73156738]
[-663.37548828 305.10620117]
[-648.60699463 302.48086548]
[-633.85534668 299.76278687]
[-619.12103271 296.95205688]
[-604.38671875 294.14132690]
[-602.06256104 279.38046265]
[-594.81494141 266.28082275]
[-583.50158691 256.43280029]
[-569.47540283 251.03956604]
[-554.42224121 250.77006531]
[-540.15863037 255.67610168]
[-528.41229248 265.18380737]
[-520.61322021 278.16070557]
[-505.87890625 275.34997559]
[-491.14459229 272.53924561]
[-476.41027832 269.72854614]
[-465.35827637 259.74343872]
[-450.35272217 264.75778198]
[-435.61840820 261.94705200]
[-420.88409424 259.13635254]
[-414.72027588 245.60324097]
[-401.61447144 238.20713806]
[-386.48977661 239.96697998]
[-375.17062378 250.41603088]
[-360.43630981 247.60531616]
[-345.70199585 244.79460144]
[-330.96768188 241.98387146]
[-316.23339844 239.17315674]
[-301.49908447 236.36244202]
[-286.76477051 233.55171204]
[-272.03045654 230.74099731]
[-265.86663818 217.20788574]
[-252.76083374 209.81178284]
[-237.63613892 211.57162476]
[-226.31698608 222.02069092]
[-211.58267212 219.20996094]
[-196.84837341 216.39924622]
[-182.11405945 213.58853149]
[-178.74816895 210.23283386]
[-173.24681091 208.94017029]
[-166.97442627 210.89720154]
[-152.17414856 208.45764160]
[-137.37385559 206.01808167]
[-122.57356262 203.57852173]
[-120.17203522 200.42149353]
[-116.52421570 198.09638977]
[-111.94816589 197.08175659]
[-106.93925476 197.72688293]
[-94.17433167 189.84925842]
[-81.40941620 181.97163391]
[-68.64450073 174.09402466]
[-55.87958145 166.21640015]
[-49.11217880 152.94795227]
[-33.30487442 152.28486633]
[-20.53995705 144.40724182]
[-7.77504015 136.52961731]
[4.98987722 128.65200806]
[17.75479507 120.77438354]
[30.41971397 112.73697662]
[42.98263550 104.54106140]
[55.54555511 96.34514618]
[68.10847473 88.14923096]
[76.30438995 75.58631134]
[78.74394989 60.78602219]
[81.18350220 45.98573303]
[70.18502045 35.03982162]
[67.75415802 19.71433449]
[74.82562256 5.90223932]
[88.68029785 -1.08543313]
[103.99078369 1.43822002]
[114.86987305 12.50280285]
[117.13434601 27.85375786]
[109.91345978 41.58832932]
[95.98379517 48.42529297]
[93.54423523 63.22558212]
[91.10468292 78.02587128]
[100.03942871 70.78267670]
[113.11796570 67.84443665]
[125.36306000 59.18084717]
[137.60813904 50.51725769]
[149.85324097 41.85366821]
[162.09832764 33.19007492]
[168.89509583 18.90321159]
[183.75372314 17.86854935]
[195.99880981 9.20495796]
[208.24389648 0.54136747]
[220.32351685 -8.35148525]
[232.23336792 -17.47043991]
[244.14321899 -26.58939362]
[256.05307007 -35.70834732]
[267.96295166 -44.82730103]
[279.81524658 -54.02090836]
[291.60958862 -63.28880310]
[303.40390015 -72.55669403]
[315.13977051 -81.89851379]
[326.81671143 -91.31388092]
[332.21774292 -106.79810333]
[348.37634277 -109.59655762]
[358.66995239 -96.83043671]
[352.50936890 -81.63243103]
[336.23208618 -79.63694763]
[324.55514526 -70.22158051]
[321.32916260 -63.59339905]
[312.67181396 -60.76237106]
[300.87747192 -51.49447632]
[289.08316040 -42.22658157]
[285.77413940 -35.63946152]
[277.08187866 -32.91744614]
[265.17202759 -23.79849243]
[253.26217651 -14.67953777]
[241.35232544 -5.56058311]
[229.44247437 3.55837107]
[228.61386108 6.96103859]
[226.11073303 10.13691425]
[222.05496216 12.30993176]
[216.90748596 12.78645611]
[204.66239929 21.45004654]
[192.41731262 30.11363792]
[186.49638367 43.78082275]
[170.76191711 45.43516541]
[158.51683044 54.09875488]
[146.27172852 62.76234436]
[134.02664185 71.42593384]
[121.78155518 80.08953094]
[123.32553101 87.42888641]
[126.41346741 102.10759735]
[127.95743561 109.44695282]
[142.65525818 112.44260406]
[157.35308838 115.43825531]
[172.05091858 118.43390656]
[186.74873352 121.42955017]
[202.12228394 115.72109985]
[214.57841492 126.38772583]
[211.30332947 142.45651245]
[195.66616821 147.39727783]
[183.75309753 136.12738037]
[169.05526733 133.13172913]
[154.35743713 130.13607788]
[139.65960693 127.14042664]
[124.96178436 124.14478302]
[100.65537262 131.04745483]
[81.14061737 119.84959412]
[76.30438995 100.71215057]
[63.74147034 108.90806580]
[51.17855072 117.10398102]
[38.61562729 125.29989624]
[35.31132126 130.97917175]
[30.38100624 133.74107361]
[25.63241386 133.53929138]
[12.86749649 141.41691589]
[0.10257922 149.29454041]
[-12.66233826 157.17214966]
[-25.42725563 165.04977417]
[-33.10769272 178.88168335]
[-48.00196457 178.98132324]
[-60.76688004 186.85893250]
[-73.53179932 194.73655701]
[-86.29671478 202.61418152]
[-99.06163025 210.49179077]
[-84.21425629 208.35745239]
[-69.22071838 208.79779053]
[-54.52418900 211.79977417]
[-40.55904388 217.27470398]
[-27.73805428 225.06072998]
[-16.44016647 234.92773438]
[-6.99931288 246.58407593]
[0.30546597 259.68521118]
[5.25826216 273.84396362]
[7.71268702 288.64178467]
[7.59619522 303.64132690]
[4.91222954 318.39926147]
[-0.25987989 332.47937012]
[-7.76726151 345.46548462]
[-17.38802147 356.97378540]
[-28.83779716 366.66412354]
[-41.77817154 374.25006104]
[-55.82666779 379.50741577]
[-70.56805420 382.28079224]
[-85.56661987 382.48818970]
[-100.37905121 380.12350464]
[-114.56755066 375.25662231]
[-127.71273804 368.03137207]
[-139.42608643 358.66134644]
[-149.36138916 347.42349243]
[-157.22497559 334.64990234]
[-162.78443909 320.71820068]
[-165.87545776 306.04016113]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 106]
[7 105]
[8 104]
[9 103]
[10 100]
[11 99]
[12 98]
[13 97]
[17 93]
[18 92]
[19 91]
[20 90]
[21 89]
[22 88]
[23 87]
[24 86]
[28 82]
[29 81]
[30 80]
[32 78]
[33 77]
[34 76]
[35 75]
[43 67]
[44 66]
[45 65]
[47 64]
[48 63]
[49 62]
[50 61]
[53 58]
[110 221]
[111 220]
[112 219]
[113 218]
[114 217]
[116 215]
[117 214]
[118 213]
[119 212]
[120 211]
[121 208]
[122 207]
[123 206]
[124 205]
[125 138]
[126 137]
[127 136]
[140 186]
[141 185]
[142 184]
[143 183]
[144 182]
[146 180]
[147 179]
[148 178]
[149 174]
[150 173]
[151 172]
[152 171]
[153 170]
[154 168]
[155 167]
[156 166]
[157 164]
[158 163]
[189 202]
[190 201]
[191 200]
[192 199]
[193 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
