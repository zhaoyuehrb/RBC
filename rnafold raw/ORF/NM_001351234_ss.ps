%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Sep  9 23:51:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGAGGAAGUGGUGAAGGAGGUGGUGGGACAUGCCAAGGAGACUGGAGAGAAAGCCAUUGCCGAAGCCAUAAAGAAAGCCCAAGAGUCAGGGGACAAAAAGAUGAAGGAAGUCACUGAGACAGUGACCAACACAGUCACAAAUGCCAUCACCCAUGCAGCAGAGAGUCUGGGCAAACUUGGACAGUGA\
) } def
/len { sequence length } bind def

/coor [
[122.03328705 160.24118042]
[111.22402954 163.15447998]
[100.07289124 164.14405823]
[88.91952515 163.17982483]
[78.10367584 160.29110718]
[67.95478821 155.56591797]
[58.78200531 149.14817810]
[50.86473083 141.23338318]
[44.44412231 132.06260681]
[39.71575165 121.91519928]
[25.11585426 125.35655975]
[10.51595497 128.79791260]
[-4.08394384 132.23927307]
[-18.68384171 135.68063354]
[-24.75879097 149.83694458]
[-37.85153580 157.61083984]
[-52.83409500 156.20129395]
[-63.98030853 146.35751343]
[-78.58020782 149.79887390]
[-90.23715973 160.49588013]
[-104.40007782 155.88490295]
[-118.99997711 159.32626343]
[-133.59986877 162.76762390]
[-148.19976807 166.20898438]
[-162.79966736 169.65034485]
[-177.39956665 173.09170532]
[-178.75369263 187.36506653]
[-184.44363403 200.50173950]
[-193.90029907 211.22113037]
[-206.18806458 218.48275757]
[-220.09744263 221.58724976]
[-234.26400757 220.24368286]
[-247.30238342 214.59675598]
[-257.94155884 205.21141052]
[-265.14895630 193.01622009]
[-279.80374146 196.21571350]
[-294.45855713 199.41520691]
[-302.19177246 204.31130981]
[-309.38204956 202.54434204]
[-321.32489014 213.78268433]
[-336.94894409 208.80056763]
[-340.18148804 192.72317505]
[-327.69717407 182.08953857]
[-312.33880615 187.83863831]
[-297.65805054 184.76040649]
[-283.00323486 181.56091309]
[-268.34844971 178.36141968]
[-266.44281006 162.74098206]
[-259.29431152 148.69201660]
[-247.74986267 137.91950989]
[-233.19116211 131.73786926]
[-217.36924744 130.91052246]
[-202.19392395 135.55570984]
[-189.50326538 145.13000488]
[-180.84092712 158.49180603]
[-166.24102783 155.05044556]
[-151.64112854 151.60908508]
[-137.04122925 148.16772461]
[-122.44132996 144.72636414]
[-107.84143066 141.28500366]
[-97.22875977 130.83415222]
[-82.02156830 135.19897461]
[-67.42166901 131.75761414]
[-61.84514236 117.97210693]
[-49.06932068 110.01959991]
[-33.88296890 111.12779236]
[-22.12520218 121.08073425]
[-7.52530241 117.63938141]
[7.07459641 114.19802094]
[21.67449570 110.75666046]
[36.27439499 107.31529999]
[35.32567596 96.25281525]
[36.30195236 85.08266449]
[39.21159363 74.14052582]
[44.00433350 63.76164246]
[50.57168579 54.27056503]
[58.74918365 45.97101212]
[68.32035065 39.13622665]
[79.02235413 34.00006485]
[90.55319214 30.74914742]
[86.39215088 16.33784103]
[82.23110199 1.92653668]
[67.59482574 -3.22699070]
[58.81072235 -16.01836205]
[59.25646591 -31.52903366]
[68.76065826 -43.79483795]
[83.66874695 -48.09931946]
[98.24826050 -42.78731918]
[106.89308929 -29.90140915]
[106.27910614 -14.39648533]
[96.64241028 -2.23450685]
[100.80345154 12.17679787]
[104.96450043 26.58810425]
[112.18710327 28.60898399]
[115.44459534 13.96696281]
[118.70207977 -0.67505825]
[121.95957184 -15.31707859]
[125.21705627 -29.95909882]
[128.47454834 -44.60112000]
[131.73204041 -59.24314117]
[131.60438538 -74.24259949]
[143.51637268 -83.35876465]
[157.96138000 -79.31629181]
[163.41127014 -65.34136200]
[155.51803589 -52.58783722]
[150.70375061 -38.38140869]
[145.88946533 -24.17497635]
[141.07518005 -9.96854687]
[136.26089478 4.23788261]
[131.44660950 18.44431305]
[126.63231659 32.65074158]
[133.85491943 34.67162323]
[144.89077759 24.51239967]
[155.92663574 14.35317516]
[166.96249390 4.19395161]
[177.99835205 -5.96527195]
[189.03421021 -16.12449646]
[200.07008362 -26.28372002]
[207.62823486 -41.45970917]
[224.30343628 -38.39805984]
[225.97760010 -21.52697563]
[210.22929382 -15.24786091]
[199.19343567 -5.08863688]
[188.15757751 5.07058668]
[177.12171936 15.22981071]
[166.08586121 25.38903427]
[155.05000305 35.54825592]
[144.01414490 45.70748138]
[158.29524231 64.11436462]
[165.48905945 85.76564026]
[165.07963562 108.09484863]
[157.43307495 128.56410217]
[169.99057007 136.76832581]
[182.54806519 144.97254944]
[198.33300781 146.04312134]
[204.75595093 159.48168945]
[217.31346130 167.68591309]
[229.87095642 175.89013672]
[238.78433228 177.97003174]
[242.56669617 184.33525085]
[254.98683167 192.74598694]
[267.40695190 201.15670776]
[287.54705811 201.67250061]
[295.26486206 219.39028931]
[307.95629883 227.38577271]
[320.64770508 235.38124084]
[333.33914185 243.37672424]
[347.69155884 237.78080750]
[362.41491699 241.66365051]
[371.91632080 253.33357239]
[372.71453857 268.18283081]
[385.40597534 276.17831421]
[398.16305542 284.06860352]
[413.33352661 280.53375244]
[426.22586060 288.61105347]
[429.50228882 303.09555054]
[442.32415771 310.88009644]
[459.00122070 313.93176270]
[460.68548584 330.80181885]
[444.94094849 337.09036255]
[434.53964233 323.70199585]
[421.71774292 315.91744995]
[407.35522461 319.69281006]
[394.24108887 311.98083496]
[390.37850952 296.89050293]
[383.01608276 296.10519409]
[377.41049194 288.86975098]
[364.71905518 280.87426758]
[350.98052979 286.56552124]
[336.35208130 283.03387451]
[326.49291992 271.42996216]
[325.34365845 256.06814575]
[312.65225220 248.07267761]
[299.96081543 240.07719421]
[287.26937866 232.08172607]
[277.52664185 235.23474121]
[267.44784546 232.43661499]
[260.43609619 224.38093567]
[258.99624634 213.57684326]
[246.57609558 205.16612244]
[234.15597534 196.75538635]
[221.66673279 188.44763184]
[209.10923767 180.24340820]
[196.55172729 172.03918457]
[181.66499329 171.55543518]
[174.34384155 157.53004456]
[161.78634644 149.32583618]
[149.22885132 141.12161255]
[141.32958984 149.05438232]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 71]
[11 70]
[12 69]
[13 68]
[14 67]
[18 63]
[19 62]
[21 60]
[22 59]
[23 58]
[24 57]
[25 56]
[26 55]
[35 47]
[36 46]
[37 45]
[39 44]
[80 93]
[81 92]
[82 91]
[112 128]
[113 127]
[114 126]
[115 125]
[116 124]
[117 123]
[118 122]
[132 188]
[133 187]
[134 186]
[136 184]
[137 183]
[138 182]
[140 181]
[141 180]
[142 179]
[144 175]
[145 174]
[146 173]
[147 172]
[151 168]
[152 167]
[153 165]
[156 162]
[157 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
