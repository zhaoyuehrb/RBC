%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 07:51:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAAAGGCCAGCUUCGAAGAAAAGCUGAAAGGGAGACGUUUGCAAGACGAGUUGUACUGCUGUCACAGGAAAUGGACGCUGGAUUACAAGCAUGGCAGCUCAGGCAGCAGAAGUUGCAGGAAGAACAAAGGAAGCAGGAAAAUGCUCUUAAACCCAAAGGGGCUUCACUGAAGAGCCCACUUCCAAGUCAAUAA\
) } def
/len { sequence length } bind def

/coor [
[85.00302887 256.19970703]
[71.36319733 249.35006714]
[62.05288696 237.25540161]
[58.92066956 222.31712341]
[62.58844757 207.50125122]
[72.32798004 195.74948120]
[86.20547485 189.39512634]
[86.44589233 174.39704895]
[86.68630981 159.39897156]
[72.41305542 154.78659058]
[63.83130264 167.08917236]
[55.24955368 179.39175415]
[46.66780472 191.69435120]
[38.08605576 203.99693298]
[29.50430489 216.29951477]
[33.75291443 231.34887695]
[27.28688812 245.58700562]
[13.15928650 252.29110718]
[-1.95926809 248.29570007]
[-10.93025684 235.48728943]
[-9.51785374 219.91362000]
[1.61104774 208.92810059]
[17.20172119 207.71775818]
[25.78347015 195.41517639]
[34.36521912 183.11259460]
[42.94697189 170.81001282]
[51.52872086 158.50743103]
[60.11046982 146.20484924]
[50.47889328 134.70559692]
[36.86178207 140.99641418]
[23.24467087 147.28721619]
[13.96170044 160.09881592]
[-0.83713746 158.41249084]
[-9.84382057 172.11692810]
[-26.19768906 170.89913940]
[-33.07528687 156.01187134]
[-23.40152740 142.76988220]
[-7.12794876 144.79537964]
[1.18103611 132.43374634]
[16.95386124 133.67010498]
[30.57097054 127.37929535]
[44.18807983 121.08848572]
[43.21890640 113.13234711]
[43.35076904 105.30085754]
[44.53246689 97.74230194]
[46.69335556 90.59346008]
[49.74551773 83.97714996]
[53.58620453 78.00012970]
[58.10054398 72.75138092]
[63.16443634 68.30084991]
[53.44100952 56.87915802]
[43.71758270 45.45746613]
[33.99415970 34.03577805]
[24.27073288 22.61408997]
[14.54730606 11.19239998]
[4.82388067 -0.22928953]
[-10.68854046 -1.64440370]
[-20.38677025 -13.36613464]
[-18.94207764 -28.14613724]
[-28.66550446 -39.56782532]
[-38.38893127 -50.98951721]
[-48.11235428 -62.41120529]
[-58.19686890 -73.51537323]
[-68.63211060 -84.29061127]
[-79.06734467 -95.06585693]
[-87.29634857 -99.06014252]
[-89.58176422 -106.09842682]
[-99.84295654 -117.03953552]
[-110.10414886 -127.98064423]
[-125.04101562 -124.40493774]
[-139.75999451 -128.79208374]
[-150.30177307 -139.96199036]
[-153.83064270 -154.90998840]
[-149.39736938 -169.61514282]
[-138.19447327 -180.12185669]
[-123.23548889 -183.60385132]
[-108.54430389 -179.12451172]
[-98.07276154 -167.88874817]
[-94.63767242 -152.91891479]
[-99.16304016 -138.24183655]
[-88.90184784 -127.30072784]
[-78.64065552 -116.35961914]
[-68.29210663 -105.50109100]
[-57.85686874 -94.72585297]
[-47.42162704 -83.95061493]
[-44.61192703 -83.77714539]
[-41.70223236 -82.47326660]
[-39.12602997 -79.99547577]
[-37.32442856 -76.45877075]
[-36.69066620 -72.13462830]
[-26.96724129 -60.71294022]
[-17.24381447 -49.29125214]
[-7.52038860 -37.86956406]
[7.30073261 -36.93685150]
[17.32437515 -25.49214745]
[16.24556923 -9.95271587]
[25.96899605 1.46897388]
[35.69242096 12.89066315]
[45.41584778 24.31235313]
[55.13927460 35.73404312]
[64.86270142 47.15573120]
[74.58612823 58.57741928]
[86.83798981 53.21905518]
[100.08644867 51.40280151]
[113.32835388 53.26617813]
[119.61916351 39.64906693]
[125.90997314 26.03195763]
[132.20079041 12.41484737]
[138.49159241 -1.20226324]
[136.46609497 -17.47584152]
[149.70808411 -27.14959908]
[164.59535217 -20.27200317]
[165.81315613 -3.91813517]
[152.10870361 5.08854818]
[145.81790161 18.70565796]
[139.52708435 32.32276917]
[133.23626709 45.93988037]
[126.94546509 59.55698776]
[143.08630371 77.52189636]
[148.58618164 101.03820038]
[163.35363770 103.66922760]
[178.12109375 106.30025482]
[192.88854980 108.93128204]
[207.65600586 111.56230927]
[211.79216003 102.80803680]
[219.22932434 95.62577057]
[229.32386780 91.26193237]
[240.96662903 90.68669128]
[252.70364380 94.42357635]
[262.91748047 102.43176270]
[277.54141235 99.09394836]
[292.16531372 95.75613403]
[306.78924561 92.41831970]
[314.47076416 87.45195770]
[321.67425537 89.14618683]
[336.34979248 86.04319763]
[351.02532959 82.94020081]
[359.43600464 69.55974579]
[374.86297607 66.12707520]
[388.15377808 74.67872620]
[391.42315674 90.14115906]
[382.73144531 103.34078217]
[367.23532104 106.44649506]
[354.12832642 97.61573792]
[339.45278931 100.71873474]
[324.77725220 103.82173157]
[310.12704468 107.04223633]
[295.50314331 110.38005066]
[280.87921143 113.71786499]
[266.25531006 117.05567932]
[264.35290527 124.31038666]
[278.86230469 128.11520386]
[293.37173462 131.92002869]
[307.88116455 135.72483826]
[322.39053345 139.52990723]
[318.58520508 154.03919983]
[304.07635498 150.23426819]
[289.56692505 146.42944336]
[275.05749512 142.62463379]
[260.54806519 138.81980896]
[258.64566040 146.07452393]
[269.74984741 156.15904236]
[280.85400391 166.24354553]
[291.95816040 176.32806396]
[303.06234741 186.41258240]
[314.16650391 196.49708557]
[329.63562012 194.20783997]
[342.92999268 202.44151306]
[347.77246094 217.31042480]
[341.87652588 231.79393005]
[328.02609253 239.05335999]
[312.76089478 235.66104126]
[303.28869629 223.21870422]
[304.08200073 207.60125732]
[292.97784424 197.51675415]
[281.87365723 187.43223572]
[270.76950073 177.34771729]
[259.66531372 167.26321411]
[248.56115723 157.17869568]
[216.02998352 151.73626709]
[205.02497864 126.32975769]
[190.25752258 123.69873047]
[175.49006653 121.06770325]
[160.72261047 118.43668365]
[145.95515442 115.80565643]
[138.78628540 135.06338501]
[123.43593597 150.83213806]
[101.68438721 159.63938904]
[101.44396973 174.63746643]
[101.20355225 189.63554382]
[114.87025452 196.43142700]
[124.22811890 208.48933411]
[127.41913605 223.41514587]
[123.80973816 238.24536133]
[114.11655426 250.03540039]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 190]
[8 189]
[9 188]
[10 28]
[11 27]
[12 26]
[13 25]
[14 24]
[15 23]
[29 42]
[30 41]
[31 40]
[33 38]
[50 102]
[51 101]
[52 100]
[53 99]
[54 98]
[55 97]
[56 96]
[59 93]
[60 92]
[61 91]
[62 90]
[63 85]
[64 84]
[65 83]
[67 82]
[68 81]
[69 80]
[105 118]
[106 117]
[107 116]
[108 115]
[109 114]
[120 185]
[121 184]
[122 183]
[123 182]
[124 181]
[130 150]
[131 149]
[132 148]
[133 147]
[135 146]
[136 145]
[137 144]
[161 179]
[162 178]
[163 177]
[164 176]
[165 175]
[166 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
