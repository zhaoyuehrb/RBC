%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 05:24:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGCACAGUCACAAGGGUGGGUGAAAAGAUACAUCAAGGCCUUUUGUAAAGGCUUCUUUGUGGCGGUGCCUGUGGCAGUGACUUUCUUGGAUCGGGUCGCCUGUGUGGCAAGAGUAGAAGGAGCAUCGAUGCAGCCUUCUUUGAAUCCUGGGGGGAGCCAGUCAUCUGAUGUGGUGCUUUUGAACCACUGGAAAGUGAGGAAUUUUGAAGUACACCGUGGUGACAUUGUAUCAUUGGUUUUUAGUUUAUGA\
) } def
/len { sequence length } bind def

/coor [
[70.63516998 132.89526367]
[64.10619354 126.18152618]
[59.09962082 118.18418121]
[47.17573929 127.28478241]
[35.25185776 136.38539124]
[23.32797432 145.48599243]
[11.40409088 154.58660889]
[5.12825632 169.10984802]
[-9.68325138 170.68098450]
[-21.60713387 179.78160095]
[-33.53101730 188.88220215]
[-45.45489883 197.98280334]
[-57.37878418 207.08340454]
[-69.30266571 216.18402100]
[-81.22654724 225.28462219]
[-93.15042877 234.38522339]
[-105.07431030 243.48583984]
[-96.56718445 248.93571472]
[-90.48657990 258.80889893]
[-88.57057190 272.00973511]
[-92.09276581 286.84561157]
[-101.84510040 298.24264526]
[-111.59744263 309.63964844]
[-121.34977722 321.03665161]
[-117.61060333 336.09649658]
[-123.46868134 350.46530151]
[-136.67144775 358.61798096]
[-152.14219666 357.41967773]
[-163.93208313 347.33117676]
[-167.50765991 332.23165894]
[-161.49406433 317.92724609]
[-148.20361328 309.91827393]
[-132.74679565 311.28433228]
[-122.99445343 299.88729858]
[-113.24211121 288.49029541]
[-103.48977661 277.09329224]
[-112.36711884 265.00143433]
[-121.24366760 252.91065979]
[-135.03866577 258.80114746]
[-148.83367920 264.69161987]
[-162.62869263 270.58209229]
[-176.42369080 276.47259521]
[-190.21870422 282.36306763]
[-204.01370239 288.25354004]
[-217.80871582 294.14404297]
[-230.00105286 305.92465210]
[-244.69647217 297.47000122]
[-240.64031982 281.00842285]
[-223.69920349 280.34902954]
[-209.90419006 274.45855713]
[-196.10917664 268.56805420]
[-182.31417847 262.67758179]
[-168.51916504 256.78710938]
[-154.72416687 250.89662170]
[-140.92915344 245.00613403]
[-127.13414764 239.11564636]
[-114.17491913 231.56195068]
[-102.25103760 222.46134949]
[-90.32715607 213.36073303]
[-78.40327454 204.26013184]
[-66.47938538 195.15953064]
[-54.55550385 186.05892944]
[-42.63162231 176.95831299]
[-30.70773888 167.85771179]
[-18.78385735 158.75711060]
[-13.36089802 144.88479614]
[2.30348563 142.66271973]
[14.22736835 133.56211853]
[26.15125084 124.46150970]
[38.07513428 115.36090088]
[49.99901581 106.26029968]
[50.37149811 91.26492310]
[38.91415787 81.58353424]
[27.45681763 71.90213776]
[11.92207623 68.90507507]
[7.19455194 54.78063583]
[-4.26278925 45.09924698]
[-15.72013092 35.41785431]
[-27.35580063 25.95153618]
[-39.16576004 16.70357132]
[-50.97572327 7.45560884]
[-62.78568268 -1.79235435]
[-74.59564209 -11.04031754]
[-86.40560150 -20.28828049]
[-98.21556854 -29.53624344]
[-112.74980927 -24.36329651]
[-127.76828766 -27.89158821]
[-138.47865295 -38.99525452]
[-141.46328735 -54.13115692]
[-135.76979065 -68.46948242]
[-123.21492767 -77.43492889]
[-107.80493164 -78.16664124]
[-94.45706177 -70.43115234]
[-87.43057251 -56.69681168]
[-88.96760559 -41.34620667]
[-77.15763855 -32.09823990]
[-65.34767914 -22.85027885]
[-53.53771973 -13.60231495]
[-41.72776031 -4.35435200]
[-29.91779709 4.89361095]
[-18.10783768 14.14157391]
[-14.60759926 14.09273148]
[-10.90807343 15.72015762]
[-7.78987026 19.10008240]
[-6.03873968 23.96051407]
[5.41860151 33.64190292]
[16.87594223 43.32329559]
[31.59117699 45.62788391]
[37.13820648 60.44480133]
[48.59555054 70.12619019]
[60.05289078 79.80757904]
[67.69705963 69.80185699]
[77.71735382 62.43168259]
[89.25897980 58.21966553]
[101.36631012 57.42354584]
[113.06194305 60.02191925]
[123.42554474 65.72275543]
[131.66630554 73.99348450]
[137.18313599 84.10970306]
[151.83036804 80.87573242]
[166.47760010 77.64176941]
[181.12483215 74.40780640]
[195.77207947 71.17384338]
[207.57955933 60.64321899]
[221.67565918 65.45458221]
[236.32289124 62.22061920]
[244.84535217 49.18200684]
[259.74578857 46.11096191]
[272.12359619 54.31617737]
[286.77084351 51.08221054]
[301.41806030 47.84824753]
[316.06530762 44.61428070]
[330.71252441 41.38031769]
[345.35977173 38.14635086]
[357.39572144 29.19450760]
[364.70675659 16.09684181]
[371.93634033 2.95403624]
[379.08416748 -10.23340130]
[386.23199463 -23.42083931]
[393.37982178 -36.60827637]
[400.52764893 -49.79571533]
[407.67547607 -62.98315048]
[400.86383057 -76.92520142]
[403.58114624 -92.20249939]
[414.78259277 -102.94060516]
[430.16101074 -105.01050568]
[443.80303955 -97.61627197]
[450.46307373 -83.60115051]
[447.58016968 -68.35423279]
[436.26287842 -57.73826981]
[420.86291504 -55.83531952]
[413.71508789 -42.64788437]
[406.56726074 -29.46044540]
[399.41943359 -16.27300835]
[392.27160645 -3.08557034]
[385.12377930 10.10186768]
[384.70062256 17.46004105]
[377.80444336 23.40787125]
[370.49340820 36.50553513]
[373.98516846 43.14312363]
[380.96868896 56.41830063]
[384.46044922 63.05588913]
[399.39544678 64.45082092]
[414.33044434 65.84575653]
[429.26544189 67.24069214]
[444.20043945 68.63562775]
[459.13543701 70.03056335]
[465.25259399 67.63914490]
[470.82925415 68.54120636]
[474.42242432 71.65008545]
[489.31817627 73.41545868]
[504.21392822 75.18083191]
[516.55187988 65.67226410]
[531.63311768 67.67479706]
[540.62207031 79.49574280]
[555.51782227 81.26111603]
[570.41357422 83.02648926]
[585.30932617 84.79186249]
[600.20507812 86.55723572]
[615.10083008 88.32260895]
[629.99658203 90.08798218]
[644.61145020 84.02861786]
[656.33966064 93.21003723]
[671.23541260 94.97541046]
[686.13116455 96.74078369]
[701.05718994 98.22842407]
[716.01562500 99.34494781]
[730.98065186 100.36858368]
[745.94567871 101.39221954]
[760.91070557 102.41585541]
[775.39324951 94.72254944]
[789.15179443 103.64639282]
[788.03265381 120.00730896]
[773.18719482 126.97458649]
[759.88708496 117.38088989]
[744.92205811 116.35725403]
[729.95703125 115.33361816]
[714.99194336 114.30998230]
[708.12292480 116.98175812]
[699.84783936 113.17958832]
[696.95391846 115.14913177]
[692.96997070 115.82968903]
[688.50537109 114.72750092]
[684.36578369 111.63654327]
[669.47003174 109.87117004]
[654.57427979 108.10579681]
[641.02484131 114.29142761]
[628.23120117 104.98373413]
[613.33544922 103.21836853]
[598.43969727 101.45299530]
[583.54394531 99.68762207]
[568.64819336 97.92224884]
[553.75244141 96.15687561]
[538.85668945 94.39150238]
[527.35363770 103.78383636]
[512.22210693 102.20569611]
[502.44854736 90.07658386]
[487.55279541 88.31121063]
[472.65704346 86.54583740]
[457.74050903 84.96556091]
[442.80551147 83.57062531]
[427.87051392 82.17568970]
[412.93551636 80.78075409]
[398.00051880 79.38581848]
[383.06552124 77.99088287]
[364.26306152 75.34713745]
[352.11373901 65.16831207]
[348.59371948 52.79358673]
[333.94650269 56.02754974]
[319.29925537 59.26151657]
[304.65203857 62.49547958]
[290.00479126 65.72944641]
[275.35757446 68.96340942]
[267.58529663 81.61756134]
[252.77699280 85.10591888]
[239.55685425 76.86785126]
[224.90962219 80.10182190]
[214.14981079 90.40112305]
[199.00604248 85.82107544]
[184.35881042 89.05503845]
[169.71156311 92.28900146]
[155.06433105 95.52297211]
[140.41709900 98.75693512]
[140.10212708 107.34290314]
[137.96897888 115.73816681]
[134.08462524 123.55898285]
[128.59678650 130.44152832]
[121.72841644 136.05879211]
[113.76873779 140.13603210]
[105.06112671 142.46414185]
[95.98833466 142.91021729]
[86.95562744 141.42471313]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 71]
[4 70]
[5 69]
[6 68]
[7 67]
[9 65]
[10 64]
[11 63]
[12 62]
[13 61]
[14 60]
[15 59]
[16 58]
[17 57]
[21 36]
[22 35]
[23 34]
[24 33]
[38 56]
[39 55]
[40 54]
[41 53]
[42 52]
[43 51]
[44 50]
[45 49]
[72 111]
[73 110]
[74 109]
[76 107]
[77 106]
[78 105]
[79 101]
[80 100]
[81 99]
[82 98]
[83 97]
[84 96]
[85 95]
[119 243]
[120 242]
[121 241]
[122 240]
[123 239]
[125 237]
[126 236]
[129 233]
[130 232]
[131 231]
[132 230]
[133 229]
[134 228]
[135 159]
[136 158]
[137 156]
[138 155]
[139 154]
[140 153]
[141 152]
[142 151]
[162 225]
[163 224]
[164 223]
[165 222]
[166 221]
[167 220]
[170 219]
[171 218]
[172 217]
[175 214]
[176 213]
[177 212]
[178 211]
[179 210]
[180 209]
[181 208]
[183 206]
[184 205]
[185 204]
[186 200]
[187 198]
[188 197]
[189 196]
[190 195]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
