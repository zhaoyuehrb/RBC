%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 02:58:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGCAGGUCCAGAAAGUGAUGCGCAAUACCAGUUCACUGGUAUUAAAAAAUAUUUCAACUCUUAUACUCUCACAGGUAGAAUGAACUGUGUACUGGCCACAUAUGGAAGCAUUGCAUUGAUUGUCUUAUAUUUCAAGUUAAGGUCCAAAAAAACUCCAGCUGUGAAAGCAACAUAA\
) } def
/len { sequence length } bind def

/coor [
[290.67044067 312.79864502]
[292.69714355 302.71063232]
[296.93411255 293.32211304]
[285.51943970 283.59048462]
[274.10476685 273.85882568]
[262.69009399 264.12716675]
[251.27540588 254.39552307]
[241.16639709 256.12033081]
[231.58238220 251.89265442]
[225.80244446 242.89402771]
[225.94894409 231.98005676]
[214.88481140 221.85162354]
[203.82069397 211.72320557]
[193.65710449 213.09016418]
[184.22825623 208.52690125]
[178.76950073 199.32989502]
[179.30107117 188.42790222]
[168.60128784 177.91531372]
[157.90150452 167.40270996]
[147.20172119 156.89012146]
[136.50192261 146.37753296]
[125.80213928 135.86494446]
[115.10235596 125.35235596]
[90.96022034 133.67552185]
[64.87428284 119.60343933]
[56.32575607 86.94470978]
[42.07635880 91.63029480]
[27.82696152 96.31587982]
[13.57756519 101.00146484]
[-0.67183173 105.68704224]
[-14.92122841 110.37262726]
[-29.17062569 115.05821228]
[-43.42002106 119.74378967]
[-53.94077682 132.32336426]
[-70.04663849 129.23576355]
[-75.16927338 113.65722656]
[-64.03895569 101.61363220]
[-48.10560608 105.49439240]
[-33.85620880 100.80881500]
[-19.60681152 96.12322998]
[-5.35741425 91.43764496]
[8.89198303 86.75206757]
[23.14138031 82.06648254]
[37.39077759 77.38089752]
[51.64017487 72.69531250]
[36.88876343 69.97577667]
[22.13735390 67.25624084]
[7.38594294 64.53669739]
[-7.36546755 61.81715775]
[-22.11687851 59.09762192]
[-36.74166870 62.43161392]
[-51.71284485 61.50214386]
[-65.81294250 56.38479233]
[-77.89533234 47.49570465]
[-86.97746277 35.55775070]
[-92.32078552 21.54172516]
[-93.49076843 6.58742285]
[-90.39226532 -8.08906460]
[-83.27725220 -21.29423904]
[-72.72432709 -31.95424652]
[-59.59165955 -39.20220947]
[-44.94720078 -42.44872284]
[-29.98184967 -41.42977524]
[-15.91259575 -36.22822952]
[-3.88355732 -27.26707840]
[5.12705612 -15.27504539]
[10.38595104 -1.22983408]
[20.77120209 9.59359169]
[31.15645409 20.41701889]
[41.54170609 31.24044418]
[51.92695618 42.06386948]
[62.31221008 52.88729477]
[58.38732147 38.40989304]
[54.46242905 23.93248558]
[50.53754044 9.45508194]
[46.61265182 -5.02232313]
[31.74513626 -8.87622166]
[20.80770111 -19.65898895]
[16.74245834 -34.47011185]
[20.64294052 -49.32547379]
[31.45993805 -60.22905731]
[46.28372955 -64.24785614]
[61.12679672 -60.30082703]
[71.99642181 -49.44970703]
[75.96872711 -34.61338806]
[71.97519684 -19.78277016]
[61.09005737 -8.94721222]
[65.01494598 5.53019285]
[68.93983459 20.00759697]
[72.86472321 34.48500061]
[76.78961182 48.96240616]
[84.24759674 49.75514603]
[85.83307648 34.83917236]
[87.41880798 19.92322540]
[102.33472443 21.50919914]
[100.74905396 36.42465210]
[99.16357422 51.34062576]
[106.62155914 52.13336563]
[113.50209045 38.80451202]
[120.38261414 25.47565651]
[119.07100677 9.12904453]
[132.72354126 0.04387791]
[147.29566956 7.56619692]
[147.79682922 23.95768547]
[133.71147156 32.35618591]
[126.83094025 45.68503952]
[119.95041656 59.01389313]
[133.82267761 78.22529602]
[134.85577393 99.08663177]
[125.61494446 114.65257263]
[136.31472778 125.16516113]
[147.01451111 135.67774963]
[157.71430969 146.19033813]
[168.41409302 156.70292664]
[179.11387634 167.21551514]
[189.81367493 177.72810364]
[209.52523804 181.85374451]
[213.94911194 200.65907288]
[225.01324463 210.78750610]
[236.07737732 220.91593933]
[255.92225647 224.34333801]
[261.00704956 242.98083496]
[272.42172241 252.71247864]
[283.83642578 262.44412231]
[295.25109863 272.17578125]
[306.66577148 281.90744019]
[324.75030518 272.69000244]
[344.99691772 272.21206665]
[363.41275024 280.52822876]
[376.38314819 295.96264648]
[381.38113403 315.44671631]
[377.45968628 335.12896729]
[389.98660278 343.37979126]
[402.51351929 351.63061523]
[415.04046631 359.88143921]
[427.56738281 368.13229370]
[440.16662598 376.27224731]
[452.83721924 384.30068970]
[465.50781250 392.32916260]
[478.17840576 400.35760498]
[493.41372681 397.11370850]
[506.14913940 405.43621826]
[509.14779663 419.98074341]
[521.81842041 428.00918579]
[534.48901367 436.03765869]
[548.86218262 430.19030762]
[563.91918945 433.94070435]
[573.87036133 445.84677124]
[574.88922119 461.33035278]
[566.58398438 474.43771362]
[552.14819336 480.12881470]
[537.13275146 476.21530151]
[527.31134033 464.20196533]
[526.46051025 448.70825195]
[513.78991699 440.67977905]
[501.11935425 432.65133667]
[486.68722534 436.15118408]
[473.72305298 428.18969727]
[470.14993286 413.02819824]
[457.47933960 404.99975586]
[444.80877686 396.97128296]
[432.13818359 388.94284058]
[424.78295898 388.01593018]
[419.31655884 380.65921021]
[406.78964233 372.40838623]
[394.26269531 364.15756226]
[381.73577881 355.90673828]
[369.20886230 347.65591431]
[361.51684570 354.31143188]
[352.52117920 359.08212280]
[342.67578125 361.72177124]
[332.47866821 362.09188843]
[322.44674683 360.16894531]
[313.08966064 356.04571533]
[304.88381958 349.92687988]
[298.24822998 342.11895752]
[293.52304077 333.01470947]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 126]
[4 125]
[5 124]
[6 123]
[7 122]
[11 120]
[12 119]
[13 118]
[17 116]
[18 115]
[19 114]
[20 113]
[21 112]
[22 111]
[23 110]
[26 45]
[27 44]
[28 43]
[29 42]
[30 41]
[31 40]
[32 39]
[33 38]
[72 91]
[73 90]
[74 89]
[75 88]
[76 87]
[98 107]
[99 106]
[100 105]
[132 168]
[133 167]
[134 166]
[135 165]
[136 164]
[137 162]
[138 161]
[139 160]
[140 159]
[143 156]
[144 155]
[145 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
