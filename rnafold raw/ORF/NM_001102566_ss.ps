%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 16:44:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAGCGAGCUUAAUACCAAAACAUCCCCAGCAACCAACCAGGCAGCUGGCCAAGAGGAAAAAGGAAAAGCUGGCAAUGUCAAGAAGGCGGAGGAGGAGGAGGAGAUUGACAUUGAUCUGACAGCACCAGAAACAGAGAAGGCUGCCCUUGCUAUUCAGGGCAAGUUCCGGCGAUUUCAGAAAAGGAAAAAGGAUCCCAGCUCCUGA\
) } def
/len { sequence length } bind def

/coor [
[113.40068817 148.07063293]
[96.98470306 149.81236267]
[80.89867401 146.10317993]
[66.90288544 137.34895325]
[56.52888870 124.50766754]
[42.50364304 129.82673645]
[32.34394073 141.95484924]
[17.70005226 139.23350525]
[3.67480826 144.55258179]
[-10.35043526 149.87165833]
[-24.37567902 155.19071960]
[-38.40092087 160.50979614]
[-41.07754135 172.09594727]
[-48.93508148 180.86096191]
[-59.93466187 184.70382690]
[-71.30450439 182.77876282]
[-80.23824310 175.67828369]
[-94.41773987 180.57131958]
[-95.65827179 193.42851257]
[-101.64831543 204.81979370]
[-111.46642303 213.06878662]
[-123.63084412 216.97671509]
[-136.32305908 215.99647522]
[-147.65965271 210.30900574]
[-155.97180176 200.79106140]
[-170.29261780 205.25361633]
[-184.61343384 209.71615601]
[-198.71740723 214.82279968]
[-212.57559204 220.56304932]
[-226.43379211 226.30329895]
[-240.29199219 232.04354858]
[-254.15017700 237.78379822]
[-260.26669312 252.10952759]
[-274.40261841 257.73355103]
[-288.02230835 251.81410217]
[-301.88052368 257.55435181]
[-309.32363892 271.76629639]
[-325.10238647 274.66644287]
[-337.11264038 264.03002930]
[-336.14117432 248.01641846]
[-322.93319702 238.90988159]
[-307.62075806 243.69616699]
[-293.76257324 237.95591736]
[-288.31765747 224.13966370]
[-274.34527588 218.12081909]
[-259.89044189 223.92561340]
[-246.03224182 218.18536377]
[-232.17404175 212.44511414]
[-218.31585693 206.70484924]
[-204.45765686 200.96459961]
[-217.85818481 194.22473145]
[-222.70057678 180.02786255]
[-216.21179199 166.50396729]
[-202.10769653 161.39765930]
[-188.46514893 167.63310242]
[-183.09669495 181.63951111]
[-189.07597351 195.39533997]
[-174.75515747 190.93280029]
[-160.43434143 186.47026062]
[-157.26495361 169.54905701]
[-145.90457153 156.49577332]
[-129.41390991 150.96459961]
[-112.30591583 154.56431580]
[-99.31078339 166.39181519]
[-85.13128662 161.49877930]
[-78.12477875 144.58834839]
[-60.68442535 138.05523682]
[-43.71999741 146.48455811]
[-29.69475174 141.16548157]
[-15.66950893 135.84640503]
[-1.64426494 130.52732849]
[12.38097858 125.20825958]
[21.53750038 113.46060944]
[37.18457031 115.80149841]
[51.20981216 110.48242950]
[50.14748001 97.74397278]
[52.35604858 85.15354156]
[57.69060898 73.53721619]
[65.80116272 63.65714645]
[57.28018951 51.31238937]
[48.75921631 38.96763229]
[33.30164337 34.67311096]
[27.15443611 19.85449409]
[35.03321075 5.87935543]
[50.89404297 3.46822643]
[62.56986237 14.47071838]
[61.10397720 30.44666100]
[69.62494659 42.79141998]
[78.14591980 55.13617706]
[91.49355316 50.82679749]
[105.51316833 50.40193176]
[119.09725952 53.89513779]
[131.17272949 61.03047180]
[140.78567505 71.24426270]
[147.17668152 83.72965240]
[161.93098450 81.02583313]
[176.68528748 78.32200623]
[191.43957520 75.61817932]
[206.19387817 72.91435242]
[215.18084717 60.19145203]
[230.18231201 57.65956879]
[242.25627136 66.30567169]
[257.01055908 63.60184860]
[264.88973999 58.97581100]
[272.00802612 60.97036743]
[286.80148315 58.48968887]
[301.59490967 56.00901031]
[316.38836670 53.52832794]
[322.25338745 36.02603149]
[336.12554932 23.97787476]
[354.10937500 20.65270424]
[371.21252441 26.88575172]
[382.73165894 40.87100601]
[397.39758301 37.72278595]
[405.99618530 24.73425674]
[420.91433716 21.75043869]
[433.24392700 30.02792931]
[447.90982056 26.87971306]
[462.57571411 23.73149681]
[477.24163818 20.58328056]
[491.90753174 17.43506432]
[498.26483154 3.40327907]
[511.51068115 -4.10679531]
[526.46197510 -2.39741135]
[537.40875244 7.66766119]
[549.27764893 -2.79370093]
[563.34539795 2.10005212]
[578.01129150 -1.04816449]
[589.88018799 -11.50952625]
[603.94787598 -6.61577368]
[618.61376953 -9.76399040]
[604.92413330 -15.89534473]
[596.05316162 -27.99102020]
[594.31878662 -42.89041519]
[600.17425537 -56.70032120]
[612.08953857 -65.81221008]
[626.95111084 -67.84513855]
[640.87573242 -62.26791000]
[650.22479248 -50.53785324]
[652.55548096 -35.72002792]
[647.25878906 -21.68633652]
[635.71795654 -12.10346031]
[650.69055176 -13.00913811]
[665.66320801 -13.91481590]
[680.62860107 -14.93353844]
[695.58581543 -16.06524658]
[710.54309082 -17.19695663]
[725.50030518 -18.32866669]
[740.45758057 -19.46037483]
[748.49023438 -32.73651886]
[762.80535889 -38.72461700]
[777.89843750 -35.12212372]
[787.96594238 -23.31427383]
[789.13665771 -7.84142637]
[780.96044922 5.34679508]
[766.58123779 11.17924976]
[751.52807617 7.41323900]
[741.58929443 -4.50312853]
[726.63201904 -3.37141919]
[711.67480469 -2.23970985]
[696.71752930 -1.10800052]
[681.76031494 0.02370890]
[675.32617188 3.66381884]
[666.56890869 1.05781782]
[651.59625244 1.96349525]
[636.62359619 2.86917281]
[621.76202393 4.90191364]
[607.09606934 8.05012989]
[596.27618408 18.28631020]
[581.15948486 13.61773968]
[566.49359131 16.76595497]
[555.67370605 27.00213623]
[540.55700684 22.33356476]
[534.70544434 36.00460815]
[521.77288818 43.69960785]
[506.61178589 42.28743362]
[495.05575562 32.10096741]
[480.38983154 35.24918365]
[465.72393799 38.39739990]
[451.05804443 41.54561615]
[436.39212036 44.69383240]
[428.54595947 57.30229568]
[413.71749878 60.70395660]
[400.54580688 52.38869095]
[385.87988281 55.53690720]
[383.86227417 67.14311218]
[378.03131104 77.41886902]
[369.04998779 85.14844513]
[357.95559692 89.40832520]
[346.03991699 89.67751312]
[334.69879150 85.90111542]
[325.26867676 78.49953461]
[318.86904907 68.32178497]
[304.07559204 70.80245972]
[289.28213501 73.28314209]
[274.48870850 75.76381683]
[259.71438599 78.35614777]
[244.96009827 81.05997467]
[236.73670959 93.42570496]
[221.81227112 96.37795258]
[208.89770508 87.66865540]
[194.14340210 90.37247467]
[179.38909912 93.07630157]
[164.63481140 95.78012848]
[149.88050842 98.48395538]
[147.64591980 114.84014893]
[140.19747925 129.57238770]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 75]
[6 74]
[8 72]
[9 71]
[10 70]
[11 69]
[12 68]
[17 65]
[18 64]
[25 59]
[26 58]
[27 57]
[28 50]
[29 49]
[30 48]
[31 47]
[32 46]
[35 43]
[36 42]
[79 89]
[80 88]
[81 87]
[95 205]
[96 204]
[97 203]
[98 202]
[99 201]
[102 198]
[103 197]
[105 196]
[106 195]
[107 194]
[108 193]
[113 185]
[114 184]
[117 181]
[118 180]
[119 179]
[120 178]
[121 177]
[125 173]
[127 171]
[128 170]
[130 168]
[131 167]
[142 166]
[143 165]
[144 164]
[145 162]
[146 161]
[147 160]
[148 159]
[149 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
