%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 11:18:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCUGGCUCCUCCAGCGUCGCCGCUAUGAAGAAAGUGGUUCAACAGCUCCGGCUGGAGGCCGGACUCAACCGCGUAAAAGUUUCCCAGGCAGCUGCAGACUUGAAACAGUUCUGUCUGCAGAAUGCUCAACAUGACCCUCUGCUGACUGGAGUAUCUUCAAGUACAAAUCCCUUCAGACCCCAGAAAGUCUGUUCCUUUUUGUAG\
) } def
/len { sequence length } bind def

/coor [
[-51.77749252 198.73483276]
[-67.56538391 195.92031860]
[-80.49871826 186.53709412]
[-93.56395721 193.90591431]
[-106.62920380 201.27473450]
[-119.69444275 208.64355469]
[-132.75967407 216.01237488]
[-145.82492065 223.38119507]
[-158.89016724 230.75001526]
[-162.57858276 236.24156189]
[-167.71591187 238.67845154]
[-172.46318054 238.13726807]
[-185.74501038 245.10810852]
[-199.02685547 252.07896423]
[-212.30870056 259.04980469]
[-225.59054565 266.02066040]
[-238.87237549 272.99151611]
[-252.15422058 279.96234131]
[-256.00683594 285.33999634]
[-261.21539307 287.62060547]
[-265.94415283 286.93627930]
[-279.43048096 293.50280762]
[-284.67086792 308.17169189]
[-298.44143677 314.63894653]
[-312.39370728 309.55264282]
[-325.88000488 316.11917114]
[-339.36633301 322.68566895]
[-349.31533813 338.17953491]
[-366.75851440 336.26437378]
[-380.14410400 343.03384399]
[-393.52972412 349.80328369]
[-406.91531372 356.57275391]
[-409.25598145 371.91226196]
[-420.18988037 382.92269897]
[-435.51269531 385.37030029]
[-449.33248901 378.31393433]
[-456.33529663 364.46691895]
[-453.82839966 349.15368652]
[-442.77569580 338.26251221]
[-427.42721558 335.98126221]
[-413.68478394 343.18713379]
[-400.29916382 336.41766357]
[-386.91357422 329.64822388]
[-373.52795410 322.87878418]
[-369.45764160 311.48602295]
[-358.35928345 305.73727417]
[-345.93286133 309.19937134]
[-332.44653320 302.63284302]
[-318.96020508 296.06631470]
[-314.35943604 281.94653320]
[-300.77593994 275.09503174]
[-285.99700928 280.01647949]
[-272.51068115 273.44995117]
[-259.12506104 266.68051147]
[-245.84323120 259.70965576]
[-232.56138611 252.73881531]
[-219.27954102 245.76795959]
[-205.99771118 238.79711914]
[-192.71586609 231.82627869]
[-179.43402100 224.85542297]
[-166.25898743 217.68476868]
[-153.19374084 210.31594849]
[-140.12849426 202.94712830]
[-127.06326294 195.57830811]
[-113.99801636 188.20950317]
[-100.93277740 180.84068298]
[-87.86753845 173.47186279]
[-89.44474030 159.68728638]
[-85.63652039 146.30059814]
[-76.98616791 135.34225464]
[-64.77400208 128.48748779]
[-50.82792282 126.80014801]
[-37.24987030 130.56784058]
[-26.09898567 139.25343323]
[-12.92394352 132.08277893]
[0.25109988 124.91212463]
[4.62439871 118.95207977]
[13.67972279 117.73437500]
[26.96156311 110.76352692]
[40.24340439 103.79267883]
[53.52524185 96.82183075]
[66.80708313 89.85099030]
[51.89455414 91.46854401]
[39.11219788 83.61925507]
[33.80922699 69.58791351]
[38.20484161 55.24641418]
[50.45955276 46.59644318]
[65.44496155 47.25786591]
[76.88992310 56.95389557]
[80.00474548 71.62815094]
[82.48542023 56.83469772]
[84.96610260 42.04124451]
[87.44678497 27.24779320]
[80.60467529 10.15313816]
[92.28873444 -2.93940687]
[94.54570007 -17.76863861]
[96.80266571 -32.59786987]
[99.05963898 -47.42710114]
[101.31660461 -62.25633240]
[103.57357025 -77.08556366]
[105.83053589 -91.91479492]
[108.08750916 -106.74402618]
[101.08528900 -117.57782745]
[103.27193451 -129.88392639]
[112.93789673 -137.15931702]
[115.41857910 -151.95275879]
[117.89925385 -166.74621582]
[111.65755463 -181.91108704]
[121.88278961 -194.73202515]
[138.05612183 -192.01995850]
[143.53981018 -176.56481934]
[132.69270325 -164.26553345]
[130.21203613 -149.47207642]
[127.73134613 -134.67863464]
[134.74917603 -118.59503174]
[122.91674042 -104.48706055]
[120.65976715 -89.65782928]
[118.40280151 -74.82859802]
[116.14583588 -59.99936295]
[113.88887024 -45.17013168]
[111.63189697 -30.34090233]
[109.37493134 -15.51167011]
[107.11796570 -0.68243933]
[114.03266907 9.24474716]
[112.27210999 21.61898613]
[102.24023438 29.72847366]
[99.75955200 44.52192688]
[97.27887726 59.31537628]
[94.79819489 74.10883331]
[112.95285034 81.11022186]
[119.11882782 96.71048737]
[133.73550415 100.07984924]
[148.35218811 103.44920349]
[162.96887207 106.81856537]
[172.03657532 105.69672394]
[177.78007507 110.35076904]
[192.34419250 113.94050598]
[206.90832520 117.53023529]
[220.32518005 109.61659241]
[235.04414368 113.46456909]
[242.50590515 126.30425262]
[257.07003784 129.89398193]
[271.63415527 133.48371887]
[286.19830322 137.07345581]
[300.86419678 140.22167969]
[315.61849976 142.92550659]
[330.37280273 145.62933350]
[345.12707520 148.33314514]
[358.04165649 139.62385559]
[372.96609497 142.57609558]
[381.18948364 154.94183350]
[395.94378662 157.64566040]
[410.69808960 160.34948730]
[425.50985718 162.71836853]
[440.37145996 164.75111389]
[455.23309326 166.78385925]
[470.09472656 168.81658936]
[482.52822876 159.06039429]
[498.20849609 161.03646851]
[507.83270264 173.57241821]
[505.69097900 189.23092651]
[493.05395508 198.72204590]
[477.41897583 196.41487122]
[468.06198120 183.67822266]
[453.20034790 181.64547729]
[438.33874512 179.61274719]
[423.47711182 177.58000183]
[420.46166992 179.41169739]
[416.40863037 179.87249756]
[411.97256470 178.49037170]
[407.99426270 175.10377502]
[393.23995972 172.39994812]
[378.48565674 169.69613647]
[366.41171265 178.34223938]
[351.41021729 175.81034851]
[342.42324829 163.08744812]
[327.66897583 160.38362122]
[312.91467285 157.67979431]
[298.16036987 154.97596741]
[295.77822876 156.45785522]
[292.66485596 157.08427429]
[289.14361572 156.57177734]
[285.63439941 154.75917053]
[282.60855103 151.63758850]
[268.04443359 148.04785156]
[253.48030090 144.45811462]
[238.91616821 140.86837769]
[226.34220886 148.76969910]
[211.52096558 145.33666992]
[203.31858826 132.09436035]
[188.75447083 128.50462341]
[174.19033813 124.91489410]
[159.59951782 121.43524933]
[144.98283386 118.06588745]
[130.36614990 114.69652557]
[115.74946594 111.32717133]
[94.28247070 122.17904663]
[73.77793121 103.13282776]
[60.49608994 110.10367584]
[47.21425247 117.07452393]
[33.93241119 124.04537201]
[20.65056992 131.01622009]
[7.42175102 138.08717346]
[-5.75329208 145.25781250]
[-18.92833519 152.42846680]
[-17.99040413 168.67095947]
[-24.20684052 183.64306641]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 67]
[4 66]
[5 65]
[6 64]
[7 63]
[8 62]
[9 61]
[12 60]
[13 59]
[14 58]
[15 57]
[16 56]
[17 55]
[18 54]
[21 53]
[22 52]
[25 49]
[26 48]
[27 47]
[29 44]
[30 43]
[31 42]
[32 41]
[74 205]
[75 204]
[76 203]
[78 202]
[79 201]
[80 200]
[81 199]
[82 198]
[90 129]
[91 128]
[92 127]
[93 126]
[95 123]
[96 122]
[97 121]
[98 120]
[99 119]
[100 118]
[101 117]
[102 116]
[105 114]
[106 113]
[107 112]
[131 196]
[132 195]
[133 194]
[134 193]
[136 192]
[137 191]
[138 190]
[141 187]
[142 186]
[143 185]
[144 184]
[145 179]
[146 178]
[147 177]
[148 176]
[151 173]
[152 172]
[153 171]
[154 167]
[155 166]
[156 165]
[157 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
