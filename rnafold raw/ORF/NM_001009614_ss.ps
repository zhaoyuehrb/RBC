%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 18:45:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGAACAGCCCACUUCAAGCAUCAAUGGGGAGAAGAGGAAGAGCCCCUGUGAAUCCAACAAUGAAAAUGAUGAGAUGCAGGAGACACCAAACAGGGACUUAGCCCCCGAACCGAGUUUGAAAAAGAUGAAAACGUCAGAAUAUUCAACAGUAUUAGCGUUUUGCUACAGGAAAGCUAAGAAAAUACAUUCAAAUCAACUGGAGAAUGACCAGUCCUGA\
) } def
/len { sequence length } bind def

/coor [
[105.15747070 143.29283142]
[98.19912720 143.56175232]
[95.01065063 158.21894836]
[91.82216644 172.87615967]
[100.57638550 186.03439331]
[97.38040161 201.51216125]
[84.13034058 210.12677002]
[68.68723297 206.76733398]
[60.21319199 193.42692566]
[63.73572159 178.02020264]
[77.16497040 169.68768311]
[80.35344696 155.03047180]
[83.54192352 140.37327576]
[61.43964386 120.34620667]
[57.38335037 90.79725647]
[43.48452759 85.15609741]
[29.58570099 79.51493835]
[15.68687630 73.87377930]
[1.78805196 68.23262787]
[-12.11077309 62.59146500]
[-26.00959778 56.95030594]
[-35.13137054 56.62356186]
[-40.06568146 51.12808609]
[-53.88253784 45.28903198]
[-69.97219086 52.16315079]
[-85.74346924 45.40389633]
[-91.62514496 29.64492035]
[-107.32205200 31.62428284]
[-116.20516968 19.66855240]
[-130.10398865 14.02739334]
[-144.00282288 8.38623524]
[-139.13481140 22.57434654]
[-145.60603333 36.10665131]
[-159.70608521 41.22413254]
[-173.35041809 34.99258041]
[-178.71577454 20.98497963]
[-172.72584534 7.23286676]
[-158.81599426 1.62128305]
[-172.18109131 -5.18857431]
[-187.04679871 -0.53578949]
[-200.50390625 -7.63234425]
[-204.84800720 -21.83320045]
[-218.21310425 -28.64305878]
[-231.57820129 -35.45291519]
[-247.38691711 -34.82407761]
[-255.21434021 -47.49612427]
[-268.57943726 -54.30598068]
[-281.94451904 -61.11583710]
[-295.30963135 -67.92569733]
[-308.67471313 -74.73554993]
[-322.03982544 -81.54541016]
[-339.90689087 -71.01801300]
[-360.36328125 -73.43135071]
[-375.08898926 -87.63375854]
[-378.19787598 -107.71353912]
[-392.01473999 -113.55258942]
[-405.83160400 -119.39163971]
[-420.32751465 -113.69020081]
[-434.25659180 -119.80866241]
[-439.60269165 -133.66342163]
[-453.41955566 -139.50248718]
[-463.95809937 -128.57987976]
[-477.73236084 -122.20537567]
[-492.87945557 -121.24106598]
[-507.35089111 -125.81736755]
[-519.18945312 -135.31536865]
[-526.79418945 -148.45054626]
[-529.13653564 -163.44647217]
[-525.89971924 -178.27508545]
[-517.52148438 -190.93090820]
[-505.13497925 -199.70237732]
[-490.41531372 -203.40319824]
[-475.35324097 -201.53288269]
[-461.98574829 -194.34436035]
[-452.12069702 -182.80982971]
[-447.09228516 -168.48924255]
[-447.58050537 -153.31933594]
[-433.76364136 -147.48028564]
[-420.10205078 -153.30232239]
[-406.00659180 -147.57751465]
[-399.99255371 -133.20849609]
[-386.17568970 -127.36944580]
[-372.35882568 -121.53039551]
[-365.57229614 -128.37757874]
[-357.01806641 -132.88708496]
[-347.47595215 -134.62783813]
[-337.82186890 -133.42202759]
[-328.94741821 -129.36320496]
[-321.67755127 -122.80919647]
[-316.69378662 -114.35064697]
[-314.47058105 -104.75783539]
[-315.22998047 -94.91050720]
[-301.86486816 -88.10065460]
[-288.49975586 -81.29079437]
[-275.13467407 -74.48093414]
[-261.76956177 -67.67108154]
[-248.40447998 -60.86122131]
[-233.55172729 -61.97714615]
[-224.76835632 -48.81801224]
[-211.40325928 -42.00815582]
[-198.03814697 -35.19829941]
[-183.99601746 -40.03089523]
[-170.34489441 -33.31512451]
[-165.37123108 -18.55367279]
[-152.00613403 -11.74381447]
[-138.36166382 -5.51258945]
[-124.46283722 0.12856910]
[-110.56401062 5.76972771]
[-95.86124420 3.38687325]
[-85.98398590 15.74609566]
[-74.93740082 9.12018108]
[-61.89665222 10.07877636]
[-51.63675690 18.49544334]
[-48.04348755 31.47217941]
[-34.22663116 37.31122971]
[-20.36843872 43.05148315]
[-6.46961403 48.69264221]
[7.42921066 54.33380127]
[21.32803535 59.97495651]
[35.22686005 65.61611938]
[49.12568665 71.25727844]
[63.02450943 76.89843750]
[69.42726135 68.91661072]
[77.51403809 62.64694214]
[86.83940125 58.43477631]
[96.88968658 56.51212692]
[107.11128998 56.98490143]
[116.94119263 59.82705688]
[125.83792114 64.88204193]
[133.31143188 71.87141418]
[146.26597595 64.30966187]
[159.22050476 56.74791718]
[172.17503357 49.18616867]
[185.12957764 41.62442017]
[198.08410645 34.06266785]
[211.03863525 26.50092125]
[213.18884277 15.84714031]
[220.69020081 8.28850365]
[230.89776611 6.14774847]
[240.39546204 9.89484406]
[253.56063843 2.70610905]
[266.72583008 -4.48262596]
[279.89102173 -11.67136097]
[293.05618286 -18.86009598]
[306.22137451 -26.04883003]
[314.28994751 -40.32574844]
[330.68865967 -40.20604324]
[338.54791260 -25.81285477]
[329.78280640 -11.95266438]
[313.41012573 -12.88364506]
[300.24493408 -5.69491053]
[287.07974243 1.49382424]
[273.91455078 8.68255901]
[260.74938965 15.87129402]
[247.58419800 23.06002808]
[238.74697876 40.26290131]
[218.60038757 39.45545578]
[205.64585876 47.01720428]
[192.69132996 54.57895279]
[179.73678589 62.14070129]
[166.78225708 69.70245361]
[153.82772827 77.26419830]
[140.87318420 84.82595062]
[143.04885864 93.09599304]
[143.56842041 101.63163757]
[142.41188049 110.10450745]
[139.62374878 118.18865967]
[135.31127930 125.57308197]
[145.76535034 136.33006287]
[156.21940613 147.08703613]
[166.67347717 157.84400940]
[162.65634155 143.39193726]
[164.59957886 128.51834106]
[173.27418518 116.28105164]
[186.66526794 109.52243042]
[201.66246033 109.81233215]
[214.78234863 117.08341217]
[222.97753906 129.64680481]
[224.34460449 144.58393860]
[209.39936829 143.30331421]
[221.90107727 151.59230042]
[234.40280151 159.88127136]
[249.84059143 156.49743652]
[263.10421753 165.09111023]
[266.32464600 180.56381226]
[257.59121704 193.73587036]
[242.08534241 196.79251099]
[229.00636292 187.92031860]
[226.11381531 172.38298035]
[213.61210632 164.09400940]
[201.11039734 155.80503845]
[195.33837891 160.59396362]
[204.91622925 172.13800049]
[214.49389648 183.68218994]
[202.94953918 193.25965881]
[193.37219238 181.71585083]
[183.79434204 170.17181396]
[178.02232361 174.96073914]
[183.86137390 188.77760315]
[189.70042419 202.59445190]
[195.53947449 216.41130066]
[201.37852478 230.22816467]
[216.37773132 234.65061951]
[224.98194885 247.70823669]
[223.12857056 263.23559570]
[211.69267273 273.90115356]
[196.07394409 274.66897583]
[183.64707947 265.17651367]
[180.27966309 249.90579224]
[187.56167603 236.06721497]
[181.72262573 222.25035095]
[175.88357544 208.43350220]
[170.04452515 194.61665344]
[164.20547485 180.79978943]
[155.91648865 168.29808044]
[145.46243286 157.54110718]
[135.00836182 146.78411865]
[124.55430603 136.02714539]
[118.50531006 139.47686768]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 13]
[3 12]
[4 11]
[15 122]
[16 121]
[17 120]
[18 119]
[19 118]
[20 117]
[21 116]
[23 115]
[24 114]
[27 110]
[29 108]
[30 107]
[31 106]
[38 105]
[39 104]
[42 101]
[43 100]
[44 99]
[46 97]
[47 96]
[48 95]
[49 94]
[50 93]
[51 92]
[55 83]
[56 82]
[57 81]
[60 78]
[61 77]
[130 163]
[131 162]
[132 161]
[133 160]
[134 159]
[135 158]
[136 157]
[140 155]
[141 154]
[142 153]
[143 152]
[144 151]
[145 150]
[168 218]
[169 217]
[170 216]
[171 215]
[180 191]
[181 190]
[182 189]
[198 214]
[199 213]
[200 212]
[201 211]
[202 210]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
