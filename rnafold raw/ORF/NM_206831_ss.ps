%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 18:15:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGCAGUGUUUCAUGACGAGGUGGAAAUCGAGGACUUCCAAUAUGACGAGGACUCGGAGACGUAUUUCUAUCCCUGCCCAUGUGGAGAUAACUUCUCCAUCACCAAGGAAGAUUUGGAGAAUGGGGAAGACGUGGCAACGUGUCCUAGCUGCUCUCUCAUUAUAAAAGUGAUUUAUGACAAAGAUCAGUUUGUGUGUGGAGAAACAGUCCCAGCCCCUUCAGCCAACAAAGAAUUAGUUAAAUGCUGA\
) } def
/len { sequence length } bind def

/coor [
[223.94688416 409.70724487]
[236.45581055 391.00305176]
[232.36152649 376.57263184]
[228.26724243 362.14221191]
[224.17297363 347.71182251]
[218.63320923 361.65136719]
[206.48916626 370.45605469]
[191.51811218 371.38726807]
[178.37655640 364.15542603]
[171.15202332 351.00985718]
[172.09159851 336.03930664]
[180.90304565 323.90017700]
[194.84567261 318.36819458]
[209.58282471 321.16397095]
[220.53094482 331.41833496]
[218.09138489 316.61804199]
[215.65182495 301.81774902]
[205.94761658 290.51831055]
[211.33747864 275.64349365]
[201.63327026 264.34405518]
[207.02313232 249.46925354]
[204.58357239 234.66896057]
[202.05107117 219.88429260]
[199.42573547 205.11582947]
[196.80038452 190.34735107]
[189.56707764 188.76504517]
[182.98091125 185.29837036]
[177.52566528 180.17887878]
[173.60812378 173.76026917]
[171.52778625 166.49406433]
[171.45411682 158.89784241]
[173.41285706 151.51835632]
[161.73591614 142.10298157]
[150.05899048 132.68760681]
[138.38204956 123.27223969]
[126.70511627 113.85687256]
[70.81973267 128.44110107]
[55.81973267 128.44110107]
[40.81973267 128.44110107]
[25.81973267 128.44110107]
[10.81973171 128.44110107]
[2.26338553 131.56411743]
[-4.36846256 128.34567261]
[-19.36727905 128.15718079]
[-34.36609268 127.96868896]
[-49.36491013 127.78019714]
[-58.68052292 140.04908752]
[-73.26374054 144.42892456]
[-87.46172333 139.44081116]
[-95.89902496 127.19540405]
[-110.89783478 127.00691223]
[-125.89665222 126.81842041]
[-133.28323364 138.43881226]
[-145.34823608 144.84692383]
[-158.89590454 144.46630859]
[-170.39703369 137.50294495]
[-176.90823364 125.86370087]
[-191.90350342 125.48674774]
[-206.89875793 125.10980225]
[-221.89402771 124.73284912]
[-236.88928223 124.35589600]
[-251.02641296 132.66696167]
[-265.15716553 124.34509277]
[-264.74505615 107.95112610]
[-250.21401978 100.34976196]
[-236.51232910 109.36063385]
[-221.51707458 109.73758698]
[-206.52180481 110.11454010]
[-191.52655029 110.49148560]
[-176.53128052 110.86843872]
[-166.96304321 97.51528168]
[-151.15985107 92.45456696]
[-135.29983521 97.87310791]
[-125.70816040 111.81960297]
[-110.70935059 112.00809479]
[-95.71053314 112.19658661]
[-86.96817017 100.16707611]
[-72.64932251 95.53733063]
[-58.18077087 100.28227234]
[-49.17641830 112.78137970]
[-34.17760468 112.96987152]
[-19.17878723 113.15836334]
[-4.17997169 113.34685516]
[10.81973171 113.44110107]
[25.81973267 113.44110107]
[40.81973267 113.44110107]
[55.81973267 113.44110107]
[70.81973267 113.44110107]
[75.15152740 107.31855774]
[62.90658188 98.65476227]
[71.57057953 86.40995789]
[83.81511688 95.07347107]
[88.14691162 88.95092010]
[83.15461731 74.80606842]
[78.16233063 60.66120529]
[73.17003632 46.51634979]
[68.17774200 32.37149048]
[63.18544769 18.22663307]
[58.19315338 4.08177519]
[53.20086288 -10.06308270]
[48.20856857 -24.20794106]
[43.12749863 -38.32115173]
[31.10810089 -48.60923767]
[33.98500443 -63.22336197]
[28.81535912 -77.30436707]
[23.64571571 -91.38537598]
[18.47607231 -105.46638489]
[13.30642796 -119.54739380]
[-0.58977240 -127.56457520]
[-2.84325957 -143.44857788]
[8.27464867 -155.01454163]
[24.23524475 -153.39006042]
[32.79492569 -139.82128906]
[27.38743591 -124.71704102]
[32.55707932 -110.63603210]
[37.72672272 -96.55502319]
[42.89636612 -82.47401428]
[48.06600952 -68.39300537]
[59.71564102 -59.11209106]
[57.20850754 -43.49079514]
[62.45068359 -38.30818939]
[62.35342407 -29.20023346]
[67.34571838 -15.05537605]
[72.33801270 -0.91051817]
[77.33030701 13.23433971]
[82.32260132 27.37919807]
[87.31488800 41.52405548]
[92.30718231 55.66891479]
[97.29947662 69.81377411]
[102.29177094 83.95863342]
[117.28703308 83.58168030]
[121.56232452 69.20384979]
[125.83760834 54.82602310]
[130.11289978 40.44819641]
[125.77710724 24.63260651]
[137.49676514 13.16171074]
[153.21571350 17.83578300]
[156.76362610 33.84654236]
[144.49072266 44.72348785]
[140.21543884 59.10131454]
[135.94015503 73.47914124]
[131.66485596 87.85696411]
[136.12048340 102.17993927]
[147.79742432 111.59530640]
[159.47434998 121.01067352]
[171.15129089 130.42604065]
[182.82821655 139.84141541]
[205.87081909 135.65194702]
[223.84226990 150.01359558]
[238.50129700 146.83349609]
[253.16032410 143.65338135]
[267.81933594 140.47328186]
[281.17703247 127.78137970]
[297.66836548 133.81303406]
[312.28625488 130.44897461]
[326.90417480 127.08491516]
[341.52206421 123.72085571]
[349.16006470 118.75845337]
[356.34478760 120.40758514]
[371.00381470 117.22747803]
[385.66281128 114.04737854]
[390.42605591 99.51262665]
[401.75018311 89.38046265]
[416.52722168 86.29737854]
[430.76815796 90.99333954]
[440.67968750 102.11209106]
[455.33871460 98.93198395]
[469.99774170 95.75187683]
[481.84384155 85.26473236]
[495.92218018 90.12787628]
[510.58120728 86.94776917]
[525.24023438 83.76766205]
[539.89923096 80.58755493]
[554.55828857 77.40744781]
[569.21728516 74.22734070]
[576.34020996 60.30619812]
[590.76501465 54.26815414]
[605.68084717 58.96418762]
[614.04479980 72.17697144]
[611.90777588 87.66784668]
[600.27874756 98.12247467]
[584.64855957 98.60452271]
[572.39739990 88.88636017]
[557.73834229 92.06646729]
[543.07934570 95.24657440]
[528.42034912 98.42668152]
[513.76129150 101.60678864]
[499.10226440 104.78689575]
[488.30468750 115.04658508]
[473.17785645 110.41090393]
[458.51882935 113.59101105]
[443.85980225 116.77111816]
[439.44659424 130.99746704]
[428.43173218 141.17237854]
[413.70550537 144.48968506]
[399.20080566 139.96080017]
[388.84292603 128.70639038]
[374.18389893 131.88650513]
[359.52487183 135.06660461]
[344.88613892 138.33876038]
[330.26821899 141.70281982]
[315.65032959 145.06687927]
[301.03240967 148.43093872]
[294.36392212 158.50431824]
[282.23239136 161.43753052]
[270.99945068 155.13230896]
[256.34042358 158.31240845]
[241.68141174 161.49252319]
[227.02238464 164.67262268]
[222.41267395 178.28717041]
[211.56884766 187.72201538]
[214.19419861 202.49047852]
[216.81953430 217.25894165]
[221.39190674 225.13661194]
[219.38386536 232.22940063]
[221.82342529 247.02969360]
[231.70213318 259.38775635]
[226.13777161 273.20394897]
[236.01647949 285.56201172]
[230.45211792 299.37820435]
[232.89167786 314.17849731]
[235.33123779 328.97879028]
[238.60337830 343.61752319]
[242.69766235 358.04794312]
[246.79194641 372.47836304]
[250.88621521 386.90878296]
[258.97625732 388.19561768]
[266.30978394 391.76962280]
[272.25863647 397.30291748]
[276.31967163 404.30062866]
[278.15728760 412.14535522]
[277.63098145 420.15151978]
[274.80603027 427.62518311]
[269.94610596 433.92443848]
[263.48867798 438.51428223]
[266.48434448 453.21212769]
[269.47998047 467.90994263]
[272.47564697 482.60775757]
[275.47128296 497.30560303]
[288.00540161 507.31936646]
[287.84713745 523.36163330]
[275.11788940 533.12615967]
[259.58245850 529.12243652]
[253.15829468 514.42175293]
[260.77346802 500.30123901]
[257.77780151 485.60342407]
[254.78216553 470.90557861]
[251.78651428 456.20776367]
[248.79086304 441.50994873]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 226]
[3 225]
[4 224]
[5 223]
[15 222]
[16 221]
[17 220]
[19 218]
[21 216]
[22 215]
[23 213]
[24 212]
[25 211]
[32 147]
[33 146]
[34 145]
[35 144]
[36 143]
[37 88]
[38 87]
[39 86]
[40 85]
[41 84]
[43 83]
[44 82]
[45 81]
[46 80]
[50 76]
[51 75]
[52 74]
[57 70]
[58 69]
[59 68]
[60 67]
[61 66]
[93 130]
[94 129]
[95 128]
[96 127]
[97 126]
[98 125]
[99 124]
[100 123]
[101 122]
[102 120]
[104 118]
[105 117]
[106 116]
[107 115]
[108 114]
[131 142]
[132 141]
[133 140]
[134 139]
[149 209]
[150 208]
[151 207]
[152 206]
[154 203]
[155 202]
[156 201]
[157 200]
[159 199]
[160 198]
[161 197]
[166 192]
[167 191]
[168 190]
[170 188]
[171 187]
[172 186]
[173 185]
[174 184]
[175 183]
[235 249]
[236 248]
[237 247]
[238 246]
[239 245]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
