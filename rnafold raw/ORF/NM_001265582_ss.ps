%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sat Sep 12 01:56:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGCUGCGCCCUUGUCAGUGGAGGUGGAGUUCGGAGGUGGUGCGGAGCUCCUGUUUGACGGUAUUAAGAAACAUCGAGUCACUUUGCCUGGACAGGAGGAACCCUGGGACAUCCGGAACCUGCUCAUCUGGAUCAAGAAGAAUUUGCUAAAAGAGCGGCCAGAGUUGUUCAUCCAGGGAGACAGCGUGUGA\
) } def
/len { sequence length } bind def

/coor [
[103.19332886 156.95898438]
[93.12805939 145.83735657]
[91.05101776 130.98185730]
[97.68022156 117.52587128]
[89.58929443 130.15666199]
[81.49836731 142.78744507]
[80.56983185 158.58139038]
[67.18958282 165.12495422]
[59.09865570 177.75573730]
[51.00772476 190.38653564]
[42.91679382 203.01731873]
[34.92893219 215.71354675]
[27.04466248 228.47434998]
[32.12365723 243.26414490]
[26.45948410 257.83984375]
[12.72659206 265.31927490]
[-2.59076595 262.17083740]
[-12.26020241 249.88117981]
[-11.71610546 234.25306702]
[-1.21538055 222.66561890]
[14.28385067 220.59008789]
[22.16811943 207.82926941]
[23.01059914 200.47528076]
[30.28600502 194.92639160]
[38.37693405 182.29560852]
[46.46786499 169.66481018]
[54.55879593 157.03402710]
[54.90861130 142.14352417]
[68.86757660 134.69651794]
[76.95850372 122.06572723]
[85.04943848 109.43493652]
[83.95167542 94.47516632]
[74.10362244 83.16075134]
[64.25557709 71.84633636]
[54.40752411 60.53192520]
[44.55947495 49.21751404]
[29.66295624 43.88794708]
[27.14323616 29.20801926]
[17.29518700 17.89360809]
[2.59124041 21.83763313]
[-12.30627823 19.01789665]
[-24.45249748 10.04629898]
[-31.47010803 -3.25460792]
[-32.01457977 -18.22167206]
[-26.03144455 -31.88430595]
[-35.87949371 -43.19871902]
[-53.34325409 -44.08354950]
[-64.54905701 -57.06443405]
[-62.93912888 -73.79814911]
[-72.97003937 -84.95075989]
[-83.00094604 -96.10337830]
[-93.03186035 -107.25599670]
[-103.06276703 -118.40861511]
[-113.09367371 -129.56123352]
[-123.12458801 -140.71385193]
[-133.15548706 -151.86647034]
[-143.18640137 -163.01907349]
[-154.08236694 -162.96696472]
[-163.01968384 -168.80715942]
[-167.17214966 -178.40385437]
[-165.38705444 -188.48381042]
[-175.04963684 -199.95701599]
[-184.71221924 -211.43022156]
[-194.37480164 -222.90342712]
[-200.47386169 -225.51829529]
[-203.82334900 -230.13299561]
[-204.15777588 -234.91096497]
[-213.44178772 -246.69261169]
[-222.72579956 -258.47424316]
[-238.17352295 -260.47567749]
[-247.42100525 -272.55618286]
[-245.41775513 -287.27090454]
[-254.70176697 -299.05255127]
[-270.39981079 -302.36172485]
[-277.47113037 -316.76226807]
[-270.49121094 -331.20733643]
[-254.81442261 -334.61590576]
[-242.46669006 -324.37319946]
[-242.92012024 -308.33654785]
[-233.63610840 -296.55490112]
[-218.86093140 -295.06170654]
[-209.27778625 -283.24572754]
[-210.94416809 -267.75827026]
[-201.66015625 -255.97662354]
[-192.37614441 -244.19497681]
[-182.90158081 -232.56600952]
[-173.23901367 -221.09280396]
[-163.57643127 -209.61959839]
[-153.91384888 -198.14639282]
[-135.30329895 -192.93147278]
[-132.03378296 -173.04998779]
[-122.00287628 -161.89736938]
[-111.97196960 -150.74475098]
[-101.94105530 -139.59213257]
[-91.91014862 -128.43952942]
[-81.87924194 -117.28690338]
[-71.84832764 -106.13428497]
[-61.81742096 -94.98167419]
[-51.78651047 -83.82905579]
[-38.94157791 -84.95339203]
[-27.62791252 -78.37191010]
[-22.09351921 -66.29632568]
[-24.56508255 -53.04676819]
[-14.71703339 -41.73235703]
[-0.35977656 -45.77397156]
[14.38916111 -43.17045593]
[26.59509468 -34.38545990]
[33.80575562 -21.11795807]
[34.54389191 -5.97391272]
[28.60959816 8.04555798]
[38.45764923 19.35997009]
[52.64976883 23.88025475]
[55.87388611 39.36946487]
[65.72193909 50.68387604]
[75.56998444 61.99828720]
[85.41803741 73.31269836]
[95.26608276 84.62711334]
[110.06177521 82.98155975]
[122.96819305 95.24401855]
[137.36370850 99.45935059]
[151.79306030 103.55738831]
[166.25527954 107.53785706]
[180.71749878 111.51831818]
[195.21163940 115.38095093]
[209.73674011 119.12548828]
[224.26184082 122.87001801]
[233.36860657 121.98205566]
[238.99191284 126.79552460]
[253.45413208 130.77598572]
[267.91635132 134.75645447]
[282.37857056 138.73692322]
[296.84078979 142.71737671]
[311.30303955 146.69784546]
[325.76525879 150.67831421]
[330.84475708 149.35066223]
[335.46026611 150.04460144]
[338.91668701 152.24171448]
[340.82717896 155.22221375]
[355.07788086 159.90388489]
[369.32855225 164.58555603]
[384.85424805 161.54196167]
[394.53082275 172.86508179]
[408.78152466 177.54675293]
[423.03219604 182.22842407]
[437.28286743 186.91009521]
[451.53356934 191.59176636]
[465.85855103 196.04086304]
[480.25408936 200.25621033]
[494.64959717 204.47154236]
[506.84780884 194.88076782]
[522.35491943 194.32524109]
[535.20819092 203.01856995]
[540.46514893 217.61801147]
[536.10455322 232.50976562]
[523.80297852 241.96765137]
[508.29074097 242.35491943]
[495.53256226 233.52267456]
[490.43426514 218.86706543]
[476.03872681 214.65171814]
[461.64321899 210.43638611]
[457.08572388 211.90957642]
[451.55432129 210.52467346]
[446.85189819 205.84245300]
[432.60119629 201.16078186]
[418.35052490 196.47911072]
[404.09985352 191.79743958]
[389.84915161 187.11576843]
[375.34277344 190.49421692]
[364.64688110 178.83624268]
[350.39620972 174.15457153]
[336.14550781 169.47290039]
[321.78479004 165.14053345]
[307.32257080 161.16006470]
[292.86035156 157.17961121]
[278.39810181 153.19914246]
[263.93588257 149.21867371]
[249.47366333 145.23820496]
[235.01144409 141.25775146]
[220.51730347 137.39511108]
[205.99220276 133.65058899]
[191.46710205 129.90605164]
[184.19416809 131.28271484]
[176.73704529 125.98054504]
[162.27481079 122.00007629]
[147.81259155 118.01961517]
[140.51820374 119.27772522]
[133.14837646 113.85487366]
[118.75285339 109.63953400]
[132.58731079 115.43676758]
[140.77397156 128.00572205]
[140.48374939 143.00291443]
[131.81694031 155.24572754]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 31]
[5 30]
[6 29]
[8 27]
[9 26]
[10 25]
[11 24]
[12 22]
[13 21]
[32 117]
[33 116]
[34 115]
[35 114]
[36 113]
[38 111]
[39 110]
[45 104]
[46 103]
[49 99]
[50 98]
[51 97]
[52 96]
[53 95]
[54 94]
[55 93]
[56 92]
[57 91]
[61 89]
[62 88]
[63 87]
[64 86]
[67 85]
[68 84]
[69 83]
[72 80]
[73 79]
[119 188]
[120 187]
[121 185]
[122 184]
[123 183]
[124 181]
[125 180]
[126 179]
[128 178]
[129 177]
[130 176]
[131 175]
[132 174]
[133 173]
[134 172]
[138 171]
[139 170]
[140 169]
[142 167]
[143 166]
[144 165]
[145 164]
[146 163]
[147 160]
[148 159]
[149 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
