%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 07:51:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUUCCUGACUGCGCUCCUCUGGCGCGGCCGCAUUCCCGGCCGUCAGUGGAUCGGGAAGCACCGGCGGCCGCGGUUCGUGUCGUUGCGCGCCAAGCAGAACAUGAUCCGCCGCCUGGAGAUCGAGGCGGAGAACCAUUACUGGCUGAGCAUGCCCUACAUGACCCGGGAGCAGGAGCGCGGCCACGCCGCGGUGCGCAGGAGGGAGGCCUUCGAGGCCAUAAAGGCGGCCGCCACUUCCAAGUUCCCCCCGCAU\
AGAUUCAUUGCGGACCAGCUCGACCAUCUCAAUGUCACCAAGAAAUGGUCCUAA\
) } def
/len { sequence length } bind def

/coor [
[441.59310913 417.75415039]
[448.74380493 404.56826782]
[458.89782715 393.52758789]
[471.44039917 385.30056763]
[485.61422729 380.38485718]
[472.96563721 372.32177734]
[460.31701660 364.25872803]
[447.66842651 356.19567871]
[433.22677612 359.65609741]
[420.28442383 351.65917969]
[416.75277710 336.48800659]
[404.10415649 328.42492676]
[391.45556641 320.36187744]
[378.80694580 312.29882812]
[366.15835571 304.23577881]
[353.50976562 296.17272949]
[338.61853027 295.85574341]
[331.14074707 281.91323853]
[318.49215698 273.85018921]
[306.65148926 276.16070557]
[296.05963135 269.59066772]
[292.65621948 257.18487549]
[280.08996582 248.99406433]
[267.52371216 240.80323792]
[254.95747375 232.61241150]
[242.39123535 224.42160034]
[227.50398254 223.95372009]
[220.16789246 209.93615723]
[207.60163879 201.74533081]
[195.03540039 193.55450439]
[182.46916199 185.36369324]
[169.90292358 177.17286682]
[157.33668518 168.98204041]
[142.44941711 168.51417542]
[135.11332703 154.49661255]
[122.54708099 146.30578613]
[109.98084259 138.11495972]
[97.41459656 129.92414856]
[82.44712830 128.93676758]
[68.91381073 135.40586853]
[55.38048935 141.87496948]
[41.84716797 148.34407043]
[28.31384850 154.81317139]
[14.78052711 161.28225708]
[1.24720645 167.75135803]
[-12.28611469 174.22045898]
[-21.40003395 187.15286255]
[-36.21974182 185.66104126]
[-49.75306320 192.13012695]
[-63.28638458 198.59922791]
[-64.39848328 213.91780090]
[-73.03415680 226.61901855]
[-86.87044525 233.28630066]
[-102.18546295 232.12619019]
[-114.85954285 223.45074463]
[-121.48342133 209.59362793]
[-120.27530670 194.28231812]
[-111.56018066 181.63549805]
[-97.68236542 175.05508423]
[-82.37492371 176.31118774]
[-69.75547791 185.06590271]
[-56.22216034 178.59681702]
[-42.68883896 172.12771606]
[-34.54291153 159.65802002]
[-18.75521278 160.68713379]
[-5.22189140 154.21804810]
[8.31142902 147.74894714]
[21.84474945 141.27984619]
[35.37807083 134.81074524]
[48.91139221 128.34164429]
[62.44471359 121.87255096]
[75.97803497 115.40345001]
[74.76326752 100.45272064]
[60.36310959 96.25325775]
[45.96295166 92.05380249]
[30.54847527 95.61813354]
[20.49632835 84.62706757]
[6.09617043 80.42760468]
[-8.30398655 76.22814178]
[-22.70414352 72.02867889]
[-37.10430145 67.82921600]
[-51.50445557 63.62975693]
[-63.13435745 69.12815857]
[-75.01866913 65.37104034]
[-80.97821045 54.88184738]
[-95.33506775 50.53666687]
[-109.69192505 46.19149017]
[-124.04878998 41.84631348]
[-137.03970337 50.55092621]
[-152.58088684 48.81726837]
[-163.33427429 37.46391296]
[-164.22244263 21.85157394]
[-154.82603455 9.35191727]
[-139.58172607 5.86689806]
[-125.68743896 13.04203701]
[-119.70361328 27.48945236]
[-105.34674835 31.83463097]
[-90.98989105 36.17980957]
[-76.63303375 40.52498627]
[-59.75717926 35.63160706]
[-47.30499649 49.22959900]
[-32.90483856 53.42906189]
[-18.50468063 57.62852097]
[-4.10452414 61.82798386]
[10.29563236 66.02745056]
[24.69578934 70.22690582]
[39.08026886 66.36219788]
[50.16241455 77.65364075]
[64.56256866 81.85310364]
[78.96273041 86.05256653]
[87.15354919 73.48632812]
[77.49880219 62.00652313]
[67.84405518 50.52671814]
[58.18930817 39.04691696]
[48.53456116 27.56711388]
[38.87981415 16.08731270]
[24.07582474 10.50587368]
[21.80543137 -4.21467590]
[6.21287251 -9.29445267]
[3.08098173 -25.39175987]
[15.63158035 -35.94706726]
[30.95368767 -30.10198021]
[33.28523254 -13.86942291]
[47.39865112 -9.10909653]
[50.35961914 6.43256521]
[60.01436615 17.91236877]
[69.66911316 29.39216995]
[79.32386017 40.87197113]
[88.97860718 52.35177612]
[98.63335419 63.83157730]
[105.19094849 60.19181442]
[97.91162109 47.07649994]
[111.02704620 39.79737854]
[118.30615234 52.91228485]
[124.86374664 49.27251816]
[120.22849274 35.00667191]
[115.59323883 20.74082375]
[103.05088043 10.17573166]
[106.19532013 -5.91912842]
[121.79183960 -10.98674393]
[133.79606628 0.18601356]
[129.85908508 16.10556793]
[134.49433899 30.37141609]
[139.12959290 44.63726425]
[153.97888184 42.51622009]
[154.43484497 27.52315331]
[154.89080811 12.53008461]
[147.57658386 -1.49890733]
[155.69718933 -13.98510075]
[156.07717896 -28.98028755]
[156.38117981 -43.97720718]
[156.68519592 -58.97412491]
[156.98919678 -73.97104645]
[146.95913696 -86.49211884]
[150.63525391 -102.10831451]
[165.19757080 -108.84022522]
[179.47511292 -101.52370453]
[182.51536560 -85.77135468]
[171.98611450 -73.66703796]
[171.68211365 -58.67012024]
[171.37811279 -43.67320251]
[171.07409668 -28.67628288]
[174.06442261 -21.96034431]
[170.69026184 -13.52913284]
[178.03710938 -0.57254577]
[169.88388062 12.98605251]
[169.42791748 27.97912025]
[168.97195435 42.97218704]
[172.47804260 72.22154999]
[165.68775940 97.29793549]
[151.71319580 115.08195496]
[134.45075989 124.00974274]
[117.91871643 124.20552063]
[105.60542297 117.35790253]
[118.17166138 125.54872131]
[130.73789978 133.73954773]
[143.30415344 141.93035889]
[159.09022522 142.98410034]
[165.52749634 156.41580200]
[178.09373474 164.60662842]
[190.65998840 172.79745483]
[203.22622681 180.98826599]
[215.79246521 189.17909241]
[228.35870361 197.36991882]
[244.14479065 198.42364502]
[250.58206177 211.85534668]
[263.14831543 220.04617310]
[275.71453857 228.23699951]
[288.28079224 236.42781067]
[300.84701538 244.61863708]
[319.27563477 245.20947266]
[326.55520630 261.20156860]
[339.20379639 269.26464844]
[354.99975586 270.15832520]
[361.57281494 283.52410889]
[374.22140503 291.58715820]
[386.87002563 299.65023804]
[399.51861572 307.71328735]
[412.16720581 315.77633667]
[424.81582642 323.83938599]
[440.05993652 320.63714600]
[452.77255249 328.99441528]
[455.73147583 343.54708862]
[468.38009644 351.61013794]
[481.02868652 359.67318726]
[493.67727661 367.73623657]
[508.62167358 369.02676392]
[522.46527100 363.25140381]
[536.30889893 357.47607422]
[550.15246582 351.70071411]
[563.99609375 345.92538452]
[576.28613281 334.24673462]
[590.91064453 342.82354736]
[586.71746826 359.25076294]
[569.77142334 359.76898193]
[555.92785645 365.54434204]
[542.08422852 371.31967163]
[528.24060059 377.09500122]
[514.39703369 382.87036133]
[516.09240723 390.17623901]
[530.70410156 386.78552246]
[545.05371094 391.15463257]
[534.09484863 401.39724731]
[519.48309326 404.78796387]
[521.17846680 412.09384155]
[536.15075684 411.18234253]
[551.12304688 410.27081299]
[564.49462891 400.77700806]
[579.28753662 407.85528564]
[580.28405762 424.22412109]
[566.45904541 433.04467773]
[552.03454590 425.24310303]
[537.06225586 426.15460205]
[522.08996582 427.06613159]
[520.35760498 434.36331177]
[534.95196533 437.82803345]
[549.54638672 441.29275513]
[560.45312500 451.59045410]
[546.08166504 455.88711548]
[531.48724365 452.42239380]
[516.89288330 448.95767212]
[515.16052246 456.25488281]
[528.12548828 463.79870605]
[541.09045410 471.34255981]
[554.05548096 478.88638306]
[566.18902588 472.40899658]
[579.83081055 472.75656128]
[591.43359375 479.73208618]
[598.03277588 491.42895508]
[598.00402832 504.75091553]
[610.89184570 512.42578125]
[623.77972412 520.10058594]
[636.66760254 527.77545166]
[649.55541992 535.45025635]
[663.31591797 528.47509766]
[678.66064453 530.06939697]
[690.69329834 539.72448730]
[695.57415771 554.35937500]
[691.74584961 569.30419922]
[680.42993164 579.79010010]
[665.23730469 582.47100830]
[651.01586914 576.49157715]
[642.30358887 563.75970459]
[641.88061523 548.33813477]
[628.99273682 540.66326904]
[616.10491943 532.98846436]
[603.21704102 525.31359863]
[590.32916260 517.63879395]
[575.43267822 524.59216309]
[559.16760254 521.24426270]
[548.00653076 508.72433472]
[546.51159668 491.85134888]
[533.54663086 484.30752563]
[520.58166504 476.76367188]
[507.61669922 469.21984863]
[501.95083618 474.13391113]
[484.95327759 488.87609863]
[490.58801270 502.77752686]
[496.22277832 516.67895508]
[501.85754395 530.58038330]
[507.49227905 544.48181152]
[513.12707520 558.38323975]
[525.48168945 568.26617432]
[523.09210205 582.96783447]
[528.72686768 596.86926270]
[543.96472168 598.30670166]
[556.78277588 606.67059326]
[564.23565674 620.03900146]
[564.61059570 635.33990479]
[557.82153320 649.05731201]
[545.42852783 658.03906250]
[530.27935791 660.22119141]
[515.85522461 655.10223389]
[505.47070312 643.85858154]
[501.51205444 629.07385254]
[504.88894653 614.14550781]
[514.82543945 602.50402832]
[509.19067383 588.60260010]
[497.23904419 579.71392822]
[499.22561646 564.01794434]
[493.59088135 550.11657715]
[487.95611572 536.21514893]
[482.32135010 522.31372070]
[476.68661499 508.41229248]
[471.05184937 494.51086426]
[458.56811523 486.19479370]
[448.49295044 475.08218384]
[441.43624878 461.84573364]
[437.82528687 447.28686523]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 206]
[6 205]
[7 204]
[8 203]
[11 200]
[12 199]
[13 198]
[14 197]
[15 196]
[16 195]
[18 193]
[19 192]
[22 190]
[23 189]
[24 188]
[25 187]
[26 186]
[28 184]
[29 183]
[30 182]
[31 181]
[32 180]
[33 179]
[35 177]
[36 176]
[37 175]
[38 174]
[39 72]
[40 71]
[41 70]
[42 69]
[43 68]
[44 67]
[45 66]
[46 65]
[48 63]
[49 62]
[50 61]
[73 110]
[74 109]
[75 108]
[77 106]
[78 105]
[79 104]
[80 103]
[81 102]
[82 101]
[85 99]
[86 98]
[87 97]
[88 96]
[111 130]
[112 129]
[113 128]
[114 127]
[115 126]
[116 125]
[118 123]
[135 144]
[136 143]
[137 142]
[145 168]
[146 167]
[147 166]
[149 164]
[150 162]
[151 161]
[152 160]
[153 159]
[207 219]
[208 218]
[209 217]
[210 216]
[211 215]
[225 234]
[226 233]
[227 232]
[242 275]
[243 274]
[244 273]
[245 272]
[250 268]
[251 267]
[252 266]
[253 265]
[254 264]
[277 305]
[278 304]
[279 303]
[280 302]
[281 301]
[282 300]
[284 298]
[285 297]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
