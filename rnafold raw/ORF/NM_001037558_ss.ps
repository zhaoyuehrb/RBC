%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sat Sep 12 09:05:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGGUAACUGGGGCCUUGGAAUUGCUCCAUGGGUUGAUGGCGAAUCAGAGCUGGAGUUUAGGAGACUAGGGAUGCAAGGACCCUUGGAGGCAUUAAGGAGGAGGGAAUGGAAUACACAGAGGGCCUCCUUCUCUUUCAGCUUUUUAAUUGCCCUCUCUCCUCACACAGUAGAUUACUGCCACUCCUAUGAACUGUUCAAUAGGCGGUGGCAUGGGCAUGUCCUGGCUACACAGCGGCCCAGCCUCUUUAUUUUG\
AUGUUAGUGUGA\
) } def
/len { sequence length } bind def

/coor [
[209.60978699 519.50506592]
[221.37380981 528.81542969]
[217.04058838 514.45495605]
[212.70735168 500.09448242]
[208.37411499 485.73403931]
[204.04087830 471.37356567]
[190.83479309 464.58129883]
[186.23571777 450.07946777]
[193.44961548 436.27374268]
[189.11637878 421.91326904]
[184.78314209 407.55282593]
[180.36582947 393.21798706]
[175.78076172 378.93591309]
[171.11207581 364.68099976]
[166.44338989 350.42605591]
[161.77470398 336.17111206]
[151.14529419 330.44241333]
[147.12663269 318.63223267]
[152.38183594 306.87799072]
[147.88056946 292.56930542]
[143.37930298 278.26062012]
[130.09451294 271.62359619]
[125.32574463 257.17669678]
[132.37731934 243.28736877]
[127.87604523 228.97868347]
[123.37477875 214.66999817]
[118.38715363 209.25138855]
[118.90567017 200.16712952]
[114.57244110 185.80665588]
[110.23920441 171.44619751]
[105.90597534 157.08572388]
[101.57273865 142.72525024]
[74.73470306 96.10588837]
[63.29442596 86.40434265]
[45.87167740 88.14916229]
[32.84553146 76.96058655]
[31.97645569 60.14967728]
[20.42324066 50.58290100]
[4.85941553 47.74073410]
[-0.00857551 33.66408920]
[-11.56178951 24.09730911]
[-23.11500359 14.53053188]
[-34.66821671 4.96375370]
[-46.22143173 -4.60302448]
[-62.56549454 -0.18431516]
[-78.16314697 -6.32913113]
[-86.92594147 -20.42546844]
[-85.56107330 -36.80024719]
[-97.22563934 -46.23094177]
[-108.89020538 -55.66163635]
[-120.55476379 -65.09233093]
[-132.21932983 -74.52301788]
[-143.88389587 -83.95371246]
[-155.54846191 -93.38440704]
[-167.21301270 -102.81510162]
[-178.87757874 -112.24579620]
[-190.54214478 -121.67648315]
[-204.82420349 -126.26154327]
[-219.79844666 -125.38287354]
[-234.77268982 -124.50419617]
[-249.74693298 -123.62551880]
[-264.72116089 -122.74684906]
[-278.11355591 -113.28239441]
[-292.89089966 -120.39309692]
[-293.85153198 -136.76408386]
[-280.00723267 -145.55429077]
[-265.59985352 -137.72108459]
[-250.62561035 -138.59976196]
[-235.65136719 -139.47843933]
[-220.67712402 -140.35711670]
[-205.70288086 -141.23577881]
[-203.25221252 -156.03424072]
[-217.14381409 -161.69316101]
[-231.03541565 -167.35209656]
[-244.92701721 -173.01103210]
[-258.81860352 -178.66995239]
[-272.83905029 -184.00166321]
[-286.98062134 -189.00325012]
[-301.12222290 -194.00482178]
[-317.13800049 -190.47966003]
[-327.99749756 -202.76800537]
[-322.52938843 -218.22865295]
[-306.35879517 -220.95703125]
[-296.12063599 -208.14640808]
[-281.97906494 -203.14482117]
[-267.83749390 -198.14324951]
[-265.27548218 -199.19776917]
[-262.14837646 -199.31878662]
[-258.80328369 -198.28862000]
[-255.65881348 -196.01693726]
[-253.15968323 -192.56155396]
[-239.26808167 -186.90261841]
[-225.37649536 -181.24369812]
[-211.48489380 -175.58476257]
[-197.59329224 -169.92584229]
[-192.44766235 -175.38226318]
[-177.01077271 -191.75151062]
[-183.47373962 -205.28776550]
[-189.93669128 -218.82402039]
[-196.39964294 -232.36027527]
[-202.86259460 -245.89653015]
[-209.32556152 -259.43280029]
[-215.78851318 -272.96905518]
[-222.25146484 -286.50531006]
[-228.71443176 -300.04156494]
[-246.65975952 -302.82638550]
[-259.21145630 -315.73144531]
[-261.45733643 -333.43423462]
[-252.68228149 -348.79089355]
[-259.46078491 -362.17193604]
[-274.72940063 -365.54888916]
[-284.21408081 -377.98168945]
[-283.43652344 -393.59991455]
[-272.76379395 -405.02914429]
[-257.23529053 -406.87283325]
[-244.18304443 -398.26043701]
[-239.76997375 -383.25848389]
[-246.07975769 -368.95043945]
[-239.30125427 -355.56939697]
[-227.20095825 -355.44592285]
[-216.23054504 -350.17041016]
[-208.48796082 -340.68392944]
[-205.48255920 -328.73916626]
[-207.84107971 -316.57662964]
[-215.17817688 -306.50451660]
[-208.71520996 -292.96826172]
[-202.25225830 -279.43200684]
[-195.78930664 -265.89575195]
[-189.32633972 -252.35949707]
[-182.86338806 -238.82324219]
[-176.40043640 -225.28698730]
[-169.93748474 -211.75073242]
[-163.47451782 -198.21447754]
[-158.05477905 -154.79830933]
[-181.11145020 -133.34104919]
[-169.44688416 -123.91035461]
[-157.78231812 -114.47966003]
[-146.11776733 -105.04897308]
[-134.45320129 -95.61827850]
[-122.78863525 -86.18758392]
[-111.12406921 -76.75688934]
[-99.45951080 -67.32619476]
[-87.79494476 -57.89550400]
[-76.13038635 -48.46481323]
[-63.63376617 -53.10874939]
[-50.36646652 -50.96280289]
[-39.80239105 -42.48076630]
[-34.76087189 -29.78946114]
[-36.65465546 -16.15623856]
[-25.10144043 -6.58946037]
[-13.54822540 2.97731781]
[-1.99501145 12.54409599]
[9.55820274 22.11087418]
[24.29566574 24.26876068]
[29.99001884 39.02968597]
[41.54323196 48.59646225]
[54.05620193 45.60688782]
[66.19155121 50.43229675]
[73.44787598 61.52336884]
[72.99597931 74.96406555]
[84.43625641 84.66561127]
[77.48147583 71.37535095]
[82.60287476 57.27672195]
[96.46612549 51.54870605]
[110.04550934 57.92055130]
[114.50009155 72.24384308]
[106.93006897 85.19306946]
[118.81250763 76.03841400]
[130.69494629 66.88376617]
[142.57737732 57.72911072]
[154.45982361 48.57445526]
[163.31684875 34.11798859]
[179.66021729 38.62692642]
[179.85177612 55.57979202]
[163.61447144 60.45689392]
[151.73204041 69.61154938]
[139.84959412 78.76619720]
[127.96716309 87.92085266]
[116.08472443 97.07550812]
[121.90610504 110.89981842]
[136.75793457 108.79674530]
[151.60977173 106.69367218]
[166.46160889 104.59059906]
[181.31344604 102.48752594]
[196.15270996 100.29743958]
[210.97886658 98.02041626]
[225.80503845 95.74339294]
[240.63121033 93.46636963]
[255.45736694 91.18934631]
[270.26992798 88.82546234]
[285.06838989 86.37480927]
[299.86685181 83.92414856]
[314.50531006 75.37129211]
[326.77624512 87.07002258]
[318.93164062 102.09994507]
[302.31750488 98.72260284]
[287.51904297 101.17326355]
[272.72058105 103.62392426]
[266.65621948 107.80256653]
[257.73440552 106.01551056]
[242.90823364 108.29253387]
[228.08206177 110.56955719]
[213.25588989 112.84658051]
[198.42973328 115.12360382]
[192.31680298 119.23088074]
[183.41651917 117.33936310]
[168.56468201 119.44243622]
[153.71284485 121.54550934]
[138.86100769 123.64858246]
[124.00917816 125.75165558]
[115.93321228 138.39201355]
[120.26644135 152.75248718]
[124.59967804 167.11296082]
[128.93290710 181.47343445]
[133.26614380 195.83389282]
[137.68347168 210.16873169]
[142.18473816 224.47741699]
[146.68600464 238.78610229]
[160.41934204 246.13684082]
[164.78042603 260.71200562]
[157.68798828 273.75933838]
[162.18925476 288.06802368]
[166.69053650 302.37670898]
[180.54623413 314.52941895]
[176.02964783 331.50241089]
[180.69833374 345.75735474]
[185.36701965 360.01229858]
[190.03570557 374.26724243]
[195.66166687 381.41854858]
[194.67451477 388.71670532]
[200.21624756 395.93350220]
[199.14361572 403.21957397]
[203.47685242 417.58004761]
[207.81008911 431.94052124]
[221.45629883 439.45175171]
[225.64625549 454.07702637]
[218.40135193 467.04031372]
[222.73458862 481.40078735]
[227.06782532 495.76126099]
[231.40104675 510.12173462]
[235.73428345 524.48217773]
[240.90129089 538.56420898]
[246.88430786 552.31927490]
[259.48394775 561.88800049]
[257.46527100 576.64520264]
[263.44830322 590.40032959]
[278.62655640 593.62524414]
[288.98541260 605.17834473]
[290.54168701 620.61712646]
[282.69692993 634.00518799]
[268.46765137 640.19445801]
[253.32527161 636.80505371]
[243.09236145 625.14031982]
[241.70367432 609.68548584]
[249.69317627 596.38336182]
[243.71015930 582.62823486]
[231.53848267 574.04333496]
[233.12919617 558.30230713]
[227.14616394 544.54718018]
[224.19670105 559.25439453]
[214.34759521 570.56787109]
[200.18684387 575.51489258]
[185.43539429 572.79553223]
[173.96943665 563.12432861]
[168.80180359 549.04260254]
[171.29039001 534.25048828]
[180.78128052 522.63482666]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 241]
[3 240]
[4 239]
[5 238]
[6 237]
[9 234]
[10 233]
[11 232]
[12 230]
[13 228]
[14 227]
[15 226]
[16 225]
[19 223]
[20 222]
[21 221]
[24 218]
[25 217]
[26 216]
[28 215]
[29 214]
[30 213]
[31 212]
[32 211]
[33 161]
[34 160]
[37 156]
[38 155]
[40 153]
[41 152]
[42 151]
[43 150]
[44 149]
[48 144]
[49 143]
[50 142]
[51 141]
[52 140]
[53 139]
[54 138]
[55 137]
[56 136]
[57 135]
[58 71]
[59 70]
[60 69]
[61 68]
[62 67]
[72 95]
[73 94]
[74 93]
[75 92]
[76 91]
[77 86]
[78 85]
[79 84]
[97 133]
[98 132]
[99 131]
[100 130]
[101 129]
[102 128]
[103 127]
[104 126]
[105 125]
[109 119]
[110 118]
[167 179]
[168 178]
[169 177]
[170 176]
[171 175]
[180 210]
[181 209]
[182 208]
[183 207]
[184 206]
[185 204]
[186 203]
[187 202]
[188 201]
[189 200]
[190 198]
[191 197]
[192 196]
[242 259]
[243 258]
[245 256]
[246 255]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
