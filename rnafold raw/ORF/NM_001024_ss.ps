%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 23:53:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCAGAACGACGCCGGCGAGUUCGUGGACCUGUACGUGCCGCGGAAAUGCUCCGCUAGCAAUCGCAUCAUCGGUGCCAAGGACCACGCAUCCAUCCAGAUGAACGUGGCCGAGGUUGACAAGGUCACAGGCAGGUUUAAUGGCCAGUUUAAAACUUAUGCUAUCUGCGGGGCCAUUCGUAGGAUGGGUGAGUCAGAUGAUUCCAUUCUCCGAUUGGCCAAGGCCGAUGGCAUCGUCUCAAAGAACUUUUGA\
) } def
/len { sequence length } bind def

/coor [
[63.73257065 198.58760071]
[48.84054947 200.38418579]
[35.01319122 194.57005310]
[25.87981033 182.67124939]
[23.83767700 167.81091309]
[29.42280006 153.88948059]
[41.16923141 144.56095886]
[55.99383926 142.27383423]
[70.00556183 147.62841797]
[79.52608490 159.21797180]
[78.40956116 144.25958252]
[77.29302979 129.30119324]
[67.54068756 117.90418243]
[52.93474197 114.48859406]
[38.32879257 111.07299805]
[23.12932205 115.46466064]
[12.49822712 105.03253937]
[-2.70124388 109.42420197]
[-13.33233929 98.99208069]
[-27.93828773 95.57649231]
[-43.13776016 99.96814728]
[-53.76885223 89.53603363]
[-68.37480164 86.12043762]
[-83.57427216 90.51210022]
[-94.20536804 80.07997894]
[-108.81131744 76.66439056]
[-124.01078796 81.05604553]
[-134.64187622 70.62393188]
[-149.24783325 67.20833588]
[-163.85377502 63.79274750]
[-178.45973206 60.37715530]
[-193.06567383 56.96156693]
[-194.95367432 67.00127411]
[-200.84013367 76.83798981]
[-210.67390442 84.93386078]
[-223.83551025 89.79576874]
[-239.16925049 90.17735291]
[-255.08477783 85.26275635]
[-269.21868896 90.28594971]
[-283.35260010 95.30914307]
[-294.98406982 109.60071564]
[-312.11010742 105.71899414]
[-326.18054199 110.91730499]
[-340.25100708 116.11560822]
[-354.32144165 121.31391907]
[-368.39190674 126.51222992]
[-376.38076782 140.42472839]
[-392.26013184 142.71055603]
[-403.84872437 131.61622620]
[-402.25674438 115.65235138]
[-388.70544434 107.06505585]
[-373.59020996 112.44178009]
[-359.51974487 107.24346924]
[-345.44931030 102.04515839]
[-331.37884521 96.84685516]
[-317.30841064 91.64854431]
[-311.97778320 80.80872345]
[-300.31991577 76.35386658]
[-288.37579346 81.17522430]
[-274.24188232 76.15203094]
[-260.10797119 71.12883759]
[-260.66622925 63.64964676]
[-274.17898560 57.13767242]
[-261.78277588 48.69125748]
[-262.34103394 41.21206284]
[-277.06405640 38.34281921]
[-291.78707886 35.47357559]
[-306.51010132 32.60432816]
[-321.23312378 29.73508453]
[-337.93634033 32.64002228]
[-345.35168457 17.39373207]
[-332.75396729 6.04760981]
[-318.36389160 15.01206017]
[-303.64083862 17.88130569]
[-288.91781616 20.75054932]
[-274.19479370 23.61979485]
[-259.47177124 26.48904037]
[-255.85699463 19.91763687]
[-263.62423706 7.08525944]
[-248.62742615 6.77483177]
[-245.01264954 0.20342942]
[-255.31880188 -10.69533253]
[-263.46539307 -14.76558685]
[-265.68423462 -21.79399681]
[-275.85427856 -32.81989288]
[-286.02432251 -43.84578705]
[-296.19433594 -54.87168121]
[-306.36437988 -65.89757538]
[-316.67053223 -76.79633331]
[-327.11123657 -87.56628418]
[-337.55194092 -98.33623505]
[-347.99264526 -109.10618591]
[-363.79693604 -109.10085297]
[-374.91680908 -120.33133698]
[-374.75503540 -136.13479614]
[-363.40762329 -147.13531494]
[-347.60675049 -146.80648804]
[-336.72680664 -135.34339905]
[-337.22268677 -119.54688263]
[-326.78198242 -108.77693176]
[-316.34130859 -98.00698090]
[-305.90060425 -87.23703766]
[-301.24926758 -86.26692200]
[-297.14880371 -82.38117218]
[-295.33850098 -76.06761169]
[-285.16845703 -65.04171753]
[-274.99841309 -54.01582336]
[-264.82836914 -42.98992920]
[-254.65834045 -31.96403503]
[-244.42004395 -21.00149536]
[-234.11387634 -10.10273266]
[-193.48086548 9.14824390]
[-189.65008545 42.35561752]
[-175.04414368 45.77120972]
[-160.43818665 49.18679810]
[-145.83224487 52.60239029]
[-131.22628784 56.01798248]
[-117.07154083 51.38201904]
[-105.39572906 62.05844116]
[-90.78977966 65.47402954]
[-76.63502502 60.83806610]
[-64.95921326 71.51448822]
[-50.35326385 74.93008423]
[-36.19850922 70.29412079]
[-24.52269745 80.97054291]
[-9.91674805 84.38613129]
[4.23800755 79.75016785]
[15.91381836 90.42658997]
[30.06857300 85.79062653]
[41.74438477 96.46705627]
[56.35033417 99.88264465]
[70.95628357 103.29823303]
[74.14913177 82.72888184]
[90.90322876 68.33198547]
[95.66230774 54.10696793]
[100.42138672 39.88195038]
[105.18046570 25.65692902]
[101.38200378 9.70375538]
[113.48289490 -1.36423850]
[129.03477478 3.83875084]
[132.03919983 19.96033478]
[119.40547943 30.41600800]
[114.64640045 44.64102936]
[109.88732147 58.86604691]
[105.12824249 73.09106445]
[118.53118896 79.82613373]
[127.10514069 67.51811981]
[135.67909241 55.21009827]
[144.25305176 42.90208054]
[148.34541321 26.44945717]
[165.28794861 25.82735443]
[170.57589722 41.93555069]
[156.56106567 51.47603607]
[147.98710632 63.78405380]
[139.41316223 76.09207153]
[130.83920288 88.40009308]
[127.57537842 92.48811340]
[123.85393524 95.85255432]
[138.70126343 97.98727417]
[153.54858398 100.12200165]
[168.39590454 102.25672150]
[183.24322510 104.39144135]
[198.09054565 106.52616882]
[212.93786621 108.66088867]
[227.78518677 110.79560852]
[242.54602051 105.10103607]
[254.04261780 114.57086182]
[268.88995361 116.70558167]
[282.71466064 105.96558380]
[299.69311523 108.51033783]
[309.37240601 122.27837372]
[324.24508667 124.22857666]
[339.11776733 126.17877197]
[353.99044800 128.12896729]
[368.86312866 130.07916260]
[383.55212402 124.20174408]
[395.16540527 133.52809143]
[410.03808594 135.47828674]
[424.91076660 137.42848206]
[439.59976196 131.55105591]
[451.21307373 140.87739563]
[466.08575439 142.82760620]
[480.95843506 144.77780151]
[495.83111572 146.72799683]
[510.70379639 148.67819214]
[525.57647705 150.62838745]
[540.44915771 152.57858276]
[555.32183838 154.52879333]
[560.09423828 152.55018616]
[564.69268799 152.57919312]
[568.38714600 154.21813965]
[570.70819092 156.83860779]
[585.49792480 159.34135437]
[600.28765869 161.84411621]
[615.46185303 155.62504578]
[628.26751709 165.86941528]
[625.53131104 182.03868103]
[610.06799316 187.49929810]
[597.78491211 176.63385010]
[582.99517822 174.13108826]
[568.20544434 171.62834167]
[553.37164307 169.40147400]
[538.49896240 167.45127869]
[523.62628174 165.50106812]
[508.75360107 163.55087280]
[493.88092041 161.60067749]
[479.00823975 159.65048218]
[464.13555908 157.70028687]
[449.26287842 155.75009155]
[435.63766479 161.76699829]
[422.96057129 152.30116272]
[408.08789062 150.35096741]
[393.21520996 148.40077209]
[379.59002686 154.41767883]
[366.91293335 144.95185852]
[352.04025269 143.00164795]
[337.16757202 141.05145264]
[322.29489136 139.10125732]
[307.42218018 137.15106201]
[298.41607666 146.34426880]
[285.56906128 148.71534729]
[273.52120972 143.18048096]
[266.75521851 131.55290222]
[251.90789795 129.41818237]
[238.20904541 135.26544189]
[225.65046692 125.64293671]
[210.80314636 123.50820923]
[195.95582581 121.37348938]
[181.10850525 119.23876953]
[166.26118469 117.10404205]
[151.41386414 114.96932220]
[136.56652832 112.83459473]
[121.71921539 110.69987488]
[110.95379639 124.37276459]
[92.25141907 128.18466187]
[93.36794281 143.14305115]
[94.48447418 158.10144043]
[96.52697754 172.96173096]
[99.48757172 187.66665649]
[102.44817352 202.37158203]
[105.40877533 217.07650757]
[108.36937714 231.78143311]
[120.87957764 241.82505798]
[120.68306732 257.86691284]
[107.93058014 267.60104370]
[92.40473175 263.56030273]
[86.01563263 248.84434509]
[93.66444397 234.74203491]
[90.70384979 220.03710938]
[87.74324799 205.33218384]
[84.78264618 190.62725830]
[81.82205200 175.92233276]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 237]
[11 236]
[12 235]
[13 132]
[14 131]
[15 130]
[17 128]
[19 126]
[20 125]
[22 123]
[23 122]
[25 120]
[26 119]
[28 117]
[29 116]
[30 115]
[31 114]
[32 113]
[38 61]
[39 60]
[40 59]
[42 56]
[43 55]
[44 54]
[45 53]
[46 52]
[65 77]
[66 76]
[67 75]
[68 74]
[69 73]
[81 111]
[82 110]
[84 109]
[85 108]
[86 107]
[87 106]
[88 105]
[89 102]
[90 101]
[91 100]
[92 99]
[134 145]
[135 144]
[136 143]
[137 142]
[146 156]
[147 155]
[148 154]
[149 153]
[158 233]
[159 232]
[160 231]
[161 230]
[162 229]
[163 228]
[164 227]
[165 226]
[167 224]
[168 223]
[171 219]
[172 218]
[173 217]
[174 216]
[175 215]
[177 213]
[178 212]
[179 211]
[181 209]
[182 208]
[183 207]
[184 206]
[185 205]
[186 204]
[187 203]
[188 202]
[192 201]
[193 200]
[194 199]
[238 252]
[239 251]
[240 250]
[241 249]
[242 248]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
