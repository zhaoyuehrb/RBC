%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sat Sep 12 02:04:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCUGCCAUUUUCAAUUUUCAGAGUCUAUUGACUGUAAUCUUGCUGCUUAUAUGUACCUGUGCUUAUAUUCGAUCCUUGGCACCCAGCCUCCUGGACAGAAAUAAAACUGGAUUGUUGGGUAUAUUUUGGAAGUGUGCCAGAAUUGGUGAACGGAAGAGUCCUUAUGUUGCAGUAUGCUGUAUAGUAAUGGCCUUCAGCAUCCUCUUCAUACAGUAG\
) } def
/len { sequence length } bind def

/coor [
[238.50976562 223.68045044]
[251.51106262 216.19937134]
[266.11605835 212.77973938]
[281.09094238 213.71215820]
[268.24569702 205.96620178]
[255.40045166 198.22023010]
[242.55522156 190.47427368]
[229.65501404 182.82022095]
[216.64682007 175.35116577]
[203.58561707 167.97517395]
[190.52442932 160.59916687]
[177.46324158 153.22317505]
[164.40205383 145.84718323]
[151.34085083 138.47119141]
[138.27966309 131.09519958]
[125.21847534 123.71920013]
[112.15728760 116.34320831]
[123.20269012 126.49205017]
[125.72453308 141.27854919]
[118.66747284 154.51477051]
[104.98475647 160.66159058]
[90.40239716 157.14666748]
[81.02286530 145.44093323]
[80.77134705 130.44303894]
[89.75414276 118.42865753]
[78.27878571 128.08868408]
[66.80342865 137.74871826]
[55.32807922 147.40875244]
[50.25548553 163.00366211]
[34.15962219 166.14295959]
[23.59853363 153.59722900]
[29.43656158 138.27243042]
[45.66804504 135.93341064]
[57.14339828 126.27336884]
[68.61875153 116.61333466]
[80.09410858 106.95330048]
[72.34814453 94.10807037]
[58.44931793 99.74922943]
[44.55049515 105.39038849]
[34.90708160 118.65449524]
[18.62890816 116.66625977]
[12.46156216 101.47100067]
[22.74948120 88.70030212]
[38.90933609 91.49156189]
[52.80815887 85.85040283]
[66.70698547 80.20924377]
[69.02461243 73.07631683]
[54.98115158 78.34710693]
[42.10424042 70.65391541]
[40.09022141 55.78974152]
[50.45565414 44.94733429]
[65.39534760 46.29105377]
[73.65986633 58.81047058]
[75.97749329 51.67754745]
[68.04889679 38.94422913]
[60.12030411 26.21091270]
[52.19170761 13.47759533]
[44.26311111 0.74427748]
[36.33451843 -11.98904037]
[28.40592194 -24.72235680]
[20.47732735 -37.45567322]
[9.72034931 -47.90973663]
[-3.23418474 -55.47148895]
[-16.18871880 -63.03323746]
[-29.14325333 -70.59498596]
[-42.09778595 -78.15673065]
[-54.18021011 -68.93266296]
[-68.87409210 -65.03929901]
[-83.93872833 -67.07036591]
[-97.07686615 -74.71613312]
[-106.28503418 -86.81068420]
[-110.15905762 -101.50967407]
[-108.10817719 -116.57162476]
[-100.44513702 -129.69969177]
[-88.33848572 -138.89195251]
[-73.63441467 -142.74662781]
[-58.57517242 -140.67593384]
[-45.45719528 -132.99563599]
[-36.28087616 -120.87689972]
[-32.44553757 -106.16777039]
[-34.53603745 -91.11126709]
[-21.58150482 -83.54952240]
[-8.62697029 -75.98777008]
[4.32756424 -68.42601776]
[17.28209877 -60.86427307]
[27.88870049 -71.47087097]
[20.32695198 -84.42540741]
[12.76520252 -97.37994385]
[5.20345354 -110.33448029]
[-9.29804897 -117.99205017]
[-9.64667416 -134.38749695]
[4.51621389 -142.65457153]
[18.62104988 -134.28883362]
[18.15798759 -117.89622498]
[25.71973610 -104.94168854]
[33.28148651 -91.98715973]
[40.84323502 -79.03262329]
[47.94233704 -81.45186615]
[69.23963928 -88.70960236]
[67.31714630 -103.58589935]
[65.39465332 -118.46218872]
[51.71162033 -125.78025818]
[44.97357559 -139.75804138]
[47.77143860 -155.02078247]
[59.02937317 -165.69967651]
[74.41847229 -167.68843079]
[88.02131653 -160.22236633]
[94.60733795 -146.17230225]
[91.64406586 -130.94081116]
[80.27095032 -120.38468170]
[82.19344330 -105.50839233]
[84.11593628 -90.63209534]
[93.61164093 -79.02040100]
[97.30013275 -64.48097229]
[94.48806000 -49.74691772]
[85.70403290 -37.58793640]
[72.59925842 -30.28965950]
[57.63715744 -29.22400665]
[43.63029480 -34.59129715]
[33.21064377 -45.38426971]
[41.13924026 -32.65095139]
[49.06783676 -19.91763496]
[56.99642944 -7.18431807]
[64.92502594 5.54899931]
[72.85362244 18.28231621]
[80.78221893 31.01563454]
[88.71081543 43.74895096]
[126.85272217 72.28518677]
[119.53327942 103.28202057]
[132.59446716 110.65801239]
[145.65565491 118.03400421]
[158.71685791 125.40999603]
[171.77804565 132.78599548]
[184.83923340 140.16198730]
[197.90042114 147.53797913]
[210.96160889 154.91397095]
[224.02281189 162.28996277]
[233.02746582 163.78312683]
[237.21675110 169.86569214]
[246.19918823 171.48727417]
[250.30117798 177.62904358]
[263.14642334 185.37500000]
[275.99166870 193.12095642]
[288.83688354 200.86692810]
[294.84115601 200.07250977]
[300.18725586 201.56817627]
[304.10925293 204.74784851]
[306.19290161 208.79315186]
[320.45874023 213.42840576]
[334.72460938 218.06365967]
[348.99044800 222.69891357]
[358.32333374 215.34735107]
[369.92678833 213.43031311]
[380.90234375 217.30950928]
[388.56466675 225.91323853]
[391.09848022 237.02940369]
[405.22613525 242.07014465]
[419.35382080 247.11088562]
[433.48147583 252.15162659]
[442.60888672 252.08741760]
[447.77401733 257.36651611]
[461.82827759 262.60848999]
[475.88250732 267.85046387]
[491.51647949 265.42364502]
[500.73739624 277.12084961]
[514.79162598 282.36279297]
[528.84588623 287.60476685]
[542.90014648 292.84674072]
[557.13854980 286.52972412]
[571.31689453 292.04602051]
[577.25146484 305.65911865]
[591.30572510 310.90109253]
[605.35992432 316.14303589]
[619.41418457 321.38500977]
[633.46844482 326.62695312]
[649.54199219 323.37539673]
[660.19042969 335.84710693]
[654.45947266 351.21228027]
[638.24475098 353.66455078]
[628.22650146 340.68121338]
[614.17224121 335.43923950]
[600.11798096 330.19729614]
[586.06372070 324.95532227]
[572.00952148 319.71334839]
[558.60974121 326.11514282]
[544.28210449 320.99926758]
[537.65814209 306.90097046]
[523.60394287 301.65902710]
[509.54968262 296.41705322]
[495.49542236 291.17507935]
[480.86669922 293.97683716]
[470.64053345 281.90469360]
[456.58630371 276.66275024]
[442.53204346 271.42077637]
[428.44073486 266.27929688]
[414.31307983 261.23855591]
[400.18539429 256.19781494]
[386.05773926 251.15707397]
[370.01177979 259.97851562]
[352.31192017 254.16362000]
[344.35519409 236.96476746]
[330.08935547 232.32951355]
[315.82348633 227.69424438]
[301.55764771 223.05899048]
[312.06646729 233.76248169]
[319.04733276 247.03906250]
[321.90866089 261.76364136]
[320.40795898 276.68835449]
[314.67242432 290.54852295]
[305.18807983 302.16949463]
[292.75869751 310.56652832]
[278.43756104 315.02801514]
[263.43826294 315.17587280]
[249.03196716 310.99755859]
[236.43946838 302.84716797]
[226.72790527 291.41537476]
[220.72026062 277.67098999]
[218.92565918 262.77871704]
[221.49618530 248.00062561]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 144]
[5 143]
[6 142]
[7 141]
[8 139]
[9 137]
[10 136]
[11 135]
[12 134]
[13 133]
[14 132]
[15 131]
[16 130]
[17 129]
[25 36]
[26 35]
[27 34]
[28 33]
[37 46]
[38 45]
[39 44]
[54 127]
[55 126]
[56 125]
[57 124]
[58 123]
[59 122]
[60 121]
[61 120]
[62 85]
[63 84]
[64 83]
[65 82]
[66 81]
[86 97]
[87 96]
[88 95]
[89 94]
[99 112]
[100 111]
[101 110]
[148 204]
[149 203]
[150 202]
[151 201]
[156 198]
[157 197]
[158 196]
[159 195]
[161 194]
[162 193]
[163 192]
[165 190]
[166 189]
[167 188]
[168 187]
[171 184]
[172 183]
[173 182]
[174 181]
[175 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
