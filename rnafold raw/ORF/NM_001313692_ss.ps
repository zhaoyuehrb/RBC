%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 07:38:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAAUUGGAAGGUUCUUGAGCACGUGCCCCUGCUGCUGUAUAUCUUGGCAGCAAAAACAUUAAUUCUCUGCCUGACAUUUGCUGGGGUGAAAAUGUAUCAAAGAAAAAGGUUGGAGGCAAAACAACAAAAACUGGAGGCUGAAAGGAAGAAGCAAUCAGAGAAAAAAGAUAACUGA\
) } def
/len { sequence length } bind def

/coor [
[152.87693787 411.23321533]
[146.87533569 408.72045898]
[141.54228210 404.96649170]
[137.13134766 400.14166260]
[133.85403442 394.46746826]
[131.86956787 388.20635986]
[131.27722168 381.64956665]
[132.11134338 375.10357666]
[134.33946228 368.87582397]
[137.86346436 363.26019287]
[142.52392578 358.52325439]
[148.10729980 354.89147949]
[137.86744690 344.07507324]
[142.53088379 328.95675659]
[139.37768555 314.29193115]
[136.22448730 299.62710571]
[133.07130432 284.96228027]
[129.91810608 270.29742432]
[115.39568329 266.89675903]
[103.74197388 257.48925781]
[97.30209351 243.89924622]
[97.40174103 228.79924011]
[104.07472229 215.18460083]
[116.04558563 205.77929688]
[112.89238739 191.11445618]
[108.39872742 185.21823120]
[109.81536102 176.16305542]
[106.92147064 161.44487000]
[104.02758026 146.72666931]
[101.00392151 132.03457642]
[97.85073090 117.36974335]
[85.93701172 108.25582886]
[70.95803070 109.04968262]
[55.97905350 109.84353638]
[41.00007248 110.63739014]
[26.02109528 111.43123627]
[11.04211712 112.22509003]
[-3.93686128 113.01894379]
[-18.91584015 113.81279755]
[-28.17423248 126.41502380]
[-43.37928772 130.06745911]
[-57.35164261 123.04554749]
[-63.49397659 108.66481018]
[-58.90607452 93.71539307]
[-45.75419617 85.25595093]
[-30.24825859 87.28077698]
[-19.70969200 98.83381653]
[-4.73071337 98.03996277]
[10.24826527 97.24610901]
[25.22724342 96.45226288]
[40.20622253 95.65840912]
[55.18519974 94.86455536]
[70.16417694 94.07070160]
[85.14315796 93.27685547]
[71.61727142 86.79222107]
[58.09139252 80.30758667]
[43.34926605 77.53816223]
[30.92517853 69.13327789]
[22.86947250 56.47999573]
[20.51158142 41.66647339]
[24.24062538 27.13739204]
[33.44120026 15.29047775]
[46.59494019 8.08082390]
[61.53108597 6.69823837]
[75.78472900 11.37088776]
[87.00359344 21.32764816]
[93.33623505 34.92535400]
[93.73816681 49.91672516]
[98.00167084 64.29804993]
[102.26518250 78.67937469]
[105.41837311 64.01454163]
[108.57157135 49.34970856]
[111.72476196 34.68487167]
[114.87796021 20.02003860]
[117.77185059 5.30183935]
[120.40553284 -9.46514034]
[123.03922272 -24.23212051]
[117.84513855 -39.17641830]
[127.69688416 -50.34746933]
[130.33056641 -65.11444855]
[132.96426392 -79.88143158]
[126.29302979 -97.02969360]
[138.08068848 -110.01306152]
[140.45335388 -124.82421875]
[131.45695496 -137.54045105]
[134.07417297 -152.52728271]
[146.25259399 -161.02560425]
[148.62525940 -175.83676147]
[150.99792480 -190.64791870]
[153.37059021 -205.45907593]
[143.90177917 -218.11282349]
[146.23652649 -233.74371338]
[158.98966980 -243.07820129]
[174.59500122 -240.57832336]
[183.79414368 -227.72720337]
[181.12940979 -212.14916992]
[168.18174744 -203.08642578]
[165.80908203 -188.27525330]
[163.43641663 -173.46409607]
[161.06376648 -158.65293884]
[169.97814941 -146.77568054]
[167.78291321 -131.72125244]
[155.26451111 -122.45156097]
[152.89184570 -107.64039612]
[159.73464966 -97.64239502]
[157.85845947 -85.26716614]
[147.73123169 -77.24774170]
[145.09754944 -62.48076248]
[142.46386719 -47.71378326]
[147.84632874 -33.82571793]
[137.80619812 -21.59843445]
[135.17251587 -6.83145428]
[132.53883362 7.93552589]
[134.50531006 12.31785583]
[133.71842957 17.98451996]
[129.54278564 23.17323303]
[126.38959503 37.83806610]
[123.23640442 52.50290298]
[120.08320618 67.16773224]
[116.93001556 81.83257294]
[126.86650085 70.59574127]
[140.15740967 63.64220810]
[155.05433655 61.88670731]
[169.59756470 65.56017303]
[181.87394714 74.17935944]
[190.26852417 86.61041260]
[193.67698669 101.21802521]
[191.65093994 116.08056641]
[184.45692444 129.24287415]
[173.04130554 138.97341919]
[158.90580750 143.99217224]
[143.90997314 143.63891602]
[130.02648926 137.96009827]
[119.08174133 127.70278931]
[112.51556396 114.21654510]
[115.66875458 128.88137817]
[120.54595947 136.64126587]
[118.74578094 143.83277893]
[121.63967133 158.55097961]
[124.53356171 173.26916504]
[127.55722046 187.96125793]
[130.71041870 202.62609863]
[145.48918152 206.27976990]
[157.16845703 215.94834900]
[163.46589661 229.67288208]
[163.18109131 244.70883179]
[156.42410278 258.07492065]
[144.58294678 267.14422607]
[147.73612976 281.80908203]
[150.88932800 296.47390747]
[154.04252625 311.13873291]
[157.19570923 325.80358887]
[167.66110229 337.66891479]
[162.77212524 351.73828125]
[184.75990295 362.53802490]
[191.74668884 385.75982666]
[179.61784363 406.47341919]
[185.29690552 420.35681152]
[190.97595215 434.24017334]
[196.65499878 448.12356567]
[211.87802124 448.54721069]
[225.60983276 455.13183594]
[235.47131348 466.73663330]
[239.75389099 481.35098267]
[237.71560669 496.44287109]
[229.70957947 509.39755249]
[217.12292480 517.97052002]
[202.13633728 520.67645264]
[187.34634399 517.04656982]
[175.31539917 507.70977783]
[168.12794495 494.28366089]
[167.02923584 479.09442139]
[172.20964050 464.77371216]
[182.77160645 453.80261230]
[177.09255981 439.91925049]
[171.41351318 426.03585815]
[165.73446655 412.15246582]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 154]
[14 152]
[15 151]
[16 150]
[17 149]
[18 148]
[24 142]
[25 141]
[27 140]
[28 139]
[29 138]
[30 136]
[31 135]
[32 54]
[33 53]
[34 52]
[35 51]
[36 50]
[37 49]
[38 48]
[39 47]
[70 120]
[71 119]
[72 118]
[73 117]
[74 116]
[75 113]
[76 112]
[77 111]
[79 109]
[80 108]
[81 107]
[83 104]
[84 103]
[87 100]
[88 99]
[89 98]
[90 97]
[157 177]
[158 176]
[159 175]
[160 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
