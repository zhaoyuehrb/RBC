%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sat Sep 12 02:26:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGGCUGCGGGAACUCCACCGCCACCAGCGCGGGCGCGGGCCAAGGCCCUGCAGGAGCAGCCAAAGAUGUAACAGAAGAAUCCGUAACAGAAGAUGACAAGAGGAGAAACUAUGGAGGAGUAUAUGUUGGCCUACCAUCUGAAGCUGUCAAUAUGGUGUCCAGUCAAACAAAGACGGUUCGGAAAAAUUAG\
) } def
/len { sequence length } bind def

/coor [
[302.19570923 242.06790161]
[304.84222412 233.65089417]
[292.98538208 224.46307373]
[281.12857056 215.27526855]
[269.27175903 206.08744812]
[257.41494751 196.89962769]
[245.55813599 187.71180725]
[233.70132446 178.52398682]
[221.77012634 169.43298340]
[209.76533508 160.43937683]
[195.61230469 165.00334167]
[181.31658936 160.30268860]
[172.42602539 147.94099426]
[172.52023315 132.53652954]
[160.51544189 123.54293060]
[148.51065063 114.54932404]
[136.50585938 105.55571747]
[124.50106812 96.56211090]
[132.00440979 132.34794617]
[90.09158325 165.52323914]
[78.54011536 175.09211731]
[66.98864746 184.66099548]
[55.43717194 194.22988892]
[43.96396255 203.89247131]
[39.02193069 219.52923584]
[22.95287895 222.80299377]
[12.28726864 210.34599304]
[17.99696732 194.97293091]
[34.20832443 192.49827576]
[37.24916077 185.74963379]
[45.86828995 182.67842102]
[57.41976166 173.10952759]
[68.97122955 163.54064941]
[80.52270508 153.97177124]
[74.47373962 140.24551392]
[59.61709213 142.31430054]
[44.76043701 144.38308716]
[36.67794800 148.67202759]
[29.64534569 146.36259460]
[14.75698853 148.18930054]
[-0.13136892 150.01599121]
[-15.01972675 151.84268188]
[-27.78483582 162.13754272]
[-42.98344040 155.97843933]
[-44.98052216 139.70135498]
[-31.72165298 130.05073547]
[-16.84642029 136.95433044]
[-1.95806265 135.12762451]
[12.93029499 133.30093384]
[27.81865311 131.47424316]
[42.69165039 129.52642822]
[57.54830170 127.45764923]
[72.40495300 125.38885498]
[73.86064911 118.03148651]
[78.22772980 95.95935822]
[63.11811447 99.74583435]
[50.09332657 91.88392639]
[46.57662201 77.45588684]
[33.62712479 69.88551331]
[20.67762947 62.31513596]
[6.52267981 68.67257690]
[-8.65879536 65.46283722]
[-19.02920914 53.92012405]
[-20.60092735 38.48285294]
[-12.76958942 25.08696747]
[1.45349324 18.88345718]
[16.59925652 22.25769806]
[26.84384346 33.91222763]
[28.24800301 49.36563873]
[41.19749832 56.93601227]
[54.14699554 64.50638580]
[68.44479370 60.49283981]
[81.68526459 67.98580170]
[85.79810333 83.00986481]
[92.47787476 79.59949493]
[84.74305725 66.74755096]
[74.78730011 55.52779388]
[81.85457611 42.29701233]
[96.71572113 44.33331299]
[99.96392059 58.97652054]
[105.83742523 72.77876282]
[112.51720428 69.36840057]
[113.97986603 54.43988037]
[115.44252777 39.51136398]
[116.90518951 24.58284760]
[118.36785889 9.65433121]
[119.83052063 -5.27418566]
[105.61206055 -10.28406906]
[93.00609589 -18.55166054]
[82.74552155 -29.59629440]
[75.42686462 -42.77585220]
[71.47562408 -57.32408524]
[71.12152863 -72.39518738]
[74.38515472 -87.11293793]
[81.07676697 -100.62166595]
[90.80731964 -112.13599396]
[103.01109314 -120.98649597]
[116.97856903 -126.65861511]
[131.89770508 -128.82257080]
[146.90112305 -127.35256958]
[161.11654663 -122.33406830]
[173.71749878 -114.05883789]
[183.97137451 -103.00798798]
[191.28204346 -89.82399750]
[195.22445679 -75.27336884]
[195.56941223 -60.20205307]
[192.29687500 -45.48628616]
[185.59707642 -31.98161507]
[175.85954285 -20.47318649]
[163.65040588 -11.63008595]
[149.67948914 -5.96643877]
[134.75903320 -3.81152201]
[133.29637146 11.11699486]
[131.83370972 26.04551125]
[130.37104797 40.97402954]
[128.90838623 55.90254593]
[127.44571686 70.83106232]
[133.49467468 84.55731964]
[145.49946594 93.55092621]
[157.50425720 102.54453278]
[169.50904846 111.53813934]
[181.51385498 120.53174591]
[196.27104187 116.11232758]
[210.63302612 121.17069244]
[219.16166687 133.56932068]
[218.75894165 148.43458557]
[230.76373291 157.42819214]
[239.52250671 160.07501221]
[242.88914490 166.66717529]
[254.74595642 175.85499573]
[266.60278320 185.04281616]
[278.45959473 194.23063660]
[290.31640625 203.41844177]
[302.17321777 212.60626221]
[314.03002930 221.79408264]
[334.54620361 214.04501343]
[355.46520996 220.18089294]
[368.38940430 237.57469177]
[368.22946167 259.11334229]
[381.05401611 266.89349365]
[393.87857056 274.67364502]
[406.70312500 282.45379639]
[419.52767944 290.23394775]
[432.35223389 298.01409912]
[441.32736206 299.79421997]
[445.32077026 306.02670288]
[458.01699829 314.01455688]
[470.71322632 322.00244141]
[483.40942383 329.99029541]
[496.10565186 337.97814941]
[507.48733521 329.40313721]
[521.08459473 325.23928833]
[535.25653076 325.96780396]
[548.30010986 331.48068237]
[558.65496826 341.09625244]
[565.08984375 353.64337158]
[566.84918213 367.60409546]
[563.74169922 381.29714966]
[576.30621338 389.49060059]
[591.71777344 385.98922729]
[605.04650879 394.48156738]
[608.38476562 409.92929077]
[599.75201416 423.16751099]
[584.26983643 426.34222412]
[571.12365723 417.56997681]
[568.11279297 402.05511475]
[555.54827881 393.86166382]
[542.61718750 403.01007080]
[527.12860107 406.50726318]
[511.44531250 403.78945923]
[497.97152710 395.24328613]
[488.78424072 382.15115356]
[485.31304932 366.49884033]
[488.11779785 350.67437744]
[475.42156982 342.68652344]
[462.72534180 334.69866943]
[450.02911377 326.71078491]
[437.33291626 318.72293091]
[424.57208252 310.83865356]
[411.74752808 303.05850220]
[398.92297363 295.27835083]
[386.09841919 287.49819946]
[373.27386475 279.71807861]
[360.44931030 271.93792725]
[353.75021362 277.38262939]
[345.87417603 280.96316528]
[337.32968140 282.43771362]
[328.67114258 281.70083618]
[320.46279907 278.79086304]
[313.24200439 273.88806152]
[307.48406982 267.30349731]
[303.57092285 259.45928955]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 135]
[3 134]
[4 133]
[5 132]
[6 131]
[7 130]
[8 129]
[9 127]
[10 126]
[14 122]
[15 121]
[16 120]
[17 119]
[18 118]
[20 34]
[21 33]
[22 32]
[23 31]
[24 29]
[35 53]
[36 52]
[37 51]
[39 50]
[40 49]
[41 48]
[42 47]
[55 74]
[58 71]
[59 70]
[60 69]
[82 117]
[83 116]
[84 115]
[85 114]
[86 113]
[87 112]
[139 184]
[140 183]
[141 182]
[142 181]
[143 180]
[144 179]
[146 178]
[147 177]
[148 176]
[149 175]
[150 174]
[158 167]
[159 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
