%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 16:02:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGUCAACGUCUUGAAAGGAGUGCUUAUAGAAUGUGAUCCUGCCAUGAAGCAGUUUCUGCUGUACUUGGAUGAGUCCAAUGCCCUGGGGAAGAAGUUCAUCAUUCAAGACAUUGAUGACACUCACGUCUUUGUAAUAGCAGAAUUGGUUAAUGUCCUCCAGGAGCGAGUGGGUGAAUUAAUGGACCAAAAUGCUUUUUCCCUUACCCAGAAAUGA\
) } def
/len { sequence length } bind def

/coor [
[62.38077927 199.48123169]
[74.64919281 190.12763977]
[73.34786224 175.18420410]
[72.04653931 160.24075317]
[65.11225891 157.38317871]
[59.39709473 171.25173950]
[53.68170166 185.12019348]
[39.81333542 179.40457153]
[45.52853775 165.53657532]
[51.24370193 151.66801453]
[44.30942154 148.81042480]
[32.85762405 158.49838257]
[27.31907272 173.31846619]
[12.60515881 175.63146973]
[1.15335906 185.31941223]
[-0.30987242 200.82737732]
[-12.06163406 210.48919678]
[-26.83708191 208.99865723]
[-38.28888321 218.68659973]
[-49.74068069 228.37454224]
[-61.19248199 238.06248474]
[-62.65571213 253.57044983]
[-74.40747070 263.23226929]
[-89.18292236 261.74172974]
[-100.63471985 271.42968750]
[-98.51830292 286.71118164]
[-105.02039337 300.70141602]
[-118.06620026 308.93612671]
[-133.49284363 308.78765869]
[-146.37776184 300.30340576]
[-152.60939026 286.19061279]
[-150.19926453 270.95269775]
[-139.91644287 259.45193481]
[-125.04212952 255.35824585]
[-110.32266998 259.97787476]
[-98.87086487 250.28993225]
[-97.89218140 235.47177124]
[-86.41643524 225.48368835]
[-70.88042450 226.61068726]
[-59.42862701 216.92274475]
[-47.97682953 207.23480225]
[-36.52502823 197.54685974]
[-35.54634094 182.72869873]
[-24.07059669 172.74061584]
[-8.53458691 173.86761475]
[2.91721272 164.17967224]
[7.63665390 150.05253601]
[23.16967773 147.04656982]
[34.62147522 137.35862732]
[29.82131004 123.14742279]
[14.84056282 122.38768768]
[-0.14018482 121.62794495]
[-15.12093258 120.86820984]
[-30.10168076 120.10847473]
[-46.22672653 125.34481049]
[-55.72228241 111.29950714]
[-44.85450363 98.28691101]
[-29.34194183 105.12772369]
[-14.36119461 105.88746643]
[0.61955273 106.64720154]
[15.60030079 107.40693665]
[30.58104706 108.16667175]
[34.96777725 93.82245636]
[22.12458038 86.07311249]
[9.28138542 78.32376862]
[0.32137072 76.57108307]
[-3.69049716 70.36813354]
[-16.42016029 62.43367004]
[-29.14982414 54.49921036]
[-41.87948990 46.56475067]
[-54.60915375 38.63029099]
[-71.00829315 38.61750412]
[-78.96124268 24.27586174]
[-70.28668213 10.35881901]
[-53.90826035 11.18303490]
[-46.67469406 25.90062714]
[-33.94503021 33.83508682]
[-21.21536446 41.76954651]
[-8.48570061 49.70400620]
[4.24396276 57.63846970]
[17.03072739 65.48057556]
[29.87392426 73.22991943]
[42.71712112 80.97926331]
[63.48357391 58.37367630]
[90.48387909 50.51841736]
[115.14597321 57.19736481]
[130.89839172 73.94357300]
[143.96055603 66.56929779]
[157.02272034 59.19502258]
[170.08488464 51.82074738]
[183.14704895 44.44647217]
[196.20919800 37.07220078]
[209.27136230 29.69792366]
[222.33352661 22.32365036]
[235.39569092 14.94937515]
[248.45785522 7.57509995]
[261.52001953 0.20082524]
[259.08865356 -14.74286461]
[261.91143799 -29.58887482]
[269.62866211 -42.54899216]
[281.29232788 -52.06888962]
[295.48254395 -57.01452637]
[310.48028564 -56.80722427]
[324.47564697 -51.49130630]
[335.78634644 -41.72640610]
[348.84851074 -49.10068130]
[350.91705322 -52.90684128]
[353.79806519 -55.58943558]
[357.03942871 -57.03109741]
[360.19732666 -57.27302170]
[362.88702393 -56.49861145]
[376.35409546 -63.10452271]
[389.82116699 -69.71043396]
[403.28823853 -76.31634521]
[416.75531006 -82.92225647]
[430.22238159 -89.52817535]
[443.68945312 -96.13408661]
[448.59036255 -108.06169891]
[459.93948364 -113.28755188]
[471.42694092 -109.50648499]
[484.98822021 -115.91674042]
[498.54953003 -122.32700348]
[512.11077881 -128.73725891]
[525.67211914 -135.14752197]
[539.23339844 -141.55778503]
[552.79467773 -147.96803284]
[559.21228027 -154.46171570]
[566.59899902 -154.37133789]
[580.25170898 -160.58460999]
[592.68591309 -168.97450256]
[603.55780029 -179.30900574]
[614.42968750 -189.64350891]
[625.30157471 -199.97801208]
[636.17346191 -210.31251526]
[640.29632568 -226.18493652]
[656.17358398 -230.28924561]
[667.47204590 -218.40325928]
[662.56884766 -202.75427246]
[646.50799561 -199.44062805]
[635.63604736 -189.10612488]
[624.76416016 -178.77162170]
[613.89227295 -168.43711853]
[603.02038574 -158.10260010]
[606.37200928 -151.39315796]
[619.79101562 -158.09616089]
[626.49377441 -144.67703247]
[613.07525635 -137.97425842]
[616.42681885 -131.26481628]
[631.21942139 -133.75064087]
[646.01202393 -136.23646545]
[655.18572998 -148.82537842]
[670.22296143 -151.13563538]
[682.16802979 -142.31231689]
[696.96057129 -144.79814148]
[707.40161133 -156.97865295]
[723.42883301 -156.26597595]
[732.74755859 -143.20681763]
[728.20922852 -127.81906128]
[713.29528809 -121.90686035]
[699.44641113 -130.00555420]
[684.65380859 -127.51972961]
[676.24884033 -115.27667999]
[661.28247070 -112.54497528]
[648.49786377 -121.44387817]
[633.70526123 -118.95805359]
[618.91265869 -116.47222137]
[586.46496582 -146.93193054]
[572.81225586 -140.71867371]
[559.20495605 -134.40675354]
[545.64367676 -127.99649048]
[532.08233643 -121.58622742]
[518.52105713 -115.17597198]
[504.95977783 -108.76571655]
[491.39849854 -102.35545349]
[477.83718872 -95.94519806]
[468.63595581 -80.99958801]
[450.29534912 -82.66701508]
[436.82827759 -76.06110382]
[423.36123657 -69.45519257]
[409.89416504 -62.84928131]
[396.42709351 -56.24336624]
[382.96002197 -49.63745499]
[369.49295044 -43.03154373]
[356.22277832 -36.03851700]
[343.16061401 -28.66424370]
[345.67807007 -13.93510056]
[342.99932861 0.79423571]
[335.42864990 13.74257374]
[323.86312866 23.33738899]
[309.68634033 28.40579605]
[294.60284424 28.31789398]
[280.43316650 23.06499290]
[268.89428711 13.26298714]
[255.83212280 20.63726234]
[242.76995850 28.01153755]
[229.70780945 35.38581085]
[216.64564514 42.76008606]
[203.58348083 50.13436127]
[190.52131653 57.50863647]
[177.45915222 64.88291168]
[164.39698792 72.25718689]
[151.33483887 79.63146210]
[138.27267456 87.00573730]
[144.48445129 109.08842468]
[137.53562927 133.61636353]
[116.97576141 152.70695496]
[86.98998260 158.93942261]
[88.29131317 173.88287354]
[89.59263611 188.82632446]
[103.29319763 195.91844177]
[110.96473694 209.30316162]
[110.15930176 224.70948792]
[101.13388824 237.22131348]
[86.76848602 242.84614563]
[71.64703369 239.78912354]
[60.59474182 229.02574158]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 209]
[3 208]
[4 207]
[11 49]
[12 48]
[14 46]
[15 45]
[18 42]
[19 41]
[20 40]
[21 39]
[24 36]
[25 35]
[50 62]
[51 61]
[52 60]
[53 59]
[54 58]
[63 83]
[64 82]
[65 81]
[67 80]
[68 79]
[69 78]
[70 77]
[71 76]
[87 203]
[88 202]
[89 201]
[90 200]
[91 199]
[92 198]
[93 197]
[94 196]
[95 195]
[96 194]
[97 193]
[105 185]
[106 184]
[111 183]
[112 182]
[113 181]
[114 180]
[115 179]
[116 178]
[117 177]
[120 175]
[121 174]
[122 173]
[123 172]
[124 171]
[125 170]
[126 169]
[128 168]
[129 167]
[130 143]
[131 142]
[132 141]
[133 140]
[134 139]
[148 166]
[149 165]
[150 164]
[153 161]
[154 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
