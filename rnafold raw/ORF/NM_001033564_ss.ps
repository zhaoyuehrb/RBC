%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 11:42:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCCUUUUCAAUUUGGAACCCAGCCAAGGAGGUUUCCAGUGGAAGGAGGAGAUUCUUCAAUUGAGCUGGAACCUGGGCUGAGCUCCAGUGCUGCCUGUAAUGGGAAGGAGAUGUCACCAACCAGGCAACUCCGGAGGUGCCCUGGAAGUCAUUGCCUGACAAUAACUGAUGUUCCCGUCACUGUUUAUGCAACAACGAGAAAGCCACCUGCACAAAGCAGCAAGGAAAUGCAUCCUAAAUAG\
) } def
/len { sequence length } bind def

/coor [
[128.86839294 258.19070435]
[127.13410950 243.29129028]
[125.39981842 228.39187622]
[123.66553497 213.49247742]
[114.50860596 201.74514771]
[120.59844971 187.14294434]
[118.86415863 172.24353027]
[117.12987518 157.34413147]
[115.39558411 142.44471741]
[113.66129303 127.54531860]
[107.49314117 123.27872467]
[93.93515015 129.69596863]
[95.15682220 114.74552917]
[88.98867035 110.47893524]
[74.43527222 114.11192322]
[59.88187408 117.74491882]
[45.32847595 121.37791443]
[30.77507973 125.01090240]
[19.25975800 135.86022949]
[5.03745222 131.43583679]
[-6.47786999 142.28517151]
[-20.70017624 137.86077881]
[-35.25357437 141.49375916]
[-49.80696869 145.12675476]
[-64.36036682 148.75975037]
[-78.91376495 152.39274597]
[-90.42908478 163.24206543]
[-104.65139008 158.81767273]
[-119.20478821 162.45066833]
[-133.75819397 166.08366394]
[-136.73979187 169.17175293]
[-140.19792175 170.98165894]
[-143.67646790 171.51972961]
[-146.76747131 170.93844604]
[-149.15431213 169.50845337]
[-163.87542725 172.38743591]
[-178.59655762 175.26641846]
[-193.31767273 178.14541626]
[-208.03880310 181.02439880]
[-222.75991821 183.90338135]
[-237.48104858 186.78236389]
[-241.47447205 202.56599426]
[-251.91796875 214.98010254]
[-266.67886353 221.56854248]
[-282.77697754 221.05680847]
[-296.98648071 213.59826660]
[-306.48205566 200.73332214]
[-321.16491699 203.80160522]
[-335.84774780 206.86988831]
[-350.53057861 209.93817139]
[-365.21340942 213.00643921]
[-379.48083496 222.16487122]
[-392.23095703 210.99031067]
[-385.02270508 195.64505005]
[-368.28167725 198.32360840]
[-353.59884644 195.25532532]
[-338.91601562 192.18704224]
[-324.23318481 189.11877441]
[-309.55035400 186.05049133]
[-306.88543701 172.44721985]
[-299.21624756 160.84825134]
[-287.67141724 153.02040100]
[-273.97293091 150.17103577]
[-260.17916870 152.76200867]
[-248.37574768 160.43511963]
[-240.36003113 172.06124878]
[-225.63890076 169.18225098]
[-210.91778564 166.30326843]
[-196.19665527 163.42428589]
[-181.47554016 160.54530334]
[-166.75440979 157.66632080]
[-152.03329468 154.78733826]
[-137.39117432 151.53025818]
[-122.83778381 147.89727783]
[-108.28438568 144.26428223]
[-97.81002045 133.67480469]
[-82.54676056 137.83934021]
[-67.99336243 134.20635986]
[-53.43996429 130.57336426]
[-38.88656616 126.94036865]
[-24.33316994 123.30737305]
[-13.85880375 112.71790314]
[1.40445948 116.88243866]
[11.87882519 106.29296875]
[27.14208794 110.45750427]
[41.69548416 106.82451630]
[56.24888229 103.19152069]
[70.80227661 99.55853271]
[85.35567474 95.92553711]
[98.77297974 89.21913147]
[110.41394806 79.75932312]
[122.05491638 70.29952240]
[133.69587708 60.83971786]
[145.33685303 51.37991333]
[156.97781372 41.92010880]
[163.15864563 24.56348610]
[180.59414673 22.49028969]
[192.11235046 12.88139248]
[203.63055420 3.27249455]
[189.79963684 9.07814693]
[175.09637451 6.10924387]
[164.60183716 -4.60824490]
[161.94262695 -19.37064934]
[168.03770447 -33.07649231]
[180.78076172 -40.98940659]
[195.76817322 -40.37491226]
[207.82069397 -31.44536018]
[212.77330017 -17.28620338]
[212.19406128 -32.27501678]
[211.61480713 -47.26382828]
[211.03556824 -62.25263977]
[202.77111816 -75.74372864]
[210.01116943 -88.76029968]
[209.43191528 -103.74910736]
[208.85266113 -118.73792267]
[208.27342224 -133.72673035]
[195.30259705 -142.24360657]
[189.84657288 -156.76985168]
[194.00332642 -171.71980286]
[206.17446899 -181.34490967]
[221.67996216 -181.94412231]
[234.55764771 -173.28703308]
[239.85575867 -158.70246887]
[235.53707886 -143.79849243]
[223.26223755 -134.30598450]
[223.84147644 -119.31716919]
[224.42073059 -104.32835388]
[224.99996948 -89.33954620]
[233.22299194 -76.92055511]
[226.02436829 -62.83188629]
[226.60362244 -47.84307480]
[227.18287659 -32.85426331]
[227.76211548 -17.86545181]
[239.81741333 -8.93966103]
[251.19209290 -19.93634987]
[265.47018433 -15.69543457]
[279.97561646 -19.51550102]
[294.48101807 -23.33556747]
[308.98645020 -27.15563583]
[323.49185181 -30.97570229]
[330.64068604 -41.69420242]
[342.78442383 -44.58575058]
[353.29901123 -38.63288116]
[367.85238647 -42.26587296]
[372.24749756 -58.21639633]
[384.02380371 -69.70349121]
[399.89630127 -73.65525055]
[415.50354004 -69.08355713]
[426.60623169 -57.32901001]
[441.11163330 -61.14907837]
[449.10314941 -74.51969910]
[463.86813354 -78.18715668]
[476.56570435 -70.48606873]
[491.07113647 -74.30613708]
[505.57653809 -78.12620544]
[520.08197021 -81.94627380]
[528.62591553 -97.22328949]
[545.25061035 -101.49941254]
[559.53143311 -92.59835052]
[573.98645020 -96.60485840]
[588.44146729 -100.61136627]
[602.89654541 -104.61787415]
[605.57592773 -112.47232819]
[611.06866455 -118.56779480]
[618.43255615 -121.96898651]
[626.44708252 -122.19341278]
[633.81536865 -119.27856445]
[639.37414551 -113.76395416]
[654.01629639 -117.02101898]
[668.65838623 -120.27809143]
[683.30053711 -123.53515625]
[697.94262695 -126.79222870]
[709.65301514 -138.27261353]
[725.37573242 -133.61126709]
[728.93658447 -117.60337830]
[716.67248535 -106.71649933]
[701.19970703 -112.15010834]
[686.55755615 -108.89304352]
[671.91546631 -105.63597107]
[657.27337646 -102.37890625]
[642.63122559 -99.12184143]
[628.15466309 -83.02327728]
[606.90301514 -90.16284180]
[592.44799805 -86.15633392]
[577.99298096 -82.14982605]
[563.53796387 -78.14331818]
[558.83020020 -66.16259766]
[547.92248535 -58.96775818]
[534.66711426 -59.36791611]
[523.90203857 -67.44085693]
[509.39660645 -63.62078857]
[494.89120483 -59.80072021]
[480.38577271 -55.98065567]
[473.12841797 -43.02433777]
[458.47225952 -38.94361115]
[444.93170166 -46.64366150]
[430.42630005 -42.82359695]
[427.71582031 -29.45012665]
[419.47186279 -18.49374771]
[407.25531006 -12.12360954]
[393.42031860 -11.63145828]
[380.66070557 -17.17008400]
[371.48538208 -27.71247673]
[356.93200684 -24.07948494]
[344.97326660 -11.22321892]
[327.31192017 -16.47028542]
[312.80651855 -12.65021896]
[298.30108643 -8.83015251]
[283.79568481 -5.01008558]
[269.29025269 -1.19001865]
[258.95309448 9.53343391]
[243.63748169 5.56575537]
[213.23945618 14.79070091]
[201.72125244 24.39959908]
[190.20303345 34.00849533]
[188.80778503 46.01042557]
[179.30966187 54.11088562]
[166.43762207 53.56107712]
[154.79664612 63.02088165]
[143.15568542 72.48068237]
[131.51472473 81.94049072]
[119.87375641 91.40029144]
[108.23278809 100.86009979]
[121.35904694 109.52510071]
[128.56069946 125.81103516]
[130.29498291 140.71043396]
[132.02928162 155.60983276]
[133.76356506 170.50924683]
[135.49784851 185.40864563]
[144.77882385 198.22169495]
[138.56494141 211.75819397]
[140.29922485 226.65759277]
[142.03350830 241.55699158]
[143.76780701 256.45639038]
[157.89930725 262.47271729]
[167.11654663 274.75842285]
[168.94013977 290.00866699]
[162.87954712 304.12124634]
[150.56504822 313.29992676]
[135.30915833 315.07571411]
[121.21564484 308.97091675]
[112.07559967 296.62768555]
[110.34764099 281.36630249]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 234]
[2 233]
[3 232]
[4 231]
[6 229]
[7 228]
[8 227]
[9 226]
[10 225]
[14 89]
[15 88]
[16 87]
[17 86]
[18 85]
[20 83]
[22 81]
[23 80]
[24 79]
[25 78]
[26 77]
[28 75]
[29 74]
[30 73]
[35 72]
[36 71]
[37 70]
[38 69]
[39 68]
[40 67]
[41 66]
[47 59]
[48 58]
[49 57]
[50 56]
[51 55]
[90 223]
[91 222]
[92 221]
[93 220]
[94 219]
[95 218]
[97 215]
[98 214]
[99 213]
[108 133]
[109 132]
[110 131]
[111 130]
[113 128]
[114 127]
[115 126]
[116 125]
[134 212]
[136 210]
[137 209]
[138 208]
[139 207]
[140 206]
[143 204]
[144 203]
[149 197]
[150 196]
[153 193]
[154 192]
[155 191]
[156 190]
[159 186]
[160 185]
[161 184]
[162 183]
[168 181]
[169 180]
[170 179]
[171 178]
[172 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
