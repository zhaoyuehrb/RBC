%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 20:25:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAAGUUCCUUGUCUUUGCCUUCAUCUUGGCUCUCAUGGUUUCCAUGAUUGGAGCUGAUUCAUCUGAAGAGAAAUUUUUGCGUAGAAUUGGAAGAUUCGGUUAUGGGUAUGGCCCUUAUCAGCCAGUUCCAGAACAACCACUAUACCCACAACCAUACCAACCACAAUACCAACAAUAUACCUUUUAA\
) } def
/len { sequence length } bind def

/coor [
[200.19511414 134.60406494]
[212.93965149 126.69352722]
[226.78089905 120.89339447]
[211.88125610 119.16112518]
[196.98161316 117.42885590]
[181.28121948 125.25165558]
[166.58898926 114.16499329]
[151.66275024 112.67930603]
[136.73651123 111.19362640]
[121.81026459 109.70794678]
[111.99458313 120.64125824]
[97.63545990 123.75585175]
[84.17200470 117.87194061]
[76.70405579 105.21829987]
[61.77781296 103.73262024]
[46.85157013 102.24693298]
[32.35290909 108.57934570]
[20.45456314 99.61950684]
[5.52831936 98.13382721]
[-9.39792442 96.64813995]
[-24.39587402 96.40013123]
[-39.36307907 97.39149475]
[-54.33028412 98.38285065]
[-69.29748535 99.37420654]
[-84.26469421 100.36557007]
[-97.03002930 117.05383301]
[-117.66481018 118.90724945]
[-132.76647949 105.15525055]
[-147.63545227 107.13363647]
[-162.50440979 109.11201477]
[-177.37336731 111.09040070]
[-192.24232483 113.06877899]
[-207.11129761 115.04716492]
[-221.98025513 117.02554321]
[-236.79557800 119.37206268]
[-251.54815674 122.08527374]
[-266.30072021 124.79847717]
[-281.05331421 127.51168823]
[-295.80587769 130.22489929]
[-310.55847168 132.93811035]
[-325.04266357 141.74969482]
[-337.51953125 130.27084351]
[-329.94320679 115.10391235]
[-313.27166748 118.18553162]
[-298.51907349 115.47232056]
[-283.76651001 112.75910950]
[-269.01394653 110.04590607]
[-254.26136780 107.33269501]
[-239.50878906 104.61949158]
[-237.21228027 101.92166901]
[-233.48728943 100.21048737]
[-228.81571960 100.14861298]
[-223.95863342 102.15658569]
[-209.08967590 100.17819977]
[-194.22071838 98.19982147]
[-179.35174561 96.22143555]
[-164.48278809 94.24305725]
[-149.61383057 92.26467133]
[-134.74487305 90.28629303]
[-131.60780334 81.43090820]
[-125.41538239 74.28907776]
[-116.99110413 69.87516022]
[-107.47909546 68.83643341]
[-98.18879700 71.35846710]
[-90.41471863 77.13372040]
[-85.25605011 85.39836121]
[-70.28884888 84.40700531]
[-55.32164001 83.41564941]
[-40.35443878 82.42428589]
[-25.38723183 81.43292999]
[-37.96128845 73.25410461]
[-44.85895920 59.93412018]
[-44.28216553 44.94521332]
[-36.38126373 32.19469452]
[-23.21585655 25.00636292]
[-8.21790218 25.25407410]
[4.70293856 32.87325287]
[12.17846298 45.87773514]
[12.25995541 60.87751389]
[4.92617083 73.96244812]
[-7.91224146 81.72190094]
[7.01400232 83.20758057]
[21.94024658 84.69326782]
[35.37128067 78.25459290]
[48.33725357 87.32069397]
[63.26349640 88.80637360]
[78.18973541 90.29205322]
[88.00541687 79.35874176]
[102.36454010 76.24414825]
[115.82799530 82.12805939]
[123.29594421 94.78170013]
[138.22218323 96.26737976]
[153.14843750 97.75306702]
[168.07467651 99.23874664]
[178.54067993 91.68038940]
[190.95240784 93.23628235]
[198.71388245 102.52921295]
[213.61352539 104.26148224]
[228.51316833 105.99375153]
[243.24281311 103.15867615]
[256.43490601 96.01946259]
[269.62701416 88.88024902]
[282.81912231 81.74104309]
[291.27346802 68.36813354]
[306.14932251 69.11537170]
[319.34143066 61.97616196]
[332.53353882 54.83695221]
[345.72564697 47.69774246]
[358.91775513 40.55852890]
[372.10983276 33.41931915]
[384.09765625 24.40310097]
[394.61621094 13.70917511]
[405.13476562 3.01524830]
[415.65332031 -7.67867851]
[412.96655273 -22.96138000]
[419.80612183 -36.88977432]
[433.54202271 -44.10811234]
[448.89254761 -41.84079361]
[459.95510864 -30.95965004]
[462.47592163 -15.64870262]
[455.48568726 -1.79532290]
[441.67227173 5.27358198]
[426.34725952 2.83987331]
[415.82870483 13.53380013]
[405.31015015 24.22772598]
[394.79159546 34.92165375]
[409.17001343 30.64833069]
[424.16680908 30.95773888]
[438.35671997 35.82046890]
[450.39117432 44.77437210]
[459.12637329 56.96847916]
[463.73214722 71.24386597]
[463.77081299 86.24382019]
[459.23861694 100.54274750]
[450.56634521 112.78169250]
[438.57821655 121.79747772]
[424.41354370 126.73325348]
[409.41851807 127.11991882]
[395.01828003 122.92073059]
[382.58142090 114.53478241]
[373.28988647 102.75905609]
[368.02679443 88.71270752]
[367.29229736 73.73070526]
[371.15625000 59.23691177]
[379.24905396 46.61142349]
[366.05694580 53.75063705]
[352.86483765 60.88984680]
[339.67272949 68.02906036]
[326.48062134 75.16826630]
[313.28851318 82.30747986]
[305.77777100 95.16974640]
[289.95834351 94.93315125]
[276.76623535 102.07235718]
[263.57412720 109.21157074]
[250.38201904 116.35077667]
[265.37997437 116.59797668]
[280.15054321 119.21144867]
[294.32275391 124.12555695]
[307.54067993 131.21687317]
[319.47232056 140.30731201]
[329.81802368 151.16854858]
[338.31793213 163.52781677]
[344.75860596 177.07467651]
[348.97827148 191.46893311]
[350.87091064 206.34904480]
[350.38906860 221.34130859]
[347.54476929 236.06916809]
[342.40948486 250.16275024]
[335.11221313 263.26806641]
[325.83618164 275.05599976]
[314.81436157 285.23046875]
[302.32360840 293.53594971]
[288.67761230 299.76385498]
[274.21908569 303.75775146]
[259.31118774 305.41732788]
[244.32830811 304.70092773]
[229.64674377 301.62652588]
[215.63525391 296.27133179]
[202.64572144 288.76986694]
[191.00439453 279.31048584]
[181.00364685 268.13082886]
[172.89463806 255.51164246]
[166.88104248 241.76985168]
[163.11389160 227.25059509]
[161.68780518 212.31854248]
[162.63858032 197.34870911]
[165.94235229 182.71705627]
[171.51612854 168.79109192]
[179.21995544 155.92053223]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 99]
[4 98]
[5 97]
[7 94]
[8 93]
[9 92]
[10 91]
[14 87]
[15 86]
[16 85]
[18 83]
[19 82]
[20 81]
[21 70]
[22 69]
[23 68]
[24 67]
[25 66]
[28 59]
[29 58]
[30 57]
[31 56]
[32 55]
[33 54]
[34 53]
[35 49]
[36 48]
[37 47]
[38 46]
[39 45]
[40 44]
[100 155]
[101 154]
[102 153]
[103 152]
[105 150]
[106 149]
[107 148]
[108 147]
[109 146]
[110 145]
[111 126]
[112 125]
[113 124]
[114 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
