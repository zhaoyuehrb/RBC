%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 10:33:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCCGCAGAAGGAUCCGUGCCAGAAGCAAGCCUGUGAGAUACAGAAAUGUUUACAAGCCAACAGCUACAUGGAAUCAAAGUGUCAGGCUGUCAUCCAAGAACUGCGUAAGUGUUGUGCUCAGUAUCCCAAGGGAAGAUCUGUCGUCUGUUCAGGAUUUGAAAAAGAAGAGGAAGAAAACCUAACACGGAAGUCUGCAUCAAAGUAA\
) } def
/len { sequence length } bind def

/coor [
[196.46145630 750.17706299]
[192.72248840 735.48706055]
[194.23637390 720.40447998]
[200.82029724 706.75067139]
[211.67921448 696.17425537]
[225.50186157 689.95251465]
[224.37016296 674.99530029]
[223.23844910 660.03802490]
[222.10673523 645.08081055]
[220.97503662 630.12353516]
[210.91375732 624.73840332]
[204.63735962 615.06445312]
[203.80273438 603.44281006]
[208.73271179 592.75354004]
[218.30720520 585.70141602]
[217.62776184 570.71679688]
[216.94833374 555.73217773]
[216.26889038 540.74761963]
[215.58944702 525.76300049]
[214.91000366 510.77838135]
[197.31227112 506.29013062]
[182.07179260 496.37573242]
[170.81115723 482.07504272]
[164.73426819 464.89578247]
[164.49761963 446.65447998]
[170.13943481 429.28448486]
[181.07417297 414.63098145]
[196.15333557 404.25500488]
[191.69079590 389.93420410]
[187.22825623 375.61340332]
[182.76570129 361.29257202]
[178.19514465 347.00585938]
[173.51681519 332.75408936]
[168.83848572 318.50231934]
[164.16015625 304.25051880]
[148.84245300 297.30996704]
[143.17117310 281.12002563]
[151.11602783 265.53610229]
[146.22297668 251.35658264]
[141.32994080 237.17709351]
[136.43690491 222.99758911]
[131.43692017 208.85545349]
[126.33027649 194.75148010]
[121.22364044 180.64749146]
[116.11699677 166.54351807]
[111.01035309 152.43954468]
[102.40848541 153.95417786]
[93.60603333 154.05603027]
[84.83530426 152.72013855]
[76.33137512 149.95980835]
[68.32574463 145.82676697]
[61.04009628 140.41046143]
[54.68014526 133.83604431]
[49.42985916 126.26171875]
[45.44618988 117.87482452]
[42.85443497 108.88730621]
[41.74442291 99.53031158]
[42.16756439 90.04830170]
[44.13491440 80.69262695]
[47.61631775 71.71486664]
[52.54060745 63.36008835]
[58.79697037 55.86014938]
[47.87485504 45.57873917]
[36.95274353 35.29732895]
[26.03062820 25.01591682]
[15.10851288 14.73450470]
[4.18639898 4.45309353]
[-6.88975239 -5.66218567]
[-18.11741257 -15.60902596]
[-29.34507561 -25.55586624]
[-40.57273483 -35.50270462]
[-55.39381790 -31.22029114]
[-70.17080688 -35.65246964]
[-80.18841553 -47.38494492]
[-82.25006104 -62.67393494]
[-75.69789124 -76.64076996]
[-62.62266159 -84.82868958]
[-47.19664383 -84.62495422]
[-34.34222031 -76.09458160]
[-28.16118813 -61.95957565]
[-30.62589645 -46.73036575]
[-19.39823532 -36.78352737]
[-8.17057323 -26.83668709]
[3.05708766 -16.88984680]
[7.79591990 -16.27921867]
[12.20077801 -12.68369579]
[14.46781063 -6.46902084]
[25.38992500 3.81239057]
[36.31203842 14.09380150]
[47.23415375 24.37521362]
[58.15626907 34.65662384]
[69.07838440 44.93803406]
[76.30290985 42.92404556]
[71.64702606 28.66491890]
[66.99114227 14.40579128]
[59.66492081 1.31661689]
[69.28064728 -10.19588661]
[83.46542358 -5.31816530]
[83.96723938 9.67334843]
[87.35961151 24.28470802]
[90.75197601 38.89606857]
[97.97650909 36.88208008]
[102.00448608 22.43301773]
[106.03246307 7.98395586]
[110.06044006 -6.46510601]
[106.31311035 -21.83612061]
[117.18390656 -32.01821899]
[121.21188354 -46.46728134]
[125.23986053 -60.91634369]
[116.25128937 -73.71241760]
[117.64230347 -89.28801727]
[128.75610352 -100.28880310]
[144.34510803 -101.52055359]
[157.04864502 -92.40166473]
[160.86849976 -77.23780823]
[154.00106812 -63.18888092]
[139.68891907 -56.88836288]
[135.66094971 -42.43930435]
[131.63296509 -27.99024010]
[135.66839600 -13.65271950]
[124.50949860 -2.43712807]
[120.48152161 12.01193428]
[116.45354462 26.46099663]
[112.42556763 40.91005707]
[123.94414520 48.29221725]
[132.85562134 57.67221451]
[143.62120056 47.22701645]
[154.38679504 36.78181839]
[158.34704590 20.86803627]
[174.18145752 16.60150719]
[185.60095215 28.37126923]
[180.85812378 44.06959915]
[164.83198547 47.54740524]
[154.06640625 57.99260330]
[143.30081177 68.43779755]
[152.49719238 89.26791382]
[152.21366882 112.03601837]
[142.50143433 132.63066101]
[125.11433411 147.33290100]
[130.22097778 161.43687439]
[135.32762146 175.54086304]
[140.43424988 189.64483643]
[145.54089355 203.74880981]
[151.40628052 210.75445557]
[150.61639404 218.10455322]
[155.50944519 232.28405762]
[160.40248108 246.46354675]
[165.29551697 260.64303589]
[178.00483704 265.10687256]
[185.70965576 275.91812134]
[185.77909851 288.99914551]
[178.41194153 299.57220459]
[183.09027100 313.82397461]
[187.76858521 328.07577515]
[192.44691467 342.32754517]
[198.09803772 349.50714111]
[197.08651733 356.83001709]
[201.54905701 371.15084839]
[206.01161194 385.47164917]
[210.47415161 399.79248047]
[222.84835815 399.12475586]
[235.05737305 401.18200684]
[246.50898743 405.85946655]
[256.64883423 412.92550659]
[264.98712158 422.03286743]
[271.12240601 432.73596191]
[274.76095581 444.51245117]
[275.73059082 456.78894043]
[273.98910522 468.96871948]
[269.62585449 480.46090698]
[281.97061157 488.98187256]
[294.31536865 497.50283813]
[309.34359741 493.18005371]
[323.61346436 499.57577515]
[330.38714600 513.67016602]
[326.46633911 528.80822754]
[313.70233154 537.84228516]
[298.12188721 536.50671387]
[287.08163452 525.43212891]
[285.79440308 509.84759521]
[273.44964600 501.32662964]
[261.10488892 492.80566406]
[252.04591370 500.80133057]
[241.47702026 506.65744019]
[229.89462280 510.09893799]
[230.57405090 525.08355713]
[231.25349426 540.06817627]
[231.93293762 555.05273438]
[232.61236572 570.03735352]
[233.29180908 585.02197266]
[247.75785828 597.25219727]
[248.67721558 615.85333252]
[235.93228149 628.99182129]
[237.06398010 643.94909668]
[238.19569397 658.90631104]
[239.32740784 673.86358643]
[240.45912170 688.82080078]
[255.06054688 692.89190674]
[267.38720703 701.71398926]
[275.95059204 714.22174072]
[279.71664429 728.90484619]
[278.23056030 743.99017334]
[271.67181396 757.65612793]
[260.83239746 768.25250244]
[247.02124023 774.49969482]
[231.90608215 775.64337158]
[217.31216431 771.54541016]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 197]
[7 196]
[8 195]
[9 194]
[10 193]
[15 190]
[16 189]
[17 188]
[18 187]
[19 186]
[20 185]
[28 160]
[29 159]
[30 158]
[31 157]
[32 155]
[33 154]
[34 153]
[35 152]
[38 148]
[39 147]
[40 146]
[41 145]
[42 143]
[43 142]
[44 141]
[45 140]
[46 139]
[62 92]
[63 91]
[64 90]
[65 89]
[66 88]
[67 87]
[68 84]
[69 83]
[70 82]
[71 81]
[102 124]
[103 123]
[104 122]
[105 121]
[107 119]
[108 118]
[109 117]
[126 135]
[127 134]
[128 133]
[170 182]
[171 181]
[172 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
