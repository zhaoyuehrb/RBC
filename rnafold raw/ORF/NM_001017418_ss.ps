%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 22:15:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCUUAUCAACAGCAGCAGUGCAAGCAGCCCUGCCAGCCACCUCCUGUGUGCCCCACGCCAAAGUGCCCAGAGCCAUGUCCACCCCCGAAGUGCCCUGAGCCCUGCCCACCACCAAAGUGUCCACAGCCCUGCCCACCUCAGCAGUGCCAGCAGAAAUAUCCUCCUGUGACACCUUCCCCACCCUGCCAGCCAAAGUAUCCACCGAAGAGCAAGUAA\
) } def
/len { sequence length } bind def

/coor [
[123.07595825 254.26435852]
[110.35734558 262.39697266]
[95.91588593 266.79547119]
[80.82322693 267.13345337]
[66.19934082 263.38580322]
[53.12943268 255.83068848]
[42.58336258 245.02870178]
[35.34372330 231.78143311]
[31.94774437 217.07191467]
[32.64743042 201.99168396]
[37.39085770 187.65982056]
[45.82603455 175.13981628]
[57.32701492 165.36076355]
[71.04034424 159.04830933]
[85.94841003 156.67088318]
[87.65828705 141.76866150]
[79.73775482 143.39115906]
[71.09904480 143.49810791]
[60.64498138 154.25508118]
[50.19091797 165.01205444]
[39.73685455 175.76902771]
[35.66765976 191.05799866]
[21.24888229 194.79270935]
[10.79481888 205.54968262]
[9.58525944 221.54707336]
[-3.75670600 230.45614624]
[-18.99626350 225.44261169]
[-24.44292831 210.35244751]
[-15.91848564 196.76150513]
[0.03784170 195.09562683]
[10.49190521 184.33863831]
[13.81335545 169.81909180]
[28.97987747 165.31497192]
[39.43394089 154.55799866]
[49.88800430 143.80101013]
[60.34206772 133.04403687]
[57.42254257 126.13561249]
[43.60568619 131.97467041]
[29.78883362 137.81372070]
[15.97197819 143.65277100]
[2.15512323 149.49182129]
[-11.66182137 155.33065796]
[-17.50044632 141.51362610]
[-3.68392825 135.67495728]
[10.13292694 129.83590698]
[23.94978142 123.99686432]
[37.76663589 118.15780640]
[51.58349228 112.31875610]
[48.66396332 105.41033173]
[33.66396332 105.41033173]
[18.66396523 105.41033173]
[3.66396523 105.41033173]
[-11.33603477 105.41033173]
[-27.17516708 111.45667267]
[-37.36992264 97.91033173]
[-27.17516708 84.36399078]
[-11.33603477 90.41033173]
[3.66396523 90.41033173]
[18.66396523 90.41033173]
[33.66396332 90.41033173]
[48.66396332 90.41033173]
[51.87577820 84.72584534]
[55.68236923 79.67533112]
[59.97802353 75.31592560]
[64.65232086 71.68859863]
[69.59251404 68.81789398]
[61.12586212 56.43581772]
[52.65921402 44.05373764]
[37.38204956 41.01301193]
[28.97205162 28.33521461]
[31.96506691 13.78951168]
[23.49841881 1.40743303]
[15.03176975 -10.97464561]
[0.85543227 -17.99903297]
[0.05853388 -32.87230682]
[-8.40811443 -45.25438309]
[-16.96295357 -57.57569504]
[-25.60554886 -69.83560944]
[-33.10261917 -75.04209137]
[-34.28255081 -82.33287048]
[-49.55971527 -85.37359619]
[-57.96971130 -98.05139160]
[-54.97669601 -112.59709930]
[-63.44334412 -124.97917175]
[-71.90999603 -137.36125183]
[-87.48870087 -138.71693420]
[-98.51467133 -149.80575562]
[-99.78178406 -165.39192200]
[-90.69174194 -178.11610413]
[-75.53658295 -181.97035217]
[-61.47211456 -175.13481140]
[-55.13914871 -160.83699036]
[-59.52791595 -145.82789612]
[-51.06126785 -133.44581604]
[-42.59461975 -121.06374359]
[-27.95411301 -118.57553101]
[-19.19134140 -106.13895416]
[-21.90047073 -90.79951477]
[-13.34563160 -78.47820282]
[-4.70303726 -66.21829224]
[1.71571493 -62.56488800]
[3.97396398 -53.72103119]
[12.44061279 -41.33895493]
[26.01135826 -35.20021439]
[27.41384888 -19.44129372]
[35.88049698 -7.05921507]
[44.34714508 5.32286310]
[58.98765182 7.81107330]
[67.75041962 20.24765205]
[65.04129028 35.58708954]
[73.50794220 47.96916962]
[81.97458649 60.35124588]
[90.78042603 56.90338898]
[100.23153687 55.41098022]
[109.89382935 55.99092484]
[119.31306458 58.66380692]
[128.03627014 63.35073853]
[135.63342285 69.87490845]
[141.71865845 77.96788788]
[145.96965027 87.28053284]
[159.13484192 80.09179688]
[172.30001831 72.90306091]
[185.46520996 65.71433258]
[198.63038635 58.52559662]
[204.65753174 51.67088699]
[212.03529358 51.32973099]
[225.30178833 44.32972336]
[238.56828308 37.32971191]
[251.83477783 30.32970238]
[256.58398438 7.22141838]
[276.65872192 -4.66109037]
[298.69848633 2.13724589]
[311.08056641 -6.32940245]
[323.46264648 -14.79605103]
[335.84472656 -23.26269913]
[343.74514771 -41.81318665]
[363.07528687 -42.42950058]
[375.21054077 -51.24628067]
[387.34582520 -60.06305695]
[388.25607300 -75.67412567]
[399.02551270 -87.01225281]
[414.56912231 -88.72392273]
[427.54769897 -80.00093842]
[431.83316040 -64.96202850]
[425.40203857 -50.70809937]
[411.29089355 -43.96942520]
[396.16259766 -47.92780304]
[384.02734375 -39.11102295]
[371.89208984 -30.29424477]
[371.20953369 -20.10694504]
[364.90261841 -11.80034351]
[354.85928345 -8.25988674]
[344.31137085 -10.88062096]
[331.92929077 -2.41397238]
[319.54721069 6.05267620]
[307.16513062 14.51932430]
[308.69906616 21.37017059]
[308.50286865 28.40986633]
[306.57781982 35.20690918]
[303.03146362 41.34201813]
[298.07168579 46.43400955]
[291.99453735 50.16346359]
[285.16662598 52.29274368]
[278.00296021 52.68114090]
[270.94177246 51.29409027]
[264.41763306 48.20597458]
[258.83477783 43.59619904]
[245.56829834 50.59620667]
[232.30180359 57.59621811]
[219.03530884 64.59622955]
[205.81912231 71.69078064]
[192.65394592 78.87951660]
[179.48875427 86.06825256]
[166.32357788 93.25698090]
[153.15838623 100.44571686]
[150.91770935 115.27742004]
[161.37178040 126.03440094]
[171.82583618 136.79138184]
[182.27990723 147.54835510]
[195.35200500 141.90270996]
[209.53620911 141.05885315]
[223.12823486 145.09777832]
[234.50192261 153.51499939]
[242.30375671 165.28347778]
[245.61399841 178.97894287]
[244.05500793 192.95222473]
[237.83419800 205.52781677]
[248.13359070 216.43298340]
[258.43298340 227.33813477]
[273.80422974 225.21589661]
[287.47137451 232.56362915]
[294.17907715 246.55599976]
[291.34808350 261.81265259]
[280.06701660 272.46707153]
[264.67364502 274.42245483]
[251.08702087 266.92687988]
[244.53150940 252.86256409]
[247.52781677 237.63752747]
[237.22842407 226.73237610]
[226.92903137 215.82720947]
[212.20655823 221.69844055]
[196.31965637 221.46850586]
[181.70249939 215.14303589]
[170.60606384 203.66387939]
[164.75146484 188.76896667]
[165.06314087 172.72924805]
[171.52291870 158.00241089]
[161.06886292 147.24543762]
[150.61479187 136.48846436]
[140.16073608 125.73148346]
[123.06124115 139.36819458]
[102.56050873 143.47853088]
[100.85063934 158.38075256]
[114.83279419 164.07302856]
[126.75999451 173.32745361]
[135.74716187 185.45730591]
[141.12738037 199.56248474]
[142.50141907 214.59626770]
[139.76730347 229.44305420]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 213]
[16 212]
[18 36]
[19 35]
[20 34]
[21 33]
[23 31]
[24 30]
[49 61]
[50 60]
[51 59]
[52 58]
[53 57]
[66 112]
[67 111]
[68 110]
[71 107]
[72 106]
[73 105]
[75 103]
[76 102]
[77 100]
[78 99]
[80 98]
[83 95]
[84 94]
[85 93]
[120 175]
[121 174]
[122 173]
[123 172]
[124 171]
[126 170]
[127 169]
[128 168]
[129 167]
[132 156]
[133 155]
[134 154]
[135 153]
[137 149]
[138 148]
[139 147]
[176 210]
[177 209]
[178 208]
[179 207]
[187 200]
[188 199]
[189 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
