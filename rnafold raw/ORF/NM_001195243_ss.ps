%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Sep  9 22:51:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCCAGCUAAAGGGAAAAAAGGAAAAGGCCAGGGCAAGUCUCAUGGGAAGAAACAGAAGAAACCAGAAGUGGACAUUCUCAGCCCCGCGGCCAUGCUGAACCUCUACUACAUCGCCCACAACGUCGCUGACUGCCUGCAUCUGCGAGGCUUCCAUUGGCCGGGUGCUCCCAAAGGAAAGAAAGGGAGAAGCAAGUGA\
) } def
/len { sequence length } bind def

/coor [
[189.51356506 293.06735229]
[204.47401428 294.15582275]
[217.79725647 301.05273438]
[210.74589539 287.81347656]
[203.69453430 274.57418823]
[188.32812500 266.10696411]
[189.09844971 247.71343994]
[181.83895874 234.58714294]
[174.57948303 221.46083069]
[167.31999207 208.33453369]
[160.06050110 195.20822144]
[147.13014221 187.81533813]
[147.22213745 171.99440002]
[139.96264648 158.86810303]
[132.70317078 145.74179077]
[125.44368744 132.61547852]
[117.53481293 136.56826782]
[109.12830353 138.68142700]
[100.63740540 138.92762756]
[92.46367645 137.36943054]
[84.97801208 134.15301514]
[78.50380707 129.49809265]
[67.36720276 139.54676819]
[66.80709076 155.34114075]
[55.18593979 166.05209351]
[39.39838409 165.32501221]
[28.81089783 153.59127808]
[29.70484543 137.81228638]
[41.54986572 127.34944916]
[57.31851959 128.41017151]
[68.45512390 118.36148834]
[63.52878571 98.55983734]
[70.00119019 79.20829010]
[59.69163132 68.31274414]
[49.38206863 57.41720200]
[39.07250595 46.52165222]
[21.09961700 53.97973251]
[0.73556209 51.18572998]
[-16.29602051 37.81756592]
[-24.66416168 16.66417313]
[-39.65995789 16.30900002]
[-54.65575027 15.95382786]
[-66.04371643 26.58171463]
[-81.24652863 26.00790024]
[-91.30841064 15.08571815]
[-106.30420685 14.73054600]
[-115.61220551 27.14588928]
[-130.44998169 31.68682671]
[-145.11210632 26.60727501]
[-153.96067810 13.86042309]
[-153.59326172 -1.65230131]
[-144.15113831 -13.96594048]
[-129.26496887 -18.34564972]
[-114.65881348 -13.10733891]
[-105.94903564 -0.26524824]
[-90.95323944 0.08992377]
[-80.38554382 -10.34365082]
[-65.17262268 -10.19707680]
[-54.30057907 0.95803374]
[-39.30478287 1.31320572]
[-24.30899048 1.66837776]
[-19.88146400 -4.38530064]
[-32.87123489 -11.88636017]
[-46.62550735 -17.87133598]
[-46.11223984 -32.86255264]
[-31.98082542 -37.89277649]
[-22.11080933 -26.59890366]
[-11.02641487 -16.49265671]
[-6.59888935 -22.54633522]
[-11.48116779 -36.72954178]
[-16.36344528 -50.91275024]
[-21.24572372 -65.09595490]
[-26.12800217 -79.27915955]
[-31.01028061 -93.46237183]
[-44.93526077 -100.44324493]
[-49.68453979 -114.89658356]
[-42.94352722 -128.12890625]
[-47.82580566 -142.31211853]
[-52.70808411 -156.49531555]
[-66.88021088 -168.24545288]
[-62.87248993 -185.32640076]
[-67.97805786 -199.43075562]
[-73.30564880 -213.45277405]
[-78.85392761 -227.38893127]
[-84.40220642 -241.32510376]
[-97.60166931 -251.05680847]
[-95.50483704 -267.32135010]
[-80.26876068 -273.38714600]
[-67.56700134 -263.01425171]
[-70.46604156 -246.87338257]
[-64.91776276 -232.93721008]
[-59.36948395 -219.00105286]
[-55.40612793 -216.32037354]
[-53.09011078 -211.11715698]
[-53.87369156 -204.53633118]
[-48.76812363 -190.43196106]
[-37.94588089 -185.01399231]
[-33.58021164 -173.29727173]
[-38.52487564 -161.37759399]
[-33.64259720 -147.19439697]
[-28.76031876 -133.01118469]
[-15.30279827 -126.73179626]
[-10.14942837 -112.41755676]
[-16.82707405 -98.34465027]
[-11.94479561 -84.16143799]
[-7.06251764 -69.97823334]
[-2.18023920 -55.79502869]
[2.70203924 -41.61182022]
[7.58431768 -27.42861366]
[25.58136177 -27.45445824]
[41.55234146 -20.49417496]
[53.00114822 -8.13568974]
[58.34172058 7.23445177]
[57.10933685 22.88264084]
[49.96805191 36.21209335]
[60.27761459 47.10763931]
[70.58717346 58.00318527]
[80.89673615 68.89872742]
[87.70645142 65.63298035]
[95.04249573 63.83860016]
[102.59078979 63.59242630]
[110.02816772 64.90499115]
[117.03619385 67.72010803]
[123.31484222 71.91723633]
[135.06338501 62.59136200]
[146.81192017 53.26548767]
[155.45852661 38.68219376]
[171.86552429 42.95383835]
[172.30271912 59.90214539]
[156.13778687 65.01402283]
[144.38925171 74.33989716]
[132.64071655 83.66577148]
[137.54519653 89.69827271]
[141.26008606 97.04089355]
[155.86880493 93.63715363]
[170.47750854 90.23341370]
[185.08622742 86.82967377]
[199.66761780 83.31072235]
[214.22077942 79.67678833]
[225.63092041 67.89795685]
[241.46871948 72.15190887]
[245.44161987 88.06253815]
[233.46263123 99.26235962]
[217.85472107 94.22994995]
[203.30155945 97.86388397]
[197.56796265 102.53903198]
[188.48997498 101.43838501]
[173.88125610 104.84212494]
[159.27253723 108.24587250]
[144.66383362 111.64961243]
[138.56999207 125.35600281]
[145.82946777 138.48229980]
[153.08895874 151.60861206]
[160.34844971 164.73492432]
[173.79806519 173.06668091]
[173.18681335 187.94874573]
[180.44630432 201.07504272]
[187.70578003 214.20135498]
[194.96527100 227.32765198]
[202.22474670 240.45396423]
[214.38688660 244.76797485]
[220.16123962 255.85841370]
[216.93380737 267.52282715]
[223.98516846 280.76211548]
[231.03652954 294.00137329]
[240.54663086 300.34204102]
[241.87969971 310.40393066]
[251.29801941 322.07849121]
[260.71633911 333.75305176]
[270.13464355 345.42761230]
[279.55297852 357.10214233]
[294.40219116 353.57180786]
[309.31082153 356.84228516]
[321.31869507 366.26425171]
[328.04168701 379.96697998]
[328.14489746 395.22973633]
[321.60787964 409.02212524]
[309.72854614 418.60565186]
[294.86553955 422.07751465]
[279.96990967 418.74832153]
[267.99923706 409.27914429]
[261.33026123 395.55007935]
[261.28713989 380.28701782]
[267.87841797 366.52047729]
[258.46011353 354.84591675]
[249.04177856 343.17135620]
[239.62345886 331.49679565]
[230.20513916 319.82223511]
[231.33126831 334.77990723]
[226.47248840 348.97119141]
[216.41500854 360.09985352]
[202.78616333 366.36520386]
[187.79118347 366.75344849]
[173.85635376 361.20184326]
[163.23641968 350.60858154]
[157.64971924 336.68777466]
[158.00024414 321.69186401]
[164.23126221 308.04730225]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 165]
[4 164]
[5 163]
[7 160]
[8 159]
[9 158]
[10 157]
[11 156]
[13 154]
[14 153]
[15 152]
[16 151]
[22 31]
[23 30]
[33 118]
[34 117]
[35 116]
[36 115]
[40 61]
[41 60]
[42 59]
[45 56]
[46 55]
[69 109]
[70 108]
[71 107]
[72 106]
[73 105]
[74 104]
[77 101]
[78 100]
[79 99]
[81 96]
[82 95]
[83 92]
[84 91]
[85 90]
[124 132]
[125 131]
[126 130]
[134 150]
[135 149]
[136 148]
[137 147]
[138 145]
[139 144]
[167 188]
[168 187]
[169 186]
[170 185]
[171 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
