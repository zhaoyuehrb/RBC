%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sat Sep 12 02:03:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCAGGCCUGCAUGGUGCCGGGGCUGGCCCUCUGCCUCCUACUGGGGCCUCUUGCAGGGGCCAAGCCUGUGCAGGAGGAAGGAGACCCUUACGCGGAGCUGCCGGCCAUGCCCUACUGGCCUUUCUCCACCUCUGACUUCUGGAACUAUGUGCAGCACUUCCAGGCCCUGGGGGCCUACCCCCAGAUCGAGGACAUGGCCCGAACCUUCUUUGCCCACUUCCCCCUGGGGAGCACGCUGGGCUUCCACGUUCCC\
UAUCAGGAGGACUGA\
) } def
/len { sequence length } bind def

/coor [
[508.32101440 131.40695190]
[496.93988037 121.63610077]
[492.56851196 107.28719330]
[496.56881714 92.83043671]
[507.69329834 82.77026367]
[492.74996948 84.07278442]
[477.80661011 85.37530518]
[462.86328125 86.67783356]
[447.91995239 87.98035431]
[442.98281860 100.69320679]
[433.00723267 110.08932495]
[419.89614868 114.29817200]
[406.18447876 112.44626617]
[394.54904175 104.83774567]
[387.28601074 92.90612793]
[372.32858276 94.03533936]
[365.91857910 97.65940857]
[357.19137573 95.08992004]
[342.22186279 96.04565430]
[335.16244507 106.79997253]
[323.02062988 111.60686493]
[310.13485718 108.50837708]
[301.24877930 98.41526794]
[286.26916504 99.19741821]
[271.28958130 99.97956085]
[256.30996704 100.76170349]
[241.33038330 101.54384613]
[226.35079956 102.32599640]
[211.37120056 103.10813904]
[197.16545105 113.43770599]
[180.83631897 104.89066315]
[165.86680603 105.84640503]
[150.89727783 106.80214691]
[135.92776489 107.75788879]
[120.95823669 108.71363068]
[105.98871613 109.66937256]
[91.77200317 114.45320892]
[79.26985168 122.74152374]
[66.76770020 131.02984619]
[54.26554871 139.31816101]
[47.44754791 154.23281860]
[31.09868240 155.51600647]
[22.03726006 141.84770203]
[29.58489799 127.28867340]
[45.97723389 126.81600952]
[58.47938538 118.52768707]
[70.98153687 110.23937225]
[83.48368835 101.95105743]
[78.53536224 87.79075623]
[63.59202576 89.09328461]
[48.64868546 90.39580536]
[33.70534515 91.69833374]
[18.76200294 93.00085449]
[3.81866193 94.30337524]
[-11.12467861 95.60590363]
[-26.06801987 96.90842438]
[-41.01136017 98.21095276]
[-54.08753586 107.11736298]
[-67.43860626 100.51445770]
[-82.38194275 101.81698608]
[-97.32528687 103.11950684]
[-112.26862335 104.42203522]
[-127.52289581 111.82092285]
[-138.85543823 99.21101379]
[-129.87548828 84.83058167]
[-113.57115173 89.47869110]
[-98.62780762 88.17617035]
[-83.68447113 86.87364197]
[-68.74112701 85.57112122]
[-56.73379898 76.75787354]
[-42.31388474 83.26760864]
[-27.37054443 81.96508789]
[-12.42720318 80.66255951]
[2.51613760 79.36003876]
[17.45947838 78.05751038]
[32.40282059 76.75498962]
[47.34616089 75.45246887]
[62.28950119 74.14994049]
[77.23284149 72.84741974]
[79.65661621 58.04453278]
[65.90900421 52.04425812]
[52.16139984 46.04397964]
[38.41379547 40.04370117]
[22.18688965 42.41426849]
[12.23416138 29.38064766]
[18.79412460 14.35071278]
[35.11845016 12.78597164]
[44.41407394 26.29609489]
[58.16167831 32.29637146]
[71.90928650 38.29664993]
[85.65689087 44.29692841]
[103.46932983 59.36477280]
[109.85680389 78.06700134]
[105.03297424 94.69984436]
[120.00249481 93.74411011]
[134.97201538 92.78836823]
[149.94154358 91.83262634]
[164.91105652 90.87688446]
[179.88058472 89.92114258]
[188.95156860 80.78480530]
[201.41555786 80.27822113]
[210.58905029 88.12854767]
[225.56864929 87.34639740]
[240.54824829 86.56425476]
[255.52783203 85.78211212]
[270.50744629 84.99996185]
[285.48703003 84.21781921]
[300.46661377 83.43567657]
[311.95343018 70.21927643]
[329.10772705 69.43326569]
[341.26611328 81.07613373]
[356.23565674 80.12039948]
[371.19937134 79.07790375]
[386.15679932 77.94869232]
[393.18115234 62.96158218]
[406.73345947 53.62418365]
[423.05209351 52.41289902]
[437.66552734 59.56445312]
[446.61740112 73.03701782]
[461.56076050 71.73448944]
[476.50408936 70.43196869]
[491.44744873 69.12944031]
[506.39077759 67.82691956]
[521.24584961 65.74697876]
[535.97229004 62.89527512]
[550.69873047 60.04357147]
[565.42517090 57.19186783]
[580.15161133 54.34016418]
[594.87805176 51.48846054]
[606.33917236 33.82749176]
[626.76373291 31.41385078]
[635.41082764 19.15712357]
[644.05798340 6.90039492]
[652.70507812 -5.35633278]
[644.52789307 -15.60014248]
[640.59356689 -28.77572632]
[641.92706299 -43.10787582]
[648.80792236 -56.47939301]
[660.66510010 -66.74314880]
[676.10174561 -72.06159973]
[682.02221680 -85.84375763]
[687.94268799 -99.62590790]
[693.86322021 -113.40806580]
[699.78369141 -127.19021606]
[705.70416260 -140.97236633]
[711.62469482 -154.75453186]
[707.03247070 -164.56448364]
[708.54577637 -175.06851196]
[715.43041992 -182.85469055]
[725.24737549 -185.52734375]
[731.48577881 -199.16854858]
[737.72418213 -212.80973816]
[738.81298828 -229.72868347]
[755.37213135 -233.36608887]
[763.45141602 -218.46099854]
[751.36535645 -206.57131958]
[745.12695312 -192.93013000]
[738.88854980 -179.28894043]
[742.08508301 -160.19792175]
[725.40679932 -148.83403015]
[719.48632812 -135.05187988]
[713.56585693 -121.26972961]
[707.64532471 -107.48757172]
[701.72485352 -93.70542145]
[695.80438232 -79.92326355]
[689.88385010 -66.14110565]
[695.66937256 -61.36847305]
[707.24035645 -51.82320023]
[713.02581787 -47.05056381]
[725.43109131 -55.48325348]
[737.83630371 -63.91594315]
[750.24151611 -72.34863281]
[762.64678955 -80.78131866]
[775.05200195 -89.21400452]
[787.45721436 -97.64669800]
[794.10186768 -112.63938904]
[810.43475342 -114.11201477]
[819.65405273 -100.54966736]
[812.27569580 -85.90412140]
[795.88995361 -85.24146271]
[783.48468018 -76.80877686]
[771.07946777 -68.37609100]
[758.67425537 -59.94340134]
[746.26898193 -51.51071167]
[733.86376953 -43.07802200]
[721.45855713 -34.64533234]
[716.47320557 -12.68315029]
[701.90411377 2.68443227]
[682.82037354 8.08100891]
[664.96179199 3.29078341]
[656.31469727 15.54751110]
[647.66754150 27.80423927]
[639.02044678 40.06096649]
[642.28845215 46.14875031]
[643.68060303 52.91653061]
[643.08074951 59.79992294]
[655.86352539 67.64851379]
[668.64630127 75.49711609]
[681.42913818 83.34571075]
[691.79937744 80.21818542]
[701.97479248 83.23245239]
[708.68518066 91.16923523]
[709.91229248 101.26924133]
[722.50970459 109.41207123]
[735.10705566 117.55490112]
[747.70446777 125.69773102]
[759.16693115 117.27553558]
[772.78552246 113.27449799]
[786.92242432 114.15456390]
[799.88488770 119.78996277]
[810.12762451 129.48672485]
[816.43719482 142.06805420]
[818.07562256 156.01712036]
[814.86682129 169.65997314]
[827.36895752 177.94828796]
[839.87109375 186.23660278]
[852.37322998 194.52491760]
[864.87542725 202.81323242]
[877.61248779 210.73579407]
[890.57379150 218.28593445]
[903.53509521 225.83607483]
[916.49639893 233.38621521]
[929.45770264 240.93635559]
[942.41900635 248.48649597]
[959.14874268 251.23445129]
[961.13946533 268.07113647]
[945.51184082 274.64486694]
[934.86883545 261.44781494]
[921.90753174 253.89765930]
[908.94622803 246.34751892]
[895.98492432 238.79737854]
[883.02362061 231.24723816]
[870.06231689 223.69709778]
[871.51354980 238.62673950]
[860.82934570 249.15518188]
[845.92266846 247.48490906]
[837.83355713 234.85296631]
[842.55291748 220.61473083]
[856.58709717 215.31539917]
[844.08496094 207.02706909]
[831.58276367 198.73875427]
[819.08062744 190.45043945]
[806.57849121 182.16212463]
[793.55590820 191.22096252]
[778.01483154 194.58981323]
[762.33416748 191.72265625]
[748.92596436 183.03038025]
[739.86425781 169.82220459]
[736.56433105 154.10856628]
[739.56164551 138.29512024]
[726.96423340 130.15229797]
[714.36682129 122.00946045]
[701.76947021 113.86663055]
[682.41693115 114.27292633]
[673.58050537 96.12849426]
[660.79772949 88.27989960]
[648.01495361 80.43129730]
[635.23217773 72.58270264]
[622.43756104 78.46802521]
[608.31750488 76.16558838]
[597.72973633 66.21489716]
[583.00329590 69.06659698]
[568.27685547 71.91829681]
[553.55041504 74.77000427]
[538.82403564 77.62170410]
[524.09759521 80.47341156]
[537.55822754 87.09232330]
[545.37457275 99.89486694]
[545.11145020 114.89256287]
[536.85089111 127.41305542]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 123]
[6 122]
[7 121]
[8 120]
[9 119]
[15 114]
[16 113]
[18 112]
[19 111]
[23 108]
[24 107]
[25 106]
[26 105]
[27 104]
[28 103]
[29 102]
[31 99]
[32 98]
[33 97]
[34 96]
[35 95]
[36 94]
[37 48]
[38 47]
[39 46]
[40 45]
[49 79]
[50 78]
[51 77]
[52 76]
[53 75]
[54 74]
[55 73]
[56 72]
[57 71]
[59 69]
[60 68]
[61 67]
[62 66]
[80 91]
[81 90]
[82 89]
[83 88]
[124 266]
[125 265]
[126 264]
[127 263]
[128 262]
[129 261]
[131 193]
[132 192]
[133 191]
[134 190]
[140 166]
[141 165]
[142 164]
[143 163]
[144 162]
[145 161]
[146 160]
[150 158]
[151 157]
[152 156]
[169 186]
[170 185]
[171 184]
[172 183]
[173 182]
[174 181]
[175 180]
[196 258]
[197 257]
[198 256]
[199 255]
[203 253]
[204 252]
[205 251]
[206 250]
[214 243]
[215 242]
[216 241]
[217 240]
[218 239]
[219 233]
[220 232]
[221 231]
[222 230]
[223 229]
[224 228]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
