%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 13:49:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGAUCCCAACUGCUCCUGCGCCGCCGGUGACUCCUGCACCUGCGCCGGCUCCUGCAAAUGCAAAGAGUGCAAAUGCACCUCCUGCAAGAAAAGCUGCUGCUCCUGCUGCCCUGUGGGCUGUGCCAAGUGUGCCCAGGGCUGCAUCUGCAAAGGGGCGUCGGACAAGUGCAGCUGCUGCGCCUGA\
) } def
/len { sequence length } bind def

/coor [
[85.93703461 436.86441040]
[78.47510529 437.61914062]
[75.47155762 452.31533813]
[72.46800232 467.01156616]
[75.22031403 483.74060059]
[59.90695572 491.01641846]
[48.67632675 478.31564331]
[57.77178955 464.00799561]
[60.77534103 449.31179810]
[63.77889252 434.61557007]
[50.36187744 441.32257080]
[36.36069870 435.94046021]
[30.89088821 421.97332764]
[37.51359177 408.51449585]
[51.91706848 404.32644653]
[64.72360992 412.13540649]
[62.96368027 397.23901367]
[61.20374680 382.34262085]
[52.02661133 370.61105347]
[58.09131241 355.99841309]
[56.33137894 341.10202026]
[54.57144547 326.20559692]
[52.81151199 311.30920410]
[51.05157852 296.41281128]
[38.50134277 288.19747925]
[24.14495277 292.54421997]
[9.78856373 296.89096069]
[-4.56782484 301.23770142]
[-18.92421341 305.58444214]
[-33.28060150 309.93115234]
[-47.63699341 314.27789307]
[-54.96198654 319.77090454]
[-62.27117538 318.57489014]
[-65.93955231 333.48925781]
[-76.58522797 344.56018066]
[-91.34455109 348.80963135]
[-106.24736023 345.09451294]
[-117.28485107 334.41418457]
[-121.48801422 319.64160156]
[-117.72621155 304.75051880]
[-107.01134491 293.74655151]
[-92.22566223 289.58972168]
[-77.34644318 293.39819336]
[-66.37612152 304.14749146]
[-51.98372650 299.92150879]
[-37.62733841 295.57476807]
[-23.27094841 291.22802734]
[-8.91455841 286.88131714]
[5.44183064 282.53457642]
[19.79821968 278.18783569]
[34.15460968 273.84109497]
[44.89749146 271.78103638]
[53.63177109 274.57360840]
[58.81465912 260.49746704]
[63.99755096 246.42132568]
[68.94323730 232.26010132]
[73.65033722 218.01779175]
[78.35742950 203.77549744]
[75.00485992 189.26309204]
[86.68190765 178.58802795]
[91.38900757 164.34571838]
[96.09609985 150.10342407]
[100.80319977 135.86111450]
[105.51029205 121.61880493]
[79.64840698 119.52629852]
[67.33519745 90.21839905]
[58.19544983 78.32449341]
[50.46826172 73.41336060]
[49.00407028 66.15313721]
[40.06541824 54.10737228]
[31.12676620 42.06160355]
[22.18811417 30.01583672]
[6.93338251 23.99709892]
[4.78635502 7.73910761]
[17.95570946 -2.03331041]
[32.89394379 4.73287153]
[34.23388290 21.07718468]
[43.17253494 33.12295151]
[52.11118317 45.16872025]
[61.04983521 57.21448517]
[70.08935547 69.18474579]
[79.22910309 81.07865143]
[86.45978546 79.08684540]
[90.24052429 64.57112885]
[100.92114258 75.10323334]
[108.15181732 73.11142731]
[109.91175079 58.21503067]
[111.67168427 43.31863403]
[105.60698700 28.70596886]
[114.78411865 16.97441101]
[116.54405212 2.07801414]
[114.46243286 -2.75428319]
[114.45725250 -7.43101311]
[116.11779022 -11.18292999]
[118.78635406 -13.51753139]
[121.29450989 -28.30635071]
[115.08098602 -43.48278427]
[125.33002472 -56.28470993]
[141.49829102 -53.54259872]
[146.95326233 -38.07730484]
[136.08332825 -25.79819298]
[133.57516479 -11.00937462]
[131.44044495 3.83794689]
[129.68051147 18.73434448]
[135.87109375 32.28151703]
[126.56808472 45.07856750]
[124.80815125 59.97496414]
[123.04821777 74.87136078]
[126.21610260 89.59905243]
[122.25030518 101.63098145]
[135.44557190 94.49760437]
[148.64082336 87.36422729]
[161.83609009 80.23085022]
[175.03135681 73.09747314]
[178.83471680 67.64832306]
[184.04116821 65.30541229]
[188.79188538 65.95458221]
[202.21932983 59.26850510]
[215.64678955 52.58242798]
[229.07423401 45.89635468]
[228.82125854 30.63533401]
[235.22262573 16.77946281]
[247.00737000 7.07983828]
[261.83560181 3.46232438]
[276.76315308 6.64518261]
[288.82617188 15.99645329]
[295.62954712 29.65943527]
[295.82241821 44.92133331]
[289.36651611 58.75188828]
[277.54370117 68.40502930]
[262.70132446 71.96412659]
[247.78640747 68.72250366]
[235.76031494 59.32380295]
[222.33285522 66.00988007]
[208.90541077 72.69595337]
[195.47796631 79.38202667]
[182.16473389 86.29273224]
[168.96946716 93.42610931]
[155.77420044 100.55948639]
[142.57894897 107.69286346]
[129.38368225 114.82624054]
[119.75260162 126.32590485]
[115.04550171 140.56820679]
[110.33840942 154.81051636]
[105.63130951 169.05282593]
[100.92421722 183.29512024]
[103.94010162 198.82621765]
[92.59973907 208.48258972]
[87.89263916 222.72489929]
[83.18554688 236.96719360]
[84.15646362 243.54109192]
[81.97558594 248.81747437]
[78.07368469 251.60421753]
[72.89080048 265.68035889]
[67.70790863 279.75650024]
[65.94797516 294.65289307]
[67.70790863 309.54928589]
[69.46784210 324.44567871]
[71.22777557 339.34207153]
[72.98770905 354.23846436]
[82.29072571 367.03552246]
[76.10014343 380.58270264]
[77.86007690 395.47909546]
[79.62001038 410.37548828]
[122.11997986 428.71481323]
[128.00543213 442.51196289]
[140.53695679 452.16967773]
[138.41380310 466.91220093]
[144.29925537 480.70935059]
[150.18469238 494.50650024]
[156.07014465 508.30364990]
[161.95558167 522.10083008]
[167.84101868 535.89794922]
[179.61720276 548.09460449]
[171.15718079 562.78692627]
[154.69706726 558.72479248]
[154.04386902 541.78344727]
[148.15841675 527.98626709]
[142.27297974 514.18908691]
[136.38754272 500.39193726]
[130.50209045 486.59478760]
[124.61665344 472.79763794]
[112.50609589 464.12677002]
[114.20826721 448.39739990]
[108.32282257 434.60025024]
[100.86089325 435.35498047]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 10]
[3 9]
[4 8]
[16 164]
[17 163]
[18 162]
[20 160]
[21 159]
[22 158]
[23 157]
[24 156]
[25 51]
[26 50]
[27 49]
[28 48]
[29 47]
[30 46]
[31 45]
[33 44]
[53 155]
[54 154]
[55 153]
[56 150]
[57 149]
[58 148]
[60 146]
[61 145]
[62 144]
[63 143]
[64 142]
[66 82]
[67 81]
[69 80]
[70 79]
[71 78]
[72 77]
[86 108]
[87 107]
[88 106]
[90 104]
[91 103]
[95 102]
[96 101]
[110 141]
[111 140]
[112 139]
[113 138]
[114 137]
[117 136]
[118 135]
[119 134]
[120 133]
[165 185]
[166 184]
[168 182]
[169 181]
[170 180]
[171 179]
[172 178]
[173 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
