%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sat Sep 12 02:03:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAGUGAGCGACAAGGUGCUGGGGCAACCAAUGGAAAAGACAAGACAUCUGGUGAAAAUGAUGGACAGAAGAAAGUUCAAGAAGAAUUUGACAUUGACAUGGAUGCACCAGAGACAGAACGUGCAGCGGUGGCCAUUCAGUCUCAGUUCAGAAAAUUCCAGAAGAAGAAGGCUGGGUCUCAGUCCUAG\
) } def
/len { sequence length } bind def

/coor [
[104.69554138 348.37490845]
[100.50590515 362.92568970]
[91.81659698 375.32629395]
[79.57016754 384.23153687]
[65.09501648 388.67550659]
[49.96130371 388.17611694]
[35.81061554 382.78753662]
[24.17791939 373.09426880]
[16.32503700 360.14779663]
[13.10379410 345.35247803]
[14.86360645 330.31311035]
[21.41358185 316.66113281]
[32.04322815 305.87738037]
[45.59952164 299.13159180]
[60.61197662 297.15551758]
[63.56873322 282.44982910]
[66.52548981 267.74411011]
[64.75851440 260.55383301]
[69.65461731 252.82063293]
[72.85411072 238.16583252]
[76.05360413 223.51101685]
[79.25309753 208.85621643]
[82.45259094 194.20141602]
[85.65208435 179.54661560]
[88.85158539 164.89181519]
[92.05107880 150.23701477]
[64.70770264 138.95791626]
[47.49142456 113.72042847]
[32.83662415 116.91992188]
[18.18181992 120.11941528]
[3.52701783 123.31890869]
[-11.10083294 126.63945007]
[-25.70073128 130.08081055]
[-40.30063248 133.52217102]
[-43.54113770 148.43733215]
[-52.93894196 160.46412659]
[-66.62810516 167.21464539]
[-81.89063263 167.34857178]
[-95.69614410 160.83929443]
[-105.30353546 148.97924805]
[-108.80525970 134.12324524]
[-105.50605011 119.22096252]
[-96.06095123 107.23126221]
[-82.34531403 100.53469849]
[-67.08237457 100.46089172]
[-53.30260468 107.02448273]
[-43.74198914 118.92227173]
[-29.14208984 115.48091125]
[-14.54219151 112.03955078]
[-8.74262238 107.43658447]
[0.32752344 108.66410828]
[14.98232555 105.46461487]
[29.63712883 102.26512146]
[44.29193115 99.06562805]
[46.43195343 91.87741852]
[32.03723526 87.65935516]
[17.64251518 83.44128418]
[3.30343151 79.03780365]
[7.58292484 64.66123199]
[21.99631691 68.81712341]
[36.35415649 73.15906525]
[50.71199417 77.50100708]
[52.85201645 70.31279755]
[42.33346558 59.61887360]
[31.81491470 48.92494583]
[21.29636192 38.23102188]
[10.77781010 27.53709412]
[-4.54722404 29.97080231]
[-18.36063194 22.90189743]
[-25.35087395 9.04851818]
[-22.83006096 -6.26242971]
[-11.76749611 -17.14357376]
[3.58303809 -19.41089249]
[17.31894875 -12.19255447]
[24.15849686 1.73584139]
[21.47173691 17.01854324]
[31.99028969 27.71246910]
[42.50884247 38.40639496]
[53.02739334 49.10032272]
[63.54594421 59.79425049]
[75.99944305 53.08307266]
[89.38208771 49.98748016]
[102.69696045 50.51839066]
[115.00723267 54.42434311]
[125.50205231 61.22370529]
[135.66127014 50.18784714]
[145.82049561 39.15198898]
[155.97972107 28.11613083]
[166.13894653 17.08027267]
[169.65757751 8.63079834]
[176.55853271 5.94770241]
[186.89883423 -4.91867590]
[190.80694580 -20.24960327]
[205.18562317 -24.13582420]
[215.52592468 -35.00220490]
[225.86622620 -45.86857986]
[236.20652771 -56.73495865]
[246.54682922 -67.60133362]
[250.20468140 -75.99147797]
[257.14904785 -78.56011200]
[267.66760254 -89.25403595]
[278.18615723 -99.94795990]
[288.70471191 -110.64189148]
[287.98666382 -121.51782990]
[293.27291870 -130.79757690]
[302.60241699 -135.52752686]
[312.77551270 -134.35682678]
[323.64190674 -144.69712830]
[334.50827026 -155.03742981]
[345.37463379 -165.37773132]
[341.32641602 -181.40028381]
[345.87960815 -197.18907166]
[357.70211792 -208.46609497]
[373.50564575 -212.22552490]
[388.96008301 -207.53450012]
[399.65402222 -218.05305481]
[401.22393799 -234.01910400]
[414.76336670 -242.62510681]
[429.88601685 -237.26927185]
[434.99108887 -222.06013489]
[426.16241455 -208.66484070]
[410.17257690 -207.35911560]
[399.47863770 -196.84057617]
[403.76959229 -183.86492920]
[402.03912354 -170.24147034]
[394.56875610 -158.63934326]
[382.77017212 -151.35643005]
[368.91879272 -149.86433411]
[355.71493530 -154.51135254]
[344.84857178 -144.17105103]
[333.98220825 -133.83074951]
[323.11581421 -123.49044800]
[319.04190063 -104.59896088]
[299.39865112 -100.12333679]
[288.88009644 -89.42941284]
[278.36154175 -78.73548126]
[267.84298706 -68.04155731]
[257.41320801 -57.26103592]
[247.07290649 -46.39465714]
[236.73260498 -35.52827835]
[226.39230347 -24.66190147]
[216.05200195 -13.79552364]
[212.88351440 0.75816709]
[197.76521301 5.42162561]
[187.42491150 16.28800392]
[177.17480469 27.23949623]
[167.01557922 38.27535629]
[156.85635376 49.31121445]
[146.69712830 60.34707260]
[136.53790283 71.38292694]
[141.33540344 77.83037567]
[144.99127197 85.08237457]
[147.37069702 92.93609619]
[148.37501526 101.16617584]
[147.94548035 109.53116608]
[146.06581116 117.78063202]
[142.76362610 125.66262817]
[138.11033630 132.93142700]
[132.21986389 139.35508728]
[142.37908936 150.39094543]
[152.53831482 161.42680359]
[162.69754028 172.46266174]
[177.66694641 169.02571106]
[192.34457397 173.54925537]
[202.78224182 184.81649780]
[206.17225647 199.79660034]
[201.60272217 214.45999146]
[190.30281067 224.86228943]
[175.31216431 228.20532227]
[160.66316223 223.58984375]
[150.29634094 212.25738525]
[147.00030518 197.25633240]
[151.66168213 182.62188721]
[141.50245667 171.58602905]
[131.34323120 160.55017090]
[121.18401337 149.51431274]
[106.70587921 153.43650818]
[103.50638580 168.09130859]
[100.30689240 182.74610901]
[97.10739899 197.40090942]
[93.90789795 212.05570984]
[90.70840454 226.71051025]
[87.50891113 241.36532593]
[84.30941772 256.02011108]
[81.23118591 270.70086670]
[78.27442932 285.40658569]
[75.31768036 300.11227417]
[88.39975739 307.73709106]
[98.29534149 319.19815063]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 187]
[16 186]
[17 185]
[19 184]
[20 183]
[21 182]
[22 181]
[23 180]
[24 179]
[25 178]
[26 177]
[28 54]
[29 53]
[30 52]
[31 51]
[32 49]
[33 48]
[34 47]
[63 80]
[64 79]
[65 78]
[66 77]
[67 76]
[85 150]
[86 149]
[87 148]
[88 147]
[89 146]
[91 145]
[92 144]
[94 142]
[95 141]
[96 140]
[97 139]
[98 138]
[100 137]
[101 136]
[102 135]
[103 134]
[107 132]
[108 131]
[109 130]
[110 129]
[115 123]
[116 122]
[159 176]
[160 175]
[161 174]
[162 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
