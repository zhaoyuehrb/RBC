%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sat Sep 12 01:22:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAGGCUCUUCCUGUCGCUCCCGGUCCUGGUGGUGGUUCUGUCGAUCGUCUUGGAAGGCCCAGCCCCAGCCCAGGGGACCCCAGACGUCUCCAGUGCCUUGGAUAAGCUGAAGGAGUUUGGAAACACACUGGAGGACAAGGCUCGGGAACUCAUCAGCCGCAUCAAACAGAGUGAACUUUCUGCCAAGAUGCGGGAGUGGUUUUCAGAGACAUUUCAGAAAGUGAAGGAGAAACUCAAGAUUGACUCAUGA\
) } def
/len { sequence length } bind def

/coor [
[136.33979797 706.50408936]
[149.57765198 699.11932373]
[147.16676331 684.31433105]
[144.75587463 669.50933838]
[142.34500122 654.70434570]
[130.14466858 646.23748779]
[127.48878479 631.25744629]
[136.45233154 618.51806641]
[134.04144287 603.71307373]
[131.63055420 588.90808105]
[127.46485138 582.82788086]
[129.28285217 573.90435791]
[127.05598450 559.07061768]
[124.82911682 544.23681641]
[120.73923492 538.10540771]
[122.66789246 529.20513916]
[120.62538910 514.34484863]
[118.58289337 499.48455811]
[116.54039001 484.62426758]
[114.49788666 469.76397705]
[100.15843964 465.35940552]
[85.82026672 460.95523071]
[75.78792572 472.10656738]
[65.75557709 483.25787354]
[64.02379608 489.59344482]
[59.97188950 493.52981567]
[55.33297729 494.55758667]
[45.02681732 505.45635986]
[41.75499344 521.52581787]
[26.11882973 526.46972656]
[14.20346928 515.20227051]
[18.26641464 499.31439209]
[34.12805557 495.15020752]
[44.43421555 484.25143433]
[54.60425568 473.22555542]
[64.63659668 462.07421875]
[74.66894531 450.92288208]
[80.55942535 437.12786865]
[81.67595673 422.16949463]
[82.79248047 407.21112061]
[83.90901184 392.25271606]
[85.02554321 377.29434204]
[77.37971497 367.94241333]
[78.17028809 355.48742676]
[87.51771545 346.62551880]
[88.81990051 331.68215942]
[90.12207794 316.73880005]
[87.57870483 309.82119751]
[91.53433990 301.61834717]
[93.02197266 286.69229126]
[94.50960541 271.76623535]
[95.99723816 256.84017944]
[97.48487091 241.91413879]
[91.04795074 228.48226929]
[100.11574554 215.51748657]
[101.60338593 200.59143066]
[103.09101868 185.66539001]
[104.57865143 170.73933411]
[106.06628418 155.81327820]
[107.55391693 140.88723755]
[109.04154968 125.96118927]
[97.13742828 126.17279053]
[86.78087616 121.41587067]
[79.83802032 113.02897644]
[77.34799957 102.95307922]
[62.66173935 99.90123749]
[47.97547913 96.84940338]
[33.28921509 93.79756165]
[20.21307373 102.67393494]
[4.70621586 99.62223816]
[-4.03141594 86.45298004]
[-0.81593812 70.97924805]
[12.44496250 62.38134003]
[27.88382912 65.76023865]
[36.34105682 79.11129761]
[51.02731705 82.16313934]
[65.71357727 85.21498108]
[80.39984131 88.26682281]
[83.01750946 84.72161865]
[86.26720428 81.74502563]
[81.68512726 67.46201324]
[77.10304260 53.17899323]
[65.52001190 42.40198517]
[68.99965668 27.91953278]
[64.41757202 13.63651752]
[47.23989487 5.59698057]
[41.51889420 -12.14939404]
[50.45468903 -28.14868736]
[45.51934433 -42.31351471]
[40.58399963 -56.47834396]
[35.56080627 -70.61225891]
[30.44995499 -84.71471405]
[25.33910561 -98.81716919]
[20.22825623 -112.91961670]
[15.11740589 -127.02207184]
[10.00655651 -141.12452698]
[4.89570665 -155.22698975]
[-9.14027119 -161.98191833]
[-14.12250519 -176.35661316]
[-7.59621191 -189.69615173]
[-12.70706177 -203.79859924]
[-25.46801376 -208.05737305]
[-33.33832932 -218.72712708]
[-33.63064575 -231.78784180]
[-26.46206474 -242.47601318]
[-31.39740944 -256.64083862]
[-36.33275604 -270.80566406]
[-41.26810074 -284.97048950]
[-46.20344543 -299.13531494]
[-51.13879013 -313.30014038]
[-64.90008545 -321.54675293]
[-66.88976288 -337.46594238]
[-55.58151627 -348.84588623]
[-39.65006638 -346.95687866]
[-31.31665421 -333.24798584]
[-36.97396088 -318.23550415]
[-32.03861618 -304.07067871]
[-27.10327148 -289.90582275]
[-22.16792679 -275.74099731]
[-17.23258209 -261.57617188]
[-12.29723644 -247.41134644]
[3.15213442 -240.73571777]
[9.09803486 -224.63011169]
[1.39539254 -208.90945435]
[6.50624228 -194.80699158]
[20.06348419 -188.74591064]
[25.44750786 -174.51681519]
[18.99816132 -160.33782959]
[24.10901070 -146.23538208]
[29.21986008 -132.13291931]
[34.33071136 -118.03047180]
[39.44155884 -103.92801666]
[44.55241013 -89.82556152]
[49.66325760 -75.72310638]
[54.88287354 -70.51951599]
[54.74882889 -61.41368866]
[59.68417358 -47.24885941]
[64.61951447 -33.08403015]
[75.69410706 -30.47604752]
[84.23121643 -22.77515602]
[88.04158020 -11.80092812]
[86.07363892 -0.23048972]
[78.70059204 9.05443764]
[83.28266907 23.33745384]
[94.53796387 33.09284592]
[91.38606262 48.59691238]
[95.96813965 62.87992859]
[100.55021667 77.16294861]
[118.49183655 82.92847443]
[127.44789124 101.53163910]
[141.38491821 95.98553467]
[155.32194519 90.43943024]
[169.25897217 84.89332581]
[156.63995361 76.78404236]
[154.98509216 61.87560654]
[165.51852417 51.19633865]
[180.44830322 52.64608765]
[188.73031616 65.15242004]
[184.23686218 79.46520996]
[198.49114990 74.79454041]
[212.74545288 70.12387085]
[226.99974060 65.45320129]
[241.25402832 60.78252792]
[255.50833130 56.11185837]
[269.76260376 51.44118881]
[274.73904419 35.26200104]
[288.25027466 25.34366798]
[304.84445190 25.44207191]
[317.97116089 35.31991196]
[332.16638184 30.47260666]
[346.36157227 25.62530136]
[360.55676270 20.77799606]
[374.75195312 15.93069077]
[381.49047852 1.63495958]
[396.39196777 -3.63009691]
[410.61566162 3.25918651]
[415.72290039 18.21551895]
[408.68359375 32.36557770]
[393.67410278 37.31437683]
[379.59927368 30.12588882]
[365.40408325 34.97319412]
[351.20886230 39.82049942]
[337.01367188 44.66780472]
[322.81848145 49.51511002]
[320.08932495 62.56866837]
[311.20031738 72.65455627]
[298.38864136 77.07280731]
[284.95947266 74.57067108]
[274.43328857 65.69548035]
[260.17898560 70.36614990]
[245.92469788 75.03681946]
[231.67041016 79.70748901]
[217.41612244 84.37815857]
[203.16181946 89.04882812]
[188.90753174 93.71949768]
[174.80508423 98.83034515]
[160.86805725 104.37645721]
[146.93103027 109.92256165]
[132.99400330 115.46866608]
[123.96759796 127.44882202]
[122.47996521 142.37486267]
[120.99233246 157.30091858]
[119.50469971 172.22697449]
[118.01706696 187.15301514]
[116.52943420 202.07907104]
[115.04179382 217.00511169]
[121.37231445 231.50460815]
[112.41091919 243.40177917]
[110.92328644 258.32781982]
[109.43565369 273.25387573]
[107.94802094 288.17993164]
[106.46038818 303.10598755]
[105.06545258 318.04098511]
[103.76326752 332.98434448]
[102.46109009 347.92770386]
[110.62928009 364.44500732]
[99.98392487 378.41085815]
[98.86740112 393.36926270]
[97.75086975 408.32763672]
[96.63433838 423.28601074]
[95.51781464 438.24441528]
[129.35818481 467.72149658]
[131.40068054 482.58175659]
[133.44317627 497.44204712]
[135.48567200 512.30236816]
[137.52818298 527.16265869]
[139.66290283 542.00994873]
[141.88977051 556.84375000]
[144.11662292 571.67755127]
[146.43554688 586.49719238]
[148.84643555 601.30218506]
[151.25730896 616.10717773]
[163.79960632 625.34454346]
[166.03367615 640.39324951]
[157.14997864 652.29345703]
[159.56086731 667.09844971]
[161.97175598 681.90344238]
[164.38262939 696.70843506]
[179.27952576 699.51165771]
[192.31768799 707.24359131]
[201.92266846 718.97045898]
[206.93463135 733.27630615]
[206.74836731 748.43347168]
[201.38636780 762.61181641]
[191.49610901 774.09912109]
[178.27189636 781.50830078]
[163.31060791 783.94464111]
[148.41889954 781.11395264]
[135.39501953 773.35803223]
[125.81166077 761.61346436]
[120.82605743 747.29840088]
[121.04025269 732.14160156]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 238]
[3 237]
[4 236]
[5 235]
[8 232]
[9 231]
[10 230]
[12 229]
[13 228]
[14 227]
[16 226]
[17 225]
[18 224]
[19 223]
[20 222]
[22 37]
[23 36]
[24 35]
[27 34]
[28 33]
[38 221]
[39 220]
[40 219]
[41 218]
[42 217]
[45 215]
[46 214]
[47 213]
[49 212]
[50 211]
[51 210]
[52 209]
[53 208]
[55 206]
[56 205]
[57 204]
[58 203]
[59 202]
[60 201]
[61 200]
[65 78]
[66 77]
[67 76]
[68 75]
[80 148]
[81 147]
[82 146]
[84 144]
[85 143]
[88 138]
[89 137]
[90 136]
[91 134]
[92 133]
[93 132]
[94 131]
[95 130]
[96 129]
[97 128]
[100 125]
[101 124]
[105 121]
[106 120]
[107 119]
[108 118]
[109 117]
[110 116]
[150 199]
[151 198]
[152 197]
[153 196]
[159 195]
[160 194]
[161 193]
[162 192]
[163 191]
[164 190]
[165 189]
[169 184]
[170 183]
[171 182]
[172 181]
[173 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
