%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 12:28:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGCCCCCGCGGCGGCUCCGUCCUCCUUGGCCGUCAGGGCCUCAAGCCCCGCCGCGACACCCACCUCGUACGGCGUCUUCUGCAAGGGGCUCUCCCGCACCCUGCUCGCCUUCUUCGAGCUGGCCUGGCAGCUGCGCAUGAACUUCCCGUACUUCUACGUCGCGGGCUCGGUGAUCCUCAACAUCCGAUUGCAGGUACAUAUUUAG\
) } def
/len { sequence length } bind def

/coor [
[50.15020370 218.32518005]
[41.66521454 216.68563843]
[33.71207047 213.33033752]
[24.28400803 224.99702454]
[14.85594463 236.66371155]
[5.42788172 248.33039856]
[-4.00018167 259.99710083]
[-2.52421141 275.50384521]
[-12.25180435 287.20120239]
[-27.04421616 288.51275635]
[-36.47227859 300.17944336]
[-45.90034103 311.84613037]
[-55.32840729 323.51281738]
[-64.75646973 335.17950439]
[-56.91499710 348.15206909]
[-53.98634338 363.02481079]
[-56.32415771 378.00183105]
[-63.64613724 391.27450562]
[-75.06811523 401.24017334]
[-89.21083832 406.69537354]
[-104.36649323 406.98138428]
[-118.70497131 402.06369019]
[-130.49482727 392.53607178]
[-138.31237793 379.54910278]
[-141.21362305 364.67098999]
[-138.84820557 349.69830322]
[-131.50178528 336.43914795]
[-120.06145477 326.49453735]
[-105.90870667 321.06542969]
[-90.75254822 320.80734253]
[-76.42315674 325.75146484]
[-66.99509430 314.08477783]
[-57.56703186 302.41809082]
[-48.13896942 290.75140381]
[-38.71090317 279.08468628]
[-40.53321457 264.34649658]
[-31.13801384 252.38050842]
[-15.66687012 250.56903076]
[-6.23880720 238.90234375]
[3.18925619 227.23565674]
[12.61731911 215.56895447]
[22.04538345 203.90226746]
[12.58059692 184.34855652]
[14.28354263 162.62091064]
[26.75941658 144.66502380]
[46.65572357 135.43038940]
[68.56287384 137.50605774]
[76.32294464 124.66933441]
[84.08300781 111.83261871]
[78.98192596 98.71697998]
[83.86827087 84.63078308]
[97.43437958 76.63552094]
[113.77576447 79.46366882]
[116.25643921 64.67021179]
[118.73712158 49.87676239]
[121.21780396 35.08330917]
[123.69847870 20.28985786]
[126.17916107 5.49640560]
[128.65983582 -9.29704666]
[117.35883331 -15.19775486]
[108.18485260 -24.02460098]
[101.87060547 -35.05863953]
[98.91646576 -47.40521622]
[99.55084229 -60.06650925]
[103.71253204 -72.02215576]
[111.05648041 -82.31151581]
[120.98236084 -90.11080170]
[132.68367004 -94.79909515]
[145.21318054 -96.00771332]
[148.36140442 -110.67362213]
[151.50961304 -125.33952332]
[154.65783691 -140.00543213]
[157.80604553 -154.67132568]
[160.95426941 -169.33723450]
[149.67736816 -179.67062378]
[145.11692810 -194.16542053]
[148.40220642 -208.89883423]
[158.55314636 -219.93579102]
[172.76986694 -224.37994385]
[175.91807556 -239.04585266]
[179.06629944 -253.71174622]
[182.10366821 -268.40100098]
[185.03001404 -283.11279297]
[187.95637512 -297.82455444]
[186.19526672 -304.20111084]
[187.69523621 -309.68566895]
[191.19969177 -312.93347168]
[186.75996399 -328.11898804]
[197.15838623 -338.78302002]
[200.52775574 -353.39971924]
[203.89710999 -368.01638794]
[207.26646423 -382.63308716]
[200.97457886 -391.50915527]
[200.61506653 -402.16342163]
[206.06533813 -411.06869507]
[215.31900024 -415.40933228]
[219.12828064 -429.91757202]
[222.93757629 -444.42584229]
[215.22747803 -457.96069336]
[219.29730225 -472.61984253]
[232.24822998 -479.88684082]
[236.05752563 -494.39508057]
[230.23768616 -505.90734863]
[233.71078491 -517.91394043]
[244.09054565 -524.12866211]
[248.11853027 -538.57775879]
[252.14649963 -553.02679443]
[256.17446899 -567.47589111]
[260.20245361 -581.92492676]
[251.21388245 -594.72100830]
[252.60490417 -610.29656982]
[263.71871948 -621.29736328]
[279.30770874 -622.52911377]
[292.01126099 -613.41027832]
[295.83111572 -598.24639893]
[288.96365356 -584.19744873]
[274.65151978 -577.89697266]
[270.62353516 -563.44787598]
[266.59558105 -548.99884033]
[262.56759644 -534.54974365]
[258.53961182 -520.10070801]
[263.82095337 -503.36633301]
[250.56576538 -490.58578491]
[246.75648499 -476.07754517]
[254.46699524 -463.38568115]
[250.81050110 -448.61798096]
[237.44583130 -440.61654663]
[233.63653564 -426.10830688]
[229.82723999 -411.60003662]
[236.27839661 -393.37319946]
[221.88314819 -379.26370239]
[218.51379395 -364.64703369]
[215.14442444 -350.03036499]
[211.77507019 -335.41366577]
[216.45579529 -321.27365112]
[205.81637573 -309.56411743]
[202.66815186 -294.89822388]
[199.74180603 -280.18643188]
[196.81544495 -265.47467041]
[198.59410095 -258.29940796]
[193.73219299 -250.56353760]
[190.58398438 -235.89762878]
[187.43576050 -221.23171997]
[198.57604980 -211.34437561]
[203.30297852 -197.11370850]
[200.25202942 -182.32998657]
[190.14453125 -170.98384094]
[175.62016296 -166.18902588]
[172.47195435 -151.52311707]
[169.32373047 -136.85720825]
[166.17552185 -122.19130707]
[163.02729797 -107.52540588]
[159.87908936 -92.85949707]
[174.46302795 -83.43904877]
[184.33213806 -69.11206055]
[187.95123291 -52.05942535]
[184.73902893 -34.88961792]
[175.16133118 -20.23966026]
[160.66369629 -10.37013340]
[143.45329285 -6.81636667]
[140.97261047 7.97708511]
[138.49192810 22.77053833]
[136.01126099 37.56399155]
[133.53057861 52.35744095]
[131.04989624 67.15089417]
[128.56921387 81.94434357]
[133.56919861 96.08648682]
[144.79685974 106.03332520]
[156.17347717 115.80945587]
[167.69642639 125.41265106]
[179.21939087 135.01583862]
[190.74235535 144.61903381]
[202.33752441 154.13493347]
[214.00421143 163.56300354]
[228.95294189 159.40190125]
[243.48077393 164.85369873]
[252.00143433 177.82203674]
[251.23855591 193.32034302]
[241.48548889 205.38920593]
[226.49249268 209.38789368]
[212.02465820 203.77882385]
[203.64518738 190.71881104]
[204.57614136 175.22969055]
[192.90945435 165.80162048]
[185.72949219 164.04203796]
[181.13917542 156.14199829]
[169.61621094 146.53880310]
[158.09324646 136.93560791]
[146.57028198 127.33242035]
[141.81517029 126.86520386]
[137.30372620 123.40435791]
[134.85002136 117.26098633]
[123.62236023 107.31414795]
[111.78429413 118.90968323]
[96.91973114 119.59268951]
[89.15966034 132.42941284]
[81.39959717 145.26612854]
[87.29827118 151.74496460]
[91.72418213 159.29519653]
[94.48946381 167.58815002]
[95.47841644 176.26382446]
[94.65238953 184.94648743]
[92.05120850 193.26097107]
[87.79133606 200.84887695]
[82.06063080 207.38401794]
[75.11007690 212.58644104]
[67.24279785 216.23445129]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 42]
[4 41]
[5 40]
[6 39]
[7 38]
[10 35]
[11 34]
[12 33]
[13 32]
[14 31]
[47 197]
[48 196]
[49 195]
[53 166]
[54 165]
[55 164]
[56 163]
[57 162]
[58 161]
[59 160]
[69 153]
[70 152]
[71 151]
[72 150]
[73 149]
[74 148]
[79 143]
[80 142]
[81 141]
[82 139]
[83 138]
[84 137]
[87 136]
[89 134]
[90 133]
[91 132]
[92 131]
[96 129]
[97 128]
[98 127]
[101 124]
[102 123]
[105 121]
[106 120]
[107 119]
[108 118]
[109 117]
[167 193]
[168 192]
[169 189]
[170 188]
[171 187]
[172 186]
[173 184]
[174 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
