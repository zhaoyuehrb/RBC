%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sat Sep 12 11:59:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCCAGUAAUCAAUAUUGAGGACCUGACAGAAAAGGACAAAUUGAAGAUGGAAGUUGACCAGCUCAAGAAAGAAGUGACACUGGAAAGAAUGCUAGUUUCCAAAUGUUGUGAAGAAGUAAGAGAUUACGUUGAAGAACGAUCUGGCGAGGAUCCACUGGUAAAGGGCAUCCCAGAGGACAAAAAUCCCUUCAAGGAGCUCAAAGGAGGCUGUGUGAUUUCAUAA\
) } def
/len { sequence length } bind def

/coor [
[252.18531799 409.46368408]
[257.54370117 396.47494507]
[246.15794373 386.70947266]
[234.77220154 376.94400024]
[223.38644409 367.17849731]
[212.00068665 357.41302490]
[200.61494446 347.64755249]
[189.22918701 337.88204956]
[188.08132935 342.51062012]
[185.40148926 346.81909180]
[181.28695679 350.42416382]
[170.60688782 360.95678711]
[159.92681885 371.48941040]
[149.24674988 382.02203369]
[138.56669617 392.55465698]
[134.65966797 400.79913330]
[127.66419983 403.15817261]
[116.83876038 413.54132080]
[106.01332092 423.92446899]
[107.07128906 433.27465820]
[103.76367950 441.93707275]
[96.94811249 448.01943970]
[88.23293304 450.25561523]
[79.59878540 448.26766968]
[68.34987640 458.19046021]
[57.10097122 468.11328125]
[58.69956207 483.54779053]
[50.89155579 496.95727539]
[36.67929459 503.18554688]
[21.52768135 499.83767700]
[11.26282024 488.20101929]
[9.83175945 472.75006104]
[17.78477097 459.42605591]
[32.06376266 453.35232544]
[47.17816544 456.86437988]
[58.42707443 446.94155884]
[69.67597961 437.01876831]
[74.54393768 416.95632935]
[95.63017273 413.09902954]
[106.45561218 402.71588135]
[117.28105164 392.33273315]
[128.03405762 381.87460327]
[138.71412659 371.34197998]
[149.39419556 360.80935669]
[160.07426453 350.27670288]
[170.75433350 339.74407959]
[155.80021667 340.91656494]
[146.18362427 329.40478516]
[149.99870300 314.89807129]
[164.03434753 309.60650635]
[176.47698975 317.98400879]
[172.36024475 303.55999756]
[168.24351501 289.13595581]
[153.20576477 281.59484863]
[148.18098450 265.18637085]
[156.74810791 249.92845154]
[152.43125916 235.56303406]
[148.11441040 221.19763184]
[143.18453979 215.70236206]
[143.83889771 206.60247803]
[139.72216797 192.17845154]
[135.60542297 177.75442505]
[131.48867798 163.33039856]
[120.55548859 153.21533203]
[124.20824432 137.82156372]
[120.09149933 123.39754486]
[120.19612122 138.39718628]
[115.05852509 152.48991394]
[105.32498932 163.90298462]
[92.21990967 171.20071411]
[77.39181519 173.46511841]
[62.70595551 170.41133118]
[50.00971222 162.42349243]
[40.90016937 150.50643921]
[36.52324295 136.15922546]
[37.42951584 121.18663025]
[43.50498581 107.47209167]
[53.98369217 96.74201202]
[46.24422455 83.89286041]
[38.50475693 71.04370880]
[30.76528740 58.19456100]
[14.44555473 49.65458298]
[14.81742477 32.10495377]
[6.90009642 19.36462593]
[-1.01723206 6.62430000]
[-8.93456078 -6.11602640]
[-16.85188866 -18.85635185]
[-24.76921844 -31.59667778]
[-40.19602203 -31.72779655]
[-53.09045792 -40.19757080]
[-59.33795929 -54.30332565]
[-56.94496536 -69.54396820]
[-46.67507553 -81.05625916]
[-31.80537224 -85.16667175]
[-17.08072662 -80.56359100]
[-7.19971752 -68.71584320]
[-5.31534004 -53.40399551]
[-12.02889156 -39.51400757]
[-4.11156273 -26.77368164]
[3.80576563 -14.03335476]
[11.72309399 -1.29302871]
[19.64042282 11.44729710]
[27.55775070 24.18762398]
[39.25618744 27.23875999]
[45.95824814 37.77884674]
[43.61443710 50.45509338]
[51.35390472 63.30424118]
[59.09337234 76.15338898]
[66.83283997 89.00254059]
[74.27422333 88.06668091]
[72.40249634 73.18391418]
[70.53077698 58.30115128]
[68.65927887 43.41835785]
[83.54210663 41.54709625]
[85.41353607 56.42942810]
[87.28526306 71.31219482]
[89.15698242 86.19495392]
[96.59836578 85.25909424]
[100.91520691 70.89369202]
[105.23205566 56.52828217]
[109.54889679 42.16287994]
[105.25885010 26.33481789]
[117.01162720 14.89785480]
[132.71699524 19.61735725]
[136.21859741 35.63830566]
[123.91429901 46.47972107]
[119.59745789 60.84512711]
[115.28061676 75.21053314]
[110.96377563 89.57593536]
[124.50405121 96.03046417]
[132.94564819 83.63129425]
[141.38723755 71.23212433]
[142.06166077 54.84684753]
[156.71249390 47.47901154]
[170.26821899 56.70800781]
[168.78387451 73.03984070]
[153.78640747 79.67371368]
[145.34481812 92.07289124]
[136.90321350 104.47206116]
[134.51551819 119.28080750]
[138.63226318 133.70483398]
[149.85990906 144.85159302]
[145.91270447 159.21365356]
[150.02944946 173.63768005]
[154.14617920 188.06170654]
[158.26292419 202.48573303]
[162.47981262 216.88079834]
[166.79666138 231.24620056]
[171.11351013 245.61160278]
[183.62557983 250.58035278]
[190.88832092 261.68408203]
[190.43984985 274.74990845]
[182.66752625 285.01922607]
[186.78427124 299.44323730]
[190.90101624 313.86727905]
[198.99467468 326.49630737]
[210.38041687 336.26177979]
[221.76617432 346.02728271]
[233.15193176 355.79275513]
[244.53767395 365.55822754]
[255.92343140 375.32373047]
[267.30917358 385.08920288]
[287.27780151 377.02566528]
[309.83743286 385.71035767]
[321.63650513 409.79330444]
[335.59234619 415.29190063]
[349.54818726 420.79049683]
[363.50402832 426.28909302]
[372.62445068 426.52191162]
[377.61477661 431.96234131]
[391.49282837 437.65441895]
[405.37088013 443.34646606]
[419.80548096 437.49148560]
[433.79870605 443.46173096]
[439.29159546 457.25897217]
[453.16964722 462.95101929]
[467.04769897 468.64306641]
[480.92575073 474.33514404]
[493.02899170 464.87957764]
[508.24069214 462.75836182]
[522.46899414 468.54202271]
[531.88653564 480.67483521]
[533.96008301 495.89309692]
[528.13183594 510.10321045]
[515.96960449 519.48272705]
[500.74490356 521.50854492]
[486.55313110 515.63580322]
[477.21179199 503.44418335]
[475.23370361 488.21319580]
[461.35565186 482.52114868]
[447.47760010 476.82907104]
[433.59951782 471.13702393]
[420.00048828 477.10375977]
[405.84509277 471.52890015]
[399.67883301 457.22451782]
[385.80078125 451.53247070]
[371.92272949 445.84039307]
[358.00543213 440.24493408]
[344.04959106 434.74633789]
[330.09375000 429.24774170]
[316.13790894 423.74914551]
[310.47912598 428.67135620]
[320.32351685 439.98895264]
[330.16787720 451.30654907]
[343.02777100 459.02816772]
[339.65795898 473.64474487]
[324.71545410 474.95663452]
[318.85028076 461.15093994]
[309.00588989 449.83334351]
[299.16152954 438.51571655]
[293.50271606 443.43792725]
[297.01452637 458.02102661]
[300.52633667 472.60415649]
[304.03817749 487.18725586]
[317.64837646 495.22076416]
[321.51074219 510.54583740]
[313.33377075 524.07037354]
[297.96871948 527.77050781]
[284.53140259 519.45098877]
[280.99395752 504.04766846]
[289.45504761 490.69906616]
[285.94323730 476.11596680]
[282.43142700 461.53283691]
[278.91961670 446.94973755]
[263.06570435 438.53073120]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 162]
[3 161]
[4 160]
[5 159]
[6 158]
[7 157]
[8 156]
[11 46]
[12 45]
[13 44]
[14 43]
[15 42]
[17 41]
[18 40]
[19 39]
[24 37]
[25 36]
[26 35]
[51 155]
[52 154]
[53 153]
[56 149]
[57 148]
[58 147]
[60 146]
[61 145]
[62 144]
[63 143]
[65 141]
[66 140]
[78 109]
[79 108]
[80 107]
[81 106]
[83 103]
[84 102]
[85 101]
[86 100]
[87 99]
[88 98]
[118 129]
[119 128]
[120 127]
[121 126]
[130 139]
[131 138]
[132 137]
[165 201]
[166 200]
[167 199]
[168 198]
[170 197]
[171 196]
[172 195]
[175 192]
[176 191]
[177 190]
[178 189]
[211 224]
[212 223]
[213 222]
[214 221]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
