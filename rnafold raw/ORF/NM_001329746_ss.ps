%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 18:38:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGCGGUGACGGGCUGGUUGGAGAGUCUGCGGACAGCCCAGAAGACUGCGCUGCUGCAGGACGGGAGAAGGAAGGUUCACUAUUUAUUCCCAGACGGCAAGGAAAUGGCUGAAGAAUAUGACGAGAAGACGAGUGAACUACUUGAAAGGCCUGAGUGUGGACUGAUGGGCAGACAGGAGGACCUCACUUGA\
) } def
/len { sequence length } bind def

/coor [
[428.37261963 241.02082825]
[413.75256348 221.87120056]
[410.46606445 197.94235229]
[396.07055664 193.72702026]
[381.67504883 189.51167297]
[367.28631592 193.36051941]
[356.21661377 182.05686951]
[341.82110596 177.84153748]
[327.43295288 186.53578186]
[310.88076782 182.05265808]
[302.52416992 166.69253540]
[289.74206543 174.25253296]
[275.01861572 170.42179871]
[267.17565918 156.96350098]
[252.71343994 152.98303223]
[238.25122070 149.00257874]
[223.78900146 145.02210999]
[211.00689697 152.58210754]
[196.28344727 148.75137329]
[188.44049072 135.29307556]
[173.97827148 131.31260681]
[159.51605225 127.33214569]
[152.22164917 128.59025574]
[144.85182190 123.16740417]
[130.45629883 118.95206451]
[116.06079102 114.73672485]
[101.66526794 110.52138519]
[86.70549011 109.42362213]
[71.84883881 111.49241638]
[56.99219131 113.56120300]
[42.13553619 115.62998962]
[27.27888489 117.69878387]
[12.42223358 119.76757050]
[4.33974123 124.05651855]
[-2.69285941 121.74708557]
[-17.58121681 123.57377625]
[-32.46957397 125.40046692]
[-47.35793304 127.22716522]
[-60.11314774 136.58744812]
[-73.68793488 130.45767212]
[-88.57629395 132.28436279]
[-103.46465302 134.11105347]
[-116.22975922 144.40591431]
[-131.42835999 138.24681091]
[-133.42544556 121.96972656]
[-120.16658020 112.31910706]
[-105.29134369 119.22269440]
[-90.40298462 117.39600372]
[-75.51463318 115.56930542]
[-63.82432938 106.33967590]
[-49.18462753 112.33880615]
[-34.29626846 110.51211548]
[-19.40791130 108.68541718]
[-4.51955318 106.85872650]
[10.35344410 104.91091919]
[25.21009636 102.84213257]
[40.06674957 100.77333832]
[54.92340088 98.70455170]
[69.78005219 96.63576508]
[84.63670349 94.56697083]
[87.15080261 87.50090790]
[73.01874542 82.47248840]
[78.04737854 68.34051514]
[92.17900085 73.36876678]
[94.69309235 66.30270386]
[84.48198700 55.31483459]
[69.41988373 50.47296906]
[66.42367554 35.88283539]
[56.21256256 24.89496803]
[46.00144958 13.90710258]
[30.20056915 13.57894039]
[19.32014656 2.11630654]
[19.81534767 -13.68022251]
[31.39237404 -24.43884468]
[47.18278503 -23.77666283]
[57.81840897 -12.08653545]
[56.98931503 3.69599128]
[67.20042419 14.68385792]
[77.41153717 25.67172432]
[91.74327087 29.72766685]
[95.46984863 45.10372543]
[105.68096161 56.09159088]
[110.90401459 64.82332611]
[113.37203217 73.83784485]
[113.17717743 82.46416473]
[110.55699921 90.07695007]
[105.88060760 96.12586975]
[120.27612305 100.34120941]
[134.67164612 104.55654907]
[149.06715393 108.77188110]
[163.49650574 112.86991882]
[177.95874023 116.85038757]
[192.42095947 120.83084869]
[206.04595947 113.28121948]
[220.65600586 117.52399445]
[227.76947021 130.55989075]
[242.23168945 134.54034424]
[256.69390869 138.52081299]
[271.15612793 142.50128174]
[284.78112793 134.95164490]
[299.39117432 139.19442749]
[306.50463867 152.23031616]
[317.37896729 144.26737976]
[330.66027832 144.02973938]
[341.49026489 151.38000488]
[346.03643799 163.44601440]
[360.43197632 167.66134644]
[375.85037231 164.11401367]
[385.89038086 175.11616516]
[400.28588867 179.33149719]
[414.68142700 183.54684448]
[418.31753540 177.26054382]
[422.86810303 171.60681152]
[428.22531128 166.71739197]
[434.26254272 162.70594788]
[440.83740234 159.66540527]
[447.79504395 157.66583252]
[454.97195435 156.75279236]
[462.19949341 156.94631958]
[469.30825806 158.24046326]
[476.13168335 160.60351562]
[482.51016235 163.97872925]
[488.29476929 168.28565979]
[493.35058594 173.42219543]
[497.56005859 179.26684570]
[500.82553101 185.68168640]
[503.07165527 192.51564026]
[504.24710083 199.60792542]
[504.32565308 206.79194641]
[503.30685425 213.89920044]
[501.21600342 220.76312256]
[514.16552734 228.33349609]
[527.11499023 235.90386963]
[540.06451416 243.47424316]
[553.01397705 251.04463196]
[565.96350098 258.61499023]
[578.91296387 266.18536377]
[599.04498291 265.36999512]
[607.91296387 282.54284668]
[621.10198975 289.68771362]
[636.92156982 289.45788574]
[644.42681885 302.32336426]
[657.61584473 309.46823120]
[670.80487061 316.61309814]
[683.99395752 323.75793457]
[695.96057129 316.90036011]
[709.64453125 316.85549927]
[721.46728516 323.52804565]
[728.38995361 335.08001709]
[728.69415283 348.43566895]
[741.76519775 355.79425049]
[754.83618164 363.15286255]
[767.90716553 370.51144409]
[788.02325439 369.36846924]
[797.16961670 386.39471436]
[810.47320557 393.32394409]
[823.77679443 400.25320435]
[840.12805176 399.00137329]
[849.16326904 412.68707275]
[841.58764648 427.23156738]
[825.19445801 427.67276001]
[816.84753418 413.55679321]
[803.54394531 406.62756348]
[790.24035645 399.69830322]
[780.79193115 403.63775635]
[770.52081299 401.67706299]
[762.87286377 394.22775269]
[760.54858398 383.58245850]
[747.47760010 376.22384644]
[734.40661621 368.86526489]
[721.33557129 361.50668335]
[706.64678955 368.82022095]
[690.32867432 365.91363525]
[678.84051514 353.73645020]
[676.84906006 336.94699097]
[663.66003418 329.80212402]
[650.47100830 322.65725708]
[637.28192139 315.51242065]
[622.40576172 316.25326538]
[613.95715332 302.87673950]
[600.76812744 295.73187256]
[591.25683594 299.51702881]
[581.01898193 297.38940430]
[573.49328613 289.81658936]
[571.34259033 279.13485718]
[558.39312744 271.56448364]
[545.44360352 263.99411011]
[532.49414062 256.42373657]
[519.54461670 248.85337830]
[506.59512329 241.28300476]
[493.64562988 233.71263123]
[474.29730225 247.76017761]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 111]
[4 110]
[5 109]
[7 107]
[8 106]
[11 102]
[14 99]
[15 98]
[16 97]
[17 96]
[20 93]
[21 92]
[22 91]
[24 90]
[25 89]
[26 88]
[27 87]
[28 60]
[29 59]
[30 58]
[31 57]
[32 56]
[33 55]
[35 54]
[36 53]
[37 52]
[38 51]
[40 49]
[41 48]
[42 47]
[65 82]
[66 81]
[68 79]
[69 78]
[70 77]
[131 191]
[132 190]
[133 189]
[134 188]
[135 187]
[136 186]
[137 185]
[139 181]
[140 180]
[142 178]
[143 177]
[144 176]
[145 175]
[150 171]
[151 170]
[152 169]
[153 168]
[155 164]
[156 163]
[157 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
