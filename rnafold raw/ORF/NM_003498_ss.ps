%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 01:49:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCUAUUAUGGACCACAGCCCCACCACGGGCGUGGUCACAGUCAUCGUCAUCCUCAUUGCCAUCGCGGCCCUGGGGGCCUUGAUCCUGGGCUGCUGGUGCUACCUGCGGCUGCAGCGCAUCAGCCAGUCAGAGGACGAGGAGAGCAUCGUGGGGGAUGGGGAGACCAAGGAACCCUUCCUGCUGGUGCAGUAUUCGGCCAAGGGACCGUGCGUGGAGAGAAAGGCCAAGCUGAUGACUCCCAACGGCCCGGAA\
GUCCACGGCUGA\
) } def
/len { sequence length } bind def

/coor [
[20.53926468 733.05456543]
[18.08860397 747.85302734]
[15.63794327 762.65142822]
[13.18728352 777.44989014]
[10.73637676 792.24835205]
[-4.06199646 789.79718018]
[-1.61117172 774.99926758]
[0.83948874 760.20080566]
[3.29014921 745.40234375]
[5.74080944 730.60388184]
[8.19147015 715.80541992]
[10.64213085 701.00695801]
[3.24290299 699.78161621]
[-5.34473228 712.08013916]
[-13.93236732 724.37860107]
[-22.52000237 736.67706299]
[-31.10763741 748.97552490]
[-39.69527435 761.27404785]
[-42.02994919 770.06848145]
[-48.45635605 773.66552734]
[-57.18756485 785.86248779]
[-65.91876984 798.05944824]
[-74.64997864 810.25640869]
[-71.82097626 825.80548096]
[-80.88396454 838.75299072]
[-96.46203613 841.41741943]
[-109.31299591 832.21801758]
[-111.81259918 816.61267090]
[-102.47787476 803.85968018]
[-86.84694672 801.52520752]
[-78.11573792 789.32824707]
[-69.38452911 777.13128662]
[-60.65332031 764.93432617]
[-51.99374771 752.68640137]
[-43.40611267 740.38793945]
[-34.81847763 728.08941650]
[-26.23084450 715.79095459]
[-17.64320946 703.49249268]
[-9.05557346 691.19403076]
[-13.86412525 663.73010254]
[-0.54522866 642.02459717]
[21.51747322 635.33557129]
[23.96813202 620.53710938]
[26.41879272 605.73870850]
[28.86945343 590.94024658]
[31.32011414 576.14178467]
[33.77077484 561.34332275]
[36.22143555 546.54486084]
[38.58531570 531.73229980]
[40.86233902 516.90612793]
[28.82979012 505.71621704]
[25.82018471 489.39337158]
[33.21762848 474.34933472]
[48.27824020 466.61425781]
[50.38131332 451.76242065]
[52.48438644 436.91058350]
[41.81018066 423.89431763]
[43.91067505 406.85165405]
[57.96891785 396.41314697]
[59.89775467 381.53765869]
[53.86127472 367.92114258]
[63.30888748 355.23046875]
[65.23772430 340.35498047]
[67.16655731 325.47952271]
[69.09539032 310.60403442]
[70.93700409 295.71752930]
[72.69133759 280.82046509]
[74.44566345 265.92340088]
[76.19999695 251.02635193]
[77.95432281 236.12930298]
[79.62130737 221.22221375]
[81.20089722 206.30561829]
[82.78047943 191.38900757]
[84.36006165 176.47241211]
[78.00603485 163.00112915]
[87.15355682 150.09246826]
[88.73313904 135.17587280]
[68.80111694 119.77153015]
[63.38085175 95.17071533]
[74.99351501 72.81618500]
[67.29140472 59.94461060]
[59.58929443 47.07303238]
[51.88718033 34.20145798]
[44.18506622 21.32988167]
[37.11843872 15.59791756]
[36.46912766 8.26197338]
[28.91842651 -4.69900227]
[21.36772346 -17.65997887]
[13.81702232 -30.62095451]
[-2.38081479 -39.41292191]
[-1.72492230 -56.96432114]
[-9.42703533 -69.83589935]
[-17.12914848 -82.70747375]
[-24.83126068 -95.57904816]
[-32.53337479 -108.45062256]
[-40.31079483 -121.27683258]
[-48.16326141 -134.05723572]
[-56.01572800 -146.83764648]
[-63.86819458 -159.61805725]
[-71.72065735 -172.39846802]
[-79.57312775 -185.17886353]
[-87.42559052 -197.95927429]
[-98.09106445 -199.85931396]
[-105.80451965 -207.15074158]
[-108.19975281 -217.26615906]
[-104.72444153 -226.83032227]
[-112.27514648 -239.79130554]
[-119.82584381 -252.75227356]
[-127.37654877 -265.71325684]
[-141.87152100 -273.38317871]
[-142.20616150 -289.77893066]
[-128.03623962 -298.03393555]
[-113.93853760 -289.65615845]
[-114.41557312 -273.26394653]
[-106.86486816 -260.30297852]
[-99.31417084 -247.34201050]
[-91.76346588 -234.38102722]
[-74.32088470 -225.98997498]
[-74.64517975 -205.81173706]
[-66.79271698 -193.03132629]
[-58.94025421 -180.25093079]
[-51.08778763 -167.47052002]
[-43.23532104 -154.69010925]
[-35.38285446 -141.90971375]
[-27.53038979 -129.12930298]
[-21.37266159 -125.08949280]
[-19.66179848 -116.15274048]
[-11.95968533 -103.28115845]
[-4.25757265 -90.40958405]
[3.44454026 -77.53800964]
[11.14665318 -64.66643524]
[22.77890587 -61.42716599]
[29.30703545 -50.79637146]
[26.77799797 -38.17165756]
[34.32870102 -25.21068001]
[41.87940216 -12.24970436]
[49.43010330 0.71127188]
[57.05664062 13.62776947]
[64.75875854 26.49934578]
[72.46086884 39.37092209]
[80.16297913 52.24249649]
[87.86509705 65.11407471]
[96.20581818 63.25917435]
[104.74958801 63.37042999]
[113.03918457 65.44187927]
[120.63100433 69.36267853]
[131.36120605 58.88113403]
[142.09141541 48.39959335]
[152.82162476 37.91805267]
[163.55181885 27.43651199]
[174.28202820 16.95496941]
[178.21556091 8.75009727]
[185.19998169 6.41437197]
[189.84291077 -8.71023560]
[204.39228821 -11.89847946]
[215.24462891 -22.25352097]
[226.09695435 -32.60856247]
[236.94929504 -42.96360016]
[241.59222412 -58.08820724]
[256.14160156 -61.27645493]
[266.99392700 -71.63149261]
[277.84628296 -81.98653412]
[273.09530640 -96.49140167]
[275.11676025 -111.62006378]
[283.50930786 -124.36871338]
[296.60656738 -132.20610046]
[311.80807495 -133.57611084]
[326.09555054 -128.20671082]
[336.63223267 -117.16401672]
[341.32604980 -102.64055634]
[339.24502563 -87.51997375]
[330.80233765 -74.80446625]
[317.67431641 -67.01871490]
[302.46752930 -65.70858765]
[288.20129395 -71.13420105]
[277.34896851 -60.77915955]
[266.49664307 -50.42412186]
[262.62994385 -36.04017639]
[247.30433655 -32.11127090]
[236.45199585 -21.75622749]
[225.59967041 -11.40118694]
[214.74732971 -1.04614651]
[210.88063049 13.33779907]
[195.55502319 17.26670456]
[184.76356506 27.68517494]
[174.03337097 38.16671753]
[163.30316162 48.64825821]
[152.57295227 59.12979889]
[141.84275818 69.61134338]
[131.11254883 80.09288025]
[134.50169373 86.81223297]
[136.45855713 94.07906342]
[136.90190125 101.59168243]
[135.81332397 109.03823090]
[133.23802185 116.10956573]
[129.28288269 122.51213837]
[124.11212158 127.98016357]
[117.94038391 132.28663635]
[111.02388000 135.25277710]
[103.64973450 136.75544739]
[102.07015228 151.67205811]
[108.31119537 166.21028137]
[99.27666473 178.05200195]
[97.69707489 192.96859741]
[96.11749268 207.88519287]
[94.53791046 222.80180359]
[96.74118805 231.63006592]
[92.85137939 237.88362122]
[91.09705353 252.78068542]
[89.34272003 267.67773438]
[87.58839417 282.57479858]
[85.83406067 297.47186279]
[87.93370056 306.32534790]
[83.97086334 312.53286743]
[82.04203033 327.40835571]
[80.11318970 342.28381348]
[78.18435669 357.15930176]
[84.08287811 371.83981323]
[74.77322388 383.46649170]
[72.84439087 398.34197998]
[82.22664642 407.97680664]
[84.32713318 421.06320190]
[78.60176849 432.80081177]
[67.33621979 439.01364136]
[65.23314667 453.86547852]
[63.13007736 468.71731567]
[73.70817566 477.52386475]
[78.52371216 490.30261230]
[76.42184448 503.68646240]
[68.05565643 514.20471191]
[55.68850708 519.18316650]
[53.41148376 534.00933838]
[55.19853973 542.93115234]
[51.01988983 548.99554443]
[48.56922913 563.79400635]
[46.11856842 578.59240723]
[43.66790771 593.39086914]
[41.21724701 608.18933105]
[38.76658630 622.98779297]
[36.31592560 637.78625488]
[46.66380310 642.60498047]
[55.04452515 651.23040771]
[60.05664825 662.83276367]
[60.65531921 676.07073975]
[56.33565140 689.24542236]
[47.25009155 700.51837158]
[51.41469193 714.92864990]
[55.57929230 729.33892822]
[59.74388885 743.74920654]
[63.90848923 758.15948486]
[77.47548676 770.63366699]
[72.56225586 787.49609375]
[76.89548492 801.85656738]
[89.21215057 812.68395996]
[85.72882080 828.70886230]
[70.02886200 833.44628906]
[58.26303482 822.02276611]
[62.53501892 806.18981934]
[58.20178604 791.82934570]
[47.70959091 785.85302734]
[43.96889114 773.95190430]
[49.49821091 762.32409668]
[45.33361435 747.91381836]
[41.16901398 733.50354004]
[37.00441360 719.09326172]
[32.83981323 704.68298340]
[25.44058609 703.45764160]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 39]
[14 38]
[15 37]
[16 36]
[17 35]
[18 34]
[20 33]
[21 32]
[22 31]
[23 30]
[42 240]
[43 239]
[44 238]
[45 237]
[46 236]
[47 235]
[48 234]
[49 232]
[50 231]
[54 226]
[55 225]
[56 224]
[59 220]
[60 219]
[62 217]
[63 216]
[64 215]
[65 214]
[66 212]
[67 211]
[68 210]
[69 209]
[70 208]
[71 206]
[72 205]
[73 204]
[74 203]
[76 201]
[77 200]
[80 142]
[81 141]
[82 140]
[83 139]
[84 138]
[86 137]
[87 136]
[88 135]
[89 134]
[91 131]
[92 130]
[93 129]
[94 128]
[95 127]
[96 125]
[97 124]
[98 123]
[99 122]
[100 121]
[101 120]
[102 119]
[106 117]
[107 116]
[108 115]
[109 114]
[146 190]
[147 189]
[148 188]
[149 187]
[150 186]
[151 185]
[153 184]
[155 182]
[156 181]
[157 180]
[158 179]
[160 177]
[161 176]
[162 175]
[246 266]
[247 265]
[248 264]
[249 263]
[250 262]
[252 259]
[253 258]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
