%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 17:31:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCUGGGAGGCCUGGGGAAGCUGGCUGCCGAAGGCCUGGCCCACCGCACCGAGAAGGCCACCGAGGGAGCCAUUCAUGCCGUGGAAGAAGUGGUGAAGGAGGUGGUGGGACACGCCAAGGAGACUGGAGAGAAAGCCAUUGCUGAAGCCAUAAAGAAAGCCCAAGAGUCAGGGGACAAAAAGAUGAAGGAAAUCACUGAGACAGUGACCAACACAGUCACAAAUGCCAUCACCCAUGCAGCAGAGAGUCUGGAC\
AAACUUGGACAGUGA\
) } def
/len { sequence length } bind def

/coor [
[48.19850540 462.16378784]
[60.19927597 451.15170288]
[55.74631119 436.82791138]
[51.29334259 422.50411987]
[46.84037399 408.18032837]
[42.38740921 393.85653687]
[31.22063446 383.99993896]
[34.51235199 368.52496338]
[25.49405479 380.51119995]
[10.50384426 381.05303955]
[0.64369237 369.74917603]
[3.21617317 354.97140503]
[16.31606865 347.66436768]
[30.24241447 353.24087524]
[26.62671089 338.68316650]
[23.01100731 324.12545776]
[19.39530373 309.56777954]
[15.69527912 295.03128052]
[11.91106033 280.51644897]
[9.10701656 278.43502808]
[7.15654278 274.90826416]
[6.72089481 270.34503174]
[8.25699425 265.43106079]
[4.97975492 250.79345703]
[1.70251548 236.15583801]
[-1.57472396 221.51821899]
[-14.49933815 217.75360107]
[-24.26323318 208.48622131]
[-28.69666672 195.77548218]
[-43.48525238 193.26594543]
[-53.47914505 202.26348877]
[-66.63681793 203.85072327]
[-78.14112854 197.67170715]
[-83.90926361 186.17303467]
[-98.66776276 183.49223328]
[-113.42626190 180.81143188]
[-128.38705444 185.95780945]
[-139.52661133 176.07044983]
[-154.28511047 173.38966370]
[-169.24591064 178.53602600]
[-180.38546753 168.64868164]
[-195.14396667 165.96788025]
[-209.90246582 163.28707886]
[-224.66096497 160.60629272]
[-239.41946411 157.92549133]
[-254.17796326 155.24468994]
[-268.93646240 152.56388855]
[-283.69497681 149.88310242]
[-300.90310669 156.48403931]
[-313.81872559 144.58067322]
[-328.60729980 142.07113647]
[-335.24395752 151.34303284]
[-344.80868530 157.45568848]
[-355.91003418 159.56500244]
[-366.94970703 157.40600586]
[-376.35256958 151.32553101]
[-382.79153442 142.22705078]
[-385.37475586 131.43670654]
[-400.06713867 128.41447449]
[-414.75952148 125.39225769]
[-429.45190430 122.37003326]
[-444.24047852 119.86049652]
[-459.10739136 117.86669922]
[-473.97427368 115.87289429]
[-488.68045044 121.70721436]
[-500.26632690 112.34685516]
[-515.13323975 110.35305023]
[-529.83941650 116.18737793]
[-541.42529297 106.82701874]
[-552.03582764 118.14938354]
[-567.28137207 121.03958893]
[-581.29968262 114.38627625]
[-588.70043945 100.74778748]
[-586.63793945 85.36840057]
[-575.90515137 74.16179657]
[-560.62921143 71.43715668]
[-546.68389893 78.24214935]
[-539.43151855 91.96011353]
[-525.78869629 85.98318481]
[-513.13946533 95.48615265]
[-498.27252197 97.47995758]
[-484.62976074 91.50302124]
[-471.98046875 101.00598907]
[-457.11358643 102.99979401]
[-442.24667358 104.99359894]
[-450.66421509 92.57808685]
[-447.94305420 77.82698059]
[-435.64965820 69.23205566]
[-420.86102295 71.74116516]
[-412.09048462 83.90988159]
[-414.38702393 98.73303986]
[-426.42965698 107.67765045]
[-411.73727417 110.69987488]
[-397.04489136 113.72209930]
[-382.35250854 116.74432373]
[-369.25265503 103.36456299]
[-350.57980347 100.60375977]
[-333.90411377 109.76559448]
[-326.09777832 127.28255463]
[-311.30917358 129.79208374]
[-301.28924561 123.05551910]
[-288.96749878 125.00036621]
[-281.01416016 135.12458801]
[-266.25567627 137.80538940]
[-251.49717712 140.48619080]
[-236.73867798 143.16699219]
[-221.98016357 145.84777832]
[-207.22166443 148.52857971]
[-192.46316528 151.20938110]
[-177.70466614 153.89018250]
[-163.79949951 148.55206299]
[-151.60432434 158.63116455]
[-136.84582520 161.31195068]
[-122.94064331 155.97384644]
[-110.74546814 166.05293274]
[-95.98696136 168.73373413]
[-81.22846222 171.41453552]
[-67.80496979 161.25613403]
[-50.85674286 164.02102661]
[-40.97571945 178.47737122]
[-26.18713379 180.98689270]
[-8.45103359 165.12451172]
[15.56308842 168.07406616]
[26.56168175 157.87451172]
[37.56027603 147.67495728]
[48.55886841 137.47540283]
[59.55746460 127.27584076]
[53.01731491 116.47967529]
[49.37064743 104.12747192]
[48.98267746 90.99729919]
[52.00892639 77.95111084]
[58.37656403 65.87815094]
[67.78107452 55.63447571]
[79.69888306 47.98265839]
[93.41565704 43.53585815]
[94.80477905 28.60031700]
[96.19389343 13.66477680]
[88.85687256 -1.00151813]
[98.11435699 -14.53780746]
[114.44303131 -13.01911736]
[121.04535675 1.99225354]
[111.12943268 15.05389404]
[109.74031830 29.98943520]
[108.35119629 44.92497253]
[115.18975830 48.00459671]
[116.82126617 33.09358597]
[131.50668335 30.03767204]
[138.95091248 43.06009293]
[128.86688232 54.16383743]
[135.70544434 57.24345779]
[145.96858215 46.30416870]
[156.23171997 35.36487579]
[148.53837585 21.52436447]
[145.50796509 6.00186396]
[147.42599487 -9.67734146]
[154.09233093 -23.97636223]
[164.84199524 -35.49734879]
[178.61149597 -43.11814117]
[194.04402161 -46.10156250]
[209.62312317 -44.16672516]
[223.82177734 -37.51539993]
[233.95741272 -48.57292938]
[244.09304810 -59.63045883]
[240.87004089 -74.80912018]
[247.21510315 -88.96961975]
[260.68844604 -96.66696167]
[276.10925293 -94.94134521]
[287.54797363 -84.45632172]
[290.60610962 -69.24358368]
[284.10781860 -55.15275192]
[270.55178833 -47.60202789]
[255.15057373 -49.49482346]
[245.01493835 -38.43729401]
[234.87930298 -27.37976837]
[242.19358826 -15.16589642]
[245.77740479 -1.37144923]
[245.33215332 12.88988686]
[240.88490295 26.46412659]
[232.78691101 38.25035858]
[221.68592834 47.29003525]
[208.47433472 52.84492493]
[194.21743774 54.45739746]
[180.06759644 51.98811722]
[167.17100525 45.62801361]
[156.90786743 56.56730270]
[146.64474487 67.50659180]
[147.88531494 74.69984436]
[148.10293579 81.69113922]
[147.36750793 88.34281158]
[162.31083679 87.04029083]
[166.53022766 84.09014893]
[171.01158142 83.12550354]
[174.96304321 83.91819000]
[177.79495239 85.96154022]
[192.77455139 85.17939758]
[207.75413513 84.39725494]
[222.73373413 83.61510468]
[237.71333313 82.83296204]
[252.69291687 82.05081940]
[268.19522095 75.18680573]
[279.08245850 88.18312836]
[269.60794067 102.24262238]
[253.47506714 97.03041077]
[238.49546814 97.81255341]
[223.51588440 98.59470367]
[208.53628540 99.37684631]
[193.55668640 100.15898895]
[178.57710266 100.94113922]
[163.61337280 101.98362732]
[148.67002869 103.28615570]
[142.76622009 123.46530914]
[128.91772461 139.28530884]
[109.69718933 147.80726624]
[88.67520142 147.44807434]
[69.75701904 138.27442932]
[58.75842667 148.47398376]
[47.75983047 158.67355347]
[36.76123810 168.87310791]
[25.76264381 179.07266235]
[28.07885361 185.27195740]
[28.94820595 191.80113220]
[28.34054565 198.32862854]
[26.30037308 204.52610779]
[22.94388580 210.08494568]
[18.45246124 214.73156738]
[13.06288815 218.24098206]
[16.34012794 232.87860107]
[19.61736679 247.51620483]
[22.89460754 262.15383911]
[26.42587090 276.73223877]
[30.21008873 291.24703979]
[35.38542557 298.72918701]
[33.95300674 305.95205688]
[37.56871033 320.50976562]
[41.18441391 335.06747437]
[44.80011749 349.62518311]
[48.83614731 364.07199097]
[60.32142639 374.95309448]
[56.71120453 389.40356445]
[61.16416931 403.72735596]
[65.61713409 418.05114746]
[70.07010651 432.37493896]
[74.52307129 446.69873047]
[88.55345917 448.23413086]
[100.90473938 454.97473145]
[109.73242188 465.87637329]
[113.73253632 479.27639771]
[112.33418274 493.14718628]
[105.78074646 505.40286255]
[95.08831024 514.21307373]
[99.37493134 528.58752441]
[103.66155243 542.96197510]
[117.28334045 550.51745605]
[121.42581177 565.15625000]
[114.13890076 578.09594727]
[118.42552185 592.47039795]
[130.70698547 603.33770752]
[127.17169952 619.35125732]
[111.45644379 624.03771973]
[99.72773743 612.57604980]
[104.05107117 596.75701904]
[99.76445007 582.38256836]
[86.58046722 575.54748535]
[82.02845764 561.03082275]
[89.28710175 547.24859619]
[85.00048065 532.87414551]
[80.71385956 518.49969482]
[64.87446594 516.26531982]
[51.55148315 507.30740356]
[43.44686508 493.38131714]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 243]
[3 242]
[4 241]
[5 240]
[6 239]
[8 237]
[14 236]
[15 235]
[16 234]
[17 233]
[18 231]
[19 230]
[23 229]
[24 228]
[25 227]
[26 226]
[29 121]
[30 120]
[34 117]
[35 116]
[36 115]
[38 113]
[39 112]
[41 110]
[42 109]
[43 108]
[44 107]
[45 106]
[46 105]
[47 104]
[48 103]
[50 100]
[51 99]
[58 95]
[59 94]
[60 93]
[61 92]
[62 85]
[63 84]
[64 83]
[66 81]
[67 80]
[69 78]
[123 219]
[124 218]
[125 217]
[126 216]
[127 215]
[135 144]
[136 143]
[137 142]
[150 186]
[151 185]
[152 184]
[161 174]
[162 173]
[163 172]
[189 210]
[190 209]
[194 208]
[195 207]
[196 206]
[197 205]
[198 204]
[199 203]
[250 267]
[251 266]
[252 265]
[255 262]
[256 261]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
