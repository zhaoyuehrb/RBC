%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 19:29:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGAUCCCAACUGCUCCUGCACCACAGGUGGCUCCUGUGCCUGCGCCGGCUCCUGCAAGUGCAAAGAGUGCAAAUGUACCUCCUGCAAGAAGUGCUGCUGCUCUUGCUGCCCCGUGGGCUGUGCCAAGUGUGCCCAGGGCUGUGUCUGCAAAGGCUCAUCAGAGAAGUGCCGCUGCUGUGCCUGA\
) } def
/len { sequence length } bind def

/coor [
[147.70596313 296.23791504]
[140.37074280 297.80136108]
[137.36718750 312.49758911]
[134.36363220 327.19378662]
[137.11595154 343.92285156]
[121.80258942 351.19863892]
[110.57196045 338.49789429]
[119.66741943 324.19024658]
[122.67097473 309.49401855]
[125.67452240 294.79782104]
[120.22674561 277.35195923]
[124.66264343 262.08715820]
[135.11361694 253.46986389]
[129.46078491 239.57579041]
[123.80795288 225.68170166]
[112.56095123 223.62567139]
[103.61660767 216.31269836]
[99.27758789 205.47567749]
[100.73299408 193.77244568]
[107.73519135 184.13407898]
[102.55229950 170.05793762]
[97.36940765 155.98179626]
[92.18652344 141.90565491]
[78.15441895 136.60472107]
[64.95915222 143.73809814]
[51.76389313 150.87147522]
[38.56863403 158.00485229]
[25.37337112 165.13822937]
[12.17811012 172.27160645]
[6.23418474 187.17292786]
[-9.16319847 191.67849731]
[-22.20248604 182.33201599]
[-22.88105202 166.30332947]
[-10.67835903 155.88824463]
[5.04473162 159.07633972]
[18.23999214 151.94296265]
[31.43525505 144.80958557]
[44.63051605 137.67620850]
[57.82577515 130.54283142]
[71.02104187 123.40945435]
[68.08209229 115.65095520]
[67.06486511 107.79191589]
[67.86123657 100.28045654]
[53.24537277 96.90755463]
[38.62950516 93.53465271]
[24.01363945 90.16175079]
[9.39777470 86.78884888]
[-3.89999342 94.90100861]
[-18.67451096 91.27220154]
[-26.32626534 78.54481506]
[-40.94213104 75.17191315]
[-56.45748138 80.48284149]
[-68.63498688 69.49919891]
[-64.94747162 53.52001572]
[-49.18833923 48.98330688]
[-37.56922913 60.55604935]
[-22.95336342 63.92895126]
[-10.49820518 55.84164047]
[4.37240934 59.05403137]
[12.77067566 72.17298126]
[27.38654137 75.54588318]
[42.00240707 78.91878510]
[56.61827469 82.29168701]
[71.23413849 85.66458893]
[67.22708130 81.40794373]
[63.60794449 76.68766785]
[54.46819305 64.79376221]
[46.74100494 59.88262939]
[45.27681351 52.62240601]
[36.33816147 40.57663727]
[27.39950943 28.53087234]
[18.46085739 16.48510361]
[3.20612621 10.46636677]
[1.05909824 -5.79162550]
[14.22845173 -15.56404305]
[29.16668510 -8.79786110]
[30.50662422 7.54645252]
[39.44527817 19.59222031]
[48.38393021 31.63798714]
[57.32257843 43.68375397]
[66.36209869 55.65401077]
[75.50184631 67.54792023]
[82.73252869 65.55611420]
[86.51326752 51.04039383]
[97.19388580 61.57249832]
[104.42456055 59.58069229]
[106.18449402 44.68429565]
[107.94442749 29.78790092]
[109.70436096 14.89150333]
[111.46429443 -0.00489332]
[113.22422791 -14.90128994]
[111.14260864 -19.73358727]
[111.13742828 -24.41031647]
[112.79796600 -28.16223526]
[115.46652985 -30.49683571]
[117.97468567 -45.28565598]
[111.76116180 -60.46208954]
[122.01020050 -73.26401520]
[138.17846680 -70.52190399]
[143.63343811 -55.05661011]
[132.76350403 -42.77749634]
[130.25534058 -27.98867989]
[128.12062073 -13.14135742]
[126.36068726 1.75503945]
[124.60076141 16.65143585]
[122.84082794 31.54783249]
[121.08089447 46.44422913]
[119.32096100 61.34062576]
[122.85004425 70.03995514]
[123.92578125 78.53990173]
[137.12103271 71.40652466]
[150.31629944 64.27314758]
[163.51156616 57.13976669]
[167.31492615 51.69062042]
[172.52137756 49.34770966]
[177.27209473 49.99687576]
[190.69955444 43.31080246]
[204.12699890 36.62472534]
[217.55444336 29.93865204]
[230.98190308 23.25257492]
[230.72891235 7.99155521]
[237.13029480 -5.86431456]
[248.91502380 -15.56394005]
[263.74325562 -19.18145370]
[278.67080688 -15.99859619]
[290.73385620 -6.64732456]
[297.53720093 7.01565790]
[297.73007202 22.27755737]
[291.27420044 36.10810852]
[279.45135498 45.76125336]
[264.60897827 49.32034683]
[249.69407654 46.07872772]
[237.66796875 36.68002701]
[224.24052429 43.36610031]
[210.81307983 50.05217743]
[197.38562012 56.73825073]
[183.95817566 63.42432785]
[170.64494324 70.33502960]
[157.44967651 77.46840668]
[144.25440979 84.60178375]
[131.05915833 91.73516083]
[129.19404602 118.74974823]
[106.26265717 136.72276306]
[111.44554901 150.79890442]
[116.62844086 164.87504578]
[121.81132507 178.95118713]
[139.29188538 186.21264648]
[145.82235718 203.63912964]
[137.70204163 220.02886963]
[143.35487366 233.92295837]
[149.00770569 247.81703186]
[172.90132141 253.26802063]
[181.90589905 282.81256104]
[190.64093018 295.00677490]
[199.37596130 307.20101929]
[208.11099243 319.39523315]
[222.43734741 326.10836792]
[223.55886841 340.96069336]
[232.29389954 353.15490723]
[246.62025452 359.86804199]
[247.74176025 374.72036743]
[256.47680664 386.91458130]
[265.21182251 399.10882568]
[279.53817749 405.82196045]
[280.65969849 420.67425537]
[296.29135132 423.00384521]
[305.63006592 435.75390625]
[303.13537598 451.36004639]
[290.28729248 460.56344604]
[274.70837402 457.90386963]
[265.64132690 444.95922852]
[268.46548462 429.40930176]
[254.76390076 423.56838989]
[253.01759338 407.84384155]
[244.28256226 395.64962769]
[235.54753113 383.45538330]
[221.84596252 377.61447144]
[220.09967041 361.88995361]
[211.36463928 349.69570923]
[197.66307068 343.85479736]
[195.91676331 328.13027954]
[187.18173218 315.93603516]
[178.44670105 303.74182129]
[169.71166992 291.54757690]
[162.37643433 293.11102295]
[165.50308228 307.78155518]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 10]
[3 9]
[4 8]
[13 151]
[14 150]
[15 149]
[20 146]
[21 145]
[22 144]
[23 143]
[24 40]
[25 39]
[26 38]
[27 37]
[28 36]
[29 35]
[43 64]
[44 63]
[45 62]
[46 61]
[47 60]
[50 57]
[51 56]
[66 82]
[67 81]
[69 80]
[70 79]
[71 78]
[72 77]
[86 108]
[87 107]
[88 106]
[89 105]
[90 104]
[91 103]
[95 102]
[96 101]
[110 141]
[111 140]
[112 139]
[113 138]
[116 137]
[117 136]
[118 135]
[119 134]
[120 133]
[153 184]
[154 183]
[155 182]
[156 181]
[158 179]
[159 178]
[161 176]
[162 175]
[163 174]
[165 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
