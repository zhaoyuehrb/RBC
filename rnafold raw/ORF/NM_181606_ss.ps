%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 01:45:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACUCGUUACUUCUGCUGUGGAAGCUACUUCCCAGGAUACCCUAUCUAUGGGACCAACUUCCAUGGGACCUUCAGAGCCACCCCCUUGAACUGUGUUGUGCCUCUGGGCUCUCCCCUGAACUAUGGCUGUGGAUGCAAUGGCUACAGCUCCCUGGGCUACAGCUUUGGUGGUAGCAACAUCAACAACCUGGGCGGCUGCUAUGGUGGUAGCUUCUAUAGGCCAUGGGGCUCUGGCUCUGGCUUUGGCUACAGC\
ACCUACUGA\
) } def
/len { sequence length } bind def

/coor [
[153.35809326 357.75109863]
[142.25263977 367.83419800]
[128.71374512 374.29159546]
[113.88872528 376.57608032]
[99.03392029 374.49407959]
[85.40817261 368.22198486]
[74.16617584 358.29135132]
[66.26062775 345.54373169]
[62.36145020 331.05935669]
[62.79908752 316.06576538]
[67.53644562 301.83349609]
[76.17207336 289.56866455]
[87.97415161 280.31063843]
[101.94252777 274.84396362]
[116.89348602 273.63192749]
[131.56001282 276.77722168]
[144.69923401 284.01333618]
[155.19996643 294.73016357]
[150.64935303 280.43710327]
[146.09873962 266.14401245]
[141.54812622 251.85095215]
[136.99751282 237.55787659]
[132.44689941 223.26480103]
[127.89628601 208.97172546]
[123.34567261 194.67864990]
[118.79505920 180.38558960]
[114.24445343 166.09251404]
[109.69384003 151.79943848]
[105.14322662 137.50636292]
[100.59261322 123.21329498]
[96.04199982 108.92021942]
[93.38438416 111.23788452]
[90.16741943 113.02827454]
[76.13732910 118.33454895]
[62.10724258 123.64083099]
[48.07715607 128.94711304]
[34.07876587 134.33647156]
[20.11256790 139.80870056]
[6.14637089 145.28092957]
[-1.14316535 165.86886597]
[-21.04536057 174.14250183]
[-40.26314163 165.03524780]
[-53.88063049 171.32524109]
[-67.49812317 177.61521912]
[-71.42524719 192.75166321]
[-84.19302368 201.78038025]
[-99.77291107 200.43829346]
[-110.80855560 189.35910034]
[-112.08926392 173.77404785]
[-103.01032257 161.04193115]
[-87.85853577 157.17445374]
[-73.78810883 163.99772644]
[-60.17061996 157.70774841]
[-46.55312729 151.41775513]
[-46.47864151 142.89254761]
[-43.64322662 134.80641174]
[-38.32377625 128.03346252]
[-31.06726646 123.31536865]
[-22.63459015 121.18019104]
[-13.92080975 121.88338470]
[-5.86015415 125.37759399]
[0.67413896 131.31472778]
[14.64033699 125.84249878]
[28.60653496 120.37026978]
[33.67094803 115.02186584]
[42.77087402 114.91702271]
[56.80096436 109.61074829]
[70.83105469 104.30446625]
[84.86113739 98.99818420]
[94.24324799 87.29450989]
[96.36997223 72.44603729]
[98.49668884 57.59756851]
[85.90131378 49.04667282]
[78.29856873 35.92854309]
[77.15007019 20.87194633]
[82.63021851 6.86733961]
[93.60216522 -3.32705927]
[107.85323334 -7.72848320]
[109.97995758 -22.57695389]
[112.10667419 -37.42542267]
[114.23339844 -52.27389145]
[108.53086853 -67.03166199]
[117.99449921 -78.53335571]
[120.12121582 -93.38182831]
[122.24794006 -108.23029327]
[111.50006104 -122.05258179]
[114.04077148 -139.03453064]
[127.81023407 -148.71656799]
[129.76078796 -163.58920288]
[131.71133423 -178.46183777]
[121.04286957 -187.15998840]
[116.09663391 -199.88961792]
[118.06202698 -213.29498291]
[126.32131958 -223.89837646]
[138.63807678 -229.00233459]
[140.76480103 -243.85079956]
[142.89152527 -258.69927979]
[145.01824951 -273.54776001]
[147.14497375 -288.39620972]
[149.27168274 -303.24468994]
[151.31036377 -318.10549927]
[153.26091003 -332.97814941]
[155.21145630 -347.85076904]
[157.16200256 -362.72341919]
[154.68385315 -377.51730347]
[147.99308777 -390.94241333]
[134.91256714 -399.84243774]
[136.16050720 -414.68469238]
[129.46975708 -428.10980225]
[122.77899933 -441.53491211]
[108.08352661 -447.97094727]
[104.09233856 -463.50961304]
[113.86713409 -476.23095703]
[129.90953064 -476.37628174]
[139.91316223 -463.83407593]
[136.20411682 -448.22567749]
[142.89486694 -434.80056763]
[149.58563232 -421.37542725]
[162.18757629 -413.43566895]
[161.41821289 -397.63317871]
[168.10896301 -384.20803833]
[183.07708740 -385.18539429]
[187.96528625 -399.36657715]
[192.85346985 -413.54772949]
[197.74166870 -427.72891235]
[194.92393494 -443.29718018]
[206.38641357 -452.80825806]
[211.27461243 -466.98941040]
[216.16281128 -481.17059326]
[221.05099487 -495.35177612]
[225.93919373 -509.53292847]
[230.82737732 -523.71411133]
[235.71557617 -537.89526367]
[240.60375977 -552.07641602]
[240.43890381 -561.17547607]
[245.63487244 -566.39617920]
[243.00189209 -581.99676514]
[254.57632446 -591.37127686]
[259.63229370 -605.49346924]
[251.86882019 -621.18743896]
[257.75747681 -637.31713867]
[273.18634033 -644.04687500]
[278.07452393 -658.22808838]
[282.96270752 -672.40924072]
[279.30944824 -688.39630127]
[291.51043701 -699.35382080]
[307.01437378 -694.00964355]
[309.87213135 -677.86145020]
[297.14389038 -667.52105713]
[292.25570679 -653.33984375]
[287.36749268 -639.15869141]
[294.57031250 -628.49786377]
[294.32431030 -615.43981934]
[286.49554443 -604.74401855]
[273.75451660 -600.43750000]
[268.69854736 -586.31530762]
[271.69317627 -571.72485352]
[259.75711060 -561.34020996]
[254.78494263 -547.18823242]
[249.89674377 -533.00708008]
[245.00854492 -518.82592773]
[240.12036133 -504.64474487]
[235.23216248 -490.46356201]
[230.34397888 -476.28240967]
[225.45578003 -462.10122681]
[220.56758118 -447.92007446]
[223.73497009 -433.36611938]
[211.92283630 -422.84072876]
[207.03465271 -408.65954590]
[202.14645386 -394.47836304]
[197.25825500 -380.29721069]
[172.03463745 -360.77285767]
[170.08409119 -345.90023804]
[168.13354492 -331.02758789]
[166.18299866 -316.15496826]
[168.42172241 -309.13769531]
[164.12016296 -301.11795044]
[161.99343872 -286.26950073]
[159.86671448 -271.42102051]
[157.73999023 -256.57254028]
[155.61326599 -241.72409058]
[153.48655701 -226.87561035]
[165.63156128 -215.80885315]
[168.80705261 -199.51814270]
[161.56393433 -184.39993286]
[146.58396912 -176.51129150]
[144.63342285 -161.63865662]
[142.68287659 -146.76602173]
[151.87391663 -137.76278687]
[154.24678040 -124.91976929]
[148.71751404 -112.87335968]
[137.09640503 -106.10357666]
[134.96968079 -91.25510406]
[132.84297180 -76.40663147]
[138.69761658 -62.71092987]
[129.08186340 -50.14717102]
[126.95514679 -35.29870224]
[124.82842255 -20.45023155]
[122.70170593 -5.60176182]
[135.14434814 2.62295842]
[142.81362915 15.48730946]
[144.14237976 30.46714401]
[138.81370544 44.59602737]
[127.83438110 55.05267334]
[113.34516144 59.72428894]
[111.21843719 74.57276154]
[109.09172058 89.42122650]
[110.33507538 104.36960602]
[114.88568115 118.66268158]
[119.43629456 132.95574951]
[123.98690796 147.24882507]
[128.53752136 161.54190063]
[133.08813477 175.83497620]
[137.63874817 190.12803650]
[142.18936157 204.42111206]
[146.73997498 218.71418762]
[151.29058838 233.00726318]
[155.84120178 247.30033875]
[160.39181519 261.59341431]
[164.94242859 275.88647461]
[169.49304199 290.17956543]
[175.90277100 295.02200317]
[178.49090576 301.76379395]
[177.24089050 308.05471802]
[184.56051636 321.14758301]
[191.95761108 334.19683838]
[199.43193054 347.20202637]
[206.90625000 360.20718384]
[214.38056946 373.21237183]
[221.93183899 386.17300415]
[229.55981445 399.08865356]
[237.18777466 412.00430298]
[250.86775208 419.95220947]
[250.67781067 434.84561157]
[258.30578613 447.76126099]
[265.93374634 460.67691040]
[273.56170654 473.59255981]
[281.18966675 486.50820923]
[296.64920044 487.84353638]
[308.34921265 498.03613281]
[311.79089355 513.16668701]
[305.65078735 527.41729736]
[292.28988647 535.30822754]
[276.84576416 533.80523682]
[265.25698853 523.48632812]
[261.97967529 508.31930542]
[268.27401733 494.13616943]
[260.64605713 481.22052002]
[253.01809692 468.30487061]
[245.39012146 455.38922119]
[237.76216125 442.47357178]
[224.62779236 435.44949341]
[224.27212524 419.63229370]
[216.64416504 406.71661377]
[209.01618958 393.80096436]
[202.92906189 389.65359497]
[201.37539673 380.68667603]
[193.90107727 367.68151855]
[186.42675781 354.67633057]
[178.95243835 341.67117310]
[172.91491699 337.45193481]
[171.46765137 328.46722412]
[164.14802551 315.37432861]
[164.79019165 330.36059570]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 221]
[19 220]
[20 219]
[21 218]
[22 217]
[23 216]
[24 215]
[25 214]
[26 213]
[27 212]
[28 211]
[29 210]
[30 209]
[31 208]
[33 69]
[34 68]
[35 67]
[36 66]
[37 64]
[38 63]
[39 62]
[42 54]
[43 53]
[44 52]
[70 207]
[71 206]
[72 205]
[78 199]
[79 198]
[80 197]
[81 196]
[83 194]
[84 193]
[85 192]
[88 188]
[89 187]
[90 186]
[95 182]
[96 181]
[97 180]
[98 179]
[99 178]
[100 177]
[101 175]
[102 174]
[103 173]
[104 172]
[105 121]
[106 120]
[108 118]
[109 117]
[110 116]
[122 171]
[123 170]
[124 169]
[125 168]
[127 166]
[128 165]
[129 164]
[130 163]
[131 162]
[132 161]
[133 160]
[134 159]
[136 158]
[138 156]
[139 155]
[142 151]
[143 150]
[144 149]
[224 263]
[225 262]
[226 260]
[227 259]
[228 258]
[229 257]
[230 255]
[231 254]
[232 253]
[234 251]
[235 250]
[236 249]
[237 248]
[238 247]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
