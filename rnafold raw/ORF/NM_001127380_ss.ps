%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 17:08:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAAGCUUCUCACGGGCCUGGUUUUCUGCUCCUUGGUCCUGAGUGUCAGCAGCCGAAGCUUCUUUUCGUUCCUUGGCGAGGCUUUUGAUGGGGCUCGGGACAUGUGGAGAGCCUACUCUGACAUGAGAGAAGCCAAUUACAUCGGCUCAGACAAAUACUUCCAUGCUCGGGGGAACUAUGAUGCUGCCAAAAGGGGACCUGGGGGUGCCUGGGCUGCAGAAGUGAUCAGUUUAUUUUCAGCUGAACUGUAG\
) } def
/len { sequence length } bind def

/coor [
[211.70022583 710.12402344]
[209.96945190 701.18127441]
[210.74209595 692.08190918]
[213.97241211 683.51525879]
[219.42799377 676.13366699]
[226.70649719 670.50299072]
[222.48049927 656.11059570]
[218.25451660 641.71820068]
[214.02853394 627.32580566]
[209.80253601 612.93341064]
[205.57655334 598.54101562]
[195.12577820 592.48309326]
[191.47686768 580.54840088]
[197.10208130 568.96112061]
[193.05513000 554.51739502]
[189.00817871 540.07360840]
[178.12402344 529.90582275]
[181.85116577 514.52990723]
[177.80421448 500.08612061]
[166.92004395 489.91830444]
[170.64718628 474.54238892]
[166.60023499 460.09863281]
[162.55328369 445.65487671]
[153.15969849 457.34933472]
[138.15988159 457.42437744]
[128.64976501 445.82446289]
[131.66432190 431.13052368]
[144.97357178 424.21215820]
[158.73332214 430.18847656]
[155.59036255 415.52142334]
[152.44740295 400.85440063]
[149.30442810 386.18737793]
[146.16146851 371.52035522]
[143.01850891 356.85330200]
[132.78620911 346.02975464]
[137.46018982 330.91473389]
[134.31723022 316.24768066]
[131.17427063 301.58065796]
[128.03129578 286.91363525]
[124.88833618 272.24661255]
[121.74537659 257.57955933]
[106.52318573 251.40158081]
[97.90491486 237.22053528]
[99.46276093 220.53224182]
[110.77927399 207.94384766]
[107.45442963 193.31697083]
[97.08852386 182.62130737]
[101.57446289 167.44940186]
[98.24961853 152.82252502]
[94.92477417 138.19564819]
[91.59993744 123.56877899]
[72.43605042 92.24256897]
[63.26158905 80.37541962]
[54.08712769 68.50827026]
[44.91266632 56.64112091]
[35.73820496 44.77396774]
[26.56374359 32.90681839]
[3.21580148 25.85375977]
[0.78550988 2.30680490]
[-9.38452721 -8.71908951]
[-19.55456543 -19.74498367]
[-29.72460175 -30.77087784]
[-39.89463806 -41.79677200]
[-50.06467819 -52.82266617]
[-60.23471451 -63.84856033]
[-70.40475464 -74.87445068]
[-78.50017548 -79.04554749]
[-80.63156891 -86.10096741]
[-90.66390991 -97.25229645]
[-100.69625854 -108.40362549]
[-111.53907013 -108.34610748]
[-120.44820404 -114.13323975]
[-124.62714386 -123.66162109]
[-122.92279816 -133.70329285]
[-132.67514038 -145.10031128]
[-142.42747498 -156.49731445]
[-152.17980957 -167.89433289]
[-167.03088379 -173.34925842]
[-169.42678833 -188.04991150]
[-179.24971008 -199.38615417]
[-189.14280701 -210.66119385]
[-199.03591919 -221.93621826]
[-208.92901611 -233.21125793]
[-218.82211304 -244.48629761]
[-228.71522522 -255.76133728]
[-238.60832214 -267.03637695]
[-248.50143433 -278.31140137]
[-263.41909790 -283.58151245]
[-265.99734497 -298.25128174]
[-275.89044189 -309.52630615]
[-291.42230225 -310.70935059]
[-301.29470825 -322.28475952]
[-300.07113647 -337.08471680]
[-315.50982666 -335.52685547]
[-328.89868164 -343.37017822]
[-335.08944702 -357.59881592]
[-331.70162964 -372.74154663]
[-320.03790283 -382.97567749]
[-304.58325195 -384.36599731]
[-291.28024292 -376.37786865]
[-285.24420166 -362.08291626]
[-288.79611206 -346.97781372]
[-273.96270752 -346.26681519]
[-263.76907349 -334.97323608]
[-264.61541748 -319.41943359]
[-254.72232056 -308.14437866]
[-240.51226807 -303.68075562]
[-237.22639465 -288.20452881]
[-227.33329773 -276.92947388]
[-217.44018555 -265.65444946]
[-207.54708862 -254.37940979]
[-197.65397644 -243.10437012]
[-187.76087952 -231.82933044]
[-177.86776733 -220.55429077]
[-167.97467041 -209.27925110]
[-161.21913147 -206.33230591]
[-158.02978516 -197.80224609]
[-143.87626648 -193.16250610]
[-140.78280640 -177.64666748]
[-131.03047180 -166.24966431]
[-121.27812958 -154.85264587]
[-111.52578735 -143.45562744]
[-92.86333466 -138.33714294]
[-89.54492950 -118.43596649]
[-79.51258850 -107.28463745]
[-69.48023987 -96.13331604]
[-59.37885666 -85.04449463]
[-49.20882034 -74.01860046]
[-39.03878403 -62.99270248]
[-28.86874580 -51.96680832]
[-18.69870758 -40.94091415]
[-8.52867031 -29.91501999]
[1.64136660 -18.88912582]
[11.81140423 -7.86323261]
[17.50409889 -9.40622139]
[23.44169617 -9.31322479]
[29.16023254 -7.56925869]
[34.20671082 -4.28921413]
[38.17498779 0.28946078]
[40.73841476 5.82384300]
[41.67666245 11.89117622]
[40.89448929 18.02115059]
[38.43089294 23.73235703]
[47.60535431 35.59950638]
[56.77981567 47.46665955]
[65.95427704 59.33380890]
[75.12873840 71.20095825]
[84.30319977 83.06810760]
[81.94126892 68.25523376]
[74.83184052 55.04705429]
[75.79537201 40.07803345]
[84.53948975 27.89031792]
[98.41091156 22.18210983]
[113.20053864 24.68548775]
[124.42065430 34.64083481]
[128.66667175 49.02733231]
[124.65019226 63.47959137]
[113.59200287 73.61125183]
[106.48780060 86.82224274]
[119.05600739 78.63444519]
[131.62422180 70.44664001]
[144.19242859 62.25883865]
[156.76063538 54.07103729]
[159.77850342 38.55755615]
[172.92864990 29.79120827]
[188.40936279 32.97291565]
[197.03619385 46.21502304]
[193.69099426 61.66122437]
[180.35841370 70.14756775]
[164.94844055 66.63924408]
[152.38023376 74.82704926]
[139.81202698 83.01484680]
[127.24381256 91.20265198]
[114.67559814 99.39044952]
[127.85690308 92.23132324]
[142.83988953 92.94554138]
[155.28044128 101.32603455]
[161.57157898 114.94299316]
[159.88928223 129.84835815]
[150.72129822 141.72052002]
[136.72576904 147.11729431]
[121.96051025 144.47395325]
[110.70652008 134.55693054]
[106.22680664 120.24394226]
[109.55165100 134.87081909]
[112.87649536 149.49768066]
[116.20133209 164.12455750]
[126.80506134 175.86642456]
[122.08130646 189.99212646]
[125.40615082 204.61900330]
[138.43106079 209.08233643]
[147.48316956 219.31278992]
[150.28259277 232.57261658]
[146.20399475 245.38298035]
[136.41239929 254.43661499]
[139.55537415 269.10363770]
[142.69833374 283.77066040]
[145.84129333 298.43771362]
[148.98425293 313.10473633]
[152.12722778 327.77175903]
[162.58433533 339.64440918]
[157.68554688 353.71035767]
[160.82850647 368.37738037]
[163.97146606 383.04440308]
[167.11442566 397.71145630]
[170.25738525 412.37847900]
[173.40036011 427.04550171]
[176.99703979 441.60791016]
[181.04399109 456.05166626]
[185.09094238 470.49542236]
[196.26457214 481.69635010]
[192.24797058 496.03915405]
[196.29492188 510.48294067]
[207.46853638 521.68383789]
[203.45193481 536.02667236]
[207.49888611 550.47039795]
[211.54583740 564.91418457]
[225.01034546 577.49383545]
[219.96894836 594.31500244]
[224.19493103 608.70739746]
[228.42092896 623.09979248]
[232.64691162 637.49218750]
[236.87289429 651.88458252]
[241.09889221 666.27697754]
[261.69625854 672.10546875]
[274.44244385 689.13317871]
[274.23358154 710.26586914]
[261.32086182 726.82348633]
[266.60641479 740.86145020]
[271.89199829 754.89935303]
[277.17755127 768.93725586]
[282.46313477 782.97515869]
[287.74868774 797.01306152]
[293.03427124 811.05096436]
[308.03164673 815.03314209]
[317.79800415 827.09124756]
[318.57791138 842.58874512]
[310.07153320 855.56640625]
[295.54971313 861.03417969]
[280.59640503 856.88952637]
[270.96145630 844.72619629]
[270.34970093 829.22119141]
[278.99636841 816.33648682]
[273.71078491 802.29858398]
[268.42523193 788.26068115]
[263.13964844 774.22277832]
[257.85409546 760.18487549]
[252.56852722 746.14697266]
[247.28295898 732.10906982]
[238.29113770 732.10729980]
[229.61734009 729.64978027]
[221.92105103 724.91027832]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 224]
[7 223]
[8 222]
[9 221]
[10 220]
[11 219]
[14 217]
[15 216]
[16 215]
[18 213]
[19 212]
[21 210]
[22 209]
[23 208]
[29 207]
[30 206]
[31 205]
[32 204]
[33 203]
[34 202]
[36 200]
[37 199]
[38 198]
[39 197]
[40 196]
[41 195]
[45 190]
[46 189]
[48 187]
[49 186]
[50 185]
[51 184]
[52 148]
[53 147]
[54 146]
[55 145]
[56 144]
[57 143]
[59 134]
[60 133]
[61 132]
[62 131]
[63 130]
[64 129]
[65 128]
[66 127]
[68 126]
[69 125]
[70 124]
[74 122]
[75 121]
[76 120]
[77 119]
[79 117]
[80 115]
[81 114]
[82 113]
[83 112]
[84 111]
[85 110]
[86 109]
[87 108]
[89 106]
[90 105]
[93 102]
[159 174]
[160 173]
[161 172]
[162 171]
[163 170]
[228 249]
[229 248]
[230 247]
[231 246]
[232 245]
[233 244]
[234 243]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
