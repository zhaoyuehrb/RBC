%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 17:34:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACAAGAGUGGCCCUGCAGGCUGAGAAACUGGACCACCAUCCUGAAUGGUUUAACGUGUACAACAAGGUCCACAUCACGCUGAGCACCCAUGAGUGUGCCGGCCUUUCAGAACGGGACAUAAACCUGGCCAGCUUCAUCGAACAAGUAGCAGUGUCCAUGACAUAG\
) } def
/len { sequence length } bind def

/coor [
[107.10519409 543.94885254]
[91.86580658 543.09814453]
[78.50887299 535.71197510]
[69.68641663 523.25695801]
[67.15015411 508.20605469]
[71.40365601 493.54760742]
[81.60238647 482.19204712]
[95.72137451 476.39404297]
[86.96719360 461.20434570]
[97.12403870 445.86706543]
[97.68158722 430.87744141]
[98.23914337 415.88781738]
[98.79669189 400.89816284]
[99.21489716 385.90399170]
[91.71550751 373.03509521]
[99.70799255 359.38113403]
[99.98681641 344.38372803]
[100.26564026 329.38632202]
[100.54446411 314.38891602]
[92.36817169 305.43972778]
[92.50215149 292.91723633]
[101.42126465 283.56338501]
[101.97881317 268.57373047]
[102.53636169 253.58410645]
[102.39694977 238.58474731]
[101.56085968 223.60807800]
[100.58560944 208.63980103]
[99.47128296 193.68125916]
[98.35694885 178.72270203]
[89.69553375 166.60539246]
[96.38626099 152.26855469]
[95.27192688 137.31001282]
[94.15760040 122.35145569]
[93.04326630 107.39290619]
[89.33850861 100.19455719]
[92.04988861 92.14640045]
[91.21380615 77.16971588]
[90.37771606 62.19303894]
[82.25887299 74.80590057]
[69.26559448 82.30088806]
[54.28255844 83.01401520]
[40.63617325 76.78696442]
[31.35610580 65.00221252]
[28.50264359 50.27612305]
[32.70928955 35.87806320]
[43.04212189 25.00458145]
[57.20711899 20.06971931]
[72.05947876 22.16907883]
[84.30180359 30.83657646]
[91.21681213 44.15064621]
[93.43931580 29.31620979]
[95.66181946 14.48177338]
[97.88432312 -0.35266215]
[100.10682678 -15.18709755]
[102.32933044 -30.02153397]
[94.08267212 -48.38690948]
[106.67980194 -63.02561569]
[100.52660370 -77.60123444]
[109.63243103 -89.38822937]
[111.30200195 -104.29502106]
[112.97157288 -119.20182037]
[106.81837463 -133.77743530]
[115.92420197 -145.56442261]
[104.63581085 -156.04672241]
[101.71833801 -170.99134827]
[108.08492279 -184.62698364]
[121.10408020 -191.81304932]
[122.77365112 -206.71984863]
[124.44322205 -221.62663269]
[126.11279297 -236.53343201]
[127.78236389 -251.44023132]
[129.45193481 -266.34701538]
[120.87158966 -272.80538940]
[115.80405426 -282.18194580]
[115.11296082 -292.73666382]
[118.85682678 -302.54263306]
[126.29063416 -309.83773804]
[136.01300049 -313.34133911]
[138.51086426 -328.13189697]
[141.00872803 -342.92245483]
[143.50659180 -357.71304321]
[146.00445557 -372.50360107]
[148.50231934 -387.29415894]
[143.17112732 -402.19009399]
[152.91978455 -413.45120239]
[142.64472961 -425.23919678]
[142.40245056 -440.87490845]
[152.30735779 -452.97561646]
[167.68264771 -455.82772827]
[181.26856995 -448.08456421]
[186.65029907 -433.40222168]
[181.28671265 -418.71325684]
[167.71035767 -410.95333862]
[173.22021484 -397.11532593]
[163.29289246 -384.79629517]
[160.79501343 -370.00573730]
[158.29714966 -355.21514893]
[155.79928589 -340.42459106]
[153.30142212 -325.63403320]
[150.80355835 -310.84347534]
[163.24012756 -295.89309692]
[160.69630432 -276.30712891]
[144.35873413 -264.67745972]
[142.68916321 -249.77066040]
[141.01959229 -234.86386108]
[139.35002136 -219.95706177]
[137.68045044 -205.05027771]
[136.01087952 -190.14347839]
[147.11770630 -180.25527954]
[150.30998230 -165.54904175]
[144.15864563 -151.62013245]
[130.83099365 -143.89485168]
[137.10362244 -130.38546753]
[127.87837219 -117.53224945]
[126.20880127 -102.62545013]
[124.53923035 -87.71865845]
[130.81184387 -74.20926666]
[121.58659363 -61.35604477]
[128.68443298 -53.93681717]
[130.54440308 -43.61535645]
[126.30910492 -33.78077316]
[117.16376495 -27.79903030]
[114.94126129 -12.96459484]
[112.71875763 1.86984122]
[110.49625397 16.70427704]
[108.27375031 31.53871155]
[106.05124664 46.37314606]
[105.35440063 61.35695267]
[106.19048309 76.33363342]
[107.02656555 91.31031036]
[108.00181580 106.27857971]
[109.11614990 121.23712921]
[110.23048401 136.19567871]
[111.34481049 151.15423584]
[120.08592987 164.34147644]
[113.31549835 177.60836792]
[114.42983246 192.56692505]
[115.54416656 207.52548218]
[119.31558990 215.89041138]
[116.53754425 222.77198792]
[117.37362671 237.74867249]
[129.30848694 228.66244507]
[143.89906311 232.14309692]
[150.44697571 245.63845825]
[144.15103149 259.25320435]
[129.62767029 263.00445557]
[117.52600098 254.14164734]
[116.96844482 269.13128662]
[116.41089630 284.12091064]
[125.40029144 300.17034912]
[115.54187775 314.66775513]
[115.26305389 329.66516113]
[114.98423004 344.66256714]
[114.70540619 359.65997314]
[122.18484497 373.60156250]
[114.21230316 386.18283081]
[117.19107819 394.86169434]
[113.78632355 401.45571899]
[113.22877502 416.44534302]
[112.67122650 431.43499756]
[112.11367035 446.42462158]
[120.31325531 456.41522217]
[119.51658630 468.91308594]
[110.69805908 477.23013306]
[124.08397675 484.56359863]
[132.95541382 496.98376465]
[135.55091858 512.02459717]
[131.35517883 526.69970703]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 164]
[10 161]
[11 160]
[12 159]
[13 158]
[14 156]
[16 154]
[17 153]
[18 152]
[19 151]
[22 149]
[23 148]
[24 147]
[25 141]
[26 140]
[27 138]
[28 137]
[29 136]
[31 134]
[32 133]
[33 132]
[34 131]
[36 130]
[37 129]
[38 128]
[50 127]
[51 126]
[52 125]
[53 124]
[54 123]
[55 122]
[57 118]
[59 116]
[60 115]
[61 114]
[63 112]
[67 108]
[68 107]
[69 106]
[70 105]
[71 104]
[72 103]
[78 100]
[79 99]
[80 98]
[81 97]
[82 96]
[83 95]
[85 93]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
