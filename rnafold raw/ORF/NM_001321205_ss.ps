%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 19:17:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAUGUGGCAAAAGUAUGCAGGAAGCAGGCGGUCAAUGCCUCUGGGAGCAAGGAUCCUUUUCCACGGUGUGUUCUAUGCCGGGGGCUUUGCCAUUGUGUAUUACCUCAUUCAAAGUAAGUAUCCUGCUAGCCGCCUGCGGCCUGACCUCCUCCUAGCCUGCUCCUGCUCCUCCAUCAGAGGAAAUACUUGA\
) } def
/len { sequence length } bind def

/coor [
[191.63473511 811.28869629]
[185.18263245 825.02673340]
[174.20077515 835.50354004]
[160.17434692 841.30212402]
[145.00030518 841.63830566]
[130.73081970 836.46661377]
[119.29573059 826.48651123]
[112.24153137 813.04766846]
[110.52223969 797.96759033]
[114.37038422 783.28576660]
[123.26552582 770.98773193]
[136.00468445 762.73675537]
[150.86497498 759.64874268]
[153.29586792 744.84698486]
[155.72674561 730.04528809]
[158.15762329 715.24359131]
[160.58851624 700.44183350]
[163.01939392 685.64013672]
[200.28540039 661.61456299]
[198.82273865 646.68603516]
[197.36007690 631.75750732]
[195.89741516 616.82897949]
[194.43475342 601.90045166]
[192.97209167 586.97198486]
[189.18519592 580.61187744]
[191.60914612 571.78881836]
[190.38966370 556.83850098]
[189.17018127 541.88818359]
[187.95071411 526.93780518]
[186.73123169 511.98745728]
[185.51174927 497.03710938]
[183.32211304 482.19778442]
[180.17160034 467.53237915]
[177.02108765 452.86697388]
[173.87057495 438.20156860]
[170.72006226 423.53616333]
[160.72804260 416.70123291]
[157.99000549 404.49755859]
[164.50837708 393.35620117]
[161.59700012 378.64144897]
[158.68560791 363.92669678]
[148.62518311 352.94320679]
[153.53683472 337.90371704]
[150.26707458 323.26443481]
[146.64086914 308.70935059]
[143.01467896 294.15426636]
[130.16362000 282.21313477]
[135.36926270 264.55740356]
[131.50663757 250.06324768]
[127.64401245 235.56910706]
[123.78138733 221.07496643]
[119.01383972 215.41268921]
[119.97589874 206.31344604]
[116.34970093 191.75834656]
[112.72350311 177.20326233]
[109.09730530 162.64816284]
[98.51272583 152.16885376]
[102.68439484 136.90754700]
[99.05819702 122.35244751]
[95.43199921 107.79735565]
[82.93057251 110.26615906]
[69.22653198 101.29616547]
[59.01542282 90.30830383]
[48.80430984 79.32043457]
[40.65696716 75.15599823]
[38.51821518 68.06962585]
[28.48730659 56.91700745]
[18.45639801 45.76438904]
[8.42548752 34.61177444]
[-1.60542130 23.45915794]
[-11.63633060 12.30654049]
[-21.66724014 1.15392399]
[-36.75479889 -6.57924175]
[-33.50050354 -23.21792793]
[-16.61118317 -24.69685555]
[-10.51462364 -8.87698555]
[-0.48371395 2.27563143]
[9.54719543 13.42824841]
[19.57810402 24.58086395]
[29.60901451 35.73348236]
[39.63992310 46.88609695]
[49.67083359 58.03871536]
[59.79217911 69.10932159]
[70.00328827 80.09719086]
[80.21440125 91.08505249]
[94.57513428 86.75269318]
[97.00601959 71.95098114]
[99.43690491 57.14926529]
[101.86778259 42.34754562]
[104.29866791 27.54583168]
[106.72955322 12.74411488]
[98.03739929 4.60695744]
[94.39657593 -6.60326004]
[96.60345459 -18.05929375]
[103.99468994 -26.93036270]
[114.64069366 -31.08160973]
[117.55207825 -45.79636002]
[112.64042664 -60.83584976]
[122.70085144 -71.81933594]
[113.69995117 -84.81007385]
[116.60335541 -100.34538269]
[129.68853760 -109.20843506]
[145.19227600 -106.14094543]
[153.91648865 -92.96279144]
[150.68525696 -77.49234772]
[137.41560364 -68.90795135]
[142.53549194 -54.92095947]
[132.26683044 -42.88497162]
[129.35543823 -28.17022324]
[140.43994141 -13.61519814]
[137.32727051 4.73692560]
[121.53127289 15.17499924]
[119.10038757 29.97671509]
[116.66950226 44.77843094]
[114.23861694 59.58014679]
[111.80773163 74.38186646]
[109.37684631 89.18357849]
[109.98709106 104.17115784]
[113.61328888 118.72624969]
[117.23948669 133.28134155]
[128.08343506 144.80172729]
[123.65239716 159.02197266]
[127.27859497 173.57705688]
[130.90478516 188.13215637]
[134.53099060 202.68724060]
[138.27552795 217.21234131]
[142.13815308 231.70648193]
[146.00077820 246.20062256]
[149.86340332 260.69476318]
[160.62034607 267.82968140]
[163.53335571 279.99276733]
[157.56976318 290.52807617]
[161.19596863 305.08316040]
[164.82215881 319.63824463]
[168.47094727 323.41323853]
[170.13047791 327.77560425]
[169.91154480 331.86538696]
[168.25158691 334.99234009]
[178.52024841 347.02832031]
[173.40036011 361.01531982]
[176.31175232 375.73007202]
[179.22312927 390.44482422]
[191.66870117 404.00695801]
[185.38548279 420.38565063]
[188.53599548 435.05105591]
[191.68650818 449.71646118]
[194.83700562 464.38186646]
[197.98751831 479.04727173]
[205.38069153 465.99578857]
[218.98068237 459.66809082]
[233.72627258 462.41897583]
[244.12988281 473.22476196]
[246.31980896 488.06405640]
[239.48106384 501.41439819]
[226.15869141 508.30743408]
[211.31060791 506.17797852]
[200.46209717 495.81762695]
[201.68157959 510.76797485]
[202.90104675 525.71832275]
[204.12052917 540.66870117]
[205.34001160 555.61901855]
[206.55949402 570.56939697]
[207.90060425 585.50927734]
[209.36326599 600.43780518]
[210.82592773 615.36633301]
[212.28858948 630.29486084]
[213.75126648 645.22338867]
[215.21392822 660.15185547]
[220.01142883 674.36401367]
[227.89569092 687.12481689]
[235.77995300 699.88562012]
[243.66423035 712.64642334]
[251.54849243 725.40722656]
[266.76852417 730.47979736]
[272.15667725 745.59094238]
[263.57962036 759.14874268]
[247.61697388 760.75280762]
[236.51387024 749.17260742]
[238.78768921 733.29150391]
[230.90341187 720.53070068]
[223.01914978 707.76989746]
[215.13487244 695.00909424]
[207.25061035 682.24822998]
[199.89323425 683.70391846]
[177.82112122 688.07104492]
[175.39022827 702.87274170]
[172.95935059 717.67443848]
[170.52845764 732.47619629]
[168.09757996 747.27789307]
[165.66668701 762.07958984]
[178.75877380 769.75830078]
[188.18984985 781.65026855]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 190]
[14 189]
[15 188]
[16 187]
[17 186]
[18 185]
[19 168]
[20 167]
[21 166]
[22 165]
[23 164]
[24 163]
[26 162]
[27 161]
[28 160]
[29 159]
[30 158]
[31 157]
[32 148]
[33 147]
[34 146]
[35 145]
[36 144]
[39 142]
[40 141]
[41 140]
[43 138]
[44 134]
[45 133]
[46 132]
[48 129]
[49 128]
[50 127]
[51 126]
[53 125]
[54 124]
[55 123]
[56 122]
[58 120]
[59 119]
[60 118]
[62 85]
[63 84]
[64 83]
[66 82]
[67 81]
[68 80]
[69 79]
[70 78]
[71 77]
[72 76]
[86 117]
[87 116]
[88 115]
[89 114]
[90 113]
[91 112]
[96 109]
[97 108]
[99 106]
[169 183]
[170 182]
[171 181]
[172 180]
[173 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
