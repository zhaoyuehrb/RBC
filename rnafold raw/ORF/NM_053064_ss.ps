%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 11:18:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGCCAGCAACAACACCGCCAGCAUAGCACAAGCCAGGAAGCUGGUAGAGCAGCUUAAGAUGGAAGCCAAUAUCGACAGGAUAAAGGUGUCCAAGGCAGCUGCAGAUUUGAUGGCCUACUGUGAAGCACAUGCCAAGGAAGACCCCCUCCUGACCCCUGUUCCGGCUUCAGAAAACCCGUUUAGGGAGAAGAAGUUUUUCUGUGCCAUCCUUUAA\
) } def
/len { sequence length } bind def

/coor [
[120.67521667 370.99490356]
[119.15769196 356.07186890]
[117.64016724 341.14883423]
[116.12264252 326.22579956]
[114.60511780 311.30276489]
[112.97960663 296.39108276]
[111.24620056 281.49157715]
[109.51280212 266.59207153]
[105.61927032 260.31414795]
[107.86376190 251.46452332]
[106.34623718 236.54148865]
[97.36103058 224.66229248]
[103.66249847 210.15014648]
[102.14497375 195.22711182]
[100.62744904 180.30406189]
[83.28799438 178.54837036]
[66.73563385 173.09321594]
[51.74995422 164.19555664]
[39.03673172 152.27444458]
[26.78763199 160.93235779]
[14.53853035 169.59027100]
[2.28942919 178.24818420]
[-9.95967197 186.90611267]
[-22.20877266 195.56402588]
[-21.64835358 214.70045471]
[-32.65233231 230.18266296]
[-50.62271500 235.85417175]
[-68.23722076 229.59402466]
[-80.09885406 238.77561951]
[-85.80635834 254.14950562]
[-102.01736450 256.62646484]
[-112.05538177 243.65843201]
[-105.59415436 228.58578491]
[-89.28044891 226.91398621]
[-77.41880798 217.73239136]
[-79.85695648 206.85408020]
[-78.05339813 195.80076599]
[-72.23068237 186.17391968]
[-63.19645691 179.38278198]
[-52.23162079 176.43804932]
[-40.90877533 177.80171204]
[-30.86668968 183.31492615]
[-18.61758804 174.65701294]
[-6.36848736 165.99908447]
[5.88061380 157.34117126]
[18.12971497 148.68325806]
[30.37881660 140.02534485]
[22.11905098 119.58812714]
[19.72714233 97.67507172]
[23.38330650 75.93717957]
[32.81207657 56.01227570]
[21.08460236 46.65993118]
[9.35713005 37.30758286]
[-2.37034202 27.95523643]
[-14.09781456 18.60289001]
[-25.82528687 9.25054264]
[-38.56117249 15.02909279]
[-52.47789764 14.75882530]
[-64.86154175 8.54944992]
[-73.32170105 -2.33669066]
[-76.25287628 -15.74082470]
[-73.13888550 -29.03573227]
[-84.72973633 -38.55687714]
[-96.32058716 -48.07802200]
[-107.91143799 -57.59916306]
[-123.48635101 -60.37993240]
[-128.40980530 -74.43727112]
[-140.00065613 -83.95841980]
[-151.59150696 -93.47956085]
[-167.10957336 -92.12775421]
[-178.72871399 -101.94866943]
[-179.92182922 -116.75110626]
[-191.51266479 -126.27224731]
[-203.10351562 -135.79339600]
[-214.69436646 -145.31452942]
[-230.73692322 -145.18656921]
[-240.72697449 -157.73959351]
[-237.00105286 -173.34397888]
[-222.41732788 -180.02938843]
[-208.16320801 -172.66735840]
[-205.17323303 -156.90538025]
[-193.58238220 -147.38424683]
[-181.99153137 -137.86309814]
[-170.40068054 -128.34194946]
[-155.64836121 -130.04623413]
[-143.75794983 -120.55555725]
[-142.07037354 -105.07041168]
[-130.47952271 -95.54927063]
[-118.88866425 -86.02812195]
[-104.14280701 -83.92836761]
[-98.39028931 -69.19001770]
[-86.79943848 -59.66887283]
[-75.20858765 -50.14772797]
[-63.61774063 -40.62658310]
[-48.63318253 -46.67987061]
[-32.54816437 -44.33559418]
[-19.76785278 -34.14005280]
[-13.84057617 -18.80276489]
[-16.47293854 -2.47692966]
[-4.74546719 6.87541723]
[6.98200512 16.22776413]
[18.70947647 25.58011055]
[30.43694878 34.93245697]
[42.16442108 44.28480530]
[50.36076355 36.45606613]
[59.61363983 29.83027077]
[69.74687958 24.54951477]
[80.56526947 20.73013687]
[91.85832214 18.46018982]
[103.40437317 17.79744148]
[114.97492218 18.76799011]
[126.33916473 21.36547470]
[137.26858521 25.55095673]
[143.97180176 12.13205814]
[150.67501831 -1.28683901]
[157.37825012 -14.70573616]
[153.23274231 -23.16570854]
[153.43884277 -32.44695663]
[157.82402039 -40.47315216]
[165.29499817 -45.50679016]
[174.10736084 -46.52494049]
[181.38688660 -59.64014053]
[188.66641235 -72.75534058]
[195.94595337 -85.87053680]
[198.34611511 -102.65373230]
[215.13784790 -104.99341583]
[222.03450012 -89.50559998]
[209.06114197 -78.59101105]
[201.78161621 -65.47581482]
[194.50209045 -52.36061096]
[187.22256470 -39.24541092]
[189.35992432 -18.71509933]
[170.79714966 -8.00251389]
[164.09391785 5.41638327]
[157.39070129 18.83528137]
[150.68748474 32.25417709]
[161.85400391 42.26959991]
[174.46746826 34.15168762]
[187.08093262 26.03377151]
[188.87069702 10.49894905]
[200.26281738 -0.21337266]
[215.87825012 -1.04516137]
[228.34390259 8.39632797]
[231.77384949 23.65311241]
[224.54858398 37.52140427]
[210.07965088 43.45302200]
[195.19885254 38.64723587]
[182.58538818 46.76515198]
[169.97192383 54.88306427]
[176.78918457 71.86428070]
[179.63177490 89.61167908]
[194.62194824 89.06889343]
[209.61212158 88.52610779]
[224.60231018 87.98332214]
[235.33390808 76.69304657]
[250.54380798 76.35613251]
[261.24124146 86.65665436]
[276.23141479 86.11387634]
[286.81015015 74.37224579]
[302.59716797 73.63340759]
[314.22628784 84.33570099]
[314.79818726 100.12963867]
[303.97354126 111.64495850]
[288.17443848 112.04983521]
[276.77420044 101.10404968]
[261.78402710 101.64683533]
[251.85958862 112.69406128]
[236.66514587 113.45806122]
[225.14509583 102.97350311]
[210.15490723 103.51628876]
[195.16473389 104.05906677]
[180.17456055 104.60185242]
[179.53598022 111.09791565]
[178.37194824 117.52066803]
[176.69015503 123.82765961]
[174.50169373 129.97723389]
[171.82102966 135.92877197]
[184.55068970 143.86322021]
[197.28036499 151.79768372]
[213.17028809 149.58644104]
[224.70666504 160.73504639]
[223.03976440 176.69126892]
[209.44828796 185.21484375]
[194.35845947 179.76722717]
[189.34590149 164.52734375]
[176.61624146 156.59289551]
[163.88656616 148.65843201]
[159.22064209 154.24069214]
[154.06864929 159.37776184]
[148.47288513 164.02746582]
[142.47926331 168.15167236]
[136.13697815 171.71649170]
[129.49810791 174.69270325]
[122.61711121 177.05584717]
[115.55048370 178.78654480]
[117.06800842 193.70957947]
[118.58553314 208.63262939]
[127.67928314 221.57922363]
[121.26927185 235.02395630]
[122.78679657 249.94700623]
[124.41230774 264.85867310]
[126.14571381 279.75817871]
[127.87911224 294.65768433]
[131.97761536 302.81585693]
[129.52815247 309.78521729]
[131.04568481 324.70825195]
[132.56320190 339.63131714]
[134.08073425 354.55435181]
[135.59825134 369.47738647]
[149.07737732 377.16458130]
[155.43309021 391.32031250]
[152.22149658 406.50140381]
[140.67752075 416.87039185]
[125.24005890 418.44024658]
[111.84513092 410.60726929]
[105.64334869 396.38342285]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 209]
[2 208]
[3 207]
[4 206]
[5 205]
[6 203]
[7 202]
[8 201]
[10 200]
[11 199]
[13 197]
[14 196]
[15 195]
[19 47]
[20 46]
[21 45]
[22 44]
[23 43]
[24 42]
[28 35]
[29 34]
[51 104]
[52 103]
[53 102]
[54 101]
[55 100]
[56 99]
[62 94]
[63 93]
[64 92]
[65 91]
[67 89]
[68 88]
[69 87]
[72 84]
[73 83]
[74 82]
[75 81]
[113 136]
[114 135]
[115 134]
[116 133]
[121 131]
[122 130]
[123 129]
[124 128]
[137 149]
[138 148]
[139 147]
[151 172]
[152 171]
[153 170]
[154 169]
[157 166]
[158 165]
[177 187]
[178 186]
[179 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
