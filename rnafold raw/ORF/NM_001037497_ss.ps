%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 14:10:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAAGAUUCAACUUUUUUUCUUUAUUCUGCACUUUUGGGUCACAAUUUUACCAGCCAAAAAGAAAUAUCCUGAGUAUGGUAGCUUGGACUUGAGGAGAGAGUGCAGAAUAGGUAAUGGUCAAUGUAAAAAUCAGUGUCAUGAAAAUGAAAUUAGGAUUGCUUACUGCAUAAGACCUGGAACUCAUUGCUGCUUGCAGCAGUAA\
) } def
/len { sequence length } bind def

/coor [
[85.14578247 139.07766724]
[78.04712677 125.86338806]
[70.55065155 125.63355255]
[65.15725708 139.63038635]
[59.76385498 153.62721252]
[54.37045670 167.62403870]
[48.97705841 181.62088013]
[58.17122650 194.00920105]
[59.18541336 209.40319824]
[51.69599533 222.89068604]
[38.09281921 230.16784668]
[22.71660995 228.91258240]
[10.47385788 219.52543640]
[5.27118158 205.00180054]
[8.76873589 189.97613525]
[19.85046387 179.24307251]
[34.98022842 176.22747803]
[40.37362671 162.23065186]
[45.76702499 148.23381042]
[51.16042328 134.23698425]
[56.55382156 120.24015808]
[51.37554932 106.16231537]
[38.19786453 98.99652100]
[25.02017975 91.83072662]
[11.84249687 84.66492462]
[-1.33518696 77.49913025]
[-14.51287079 70.33333588]
[-27.69055367 63.16753387]
[-40.86823654 56.00173950]
[-54.04592133 48.83594131]
[-67.22360229 41.67014313]
[-80.40129089 34.50434494]
[-93.57897186 27.33854866]
[-106.75666046 20.17275047]
[-119.93434143 13.00695419]
[-133.11203003 5.84115648]
[-146.28970337 -1.32464063]
[-159.73219299 -7.98043823]
[-173.41973877 -14.11646748]
[-187.10729980 -20.25249672]
[-200.79486084 -26.38852692]
[-214.48240662 -32.52455521]
[-223.59815979 -33.18029022]
[-228.33157349 -38.86091995]
[-241.92349243 -45.20598221]
[-255.51541138 -51.55104446]
[-267.88516235 -47.88605118]
[-279.07684326 -53.45436859]
[-283.33139038 -64.78122711]
[-296.82446289 -71.33383179]
[-310.31756592 -77.88642883]
[-323.81063843 -84.43903351]
[-337.30374146 -90.99163055]
[-350.79681396 -97.54423523]
[-364.33972168 -103.99325562]
[-377.93164062 -110.33831787]
[-391.57177734 -116.57904053]
[-405.25933838 -122.71507263]
[-416.57440186 -112.52248383]
[-431.05895996 -107.81952667]
[-446.20343018 -109.42100525]
[-459.38397217 -117.04946899]
[-468.31695557 -129.38322449]
[-471.45468140 -144.28540039]
[-468.25357056 -159.17407227]
[-459.26815796 -171.46969604]
[-446.05529785 -179.04200745]
[-430.90414429 -180.57902527]
[-416.43972778 -175.81446838]
[-405.16812134 -165.57380676]
[-399.04220581 -151.63133240]
[-399.12329102 -136.40263367]
[-385.43572998 -130.26660156]
[-378.04269409 -130.39904785]
[-371.58657837 -123.93023682]
[-357.99465942 -117.58517456]
[-350.60043335 -117.60430908]
[-344.24423218 -111.03732300]
[-330.75112915 -104.48471832]
[-317.25805664 -97.93212128]
[-303.76495361 -91.37951660]
[-290.27188110 -84.82691956]
[-276.77877808 -78.27431488]
[-259.36993408 -80.47165680]
[-249.17034912 -65.14295959]
[-235.57843018 -58.79790115]
[-221.98651123 -52.45283890]
[-208.34637451 -46.21211243]
[-194.65882874 -40.07608032]
[-180.97126770 -33.94005203]
[-167.28372192 -27.80402184]
[-153.59616089 -21.66799164]
[-156.38798523 -36.40589523]
[-146.72587585 -47.87950134]
[-131.72784424 -47.63629150]
[-122.44283295 -35.85543442]
[-125.71104431 -21.21580124]
[-139.12391663 -14.50232410]
[-125.94622803 -7.33652687]
[-112.76854706 -0.17072980]
[-99.59085846 6.99506760]
[-86.41317749 14.16086483]
[-73.23548889 21.32666206]
[-60.05780792 28.49246025]
[-46.88012314 35.65825653]
[-33.70244217 42.82405472]
[-20.52475739 49.98985291]
[-7.34707355 57.15564728]
[5.83061028 64.32144928]
[19.00829315 71.48724365]
[32.18597794 78.65303802]
[45.36366272 85.81884003]
[58.54134369 92.98463440]
[67.81632996 75.95748138]
[83.16258240 65.60284424]
[100.68345642 63.58486938]
[116.34188080 69.56362915]
[126.88883972 81.44316101]
[141.56896973 78.36196899]
[156.24909973 75.28077698]
[170.92922974 72.19959259]
[184.35322571 59.59812164]
[200.80346680 65.70432281]
[215.43464661 62.39853287]
[230.06584167 59.09274292]
[244.69703674 55.78695297]
[259.32821655 52.48116302]
[269.36883545 34.01042938]
[289.48825073 29.01752281]
[306.51028442 40.32595062]
[320.91146851 36.13004684]
[335.31265259 31.93414688]
[349.71386719 27.73824310]
[353.48904419 10.57901478]
[365.37222290 -2.24130011]
[382.02560425 -7.25430059]
[398.83822632 -3.16613197]
[411.20248413 8.81005001]
[425.46832275 4.17479467]
[439.73419189 -0.46046004]
[454.00003052 -5.09571505]
[464.56512451 -17.63807678]
[480.65997314 -14.49363422]
[485.72760010 1.10288227]
[474.55484009 13.10711193]
[458.63528442 9.17013264]
[444.36944580 13.80538750]
[430.10357666 18.44064331]
[415.83773804 23.07589722]
[414.55499268 35.64983368]
[408.58856201 46.84511948]
[398.79418945 54.98088074]
[386.60525513 58.82049179]
[373.82308960 57.75945663]
[362.35076904 51.92026520]
[353.90975952 42.13943863]
[339.50857544 46.33534241]
[325.10736084 50.53124237]
[310.70617676 54.72714615]
[308.94570923 63.92546463]
[303.92285156 71.89838409]
[296.29293823 77.52651215]
[287.08059692 80.00156403]
[277.54229736 78.94228363]
[268.99493408 74.45243835]
[262.63400269 67.11235046]
[248.00282288 70.41814423]
[233.37164307 73.72393799]
[218.74044800 77.02972412]
[204.10925293 80.33551788]
[197.38577271 90.39501953]
[185.21972656 93.26679993]
[174.01042175 86.87972260]
[159.33029175 89.96091461]
[144.65016174 93.04209900]
[129.97003174 96.12329102]
[126.18689728 102.59924316]
[140.54713440 106.93327332]
[155.54600525 107.11712646]
[165.47772217 118.35816193]
[163.81219482 133.26541138]
[151.64450073 142.03736877]
[136.97488403 138.90647888]
[129.44865417 125.93161011]
[118.62063599 115.55113983]
[114.83750916 122.02709198]
[119.36331940 136.32803345]
[123.88912964 150.62898254]
[128.41493225 164.92993164]
[132.94075012 179.23088074]
[137.46655273 193.53181458]
[141.99235535 207.83276367]
[146.51817322 222.13371277]
[157.06172180 235.41038513]
[147.22265625 249.21722412]
[131.23165894 243.58479309]
[132.21722412 226.65951538]
[127.69141388 212.35858154]
[123.16561127 198.05763245]
[118.63980103 183.75668335]
[114.11399078 169.45573425]
[109.58818054 155.15478516]
[105.06237030 140.85385132]
[100.53656006 126.55290222]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 21]
[4 20]
[5 19]
[6 18]
[7 17]
[22 113]
[23 112]
[24 111]
[25 110]
[26 109]
[27 108]
[28 107]
[29 106]
[30 105]
[31 104]
[32 103]
[33 102]
[34 101]
[35 100]
[36 99]
[37 98]
[38 92]
[39 91]
[40 90]
[41 89]
[42 88]
[44 87]
[45 86]
[46 85]
[49 83]
[50 82]
[51 81]
[52 80]
[53 79]
[54 78]
[55 76]
[56 75]
[57 73]
[58 72]
[118 176]
[119 175]
[120 174]
[121 173]
[123 170]
[124 169]
[125 168]
[126 167]
[127 166]
[130 159]
[131 158]
[132 157]
[133 156]
[138 149]
[139 148]
[140 147]
[141 146]
[186 204]
[187 203]
[188 202]
[189 201]
[190 200]
[191 199]
[192 198]
[193 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
