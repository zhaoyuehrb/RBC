%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 00:41:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAGGCUUCUAGUCCUUUCCAGCCUGCUCUGUAUCCUGCUUCUCUGCUUCUCCAUCUUCUCCACAGAAGGGAAGAGGCGUCCUGCCAAGGCCUGGUCAGGCAGGAGAACCAGGCUCUGCUGCCACCGAGUCCCUAGCCCCAACUCAACAAACCUGAAAGGACAUCAUGUGAGGCUCUGUAAACCAUGCAAGCUUGAGCCAGAGCCCCGCCUUUGGGUGGUGCCUGGGGCACUCCCACAGGUGUAG\
) } def
/len { sequence length } bind def

/coor [
[574.47229004 385.04797363]
[573.05407715 379.10507202]
[573.33917236 372.96166992]
[575.32751465 367.09942627]
[578.88464355 361.98416138]
[572.25390625 348.52932739]
[565.62310791 335.07446289]
[558.99237061 321.61962891]
[552.36157227 308.16476440]
[530.49884033 307.74362183]
[512.31591797 295.41213989]
[503.75711060 275.06567383]
[507.69454956 253.24140930]
[495.91625977 243.95312500]
[484.13800049 234.66484070]
[472.35971069 225.37655640]
[460.58145142 216.08827209]
[448.80316162 206.79998779]
[437.02487183 197.51171875]
[425.24661255 188.22343445]
[390.65850830 174.89349365]
[376.11752319 171.21121216]
[361.57650757 167.52893066]
[347.03549194 163.84664917]
[332.95632935 173.06480408]
[316.23974609 169.15998840]
[307.35784912 154.07598877]
[292.77120972 150.57893372]
[285.55120850 152.07228088]
[278.02182007 146.94354248]
[263.48083496 143.26126099]
[248.93981934 139.57897949]
[233.78324890 149.87545776]
[215.60697937 145.72869873]
[206.09445190 129.32376099]
[191.46449280 126.01251984]
[176.83453369 122.70127869]
[162.20457458 119.39004517]
[147.57461548 116.07880402]
[132.94465637 112.76757050]
[118.31469727 109.45633698]
[103.68473816 106.14509583]
[103.55944824 111.91768646]
[100.71405792 117.69620514]
[95.21839142 122.48042297]
[87.46884155 125.32537079]
[78.16030884 125.44024658]
[63.16789246 124.96337128]
[48.17547607 124.48648834]
[33.18305969 124.00960541]
[18.19064140 123.53272247]
[3.19822311 123.05583954]
[-11.79692364 122.67430878]
[-26.79419327 122.38815308]
[-32.72241592 125.22788239]
[-38.35447311 124.73839569]
[-42.16798019 121.89913940]
[-57.15311813 121.23161316]
[-72.13825989 120.56408691]
[-87.12339783 119.89656067]
[-102.10853577 119.22902679]
[-116.40409851 127.26451874]
[-130.37091064 118.67032623]
[-129.64111328 102.28742218]
[-114.96546936 94.96913910]
[-101.44100952 104.24388885]
[-86.45587158 104.91141510]
[-71.47073364 105.57894135]
[-56.48559189 106.24646759]
[-41.50045013 106.91400146]
[-26.50803375 107.39087677]
[-11.51076412 107.67704010]
[-4.77927589 104.66948700]
[3.67510533 108.06342316]
[18.66752243 108.54030609]
[33.65993881 109.01718903]
[48.65235901 109.49406433]
[63.64477539 109.97094727]
[78.63719177 110.44783020]
[83.95626831 96.42259216]
[68.39691162 93.55605316]
[63.55097198 79.47180176]
[52.01275635 69.88694000]
[33.78619003 67.18947601]
[28.37188721 50.48601913]
[16.71269798 41.04868698]
[0.43919525 39.02256393]
[-5.69276571 23.81299019]
[4.62485075 11.06627274]
[20.77816391 13.89513874]
[26.15003204 29.38949585]
[37.80922318 38.82682800]
[49.85289383 37.86914062]
[59.64048386 45.61558914]
[61.59761429 58.34872055]
[73.13583374 67.93357849]
[87.86989594 70.11454773]
[93.54113007 84.88436890]
[106.99597168 91.51513672]
[121.62593079 94.82637024]
[136.25588989 98.13761139]
[150.88584900 101.44884491]
[165.51580811 104.76008606]
[180.14576721 108.07131958]
[194.77572632 111.38256073]
[209.40568542 114.69379425]
[218.01103210 106.53210449]
[229.36845398 103.55744934]
[240.63761902 106.39453125]
[249.05732727 114.22927856]
[252.62210083 125.03797913]
[267.16311646 128.72026062]
[281.70410156 132.40254211]
[296.26824951 135.99227905]
[310.85488892 139.48931885]
[321.43716431 131.17982483]
[334.67932129 130.48475647]
[345.74392700 137.43400574]
[350.71777344 149.30564880]
[365.25878906 152.98793030]
[379.79980469 156.67021179]
[394.34078979 160.35249329]
[381.75747681 152.18794250]
[379.29824829 137.39091492]
[388.56420898 125.59506989]
[403.52270508 124.48014832]
[414.43496704 134.77203369]
[414.19665527 149.76972961]
[419.24719238 135.64556885]
[424.29772949 121.52140045]
[429.34826660 107.39723969]
[418.93530273 96.17990875]
[414.93920898 81.40526581]
[418.27828979 66.46842957]
[428.18524170 54.80176544]
[442.38351440 49.08619308]
[457.61044312 50.63510513]
[470.36700439 59.09257507]
[477.72183228 72.51513672]
[477.98483276 87.81838226]
[471.09558105 101.48574066]
[458.63717651 110.37655640]
[443.47244263 112.44777679]
[438.42190552 126.57194519]
[433.37136841 140.69610596]
[428.32083130 154.82028198]
[434.27917480 141.05444336]
[446.51235962 132.37406921]
[461.47357178 131.29591370]
[474.82495117 138.13256836]
[482.69552612 150.90185547]
[482.80325317 165.90147400]
[475.11691284 178.78247070]
[461.86508179 185.81019592]
[446.88992310 184.94705200]
[434.53488159 176.44515991]
[446.31317139 185.73342896]
[458.09143066 195.02171326]
[469.86972046 204.30999756]
[481.64801025 213.59828186]
[493.42626953 222.88656616]
[505.20455933 232.17485046]
[516.98284912 241.46313477]
[523.81054688 236.83778381]
[531.44323730 233.75527954]
[539.53790283 232.34716797]
[547.73248291 232.66989136]
[555.66168213 234.70260620]
[562.97338867 238.34843445]
[569.34429932 243.43896484]
[574.49438477 249.74209595]
[578.19879150 256.97262573]
[580.29809570 264.80505371]
[595.29052734 265.28195190]
[610.28289795 265.75881958]
[625.27532959 266.23571777]
[640.26776123 266.71258545]
[655.26776123 266.71258545]
[670.26019287 266.23571777]
[685.25262451 265.75881958]
[700.24499512 265.28195190]
[712.22711182 254.61384583]
[728.01348877 257.47229004]
[735.49414062 271.66452026]
[728.93054199 286.30346680]
[713.35778809 290.15939331]
[700.72192383 280.27435303]
[685.72949219 280.75125122]
[670.73706055 281.22811890]
[655.74462891 281.70501709]
[664.83911133 293.63357544]
[661.30999756 308.21252441]
[647.76696777 314.66128540]
[634.22454834 308.21127319]
[630.69677734 293.63198853]
[639.79089355 281.70501709]
[624.79846191 281.22811890]
[609.80603027 280.75125122]
[594.81359863 280.27435303]
[579.82122803 279.79748535]
[574.70556641 291.88134766]
[565.81646729 301.53399658]
[572.44720459 314.98886108]
[579.07800293 328.44369507]
[585.70874023 341.89855957]
[592.33953857 355.35339355]
[613.82733154 366.89657593]
[611.55926514 390.46270752]
[619.36010742 403.27468872]
[627.16094971 416.08666992]
[634.96179199 428.89865112]
[642.76263428 441.71063232]
[656.54821777 449.47396851]
[656.55841064 464.36856079]
[664.35925293 477.18054199]
[672.16009521 489.99252319]
[679.96093750 502.80450439]
[687.07940674 508.48980713]
[687.77832031 515.82940674]
[695.41558838 528.73956299]
[703.05285645 541.64971924]
[710.69012451 554.55987549]
[718.32739258 567.47003174]
[725.96466064 580.38018799]
[739.23309326 590.93408203]
[732.76477051 606.60559082]
[715.91503906 604.72833252]
[713.05450439 588.01745605]
[705.41723633 575.10729980]
[697.77996826 562.19714355]
[690.14270020 549.28698730]
[682.50543213 536.37683105]
[674.86816406 523.46667480]
[667.14898682 510.60534668]
[659.34814453 497.79336548]
[651.54730225 484.98138428]
[643.74645996 472.16940308]
[630.51885986 465.32247925]
[629.95068359 449.51147461]
[622.14984131 436.69949341]
[614.34899902 423.88751221]
[606.54815674 411.07553101]
[598.74731445 398.26354980]
[592.85180664 398.65701294]
[587.03869629 397.39367676]
[581.76745605 394.55056763]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 206]
[6 205]
[7 204]
[8 203]
[9 202]
[13 163]
[14 162]
[15 161]
[16 160]
[17 159]
[18 158]
[19 157]
[20 156]
[21 122]
[22 121]
[23 120]
[24 119]
[27 115]
[28 114]
[30 113]
[31 112]
[32 111]
[35 106]
[36 105]
[37 104]
[38 103]
[39 102]
[40 101]
[41 100]
[42 99]
[47 79]
[48 78]
[49 77]
[50 76]
[51 75]
[52 74]
[53 72]
[54 71]
[57 70]
[58 69]
[59 68]
[60 67]
[61 66]
[80 98]
[82 96]
[83 95]
[85 92]
[86 91]
[128 146]
[129 145]
[130 144]
[131 143]
[173 200]
[174 199]
[175 198]
[176 197]
[177 196]
[178 190]
[179 189]
[180 188]
[181 187]
[208 243]
[209 242]
[210 241]
[211 240]
[212 239]
[214 237]
[215 236]
[216 235]
[217 234]
[219 233]
[220 232]
[221 231]
[222 230]
[223 229]
[224 228]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
