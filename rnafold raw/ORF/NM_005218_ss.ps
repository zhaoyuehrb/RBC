%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sat Sep 12 02:18:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAGAACUUCCUACCUUCUGCUGUUUACUCUCUGCUUACUUUUGUCUGAGAUGGCCUCAGGUGGUAACUUUCUCACAGGCCUUGGCCACAGAUCUGAUCAUUACAAUUGCGUCAGCAGUGGAGGGCAAUGUCUCUAUUCUGCCUGCCCGAUCUUUACCAAAAUUCAAGGCACCUGUUACAGAGGGAAGGCCAAGUGCUGCAAGUGA\
) } def
/len { sequence length } bind def

/coor [
[-95.35768127 230.31549072]
[-88.08071899 217.20028687]
[-101.93891144 222.94055176]
[-115.79710388 228.68080139]
[-129.65528870 234.42105103]
[-143.51348877 240.16130066]
[-157.37168884 245.90155029]
[-158.66259766 258.33813477]
[-165.08221436 268.98348999]
[-175.35925293 275.84841919]
[-187.50868225 277.68081665]
[-199.21492004 274.19345093]
[-208.27317810 266.10720825]
[-222.29843140 271.42630005]
[-236.32366943 276.74536133]
[-250.34890747 282.06442261]
[-260.50860596 294.19253540]
[-275.15249634 291.47119141]
[-289.17773438 296.79028320]
[-303.20300293 302.10934448]
[-317.22824097 307.42840576]
[-323.77462769 321.56286621]
[-338.07397461 326.75735474]
[-351.50866699 320.42929077]
[-365.53393555 325.74835205]
[-379.55917358 331.06741333]
[-383.44378662 341.23022461]
[-392.10275269 347.44833374]
[-402.53518677 347.86410522]
[-411.28536987 342.58151245]
[-425.46487427 347.47454834]
[-439.64437866 352.36758423]
[-453.82385254 357.26062012]
[-465.56790161 371.44229126]
[-482.65304565 367.43856812]
[-496.75701904 372.54519653]
[-500.92959595 387.49075317]
[-513.11090088 397.10296631]
[-528.61706543 397.68579102]
[-541.48553467 389.01507568]
[-546.76818848 374.42489624]
[-542.43377686 359.52548218]
[-530.14886475 350.04598999]
[-514.63732910 349.63140869]
[-501.86364746 358.44122314]
[-487.75967407 353.33459473]
[-482.34579468 342.51553345]
[-470.63543701 338.14645386]
[-458.71691895 343.08114624]
[-444.53741455 338.18807983]
[-430.35791016 333.29504395]
[-416.17840576 328.40200806]
[-404.60742188 312.91180420]
[-384.87823486 317.04217529]
[-370.85299683 311.72311401]
[-356.82775879 306.40402222]
[-350.96804810 292.75854492]
[-336.82022095 287.16445923]
[-322.54730225 293.40316772]
[-308.52206421 288.08410645]
[-294.49682617 282.76501465]
[-280.47158813 277.44595337]
[-271.31506348 265.69830322]
[-255.66798401 268.03918457]
[-241.64274597 262.72012329]
[-227.61749268 257.40106201]
[-213.59225464 252.08197021]
[-209.75163269 234.84664917]
[-196.21577454 223.26370239]
[-178.28015137 222.11296082]
[-163.11193848 232.04335022]
[-149.25373840 226.30310059]
[-135.39555359 220.56285095]
[-121.53735352 214.82260132]
[-107.67916107 209.08235168]
[-93.82096863 203.34210205]
[-80.38462067 196.67391968]
[-67.43215942 189.10861206]
[-54.47970581 181.54331970]
[-50.95735550 167.11665344]
[-37.92949295 159.25984192]
[-22.82136345 163.05221558]
[-9.86890602 155.48692322]
[3.08355141 147.92161560]
[16.03600883 140.35630798]
[28.98846626 132.79100037]
[41.94092178 125.22569275]
[54.89337921 117.66038513]
[51.85855484 105.37566376]
[52.10889816 92.72409821]
[55.62732315 80.56904602]
[62.17373276 69.73995972]
[71.30140686 60.97581482]
[82.38746643 54.87467194]
[94.67539978 51.85288239]
[95.35484314 36.86827469]
[96.03427887 21.88367271]
[96.71372223 6.89906788]
[97.39315796 -8.08553600]
[97.95941925 -23.07484436]
[98.41246033 -38.06800079]
[86.62277985 -48.34114075]
[84.24589539 -63.79702759]
[92.40409088 -77.13786316]
[107.24532318 -82.06450653]
[121.76200867 -76.25075531]
[129.09982300 -62.44168472]
[125.79406738 -47.15750885]
[113.40561676 -37.61495590]
[112.95257568 -22.62179947]
[115.89337158 -15.83949471]
[112.37776184 -7.40609694]
[111.69832611 7.57850695]
[111.01888275 22.56311035]
[110.33944702 37.54771423]
[109.66001129 52.53231812]
[118.53743744 55.24667740]
[126.73406219 59.60462570]
[136.84933472 48.52847290]
[146.96461487 37.45232391]
[157.07989502 26.37617111]
[167.19517517 15.30002022]
[177.31045532 4.22386885]
[187.42573547 -6.85228205]
[197.54101562 -17.92843246]
[196.57485962 -33.70316315]
[207.10853577 -45.48523712]
[222.89259338 -46.28455734]
[234.56265259 -35.62690353]
[235.19503784 -19.83527374]
[224.41459656 -8.27855873]
[208.61717224 -7.81315422]
[198.50189209 3.26299715]
[188.38661194 14.33914852]
[178.27133179 25.41529846]
[168.15605164 36.49145126]
[158.04077148 47.56760025]
[147.92549133 58.64375305]
[137.81021118 69.71990204]
[147.30932617 81.63722992]
[152.94259644 96.54162598]
[167.94088745 96.76817322]
[182.93917847 96.99472046]
[197.93746948 97.22126770]
[212.93574524 97.44782257]
[217.05033875 82.93119049]
[224.78274536 69.97463226]
[235.60574341 59.46154404]
[248.78143311 52.10873032]
[263.41143799 48.41751862]
[278.49829102 48.63957977]
[293.01333618 52.75976944]
[305.96691895 60.49717331]
[316.47579956 71.32424164]
[323.82354736 84.50275421]
[327.50909424 99.13419342]
[327.28121948 114.22096252]
[323.15542603 128.73440552]
[315.41302490 141.68499756]
[304.58190918 152.18971252]
[291.40054321 159.53234863]
[276.76766968 163.21226501]
[261.68099976 162.97856140]
[247.16914368 158.84715271]
[234.22155762 151.09976196]
[223.72100830 140.26457214]
[216.38346863 127.08039093]
[212.70919800 112.44610596]
[197.71090698 112.21955872]
[182.71263123 111.99301147]
[167.71434021 111.76646423]
[152.71604919 111.53991699]
[147.50303650 125.60492706]
[159.02600098 135.20811462]
[170.54896545 144.81130981]
[185.90673828 141.86630249]
[199.53923035 149.52719116]
[205.00959778 164.17674255]
[199.73490906 178.89787292]
[186.20570374 186.73971558]
[170.81005859 183.99960327]
[160.81732178 171.97132874]
[160.94577026 156.33427429]
[149.42280579 146.73107910]
[137.89984131 137.12788391]
[119.01441956 148.29328918]
[97.69120026 150.69549561]
[77.71157074 144.30378723]
[62.45868683 130.61283875]
[49.50622940 138.17814636]
[36.55377197 145.74345398]
[23.60131454 153.30876160]
[10.64885712 160.87406921]
[-2.30359960 168.43937683]
[-15.25605679 176.00468445]
[-19.37476921 191.02713013]
[-32.61817169 198.51490784]
[-46.91439819 194.49577332]
[-59.86685562 202.06108093]
[-72.81931305 209.62638855]
[-57.97226715 211.76303101]
[-46.56691360 221.50559998]
[-42.13614655 235.83628845]
[-46.05243683 250.31600952]
[-57.10268021 260.45959473]
[-71.86397552 263.12496948]
[-85.76389313 257.48651123]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 76]
[3 75]
[4 74]
[5 73]
[6 72]
[7 71]
[13 67]
[14 66]
[15 65]
[16 64]
[18 62]
[19 61]
[20 60]
[21 59]
[24 56]
[25 55]
[26 54]
[30 52]
[31 51]
[32 50]
[33 49]
[35 46]
[36 45]
[77 200]
[78 199]
[79 198]
[82 195]
[83 194]
[84 193]
[85 192]
[86 191]
[87 190]
[88 189]
[95 116]
[96 115]
[97 114]
[98 113]
[99 112]
[100 110]
[101 109]
[118 139]
[119 138]
[120 137]
[121 136]
[122 135]
[123 134]
[124 133]
[125 132]
[141 172]
[142 171]
[143 170]
[144 169]
[145 168]
[173 185]
[174 184]
[175 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
