%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 13:24:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACAAUGAAUGUUCUGGAGGCUGGGAAGUGGAAGAGCAUUGUGCCAGCACCUGGUGAGGGCCUUCUUGCCGUGUUACACAUGAUGGUUUUUACUGAUGCCCUGCACAGAGAGAGGUCUGUAAAGUGGCAAGCAGGAGUCUGCUACAAUGGAGGAAAGGAUUUUGCUGUAUCUCUUGCCAGGCCCAAGGCUGCAGAGGGAAUUGCAGAUUGA\
) } def
/len { sequence length } bind def

/coor [
[113.58518219 766.41802979]
[125.52256775 756.50451660]
[124.42253113 741.54486084]
[120.79785156 735.10607910]
[123.41779327 726.35791016]
[122.53747559 711.38372803]
[121.65716553 696.40960693]
[120.77684784 681.43542480]
[109.69824219 676.47784424]
[101.73091125 667.22625732]
[98.43283081 655.39581299]
[100.48877716 643.21429443]
[107.56922150 633.00299072]
[118.38134003 626.73394775]
[117.94098663 611.74041748]
[117.50064087 596.74688721]
[117.06029510 581.75335693]
[116.61994934 566.75982666]
[108.51235962 554.26513672]
[115.84119415 540.24377441]
[115.40084839 525.25024414]
[107.29325867 512.75561523]
[114.62210083 498.73425293]
[114.18175507 483.74072266]
[113.63136292 468.75082397]
[112.97096252 453.76535034]
[112.31056213 438.77990723]
[101.68398285 431.49490356]
[97.12487793 419.23678589]
[100.50738525 406.40194702]
[110.81348419 397.73233032]
[110.37313843 382.73880005]
[109.93279266 367.74523926]
[109.38240051 352.75534058]
[108.72200012 337.76989746]
[108.06159973 322.78445435]
[107.40119934 307.79898071]
[106.74079895 292.81353760]
[104.76915741 290.82388306]
[103.46591187 287.93426514]
[103.17748260 284.39498901]
[104.15345764 280.57693481]
[106.50766754 276.93453979]
[106.72786713 261.93615723]
[106.94806671 246.93778992]
[107.16826630 231.93940735]
[104.12404633 225.20671082]
[107.50339508 216.72288513]
[107.94374084 201.72935486]
[108.38408661 186.73582458]
[108.82443237 171.74227905]
[108.82443237 156.74227905]
[108.38408661 141.74874878]
[107.94374084 126.75521088]
[59.25155640 104.46865845]
[47.27349472 95.43947601]
[35.29543686 86.41030121]
[23.31737709 77.38111877]
[11.33931637 68.35193634]
[-0.63874364 59.32276154]
[-12.61680317 50.29358292]
[-24.59486389 41.26440048]
[-36.57292557 32.23522186]
[-48.55098343 23.20604324]
[-64.22837067 21.07761765]
[-69.73413849 7.23797321]
[-81.71219635 -1.79120588]
[-97.38957977 -3.91963148]
[-102.89535522 -17.75927544]
[-114.87341309 -26.78845596]
[-128.98078918 -20.71578217]
[-144.23260498 -22.52631950]
[-156.52616882 -31.73304367]
[-162.55459595 -45.85939026]
[-160.69625854 -61.10544586]
[-151.45103455 -73.37009430]
[-137.30586243 -79.35420990]
[-122.06571198 -77.44808960]
[-109.83010101 -68.16448212]
[-103.89035797 -54.00061798]
[-105.84423065 -38.76651382]
[-93.86617279 -29.73733521]
[-79.04553986 -28.25473785]
[-72.68302155 -13.76926613]
[-60.70495987 -4.74008656]
[-45.88432693 -3.25748849]
[-39.52180481 11.22798347]
[-27.54374504 20.25716209]
[-15.56568432 29.28634262]
[-3.58762431 38.31552124]
[8.39043522 47.34469986]
[20.36849594 56.37387848]
[32.34655380 65.40306091]
[44.32461548 74.43223572]
[56.30267715 83.46141815]
[68.28073883 92.49059296]
[75.33882904 89.95420837]
[89.45502472 84.88142395]
[96.51312256 82.34503937]
[100.00409698 67.75691986]
[103.49507141 53.16880417]
[106.98603821 38.58068848]
[110.36984253 23.96734428]
[113.64628601 9.32955360]
[105.44661713 -3.91443038]
[108.97792053 -18.71255684]
[121.65456390 -26.44807434]
[124.93101501 -41.08586502]
[128.20745850 -55.72365189]
[131.48390198 -70.36144257]
[134.76034546 -84.99923706]
[126.08531952 -98.20980835]
[129.37419128 -113.66810608]
[142.67575073 -122.20298004]
[158.09840393 -118.75085449]
[166.49217224 -105.35980988]
[162.87718201 -89.97451019]
[149.39814758 -81.72278595]
[146.12168884 -67.08499908]
[142.84524536 -52.44720840]
[139.56880188 -37.80941772]
[136.29235840 -23.17162704]
[144.46162415 -10.77006912]
[141.34736633 4.12140560]
[128.28407288 12.60600090]
[125.00762939 27.24378967]
[126.61376953 34.45605469]
[121.57415771 42.07166290]
[118.08318329 56.65977859]
[114.59220886 71.24789429]
[111.10123444 85.83600616]
[123.64921570 94.05477905]
[135.62727356 85.02560425]
[147.60533142 75.99642181]
[159.58338928 66.96723938]
[171.56146240 57.93806458]
[177.46505737 42.63840485]
[193.70640564 40.36891174]
[203.57780457 53.46424484]
[196.92439270 68.45304871]
[180.59063721 69.91612244]
[168.61257935 78.94530487]
[156.63452148 87.97447968]
[144.65646362 97.00366211]
[132.67839050 106.03283691]
[145.23652649 97.82958221]
[160.07745361 95.65083313]
[174.46347046 99.89848328]
[185.74078369 109.78899384]
[191.82907104 123.49784851]
[191.60523987 138.49617004]
[185.11056519 152.01724243]
[173.54313660 161.56681824]
[159.03677368 165.38328552]
[144.26747131 162.76261902]
[131.95973206 154.18827820]
[124.38394928 141.24194336]
[122.93727112 126.31486511]
[123.37762451 141.30839539]
[123.81797028 156.30194092]
[126.22539520 159.90936279]
[127.25731659 163.71267700]
[127.02087402 167.25581360]
[125.76019287 170.16426086]
[123.81797028 172.18263245]
[123.37762451 187.17616272]
[122.93727112 202.16969299]
[122.49692535 217.16323853]
[122.16664886 232.15959167]
[121.94644928 247.15797424]
[121.72624969 262.15637207]
[121.50605774 277.15475464]
[121.72624969 292.15313721]
[122.38665009 307.13858032]
[123.04705811 322.12405396]
[123.70745850 337.10949707]
[124.36785889 352.09494019]
[127.87138367 360.52825928]
[124.92633057 367.30490112]
[125.36667633 382.29843140]
[125.80702209 397.29199219]
[138.75253296 409.05935669]
[139.17279053 426.21087646]
[127.29601288 438.11950684]
[127.95641327 453.10494995]
[128.61682129 468.09042358]
[132.12034607 476.52371216]
[129.17529297 483.30038452]
[129.61563110 498.29391479]
[137.75473022 511.86099243]
[130.39437866 524.80993652]
[130.83473206 539.80346680]
[138.97381592 553.37054443]
[131.61347961 566.31945801]
[132.05383301 581.31298828]
[132.49417114 596.30651855]
[132.93452454 611.30004883]
[133.37487793 626.29357910]
[148.64938354 636.06677246]
[154.94270325 652.90545654]
[149.91110229 669.99926758]
[135.75099182 680.55511475]
[136.63131714 695.52929688]
[137.51162720 710.50341797]
[138.39193726 725.47753906]
[139.38214111 740.44482422]
[140.48217773 755.40447998]
[153.74128723 763.46520996]
[159.69905090 777.79296875]
[156.06462097 792.87841797]
[144.23547363 802.92089844]
[128.76017761 804.05883789]
[115.58930206 795.85473633]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 207]
[3 206]
[5 205]
[6 204]
[7 203]
[8 202]
[14 198]
[15 197]
[16 196]
[17 195]
[18 194]
[20 192]
[21 191]
[23 189]
[24 188]
[25 186]
[26 185]
[27 184]
[31 181]
[32 180]
[33 179]
[34 177]
[35 176]
[36 175]
[37 174]
[38 173]
[43 172]
[44 171]
[45 170]
[46 169]
[48 168]
[49 167]
[50 166]
[51 165]
[52 160]
[53 159]
[54 158]
[55 96]
[56 95]
[57 94]
[58 93]
[59 92]
[60 91]
[61 90]
[62 89]
[63 88]
[64 87]
[66 85]
[67 84]
[69 82]
[70 81]
[99 131]
[100 130]
[101 129]
[102 128]
[103 126]
[104 125]
[107 122]
[108 121]
[109 120]
[110 119]
[111 118]
[132 145]
[133 144]
[134 143]
[135 142]
[136 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
