%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sat Sep 12 00:55:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGACACCAGCCGUGUGCAGCCUAUCAAGCUGGCCAGGGUCACCAAGGUCCUGGGCAGGACCGGUUCUCAGGGACAGUGCACGCAGGUGCGCGUGGAAUUCAUGGACGACACGAGCCGAUCCAUCAUCCGCAAUGUAAAAGGCCCCGUGCGCGAGGGCGACGUGCUCACCCUUUUGGAGUCAGAGCGAGAAGCCCGGAGGUUGCGCUGA\
) } def
/len { sequence length } bind def

/coor [
[-13.13951683 385.82476807]
[-16.67918968 400.40115356]
[-20.21886063 414.97750854]
[-23.75853348 429.55389404]
[-22.74258614 438.63165283]
[-27.46093750 444.32012939]
[-22.56008339 459.96984863]
[-33.86033249 471.85415649]
[-49.73696136 467.74746704]
[-53.85744858 451.87442017]
[-41.98299789 440.56384277]
[-38.33490753 426.01422119]
[-34.79523849 411.43783569]
[-31.25556374 396.86148071]
[-27.71589279 382.28509521]
[-24.61178207 367.60980225]
[-21.94598579 352.84857178]
[-19.28019142 338.08734131]
[-16.61439514 323.32614136]
[-13.94859982 308.56491089]
[-11.28280449 293.80371094]
[-8.61700916 279.04248047]
[-5.95121336 264.28128052]
[-3.28541780 249.52005005]
[-8.72508526 244.35671997]
[-12.22848511 258.94186401]
[-26.61125755 263.20046997]
[-37.49078369 252.87400818]
[-33.98765182 238.28880310]
[-19.60441971 234.03004456]
[-25.04408646 228.86671448]
[-39.64640808 232.29777527]
[-54.24872971 235.72883606]
[-65.91322327 246.41761780]
[-80.07288361 241.79666138]
[-94.67520905 245.22772217]
[-109.27752686 248.65878296]
[-123.87985229 252.08984375]
[-138.48217773 255.52090454]
[-153.08450317 258.95196533]
[-167.68681335 262.38302612]
[-182.28913879 265.81408691]
[-191.92604065 278.64022827]
[-207.96592712 278.95870972]
[-218.10438538 266.52520752]
[-214.56404114 250.87768555]
[-200.06076050 244.01953125]
[-185.72019958 251.21176147]
[-171.11787415 247.78070068]
[-156.51556396 244.34963989]
[-141.91323853 240.91857910]
[-127.31091309 237.48751831]
[-112.70858765 234.05645752]
[-98.10626984 230.62539673]
[-83.50394440 227.19433594]
[-72.88390350 216.75096130]
[-57.67979431 221.12651062]
[-43.07746887 217.69544983]
[-28.47514725 214.26438904]
[-12.29774094 213.66421509]
[0.15768720 219.38987732]
[6.87385225 228.70794678]
[16.87202454 217.52597046]
[26.87019730 206.34399414]
[36.86837006 195.16201782]
[46.69894791 183.83242798]
[56.35976028 172.35772705]
[66.02056885 160.88302612]
[75.68138123 149.40832520]
[85.34219360 137.93362427]
[71.24252319 143.05213928]
[56.29397583 141.81077576]
[43.23173523 134.43663025]
[34.44583130 122.27900696]
[31.54384613 107.56240082]
[35.05676651 92.97955322]
[44.34181976 81.19873047]
[57.69961166 74.37563324]
[49.28499222 61.95813751]
[40.87037277 49.54064178]
[32.45575333 37.12314606]
[24.04113579 24.70565033]
[15.62651730 12.28815460]
[0.64351815 5.62168741]
[-0.80532718 -10.71333218]
[12.77042866 -19.91283798]
[27.40521240 -12.51316452]
[28.04401207 3.87353635]
[36.45862961 16.29103088]
[44.87324905 28.70852661]
[53.28786850 41.12602234]
[61.70248795 53.54351807]
[70.11710358 65.96101379]
[84.85807037 63.18540192]
[88.18032837 48.55794144]
[91.50258636 33.93048096]
[94.82484436 19.30302238]
[98.14710236 4.67556190]
[89.97448730 -3.95837712]
[87.01471710 -15.34875202]
[89.89111328 -26.63681030]
[97.77700806 -35.04682541]
[108.62889099 -38.56859207]
[112.38519287 -53.09065247]
[116.14149475 -67.61270905]
[119.89779663 -82.13477325]
[123.65409088 -96.65682983]
[127.30218506 -111.20645142]
[130.84185791 -125.78282928]
[120.69284821 -137.52069092]
[119.41501617 -152.98506165]
[127.49971771 -166.22956848]
[141.83821106 -172.16145325]
[156.91706848 -168.49975586]
[166.93814087 -156.65249634]
[168.04812622 -141.17517090]
[159.82023621 -128.01913452]
[145.41822815 -122.24315643]
[141.87855530 -107.66677856]
[143.35487366 -100.42507172]
[138.17614746 -92.90052795]
[134.41984558 -78.37847137]
[130.66355896 -63.85641098]
[126.90724945 -49.33435059]
[123.15094757 -34.81229401]
[133.37396240 -19.62659073]
[129.17858887 -1.47964299]
[112.77456665 7.99782133]
[109.45230865 22.62528229]
[106.13005066 37.25274277]
[102.80778503 51.88020325]
[99.48552704 66.50765991]
[104.76905060 71.83066559]
[114.69738770 60.58663940]
[124.62572479 49.34260941]
[129.98596191 35.33304596]
[144.66230774 32.23390198]
[155.22901917 42.88024139]
[152.01979065 57.53291321]
[137.97135925 62.78796768]
[126.65372467 72.63232422]
[115.33609772 82.47667694]
[120.61962128 87.79968262]
[135.27140808 84.58640289]
[149.92320251 81.37313080]
[164.57498169 78.15985870]
[179.20243835 74.83760071]
[193.80476379 71.40653992]
[205.37771606 59.78763199]
[221.15478516 64.26156616]
[224.90588379 80.22594452]
[212.77220154 91.25798035]
[197.23582458 86.00885773]
[182.63351440 89.43991852]
[176.84106445 94.03005981]
[167.78825378 92.81164551]
[153.13647461 96.02491760]
[138.48468018 99.23818970]
[123.83290100 102.45146942]
[122.66515350 109.86000061]
[137.47875977 107.50263977]
[144.29823303 120.86283112]
[133.69912720 131.47692871]
[120.32966614 124.67707062]
[119.16192627 132.08560181]
[132.11492920 139.64997864]
[145.06791687 147.21435547]
[158.02091980 154.77873230]
[171.08509827 162.14942932]
[184.25758362 169.32479858]
[197.48310852 176.40190125]
[210.76095581 183.38035583]
[227.11677551 182.18910217]
[236.10121155 195.90814209]
[228.47183228 210.42449951]
[212.07708740 210.80499268]
[203.78250122 196.65820312]
[190.50465393 189.67974854]
[183.12133789 189.35050964]
[177.08221436 182.49726868]
[163.90974426 175.32189941]
[159.15673828 175.78884888]
[154.05995178 173.27493286]
[150.45654297 167.73173523]
[137.50354004 160.16735840]
[124.55054474 152.60298157]
[111.59754181 145.03860474]
[96.81689453 147.59443665]
[87.15608215 159.06913757]
[77.49526978 170.54383850]
[67.83445740 182.01853943]
[58.17364883 193.49324036]
[56.64084625 199.92456055]
[52.68415833 204.00398254]
[48.05034256 205.16018677]
[38.05216980 216.34216309]
[28.05399895 227.52413940]
[18.05582619 238.70611572]
[11.47579956 252.18585205]
[8.81000423 266.94705200]
[6.14420843 281.70828247]
[3.47841287 296.46951294]
[0.81261736 311.23071289]
[-1.85317814 325.99194336]
[-4.51897383 340.75314331]
[-7.18476915 355.51437378]
[-9.85056496 370.27557373]
[-8.23779583 374.30706787]
[-8.01427460 378.24594116]
[-8.98028851 381.66677856]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 15]
[2 14]
[3 13]
[4 12]
[6 11]
[16 207]
[17 206]
[18 205]
[19 204]
[20 203]
[21 202]
[22 201]
[23 200]
[24 199]
[31 59]
[32 58]
[33 57]
[35 55]
[36 54]
[37 53]
[38 52]
[39 51]
[40 50]
[41 49]
[42 48]
[62 198]
[63 197]
[64 196]
[65 195]
[66 192]
[67 191]
[68 190]
[69 189]
[70 188]
[78 93]
[79 92]
[80 91]
[81 90]
[82 89]
[83 88]
[94 132]
[95 131]
[96 130]
[97 129]
[98 128]
[103 125]
[104 124]
[105 123]
[106 122]
[107 121]
[108 119]
[109 118]
[143 159]
[144 158]
[145 157]
[146 156]
[147 154]
[148 153]
[165 187]
[166 186]
[167 185]
[168 184]
[169 181]
[170 180]
[171 178]
[172 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
