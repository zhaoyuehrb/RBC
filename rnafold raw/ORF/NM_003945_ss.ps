%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Sep  9 22:53:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGCGUAUCACGGCCUCACUGUGCCUCUCAUUGUGAUGAGCGUGUUCUGGGGCUUCGUCGGCUUCUUGGUGCCUUGGUUCAUCCCUAAGGGUCCUAACCGGGGAGUUAUCAUUACCAUGUUGGUGACCUGUUCAGUUUGCUGCUAUCUCUUUUGGCUGAUUGCAAUUCUGGCCCAACUCAACCCUCUCUUUGGACCGCAAUUGAAAAAUGAAACCAUCUGGUAUCUGAAGUAUCAUUGGCCUUGA\
) } def
/len { sequence length } bind def

/coor [
[-173.66870117 576.23577881]
[-186.99125671 584.97839355]
[-202.61175537 587.92712402]
[-218.12916565 584.65899658]
[-226.41307068 597.16406250]
[-227.58399963 612.94189453]
[-241.06314087 619.27923584]
[-249.34706116 631.78430176]
[-257.63098145 644.28936768]
[-265.91488647 656.79443359]
[-274.19882202 669.29949951]
[-282.48272705 681.80456543]
[-290.20193481 694.66589355]
[-297.34115601 707.85803223]
[-304.48034668 721.05010986]
[-311.53552246 734.28735352]
[-308.15463257 749.97015381]
[-318.41912842 762.29974365]
[-334.45495605 761.81805420]
[-343.96078491 748.89447021]
[-339.64459229 733.44293213]
[-324.81738281 727.31652832]
[-324.49261475 719.95086670]
[-317.67245483 713.91088867]
[-310.53326416 700.71881104]
[-303.39404297 687.52667236]
[-317.69250488 692.06030273]
[-331.60052490 686.44189453]
[-338.73791504 673.24877930]
[-335.83044434 658.53326416]
[-324.21191406 649.04595947]
[-309.21218872 649.13903809]
[-297.71231079 658.76989746]
[-294.98779297 673.52069092]
[-286.70388794 661.01562500]
[-278.41995239 648.51055908]
[-270.13604736 636.00543213]
[-261.85214233 623.50036621]
[-253.56822205 610.99530029]
[-252.98980713 596.11193848]
[-238.91813660 588.88012695]
[-230.63423157 576.37506104]
[-238.90884399 565.05560303]
[-242.83470154 551.56390381]
[-241.92143250 537.51245117]
[-236.25825500 524.58776855]
[-226.50570679 514.34814453]
[-213.81871033 508.03567505]
[-199.70977783 506.42565918]
[-185.86874390 509.73144531]
[-177.42643738 497.33273315]
[-168.98414612 484.93405151]
[-160.54185486 472.53533936]
[-152.09956360 460.13665771]
[-143.65727234 447.73794556]
[-151.91177368 435.29638672]
[-154.78179932 420.60256958]
[-151.79943848 405.88964844]
[-143.38865662 393.40579224]
[-130.80528259 385.07080078]
[-115.94962311 382.18069458]
[-101.07951355 385.20651245]
[-92.63721466 372.80783081]
[-84.19492340 360.40911865]
[-75.75263214 348.01043701]
[-67.31034088 335.61172485]
[-69.25931549 323.68826294]
[-62.34757614 313.29443359]
[-49.81955719 310.29248047]
[-41.22024918 298.00216675]
[-32.62094498 285.71182251]
[-24.02164078 273.42150879]
[-15.42233562 261.13119507]
[-6.82303095 248.84088135]
[-6.53264856 229.49330139]
[11.90296555 221.30116272]
[20.18688011 208.79609680]
[28.47079659 196.29103088]
[36.75471115 183.78596497]
[45.03862762 171.28088379]
[53.24284744 158.72338867]
[61.36704636 146.11396790]
[69.49124146 133.50456238]
[61.64855194 124.13516235]
[56.59430313 113.01096344]
[54.69597626 100.94076538]
[56.09159470 88.80216217]
[60.67968750 77.47772980]
[68.12666321 67.79084015]
[77.89107513 60.44579697]
[72.84053040 46.32163239]
[67.78999329 32.19746780]
[62.73945236 18.07330322]
[57.68891144 3.94913745]
[52.54864883 -10.14262295]
[47.31887817 -24.20141029]
[42.08910370 -38.26019669]
[36.85932922 -52.31898117]
[31.62955856 -66.37776947]
[17.53703117 -73.01391602]
[12.43356991 -87.34602356]
[18.84696770 -100.74019623]
[13.61719513 -114.79898834]
[-1.58511603 -116.16004181]
[-14.68698215 -123.98972321]
[-23.08701706 -136.73342896]
[-25.11738968 -151.86090088]
[-20.37496567 -166.36856079]
[-9.80135822 -177.37590027]
[4.50403595 -182.69741821]
[19.70087051 -181.27650452]
[32.77180099 -173.39527893]
[41.12158585 -160.61859131]
[43.09237289 -145.48324585]
[38.29285431 -130.99436951]
[27.67598152 -120.02875519]
[32.90575409 -105.96997070]
[46.51370239 -100.02359772]
[52.01771164 -85.84049225]
[45.68834305 -71.60754395]
[50.91811752 -57.54875565]
[56.14788818 -43.48996735]
[61.37766266 -29.43118286]
[66.60743713 -15.37239647]
[71.87263489 -10.21138859]
[71.81307220 -1.10140347]
[76.86361694 13.02276134]
[81.91415405 27.14692688]
[86.96469879 41.27109146]
[92.01523590 55.39525604]
[101.41896820 53.55082703]
[111.23863220 53.71707535]
[121.03898621 55.98486710]
[130.36569214 60.34993744]
[139.27482605 48.28231812]
[148.18395996 36.21470261]
[157.09307861 24.14708328]
[166.00221252 12.07946682]
[167.97399902 -3.61838841]
[181.75798035 -9.26207066]
[190.66711426 -21.32968903]
[199.57623291 -33.39730835]
[192.40078735 -46.86859894]
[191.78948975 -62.11947250]
[197.86372375 -76.12184906]
[209.41741943 -86.09555054]
[224.15661621 -90.06028748]
[239.15480042 -87.22886658]
[251.43409729 -78.16345978]
[258.55642700 -64.66400909]
[259.10766602 -49.41085052]
[252.97836304 -35.43250275]
[241.38546753 -25.50437737]
[226.63078308 -21.59771156]
[211.64385986 -24.48817635]
[202.73472595 -12.42055893]
[193.82559204 -0.35294080]
[192.49105835 14.48175716]
[178.06983948 20.98859596]
[169.16070557 33.05621338]
[160.25157166 45.12383270]
[151.34243774 57.19144821]
[142.43331909 69.25907135]
[149.40415955 82.54090881]
[164.39657593 82.06402588]
[179.38899231 81.58714294]
[194.38140869 81.11026001]
[209.37382507 80.63337708]
[222.92103577 72.46125031]
[235.88786316 79.79001617]
[250.88027954 79.31313324]
[265.87271118 78.83625031]
[279.41992188 70.66412354]
[292.38674927 77.99288940]
[307.37915039 77.51600647]
[322.37158203 77.03912354]
[337.36398315 76.56224060]
[343.07360840 62.44416428]
[354.03646851 51.87364960]
[368.35314941 46.68209457]
[383.54324341 47.76897430]
[396.97494507 54.94597626]
[406.32113647 66.96964264]
[409.96252441 81.75680542]
[407.26824951 96.74549103]
[398.70507812 109.33882141]
[385.75665283 117.35493469]
[370.66635132 119.40497589]
[356.04864502 115.13377380]
[344.43618774 105.28133392]
[337.84088135 91.55465698]
[322.84844971 92.03153992]
[307.85604858 92.50842285]
[292.86361694 92.98530579]
[280.38876343 101.12332153]
[266.34957886 93.82866669]
[251.35716248 94.30554962]
[236.36474609 94.78243256]
[223.88989258 102.92044830]
[209.85070801 95.62580109]
[194.85829163 96.10267639]
[179.86587524 96.57955933]
[164.87345886 97.05644226]
[149.88104248 97.53332520]
[145.94558716 117.07649231]
[134.82131958 133.16914368]
[118.55949402 143.36000061]
[99.96206665 146.23941040]
[82.10066223 141.62875366]
[73.97646332 154.23817444]
[65.85226440 166.84759521]
[63.84278488 175.73338318]
[57.54369354 179.56480408]
[49.25978088 192.06987000]
[40.97586441 204.57493591]
[32.69194794 217.08001709]
[24.40803337 229.58508301]
[27.17954254 240.07214355]
[23.80432129 250.14979553]
[15.62030411 256.58096313]
[5.46728849 257.44018555]
[-3.13201642 269.73049927]
[-11.73132133 282.02081299]
[-20.33062553 294.31115723]
[-28.92993164 306.60147095]
[-37.52923584 318.89178467]
[-38.71234894 337.27883911]
[-54.91164398 344.05401611]
[-63.35393524 356.45272827]
[-71.79622650 368.85140991]
[-80.23851776 381.25012207]
[-88.68081665 393.64880371]
[-80.41608429 406.37554932]
[-77.66098022 421.25683594]
[-80.80471802 436.01928711]
[-89.33777618 448.41989136]
[-101.93419647 456.58657837]
[-116.65755463 459.30105591]
[-131.25857544 456.18023682]
[-139.70086670 468.57894897]
[-148.14315796 480.97763062]
[-156.58544922 493.37634277]
[-165.02774048 505.77505493]
[-173.47004700 518.17376709]
[-164.56445312 531.57354736]
[-161.49505615 547.32800293]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 42]
[5 41]
[7 39]
[8 38]
[9 37]
[10 36]
[11 35]
[12 34]
[13 26]
[14 25]
[15 24]
[16 22]
[50 244]
[51 243]
[52 242]
[53 241]
[54 240]
[55 239]
[62 232]
[63 231]
[64 230]
[65 229]
[66 228]
[69 226]
[70 225]
[71 224]
[72 223]
[73 222]
[74 221]
[76 217]
[77 216]
[78 215]
[79 214]
[80 213]
[81 211]
[82 210]
[83 209]
[90 130]
[91 129]
[92 128]
[93 127]
[94 126]
[95 124]
[96 123]
[97 122]
[98 121]
[99 120]
[102 117]
[103 116]
[134 163]
[135 162]
[136 161]
[137 160]
[138 159]
[140 157]
[141 156]
[142 155]
[164 204]
[165 203]
[166 202]
[167 201]
[168 200]
[170 198]
[171 197]
[172 196]
[174 194]
[175 193]
[176 192]
[177 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
