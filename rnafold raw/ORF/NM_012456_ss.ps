%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 21:14:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGAUCCUCUCAGGGCCCAACAGCUGGCUGCGGAGCUGGAGGUGGAGAUGAUGGCCGAUAUGUACAACAGAAUGACCAGUGCCUGCCACCGGAAGUGUGUGCCUCCUCACUACAAGGAAGCAGAGCUCUCCAAGGGCGAGUCUGUGUGCCUGGACCGAUGUGUCUCUAAGUACCUGGACAUCCAUGAGCGGAUGGGCAAAAAGUUGACAGAGUUGUCUAUGCAGGAUGAAGAGCUGAUGAAGAGGGUGCAGCAG\
AGCUCUGGGCCUGCAUGA\
) } def
/len { sequence length } bind def

/coor [
[310.42706299 294.56048584]
[295.97222900 280.24047852]
[288.20220947 261.66983032]
[288.15335083 241.75575256]
[295.66714478 223.54748535]
[284.30023193 213.76007080]
[272.93331909 203.97265625]
[261.56643677 194.18524170]
[246.87322998 191.74404907]
[241.46409607 176.87623596]
[230.09719849 167.08882141]
[218.73028564 157.30140686]
[207.36338806 147.51399231]
[195.94055176 137.79190063]
[184.46218872 128.13546753]
[170.93701172 121.64935303]
[156.22105408 118.74407959]
[141.50509644 115.83881378]
[126.78913116 112.93354797]
[116.77630615 124.56603241]
[102.29759979 129.65898132]
[87.20726013 126.85665894]
[77.55081177 138.33503723]
[67.89437103 149.81340027]
[58.23792648 161.29177856]
[48.58148193 172.77015686]
[52.44678116 187.79809570]
[46.70938110 202.21551514]
[33.57542038 210.47860718]
[18.09518242 209.41006470]
[6.22112894 199.42074585]
[2.51907849 184.35174561]
[8.41254425 169.99742126]
[21.63536835 161.87728882]
[37.10310745 163.11370850]
[46.75955200 151.63533020]
[56.41599655 140.15696716]
[66.07244110 128.67858887]
[75.72888947 117.20021057]
[71.34774017 113.96704865]
[67.42325592 109.74337769]
[64.16406250 104.60026550]
[49.17984009 105.28796387]
[34.19561005 105.97566986]
[19.21138382 106.66336823]
[4.22715664 107.35106659]
[-10.75288200 108.12465668]
[-25.72823906 108.98410797]
[-32.69594193 122.60021210]
[-45.45925522 130.84609985]
[-60.53609085 131.59135437]
[-73.87242126 124.73581696]
[-81.93236542 112.20973206]
[-96.90772247 113.06918335]
[-111.88307953 113.92863464]
[-125.21725464 122.44393158]
[-138.36694336 115.44857788]
[-153.34230042 116.30803680]
[-161.77833557 129.19754028]
[-176.02006531 134.58515930]
[-190.53173828 130.60076904]
[-199.80363464 118.97450256]
[-214.77899170 119.83396149]
[-229.75434875 120.69341278]
[-245.22102356 127.63735199]
[-256.17520142 114.69739532]
[-246.77334595 100.58917999]
[-230.61380005 105.71805573]
[-215.63844299 104.85860443]
[-200.66308594 103.99914551]
[-192.78218079 91.38846588]
[-178.82162476 85.77002716]
[-164.05703735 89.49292755]
[-154.20175171 101.33267212]
[-139.22639465 100.47322083]
[-126.96335602 92.01940155]
[-112.74253082 98.95327759]
[-97.76717377 98.09382629]
[-82.79181671 97.23437500]
[-76.21784973 83.86842346]
[-63.75339508 75.53215790]
[-48.69029236 74.54763794]
[-35.06740570 81.27919006]
[-26.58769417 94.00875092]
[-11.61233616 93.14929199]
[-5.13896561 89.64186096]
[3.53945756 92.36683655]
[18.52368546 91.67913818]
[33.50791168 90.99143982]
[48.49213791 90.30374146]
[63.47636795 89.61604309]
[70.34745026 76.28231812]
[62.21154785 63.68044662]
[54.07564926 51.07857513]
[45.86763763 38.52355576]
[37.58778381 26.01579475]
[29.30793381 13.50803471]
[15.90982437 12.36698818]
[5.75568342 3.85139132]
[2.39837074 -8.76750946]
[6.84411907 -20.83835602]
[-1.29178143 -33.44022751]
[-9.42768192 -46.04209518]
[-23.41310120 -53.43930054]
[-23.81599236 -68.32845306]
[-31.95189285 -80.93032837]
[-40.08779144 -93.53219604]
[-48.22369385 -106.13406372]
[-63.76105499 -107.90167236]
[-74.48961639 -119.27848816]
[-75.34368134 -134.89273071]
[-65.91998291 -147.37182617]
[-50.66810989 -150.82354736]
[-36.78952408 -143.61807251]
[-30.83727074 -129.15760803]
[-35.62182236 -114.26996613]
[-27.48592377 -101.66809845]
[-19.35002327 -89.06622314]
[-11.21412182 -76.46435547]
[2.18936253 -69.96852112]
[3.17418766 -54.17799759]
[11.31008816 -41.57612610]
[19.44598961 -28.97425652]
[36.03782272 -26.12552261]
[45.60914612 -11.86722660]
[41.81569290 5.22818327]
[50.09554672 17.73594284]
[58.37539673 30.24370384]
[64.66428375 34.07208252]
[66.67752075 42.94267654]
[74.81341553 55.54454422]
[82.94931793 68.14641571]
[105.95244598 66.52245331]
[123.80796051 78.80538940]
[129.69439697 98.21759033]
[144.41035461 101.12285614]
[159.12631226 104.02812195]
[173.84226990 106.93339539]
[172.63038635 93.19741058]
[180.37417603 82.78289032]
[192.29032898 80.32498932]
[199.98803711 67.45077515]
[207.68574524 54.57656479]
[215.38345337 41.70235443]
[223.08116150 28.82814217]
[223.52235413 13.01309013]
[236.69451904 6.06014872]
[244.39222717 -6.81406212]
[252.08993530 -19.68827248]
[259.78762817 -32.56248474]
[254.48257446 -50.77969742]
[264.04742432 -66.79422760]
[281.97534180 -70.62675476]
[289.37582397 -83.67407990]
[296.77630615 -96.72141266]
[304.17678833 -109.76873779]
[299.72869873 -124.93416595]
[307.38021851 -138.76275635]
[322.59182739 -143.05024719]
[336.33874512 -135.25294495]
[340.46517944 -119.99686432]
[332.52297974 -106.33315277]
[317.22412109 -102.36825562]
[309.82363892 -89.32092285]
[302.42315674 -76.27359772]
[295.02264404 -63.22626495]
[300.35583496 -53.18986893]
[300.19717407 -41.70595932]
[294.47073364 -31.61262131]
[284.49078369 -25.45965385]
[272.66186523 -24.86477661]
[264.96414185 -11.99056625]
[257.26644897 0.88364506]
[249.56872559 13.75785637]
[249.67811584 28.65205956]
[235.95536804 36.52584839]
[228.25765991 49.40006256]
[220.55995178 62.27427292]
[212.86224365 75.14848328]
[205.16453552 88.02269745]
[208.77931213 98.60862732]
[204.81906128 109.86267090]
[194.11862183 116.65708923]
[205.59700012 126.31352997]
[214.14389038 129.42658997]
[217.15080261 136.14709473]
[228.51770020 145.93450928]
[239.88461304 155.72192383]
[251.25151062 165.50933838]
[266.75775146 168.65058899]
[271.35385132 182.81834412]
[282.72073364 192.60575867]
[294.08764648 202.39317322]
[305.45455933 212.18058777]
[312.86990356 206.55738831]
[321.24511719 202.37472534]
[330.30145264 199.79452515]
[339.73339844 198.92501831]
[349.21875000 199.81631470]
[358.42971802 202.45809937]
[367.04428101 206.77914429]
[374.75735474 212.64923096]
[381.29159546 219.88287354]
[386.40750122 228.24522400]
[389.91192627 237.45965576]
[391.66546631 247.21687317]
[391.58782959 257.18530273]
[406.39501953 259.58276367]
[421.20217896 261.98022461]
[436.00933838 264.37768555]
[451.13888550 258.05081177]
[464.01708984 268.20382690]
[461.39602661 284.39215088]
[445.97195435 289.96264648]
[433.61187744 279.18484497]
[418.80471802 276.78738403]
[403.99755859 274.38992310]
[389.19036865 271.99246216]
[381.49267578 284.86666870]
[390.61273193 296.77569580]
[399.73275757 308.68472290]
[408.85281372 320.59375000]
[417.97286987 332.50274658]
[427.09289551 344.41177368]
[436.21295166 356.32080078]
[445.33300781 368.22982788]
[459.02682495 366.85626221]
[471.51596069 372.37570190]
[479.59014893 383.25271606]
[481.23171997 396.59024048]
[476.11889648 408.90078735]
[485.10180664 420.91357422]
[494.08468628 432.92639160]
[503.06759644 444.93917847]
[512.05053711 456.95199585]
[521.03338623 468.96478271]
[533.64154053 471.56625366]
[540.87884521 481.72531128]
[539.32092285 493.69747925]
[548.16546631 505.81246948]
[563.52917480 508.38046265]
[572.32623291 520.79278564]
[569.78338623 535.42388916]
[585.43536377 537.61248779]
[594.88867188 550.27789307]
[592.53466797 565.90588379]
[579.77008057 575.22467041]
[564.16784668 572.70562744]
[554.98449707 559.84326172]
[557.66839600 544.26849365]
[542.95806885 542.23309326]
[533.81585693 530.07275391]
[536.05047607 514.65704346]
[527.20587158 502.54205322]
[510.78988647 496.29397583]
[509.02059937 477.94769287]
[500.03771973 465.93490601]
[491.05480957 453.92208862]
[482.07189941 441.90930176]
[473.08898926 429.89648438]
[464.10607910 417.88369751]
[447.69009399 418.62789917]
[433.93502808 409.33627319]
[428.38644409 393.51531982]
[433.42398071 377.34985352]
[424.30392456 365.44085693]
[415.18389893 353.53182983]
[406.06384277 341.62280273]
[396.94378662 329.71377563]
[387.82373047 317.80477905]
[378.70370483 305.89575195]
[369.58364868 293.98672485]
[350.25015259 302.17645264]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 194]
[6 193]
[7 192]
[8 191]
[10 189]
[11 188]
[12 187]
[13 186]
[14 184]
[15 183]
[16 138]
[17 137]
[18 136]
[19 135]
[22 39]
[23 38]
[24 37]
[25 36]
[26 35]
[42 91]
[43 90]
[44 89]
[45 88]
[46 87]
[47 85]
[48 84]
[53 79]
[54 78]
[55 77]
[57 75]
[58 74]
[62 70]
[63 69]
[64 68]
[92 132]
[93 131]
[94 130]
[95 128]
[96 127]
[97 126]
[101 123]
[102 122]
[103 121]
[105 119]
[106 118]
[107 117]
[108 116]
[141 180]
[142 179]
[143 178]
[144 177]
[145 176]
[147 174]
[148 173]
[149 172]
[150 171]
[153 166]
[154 165]
[155 164]
[156 163]
[207 218]
[208 217]
[209 216]
[210 215]
[219 272]
[220 271]
[221 270]
[222 269]
[223 268]
[224 267]
[225 266]
[226 265]
[231 261]
[232 260]
[233 259]
[234 258]
[235 257]
[236 256]
[239 254]
[240 253]
[243 250]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
