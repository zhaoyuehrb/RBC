%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 19:29:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGACCCCAACUGCUCCUGCGCCACUGGUGGCUCCUGCACCUGCACUGGCUCCUGCAAAUGCAAAGAGUGCAAAUGCACCUCCUGCAAGAAGAGCUGCUGCUCCUGCUGCCCCAUGAGCUGUGCCAAGUGUGCCCAGGGCUGCAUCUGCAAAGGGGCAUCAGAGAAGUGCAGCUGCUGUGCCUGA\
) } def
/len { sequence length } bind def

/coor [
[18.89271164 311.53924561]
[12.85318661 297.80883789]
[13.12962341 282.81439209]
[3.98987412 294.70828247]
[-5.14987516 306.60217285]
[-14.18939495 318.57244873]
[-23.12804604 330.61822510]
[-31.96520042 342.73864746]
[-40.70023346 354.93286133]
[-49.43526459 367.12710571]
[-45.62488937 385.66839600]
[-56.37498093 400.85934448]
[-74.49617767 403.34646606]
[-82.81663513 415.82723999]
[-91.13708496 428.30804443]
[-91.65192413 444.69909668]
[-106.23031616 452.20925903]
[-119.87526703 443.11270142]
[-118.55001831 426.76718140]
[-103.61787415 419.98757935]
[-95.29741669 407.50677490]
[-86.97696686 395.02600098]
[-91.59293365 384.56582642]
[-90.56619263 373.05816650]
[-84.03711700 363.38140869]
[-73.53682709 358.01226807]
[-61.62949371 358.39205933]
[-52.89446259 346.19784546]
[-44.15942764 334.00360107]
[-42.81740952 326.71981812]
[-35.17381287 321.67956543]
[-26.23516273 309.63378906]
[-24.77097130 302.37356567]
[-17.04378128 297.46243286]
[-7.90403128 285.56854248]
[1.23571825 273.67462158]
[2.34118676 263.54077148]
[11.76380444 256.98602295]
[18.56243324 243.61521912]
[25.36106110 230.24440002]
[24.23266029 215.39260864]
[37.38441086 206.59817505]
[44.18304062 193.22735596]
[50.98166656 179.85655212]
[57.78029633 166.48573303]
[64.57892609 153.11491394]
[71.37755585 139.74411011]
[78.17617798 126.37329102]
[55.55820465 112.62411499]
[44.89514160 81.37274170]
[30.27927399 77.99983978]
[14.76392365 83.31076813]
[2.58641934 72.32712555]
[6.27393341 56.34794235]
[22.03306770 51.81123352]
[33.65217590 63.38397598]
[48.26804352 66.75688171]
[52.37570190 60.48175812]
[45.61451340 47.09197617]
[60.59102631 47.93152237]
[64.69868469 41.65640259]
[55.76003647 29.61063576]
[46.82138443 17.56486893]
[37.88273239 5.51910162]
[20.82616997 -1.39466095]
[19.47469521 -18.88262177]
[10.33494568 -30.77652740]
[2.60775447 -35.68766022]
[1.14356399 -42.94788361]
[-7.79508781 -54.99365234]
[-16.73373985 -67.03942108]
[-25.67239189 -79.08518219]
[-40.92712402 -85.10391998]
[-43.07415009 -101.36191559]
[-29.90479660 -111.13433075]
[-14.96656418 -104.36814880]
[-13.62662506 -88.02383423]
[-4.68797302 -75.97807312]
[4.25067902 -63.93230438]
[13.18933105 -51.88653564]
[22.22885132 -39.91627884]
[31.36859894 -28.02237129]
[43.33037567 -26.13581085]
[51.04060745 -16.28338623]
[49.92849731 -3.41955018]
[58.86714935 8.62621689]
[67.80580139 20.67198372]
[76.74445343 32.71775055]
[84.03796387 30.96997452]
[80.54264832 16.38289833]
[95.12978363 12.88782692]
[98.62498474 27.47441864]
[105.91848755 25.72664261]
[108.42664337 10.93782425]
[110.93480682 -3.85099435]
[113.44296265 -18.63981247]
[107.22943878 -33.81624603]
[117.47847748 -46.61817169]
[133.64674377 -43.87606049]
[139.10171509 -28.41076660]
[128.23178101 -16.13165665]
[125.72362518 -1.34283757]
[123.21546173 13.44598103]
[120.70730591 28.23479843]
[131.53428650 38.61634064]
[146.20475769 35.48944855]
[160.87522888 32.36255646]
[172.75930786 21.91846275]
[186.81988525 26.83266258]
[201.49035645 23.70577049]
[216.16081238 20.57888031]
[230.83128357 17.45198822]
[245.50175476 14.32509708]
[260.17221069 11.19820595]
[273.54675293 -1.44490695]
[290.01577759 4.59050941]
[304.63165283 1.21760774]
[319.21865845 -2.27794647]
[333.77581787 -5.89590645]
[345.30233765 -16.73333740]
[359.52005005 -12.29425526]
[374.07720947 -15.91221619]
[388.63433838 -19.53017616]
[403.16058350 -23.27028656]
[417.65487671 -27.13228416]
[432.14920044 -30.99428177]
[440.10198975 -44.38795471]
[454.85632324 -48.09809494]
[467.57611084 -40.43376160]
[475.27954102 -54.23350143]
[490.50714111 -58.46380615]
[504.22467041 -50.61491394]
[508.29376221 -35.34343338]
[500.30026245 -21.70965958]
[484.98660278 -17.80227089]
[471.43811035 -25.93945122]
[464.21823120 -12.96220398]
[449.57397461 -8.83911228]
[436.01119995 -16.49997330]
[421.51687622 -12.63797569]
[407.02258301 -8.77597809]
[401.35687256 -4.00581264]
[392.25228882 -4.97303486]
[377.69515991 -1.35507452]
[363.13800049 2.26288557]
[352.65270996 12.84153461]
[337.39376831 8.66123486]
[322.83660889 12.27919483]
[317.09158325 16.95350838]
[308.00454712 15.83347321]
[293.38867188 19.20637512]
[286.70349121 29.30348206]
[274.53848267 32.22411346]
[263.29910278 25.86867142]
[248.62864685 28.99556160]
[233.95817566 32.12245178]
[219.28770447 35.24934387]
[204.61724854 38.37623596]
[189.94677734 41.50312805]
[179.11203003 51.72356796]
[164.00212097 47.03302383]
[149.33164978 50.15991592]
[134.66117859 53.28680420]
[150.63516235 87.38047028]
[141.72172546 119.84284973]
[117.08126831 136.40820312]
[91.54699707 133.17192078]
[84.74836731 146.54273987]
[77.94973755 159.91354370]
[71.15110779 173.28436279]
[64.35247803 186.65516663]
[57.55385208 200.02598572]
[50.75522232 213.39680481]
[51.39734268 229.20497131]
[38.73187637 237.04302979]
[31.93324661 250.41384888]
[25.13461876 263.78466797]
[38.55141830 257.07723999]
[53.54434204 256.61654663]
[67.34764862 262.48757935]
[77.41503143 273.60726929]
[81.88938141 287.92440796]
[79.94529724 302.79788208]
[71.94140625 315.48400879]
[59.35419846 323.64257812]
[44.50562286 325.76855469]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 36]
[4 35]
[5 34]
[6 32]
[7 31]
[8 29]
[9 28]
[10 27]
[13 22]
[14 21]
[15 20]
[38 177]
[39 176]
[40 175]
[42 173]
[43 172]
[44 171]
[45 170]
[46 169]
[47 168]
[48 167]
[50 57]
[51 56]
[61 88]
[62 87]
[63 86]
[64 85]
[66 82]
[67 81]
[69 80]
[70 79]
[71 78]
[72 77]
[93 104]
[94 103]
[95 102]
[96 101]
[105 163]
[106 162]
[107 161]
[109 159]
[110 158]
[111 157]
[112 156]
[113 155]
[114 154]
[116 151]
[117 150]
[118 148]
[119 147]
[121 145]
[122 144]
[123 143]
[124 141]
[125 140]
[126 139]
[129 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
