%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 02:44:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGAUCAGGUAAUGCAGUUUGUUGAGCCAAGUCGGCAGUUUGUAAAGGACUCCAUUCGGCUGGUUAAAAGAUGCACUAAACCUGAUAGAAAAGAAUUCCAGAAGAUUGCCAUGGCAACAGCAAUAGGAUUUGCUAUAAUGGGAUUCAUUGGCUUCUUUGUGAAAUUGAUCCAUAUUCCUAUUAAUAACAUCAUUGUUGGUGGCUGA\
) } def
/len { sequence length } bind def

/coor [
[143.49810791 195.61048889]
[136.32745361 182.43544006]
[129.15679932 169.26040649]
[121.98615265 156.08535767]
[114.81550598 142.91030884]
[107.64485168 129.73527527]
[100.47419739 116.56022644]
[86.93867493 110.09574890]
[72.18437958 112.79956818]
[57.43007660 115.50339508]
[42.67577744 118.20722198]
[32.51874161 134.19721985]
[14.21378803 137.62884521]
[-0.53065604 126.78195190]
[-15.19655991 129.93017578]
[-29.86246300 133.07838440]
[-44.52836609 136.22660828]
[-58.85367203 150.40710449]
[-76.98098755 143.68141174]
[-91.54512024 147.27114868]
[-106.10924530 150.86087036]
[-120.67337036 154.45060730]
[-132.22088623 165.26568604]
[-146.42997742 160.79904175]
[-157.97747803 171.61410522]
[-172.18658447 167.14747620]
[-186.75070190 170.73721313]
[-201.31483459 174.32695007]
[-215.87896729 177.91668701]
[-227.42646790 188.73175049]
[-241.63557434 184.26512146]
[-256.19970703 187.85485840]
[-270.76382446 191.44458008]
[-278.34930420 196.53791809]
[-285.57501221 194.97679138]
[-300.19171143 198.34614563]
[-307.85324097 203.32432556]
[-315.05456543 201.65425110]
[-329.72045898 204.80247498]
[-344.38635254 207.95068359]
[-359.05227661 211.09890747]
[-373.71817017 214.24711609]
[-383.60113525 226.88461304]
[-399.64419556 226.89305115]
[-409.54046631 214.26596069]
[-405.69839478 198.68975830]
[-391.06527710 192.11318970]
[-376.86639404 199.58120728]
[-362.20046997 196.43299866]
[-347.53457642 193.28477478]
[-332.86868286 190.13656616]
[-318.20275879 186.98834229]
[-303.56106567 183.72946167]
[-288.94436646 180.36010742]
[-274.35354614 176.88046265]
[-259.78942871 173.29072571]
[-245.22529602 169.70098877]
[-234.71951294 159.14268494]
[-219.46870422 163.35255432]
[-204.90457153 159.76281738]
[-190.34043884 156.17308044]
[-175.77632141 152.58335876]
[-165.27053833 142.02505493]
[-150.01971436 146.23492432]
[-139.51393127 135.67662048]
[-124.26310730 139.88648987]
[-109.69898224 136.29675293]
[-95.13484955 132.70701599]
[-80.57072449 129.11727905]
[-76.09080505 119.93022919]
[-67.10425568 114.61508942]
[-56.45663452 115.13546753]
[-47.67658234 121.56069946]
[-33.01068115 118.41248322]
[-18.34477615 115.26426697]
[-3.67887259 112.11605072]
[0.29310527 101.41782379]
[9.02729416 93.88834381]
[20.42859077 91.48650360]
[31.68739891 94.92243195]
[39.97195435 103.45292664]
[54.72625351 100.74909973]
[69.48055267 98.04527283]
[84.23484802 95.34144592]
[69.71984100 91.55797577]
[61.23870087 79.18582153]
[62.94427109 64.28310394]
[74.00141907 54.14704895]
[88.99591827 53.74085617]
[100.58560181 63.26342010]
[103.09555817 78.05158997]
[111.98549652 65.96982574]
[120.87542725 53.88805771]
[129.76536560 41.80629349]
[138.65528870 29.72452545]
[147.54522705 17.64275742]
[146.37979126 4.79580784]
[154.03489685 -5.08450890]
[165.97471619 -7.03454924]
[175.04611206 -18.98067093]
[184.11750793 -30.92679405]
[193.18890381 -42.87291718]
[192.21762085 -55.73600388]
[200.02108765 -65.49957275]
[211.98899841 -67.26906586]
[221.23977661 -79.07681274]
[223.65992737 -94.71182251]
[237.59976196 -99.95877838]
[240.01991272 -115.59378815]
[253.95973206 -120.84074402]
[263.21051025 -132.64849854]
[272.46130371 -144.45625305]
[281.71209717 -156.26400757]
[276.69577026 -166.57624817]
[275.89468384 -177.96437073]
[279.38641357 -188.77964783]
[286.62979126 -197.47056580]
[296.54840088 -202.80541992]
[307.69046021 -204.04682922]
[318.44119263 -201.05343628]
[328.21731567 -212.43003845]
[337.99346924 -223.80665588]
[347.76959229 -235.18325806]
[357.54571533 -246.55987549]
[356.10357666 -262.29821777]
[366.27658081 -274.39306641]
[382.02929688 -275.66876221]
[394.01589966 -265.36843872]
[395.12496948 -249.60310364]
[384.69851685 -237.72605896]
[368.92233276 -236.78373718]
[359.14620972 -225.40713501]
[349.37008667 -214.03051758]
[339.59393311 -202.65391541]
[329.81781006 -191.27729797]
[335.17236328 -173.37382507]
[328.60461426 -155.71868896]
[312.59780884 -145.50601196]
[293.51983643 -147.01321411]
[284.26904297 -135.20547485]
[275.01828003 -123.39771271]
[265.76748657 -111.58996582]
[264.00900269 -96.79953003]
[249.40751648 -90.70800018]
[247.64903259 -75.91756439]
[233.04753113 -69.82603455]
[223.79675293 -58.01828003]
[222.27210999 -40.53665161]
[205.13502502 -33.80152130]
[196.06362915 -21.85540009]
[186.99223328 -9.90927887]
[177.92083740 2.03684354]
[176.66040039 19.53950691]
[159.62699890 26.53269196]
[150.73706055 38.61445999]
[141.84712219 50.69622421]
[132.95719910 62.77799225]
[124.06726074 74.85975647]
[115.17733002 86.94152832]
[126.17404938 76.73995209]
[141.00282288 74.47998810]
[154.53923035 80.94261932]
[162.10546875 93.89453125]
[161.08685303 108.85990143]
[151.83538818 120.66711426]
[137.54811096 125.23592377]
[123.16233826 120.98747253]
[113.64924622 109.38957977]
[120.81989288 122.56462097]
[127.99054718 135.73966980]
[135.16119385 148.91470337]
[142.33184814 162.08975220]
[149.50250244 175.26478577]
[156.67315674 188.43983459]
[173.20478821 188.68522644]
[187.27662659 197.18481445]
[195.09748840 211.53804016]
[194.61625671 227.78269958]
[186.05886841 241.48849487]
[193.42768860 254.55374146]
[200.79650879 267.61898804]
[208.16532898 280.68420410]
[215.53414917 293.74945068]
[222.90296936 306.81469727]
[230.27178955 319.87994385]
[237.64060974 332.94519043]
[245.00942993 346.01040649]
[252.37825012 359.07565308]
[267.38375854 364.75146484]
[272.16467285 380.06558228]
[263.05346680 393.27035522]
[247.03952026 394.23620605]
[236.40733337 382.22219849]
[239.31300354 366.44448853]
[231.94418335 353.37924194]
[224.57536316 340.31399536]
[217.20654297 327.24874878]
[209.83773804 314.18353271]
[202.46891785 301.11828613]
[195.10009766 288.05303955]
[187.73127747 274.98779297]
[180.36245728 261.92254639]
[172.99363708 248.85731506]
[159.35658264 249.62017822]
[146.66047668 244.40747070]
[137.40507507 234.18389893]
[133.43914795 220.90666199]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 174]
[2 173]
[3 172]
[4 171]
[5 170]
[6 169]
[7 168]
[8 84]
[9 83]
[10 82]
[11 81]
[14 76]
[15 75]
[16 74]
[17 73]
[19 69]
[20 68]
[21 67]
[22 66]
[24 64]
[26 62]
[27 61]
[28 60]
[29 59]
[31 57]
[32 56]
[33 55]
[35 54]
[36 53]
[38 52]
[39 51]
[40 50]
[41 49]
[42 48]
[91 159]
[92 158]
[93 157]
[94 156]
[95 155]
[96 154]
[99 152]
[100 151]
[101 150]
[102 149]
[105 147]
[106 146]
[108 144]
[110 142]
[111 141]
[112 140]
[113 139]
[120 135]
[121 134]
[122 133]
[123 132]
[124 131]
[179 203]
[180 202]
[181 201]
[182 200]
[183 199]
[184 198]
[185 197]
[186 196]
[187 195]
[188 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
