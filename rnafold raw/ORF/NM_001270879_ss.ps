%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 11:13:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAAAAAGUCUCCAGAGAUUAUCAGUGGGCGGAUGACAUUUGCCCUCUGUUGCUAUUCUUUGACAUUCAUGAGAUUUGCCUACAAGGUACAGCCUCGGAACUGGCUUCUGUUUGCAUGCCACGCAACAAAUGAAGUAGCCCAGCUCAUCCAGGGAGGGCGGCUUAUCAAACACGAGAUGACUAAAACGGCAUCUGCAUAA\
) } def
/len { sequence length } bind def

/coor [
[162.66076660 250.17607117]
[171.84579468 240.35266113]
[164.89083862 227.06250000]
[157.93588257 213.77232361]
[146.48500061 209.85903931]
[140.58358765 198.83755493]
[143.87828064 186.36238098]
[137.13085938 172.96566772]
[130.38343811 159.56893921]
[123.63600922 146.17221069]
[116.88858032 132.77548218]
[99.98516083 134.90116882]
[84.89089966 129.26091003]
[74.76351929 117.93763733]
[60.79635620 123.40740967]
[46.82919312 128.87718201]
[32.86203384 134.34695435]
[18.89487267 139.81672668]
[4.92771196 145.28649902]
[2.79079676 163.61564636]
[-8.29788876 178.25918579]
[-25.20387268 185.22073364]
[-43.22030258 182.65539551]
[-57.37833405 171.35783386]
[-71.07518005 177.47308350]
[-84.77203369 183.58834839]
[-94.21891785 196.27955627]
[-108.99485779 194.40315247]
[-122.69170380 200.51840210]
[-136.38854980 206.63365173]
[-150.08540344 212.74891663]
[-163.78225708 218.86416626]
[-177.47909546 224.97941589]
[-191.17594910 231.09468079]
[-204.87280273 237.20993042]
[-216.87088013 249.18833923]
[-231.70257568 240.97509766]
[-227.91612244 224.44938660]
[-210.98805237 223.51307678]
[-197.29119873 217.39782715]
[-183.59436035 211.28257751]
[-169.89750671 205.16731262]
[-156.20065308 199.05206299]
[-142.50381470 192.93681335]
[-128.80696106 186.82154846]
[-115.11010742 180.70629883]
[-106.64291382 168.45248413]
[-90.88728333 169.89149475]
[-77.19043732 163.77624512]
[-63.49358749 157.66099548]
[-63.92124557 145.88043213]
[-60.33804703 134.61355591]
[-53.14206696 125.18912506]
[-43.15888596 118.72691345]
[-31.54691505 116.00459290]
[-19.66300774 117.36427307]
[-8.90390110 122.66965485]
[-0.54206103 131.31933594]
[13.42510033 125.84956360]
[27.39226151 120.37979126]
[41.35942078 114.91001892]
[55.32658386 109.44024658]
[69.29374695 103.97047424]
[69.57640839 84.93121338]
[81.56698608 67.98781586]
[74.20207214 54.92036819]
[66.73577118 41.91059113]
[59.16852951 28.95926666]
[51.60128403 16.00794029]
[44.56476974 10.17177391]
[44.01886368 2.79583097]
[36.65395355 -10.27161217]
[29.28904152 -23.33905602]
[21.92413139 -36.40650177]
[5.10006714 -38.11824417]
[-7.26766300 -49.40657425]
[-10.44077969 -65.67868805]
[-3.36368322 -80.48690796]
[-10.93092632 -93.43823242]
[-18.49816895 -106.38955688]
[-26.06541252 -119.34088135]
[-33.63265610 -132.29220581]
[-46.84376526 -142.91778564]
[-40.29064178 -158.55404663]
[-23.45135880 -156.58557129]
[-20.68132973 -139.85945129]
[-13.11408615 -126.90812683]
[-5.54684353 -113.95680237]
[2.02039957 -101.00547028]
[9.58764267 -88.05414581]
[22.94208527 -87.96502686]
[34.60121918 -81.23322296]
[41.46456146 -69.52536011]
[41.64616394 -55.84701920]
[34.99157333 -43.77141190]
[42.35648727 -30.70396805]
[49.72139740 -17.63652420]
[57.08630753 -4.56908035]
[64.55261230 8.44069767]
[72.11985779 21.39202309]
[79.68709564 34.34334946]
[85.78024292 38.53573227]
[87.26951599 47.55545807]
[94.63442993 60.62290192]
[109.61221313 61.43900299]
[118.35332489 49.24913406]
[127.09444427 37.05926514]
[135.83555603 24.86939621]
[144.57667542 12.67952728]
[147.03713989 3.87501264]
[153.54972839 0.36948177]
[162.47937012 -11.68297291]
[171.40899658 -23.73542595]
[180.33862305 -35.78787994]
[189.26826477 -47.84033585]
[188.14547729 -60.69430161]
[195.83708191 -70.55020142]
[207.78701782 -72.45692444]
[216.90301514 -84.36904907]
[226.01899719 -96.28117371]
[230.84330750 -112.53424835]
[247.79670715 -112.39777374]
[252.35873413 -96.06914520]
[237.93112183 -87.16518402]
[228.81513977 -75.25305939]
[219.69914246 -63.34093857]
[218.37573242 -45.84501266]
[201.32070923 -38.91070175]
[192.39108276 -26.85824776]
[183.46145630 -14.80579376]
[174.53181458 -2.75333953]
[165.60218811 9.29911518]
[156.76654053 21.42064285]
[148.02542114 33.61051178]
[139.28431702 45.80038071]
[130.54319763 57.99024963]
[121.80207825 70.18011475]
[132.45388794 82.42869568]
[136.81906128 98.04729462]
[151.79005432 97.11475372]
[166.76103210 96.18220520]
[181.73200989 95.24966431]
[190.84123230 86.11143494]
[203.33457947 85.64670563]
[212.49017334 93.55945587]
[227.47384644 92.85985565]
[242.45751953 92.16024780]
[254.27980042 81.31527710]
[270.10687256 83.93883514]
[277.79757690 98.01834869]
[271.45227051 112.75321960]
[255.93850708 116.84011841]
[243.15713501 107.14392090]
[228.17346191 107.84352875]
[213.18977356 108.54313660]
[198.95416260 118.80012512]
[182.66456604 110.22064972]
[167.69357300 111.15319061]
[152.72259521 112.08573914]
[137.75161743 113.01828003]
[130.28530884 126.02806091]
[137.03273010 139.42478943]
[143.78015137 152.82150269]
[150.52758789 166.21823120]
[157.27500916 179.61495972]
[172.90054321 189.35154724]
[171.22605896 206.81736755]
[178.18101501 220.10754395]
[185.13597107 233.39770508]
[201.90864563 231.63241577]
[218.03848267 236.43127441]
[231.06138611 247.03170776]
[238.99917603 261.78717041]
[240.66014099 278.42276001]
[235.81776428 294.38604736]
[225.24124146 307.23852539]
[232.60614014 320.30596924]
[239.97105408 333.37341309]
[247.33596802 346.44085693]
[254.70088196 359.50830078]
[261.64578247 365.45321655]
[262.07690430 372.83676147]
[269.23770142 386.01715088]
[284.15136719 391.93008423]
[288.68893433 407.31805420]
[279.36959839 420.37673950]
[263.34234619 421.08865356]
[252.90190125 408.90762329]
[256.05731201 393.17794800]
[248.89651489 379.99755859]
[241.63343811 366.87322998]
[234.26852417 353.80578613]
[226.90361023 340.73834229]
[219.53869629 327.67089844]
[212.17379761 314.60345459]
[199.13256836 317.03662109]
[185.95381165 315.32797241]
[173.92306519 309.63006592]
[164.21823120 300.48516846]
[157.79429626 288.77392578]
[155.28932190 275.63027954]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 169]
[3 168]
[4 167]
[7 165]
[8 164]
[9 163]
[10 162]
[11 161]
[14 63]
[15 62]
[16 61]
[17 60]
[18 59]
[19 58]
[24 50]
[25 49]
[26 48]
[28 46]
[29 45]
[30 44]
[31 43]
[32 42]
[33 41]
[34 40]
[35 39]
[65 104]
[66 103]
[67 101]
[68 100]
[69 99]
[71 98]
[72 97]
[73 96]
[74 95]
[78 90]
[79 89]
[80 88]
[81 87]
[82 86]
[105 137]
[106 136]
[107 135]
[108 134]
[109 133]
[111 132]
[112 131]
[113 130]
[114 129]
[115 128]
[118 126]
[119 125]
[120 124]
[139 160]
[140 159]
[141 158]
[142 157]
[145 155]
[146 154]
[147 153]
[176 195]
[177 194]
[178 193]
[179 192]
[180 191]
[182 190]
[183 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
