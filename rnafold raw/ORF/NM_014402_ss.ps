%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 02:21:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGGCCGCGAGUUUGGGAAUCUGACGCGGAUGCGGCAUGUGAUCAGCUACAGCUUGUCACCGUUCGAGCAGCGCGCCUAUCCGCACGUCUUCACUAAAGGAAUCCCCAAUGUUCUGCGCCGCAUUCGGGAGUCUUUCUUUCGCGUGGUGCCGCAGUUUGUAGUGUUUUAUCUUAUCUACACAUGGGGGACUGAAGAGUUCGAGAGAUCCAAGAGGAAGAAUCCAGCUGCCUAUGAAAAUGACAAAUGA\
) } def
/len { sequence length } bind def

/coor [
[122.75205231 259.29577637]
[119.94132996 244.56146240]
[117.13061523 229.82714844]
[114.31989288 215.09284973]
[111.50917053 200.35853577]
[108.69845581 185.62422180]
[98.71334839 174.57221985]
[103.72770691 159.56665039]
[100.91698456 144.83235168]
[80.67436218 140.46356201]
[64.55342102 127.46488953]
[55.99237061 108.60863495]
[40.99710464 108.98558807]
[26.00184250 109.36254120]
[12.40046883 117.44419098]
[-0.51722318 110.02917480]
[-15.51248646 110.40612793]
[-30.50774956 110.78308105]
[-45.50300980 111.16002655]
[-59.10438538 119.24168396]
[-72.02207947 111.82666779]
[-87.01734161 112.20362091]
[-102.01260376 112.58056641]
[-116.96259308 113.80442810]
[-131.81951904 115.87128448]
[-146.67643738 117.93813324]
[-161.50621033 120.19152069]
[-176.30650330 122.63108063]
[-191.10679626 125.07063293]
[-205.90707397 127.51019287]
[-220.70736694 129.94975281]
[-235.50765991 132.38931274]
[-250.30795288 134.82887268]
[-258.24246216 139.30187988]
[-265.30944824 137.20486450]
[-280.13922119 139.45825195]
[-294.96899414 141.71163940]
[-300.03567505 155.14006042]
[-314.01208496 163.34304810]
[-331.89102173 160.75225830]
[-346.21398926 165.20787048]
[-360.53695679 169.66349792]
[-374.85992432 174.11912537]
[-389.18289185 178.57475281]
[-400.06188965 190.06204224]
[-414.51300049 186.45449829]
[-428.83596802 190.91012573]
[-443.15893555 195.36575317]
[-453.88079834 207.77436829]
[-469.93487549 204.42791748]
[-474.80609131 188.76895142]
[-463.48339844 176.90606689]
[-447.61456299 181.04278564]
[-433.29159546 176.58715820]
[-418.96862793 172.13153076]
[-409.11410522 160.96293640]
[-393.63851929 164.25178528]
[-379.31555176 159.79615784]
[-364.99258423 155.34053040]
[-350.66958618 150.88490295]
[-336.34661865 146.42929077]
[-337.57049561 131.47929382]
[-352.42739868 129.41244507]
[-367.28433228 127.34558868]
[-382.14126587 125.27873230]
[-395.75573730 133.76551819]
[-410.83078003 128.27708435]
[-415.80209351 113.02370453]
[-406.85610962 99.70645905]
[-390.85543823 98.54119873]
[-380.07440186 110.42181396]
[-365.21746826 112.48867035]
[-350.36056519 114.55551910]
[-335.50363159 116.62237549]
[-311.69046021 112.58787537]
[-297.22238159 126.88185883]
[-282.39260864 124.62847900]
[-267.56283569 122.37509155]
[-252.74749756 120.02857971]
[-237.94721985 117.58901978]
[-223.14692688 115.14945984]
[-208.34663391 112.70990753]
[-193.54634094 110.27034760]
[-178.74606323 107.83078766]
[-163.94577026 105.39123535]
[-160.49661255 102.12118530]
[-154.96450806 100.96717072]
[-148.74328613 103.08121490]
[-133.88636780 101.01435852]
[-119.02944946 98.94750977]
[-132.07270813 91.53984833]
[-139.12007141 78.29845428]
[-137.97956848 63.34187317]
[-129.00592041 51.32215500]
[-114.99026489 45.97786713]
[-100.29198456 48.97127533]
[-89.48277283 59.37132645]
[-85.92469788 73.94322205]
[-90.72444916 88.15457153]
[-102.38955688 97.58530426]
[-87.39429474 97.20835114]
[-72.39903259 96.83140564]
[-59.87021637 88.77671051]
[-45.87996292 96.16476440]
[-30.88470078 95.78781128]
[-15.88943768 95.41086578]
[-0.89417458 95.03391266]
[11.63463879 86.97921753]
[25.62489128 94.36727142]
[40.62015533 93.99032593]
[55.61541748 93.61337280]
[57.83666611 77.93502045]
[65.71066284 63.15214157]
[78.83052826 51.32379150]
[96.03903961 44.31418228]
[115.52196503 43.52141190]
[134.99810791 49.64982224]
[138.36216736 35.03191757]
[141.72622681 20.41401482]
[145.09030151 5.79611158]
[148.45436096 -8.82179165]
[151.81842041 -23.43969536]
[155.18247986 -38.05759811]
[148.90530396 -46.90131378]
[148.52494812 -57.52026367]
[153.92601013 -66.41542816]
[163.12736511 -70.78756714]
[166.85771179 -85.31631470]
[170.58805847 -99.84506226]
[174.31840515 -114.37380981]
[178.04875183 -128.90255737]
[181.77909851 -143.43130493]
[174.88302612 -157.91659546]
[182.03770447 -172.27592468]
[197.75468445 -175.49403381]
[209.97723389 -165.10226440]
[209.32926941 -149.07231140]
[196.30784607 -139.70095825]
[192.57749939 -125.17221069]
[188.84715271 -110.64346313]
[185.11680603 -96.11471558]
[181.38645935 -81.58596802]
[177.65611267 -67.05722046]
[184.18379211 -48.84075928]
[169.80038452 -34.69353485]
[166.43632507 -20.07563400]
[163.07226562 -5.45773029]
[159.70819092 9.16017246]
[156.34413147 23.77807617]
[152.98007202 38.39598083]
[149.61601257 53.01388168]
[161.35188293 62.35569763]
[170.38172913 49.36445618]
[185.21080017 50.76013565]
[198.70187378 44.20339966]
[201.60404968 31.06632423]
[211.39401245 22.12386131]
[224.35375977 20.46921921]
[235.73263550 26.48344231]
[249.30503845 20.09675217]
[262.87744141 13.71006298]
[276.44985962 7.32337332]
[290.02224731 0.93668395]
[303.55426025 -5.53515673]
[317.04534912 -12.09189320]
[319.62850952 -27.39244652]
[330.73529053 -38.22843933]
[346.09494019 -40.43321228]
[359.80133057 -33.15898514]
[366.58410645 -19.20284653]
[363.83511353 -3.93121624]
[352.61141968 6.78365231]
[337.22875977 8.82167339]
[323.60208130 1.39918554]
[310.11102295 7.95592213]
[305.48068237 13.69176579]
[296.40896606 14.50908947]
[282.83654785 20.89577866]
[269.26412964 27.28246880]
[255.69172668 33.66915894]
[242.11932373 40.05584717]
[237.09318542 56.11699295]
[221.69732666 63.71210098]
[205.25862122 57.69447708]
[191.76753235 64.25121307]
[183.70265198 76.77347565]
[167.90861511 75.84677887]
[169.97546387 90.70369720]
[184.74392700 93.32904816]
[199.51239014 95.95439148]
[214.28086853 98.57973480]
[229.04933167 101.20508575]
[244.27455139 95.11209869]
[256.99481201 105.46232605]
[254.12457275 121.60833740]
[238.61651611 126.94050598]
[226.42398071 115.97354889]
[211.65551758 113.34819794]
[196.88705444 110.72285461]
[182.11859131 108.09751129]
[167.35012817 105.47216034]
[161.47952271 119.27564240]
[173.61477661 128.09242249]
[187.62919617 121.96518707]
[202.72920227 123.66418457]
[214.87069702 132.63362122]
[220.85240173 146.38407898]
[219.15968323 161.18273926]
[231.29493713 169.99951172]
[243.43019104 178.81629944]
[259.78717041 179.99142456]
[266.70358276 194.86068726]
[257.06442261 208.12788391]
[240.78561401 206.14483643]
[234.61341858 190.95155334]
[222.47816467 182.13476562]
[210.34291077 173.31799316]
[196.79162598 179.50090027]
[181.86570740 178.06108093]
[169.58334351 169.28555298]
[163.30134583 155.44961548]
[164.79798889 140.22767639]
[152.66273499 131.41090393]
[140.33828735 138.59303284]
[127.66941833 142.04672241]
[115.65129852 142.02162170]
[118.46201324 156.75593567]
[128.64816284 168.86184692]
[123.43276215 182.81350708]
[126.24348450 197.54782104]
[129.05419922 212.28211975]
[131.86491394 227.01643372]
[134.67564392 241.75074768]
[137.48635864 256.48504639]
[152.45367432 258.88406372]
[165.69631958 266.26025391]
[175.61520386 277.72286987]
[181.01254272 291.88778687]
[181.23660278 307.04446411]
[176.26031494 321.36273193]
[166.68460083 333.11352539]
[153.66577148 340.87792969]
[138.77590942 343.71832275]
[123.81304169 341.29171753]
[110.58400726 333.89114380]
[100.68627167 322.41027832]
[95.31504059 308.23544312]
[95.11891937 293.07836914]
[100.12158203 278.76928711]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 234]
[2 233]
[3 232]
[4 231]
[5 230]
[6 229]
[8 227]
[9 226]
[12 111]
[13 110]
[14 109]
[16 107]
[17 106]
[18 105]
[19 104]
[21 102]
[22 101]
[23 100]
[24 90]
[25 89]
[26 88]
[27 85]
[28 84]
[29 83]
[30 82]
[31 81]
[32 80]
[33 79]
[35 78]
[36 77]
[37 76]
[40 61]
[41 60]
[42 59]
[43 58]
[44 57]
[46 55]
[47 54]
[48 53]
[62 74]
[63 73]
[64 72]
[65 71]
[117 151]
[118 150]
[119 149]
[120 148]
[121 147]
[122 146]
[123 145]
[127 143]
[128 142]
[129 141]
[130 140]
[131 139]
[132 138]
[152 187]
[154 185]
[155 184]
[159 181]
[160 180]
[161 179]
[162 178]
[163 177]
[164 175]
[165 174]
[188 201]
[189 200]
[190 199]
[191 198]
[192 197]
[202 223]
[203 222]
[208 217]
[209 216]
[210 215]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
