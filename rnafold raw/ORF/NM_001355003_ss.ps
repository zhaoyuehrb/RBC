%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 07:24:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGGGGCUCAGCUAAGCGGCGGCCGCGGCGCCCCGGAGCCUGCGCAAACCCAGCCCCAGCCCCAGCCCCAGCCUGCGGCGCCGGAGGGCCCGGAACAGCCCCGGCAUCCGCCCCAGCCCCAGCCCCAGCCCCAGCCCCAGCCCCAGCCCGAGCCCAGCCCGUGGGGGCCGCUGGACGACGUGCGCUUCCUCAUCGCCUGCACUUCCUGGUACUGA\
) } def
/len { sequence length } bind def

/coor [
[-54.72048569 85.61663055]
[-67.49015808 77.67329407]
[-75.51157379 65.02552032]
[-77.23897552 50.21060944]
[-91.45018005 45.41044235]
[-105.66139221 40.61027527]
[-119.87259674 35.81011200]
[-134.08380127 31.00994492]
[-148.29501343 26.20977783]
[-163.83042908 34.25621796]
[-180.05841064 28.68495750]
[-187.09262085 13.40664482]
[-201.37182617 8.81271648]
[-215.65103149 4.21878719]
[-231.06834412 12.48928738]
[-247.37527466 7.15354204]
[-254.62992859 -8.02133560]
[-268.97415161 -12.40806580]
[-283.31835938 -16.79479408]
[-297.66259766 -21.18152428]
[-311.49508667 -14.01913452]
[-325.97967529 -18.67224121]
[-332.72265625 -31.90354919]
[-347.06689453 -36.29027939]
[-361.41110229 -40.67700958]
[-375.75531006 -45.06373596]
[-391.21493530 -41.70054245]
[-401.12301636 -52.82165146]
[-415.46722412 -57.20838165]
[-429.81146240 -61.59511185]
[-443.18322754 -51.23344421]
[-459.92996216 -50.88880539]
[-473.44573975 -60.49895096]
[-478.51715088 -76.11386871]
[-492.92337036 -80.29248047]
[-507.32958984 -84.47109222]
[-521.73583984 -88.64969635]
[-530.84490967 -88.03462982]
[-536.31951904 -92.99448395]
[-550.66375732 -97.38121033]
[-565.00799561 -101.76794434]
[-579.35217285 -106.15467072]
[-594.31292725 -107.23952484]
[-609.13995361 -104.96810913]
[-615.32507324 -90.83489990]
[-628.18200684 -82.30825806]
[-643.60803223 -82.10900879]
[-656.68090820 -90.30072784]
[-663.22900391 -104.26946259]
[-661.16290283 -119.55785370]
[-651.14190674 -131.28741455]
[-636.36364746 -135.71530151]
[-621.54382324 -131.42858887]
[-611.41137695 -119.79513550]
[-596.58435059 -122.06655121]
[-594.09838867 -136.85980225]
[-591.61267090 -151.65173340]
[-604.88287354 -158.64476013]
[-620.69873047 -158.23339844]
[-628.35113525 -171.01188660]
[-641.62127686 -178.00491333]
[-654.94171143 -184.90170288]
[-668.31176758 -191.70188904]
[-681.73065186 -198.40510559]
[-695.19775391 -205.01101685]
[-708.66479492 -211.61692810]
[-722.17932129 -218.12518311]
[-738.47009277 -216.24279785]
[-748.02709961 -229.56930542]
[-741.01885986 -244.39555359]
[-724.65496826 -245.46955872]
[-715.76904297 -231.68647766]
[-708.38183594 -231.66990662]
[-702.05889893 -225.08399963]
[-688.59179688 -218.47808838]
[-675.12475586 -211.87217712]
[-667.73852539 -211.74865723]
[-661.51159668 -205.07189941]
[-648.14154053 -198.27172852]
[-640.75787354 -198.04130554]
[-634.62823486 -191.27510071]
[-621.35809326 -184.28207397]
[-606.49139404 -185.19361877]
[-597.88983154 -171.91493225]
[-584.61962891 -164.92190552]
[-568.77984619 -140.74446106]
[-574.96545410 -120.49889374]
[-560.62127686 -116.11215973]
[-546.27703857 -111.72543335]
[-531.93280029 -107.33870697]
[-517.55718994 -103.05592346]
[-503.15100098 -98.87731171]
[-488.74478149 -94.69869995]
[-474.33856201 -90.52008820]
[-464.60031128 -99.64931488]
[-451.51809692 -102.80091095]
[-438.48287964 -99.04800415]
[-428.92794800 -89.26779938]
[-425.42471313 -75.93933105]
[-411.08050537 -71.55259705]
[-396.73629761 -67.16587067]
[-382.30267334 -70.84283447]
[-371.36859131 -59.40795517]
[-357.02438354 -55.02122879]
[-342.68014526 -50.63449860]
[-328.33593750 -46.24776840]
[-315.34573364 -53.44429398]
[-300.73614502 -49.19986725]
[-293.27584839 -35.52574158]
[-278.93164062 -31.13901329]
[-264.58740234 -26.75228310]
[-250.24319458 -22.36555481]
[-239.82633972 -29.94522285]
[-226.75068665 -30.14558411]
[-215.78489685 -22.66954994]
[-211.05711365 -10.06042194]
[-196.77789307 -5.46649313]
[-182.49868774 -0.87256396]
[-171.97319031 -8.30063534]
[-158.89601135 -8.31167984]
[-148.03959656 -0.67767787]
[-143.49484253 11.99857140]
[-129.28363037 16.79873657]
[-115.07243347 21.59890366]
[-100.86122131 26.39906883]
[-86.65001678 31.19923592]
[-72.43881226 35.99940109]
[-62.08195114 25.26623154]
[-48.03425217 20.07281494]
[-33.06342316 21.49947739]
[-20.14393234 29.31656837]
[-11.86600971 42.01943970]
[-9.91640568 57.11779785]
[4.29480124 61.91796494]
[18.50600815 66.71813202]
[31.69911957 59.90069962]
[46.17968369 64.56630707]
[53.24098206 78.45067596]
[67.45218658 83.25084686]
[81.66339874 88.05101013]
[95.87460327 92.85117340]
[96.82941437 79.85398865]
[106.81997681 68.18864441]
[124.42591095 62.59440231]
[139.35954285 61.18494034]
[154.29318237 59.77547455]
[169.22680664 58.36601257]
[184.16044617 56.95655060]
[189.31611633 43.95603561]
[199.52081299 34.48964310]
[212.74491882 30.36240005]
[226.39152527 32.32509232]
[237.80644226 39.93840408]
[244.79429626 51.66962051]
[259.74676514 50.47649765]
[274.69924927 49.28337479]
[289.65170288 48.09025192]
[301.11007690 36.86148834]
[317.01504517 38.96192169]
[325.16567993 52.78027725]
[319.30947876 67.71630096]
[303.93887329 72.31234741]
[290.84484863 63.04272461]
[275.89236450 64.23584747]
[260.93988037 65.42897034]
[245.98741150 66.62209320]
[239.40390015 81.38137817]
[226.19873047 90.86014557]
[209.92193604 92.39356232]
[195.00848389 85.46867371]
[185.56990051 71.89018250]
[170.63627625 73.29964447]
[155.70263672 74.70910645]
[140.76901245 76.11857605]
[125.83537292 77.52803802]
[123.07847595 84.50296021]
[117.56468201 98.45279694]
[114.80779266 105.42771912]
[124.74211884 116.66645050]
[139.67898560 121.88188934]
[142.31094360 136.54211426]
[152.24526978 147.78083801]
[162.17961121 159.01957703]
[172.11393738 170.25830078]
[182.20993042 181.35203552]
[192.46545410 192.29844666]
[207.62016296 189.41075134]
[221.92175293 195.19590759]
[230.80665588 207.80789185]
[231.43972778 223.22225952]
[223.61897278 236.52033997]
[209.83993530 243.45878601]
[194.49948120 241.82354736]
[182.49269104 232.13641357]
[177.65087891 217.48854065]
[181.51904297 202.55398560]
[171.26350403 191.60757446]
[166.60829163 190.55924988]
[162.56060791 186.57817078]
[160.87519836 180.19262695]
[150.94087219 168.95390320]
[141.00654602 157.71516418]
[131.07221985 146.47644043]
[116.84592438 142.06486511]
[113.50338745 126.60078430]
[103.56906128 115.36205292]
[91.07444000 107.06238556]
[76.86322784 102.26221466]
[62.65202332 97.46205139]
[48.44081879 92.66188812]
[34.40676498 99.42081451]
[20.06295776 94.35031891]
[13.70584202 80.92933655]
[-0.50536501 76.12917328]
[-14.71657181 71.32901001]
[-25.42199707 82.15283203]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 127]
[5 126]
[6 125]
[7 124]
[8 123]
[9 122]
[12 118]
[13 117]
[14 116]
[17 112]
[18 111]
[19 110]
[20 109]
[23 106]
[24 105]
[25 104]
[26 103]
[28 101]
[29 100]
[30 99]
[34 94]
[35 93]
[36 92]
[37 91]
[39 90]
[40 89]
[41 88]
[42 87]
[43 55]
[44 54]
[57 85]
[58 84]
[60 82]
[61 81]
[62 79]
[63 78]
[64 76]
[65 75]
[66 74]
[67 72]
[133 215]
[134 214]
[135 213]
[138 210]
[139 209]
[140 208]
[141 207]
[144 175]
[145 174]
[146 173]
[147 172]
[148 171]
[154 166]
[155 165]
[156 164]
[157 163]
[178 206]
[179 205]
[181 203]
[182 202]
[183 201]
[184 200]
[185 197]
[186 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
