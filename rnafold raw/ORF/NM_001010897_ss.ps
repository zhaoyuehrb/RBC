%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 14:01:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGUGGCCAAACAGCGGAUCCGGAUGGCUAACGAGAAGCACAGCAAAAACAUCACCCAGAGGGGGAACGUAGCCAAAACCCUGAGGCCGCAAGAGGAGAAAUAUCCUGUGGGACCAUGGCUGUUGGCACUGUUUGUUUUUGUUGUCUGUGGCUCAGCUAUCUUUCAGAUCAUUCAGAGCAUAAGGAUGGGCAUGUGA\
) } def
/len { sequence length } bind def

/coor [
[179.69396973 803.20556641]
[174.73030090 788.50378418]
[179.38822937 773.70233154]
[191.87664795 764.49261475]
[191.63986206 749.49450684]
[191.40306091 734.49633789]
[183.46582031 721.89282227]
[190.98429871 707.97222900]
[190.74749756 692.97406006]
[190.51071167 677.97595215]
[179.66828918 667.82818604]
[179.21449280 652.62127686]
[189.93194580 641.31756592]
[170.13717651 632.39007568]
[157.49349976 614.64971924]
[155.50090027 592.88580322]
[164.77217102 573.01751709]
[182.84701538 560.48419189]
[180.48881531 545.67071533]
[178.13059998 530.85723877]
[175.77238464 516.04376221]
[161.41567993 501.22363281]
[169.36178589 481.32885742]
[166.30490112 466.64364624]
[163.24801636 451.95840454]
[160.19114685 437.27319336]
[157.13426208 422.58798218]
[154.07737732 407.90277100]
[151.02050781 393.21755981]
[147.96362305 378.53234863]
[145.22111511 376.30160522]
[143.42727661 372.62738037]
[143.25067139 367.97213745]
[145.12705994 363.08020020]
[142.76884460 348.26672363]
[140.41064453 333.45327759]
[128.24050903 324.94308472]
[125.63792419 309.95370483]
[134.64671326 297.24624634]
[132.28849792 282.43276978]
[129.69673157 267.65838623]
[126.87206268 252.92674255]
[124.04738617 238.19511414]
[121.22270966 223.46347046]
[118.39803314 208.73182678]
[115.57335663 194.00018311]
[112.74868774 179.26855469]
[109.92401123 164.53691101]
[107.09933472 149.80526733]
[104.27465820 135.07362366]
[101.44998169 120.34198761]
[93.93211365 133.32203674]
[78.99654388 134.71083069]
[69.21434021 123.33943939]
[72.81905365 108.77900696]
[86.77672577 103.28486633]
[72.63249969 98.29078674]
[58.48826981 93.29670715]
[42.47435760 96.83036041]
[31.60834885 84.54777527]
[37.06825638 69.08422852]
[53.23740005 66.34728241]
[63.48234940 79.15248108]
[77.62657928 84.14656067]
[91.77080536 89.14064026]
[104.15166473 80.67221832]
[104.62519836 65.67968750]
[105.09872437 50.68716812]
[105.57225037 35.69464111]
[106.04577637 20.70211983]
[95.50811005 9.23061848]
[96.20191193 -5.96718740]
[107.20317841 -15.94254684]
[107.67670441 -30.93507004]
[108.15023041 -45.92759323]
[108.62376404 -60.92012024]
[109.09729004 -75.91264343]
[97.00767517 -85.45975494]
[92.90579224 -100.12358856]
[98.16286469 -114.22420502]
[110.56642151 -122.42723846]
[111.03994751 -137.41975403]
[111.39511871 -152.41555786]
[111.63191223 -167.41368103]
[99.39308929 -176.76876831]
[95.06023407 -191.36601257]
[100.09405518 -205.54785156]
[112.36656952 -213.94567871]
[112.60336304 -228.94380188]
[112.84015656 -243.94194031]
[113.07695007 -258.94006348]
[113.31374359 -273.93820190]
[110.76354980 -278.51513672]
[110.27917480 -283.14846802]
[111.53464508 -287.03967285]
[113.93362427 -289.63629150]
[114.88021088 -304.60641479]
[115.82679749 -319.57650757]
[105.19223785 -331.26760864]
[106.02275848 -347.05004883]
[117.82563782 -357.56042480]
[133.59841919 -356.56307983]
[143.98341370 -344.64974976]
[142.81936646 -328.88836670]
[130.79690552 -318.62991333]
[129.85031128 -303.65982056]
[128.90373230 -288.68972778]
[128.31187439 -273.70141602]
[128.07508850 -258.70327759]
[127.83828735 -243.70513916]
[127.60149384 -228.70701599]
[127.36470032 -213.70887756]
[139.36599731 -204.92782593]
[143.94960022 -190.59413147]
[139.15809631 -176.14094543]
[126.63004303 -167.17689514]
[126.39324951 -152.17875671]
[129.43400574 -145.43450928]
[126.03247070 -136.94622803]
[125.55894470 -121.95370483]
[137.42012024 -112.98429108]
[141.77688599 -98.58003235]
[136.75781250 -84.20427704]
[124.08981323 -75.43911743]
[123.61628723 -60.44659042]
[123.14275360 -45.45406723]
[122.66922760 -30.46154213]
[122.19570160 -15.46901894]
[132.54553223 -4.81930017]
[132.27888489 10.39199638]
[121.03830719 21.17564774]
[120.56477356 36.16817093]
[120.09124756 51.16069412]
[119.61772156 66.15322113]
[119.14418793 81.14574432]
[116.18162537 117.51731110]
[119.00630188 132.24894714]
[121.83097839 146.98059082]
[124.65564728 161.71223450]
[127.48032379 176.44387817]
[130.30499268 191.17550659]
[133.12966919 205.90715027]
[135.95434570 220.63879395]
[138.77902222 235.37043762]
[141.60369873 250.10206604]
[144.42837524 264.83370972]
[148.46687317 270.08840942]
[149.13720703 275.74420166]
[147.10197449 280.07458496]
[149.46017456 294.88803101]
[161.96954346 304.16995239]
[164.15007019 319.22650146]
[155.22410583 331.09506226]
[157.58232117 345.90853882]
[159.94053650 360.72198486]
[162.64883423 375.47546387]
[165.70571899 390.16067505]
[168.76258850 404.84588623]
[171.81947327 419.53109741]
[174.87635803 434.21633911]
[177.93324280 448.90155029]
[180.99011230 463.58676147]
[184.04699707 478.27197266]
[192.56657410 482.35281372]
[198.16554260 489.78961182]
[199.68612671 498.83383179]
[196.91136169 507.43063354]
[190.58586121 513.68554688]
[192.94406128 528.49902344]
[195.30227661 543.31250000]
[197.66049194 558.12597656]
[206.38159180 559.27105713]
[214.66639709 562.19598389]
[222.15626526 566.76971436]
[228.52790833 572.79003906]
[233.50730896 579.99230957]
[236.88150024 588.06121826]
[238.50769043 596.64447021]
[238.31927490 605.36840820]
[236.32859802 613.85406494]
[232.62620544 621.73352051]
[227.37670898 628.66625977]
[220.81153870 634.35351562]
[213.21867371 638.55126953]
[204.93006897 641.08081055]
[215.99900818 652.04052734]
[216.02549744 667.25415039]
[205.50883484 677.73913574]
[205.74563599 692.73730469]
[205.98242188 707.73541260]
[213.93661499 721.41174316]
[206.40119934 734.25958252]
[206.63798523 749.25769043]
[206.87478638 764.25579834]
[219.64772034 773.06671143]
[224.77058411 787.71374512]
[220.27349854 802.56488037]
[207.88572693 811.90948486]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 194]
[5 193]
[6 192]
[8 190]
[9 189]
[10 188]
[13 185]
[18 171]
[19 170]
[20 169]
[21 168]
[23 163]
[24 162]
[25 161]
[26 160]
[27 159]
[28 158]
[29 157]
[30 156]
[34 155]
[35 154]
[36 153]
[39 150]
[40 149]
[41 146]
[42 145]
[43 144]
[44 143]
[45 142]
[46 141]
[47 140]
[48 139]
[49 138]
[50 137]
[51 136]
[56 65]
[57 64]
[58 63]
[66 135]
[67 134]
[68 133]
[69 132]
[70 131]
[73 128]
[74 127]
[75 126]
[76 125]
[77 124]
[81 120]
[82 119]
[83 117]
[84 116]
[88 112]
[89 111]
[90 110]
[91 109]
[92 108]
[96 107]
[97 106]
[98 105]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
