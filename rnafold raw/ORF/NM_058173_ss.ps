%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 16:25:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAAGUUCUUAGCAGUCCUGGUACUCUUGGGAGUUUCCAUCUUUCUGGUCUCUGCCCAGAAUCCGACAACAGCUGCUCCAGCUGACACGUAUCCAGCUACUGGUCCUGCUGAUGAUGAAGCCCCUGAUGCUGAAACCACUGCUGCUGCAACCACUGCAACCACUGCUGCUCCUACCACUGCAACCACCGCUGCUUCUACCACUGCUCGUAAAGACAUUCCAGUUUUACCCAAAUGGGUUGGGGAUCUCCCGAAU\
GGUAGAGUGUGUCCCUGA\
) } def
/len { sequence length } bind def

/coor [
[355.36318970 354.63970947]
[349.14291382 340.99023438]
[346.33239746 326.25588989]
[347.09164429 311.27511597]
[351.37738037 296.90042114]
[358.94577026 283.94973755]
[369.36608887 273.16009521]
[382.04544067 265.14544678]
[396.26223755 260.36187744]
[411.20748901 259.08157349]
[426.03076172 261.37744141]
[439.89337158 267.12152100]
[429.47076416 256.33407593]
[419.04812622 245.54663086]
[408.62551880 234.75920105]
[398.20288086 223.97175598]
[387.78027344 213.18431091]
[372.92980957 213.18572998]
[362.20611572 202.39421082]
[362.30532837 186.81768799]
[351.88269043 176.03024292]
[341.46008301 165.24281311]
[331.03744507 154.45536804]
[324.45867920 163.22044373]
[315.27139282 168.83230591]
[304.85131836 170.61801147]
[294.69873047 168.46540833]
[286.22241211 162.81925964]
[280.54437256 154.59855652]
[278.35189819 145.04968262]
[263.67022705 141.97587585]
[248.98852539 138.90208435]
[241.82469177 140.60089111]
[234.15658569 135.70796204]
[219.51110840 132.46601868]
[204.86563110 129.22409058]
[190.22016907 125.98216248]
[175.57469177 122.74023438]
[160.89300537 119.66643524]
[146.17704773 116.76116943]
[131.46109009 113.85590363]
[116.74513245 110.95063782]
[107.40174866 135.84523010]
[70.65311432 144.36741638]
[56.59069061 149.58740234]
[42.52826691 154.80738831]
[28.46584129 160.02737427]
[14.40341663 165.24736023]
[0.34099188 170.46733093]
[-4.74290514 185.25543213]
[-18.16957855 193.27157593]
[-33.59936523 190.73077393]
[-43.74679184 178.83271790]
[-43.82055283 163.19529724]
[-33.78582001 151.20204163]
[-18.38068962 148.51579285]
[-4.87899065 156.40490723]
[9.18343353 151.18492126]
[23.24585915 145.96495056]
[37.30828476 140.74496460]
[51.37070847 135.52497864]
[65.43312836 130.30499268]
[64.91758728 122.82273865]
[49.95306396 123.85383606]
[34.98854446 124.88493347]
[20.02400970 125.91579437]
[18.99337578 110.95124817]
[33.95744705 109.92041016]
[48.92196655 108.88931274]
[63.88648605 107.85822296]
[63.37094116 100.37596130]
[48.72546768 97.13403320]
[34.07999420 93.89209747]
[19.43451881 90.65016937]
[4.78904581 87.40824127]
[-9.85642719 84.16631317]
[-26.62798691 86.64645386]
[-33.65403748 71.21690369]
[-20.77248383 60.19411087]
[-6.61449766 69.52083588]
[8.03097630 72.76276398]
[22.67644882 76.00469971]
[37.32192230 79.24662781]
[51.96739578 82.48855591]
[66.61286926 85.73048401]
[70.01013184 79.04403687]
[56.63734818 72.24929047]
[63.43232346 58.87661743]
[76.80466461 65.67114258]
[80.20192719 58.98469162]
[68.94799042 49.06759644]
[57.69404602 39.15049744]
[37.75478363 36.02560806]
[32.46770477 17.40406609]
[20.98933029 7.74762058]
[9.51095676 -1.90882456]
[-1.96741724 -11.56526947]
[-17.98032570 -17.13510704]
[-17.06097412 -34.06410980]
[-0.53906155 -37.86709976]
[7.68902779 -23.04364395]
[19.16740227 -13.38719845]
[30.64577484 -3.73075366]
[42.12414932 5.92569160]
[52.13836288 4.13773251]
[61.69258499 8.22473049]
[67.55821228 17.06682587]
[67.61114502 27.89655685]
[78.86508179 37.81365585]
[90.11902618 47.73075104]
[120.58570862 69.73624420]
[119.65040588 96.23468018]
[134.36636353 99.13994598]
[149.08232117 102.04521179]
[163.79827881 104.95047760]
[170.11065674 103.19751740]
[175.55598450 104.65167999]
[178.81661987 108.09476471]
[193.46209717 111.33669281]
[208.10757446 114.57862091]
[222.75303650 117.82054901]
[237.39851379 121.06248474]
[252.06233215 124.22039795]
[266.74401855 127.29419708]
[281.42568970 130.36799622]
[289.08920288 120.64962006]
[300.74578857 115.36058044]
[313.95300293 116.03478241]
[325.74392700 122.90895081]
[332.07455444 109.31029510]
[338.40515137 95.71164703]
[326.86761475 85.99977875]
[318.24389648 73.64190674]
[313.11694336 59.48386383]
[311.83056641 44.49280167]
[314.46649170 29.69112587]
[320.83908081 16.08675957]
[330.50857544 4.60452127]
[342.81118774 -3.97675323]
[356.90484619 -9.07703400]
[371.82681274 -10.35429955]
[386.55941772 -7.72746611]
[392.89001465 -21.32611847]
[391.69979858 -37.10249329]
[404.08569336 -45.37528229]
[410.41632080 -58.97393417]
[416.27551270 -72.78225708]
[421.65637207 -86.78390503]
[427.03726196 -100.78556061]
[432.41812134 -114.78720856]
[427.23846436 -129.97109985]
[436.00128174 -143.40957642]
[451.98449707 -144.79377747]
[462.92718506 -133.06187439]
[460.43499756 -117.21357727]
[446.41976929 -109.40633392]
[441.03890991 -95.40468597]
[435.65805054 -81.40303802]
[430.27716064 -67.40138245]
[444.30062866 -72.72518158]
[458.02453613 -66.67090607]
[463.54696655 -52.72448349]
[457.68820190 -38.91596985]
[443.82162476 -33.19602203]
[429.93130493 -38.85806274]
[424.01495361 -52.64332199]
[417.68435669 -39.04467010]
[419.32736206 -24.24096489]
[406.48867798 -14.99550533]
[400.15808105 -1.39685321]
[411.65249634 8.18583488]
[420.28131104 20.42675972]
[425.45141602 34.49496078]
[426.80477905 49.43352890]
[424.24313354 64.22469330]
[417.93518066 77.85916138]
[408.30548096 89.40500641]
[396.00582886 98.07132721]
[381.87118530 103.26246643]
[366.86300659 104.61892700]
[352.00381470 102.04225922]
[345.67318726 115.64090729]
[339.34259033 129.23956299]
[341.82489014 144.03274536]
[352.24752808 154.82019043]
[362.67013550 165.60762024]
[373.09277344 176.39506531]
[388.66348267 176.83160400]
[399.07983398 187.92007446]
[398.56771851 202.76168823]
[408.99032593 213.54913330]
[419.41296387 224.33657837]
[429.83557129 235.12400818]
[440.25820923 245.91145325]
[450.68081665 256.69888306]
[462.48449707 265.95489502]
[475.44610596 273.50448608]
[488.40774536 281.05407715]
[501.36935425 288.60366821]
[514.33099365 296.15325928]
[527.29260254 303.70285034]
[540.25421143 311.25244141]
[543.77050781 306.24978638]
[548.54595947 301.90319824]
[554.44738770 298.52206421]
[561.26739502 296.38613892]
[568.73144531 295.72824097]
[576.50885010 296.71859741]
[584.22747803 299.45175171]
[591.49108887 303.93719482]
[597.89916992 310.09378052]
[603.06732178 317.74868774]
[617.30090332 322.48199463]
[631.53454590 327.21527100]
[645.76818848 331.94854736]
[660.00177002 336.68185425]
[674.01855469 329.38067627]
[689.06726074 334.20892334]
[696.21978760 348.30206299]
[691.23272705 363.29888916]
[677.06475830 370.30203247]
[662.12145996 365.15667725]
[655.26849365 350.91546631]
[641.03491211 346.18218994]
[626.80126953 341.44888306]
[612.56762695 336.71560669]
[598.33404541 331.98233032]
[591.38659668 345.27642822]
[603.39941406 354.25933838]
[615.41223145 363.24224854]
[627.42504883 372.22515869]
[643.76428223 373.62521362]
[650.47546387 388.58822632]
[640.65466309 401.72155762]
[624.40466309 399.51473999]
[618.44213867 384.23794556]
[606.42932129 375.25506592]
[594.41650391 366.27215576]
[582.40368652 357.28924561]
[571.73645020 367.83486938]
[586.12274170 374.41860962]
[587.37811279 389.26019287]
[596.22265625 401.37521362]
[605.06726074 413.49020386]
[620.27465820 419.62756348]
[622.29504395 435.90176392]
[609.04998779 445.57135010]
[594.16485596 438.68905640]
[592.95227051 422.33480835]
[584.10766602 410.21978760]
[575.26306152 398.10479736]
[561.50939941 392.38760376]
[559.62145996 376.67944336]
[530.67254639 353.64767456]
[532.70465088 324.21405029]
[519.74304199 316.66445923]
[506.78140259 309.11486816]
[493.81976318 301.56527710]
[480.85815430 294.01568604]
[467.89651489 286.46609497]
[454.93490601 278.91650391]
[463.81619263 291.00460815]
[469.58181763 304.85229492]
[471.90359497 319.67150879]
[470.64947510 334.61898804]
[465.89080811 348.84414673]
[457.89837646 361.53747559]
[447.12698364 371.97671509]
[434.18960571 379.56774902]
[419.82241821 383.87866211]
[404.84298706 384.66412354]
[390.10375977 381.87942505]
[376.44342041 375.68304443]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 195]
[13 194]
[14 193]
[15 192]
[16 191]
[17 190]
[20 187]
[21 186]
[22 185]
[23 184]
[30 125]
[31 124]
[32 123]
[34 122]
[35 121]
[36 120]
[37 119]
[38 118]
[39 115]
[40 114]
[41 113]
[42 112]
[44 62]
[45 61]
[46 60]
[47 59]
[48 58]
[49 57]
[71 85]
[72 84]
[73 83]
[74 82]
[75 81]
[76 80]
[90 110]
[91 109]
[92 108]
[94 104]
[95 103]
[96 102]
[97 101]
[129 183]
[130 182]
[131 181]
[142 170]
[143 169]
[145 167]
[146 166]
[147 159]
[148 158]
[149 157]
[150 156]
[196 261]
[197 260]
[198 259]
[199 258]
[200 257]
[201 256]
[202 255]
[212 227]
[213 226]
[214 225]
[215 224]
[216 223]
[228 239]
[229 238]
[230 237]
[231 236]
[240 253]
[242 251]
[243 250]
[244 249]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
