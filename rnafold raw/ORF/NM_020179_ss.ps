%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 02:42:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCGGCAGCUCAAAGGGAAGCCCAAGAAGGAGACCUCCAAGGACAAGAAGGAGCGGAAGCAAGCCAUGCAGGAGGCCCGGCAGCAGAUCACUACAGUGGUGCUGCCCACGCUGGCCGUGGUCGUGCUCUUGAUCGUGGUGUUUGUGUACGUGGCCACGCGCCCCACCAUCACCGAGUGA\
) } def
/len { sequence length } bind def

/coor [
[218.11566162 208.37435913]
[212.64213562 193.12722778]
[214.36540222 176.96084595]
[201.55206299 169.16226196]
[188.73870850 161.36366272]
[175.92535400 153.56506348]
[163.11201477 145.76647949]
[150.23146057 138.07937622]
[137.28469849 130.50433350]
[124.33792114 122.92930603]
[117.13404083 130.95787048]
[107.26251221 136.61511230]
[95.53692627 139.01930237]
[83.05794525 137.57623291]
[71.10998535 132.07061768]
[61.02979279 122.72003937]
[51.43237305 134.24780273]
[41.83494949 145.77557373]
[36.34734726 161.81684875]
[19.41385078 160.98437500]
[15.52613640 144.48219299]
[30.30718040 136.17816162]
[39.90460205 124.65038300]
[49.50202560 113.12261200]
[47.44586945 105.90997314]
[34.99727631 114.27851105]
[23.19160652 105.02507019]
[28.34417725 90.93780518]
[43.33356094 91.48468781]
[41.27740479 84.27204132]
[27.04408264 79.53785706]
[17.88570976 79.79679108]
[12.60606003 74.59601593]
[3.44457269 74.69595337]
[-1.74401712 69.40433502]
[-15.80445671 64.17900848]
[-29.86489677 58.95367813]
[-43.92533493 53.72835159]
[-57.98577499 48.50302505]
[-67.62740326 53.61060715]
[-78.26810455 52.57468796]
[-86.40167999 45.98007965]
[-89.48244476 36.20276642]
[-98.63671875 35.82574463]
[-103.54286194 30.27124405]
[-117.31227875 24.32119370]
[-125.57900238 28.95533180]
[-134.91368103 29.24538422]
[-143.20373535 25.25293350]
[-148.63159180 17.99446106]
[-150.07283020 9.18593121]
[-163.51391602 2.52728820]
[-183.53266907 4.74102449]
[-193.58598328 -11.75788879]
[-207.25006104 -17.94602394]
[-223.50793457 -15.79808235]
[-233.28108215 -28.96688652]
[-226.51574707 -43.90550232]
[-210.17150879 -45.24635696]
[-201.06192017 -31.61009979]
[-187.39784241 -25.42196465]
[-178.16619873 -29.87883377]
[-167.78965759 -28.47483635]
[-159.74310303 -21.43560982]
[-156.85527039 -10.91378593]
[-143.41418457 -4.25514317]
[-123.03096008 -7.40113449]
[-111.36222839 10.55177498]
[-97.59281158 16.50182343]
[-83.77227020 22.33215332]
[-64.86725616 18.34672737]
[-52.76044846 34.44258499]
[-38.70000839 39.66791153]
[-24.63956833 44.89323807]
[-10.57913017 50.11856461]
[3.48130965 55.34389114]
[17.58656693 60.44700241]
[31.77826881 65.30453491]
[46.01159286 70.03871918]
[58.61758423 61.90920639]
[60.17687988 46.99047089]
[61.73617554 32.07173920]
[63.29547119 17.15300560]
[64.85476685 2.23427248]
[66.41406250 -12.68446064]
[67.97335815 -27.60319328]
[65.61839294 -33.82765198]
[66.62832642 -39.45474243]
[69.85445404 -43.00945663]
[71.93058777 -57.86508560]
[74.00672913 -72.72071075]
[76.08286285 -87.57633972]
[69.42973328 -102.56526184]
[79.30136108 -115.66041565]
[95.54267120 -113.39061737]
[101.44599152 -98.09085083]
[90.93849182 -85.50019836]
[88.86235809 -70.64457703]
[86.78621674 -55.78894806]
[84.71008301 -40.93331909]
[82.89208984 -26.04389763]
[81.33279419 -11.12516499]
[79.77349854 3.79356813]
[78.21420288 18.71230125]
[76.65490723 33.63103485]
[75.09561157 48.54976654]
[73.53631592 63.46850204]
[99.92827606 57.80839920]
[122.93177795 68.11648560]
[134.48658752 88.49273682]
[131.91294861 109.98253632]
[144.85972595 117.55757141]
[157.80650330 125.13259888]
[166.82048035 126.77302551]
[170.91059875 132.95312500]
[183.72395325 140.75172424]
[196.53730774 148.55030823]
[209.35064697 156.34890747]
[222.16400146 164.14750671]
[233.73309326 156.00469971]
[247.49134827 152.90071106]
[261.35052490 155.27276611]
[273.21997070 162.72947693]
[281.32196045 174.11500549]
[284.45803833 187.68807983]
[282.18606567 201.38827515]
[294.86215210 209.40808105]
[307.53820801 217.42790222]
[320.21426392 225.44770813]
[338.61343384 225.75431824]
[346.17556763 241.57766724]
[358.98892212 249.37625122]
[371.80227661 257.17486572]
[384.61563110 264.97344971]
[400.42672729 265.53884888]
[407.27597046 278.76522827]
[420.08932495 286.56384277]
[432.90267944 294.36242676]
[445.71603394 302.16101074]
[461.52713013 302.72644043]
[468.37637329 315.95278931]
[481.18972778 323.75140381]
[497.00082397 324.31680298]
[503.85009766 337.54318237]
[516.66345215 345.34176636]
[529.47680664 353.14038086]
[542.29016113 360.93896484]
[556.55548096 354.83328247]
[571.67773438 358.31146240]
[581.84204102 370.03610229]
[583.14001465 385.49877930]
[575.07257080 398.75384521]
[560.74182129 404.70440674]
[545.65826416 401.06237793]
[535.62170410 389.22817993]
[534.49157715 373.75231934]
[521.67822266 365.95373535]
[508.86483765 358.15512085]
[496.05151367 350.35653687]
[481.15689087 350.34893799]
[473.39114380 336.56475830]
[460.57778931 328.76614380]
[445.68319702 328.75854492]
[437.91741943 314.97436523]
[425.10409546 307.17578125]
[412.29074097 299.37716675]
[399.47738647 291.57858276]
[384.58279419 291.57098389]
[376.81701660 277.78680420]
[364.00366211 269.98818970]
[351.19033813 262.18960571]
[338.37698364 254.39100647]
[326.53558350 256.94390869]
[315.79019165 250.52894592]
[312.19445801 238.12376404]
[299.51840210 230.10395813]
[286.84234619 222.08415222]
[274.16625977 214.06434631]
[260.78649902 222.77847290]
[244.88896179 224.79913330]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 119]
[4 118]
[5 117]
[6 116]
[7 115]
[8 113]
[9 112]
[10 111]
[16 24]
[17 23]
[18 22]
[30 79]
[31 78]
[33 77]
[35 76]
[36 75]
[37 74]
[38 73]
[39 72]
[43 70]
[45 69]
[46 68]
[51 66]
[52 65]
[54 61]
[55 60]
[80 107]
[81 106]
[82 105]
[83 104]
[84 103]
[85 102]
[86 101]
[89 100]
[90 99]
[91 98]
[92 97]
[126 178]
[127 177]
[128 176]
[129 175]
[131 172]
[132 171]
[133 170]
[134 169]
[136 167]
[137 166]
[138 165]
[139 164]
[141 162]
[142 161]
[144 159]
[145 158]
[146 157]
[147 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
