%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 15:36:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGAGCGGGCAAGGGAUCGCUUACACCUGAGACGAACUACAGAACAGCACGUACCAGAGGUGGAAGUCCAAGUCAAACGCAGAAGGACUGCCUCACUGAGCAACCAAGAGUGUCAGUUGUACCCGAGGCGUUCUCAGCAGCAGCAAGUACCUGUGGUGGAUUUCCAGGCUGAACUGAGGCAGGCAUUCUUAGCUGAGACACCAAGAGGUGGUUAA\
) } def
/len { sequence length } bind def

/coor [
[45.06824112 160.89474487]
[40.16193771 146.71983337]
[42.89088440 131.97015381]
[52.54400635 120.48898315]
[66.60316467 115.26821136]
[76.93190002 104.39083862]
[62.65269470 108.98476410]
[48.37348557 113.57869720]
[34.19739532 118.48160553]
[20.13111496 123.69118500]
[6.06483221 128.90075684]
[1.88897514 141.70327759]
[-8.74187660 149.64837646]
[-21.81390762 150.01593018]
[-32.55003357 142.89569092]
[-46.69026184 147.90109253]
[-60.83048630 152.90649414]
[-74.97071075 157.91188049]
[-81.83026886 171.89703369]
[-96.24177551 176.77177429]
[-109.53219604 170.14605713]
[-123.67242432 175.15145874]
[-130.71406555 180.96255493]
[-138.05374146 180.12535095]
[-152.26495361 184.92550659]
[-159.32624817 198.80987549]
[-173.80680847 203.47549438]
[-186.99992371 196.65805054]
[-201.21113586 201.45822144]
[-215.42233276 206.25839233]
[-222.48364258 220.14276123]
[-236.96420288 224.80836487]
[-250.15731812 217.99093628]
[-264.36853027 222.79110718]
[-278.57974243 227.59126282]
[-285.64102173 241.47564697]
[-300.12158203 246.14125061]
[-313.31469727 239.32380676]
[-327.52590942 244.12397766]
[-333.04663086 258.75460815]
[-346.70538330 266.36859131]
[-362.05291748 263.37078857]
[-371.84262085 251.17669678]
[-371.45208740 235.54399109]
[-361.06567383 223.85395813]
[-345.58758545 221.62626648]
[-332.32608032 229.91276550]
[-318.11486816 225.11260986]
[-311.75775146 211.69163513]
[-297.41394043 206.62113953]
[-283.37988281 213.38006592]
[-269.16870117 208.57989502]
[-254.95747375 203.77972412]
[-248.60035706 190.35874939]
[-234.25656128 185.28825378]
[-220.22250366 192.04718018]
[-206.01129150 187.24700928]
[-191.80009460 182.44685364]
[-185.44297791 169.02586365]
[-171.09916687 163.95538330]
[-157.06510925 170.71430969]
[-142.85391235 165.91413879]
[-128.67782593 161.01123047]
[-114.53759766 156.00582886]
[-108.37543488 142.49423218]
[-94.10654449 137.21661377]
[-79.97611237 143.77165222]
[-65.83588409 138.76626587]
[-51.69565964 133.76086426]
[-37.55543137 128.75546265]
[-30.96649551 113.27991486]
[-14.90660477 107.24118042]
[0.85525340 114.83448029]
[14.92153549 109.62490082]
[28.98781776 104.41532135]
[30.78369522 101.38591766]
[34.13388824 99.07413483]
[38.68593979 98.20005035]
[43.77955627 99.29948425]
[58.05876541 94.70555878]
[72.33797455 90.11162567]
[105.91090393 76.92256165]
[116.63204193 66.43174744]
[127.35317993 55.94093704]
[138.07432556 45.45012283]
[135.95997620 30.19116974]
[143.15193176 16.76995087]
[156.70741272 10.23442554]
[171.33686829 12.90217876]
[182.05801392 2.41136694]
[192.77915955 -8.07944489]
[203.50028992 -18.57025719]
[214.22143555 -29.06106758]
[224.94258118 -39.55187988]
[235.66371155 -50.04269409]
[246.38485718 -60.53350449]
[250.93313599 -78.37926483]
[268.09246826 -82.06585693]
[272.32443237 -97.31056976]
[286.78219604 -100.89135742]
[297.35034180 -111.53627777]
[307.91848755 -122.18120575]
[308.35424805 -147.28669739]
[335.38250732 -158.44407654]
[344.47799683 -170.37187195]
[353.57348633 -182.29965210]
[362.66897583 -194.22744751]
[371.67788696 -206.22076416]
[380.59973145 -218.27896118]
[383.18658447 -227.03465271]
[389.73907471 -230.44590759]
[398.83456421 -242.37370300]
[407.93005371 -254.30148315]
[403.63641357 -269.09576416]
[408.81689453 -283.41415405]
[421.28768921 -291.83694458]
[436.14895630 -291.30767822]
[445.24444580 -303.23547363]
[454.33993530 -315.16323853]
[463.43542480 -327.09103394]
[472.53091431 -339.01882935]
[470.61846924 -354.47781372]
[480.01251221 -366.44473267]
[494.76208496 -368.17266846]
[496.97741699 -383.83801270]
[510.84741211 -389.26693726]
[519.94287109 -401.19470215]
[529.03839111 -413.12249756]
[528.33001709 -429.14990234]
[540.51330566 -439.58767700]
[556.24230957 -436.42883301]
[563.45104980 -422.09658813]
[556.60961914 -407.58538818]
[540.96618652 -404.02700806]
[531.87066650 -392.09921265]
[522.77520752 -380.17144775]
[521.21038818 -365.35925293]
[506.68984985 -359.07717896]
[508.92684937 -344.39620972]
[499.87265015 -332.17016602]
[484.45870972 -329.92333984]
[475.36322021 -317.99554443]
[466.26773071 -306.06777954]
[457.17224121 -294.13998413]
[448.07675171 -282.21218872]
[452.52005005 -268.02081299]
[447.69784546 -253.76562500]
[435.26092529 -244.98063660]
[419.85781860 -245.20599365]
[410.76235962 -233.27821350]
[401.66687012 -221.35041809]
[392.65795898 -209.35711670]
[383.73608398 -197.29890442]
[382.28521729 -190.05551147]
[374.59677124 -185.13195801]
[365.50128174 -173.20416260]
[356.40579224 -161.27638245]
[347.31030273 -149.34858704]
[354.01351929 -135.92970276]
[369.01312256 -136.03826904]
[382.87384033 -144.80253601]
[397.26657104 -136.94238281]
[397.38525391 -120.54367065]
[383.10784912 -112.47598267]
[369.12170410 -121.03866577]
[354.12210083 -120.93009186]
[343.44982910 -110.37611389]
[330.12289429 -107.42473602]
[318.56341553 -111.61306000]
[307.99526978 -100.96813965]
[297.42712402 -90.32321930]
[293.95108032 -75.83990479]
[278.73739624 -71.49771118]
[278.46844482 -59.40697098]
[269.75500488 -50.45220947]
[256.87567139 -49.81236267]
[246.15452576 -39.32155228]
[235.43338013 -28.83073997]
[224.71224976 -18.33992767]
[213.99110413 -7.84911537]
[203.26995850 2.64169621]
[192.54882812 13.13250828]
[181.82768250 23.62331963]
[184.17713928 38.30725861]
[177.34880066 51.71762466]
[163.77458191 58.61645508]
[148.56513977 56.17126465]
[137.84399414 66.66207886]
[127.12285614 77.15288544]
[116.40171051 87.64369965]
[128.33523560 78.55573273]
[143.25157166 76.97367096]
[156.82592773 83.35621643]
[165.12260437 95.85282135]
[165.73608398 110.84027100]
[158.48849487 123.97315216]
[145.48118591 131.44375610]
[130.48545837 131.08609009]
[117.84910583 123.00383759]
[111.23633575 109.54276276]
[116.13924408 123.71884918]
[121.04216003 137.89494324]
[125.94506836 152.07102966]
[138.68403625 162.39820862]
[135.84304810 178.54939270]
[120.34466553 183.90962219]
[108.13229370 172.96476746]
[111.76898193 156.97393799]
[106.86606598 142.79785156]
[101.96315765 128.62176514]
[97.06024933 114.44567108]
[94.56658173 129.23693848]
[98.83621216 143.61643982]
[95.45257568 158.22982788]
[85.29730988 169.26933289]
[71.01655579 173.85844421]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 81]
[7 80]
[8 79]
[9 75]
[10 74]
[11 73]
[15 70]
[16 69]
[17 68]
[18 67]
[21 64]
[22 63]
[24 62]
[25 61]
[28 58]
[29 57]
[30 56]
[33 53]
[34 52]
[35 51]
[38 48]
[39 47]
[82 190]
[83 189]
[84 188]
[85 187]
[89 183]
[90 182]
[91 181]
[92 180]
[93 179]
[94 178]
[95 177]
[96 176]
[98 173]
[100 171]
[101 170]
[102 169]
[104 158]
[105 157]
[106 156]
[107 155]
[108 153]
[109 152]
[111 151]
[112 150]
[113 149]
[117 145]
[118 144]
[119 143]
[120 142]
[121 141]
[124 138]
[126 136]
[127 135]
[128 134]
[159 166]
[160 165]
[200 211]
[201 210]
[202 209]
[203 208]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
