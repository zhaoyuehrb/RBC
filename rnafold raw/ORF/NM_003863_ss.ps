%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 20:42:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGCCACGGGGACAGACCAGGUGGUGGGACUCGGCCUCGUCGCCGUUAGCCUGAUCAUCUUCACCUACUACACCGCCUGGGUGAUUCUCUUGCCAUUCAUCGACAGUCAGCAUGUCAUCCACAAGUAUUUCCUGCCCCGAGCCUAUGCUGUCGCCAUCCCACUGGCUGCAGGCCUCCUGCUGCUCCUGUUUGUGGGACUGUUCAUCUCCUAUGUGAUGCUGAAGACCAAGAGAGUGACCAAGAAGGCUCAGUGA\
) } def
/len { sequence length } bind def

/coor [
[313.14154053 148.28424072]
[305.14736938 138.81042480]
[301.90994263 126.77005005]
[287.31582642 123.30418396]
[272.72174072 119.83831024]
[262.28027344 125.91027832]
[250.10740662 123.16294098]
[242.83290100 112.53456879]
[228.28244019 108.88986969]
[213.73196411 105.24516296]
[199.18148804 101.60046387]
[184.63102722 97.95575714]
[177.39985657 99.37502289]
[169.92491150 94.17602539]
[155.42027283 90.35304260]
[140.91561890 86.53005219]
[121.32473755 128.63192749]
[83.80775452 123.24081421]
[69.74767303 128.46710205]
[55.68758774 133.69337463]
[41.62750244 138.91966248]
[27.56741714 144.14593506]
[13.50733089 149.37222290]
[-0.55275381 154.59849548]
[-14.61283875 159.82478333]
[-28.67292404 165.05105591]
[-42.73300934 170.27734375]
[-56.08974075 177.10359192]
[-68.56178284 185.43714905]
[-69.00206757 202.35940552]
[-79.34773254 215.54722595]
[-95.35760498 219.91586304]
[-110.65785217 213.93180847]
[-123.02669525 222.41778564]
[-135.39553833 230.90376282]
[-147.76437378 239.38973999]
[-150.41043091 254.97094727]
[-163.34721375 264.04922485]
[-178.89956665 261.23858643]
[-187.84056091 248.20654297]
[-184.86564636 232.68476868]
[-171.73980713 223.88204956]
[-156.25035095 227.02090454]
[-143.88151550 218.53492737]
[-131.51266479 210.04895020]
[-119.14382935 201.56297302]
[-120.02555847 188.25723267]
[-114.17704773 176.15306091]
[-103.02670288 168.45205688]
[-89.42036438 167.24946594]
[-76.89533997 172.96510315]
[-64.42329407 164.63154602]
[-69.73574829 150.60379028]
[-84.59928894 152.62249756]
[-99.46282196 154.64122009]
[-108.83183289 167.36903381]
[-124.46897888 169.66143799]
[-137.09703064 160.15838623]
[-139.22398376 144.49787903]
[-129.58795166 131.97100830]
[-113.90583038 130.00975037]
[-101.48153687 139.77767944]
[-86.61799622 137.75897217]
[-71.75445557 135.74024963]
[-85.76625824 130.38587952]
[-80.28059387 116.42494965]
[-67.89736176 107.95999908]
[-52.89742279 107.91733551]
[-40.46623230 116.31171417]
[-34.90124130 130.24121094]
[-38.12601471 144.88999939]
[-47.95928955 156.21725464]
[-33.89920425 150.99096680]
[-19.83911896 145.76469421]
[-5.77903414 140.53840637]
[8.28105068 135.31213379]
[22.34113693 130.08584595]
[36.40122223 124.85957336]
[50.46130753 119.63329315]
[64.52139282 114.40701294]
[78.58147430 109.18073273]
[80.96434784 94.37120819]
[69.25328827 84.99831390]
[57.54223251 75.62542725]
[45.83117294 66.25253296]
[32.09034348 72.89724731]
[16.82723236 72.91342163]
[3.07234859 66.29784393]
[-6.44326878 54.36403656]
[-9.83028698 39.48146820]
[-6.41621017 24.60508156]
[3.12109375 12.68859768]
[16.88798523 6.09804106]
[32.15103912 6.14197206]
[45.87976456 12.81166840]
[55.34831619 24.78285599]
[58.67670059 39.67864609]
[55.20406723 54.54147339]
[66.91512299 63.91436386]
[78.62618256 73.28725433]
[90.33724213 82.66014862]
[102.10610962 73.35887146]
[113.87393951 64.05843353]
[107.46060944 50.49859619]
[101.04728699 36.93875504]
[94.63395691 23.37891579]
[79.46250153 19.58933830]
[70.31826782 6.90403128]
[71.51889038 -8.68739319]
[82.49746704 -19.82314110]
[98.07025146 -21.24525261]
[110.88425446 -12.28224945]
[114.88909149 2.83381200]
[108.19380188 16.96558952]
[114.60712433 30.52542877]
[121.02045441 44.08526611]
[127.43377686 57.64510727]
[121.22113800 43.99215317]
[120.19881439 29.02703285]
[124.49703217 14.65604496]
[133.56828308 2.70980763]
[146.25701904 -5.28993082]
[160.94692993 -8.32414055]
[175.76676941 -6.00631523]
[188.82875061 1.36829400]
[198.46897888 12.86028767]
[203.45947266 27.00578308]
[203.16452026 42.00288010]
[197.62168884 55.94121170]
[187.53704834 67.04526520]
[174.19520569 73.90058136]
[159.29568481 75.63390350]
[144.73860168 72.02540588]
[159.24325562 75.84838867]
[173.74789429 79.67137909]
[188.27572632 83.40528870]
[202.82620239 87.04999542]
[217.37666321 90.69469452]
[231.92713928 94.33940125]
[246.47760010 97.98410034]
[264.07806396 92.52603912]
[276.18762207 105.24420929]
[290.78170776 108.71008301]
[305.37579346 112.17595673]
[318.80261230 99.95580292]
[336.72186279 98.27873993]
[351.91448975 107.63002014]
[358.37420654 124.09011841]
[373.04898071 127.19679260]
[387.72372437 130.30346680]
[402.39849854 133.41012573]
[413.59768677 127.04940796]
[425.74212646 129.91966248]
[432.46237183 139.95617676]
[447.09790039 143.24269104]
[461.73342896 146.52922058]
[482.27426147 134.21902466]
[503.41146851 144.29699707]
[517.53460693 139.24365234]
[531.65777588 134.19030762]
[545.78094482 129.13696289]
[559.90411377 124.08361053]
[574.02728271 119.03026581]
[587.79547119 99.56302643]
[610.36053467 104.55647278]
[624.07366943 98.47785187]
[637.78680420 92.39923859]
[647.26757812 79.73332214]
[662.03845215 81.64922333]
[675.75164795 75.57060242]
[689.46478271 69.49198151]
[703.17791748 63.41336060]
[716.89105225 57.33473969]
[728.92114258 45.38844681]
[743.73083496 53.64130783]
[739.90020752 70.15683746]
[722.96966553 71.04788971]
[709.25653076 77.12650299]
[695.54339600 83.20512390]
[681.83026123 89.28374481]
[668.11712646 95.36236572]
[659.61718750 107.59349823]
[643.86547852 106.11238098]
[630.15228271 112.19100189]
[616.43914795 118.26962280]
[615.88616943 124.64942932]
[613.38348389 130.59965515]
[609.14324951 135.53472900]
[603.55010986 138.95858765]
[597.12658691 140.51449585]
[590.48413086 140.02188110]
[584.26513672 137.49682617]
[579.08062744 133.15342712]
[564.95745850 138.20677185]
[550.83428955 143.26011658]
[536.71112061 148.31346130]
[522.58795166 153.36682129]
[508.46481323 158.42016602]
[508.09094238 163.54811096]
[506.65472412 168.48500061]
[518.13220215 178.14248657]
[533.67315674 181.10713196]
[538.43017578 195.22167969]
[549.90765381 204.87916565]
[561.38519287 214.53663635]
[569.93994141 217.65440369]
[572.94329834 224.38372803]
[584.30145264 234.18132019]
[595.65960693 243.97891235]
[607.07763672 253.70661926]
[618.55511475 263.36410522]
[634.08807373 262.19580078]
[645.59033203 272.15335083]
[646.60839844 286.96884155]
[658.08593750 296.62634277]
[672.49816895 291.31759644]
[687.63116455 293.94204712]
[699.41424561 303.79370117]
[704.67779541 318.22250366]
[702.00592041 333.34722900]
[692.11737061 345.09933472]
[677.67211914 350.31762695]
[662.55584717 347.59835815]
[650.83477783 337.67303467]
[645.66180420 323.21148682]
[648.42846680 308.10385132]
[636.95092773 298.44638062]
[622.17950439 299.97616577]
[610.40209961 290.34561157]
[608.89764404 274.84161377]
[597.42016602 265.18414307]
[590.29919434 263.28787231]
[585.86199951 255.33703613]
[574.50384521 245.53944397]
[563.14575195 235.74185181]
[551.72772217 226.01414490]
[540.25018311 216.35667419]
[528.77270508 206.69918823]
[514.05267334 204.42530823]
[508.47476196 189.61999512]
[496.99725342 179.96252441]
[487.65908813 183.65446472]
[477.53207397 183.30377197]
[468.30636597 178.89575195]
[461.55096436 171.09895325]
[458.44689941 161.16474915]
[443.81137085 157.87823486]
[429.17584229 154.59170532]
[412.71490479 160.70976257]
[399.29180908 148.08489990]
[384.61706543 144.97822571]
[369.94229126 141.87155151]
[355.26754761 138.76487732]
[347.58117676 148.11987305]
[336.58642578 153.36027527]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 144]
[4 143]
[5 142]
[8 140]
[9 139]
[10 138]
[11 137]
[12 136]
[14 135]
[15 134]
[16 133]
[18 81]
[19 80]
[20 79]
[21 78]
[22 77]
[23 76]
[24 75]
[25 74]
[26 73]
[27 72]
[28 52]
[29 51]
[33 46]
[34 45]
[35 44]
[36 43]
[53 64]
[54 63]
[55 62]
[82 101]
[83 100]
[84 99]
[85 98]
[103 117]
[104 116]
[105 115]
[106 114]
[148 253]
[149 252]
[150 251]
[151 250]
[154 248]
[155 247]
[156 246]
[158 198]
[159 197]
[160 196]
[161 195]
[162 194]
[163 193]
[165 185]
[166 184]
[167 183]
[169 181]
[170 180]
[171 179]
[172 178]
[173 177]
[200 241]
[201 240]
[203 238]
[204 237]
[205 236]
[207 235]
[208 234]
[209 233]
[210 231]
[211 230]
[214 227]
[215 226]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
