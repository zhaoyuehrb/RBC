%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 19:35:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCCGUUCCUAGAGCUGCACACGAAUUUCCCCGCCAACCGAGUGCCCGCGGGGCUGGAGAAACGGCUGUGCGCCGUCGCUGCCUCCAUCUUGGGCAAACCUGCAGACGUGAGCGUGGGCCGGGCAGCACUGGGCGAGGGGAAGUUGGUGGGCCAGGGGUCCGGCCUUGUCCCUGCUCUGCCUCCGCAACAGCGACCCCGAUCCCUUUCCCCAGGGACCACCCCCCACCCCAUUCCGCAGGCCAAGCUCUGA\
) } def
/len { sequence length } bind def

/coor [
[420.76428223 455.22708130]
[415.75390625 469.64437866]
[404.97821045 480.45394897]
[390.57669067 485.50952148]
[375.40878296 483.80734253]
[362.48608398 475.68533325]
[354.37445068 462.75613403]
[352.68438721 447.58688354]
[357.75149536 433.18942261]
[368.56970215 422.42236328]
[382.99099731 417.42352295]
[384.66387939 402.51708984]
[386.33673096 387.61068726]
[388.00958252 372.70425415]
[389.68243408 357.79782104]
[391.35528564 342.89138794]
[393.02813721 327.98498535]
[386.69616699 321.21313477]
[385.07608032 311.64233398]
[389.17648315 302.36514282]
[398.07708740 296.64709473]
[385.30944824 288.77392578]
[372.54177856 280.90075684]
[357.64749146 280.80627441]
[349.96224976 266.97705078]
[337.19458008 259.10388184]
[324.42694092 251.23068237]
[311.65927124 243.35751343]
[298.89160156 235.48432922]
[286.12396240 227.61114502]
[273.35629272 219.73796082]
[260.58865356 211.86479187]
[247.82099915 203.99160767]
[232.92668152 203.89714050]
[225.24143982 190.06791687]
[215.58396912 193.30415344]
[205.52409363 190.64849854]
[198.42924500 182.74111938]
[196.80981445 172.01977539]
[184.24160767 163.83197021]
[169.35424805 163.36767578]
[162.01477051 149.35186768]
[149.44656372 141.16407776]
[136.87835693 132.97627258]
[124.31015015 124.78846741]
[111.74193573 116.60066223]
[100.37088776 123.25303650]
[85.57220459 121.84368896]
[73.05577087 110.99383545]
[58.09074020 112.01747131]
[43.12570572 113.04110718]
[29.88571739 121.70212555]
[16.66010475 114.85140228]
[1.69507265 115.87503815]
[-13.26995850 116.89867401]
[-28.23499107 117.92230988]
[-43.20002365 118.94594574]
[-53.39644623 131.02105713]
[-69.15161133 132.26623535]
[-81.11824799 121.94271088]
[-82.19676971 106.17526245]
[-71.74730682 94.31843567]
[-55.96934128 93.40667725]
[-44.22365952 103.98091888]
[-29.25862694 102.95727539]
[-14.29359531 101.93363953]
[0.67143649 100.91000366]
[15.63646793 99.88636780]
[27.80605698 91.29856873]
[42.10206985 98.07607269]
[57.06710052 97.05243683]
[72.03213501 96.02880096]
[78.00814819 82.27062988]
[68.54183197 70.63496399]
[59.07551193 58.99929428]
[43.95802307 61.32496262]
[29.79967117 55.80790710]
[20.36650276 44.02309799]
[18.11374283 29.19808197]
[23.54740143 15.32937908]
[14.08108234 3.69370961]
[4.61476326 -7.94195986]
[-4.85155582 -19.57762909]
[-14.38993454 -31.15430069]
[-24.00000381 -42.67153168]
[-33.61007309 -54.18875885]
[-43.29146576 -65.64610291]
[-58.14253616 -71.10102844]
[-60.53844070 -85.80167389]
[-70.29077911 -97.19868469]
[-80.04312134 -108.59569550]
[-89.86602783 -119.93193817]
[-99.75913239 -131.20698547]
[-109.65223694 -142.48200989]
[-119.54534149 -153.75704956]
[-135.24089050 -158.50909424]
[-138.70928955 -174.53726196]
[-126.38256073 -185.35314941]
[-110.94137573 -179.83032227]
[-108.27030182 -163.65016174]
[-98.37719727 -152.37512207]
[-88.48409271 -141.10008240]
[-78.59098816 -129.82504272]
[-71.83544922 -126.87810516]
[-68.64610291 -118.34803772]
[-58.89376831 -106.95102692]
[-49.14142990 -95.55400848]
[-34.98791122 -90.91427612]
[-31.89445305 -75.39843750]
[-25.17602730 -72.36784363]
[-22.09284592 -63.79882812]
[-12.48277569 -52.28160095]
[-2.87270570 -40.76436996]
[3.80757165 -37.65058517]
[6.78411341 -29.04394913]
[16.25043297 -17.40827942]
[25.71675110 -5.77260971]
[35.18307114 5.86306000]
[49.86720657 3.36472249]
[63.92380524 8.58660221]
[73.54289246 20.22015762]
[76.06394958 35.20485306]
[70.71118164 49.53297424]
[80.17749786 61.16864395]
[89.64382172 72.80431366]
[115.98542786 81.14778900]
[119.92974091 104.03245544]
[132.49795532 112.22026062]
[145.06616211 120.40805817]
[157.63436890 128.59585571]
[170.20257568 136.78366089]
[185.98890686 137.83360291]
[192.42941284 151.26376343]
[204.99761963 159.45155334]
[225.17256165 159.65345764]
[233.11462402 177.30026245]
[248.92214966 177.95787048]
[255.69416809 191.22395325]
[268.46182251 199.09713745]
[281.22949219 206.97030640]
[293.99713135 214.84349060]
[306.76480103 222.71667480]
[319.53244019 230.58985901]
[332.30010986 238.46302795]
[345.06774902 246.33621216]
[357.83541870 254.20939636]
[373.64294434 254.86700439]
[380.41497803 268.13308716]
[393.18261719 276.00625610]
[405.95028687 283.87945557]
[419.95510864 289.25207520]
[434.71261597 291.93826294]
[449.47012329 294.62448120]
[464.22766113 297.31069946]
[495.94845581 267.31777954]
[510.55441284 263.90219116]
[525.16033936 260.48657227]
[539.76629639 257.07098389]
[554.37225342 253.65541077]
[568.97821045 250.23980713]
[583.58416748 246.82421875]
[595.25994873 236.14779663]
[609.41473389 240.78376770]
[624.02062988 237.36817932]
[627.04071045 234.33343506]
[630.51605225 232.57785034]
[633.99383545 232.08856201]
[637.07098389 232.70849609]
[639.43627930 234.16476440]
[654.19384766 231.47856140]
[668.95135498 228.79234314]
[681.14282227 218.70878601]
[695.04992676 224.04180908]
[709.80749512 221.35559082]
[724.56500244 218.66938782]
[730.20721436 209.41004944]
[739.80926514 204.86433411]
[750.11303711 206.30856323]
[757.76574707 213.02992249]
[772.58538818 210.71101379]
[787.40509033 208.39208984]
[799.82208252 197.67999268]
[815.21643066 203.33219910]
[817.75164795 219.53419495]
[804.81976318 229.61875916]
[789.72399902 223.21176147]
[774.90429688 225.53067017]
[760.08465576 227.84959412]
[745.93237305 241.04806519]
[727.25122070 233.42691040]
[712.49365234 236.11311340]
[697.73614502 238.79931641]
[686.60021973 248.69075012]
[671.63757324 243.54986572]
[656.88000488 246.23606873]
[642.12249756 248.92228699]
[627.43627930 251.97412109]
[612.83032227 255.38970947]
[602.19921875 265.82183838]
[586.99975586 261.43017578]
[572.39379883 264.84576416]
[557.78784180 268.26135254]
[543.18188477 271.67694092]
[528.57592773 275.09252930]
[513.96997070 278.50811768]
[499.36404419 281.92370605]
[497.47543335 289.18203735]
[511.99206543 292.95925903]
[526.96545410 292.06591797]
[532.44189453 306.03045654]
[520.85302734 315.55404663]
[508.21481323 307.47589111]
[493.69818115 303.69866943]
[491.80957031 310.95697021]
[502.89840698 321.05834961]
[513.98724365 331.15975952]
[529.76074219 330.17382812]
[541.55596924 340.69271851]
[542.37512207 356.47576904]
[531.73211670 368.15914917]
[515.94128418 368.81134033]
[504.37103271 358.04541016]
[503.88583374 342.24856567]
[492.79699707 332.14718628]
[481.70819092 322.04580688]
[490.58731079 334.13549805]
[494.34109497 348.65823364]
[492.43246460 363.53631592]
[485.13455200 376.64126587]
[473.49133301 386.09832764]
[459.16854858 390.55450439]
[444.21520996 389.37231445]
[430.77053833 382.72088623]
[420.75799561 371.55178833]
[415.60995483 357.46286011]
[416.06292725 342.46969604]
[422.05206299 328.71725464]
[432.72061157 318.17294312]
[446.54226685 312.34524536]
[461.54144287 312.06820679]
[446.78393555 309.38198853]
[432.02639771 306.69580078]
[417.26889038 304.00958252]
[418.64355469 319.82250977]
[407.93457031 329.65783691]
[406.26171875 344.56427002]
[404.58886719 359.47067261]
[402.91601562 374.37710571]
[401.24313354 389.28353882]
[399.57028198 404.18997192]
[397.89743042 419.09637451]
[410.85198975 427.16744995]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 251]
[12 250]
[13 249]
[14 248]
[15 247]
[16 246]
[17 245]
[21 150]
[22 149]
[23 148]
[25 146]
[26 145]
[27 144]
[28 143]
[29 142]
[30 141]
[31 140]
[32 139]
[33 138]
[35 136]
[39 134]
[40 133]
[42 131]
[43 130]
[44 129]
[45 128]
[46 127]
[49 72]
[50 71]
[51 70]
[53 68]
[54 67]
[55 66]
[56 65]
[57 64]
[73 125]
[74 124]
[75 123]
[80 118]
[81 117]
[82 116]
[83 115]
[84 113]
[85 112]
[86 111]
[87 109]
[89 107]
[90 106]
[91 105]
[92 103]
[93 102]
[94 101]
[95 100]
[151 243]
[152 242]
[153 241]
[154 240]
[155 206]
[156 205]
[157 204]
[158 203]
[159 202]
[160 201]
[161 200]
[163 198]
[164 197]
[169 196]
[170 195]
[171 194]
[173 192]
[174 191]
[175 190]
[179 188]
[180 187]
[181 186]
[214 225]
[215 224]
[216 223]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
