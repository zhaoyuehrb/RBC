%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sat Sep 12 01:56:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAGACUCCAUUUGCUUCUCCUUAUUCUCCUUCUUUUUUCAAUUCUCUUAUCCCCAGUAAGAGGUGGUUUGGGUCCUGCGGAAGGUCAUUGUCUCAAUUUGUUUGGUGUUUGCAGAACAGAUGUCUGCAACAUAGUAGAAGAUCAAAUUGGUGCCUGCCGAAGAAGGAUGAAGUGCUGUAGAGCAUGGUGGAUUUUAAUGCCAAUUCCAACACCACUUAUCAUGUCAGAUUAUCAAGAACCCCUUAAACCUAAC\
UUGAAAUGA\
) } def
/len { sequence length } bind def

/coor [
[453.12780762 472.02868652]
[451.95223999 464.37335205]
[441.50396729 453.61074829]
[431.05569458 442.84814453]
[420.60742188 432.08551025]
[410.15917969 421.32290649]
[403.26818848 418.72137451]
[399.65176392 410.37023926]
[389.33184814 399.48452759]
[379.01190186 388.59881592]
[368.69195557 377.71310425]
[358.37200928 366.82739258]
[348.05206299 355.94168091]
[337.66778564 345.11730957]
[327.21951294 334.35470581]
[316.77124023 323.59210205]
[306.32296753 312.82949829]
[295.87472534 302.06686401]
[281.02432251 302.10363770]
[270.27496338 291.33767700]
[270.33709717 275.76095581]
[254.75360107 280.09201050]
[239.02415466 275.94006348]
[227.47555542 264.34906006]
[223.33398438 248.42251587]
[227.82414246 232.49302673]
[217.24902344 221.85502625]
[206.67390442 211.21704102]
[196.03590393 200.64192200]
[185.33541870 190.13005066]
[174.63493347 179.61816406]
[163.93444824 169.10629272]
[153.23396301 158.59442139]
[142.53347778 148.08253479]
[131.83297729 137.57066345]
[121.13249969 127.05878448]
[110.43200684 116.54690552]
[118.41236877 129.24784851]
[117.87732697 144.23829651]
[109.01179504 156.33798218]
[94.87944794 161.36557007]
[80.36402893 157.58367920]
[70.48168182 146.29920959]
[68.64746094 131.41177368]
[75.49522400 118.06606293]
[88.65892792 110.87390900]
[74.18939209 114.82772064]
[59.71986008 118.78152466]
[45.25032425 122.73533630]
[30.78079224 126.68914032]
[16.31125832 130.64294434]
[1.84172392 134.59675598]
[-7.32783842 147.76104736]
[-23.34591103 148.65597534]
[-33.92480087 136.59501648]
[-30.94928741 120.83031464]
[-16.70193100 113.45520020]
[-2.11208367 120.12722015]
[12.35745049 116.17341614]
[26.82698441 112.21960449]
[41.29651642 108.26580048]
[55.76605225 104.31198883]
[70.23558807 100.35818481]
[84.70511627 96.40438080]
[83.81651306 81.43072510]
[68.98090363 79.21602631]
[54.14530182 77.00132751]
[39.30970001 74.78662872]
[28.53193665 85.94993591]
[13.24510098 88.61306763]
[-0.67270589 81.75199890]
[-7.86980343 68.00494385]
[-5.57876062 52.65793610]
[5.31946993 41.61220169]
[20.63429642 39.11505890]
[34.47685623 46.12670517]
[41.52439880 59.95102310]
[56.36000061 62.16572189]
[71.19560242 64.38041687]
[86.03120422 66.59511566]
[95.89071655 55.29069519]
[91.68024445 40.89375305]
[80.38033295 29.82024956]
[84.23403931 15.43281651]
[80.02355957 1.03587592]
[75.81308746 -13.36106491]
[70.41793060 -20.68990517]
[71.63912201 -27.95367813]
[67.59961700 -42.39952087]
[63.56010818 -56.84536362]
[54.18805313 -45.13363647]
[39.18836594 -45.03690338]
[29.66603851 -56.62678528]
[32.67090988 -71.32272339]
[45.97832870 -78.24462128]
[59.73652267 -72.26744080]
[56.55989075 -86.92722321]
[53.38326263 -101.58699799]
[50.20663071 -116.24677277]
[47.02999878 -130.90653992]
[43.85336685 -145.56631470]
[40.67673874 -160.22608948]
[37.15344620 -174.80644226]
[33.28547668 -189.29914856]
[29.41750717 -203.79187012]
[25.54953766 -218.28459167]
[14.51532745 -229.62287903]
[18.70904732 -243.91490173]
[14.84107685 -258.40762329]
[10.97310734 -272.90032959]
[7.01929951 -287.36987305]
[2.97979331 -301.81570435]
[-1.05971277 -316.26156616]
[-5.09921885 -330.70739746]
[-9.13872528 -345.15322876]
[-13.17823124 -359.59909058]
[-17.21773720 -374.04492188]
[-31.53490639 -380.33401489]
[-38.41355133 -394.37747192]
[-34.60579300 -409.54437256]
[-21.90953255 -418.67337036]
[-6.31955767 -417.45407104]
[4.80302095 -406.46215820]
[6.20646334 -390.88766479]
[-2.77189422 -378.08444214]
[1.26761198 -363.63858032]
[5.30711842 -349.19274902]
[9.34662437 -334.74691772]
[13.38613033 -320.30105591]
[17.42563629 -305.85522461]
[21.46514320 -291.40936279]
[26.27694893 -285.83261108]
[25.46582222 -276.76831055]
[29.33379173 -262.27557373]
[33.20176315 -247.78286743]
[43.95930862 -237.48120117]
[40.04225159 -222.15255737]
[43.91022110 -207.65983582]
[47.77819443 -193.16712952]
[51.64616394 -178.67440796]
[53.96584320 -177.15701294]
[55.83451462 -174.64447021]
[56.87569427 -171.30039978]
[56.77766037 -167.41969299]
[55.33651352 -163.40272522]
[58.51314545 -148.74295044]
[61.68977356 -134.08317566]
[64.86640930 -119.42340088]
[68.04303741 -104.76362610]
[71.21966553 -90.10385132]
[74.39630127 -75.44407654]
[78.00595093 -60.88487244]
[82.04545593 -46.43902969]
[86.08496094 -31.99318504]
[90.21002960 -17.57153893]
[94.42050171 -3.17459893]
[98.63097382 11.22234154]
[109.62973022 21.26608086]
[106.07718658 36.68327713]
[110.28765869 51.08021927]
[120.94388580 105.84642029]
[131.64437866 116.35829163]
[142.34486389 126.87017059]
[153.04534912 137.38204956]
[163.74583435 147.89392090]
[174.44631958 158.40580750]
[185.14682007 168.91767883]
[195.84730530 179.42956543]
[206.54779053 189.94143677]
[214.83328247 193.70576477]
[217.31188965 200.64192200]
[227.88700867 211.27990723]
[238.46212769 221.91790771]
[251.76205444 217.64347839]
[265.54132080 219.50038147]
[277.12460327 227.07069397]
[284.28771973 238.83279419]
[285.68457031 252.46694946]
[281.09973145 265.31268311]
[296.67141724 265.71218872]
[307.11413574 276.77581787]
[306.63732910 291.61862183]
[317.08560181 302.38122559]
[327.53384399 313.14382935]
[337.98211670 323.90643311]
[348.43038940 334.66903687]
[356.62429810 338.62875366]
[358.93777466 345.62173462]
[369.25772095 356.50744629]
[379.57766724 367.39315796]
[389.89761353 378.27886963]
[400.21755981 389.16458130]
[410.53750610 400.05029297]
[420.92178345 410.87463379]
[431.37005615 421.63726807]
[441.81829834 432.39987183]
[452.26657104 443.16247559]
[462.71484375 453.92507935]
[457.84207153 439.73861694]
[456.72637939 424.78015137]
[459.44067383 410.02777100]
[465.80746460 396.44604492]
[475.41055298 384.92297363]
[487.62194824 376.21197510]
[501.64331055 370.88265991]
[516.55780029 369.28341675]
[531.39031982 371.51882935]
[545.17095947 377.44277954]
[556.99884033 386.66787720]
[566.10046387 398.59097290]
[571.88073730 412.43249512]
[573.96185303 427.28744507]
[572.20764160 442.18450928]
[566.73278809 456.14968872]
[557.89532471 468.26986694]
[546.27301025 477.75259399]
[532.62579346 483.97787476]
[517.84600830 486.53863525]
[502.89999390 485.26745605]
[488.76492310 480.24743652]
[476.36785889 471.80929565]
[483.99581909 484.72497559]
[491.62377930 497.64062500]
[499.25173950 510.55627441]
[512.93170166 518.50415039]
[512.74176025 533.39758301]
[520.36975098 546.31323242]
[527.99768066 559.22888184]
[535.62567139 572.14453125]
[549.30566406 580.09240723]
[549.11572266 594.98577881]
[556.74365234 607.90148926]
[564.37164307 620.81713867]
[584.08984375 624.82867432]
[594.29626465 641.81329346]
[588.75695801 660.51898193]
[596.83929443 673.15527344]
[604.92169189 685.79150391]
[620.21899414 690.62597656]
[625.84228516 705.65124512]
[617.47778320 719.34118652]
[601.54211426 721.19409180]
[590.25970459 709.78851318]
[592.28546143 693.87390137]
[584.20306396 681.23760986]
[576.12066650 668.60137939]
[565.92901611 669.18103027]
[556.33489990 665.46478271]
[549.08013916 658.05590820]
[545.51129150 648.23437500]
[546.32995605 637.73577881]
[551.45599365 628.44506836]
[543.82800293 615.52941895]
[536.20007324 602.61376953]
[523.06567383 595.58972168]
[522.71002197 579.77246094]
[515.08203125 566.85681152]
[507.45410156 553.94116211]
[499.82611084 541.02551270]
[486.69174194 534.00146484]
[486.33609009 518.18426514]
[478.70812988 505.26858521]
[471.08016968 492.35293579]
[463.45217896 479.43728638]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 198]
[3 197]
[4 196]
[5 195]
[6 194]
[8 193]
[9 192]
[10 191]
[11 190]
[12 189]
[13 188]
[14 186]
[15 185]
[16 184]
[17 183]
[18 182]
[21 179]
[26 173]
[27 172]
[28 171]
[29 169]
[30 168]
[31 167]
[32 166]
[33 165]
[34 164]
[35 163]
[36 162]
[37 161]
[46 64]
[47 63]
[48 62]
[49 61]
[50 60]
[51 59]
[52 58]
[65 80]
[66 79]
[67 78]
[68 77]
[81 160]
[82 159]
[84 157]
[85 156]
[86 155]
[88 154]
[89 153]
[90 152]
[96 151]
[97 150]
[98 149]
[99 148]
[100 147]
[101 146]
[102 145]
[103 140]
[104 139]
[105 138]
[106 137]
[108 135]
[109 134]
[110 133]
[111 131]
[112 130]
[113 129]
[114 128]
[115 127]
[116 126]
[117 125]
[221 264]
[222 263]
[223 262]
[224 261]
[226 259]
[227 258]
[228 257]
[229 256]
[231 254]
[232 253]
[233 252]
[236 246]
[237 245]
[238 244]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
