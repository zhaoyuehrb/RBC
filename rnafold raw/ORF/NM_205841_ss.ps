%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 22:25:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAAACUGUCAGGCAUGUUUCUGCUCCUCUCUCUGGCUCUUUUCUGCUUUUUAACAGGUGUCUUCAGUCAGGGAGGACAGGUUGACUGUGGUGAGUUCCAGGACCCCAAGGUCUACUGCACUCGGGAAUCUAACCCACACUGUGGCUCUGAUGGCCAGACAUAUGGCAAUAAAUGUGCCUUCUGUAAGGCCAUAGUGAAAAGUGGUGGAAAGAUUAGCCUAAAGCAUCCUGGAAAAUGCUGA\
) } def
/len { sequence length } bind def

/coor [
[111.83230591 379.06790161]
[97.16282654 375.93640137]
[84.70573425 367.58050537]
[76.24315643 355.19564819]
[72.98576355 340.55361938]
[75.39955139 325.74908447]
[83.13921356 312.90005493]
[95.09749603 303.84469604]
[109.56363678 299.87850952]
[124.46808624 301.56884766]
[137.67860413 308.67395020]
[147.30613708 320.17883301]
[145.18879700 305.32904053]
[143.07145691 290.47921753]
[140.95410156 275.62942505]
[138.64575195 260.80810547]
[136.14675903 246.01773071]
[126.39723206 234.75735474]
[131.72729492 219.86100769]
[129.22830200 205.07064819]
[126.72931671 190.28027344]
[124.23032379 175.48989868]
[121.73133087 160.69953918]
[119.23233795 145.90916443]
[116.73334503 131.11878967]
[101.86589050 137.74040222]
[84.53109741 137.14851379]
[68.24945831 128.54339600]
[56.71462631 112.83616638]
[42.03179169 115.90444946]
[27.34895706 118.97273254]
[12.66612148 122.04101562]
[-2.01671410 125.10929108]
[-16.69954872 128.17756653]
[-31.38238525 131.24584961]
[-46.06521988 134.31413269]
[-60.74805450 137.38241577]
[-75.43089294 140.45069885]
[-90.11372375 143.51898193]
[-95.29850769 161.26330566]
[-108.72529602 173.84565735]
[-126.60192871 177.83134460]
[-143.93959045 172.19708252]
[-155.94508362 158.59184265]
[-170.49847412 162.22482300]
[-185.05186462 165.85781860]
[-199.60527039 169.49081421]
[-205.28886414 183.92953491]
[-218.39190674 192.24154663]
[-233.87602234 191.23074341]
[-245.78724670 181.28578186]
[-249.54547119 166.23071289]
[-243.70559692 151.85449219]
[-230.51313782 143.68510437]
[-215.04090881 144.86383057]
[-203.23826599 154.93742371]
[-188.68486023 151.30442810]
[-174.13146973 147.67143250]
[-159.57806396 144.03843689]
[-157.95542908 132.41085815]
[-152.49931335 121.97643280]
[-143.82528687 113.96255493]
[-132.92889404 109.32067108]
[-121.07149506 108.61338043]
[-109.63421631 111.94635773]
[-99.95706940 118.95333099]
[-93.18200684 128.83615112]
[-78.49916840 125.76786041]
[-63.81633759 122.69958496]
[-49.13349915 119.63130188]
[-34.45066452 116.56301880]
[-19.76782990 113.49473572]
[-5.08499527 110.42646027]
[9.59784031 107.35817719]
[24.28067589 104.28989410]
[38.96351242 101.22161102]
[53.64634705 98.15333557]
[56.52532959 83.43221283]
[44.08017731 75.05855560]
[31.63502121 66.68489838]
[19.18986511 58.31124496]
[3.23247266 59.96689224]
[-7.90800524 48.42266083]
[-5.68554735 32.53429413]
[8.19496632 24.48998642]
[23.08559418 30.46064377]
[27.56352043 45.86608887]
[40.00867462 54.23974609]
[52.45383072 62.61339951]
[64.89898682 70.98705292]
[76.53995514 61.52725220]
[70.88903809 47.63239288]
[65.23811340 33.73753357]
[59.58720016 19.84267426]
[53.84694672 5.98448038]
[48.01760101 -7.83647156]
[42.18825531 -21.65742302]
[38.67810440 -24.12828827]
[36.35758209 -27.26669884]
[35.29061508 -30.62099648]
[35.38929749 -33.76463318]
[36.43493652 -36.34310150]
[31.32480621 -50.44581604]
[26.21467400 -64.54853058]
[21.10454178 -78.65124512]
[15.99440956 -92.75395966]
[3.10546327 -102.89334106]
[5.70945454 -119.08442688]
[21.12762070 -124.67121887]
[33.49907303 -113.90649414]
[30.09712410 -97.86408997]
[35.20725632 -83.76137543]
[40.31738663 -69.65866089]
[45.42752075 -55.55595016]
[50.53765106 -41.45323563]
[56.00920486 -27.48677063]
[61.83855057 -13.66581821]
[67.66790009 0.15513372]
[73.15109253 5.08584166]
[73.48205566 14.19175529]
[79.13297272 28.08661461]
[84.78389740 41.98147583]
[90.43481445 55.87633514]
[95.67706299 62.31855392]
[99.54032135 69.29476929]
[102.98564148 54.69580841]
[106.43095398 40.09683990]
[96.93647766 27.67150688]
[97.70178223 12.05266094]
[108.36550140 0.61504620]
[123.89256287 -1.24084651]
[136.95156860 7.36127901]
[141.37643433 22.35976219]
[135.07789612 36.67277908]
[121.02992249 43.54215622]
[117.58460999 58.14112473]
[114.13928986 72.74008942]
[128.57695007 83.45563507]
[135.30023193 101.50936127]
[149.70246887 97.31707001]
[164.10472107 93.12478638]
[178.50697327 88.93250275]
[190.94715881 75.34217834]
[207.81785583 80.20777893]
[218.75939941 68.78004456]
[233.19061279 72.46642303]
[247.53768921 68.08905792]
[261.88476562 63.71169281]
[265.41741943 59.92842865]
[269.62442017 58.05147934]
[273.67233276 58.02016830]
[276.87100220 59.45387268]
[291.37643433 55.63380814]
[305.88183594 51.81373978]
[320.38726807 47.99367142]
[334.89266968 44.17360687]
[349.39807129 40.35353851]
[357.38958740 26.98291969]
[372.15457153 23.31546211]
[384.85217285 31.01654625]
[399.35757446 27.19647980]
[413.86300659 23.37641335]
[419.56756592 9.06683064]
[432.45361328 0.95490772]
[447.46777344 1.97415066]
[458.86633301 11.52458286]
[473.37173462 7.70451641]
[487.87716675 3.88444948]
[502.38256836 0.06438260]
[508.88796997 -14.15580845]
[523.03405762 -20.82078934]
[538.14147949 -16.78356171]
[547.07702637 -3.95037889]
[545.62152100 11.61932182]
[534.46228027 22.57400322]
[518.86834717 23.74119949]
[506.20263672 14.56979847]
[491.69723511 18.38986588]
[477.19180298 22.20993233]
[462.68640137 26.02999878]
[457.47042847 39.95594025]
[444.90585327 48.23817062]
[429.69580078 47.52547836]
[417.68307495 37.88182831]
[403.17764282 41.70189667]
[388.67224121 45.52196121]
[381.41485596 58.47827911]
[366.75872803 62.55900574]
[353.21813965 54.85895538]
[338.71273804 58.67901993]
[324.20730591 62.49908829]
[309.70190430 66.31915283]
[295.19650269 70.13922119]
[280.69107056 73.95928955]
[266.26214600 78.05876923]
[251.91505432 82.43613434]
[237.56797791 86.81349945]
[227.65263367 97.92813873]
[212.19522095 94.55485535]
[206.24540710 105.07116699]
[194.34584045 108.84371948]
[182.69926453 103.33475494]
[168.29701233 107.52703857]
[153.89476013 111.71932220]
[139.49250793 115.91160583]
[131.52371216 128.61979675]
[134.02270508 143.41017151]
[136.52169800 158.20054626]
[139.02069092 172.99090576]
[141.51968384 187.78128052]
[144.01867676 202.57165527]
[146.51766968 217.36201477]
[156.44593811 229.68029785]
[150.93713379 243.51873779]
[153.43611145 258.30911255]
[157.32723999 263.61035156]
[157.88940430 269.23776245]
[155.80392456 273.51208496]
[157.92126465 288.36187744]
[160.03860474 303.21170044]
[162.15594482 318.06149292]
[167.92134094 324.20150757]
[169.22303772 331.64071655]
[166.53881836 337.76464844]
[170.91618347 352.11172485]
[175.29354858 366.45880127]
[179.67091370 380.80587769]
[184.04827881 395.15295410]
[198.76043701 400.08572388]
[207.73596191 412.74349976]
[207.52360535 428.25912476]
[198.20500183 440.66653442]
[183.36335754 445.19479370]
[168.70558167 440.10272217]
[159.86788940 427.34829712]
[160.24855042 411.83590698]
[169.70120239 399.53033447]
[165.32383728 385.18325806]
[160.94647217 370.83618164]
[156.56910706 356.48910522]
[152.19174194 342.14202881]
[148.34992981 356.64169312]
[139.39762878 368.67730713]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 221]
[13 220]
[14 219]
[15 218]
[16 215]
[17 214]
[19 212]
[20 211]
[21 210]
[22 209]
[23 208]
[24 207]
[25 206]
[29 77]
[30 76]
[31 75]
[32 74]
[33 73]
[34 72]
[35 71]
[36 70]
[37 69]
[38 68]
[39 67]
[44 59]
[45 58]
[46 57]
[47 56]
[78 90]
[79 89]
[80 88]
[81 87]
[91 123]
[92 122]
[93 121]
[94 120]
[95 118]
[96 117]
[97 116]
[102 115]
[103 114]
[104 113]
[105 112]
[106 111]
[125 137]
[126 136]
[127 135]
[139 205]
[140 204]
[141 203]
[142 202]
[144 199]
[146 197]
[147 196]
[148 195]
[152 194]
[153 193]
[154 192]
[155 191]
[156 190]
[157 189]
[160 186]
[161 185]
[162 184]
[166 180]
[167 179]
[168 178]
[169 177]
[224 241]
[225 240]
[226 239]
[227 238]
[228 237]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
