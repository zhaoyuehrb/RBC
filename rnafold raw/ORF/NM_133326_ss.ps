%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 17:28:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACAAGCCAGUCUCAGGGGAUCCACCAGCUUCUUCAGGCAGAAAAACGGGCCAAGGACAAGCUAGAGGAAGCCAAGAAGAUUCUGCAUCUACUUUUCCUAAAACGAAGAGACUGGGACUGCUUCUGGAAAAGGAAAGCGAUUGAAGCAAGCCAAGGAGGAAGCAAUGGUAGAAAUUGA\
) } def
/len { sequence length } bind def

/coor [
[155.00067139 312.40933228]
[144.36929321 301.62728882]
[137.81710815 287.97637939]
[136.05485535 272.93731689]
[139.27371216 258.14144897]
[147.12449646 245.19372559]
[158.75563049 235.49859619]
[172.90544128 230.10772705]
[172.38484192 215.11676025]
[171.86424255 200.12579346]
[171.34364319 185.13484192]
[164.91928101 171.58021545]
[153.64526367 161.68595886]
[142.37124634 151.79168701]
[131.09721375 141.89743042]
[119.82319641 132.00315857]
[108.54917908 122.10889435]
[97.27516174 112.21463013]
[83.40454102 106.50446320]
[68.43221283 105.59378815]
[56.65819931 115.79232788]
[41.48710251 114.65548706]
[31.83690643 103.36791992]
[16.86457634 102.45724487]
[1.89224529 101.54656982]
[-12.35221481 108.43176270]
[-24.58626556 99.93604279]
[-38.83072662 106.82123566]
[-51.06477356 98.32551575]
[-66.03710175 97.41484070]
[-81.00943756 96.50416565]
[-95.98176575 95.59349060]
[-110.95409393 94.68281555]
[-125.19855499 101.56800842]
[-137.43260193 93.07228851]
[-152.40493774 92.16161346]
[-167.37727356 91.25093842]
[-183.64230347 99.85740662]
[-197.89910889 89.64428711]
[-212.88499451 88.99360657]
[-227.87086487 88.34293365]
[-236.05227661 101.34140015]
[-249.64430237 108.49349213]
[-264.99075317 107.87535095]
[-277.96350098 99.65323639]
[-285.07296753 86.03886414]
[-284.40670776 70.69442749]
[-276.14398193 57.74750900]
[-262.50738525 50.68075562]
[-247.16513062 51.39509964]
[-234.24417114 59.69837570]
[-227.22019958 73.35704803]
[-212.23431396 74.00772858]
[-197.24842834 74.65840912]
[-188.10713196 66.71031189]
[-175.60012817 67.14646149]
[-166.46659851 76.27861023]
[-151.49426270 77.18928528]
[-136.52192688 78.09996033]
[-123.34838867 71.14962769]
[-110.04341888 79.71048737]
[-95.07109070 80.62116241]
[-80.09876251 81.53183746]
[-65.12642670 82.44251251]
[-50.15409851 83.35318756]
[-36.98056030 76.40285492]
[-23.67559052 84.96371460]
[-10.50205135 78.01337433]
[2.80292034 86.57423401]
[17.77525139 87.48490906]
[32.74758148 88.39558411]
[43.69468307 78.36082458]
[58.89172745 79.07109070]
[69.34288788 90.62145233]
[84.31521606 91.53212738]
[89.35944366 85.98183441]
[78.25900269 75.89321136]
[88.34779358 64.79293060]
[99.44789124 74.88123322]
[104.49211121 69.33093262]
[102.15845490 54.51358032]
[99.82479095 39.69622421]
[97.49113464 24.87886810]
[85.41859436 14.31320572]
[86.29595947 -1.70583844]
[99.45019531 -10.88982487]
[114.79049683 -6.19358444]
[120.54909515 8.78032875]
[112.30849457 22.54520988]
[114.64215088 37.36256409]
[116.97580719 52.17992020]
[119.30947113 66.99727631]
[126.73728180 68.03534698]
[149.02072144 71.14955139]
[155.32720947 57.53969193]
[161.63368225 43.92983246]
[167.94017029 30.31997490]
[174.24665833 16.71011543]
[180.55313110 3.10025597]
[173.74691772 -10.97842693]
[177.63273621 -26.12551880]
[190.37585449 -35.18902206]
[205.95933533 -33.88943100]
[217.02516174 -22.84037209]
[218.34835815 -7.25887251]
[209.30418396 5.49796009]
[194.16299438 9.40673923]
[187.85652161 23.01659775]
[181.55003357 36.62645721]
[175.24354553 50.23631668]
[168.93705750 63.84617615]
[162.63058472 77.45603180]
[136.68452454 96.04003906]
[107.16942596 100.94061279]
[118.44344330 110.83487701]
[129.71746826 120.72914124]
[140.99148560 130.62341309]
[152.26550293 140.51766968]
[163.53952026 150.41194153]
[174.81353760 160.30619812]
[213.86898804 151.56565857]
[228.32940674 155.55262756]
[242.78984070 159.53958130]
[257.25027466 163.52655029]
[271.71072388 167.51351929]
[286.17114258 171.50048828]
[300.63156128 175.48745728]
[309.52502441 164.48492432]
[321.90515137 157.72798157]
[335.88363647 156.20960999]
[349.34259033 160.12657166]
[360.25558472 168.85467529]
[366.99261475 181.04794312]
[368.56365967 194.84609985]
[382.95269775 199.08343506]
[395.23892212 189.79069519]
[410.46322632 189.51751709]
[422.78338623 198.15911865]
[427.59503174 212.22987366]
[441.98410034 216.46720886]
[454.90933228 207.66537476]
[470.46307373 209.28239441]
[481.30136108 220.55474854]
[482.30664062 236.15998840]
[473.00427246 248.72978210]
[457.78652954 252.32907104]
[443.83880615 245.25837708]
[437.74673462 230.85626221]
[423.35769653 226.61892700]
[411.68811035 235.83622742]
[396.65075684 236.42147827]
[384.00433350 227.94084167]
[378.71536255 213.47248840]
[364.32632446 209.23515320]
[353.84817505 221.28352356]
[339.11373901 227.58512878]
[323.04769897 226.83399963]
[308.86331177 219.12966919]
[299.41943359 205.96730042]
[296.64459229 189.94789124]
[282.18417358 185.96092224]
[267.72375488 181.97395325]
[253.26330566 177.98698425]
[238.80287170 174.00001526]
[224.34245300 170.01304626]
[209.88201904 166.02609253]
[203.99516296 170.67312622]
[186.33459473 184.61422729]
[186.85519409 199.60519409]
[187.37580872 214.59616089]
[187.89640808 229.58712769]
[202.38610840 233.98341370]
[214.66177368 242.84831238]
[223.39186096 255.22023010]
[227.62936401 269.75714111]
[226.91465759 284.88223267]
[221.32524109 298.95480347]
[211.46743774 310.44836426]
[198.41052246 318.11621094]
[183.57083130 321.12658691]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 171]
[9 170]
[10 169]
[11 168]
[12 120]
[13 119]
[14 118]
[15 117]
[16 116]
[17 115]
[18 114]
[19 75]
[20 74]
[23 71]
[24 70]
[25 69]
[27 67]
[29 65]
[30 64]
[31 63]
[32 62]
[33 61]
[35 59]
[36 58]
[37 57]
[39 54]
[40 53]
[41 52]
[80 92]
[81 91]
[82 90]
[83 89]
[94 112]
[95 111]
[96 110]
[97 109]
[98 108]
[99 107]
[121 166]
[122 165]
[123 164]
[124 163]
[125 162]
[126 161]
[127 160]
[134 154]
[135 153]
[139 149]
[140 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
