%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 18:31:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCCUUUGGCUAGAGAUUUACUACAUCCGUCCUUGGAAGAGGAAAAGAAAAAACAUAAAAAGAAACGCCUAGUACAAAGUCCAAAUUCUUACUUUAUGGAUGUAAAAUGUCCAGGUUGCUACAAGAUCACCACGGUUUUCAGCCAUGCUCAGACAGUGGUUCUUUGUGUAGGUUGUUCAACAGUGUUGUGCCAGCCUACAGGAGGAAAGGCCAGACUCACAGAAGGGUGUUCAUUUAGAAGAAAGCAACACUAA\
) } def
/len { sequence length } bind def

/coor [
[51.62400818 651.28533936]
[64.01512146 642.09490967]
[62.91165161 627.13555908]
[61.80818558 612.17620850]
[53.15557098 600.05261230]
[59.85670471 585.72064209]
[58.75323486 570.76129150]
[57.64976883 555.80194092]
[46.23881912 546.29791260]
[44.90664291 531.14276123]
[54.95267487 519.23834229]
[53.84920502 504.27896118]
[52.74573517 489.31961060]
[51.64226913 474.36026001]
[50.53879929 459.40090942]
[49.34356308 444.44860840]
[48.05660248 429.50390625]
[37.73281097 440.38598633]
[22.74143410 440.89456177]
[11.70388603 430.73715210]
[10.96776295 415.75524902]
[20.95640373 404.56475830]
[35.92542648 403.60125732]
[47.26640701 413.41909790]
[47.08233261 398.42022705]
[46.89826202 383.42135620]
[46.71418762 368.42248535]
[46.53011322 353.42361450]
[46.34604263 338.42474365]
[16.34675789 330.24996948]
[-8.55431080 311.62951660]
[-20.49186325 320.71218872]
[-32.42941666 329.79483032]
[-44.36697006 338.87750244]
[-56.30452347 347.96017456]
[-62.13963318 363.28610229]
[-78.37066650 365.62820435]
[-88.30053711 352.57714844]
[-81.71423340 337.55874634]
[-65.38719177 336.02261353]
[-53.44963837 326.93997192]
[-41.51208496 317.85729980]
[-29.57452965 308.77462769]
[-17.63697624 299.69195557]
[-21.60962486 292.64276123]
[-24.87913132 285.23965454]
[-27.41431808 277.55261230]
[-29.19094086 269.65432739]
[-30.19192886 261.61938477]
[-30.40755081 253.52386475]
[-29.83549500 245.44433594]
[-28.48091507 237.45724487]
[-26.35636139 229.63824463]
[-23.48168373 222.06138611]
[-19.88383484 214.79843140]
[-15.59661961 207.91825867]
[-10.66038036 201.48609924]
[-5.12161493 195.56297302]
[0.96746159 190.20510864]
[7.54940701 185.46340942]
[14.56209660 181.38294983]
[21.93930626 178.00257874]
[29.61134148 175.35450745]
[37.50569534 173.46408081]
[45.54772568 172.34941101]
[53.66137695 172.02131653]
[61.76988220 172.48318481]
[69.79650116 173.73088074]
[74.15077209 159.37678528]
[78.50504303 145.02267456]
[82.85931396 130.66856384]
[76.24010468 125.88111115]
[70.90543365 119.69443512]
[67.14370728 112.44300842]
[65.15830231 104.51888275]
[65.05654144 96.35044861]
[66.84394073 88.37931824]
[54.07361603 80.51047516]
[41.30328751 72.64163208]
[28.53295898 64.77278900]
[15.76263142 56.90393829]
[2.28532481 64.26992798]
[-13.06897449 63.89436340]
[-26.17003822 55.87827301]
[-33.49374390 42.37794495]
[-33.07005692 27.02489853]
[-25.01293945 13.94902515]
[-11.48972034 6.66767120]
[3.86192346 7.13948345]
[16.91247749 15.23754692]
[24.15140724 28.78352356]
[23.63147736 44.13361359]
[36.40180588 52.00245667]
[49.17213440 59.87130356]
[61.94245911 67.74015045]
[74.71279144 75.60899353]
[70.21758270 66.16532898]
[67.13809204 55.87562943]
[59.42654800 43.00970078]
[51.71500778 30.14377022]
[44.00346756 17.27783966]
[36.29192352 4.41191149]
[28.58038330 -8.45401764]
[20.86884308 -21.31994629]
[7.53978252 -31.79718399]
[13.91771412 -47.50572586]
[30.77794838 -45.72560501]
[33.73477173 -29.03148842]
[41.44631195 -16.16555977]
[49.15785217 -3.29962969]
[56.86939621 9.56629944]
[64.58093262 22.43222809]
[72.29248047 35.29815674]
[80.00402069 48.16408539]
[94.12718201 43.11074066]
[91.92622375 28.27309227]
[89.72526550 13.43544388]
[87.52430725 -1.40220392]
[74.10618591 -9.43264389]
[69.03804779 -24.22615814]
[74.71292114 -38.79769897]
[88.45130157 -46.26703262]
[103.76634979 -43.10736847]
[113.42675781 -30.81060028]
[112.87118530 -15.18288898]
[102.36195374 -3.60316086]
[104.56291199 11.23448658]
[106.76387024 26.07213402]
[108.96482849 40.90978241]
[123.81569672 43.01965714]
[130.06214905 29.38213539]
[136.30859375 15.74461651]
[142.55502319 2.10709643]
[148.80146790 -11.53042316]
[147.51376343 -27.29913902]
[159.84828186 -35.64832687]
[166.09472656 -49.28584671]
[172.34117126 -62.92336655]
[178.58761597 -76.56088257]
[174.83520508 -88.88159943]
[180.29656982 -100.10210419]
[191.56163025 -104.46002197]
[197.97496033 -118.01985931]
[204.38829041 -131.57969666]
[205.69456482 -148.48324585]
[222.29913330 -151.90739441]
[230.18605042 -136.89964294]
[217.94813538 -125.16637421]
[211.53480530 -111.60653687]
[205.12147522 -98.04669952]
[207.48426819 -80.64526367]
[192.22512817 -70.31444550]
[185.97869873 -56.67692184]
[179.73225403 -43.03940201]
[173.48580933 -29.40188217]
[175.22030640 -14.60861397]
[162.43899536 -5.28397989]
[156.19255066 8.35353947]
[149.94610596 21.99106026]
[143.69966125 35.62857819]
[137.45321655 49.26609802]
[146.68168640 61.09129715]
[161.42828369 58.34569550]
[176.17486572 55.60009766]
[190.92144775 52.85449982]
[205.66802979 50.10890198]
[217.81881714 39.97633743]
[231.74729919 45.25332260]
[246.49388123 42.50772476]
[261.24047852 39.76212692]
[275.98706055 37.01652527]
[290.73364258 34.27092743]
[305.48022461 31.52532959]
[320.22680664 28.77973175]
[334.97338867 26.03413391]
[349.71997070 23.28853607]
[364.44940186 20.45250511]
[376.47494507 10.17159462]
[390.46713257 15.27725792]
[405.17892456 12.35090256]
[419.89068604 9.42454815]
[434.60247803 6.49819326]
[448.95767212 -2.52202940]
[461.59930420 8.77512360]
[454.24319458 24.05007172]
[437.52883911 21.20997238]
[422.81704712 24.13632774]
[408.10528564 27.06268120]
[393.39349365 29.98903656]
[382.42025757 40.06063461]
[367.37576294 35.16428375]
[361.44567871 39.53900909]
[352.46554565 38.03511810]
[337.71896362 40.78071594]
[322.97238159 43.52631378]
[308.22579956 46.27191162]
[293.47921753 49.01750946]
[278.73263550 51.76310730]
[263.98605347 54.50870895]
[249.23948669 57.25430679]
[234.49290466 59.99990463]
[223.39688110 69.93608856]
[208.41362000 64.85548401]
[193.66703796 67.60108185]
[178.92045593 70.34667969]
[164.17387390 73.09227753]
[149.42729187 75.83787537]
[137.25921631 125.36785889]
[97.21341705 135.02284241]
[92.85914612 149.37693787]
[88.50487518 163.73104858]
[84.15060425 178.08515930]
[98.16757965 185.39637756]
[110.55174255 195.21562195]
[120.86025238 207.18957520]
[128.72489929 220.88789368]
[133.86524963 235.81871033]
[136.09869385 251.44625854]
[135.34684753 267.21011353]
[131.63841248 282.54528809]
[125.10797119 296.90252686]
[115.99118042 309.76785278]
[104.61623383 320.68109131]
[91.39207458 329.25234985]
[76.79365540 335.17578125]
[61.34491348 338.24066162]
[61.52898407 353.23953247]
[61.71305847 368.23840332]
[61.89713287 383.23727417]
[62.08120346 398.23614502]
[62.26527786 413.23501587]
[63.00129318 428.21694946]
[64.28825378 443.16165161]
[68.13278198 451.41537476]
[65.49815369 458.29742432]
[66.60162354 473.25680542]
[67.70509338 488.21615601]
[68.80856323 503.17550659]
[69.91203308 518.13488770]
[81.59606934 528.43634033]
[82.50203705 543.62298584]
[72.60912323 554.69848633]
[73.71259308 569.65783691]
[74.81606293 584.61718750]
[83.54759979 597.81079102]
[76.76753998 611.07275391]
[77.87100983 626.03210449]
[78.97447968 640.99145508]
[92.57999420 648.26428223]
[100.07374573 661.74932861]
[99.06449890 677.14361572]
[89.87431335 689.53491211]
[75.43573761 694.96917725]
[60.35606384 691.71234131]
[49.44717026 680.80364990]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 248]
[3 247]
[4 246]
[6 244]
[7 243]
[8 242]
[11 239]
[12 238]
[13 237]
[14 236]
[15 235]
[16 233]
[17 232]
[24 231]
[25 230]
[26 229]
[27 228]
[28 227]
[29 226]
[31 44]
[32 43]
[33 42]
[34 41]
[35 40]
[68 212]
[69 211]
[70 210]
[71 209]
[77 96]
[78 95]
[79 94]
[80 93]
[81 92]
[98 114]
[99 113]
[100 112]
[101 111]
[102 110]
[103 109]
[104 108]
[115 129]
[116 128]
[117 127]
[118 126]
[130 161]
[131 160]
[132 159]
[133 158]
[134 157]
[136 155]
[137 154]
[138 153]
[139 152]
[142 150]
[143 149]
[144 148]
[162 207]
[163 206]
[164 205]
[165 204]
[166 203]
[168 201]
[169 200]
[170 199]
[171 198]
[172 197]
[173 196]
[174 195]
[175 194]
[176 193]
[177 191]
[179 189]
[180 188]
[181 187]
[182 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
