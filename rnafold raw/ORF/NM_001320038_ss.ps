%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 17:57:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCGGGAAUGAGGAGAUACGAGGUGGCGCUGGAGGCGGAGGAGGAGAUCUACUGGGGCUGUUUCUACUUUUUCCCCUGGCUUCGCAUGUGGCGGAGGGAGCGGAGCUCGGCGCACCCCGGGGAGCAGAAGCUGGAGCCUCUGCGAGGCCUGAUGAGCUGUCUGUCCAGCGGCCUGGGUCCUACUCCCCAGCGCUCGGGUCGUGGCUUCCCCCGCCGCAGCCCCACCGCCGCUGCCCAGCCAGCCAGUGCAUUA\
AAGAUUUAA\
) } def
/len { sequence length } bind def

/coor [
[92.61989594 233.93211365]
[87.90016174 248.17024231]
[90.90225983 263.70401001]
[79.55332947 273.35031128]
[74.83359528 287.58840942]
[70.11386108 301.82653809]
[81.63687134 311.74060059]
[88.48434448 325.31192017]
[89.61207581 340.47097778]
[84.84809875 354.90609741]
[74.91889191 366.41604614]
[61.33858109 373.24566650]
[46.17806625 374.35345459]
[31.74921417 369.57049561]
[20.25232315 359.62615967]
[13.44058323 346.03686523]
[12.35273647 330.87490845]
[17.15467262 316.45236206]
[27.11412811 304.96856689]
[40.71236038 298.17471313]
[55.87574005 297.10681152]
[60.59547424 282.86868286]
[65.31520844 268.63055420]
[61.97552109 254.11520386]
[73.66204071 243.45050049]
[78.38177490 229.21238708]
[76.06604767 218.98107910]
[83.24050140 209.61515808]
[85.71865082 194.82128906]
[88.19680023 180.02740479]
[90.67494965 165.23353577]
[93.15309906 150.43965149]
[95.63124847 135.64578247]
[98.10939789 120.85189819]
[87.22368622 110.53195953]
[72.58300018 113.79543304]
[57.94231033 117.05889893]
[50.27751160 121.96507263]
[43.10874176 120.27319336]
[28.43039513 123.36286926]
[13.75204659 126.45255280]
[-0.92630047 129.54222107]
[-15.60464764 132.63191223]
[-30.28299522 135.72158813]
[-44.96134186 138.81126404]
[-59.63969040 141.90093994]
[-74.29946899 145.07757568]
[-88.94015503 148.34104919]
[-103.58084106 151.60452271]
[-108.85090637 161.07174683]
[-118.25848389 165.99092102]
[-128.60420227 164.96031189]
[-136.51554871 158.55737305]
[-151.22949219 161.47282410]
[-158.60208130 175.26336670]
[-173.13337708 181.04051208]
[-187.96214294 176.07647705]
[-196.08670044 162.71511841]
[-193.67086792 147.26527405]
[-181.85533142 137.02188110]
[-166.21902466 136.82154846]
[-154.14494324 146.75888062]
[-139.43099976 143.84342957]
[-125.81611633 130.08638000]
[-106.84431458 136.96383667]
[-92.20362854 133.70036316]
[-77.56293488 130.43688965]
[-71.73753357 125.92929840]
[-62.72937012 127.22259521]
[-48.05102158 124.13291931]
[-33.37267303 121.04324341]
[-18.69432640 117.95355988]
[-4.01597977 114.86388397]
[10.66236782 111.77420044]
[25.34071541 108.68452454]
[40.01906204 105.59484100]
[54.67883682 102.41821289]
[69.31952667 99.15473938]
[83.96021271 95.89127350]
[96.69139862 87.95924377]
[106.07350159 76.25556946]
[115.45561218 64.55189514]
[124.83772278 52.84821701]
[123.30078125 37.34739304]
[132.98229980 25.61185265]
[147.76943970 24.24213982]
[157.15155029 12.53846264]
[166.53364563 0.83478701]
[169.44538879 -7.78736067]
[176.09701538 -10.95115662]
[185.61720276 -22.54278755]
[195.13740540 -34.13441849]
[204.65759277 -45.72604752]
[214.17779541 -57.31768036]
[223.69798279 -68.90930939]
[233.21818542 -80.50093842]
[235.99768066 -96.07608032]
[250.05461121 -101.00069427]
[259.57479858 -112.59232330]
[269.09500122 -124.18395996]
[254.10714722 -123.58044434]
[243.00804138 -133.67054749]
[242.18464661 -148.64793396]
[252.11077881 -159.89390564]
[267.07446289 -160.93701172]
[278.46490479 -151.17700195]
[279.72726440 -136.22949219]
[290.04721069 -147.11520386]
[300.36715698 -158.00091553]
[310.62237549 -168.94761658]
[320.81256104 -179.95491028]
[331.00271606 -190.96218872]
[341.19290161 -201.96948242]
[351.38305664 -212.97677612]
[336.38577271 -213.26222229]
[325.90393066 -223.99211121]
[325.96923828 -238.99195862]
[336.54415894 -249.63015747]
[351.54333496 -249.78498840]
[362.33560181 -239.36732483]
[362.71023560 -224.37129211]
[373.65692139 -234.62652588]
[384.60363770 -244.88175964]
[395.55032349 -255.13699341]
[406.49700928 -265.39224243]
[414.57940674 -278.02850342]
[419.29913330 -292.26660156]
[424.01889038 -306.50473022]
[428.73861694 -320.74285889]
[433.45834351 -334.98098755]
[438.09359741 -349.24682617]
[442.64422607 -363.53988647]
[447.19482422 -377.83297729]
[451.74545288 -392.12603760]
[455.95590210 -406.52297974]
[459.82388306 -421.01568604]
[459.01275635 -430.08001709]
[463.82455444 -435.65676880]
[467.86407471 -450.10260010]
[471.90356445 -464.54846191]
[475.94308472 -478.99429321]
[479.98257446 -493.44015503]
[478.42510986 -510.32238770]
[494.21643066 -516.49249268]
[504.51687622 -503.02633667]
[494.42843628 -489.40063477]
[490.38891602 -474.95480347]
[486.34942627 -460.50894165]
[482.30990601 -446.06311035]
[478.27041626 -431.61724854]
[474.31658936 -417.14773560]
[470.44863892 -402.65499878]
[471.70370483 -400.18353271]
[472.07189941 -397.07400513]
[471.30831909 -393.65585327]
[469.28961182 -390.34008789]
[466.03851318 -387.57543945]
[461.48788452 -373.28234863]
[456.93728638 -358.98928833]
[452.38665771 -344.69619751]
[453.34881592 -337.39361572]
[447.69647217 -330.26123047]
[442.97674561 -316.02313232]
[438.25698853 -301.78500366]
[433.53726196 -287.54687500]
[428.81753540 -273.30874634]
[439.26580811 -262.54614258]
[453.63751221 -266.84188843]
[468.00924683 -271.13763428]
[475.30599976 -276.57614136]
[482.57687378 -275.39801025]
[496.99850464 -279.52307129]
[511.42016602 -283.64813232]
[525.84179688 -287.77319336]
[540.26342773 -291.89825439]
[554.68511963 -296.02331543]
[569.10675049 -300.14837646]
[583.52838135 -304.27346802]
[597.95001221 -308.39852905]
[612.37170410 -312.52359009]
[623.51196289 -323.75765991]
[637.87628174 -319.81872559]
[652.29797363 -323.94378662]
[658.50207520 -338.29800415]
[672.50451660 -345.25976562]
[687.69372559 -341.54196167]
[696.89782715 -328.90005493]
[695.77093506 -313.30313110]
[684.84515381 -302.11557007]
[669.27923584 -300.61984253]
[656.42303467 -309.52215576]
[642.00134277 -305.39709473]
[631.89263916 -294.45806885]
[616.49676514 -298.10192871]
[602.07507324 -293.97686768]
[587.65344238 -289.85180664]
[573.23181152 -285.72674561]
[558.81018066 -281.60168457]
[544.38848877 -277.47662354]
[529.96685791 -273.35156250]
[515.54522705 -269.22650146]
[501.12356567 -265.10144043]
[486.70193481 -260.97637939]
[472.30499268 -256.76589966]
[457.93325806 -252.47015381]
[443.56152344 -248.17442322]
[432.47268677 -246.32992554]
[423.03933716 -248.91642761]
[416.75225830 -254.44554138]
[405.80554199 -244.19030762]
[394.85885620 -233.93507385]
[383.91217041 -223.67982483]
[372.96548462 -213.42459106]
[362.39035034 -202.78660583]
[352.20019531 -191.77931213]
[342.01000977 -180.77201843]
[331.81985474 -169.76473999]
[321.62966919 -158.75744629]
[319.39926147 -151.73754883]
[311.25286865 -147.68096924]
[300.93292236 -136.79525757]
[290.61297607 -125.90954590]
[280.68661499 -114.66376495]
[271.16644287 -103.07213593]
[261.64624023 -91.48049927]
[259.54769897 -76.73447418]
[244.80981445 -70.98074341]
[235.28961182 -59.38911438]
[225.76942444 -47.79748535]
[216.24923706 -36.20585251]
[206.72903442 -24.61422348]
[197.20884705 -13.02259254]
[187.68864441 -1.43096197]
[178.23733521 10.21689606]
[168.85522461 21.92057228]
[159.47311401 33.62424850]
[161.35336304 48.35517502]
[152.00529480 60.35801697]
[136.54139709 62.23032379]
[127.15928650 73.93399811]
[117.77718353 85.63768005]
[108.39507294 97.34135437]
[114.59019470 102.21602631]
[116.99588013 111.83235168]
[112.90327454 123.33005524]
[110.42512512 138.12393188]
[107.94697571 152.91780090]
[105.46882629 167.71168518]
[102.99067688 182.50555420]
[100.51252747 197.29943848]
[98.03437805 212.09330750]
[107.93548584 200.82530212]
[121.31340027 194.04064941]
[136.25425720 192.70999146]
[150.62060547 197.02369690]
[162.35717773 206.36460876]
[169.78492737 219.39643860]
[171.84123230 234.25483704]
[168.23190308 248.81411743]
[159.47329712 260.99142456]
[146.81845093 269.04467773]
[132.07775879 271.82174683]
[117.36005402 268.92532349]
[104.77086639 260.76980591]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 26]
[2 25]
[4 23]
[5 22]
[6 21]
[28 251]
[29 250]
[30 249]
[31 248]
[32 247]
[33 246]
[34 245]
[35 79]
[36 78]
[37 77]
[39 76]
[40 75]
[41 74]
[42 73]
[43 72]
[44 71]
[45 70]
[46 69]
[47 67]
[48 66]
[49 65]
[53 63]
[54 62]
[80 242]
[81 241]
[82 240]
[83 239]
[86 236]
[87 235]
[88 234]
[90 233]
[91 232]
[92 231]
[93 230]
[94 229]
[95 228]
[96 227]
[98 225]
[99 224]
[100 223]
[107 222]
[108 221]
[109 220]
[110 218]
[111 217]
[112 216]
[113 215]
[114 214]
[121 213]
[122 212]
[123 211]
[124 210]
[125 209]
[126 166]
[127 165]
[128 164]
[129 163]
[130 162]
[131 160]
[132 159]
[133 158]
[134 157]
[135 152]
[136 151]
[138 150]
[139 149]
[140 148]
[141 147]
[142 146]
[167 206]
[168 205]
[169 204]
[171 203]
[172 202]
[173 201]
[174 200]
[175 199]
[176 198]
[177 197]
[178 196]
[179 195]
[180 194]
[182 192]
[183 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
