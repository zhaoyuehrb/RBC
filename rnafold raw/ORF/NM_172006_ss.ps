%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 21:29:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGCACCCCAGACUCUGCUGCUUGUCCUGGUUCUCUGUGUGCUGCUGCUGCAGGCCCAGGGAGGAUACCGUGACAAGAUGAGGAUGCAGAGAAUCAAGGUCUGUGAGAAGCGACCCAGCAUAGAUCUAUGCAUCCACCACUGUUCAUAUUUCCAAAAGUGUGAAACAAAUAAGAUAUGCUGUUCAGCCUUCUGUGGGAACAUUUGUAUGAGCAUCCUAUGA\
) } def
/len { sequence length } bind def

/coor [
[163.54205322 364.62582397]
[159.57478333 350.15997314]
[155.60752869 335.69412231]
[143.63313293 330.94937134]
[136.46870422 320.01232910]
[136.91542053 306.75061035]
[145.03413391 296.01004028]
[141.27104187 281.48974609]
[137.50796509 266.96945190]
[133.64268494 252.47601318]
[129.67541504 238.01016235]
[125.70815277 223.54431152]
[121.74088287 209.07846069]
[110.84824371 205.71934509]
[102.84402466 197.43614197]
[99.79713440 186.20361328]
[102.57501221 174.77819824]
[110.60077667 166.02172852]
[107.04261780 151.44985962]
[103.48445892 136.87799072]
[99.92629242 122.30611420]
[87.41768646 114.02754974]
[72.61411285 116.44709015]
[57.81053543 118.86662292]
[43.00695801 121.28616333]
[28.20338440 123.70570374]
[13.39980984 126.12524414]
[1.02839744 135.98722839]
[-12.78025723 130.40419006]
[-27.58383179 132.82373047]
[-42.38740921 135.24327087]
[-57.19098282 137.66281128]
[-71.95899963 140.29064941]
[-86.68853760 143.12626648]
[-101.41807556 145.96189880]
[-116.14761353 148.79751587]
[-130.87715149 151.63314819]
[-142.96582031 161.83973694]
[-156.92628479 156.64793396]
[-171.65580750 159.48356628]
[-183.74447632 169.69015503]
[-197.70494080 164.49835205]
[-212.43447876 167.33398438]
[-227.14367676 170.27328491]
[-241.83180237 173.31613159]
[-256.51992798 176.35897827]
[-268.39675903 187.66708374]
[-284.04971313 182.77656555]
[-287.37637329 166.71838379]
[-274.95455933 156.01181030]
[-259.56277466 161.67085266]
[-244.87464905 158.62800598]
[-230.18652344 155.58515930]
[-224.27961731 151.15426636]
[-215.27011108 152.60444641]
[-200.54057312 149.76881409]
[-189.50544739 139.76504517]
[-174.49143982 144.75402832]
[-159.76190186 141.91839600]
[-148.72679138 131.91462708]
[-133.71276855 136.90361023]
[-118.98323822 134.06797791]
[-104.25370026 131.23236084]
[-89.52416229 128.39672852]
[-74.79462433 125.56111145]
[-71.42669678 122.18616486]
[-65.90575409 120.88563538]
[-59.61051941 122.85923004]
[-44.80694580 120.43968964]
[-30.00337219 118.02014923]
[-15.19979668 115.60061646]
[-3.88723469 105.91168976]
[10.98027134 111.32167053]
[25.78384590 108.90213013]
[40.58742142 106.48258972]
[55.39099503 104.06304932]
[70.19457245 101.64350891]
[84.99814606 99.22397614]
[81.18936920 95.37717438]
[78.44318390 90.10633850]
[77.14977264 83.70164490]
[77.62301636 76.54694366]
[80.07973480 69.10045624]
[79.23490906 54.12426376]
[78.39008331 39.14807510]
[77.54525757 24.17188454]
[76.70043945 9.19569492]
[75.85561371 -5.78049517]
[75.01078796 -20.75668526]
[69.35244751 -23.47796059]
[64.70468903 -27.63921928]
[61.41960907 -32.89514542]
[59.73761749 -38.81878281]
[59.76999664 -44.93620682]
[61.49177170 -50.76441193]
[64.74546814 -55.84946442]
[69.25524139 -59.80184174]
[74.65015411 -62.32625198]
[75.28392029 -77.31285858]
[75.91767883 -92.29946136]
[76.55144501 -107.28606415]
[77.18521118 -122.27267456]
[77.81897736 -137.25927734]
[78.45274353 -152.24588013]
[79.08650970 -167.23248291]
[79.72026825 -182.21910095]
[66.06336975 -188.95771790]
[56.33300781 -200.67265320]
[52.21502686 -215.33424377]
[54.42289352 -230.40226746]
[62.57407761 -243.26609802]
[75.25634003 -251.69699097]
[90.27240753 -254.23425293]
[105.02064514 -250.43829346]
[116.94583893 -240.96678162]
[123.98187256 -227.46069336]
[124.90971375 -212.26007080]
[119.56861115 -197.99850464]
[108.88393402 -187.14688110]
[94.70687866 -181.58532715]
[94.07311249 -166.59872437]
[93.43934631 -151.61212158]
[92.80558014 -136.62551880]
[92.17181396 -121.63890839]
[91.53805542 -106.65230560]
[90.90428925 -91.66569519]
[90.27052307 -76.67909241]
[89.63675690 -61.69248581]
[103.08322906 -42.19043732]
[89.98697662 -21.60150909]
[90.83180237 -6.62531948]
[91.67662811 8.35087109]
[92.52145386 23.32706070]
[93.36627197 38.30324936]
[94.21109772 53.27944183]
[95.05592346 68.25563049]
[101.31022644 72.39491272]
[105.31826019 57.94030762]
[120.30396271 57.28547668]
[125.55755615 71.33538055]
[113.81884003 80.67347717]
[120.07314301 84.81275940]
[134.18850708 79.73765564]
[148.30386353 74.66255188]
[162.41921997 69.58744812]
[176.49847412 64.41304779]
[190.54093933 59.13959885]
[204.58340454 53.86614990]
[218.62586975 48.59270096]
[232.66831970 43.31925201]
[246.71078491 38.04580307]
[260.75326538 32.77235413]
[270.74237061 19.76661110]
[286.96258545 22.18252945]
[292.72793579 37.53482437]
[282.10751343 50.03036880]
[266.02670288 46.81481552]
[251.98423767 52.08826447]
[237.94177246 57.36171341]
[223.89930725 62.63516235]
[209.85685730 67.90861511]
[195.81439209 73.18206024]
[181.77192688 78.45550537]
[176.61970520 83.74501801]
[167.49432373 83.70281219]
[153.37896729 88.77791595]
[139.26361084 93.85301971]
[125.14824677 98.92812347]
[139.96878052 101.24156189]
[154.78930664 103.55500031]
[169.13761902 99.18169403]
[184.06646729 100.64095306]
[197.29634094 107.70993805]
[206.80712891 119.30929565]
[211.14660645 133.66787720]
[209.65217590 148.59324646]
[202.55203247 161.80641174]
[190.93029785 171.28984070]
[176.56153870 175.59548950]
[161.63972473 174.06588745]
[148.44332886 166.93463135]
[138.98730469 155.29058838]
[134.71559143 140.91224670]
[124.60688019 129.83010864]
[114.49816895 118.74795532]
[118.05632782 133.31982422]
[121.61449432 147.89169312]
[125.17265320 162.46357727]
[141.73078918 171.68309021]
[146.20610046 189.76979065]
[136.20674133 205.11119080]
[140.17399597 219.57704163]
[144.14126587 234.04289246]
[148.10853577 248.50874329]
[153.39178467 255.94927979]
[152.02825928 263.20635986]
[155.79135132 277.72665405]
[159.55444336 292.24697876]
[174.79412842 300.84448242]
[179.01333618 317.47735596]
[170.07336426 331.72683716]
[174.04063416 346.19268799]
[178.00790405 360.65853882]
[193.11123657 360.91558838]
[207.52995300 365.41860962]
[220.09518433 373.80261230]
[229.78834534 385.38793945]
[235.82362366 399.23538208]
[237.71179199 414.22244263]
[235.29977417 429.13415527]
[228.78309631 442.76168823]
[218.69006348 454.00030518]
[205.83883667 461.93899536]
[191.27122498 465.93417358]
[176.16815186 465.66198730]
[161.75398254 461.14443970]
[149.19717407 452.74783325]
[139.51565552 441.15277100]
[133.49429321 427.29928589]
[131.62118530 412.31033325]
[134.04817200 397.40106201]
[140.57853699 383.78009033]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 203]
[2 202]
[3 201]
[7 198]
[8 197]
[9 196]
[10 194]
[11 193]
[12 192]
[13 191]
[18 188]
[19 187]
[20 186]
[21 185]
[22 78]
[23 77]
[24 76]
[25 75]
[26 74]
[27 73]
[29 71]
[30 70]
[31 69]
[32 68]
[33 65]
[34 64]
[35 63]
[36 62]
[37 61]
[39 59]
[40 58]
[42 56]
[43 55]
[44 53]
[45 52]
[46 51]
[83 136]
[84 135]
[85 134]
[86 133]
[87 132]
[88 131]
[89 130]
[98 128]
[99 127]
[100 126]
[101 125]
[102 124]
[103 123]
[104 122]
[105 121]
[106 120]
[142 168]
[143 167]
[144 166]
[145 165]
[146 163]
[147 162]
[148 161]
[149 160]
[150 159]
[151 158]
[152 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
