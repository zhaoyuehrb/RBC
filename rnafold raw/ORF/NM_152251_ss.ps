%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 11:24:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAGGACUUUCCUCUUUCUCUUUGCCGUGCUCUUCUUUCUGACCCCAGCCAAGAAUGCAUUUUUUGAUGAGAAAUGCAACAAACUUAAAGGGACAUGCAAGAACAAUUGCGGGAAAAAUGAAGAACUUAUUGCUCUCUGCCAGAAGUCUCUGAAAUGCUGUCGGACCAUCCAGCCAUGUGGGAGCAUUAUAGAUUAA\
) } def
/len { sequence length } bind def

/coor [
[63.64703751 342.66390991]
[52.96556473 347.74206543]
[41.23136520 348.91342163]
[37.02603531 363.31185913]
[32.82070923 377.71032715]
[28.61537933 392.10876465]
[24.41005135 406.50720215]
[25.77332687 423.40625000]
[9.91209316 429.39437866]
[-0.23283607 415.81066895]
[10.01160622 402.30187988]
[14.21693516 387.90344238]
[18.42226410 373.50500488]
[22.62759209 359.10653687]
[26.83292007 344.70809937]
[13.72415543 332.21234131]
[8.74108124 314.71267700]
[13.34363651 297.02120972]
[26.34342957 284.04846191]
[44.20907974 279.44030762]
[47.72802734 264.85891724]
[51.24697495 250.27752686]
[46.71137619 236.09028625]
[57.47022247 224.49038696]
[60.98917007 209.90899658]
[59.30172729 205.43162537]
[60.41595840 199.84629822]
[64.85621643 194.92640686]
[68.83372498 180.46336365]
[72.81123352 166.00033569]
[76.78874207 151.53729248]
[80.76625061 137.07426453]
[84.74375153 122.61122131]
[74.78328705 111.39564514]
[59.95166779 113.63685608]
[45.12004471 115.87806702]
[30.28842354 118.11927795]
[15.45680332 120.36048126]
[1.34095681 132.17816162]
[-14.73565865 125.15228271]
[-29.53005028 127.62734985]
[-44.32444382 130.10241699]
[-56.62784195 140.94485474]
[-72.08089447 135.45529175]
[-74.78682709 119.28093719]
[-61.96200562 109.06056213]
[-46.79950714 115.30802155]
[-32.00511551 112.83295441]
[-17.21072388 110.35788727]
[-9.92780590 100.69174194]
[2.38459706 98.51332092]
[13.21559429 105.52886200]
[28.04721451 103.28765106]
[42.87883759 101.04644775]
[57.71045685 98.80523682]
[72.54207611 96.56402588]
[75.71477509 81.90339661]
[63.13687134 73.73050690]
[50.55895996 65.55760956]
[37.98105240 57.38471603]
[25.40314484 49.21181870]
[12.82523632 41.03892517]
[0.24732755 32.86602783]
[-12.33058071 24.69313240]
[-24.90848923 16.52023888]
[-37.48639679 8.34734249]
[-54.06234741 4.78725863]
[-55.23007202 -12.12642670]
[-39.30064011 -17.93069077]
[-29.31350327 -4.23056555]
[-16.73559380 3.94232941]
[-4.15768576 12.11522484]
[8.42022324 20.28812027]
[20.99813080 28.46101570]
[33.57603836 36.63391113]
[46.15394974 44.80680466]
[58.73185730 52.97970200]
[71.30976868 61.15259552]
[83.88767242 69.32549286]
[76.76781464 56.12292862]
[65.34075928 46.40580750]
[59.06544876 32.78154755]
[59.10786057 17.78160858]
[65.46012115 4.19305277]
[76.94194031 -5.45929575]
[91.41993713 -9.38198185]
[106.20404053 -6.84615040]
[118.54727173 1.67702770]
[126.15620422 14.60390282]
[127.61706543 29.53259659]
[122.65840912 43.68928146]
[112.20169067 54.44350052]
[106.36244202 68.26027679]
[118.11097717 58.93439865]
[129.85951233 49.60852432]
[141.60804749 40.28264999]
[146.38999939 32.48814392]
[153.61645508 30.90404510]
[165.51074219 21.76479721]
[177.40504456 12.62555027]
[173.42890930 2.53965926]
[172.28149414 -8.37186337]
[174.11557007 -19.32134438]
[178.86619568 -29.49964333]
[186.25036621 -38.13592911]
[195.78315735 -44.55594635]
[206.80917358 -48.23440552]
[218.54747009 -48.83740997]
[230.14686584 -46.25154495]
[240.74761963 -40.59716797]
[251.72421265 -50.82040787]
[262.70077515 -61.04364395]
[273.67736816 -71.26688385]
[284.57290649 -81.57644653]
[295.38674927 -91.97168732]
[295.86276245 -107.54125214]
[306.97760010 -117.92945862]
[321.81787109 -117.37969971]
[332.63168335 -127.77494812]
[343.44552612 -138.17019653]
[354.25936890 -148.56542969]
[365.07318115 -158.96067810]
[366.82608032 -174.90768433]
[380.46328735 -183.35787964]
[395.52352905 -177.82899475]
[400.45388794 -162.56231689]
[391.47216797 -149.26914978]
[375.46844482 -148.14685059]
[364.65460205 -137.75160217]
[353.84075928 -127.35636139]
[343.02694702 -116.96111298]
[332.21310425 -106.56587219]
[332.17687988 -91.71547699]
[321.35821533 -81.01917267]
[305.78198242 -81.15785980]
[294.96817017 -70.76261902]
[292.32211304 -63.85396194]
[283.90060425 -60.29029846]
[272.92404175 -50.06706238]
[261.94744873 -39.84382248]
[250.97085571 -29.62058449]
[256.84756470 -15.81970310]
[271.82467651 -16.64809418]
[286.80178833 -17.47648430]
[301.77890015 -18.30487442]
[315.20297241 -27.72431183]
[329.95635986 -20.56402588]
[330.86203003 -4.18990612]
[316.98831177 4.55375767]
[302.60726929 -3.32776666]
[287.63018799 -2.49937630]
[272.65307617 -1.67098582]
[257.67596436 -0.84259528]
[247.80621338 21.03478813]
[228.49121094 34.14624405]
[205.82588196 35.18202972]
[186.54428101 24.51984215]
[174.64999390 33.65908813]
[162.75570679 42.79833603]
[150.93392944 52.03118515]
[139.18539429 61.35705948]
[127.43685150 70.68293762]
[115.68831635 80.00881195]
[121.92414856 86.19041443]
[125.78015137 94.26792145]
[126.70018005 103.34226990]
[124.46225739 112.35975647]
[134.94253540 123.09119415]
[145.42280579 133.82263184]
[155.90309143 144.55407715]
[171.23672485 142.17514038]
[185.02478027 149.29335022]
[191.96548462 163.17161560]
[189.38998413 178.47346497]
[178.28862000 189.31500244]
[162.93008423 191.52746582]
[149.22004700 184.26010132]
[142.43029785 170.30735779]
[145.17164612 155.03434753]
[134.69137573 144.30291748]
[124.21109009 133.57147217]
[113.73081207 122.84003448]
[99.20679474 126.58872986]
[95.22928619 141.05175781]
[91.25177765 155.51480103]
[87.27426910 169.97784424]
[83.29676056 184.44087219]
[79.31925201 198.90391541]
[75.57056427 213.42793274]
[72.05161285 228.00932312]
[76.33551788 243.23951721]
[65.82836914 253.79646301]
[62.30942154 268.37786865]
[58.79047394 282.95925903]
[68.50048828 290.06948853]
[75.22135162 300.01116943]
[78.18360138 311.60437012]
[77.06220245 323.48260498]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 15]
[4 14]
[5 13]
[6 12]
[7 11]
[20 194]
[21 193]
[22 192]
[24 190]
[25 189]
[28 188]
[29 187]
[30 186]
[31 185]
[32 184]
[33 183]
[34 56]
[35 55]
[36 54]
[37 53]
[38 52]
[40 49]
[41 48]
[42 47]
[57 79]
[58 78]
[59 77]
[60 76]
[61 75]
[62 74]
[63 73]
[64 72]
[65 71]
[66 70]
[93 163]
[94 162]
[95 161]
[96 160]
[98 159]
[99 158]
[100 157]
[110 141]
[111 140]
[112 139]
[113 138]
[114 136]
[115 135]
[118 132]
[119 131]
[120 130]
[121 129]
[122 128]
[142 153]
[143 152]
[144 151]
[145 150]
[167 182]
[168 181]
[169 180]
[170 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
