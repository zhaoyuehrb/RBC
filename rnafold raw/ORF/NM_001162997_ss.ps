%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 12:52:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGACCAACUGGUAUUCAAAGAGACAAUCUGGAAUGAUGCGUUCUGGCAGAACCCCUGGGACCAGGGGGGCCUGGCAGUGAUUAUCUUAUUCAUCACCGCUGUCCUGCUUCUCAUCUUAUUUGCCAUCGUGUUUGGUUUACUCACUUCCACAGAAAACACUCAGUGUGAAGCGGGUGAAGAGGAGUGA\
) } def
/len { sequence length } bind def

/coor [
[184.42422485 112.57556152]
[178.62109375 106.65036011]
[175.60844421 98.82235718]
[161.00854492 95.38099670]
[146.40864563 91.93964386]
[131.80874634 88.49828339]
[143.15962219 98.30428314]
[150.40568542 111.43800354]
[152.64764404 126.26950836]
[149.60729980 140.95816040]
[141.66195679 153.68103027]
[129.79765320 162.85916138]
[115.48679352 167.35354614]
[100.50211334 166.60560608]
[89.29978943 176.58097839]
[78.09746552 186.55635071]
[66.89514160 196.53172302]
[55.69282150 206.50709534]
[54.16525650 219.32632446]
[44.61431885 227.40414429]
[32.52057648 226.82051086]
[21.15485191 236.60929871]
[9.78912926 246.39808655]
[7.16743565 262.22549438]
[-6.91117048 269.91784668]
[-21.64678764 263.57424927]
[-25.73551178 248.06097412]
[-16.04082298 235.27845764]
[0.00034265 235.03236389]
[11.36606598 225.24357605]
[22.73178864 215.45478821]
[27.60995483 198.60540771]
[45.71745300 195.30476379]
[56.91977692 185.32939148]
[68.12210083 175.35403442]
[79.32441711 165.37866211]
[90.52674103 155.40328979]
[87.51403046 148.53498840]
[78.47587585 127.93009186]
[63.54963684 129.41577148]
[48.62339401 130.90145874]
[38.80505371 143.28594971]
[23.09590530 145.01748657]
[10.81590557 135.06875610]
[9.25056076 119.34217834]
[19.32856369 107.16804504]
[35.07081223 105.76906586]
[47.13771057 115.97521210]
[62.06395340 114.48953247]
[76.99019623 113.00384521]
[79.70340729 98.25127411]
[64.87667084 103.02679443]
[51.36135864 96.04174042]
[46.89999771 81.87728119]
[33.47905731 75.17814636]
[20.05811691 68.47901917]
[6.63717747 61.77988434]
[-6.78376245 55.08075333]
[-20.20470238 48.38161850]
[-36.53202438 49.91479492]
[-45.80150604 36.38672638]
[-38.47750473 21.71392632]
[-22.09431839 20.99051857]
[-13.50557041 34.96067810]
[-0.08463024 41.65981293]
[13.33630943 48.35894394]
[26.75724983 55.05807495]
[40.17818832 61.75720978]
[53.59912872 68.45633698]
[67.60083008 63.50781631]
[81.30700684 70.11050415]
[86.40253448 84.83032990]
[92.32109070 80.22373962]
[104.15819550 71.01054382]
[110.07675171 66.40395355]
[106.87725830 51.74914932]
[103.67776489 37.09434509]
[93.17494965 25.26212311]
[98.01947021 11.17738247]
[94.81997681 -3.47742033]
[91.62048340 -18.13222313]
[88.42098236 -32.78702545]
[85.22148895 -47.44182587]
[74.71868134 -59.27405167]
[79.56319427 -73.35879517]
[66.12769318 -81.68122101]
[62.59358597 -97.08529663]
[71.05759430 -110.43206024]
[86.49817657 -113.80310822]
[99.75470734 -105.19846344]
[102.96232605 -89.72309875]
[94.21800232 -76.55828857]
[104.49196625 -65.77426910]
[99.87629700 -50.64132309]
[103.07579041 -35.98651886]
[106.27528381 -21.33171654]
[109.47477722 -6.67691469]
[112.67427063 7.97788763]
[122.94823456 18.76190186]
[118.33256531 33.89485168]
[121.53205872 48.54965210]
[124.73155212 63.20445633]
[135.25010681 73.89838409]
[149.85000610 77.33974457]
[164.44990540 80.78109741]
[179.04980469 84.22245789]
[199.95562744 76.17929077]
[215.19415283 91.54044342]
[229.98957825 94.00936127]
[244.78498840 96.47827911]
[259.58041382 98.94719696]
[274.37582397 101.41611481]
[289.17126465 103.88503265]
[303.96667480 106.35395050]
[291.42657471 98.12317657]
[284.97265625 84.58260345]
[286.47619629 69.65814209]
[295.50122070 57.67695236]
[309.43103027 52.11281204]
[324.22692871 54.57897186]
[335.59896851 64.36040497]
[340.25003052 78.62110901]
[336.83157349 93.22638702]
[326.33685303 103.94040680]
[340.26516724 98.37245178]
[354.19348145 92.80448914]
[368.12176514 87.23653412]
[372.83648682 72.32661438]
[386.05972290 63.97917175]
[401.54791260 66.13561249]
[411.98797607 77.77772522]
[412.45046997 93.40847015]
[402.71697998 105.64747620]
[387.38339233 108.71587372]
[373.68972778 101.16484070]
[359.76141357 106.73280334]
[345.83312988 112.30075836]
[331.90481567 117.86872101]
[330.66610718 132.81748962]
[343.48800659 140.60203552]
[356.30990601 148.38656616]
[369.13177490 156.17111206]
[381.95367432 163.95565796]
[394.77557373 171.74020386]
[410.58728027 172.28828430]
[417.45104980 185.50714111]
[430.27291870 193.29168701]
[443.09481812 201.07623291]
[455.91671753 208.86076355]
[468.80252075 216.53904724]
[481.75137329 224.11053467]
[494.70022583 231.68200684]
[510.51882935 231.96858215]
[517.60021973 245.07215881]
[530.54907227 252.64363098]
[545.77166748 248.39544678]
[559.49841309 256.22821045]
[563.58544922 271.49490356]
[555.60797119 285.13806152]
[540.29888916 289.06344604]
[526.74084473 280.94216919]
[522.97753906 265.59246826]
[510.02871704 258.02099609]
[495.13629150 258.27597046]
[487.12872314 244.63085938]
[474.17987061 237.05937195]
[461.23104858 229.48789978]
[453.85659790 228.82444763]
[448.13217163 221.68266296]
[435.31027222 213.89811707]
[422.48837280 206.11357117]
[409.66650391 198.32902527]
[394.77188110 198.33775330]
[386.99102783 184.56208801]
[374.16912842 176.77755737]
[361.34725952 168.99301147]
[348.52536011 161.20846558]
[335.70346069 153.42391968]
[322.88156128 145.63937378]
[305.91003418 136.26329041]
[301.49774170 121.14937592]
[286.70233154 118.68045807]
[271.90692139 116.21153259]
[257.11148071 113.74261475]
[242.31607056 111.27369690]
[227.52066040 108.80477905]
[212.72523499 106.33586121]
[207.40954590 112.20337677]
[200.11766052 115.52170563]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 106]
[4 105]
[5 104]
[6 103]
[14 37]
[15 36]
[16 35]
[17 34]
[18 33]
[21 31]
[22 30]
[23 29]
[39 50]
[40 49]
[41 48]
[51 72]
[54 69]
[55 68]
[56 67]
[57 66]
[58 65]
[59 64]
[75 102]
[76 101]
[77 100]
[79 98]
[80 97]
[81 96]
[82 95]
[83 94]
[85 92]
[108 187]
[109 186]
[110 185]
[111 184]
[112 183]
[113 182]
[114 181]
[124 138]
[125 137]
[126 136]
[127 135]
[139 179]
[140 178]
[141 177]
[142 176]
[143 175]
[144 174]
[146 172]
[147 171]
[148 170]
[149 169]
[150 167]
[151 166]
[152 165]
[154 163]
[155 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
