%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 12:22:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGCAUGCCCCCUGGAUCAGGCCAUUGGCCUCCUCGUGGCCAUCUUCCACAAGUACUCCGGCAGGGAGGGUGACAAGCACACCCUGAGCAAGAAGGAGCUGAAGGAGCUGAUCCAGAAGGAGCUCACCAUUGGCUCGAAGCUGCAGGAUGCUGAAAUUGCAAGGCUGAUGGAAGACUUGGACCGGAACAAGGACCAGGAGGUGAACUUCCAGGAGUAUGUCACCUUCCUGGGGGCCUUGGCUUUGAUCUACAAU\
GAAGCCCUCAAGGGCUGA\
) } def
/len { sequence length } bind def

/coor [
[303.29763794 756.81262207]
[296.15237427 750.70501709]
[290.17700195 743.44183350]
[285.55578613 735.24401855]
[282.43167114 726.36138916]
[280.90197754 717.06500244]
[281.01535034 707.63897705]
[282.77020264 698.37152100]
[286.11468506 689.54650879]
[290.94824219 681.43457031]
[297.12469482 674.28466797]
[304.45645142 668.31683350]
[312.72052002 663.71490479]
[321.66503906 660.62145996]
[320.11990356 645.70123291]
[318.57479858 630.78100586]
[317.02966309 615.86083984]
[315.48455811 600.94061279]
[313.93942261 586.02038574]
[312.39431763 571.10021973]
[310.84918213 556.17999268]
[309.21856689 541.26885986]
[307.50247192 526.36737061]
[305.78640747 511.46585083]
[304.07031250 496.56433105]
[294.80621338 488.82247925]
[293.23541260 476.44839478]
[300.73696899 465.98614502]
[299.19183350 451.06594849]
[297.64672852 436.14572144]
[296.10159302 421.22552490]
[294.55648804 406.30532837]
[289.74166870 392.09906006]
[281.89685059 379.31396484]
[274.05206299 366.52883911]
[260.80102539 359.72738647]
[260.17852783 343.91842651]
[252.33372498 331.13333130]
[244.27020264 318.48501587]
[235.99035645 305.97726440]
[227.63893127 293.51718140]
[219.21621704 281.10516357]
[210.79350281 268.69317627]
[202.22903442 256.37854004]
[193.52394104 244.16293335]
[184.81884766 231.94731140]
[176.11373901 219.73170471]
[167.40864563 207.51608276]
[158.70355225 195.30046082]
[149.99844360 183.08485413]
[135.31245422 180.88093567]
[126.31023407 168.61656189]
[128.72148132 153.22749329]
[120.01638031 141.01187134]
[111.31128693 128.79626465]
[91.71439362 136.01799011]
[68.38590240 129.11643982]
[53.50505066 131.00326538]
[38.62419128 132.89009094]
[23.74333572 134.77691650]
[12.81925392 146.52612305]
[-3.16614342 145.16722107]
[-11.95022869 131.74264526]
[-6.79460239 116.55057526]
[8.34577942 111.24507141]
[21.85651207 119.89605713]
[36.73736954 118.00923920]
[51.61822510 116.12241364]
[66.49908447 114.23558807]
[66.84303284 99.23886871]
[67.18696594 84.24347687]
[52.40825653 81.67639923]
[37.62955093 79.10932159]
[23.73640823 87.13179779]
[8.85518551 81.13774109]
[4.40148497 65.72527313]
[13.79180527 52.71752548]
[29.82269478 52.09292984]
[40.19662857 64.33061981]
[54.97533417 66.89769745]
[69.75403595 69.46477509]
[73.08342743 71.82529449]
[76.31671143 74.29524231]
[79.45102692 76.87188721]
[72.50361633 63.57777405]
[65.55621338 50.28365707]
[58.60880280 36.98954010]
[51.58529663 23.73547173]
[44.48591995 10.52188396]
[37.38654709 -2.69170332]
[25.99564171 -2.23708987]
[15.30010033 -6.03190088]
[6.81979036 -13.49651909]
[1.74474108 -23.53276825]
[0.76822245 -34.68535995]
[3.99226761 -45.35289001]
[10.91847897 -54.01777267]
[4.27772188 -67.46768951]
[-2.36303449 -80.91761017]
[-9.00379086 -94.36753082]
[-15.64454746 -107.81745148]
[-22.28530502 -121.26737213]
[-28.92606163 -134.71728516]
[-47.10822678 -140.14126587]
[-55.37451935 -156.86311340]
[-48.87033463 -174.00352478]
[-55.81774521 -187.29763794]
[-62.76515198 -200.59175110]
[-69.71256256 -213.88586426]
[-74.05573273 -216.64544678]
[-76.66840363 -220.40927124]
[-77.45680237 -224.35978699]
[-76.66136932 -227.75878906]
[-83.14748383 -241.28396606]
[-89.63359833 -254.80914307]
[-103.46622467 -263.61767578]
[-102.48388672 -279.98739624]
[-87.69713593 -287.07849121]
[-74.31730652 -277.59628296]
[-76.10842133 -261.29525757]
[-69.62230682 -247.77008057]
[-63.13619614 -234.24490356]
[-56.41844559 -220.83328247]
[-49.47103500 -207.53916931]
[-42.52362823 -194.24504089]
[-35.57622147 -180.95092773]
[-24.25172234 -179.98777771]
[-14.68986607 -173.62568665]
[-9.31618023 -163.34020996]
[-9.55997467 -151.61848450]
[-15.47614098 -141.35804749]
[-8.83538437 -127.90812683]
[-2.19462776 -114.45820618]
[4.44612885 -101.00828552]
[11.08688545 -87.55836487]
[17.72764206 -74.10844421]
[24.36839867 -60.65852737]
[42.97446060 -58.53968811]
[56.62273407 -45.49840546]
[59.63302994 -26.70985413]
[50.60013580 -9.79107761]
[57.69950867 3.42250967]
[64.79888153 16.63609695]
[70.71067047 21.02442360]
[71.90291595 30.04213142]
[78.85032654 43.33624649]
[85.79773712 56.63036346]
[92.74514008 69.92447662]
[99.29061127 69.06996918]
[105.86837006 69.62349701]
[112.19898224 56.02484131]
[118.52959442 42.42618942]
[111.74835205 28.33545685]
[115.66104126 13.19528198]
[128.42021179 4.15439415]
[144.00137329 5.48162317]
[155.04756165 16.55029297]
[156.34313965 32.13411331]
[147.27633667 44.87488556]
[132.12825012 48.75680161]
[125.79763031 62.35545349]
[119.46701813 75.95410919]
[128.97778320 89.16217804]
[130.46859741 105.36973572]
[123.52690125 120.09116364]
[132.23199463 132.30677795]
[140.93710327 144.52239990]
[156.27033997 147.26638794]
[164.92453003 159.77876282]
[162.21406555 174.37974548]
[170.91915894 186.59536743]
[179.62425232 198.81098938]
[188.32936096 211.02659607]
[197.03445435 223.24221802]
[205.73954773 235.45782471]
[214.44465637 247.67344666]
[220.23777771 250.73266602]
[223.19860840 255.52845764]
[223.20550537 260.27044678]
[231.62821960 272.68246460]
[240.05093384 285.09445190]
[247.43040466 290.41271973]
[248.49810791 297.69741821]
[256.77795410 310.20516968]
[261.38229370 312.50268555]
[264.36877441 315.97735596]
[265.55990601 319.82565308]
[265.11883545 323.28851318]
[272.96365356 336.07363892]
[286.77578735 343.78955078]
[286.83715820 358.68405151]
[294.68197632 371.46914673]
[302.52679443 384.25424194]
[311.23504639 379.46588135]
[323.23663330 379.83935547]
[337.98492432 382.57571411]
[352.73321533 385.31207275]
[367.48153687 388.04840088]
[382.22982788 390.78475952]
[396.97811890 393.52111816]
[411.74188232 396.17288208]
[426.52056885 398.73995972]
[441.29928589 401.30703735]
[456.07800293 403.87411499]
[470.85668945 406.44119263]
[485.67736816 408.75372314]
[500.53561401 410.81103516]
[515.39385986 412.86834717]
[530.25207520 414.92565918]
[545.23260498 408.25354004]
[558.34020996 418.10858154]
[556.09100342 434.35275269]
[540.79876709 440.27545166]
[528.19476318 429.78390503]
[513.33654785 427.72659302]
[498.47830200 425.66928101]
[483.62005615 423.61196899]
[480.62493896 425.40509033]
[476.62203979 425.85769653]
[472.24118042 424.51589966]
[468.28961182 421.21987915]
[453.51092529 418.65280151]
[438.73220825 416.08572388]
[423.95352173 413.51864624]
[409.17480469 410.95156860]
[402.07360840 412.89575195]
[394.24179077 408.26940918]
[379.49346924 405.53308105]
[364.74517822 402.79672241]
[349.99688721 400.06036377]
[335.24856567 397.32400513]
[320.50027466 394.58767700]
[309.47668457 404.76019287]
[311.02182007 419.68041992]
[312.56692505 434.60061646]
[314.11203003 449.52081299]
[315.65716553 464.44104004]
[326.79879761 479.12368774]
[318.97183228 494.84826660]
[320.68789673 509.74975586]
[322.40399170 524.65130615]
[324.12008667 539.55279541]
[328.19711304 547.68414307]
[325.76940918 554.63488770]
[327.31451416 569.55505371]
[328.85964966 584.47528076]
[330.40475464 599.39550781]
[331.94989014 614.31567383]
[333.49499512 629.23590088]
[335.04013062 644.15612793]
[336.58523560 659.07629395]
[357.09954834 663.99945068]
[374.14703369 676.37805176]
[385.14785767 694.31140137]
[388.44772339 715.06011963]
[383.56671143 735.46490479]
[371.26889038 752.42724609]
[353.44274902 763.38031006]
[356.68466187 778.02575684]
[359.92660522 792.67126465]
[363.16851807 807.31671143]
[366.41046143 821.96221924]
[377.87872314 833.68444824]
[373.20114136 849.40234375]
[357.18957520 852.94665527]
[346.31536865 840.67132568]
[351.76498413 825.20410156]
[348.52304077 810.55865479]
[345.28112793 795.91314697]
[342.03918457 781.26770020]
[338.79727173 766.62225342]
[329.41906738 766.55841064]
[320.19015503 764.86071777]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 251]
[15 250]
[16 249]
[17 248]
[18 247]
[19 246]
[20 245]
[21 244]
[22 242]
[23 241]
[24 240]
[25 239]
[28 237]
[29 236]
[30 235]
[31 234]
[32 233]
[33 193]
[34 192]
[35 191]
[37 189]
[38 188]
[39 184]
[40 183]
[41 181]
[42 180]
[43 179]
[44 176]
[45 175]
[46 174]
[47 173]
[48 172]
[49 171]
[50 170]
[53 167]
[54 166]
[55 165]
[57 69]
[58 68]
[59 67]
[60 66]
[71 81]
[72 80]
[73 79]
[84 148]
[85 147]
[86 146]
[87 145]
[88 143]
[89 142]
[90 141]
[97 137]
[98 136]
[99 135]
[100 134]
[101 133]
[102 132]
[103 131]
[106 126]
[107 125]
[108 124]
[109 123]
[113 122]
[114 121]
[115 120]
[150 162]
[151 161]
[152 160]
[195 232]
[196 231]
[197 230]
[198 229]
[199 228]
[200 227]
[201 225]
[202 224]
[203 223]
[204 222]
[205 221]
[206 217]
[207 216]
[208 215]
[209 214]
[258 271]
[259 270]
[260 269]
[261 268]
[262 267]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
