%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sat Sep 12 10:15:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGACCCUGAGACCUGCCCCUGCCCUUCUGGUGGCUCCUGCACCUGCGCGGACUCCUGCAAGUGCGAGGGAUGCAAAUGCACCUCCUGCAAGAAGAGCUGCUGCUCCUGCUGCCCUGCGGAGUGUGAGAAGUGUGCCAAGGACUGUGUGUGCAAAGGCGGAGAGGCAGCUGAGGCAGAAGCAGAGAAGUGCAGCUGCUGCCAGUGA\
) } def
/len { sequence length } bind def

/coor [
[199.39321899 505.10137939]
[184.60255432 507.59866333]
[169.75489807 505.46618652]
[156.26493835 498.90719604]
[145.41793823 488.54653931]
[138.24742126 475.37142944]
[135.43655396 460.63714600]
[137.25317383 445.74755859]
[143.52420044 432.12133789]
[153.65211487 421.05673218]
[166.67195129 413.60800171]
[181.34321594 410.48483276]
[196.26803589 411.98480225]
[210.02438354 417.96499634]
[221.30099487 427.85488892]
[215.98191833 413.82965088]
[210.66284180 399.80441284]
[205.34376526 385.77917480]
[200.02470398 371.75393677]
[188.27703857 362.59741211]
[190.61793518 346.95034790]
[185.29885864 332.92507935]
[173.55120850 323.76858521]
[175.89210510 308.12149048]
[170.46726990 294.13681030]
[164.93696594 280.19351196]
[159.40667725 266.25021362]
[153.87638855 252.30690002]
[148.48693848 247.24708557]
[148.36961365 238.11100769]
[143.05053711 224.08575439]
[128.65469360 220.35783386]
[119.10140228 208.73034668]
[118.21628571 193.52935791]
[126.54801178 180.57217407]
[121.22894287 166.54693604]
[115.48868561 152.68873596]
[109.33249664 139.01023865]
[103.17630768 125.33174133]
[97.02011108 111.65324402]
[90.65803528 98.06928253]
[84.09151459 84.58296204]
[77.52500153 71.09664154]
[70.95848846 57.61032104]
[64.29031372 44.17397308]
[57.52085876 30.78836441]
[42.33462906 28.20289230]
[31.70694351 17.29850197]
[29.56336021 2.40323329]
[36.51849747 -10.74074078]
[29.74904251 -24.12634850]
[16.61650467 -32.94944382]
[17.77729034 -47.79874802]
[11.00783634 -61.18435287]
[4.23838234 -74.56996155]
[-2.53107142 -87.95556641]
[-9.30052471 -101.34117889]
[-15.96758080 -107.58874512]
[-16.06941414 -114.98046112]
[-22.63592911 -128.46678162]
[-29.20244408 -141.95310974]
[-42.20022964 -150.97354126]
[-40.81530380 -165.80361938]
[-47.38724136 -172.15116882]
[-47.37742233 -179.54357910]
[-53.73950195 -193.12753296]
[-60.10158157 -206.71150208]
[-75.44339752 -216.89335632]
[-73.26502228 -234.30561829]
[-79.83153534 -247.79194641]
[-86.39804840 -261.27825928]
[-92.96456909 -274.76458740]
[-99.53649902 -281.11212158]
[-99.52668762 -288.50454712]
[-105.88876343 -302.08850098]
[-112.25084686 -315.67245483]
[-116.53671265 -318.66030884]
[-119.00007629 -322.59994507]
[-119.58366394 -326.63714600]
[-118.57779694 -330.01889038]
[-124.31804657 -343.87707520]
[-130.05830383 -357.73529053]
[-142.48773193 -367.52404785]
[-140.20991516 -382.24343872]
[-145.95016479 -396.10162354]
[-151.69041443 -409.95983887]
[-166.89057922 -412.59774780]
[-178.23612976 -423.05154419]
[-182.10673523 -437.98547363]
[-177.26731873 -452.63415527]
[-165.26210022 -462.32324219]
[-149.92192078 -463.96096802]
[-136.14175415 -457.02478027]
[-128.31881714 -443.72796631]
[-128.94937134 -428.31350708]
[-137.83222961 -415.70007324]
[-132.09196472 -401.84188843]
[-126.35172272 -387.98370361]
[-114.33287048 -379.18615723]
[-116.20010376 -363.47552490]
[-110.45985413 -349.61734009]
[-104.71960449 -335.75915527]
[-98.66688538 -322.03454590]
[-92.30480194 -308.45059204]
[-85.94272614 -294.86663818]
[-79.47824097 -281.33108521]
[-72.91172791 -267.84478760]
[-66.34521484 -254.35845947]
[-59.77869797 -240.87213135]
[-48.44872284 -236.63021851]
[-42.86826324 -225.44630432]
[-46.51762390 -213.07357788]
[-40.15554428 -199.48962402]
[-33.79346466 -185.90565491]
[-27.32898140 -172.37013245]
[-14.80087852 -164.31433105]
[-15.71612358 -148.51962280]
[-9.14960766 -135.03329468]
[-2.58309197 -121.54698181]
[4.08508253 -108.11063385]
[10.85453606 -94.72502136]
[17.62399101 -81.33941650]
[24.39344406 -67.95381165]
[31.16289711 -54.56819916]
[43.81124115 -46.70253372]
[43.13465118 -30.89580345]
[49.90410614 -17.51019478]
[64.61298370 -15.32228088]
[75.33997345 -4.76786613]
[77.82429504 10.25483418]
[70.90646362 24.01890945]
[77.67591858 37.40451813]
[83.50115967 41.95583344]
[84.44480896 51.04380417]
[91.01132202 64.53012848]
[97.57783508 78.01644897]
[104.14435577 91.50276947]
[108.58896637 94.29309082]
[111.15269470 99.37574768]
[110.69860840 105.49705505]
[116.85480499 119.17555237]
[123.01099396 132.85404968]
[129.16719055 146.53254700]
[132.78306580 148.94615173]
[135.19853210 152.07115173]
[136.33737183 155.44233704]
[136.28239441 158.61761475]
[135.25418091 161.22785950]
[140.57325745 175.25309753]
[155.40184021 179.42674255]
[164.81944275 191.39176941]
[165.37916565 206.43008423]
[157.07579041 218.76669312]
[162.39485168 232.79193115]
[167.81970215 246.77661133]
[173.34999084 260.71990967]
[178.88027954 274.66323853]
[184.41056824 288.60653687]
[190.48487854 295.43182373]
[189.91734314 302.80242920]
[202.04545593 312.96212769]
[199.32411194 327.60601807]
[204.64318848 341.63125610]
[216.77128601 351.79095459]
[214.04994202 366.43484497]
[219.36901855 380.46008301]
[224.68809509 394.48535156]
[230.00715637 408.51058960]
[235.32623291 422.53582764]
[242.49688721 435.71087646]
[251.38682556 447.79263306]
[260.27676392 459.87438965]
[277.31015015 466.86758423]
[278.57061768 484.37023926]
[287.64199829 496.31637573]
[296.71337891 508.26248169]
[305.78479004 520.20861816]
[314.85617065 532.15472412]
[330.26556396 534.43267822]
[339.29504395 546.67694092]
[337.02844238 561.35339355]
[346.09982300 573.29949951]
[355.17123413 585.24566650]
[370.86172485 587.13879395]
[380.55206299 599.62371826]
[378.49313354 615.29327393]
[365.90646362 624.85107422]
[350.25949097 622.62658691]
[340.83532715 609.93957520]
[343.22509766 594.31701660]
[334.15371704 582.37091064]
[325.08230591 570.42480469]
[310.33627319 568.66705322]
[300.96640015 556.68121338]
[302.91006470 541.22613525]
[293.83865356 529.28002930]
[284.76727295 517.33386230]
[275.69586182 505.38775635]
[266.62448120 493.44165039]
[254.68466187 491.49160767]
[247.02954102 481.61129761]
[248.19499207 468.76434326]
[239.30505371 456.68255615]
[230.41511536 444.60079956]
[232.59770203 459.44116211]
[230.15037537 474.24017334]
[223.30632019 487.58779907]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 169]
[16 168]
[17 167]
[18 166]
[19 165]
[21 163]
[22 162]
[24 160]
[25 158]
[26 157]
[27 156]
[28 155]
[30 154]
[31 153]
[35 149]
[36 148]
[37 143]
[38 142]
[39 141]
[40 140]
[41 137]
[42 136]
[43 135]
[44 134]
[45 132]
[46 131]
[50 127]
[51 126]
[53 124]
[54 123]
[55 122]
[56 121]
[57 120]
[59 119]
[60 118]
[61 117]
[63 115]
[65 114]
[66 113]
[67 112]
[69 109]
[70 108]
[71 107]
[72 106]
[74 105]
[75 104]
[76 103]
[80 102]
[81 101]
[82 100]
[84 98]
[85 97]
[86 96]
[170 204]
[171 203]
[172 202]
[174 199]
[175 198]
[176 197]
[177 196]
[178 195]
[181 192]
[182 191]
[183 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
