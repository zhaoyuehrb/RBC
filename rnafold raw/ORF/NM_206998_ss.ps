%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 13:43:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAGGCUGUCAGUGUGUCUCCUGAUGGUCUCGCUGGCCCUUUGCUGCUACCAGGCCCAUGCUCUUGUCUGCCCAGCUGUUGCUUCUGAGAUCACAGUCUUCUUAUUCUUAAGUGACGCUGCGGUAAACCUCCAAGUUGCCAAACUUAAUCCACCUCCAGAAGCUCUUGCAGCCAAGUUGGAAGUGAAGCACUGCACCGAUCAGAUAUCUUUUAAGAAACGACUCUCAUUGAAAAAGUCCUGGUGGAAAUAG\
) } def
/len { sequence length } bind def

/coor [
[26.46778297 300.20956421]
[19.23300362 304.94052124]
[10.86105156 307.98995972]
[4.54523277 321.59548950]
[-1.77058613 335.20101929]
[-8.08640480 348.80654907]
[-14.40222359 362.41207886]
[-20.71804237 376.01760864]
[-27.03386116 389.62313843]
[-33.34968185 403.22866821]
[-39.66550064 416.83419800]
[-45.98131943 430.43972778]
[-52.29713821 444.04525757]
[-44.63352966 457.53778076]
[-46.39771271 472.95425415]
[-56.91132355 484.36666870]
[-72.13166046 487.38677979]
[-86.20619202 480.85324097]
[-93.72298431 467.27835083]
[-91.79166412 451.88192749]
[-81.15486908 440.58422852]
[-65.90266418 437.72943115]
[-59.58684540 424.12390137]
[-53.27102661 410.51837158]
[-46.95520782 396.91284180]
[-40.63938904 383.30731201]
[-34.32357025 369.70178223]
[-28.00775337 356.09625244]
[-21.69193459 342.49072266]
[-15.37611580 328.88519287]
[-9.06029701 315.27966309]
[-2.74447799 301.67413330]
[-8.35117722 296.69265747]
[-22.58600616 301.42233276]
[-19.56457520 286.72976685]
[-25.17127419 281.74829102]
[-37.93893051 289.62149048]
[-50.70658493 297.49465942]
[-55.79233932 312.71026611]
[-70.90818024 318.08529663]
[-84.45852661 309.49649048]
[-86.04871368 293.53244019]
[-74.45888519 282.43939209]
[-58.57976532 284.72698975]
[-45.81211090 276.85382080]
[-33.04445648 268.98065186]
[-14.37806320 241.95175171]
[13.30598831 241.27615356]
[20.61701775 228.17849731]
[27.92804527 215.08082581]
[35.23907471 201.98315430]
[42.55010223 188.88549805]
[49.86113358 175.78782654]
[57.17216110 162.69015503]
[64.48319244 149.59249878]
[71.71276093 136.44969177]
[66.45693970 134.18943787]
[61.36087799 131.18588257]
[56.52779007 127.44767761]
[52.06079102 122.99757385]
[48.06100082 117.87247467]
[33.10983276 116.66309357]
[23.10927200 128.52767944]
[8.03678322 132.21545410]
[-6.31195498 126.30840302]
[-14.41955948 113.07788849]
[-13.16849136 97.61133575]
[-3.03981185 85.85593414]
[12.07179546 82.33187866]
[26.35560989 88.39424896]
[34.31921005 101.71192932]
[49.27037811 102.92130280]
[51.06872559 95.64009857]
[54.66541290 81.07769012]
[56.46376038 73.79648590]
[42.66875076 67.90600586]
[28.87374496 62.01552200]
[12.66625500 64.51538086]
[2.60993004 51.56152725]
[9.04985523 36.47977066]
[25.36118698 34.78493118]
[34.76422501 48.22051239]
[48.55923462 54.11099625]
[62.35424042 60.00147629]
[84.57367706 50.34284592]
[107.46346283 51.50269699]
[126.30233002 62.09307098]
[136.74302673 51.32312393]
[147.18373108 40.55317307]
[157.62442017 29.78322220]
[168.06512451 19.01327324]
[153.23127747 16.78679657]
[145.61283875 3.86551905]
[150.84544373 -10.19221401]
[165.05834961 -14.98738003]
[177.73773193 -6.97281742]
[179.50363159 7.92444897]
[190.59246826 -2.17693686]
[201.68128967 -12.27832222]
[212.64382935 -22.51661873]
[223.47839355 -32.89025116]
[234.31295776 -43.26387787]
[245.14752197 -53.63750839]
[255.98208618 -64.01113892]
[266.81665039 -74.38477325]
[262.72094727 -90.41722107]
[267.25103760 -106.23463440]
[279.07708740 -117.53829193]
[294.90002441 -121.30608368]
[310.37152100 -116.60009766]
[321.07644653 -127.10746002]
[321.39016724 -142.68113708]
[332.39617920 -153.18460083]
[347.24136353 -152.78952026]
[357.94625854 -163.29687500]
[368.65118408 -173.80424500]
[379.29067993 -184.37786865]
[389.86428833 -195.01734924]
[394.10409546 -210.25987244]
[408.56372070 -213.83322144]
[419.13732910 -224.47270203]
[429.71096802 -235.11216736]
[440.28457642 -245.75164795]
[450.85821533 -256.39111328]
[461.43182373 -267.03060913]
[455.60116577 -276.11679077]
[452.17056274 -286.60244751]
[451.47293091 -297.84994507]
[453.67105103 -309.14370728]
[458.73974609 -319.73565674]
[466.46023560 -328.89477539]
[476.42742920 -335.95703125]
[488.07040405 -340.37298584]
[500.68457031 -341.74893188]
[505.79541016 -355.85137939]
[510.90628052 -369.95385742]
[516.01715088 -384.05630493]
[521.12799072 -398.15875244]
[517.72686768 -414.20132446]
[530.09881592 -424.96542358]
[545.51672363 -419.37783813]
[548.11987305 -403.18664551]
[535.23040771 -393.04791260]
[530.11956787 -378.94543457]
[525.00872803 -364.84298706]
[519.89788818 -350.74053955]
[514.78704834 -336.63809204]
[520.51568604 -331.79739380]
[530.19726562 -343.25457764]
[541.65429688 -333.57278442]
[531.97302246 -322.11599731]
[537.70172119 -317.27529907]
[550.75372314 -324.66751099]
[563.80572510 -332.05972290]
[572.00073242 -345.59313965]
[586.88818359 -345.13281250]
[599.94024658 -352.52502441]
[612.99224854 -359.91720581]
[626.04425049 -367.30941772]
[639.09631348 -374.70162964]
[643.47277832 -393.15573120]
[659.68402100 -402.36767578]
[677.16668701 -396.87393188]
[690.03112793 -404.58795166]
[702.89556885 -412.30200195]
[708.16986084 -427.45327759]
[723.35125732 -432.64019775]
[736.79394531 -423.88378906]
[738.18579102 -407.90124512]
[726.45910645 -396.95297241]
[710.60961914 -399.43756104]
[697.74517822 -391.72354126]
[684.88073730 -384.00949097]
[684.58050537 -372.63592529]
[678.77758789 -362.71060181]
[668.80816650 -356.74716187]
[657.07934570 -356.31985474]
[646.48852539 -361.64959717]
[633.43646240 -354.25741577]
[620.38446045 -346.86520386]
[607.33245850 -339.47299194]
[594.28039551 -332.08078003]
[587.01904297 -319.07611084]
[571.19793701 -319.00769043]
[558.14593506 -311.61547852]
[545.09393311 -304.22326660]
[543.82281494 -280.16168213]
[531.81628418 -260.21755981]
[512.54443359 -248.67578125]
[490.92349243 -247.59126282]
[472.07131958 -256.45697021]
[461.49768066 -245.81750488]
[450.92407227 -235.17802429]
[440.35043335 -224.53854370]
[429.77682495 -213.89907837]
[419.20318604 -203.25959778]
[415.71969604 -188.77807617]
[400.50378418 -184.44372559]
[389.93014526 -173.80424500]
[387.45108032 -166.86334229]
[379.15856934 -163.09931946]
[368.45364380 -152.59196472]
[357.74871826 -142.08459473]
[357.86724854 -127.23462677]
[347.16061401 -116.42617035]
[331.58380127 -116.40254211]
[320.87887573 -105.89517212]
[325.15289307 -92.93924713]
[323.42517090 -79.33973694]
[315.97579956 -67.75287628]
[304.20794678 -60.46642303]
[290.38394165 -58.94808960]
[277.19027710 -63.55020523]
[266.35571289 -53.17657471]
[255.52114868 -42.80294418]
[244.68658447 -32.42931366]
[233.85202026 -22.05568504]
[223.01745605 -11.68205452]
[222.01849365 -7.03685188]
[218.10734558 -2.96058130]
[211.78266907 -1.18949854]
[200.69384766 8.91188717]
[189.60502625 19.01327324]
[178.83506775 29.45396996]
[168.39437866 40.22391891]
[157.95367432 50.99386978]
[147.51298523 61.76382065]
[137.07228088 72.53376770]
[143.25805664 83.95355225]
[146.01620483 96.64479828]
[145.12815857 109.60190582]
[140.66432190 121.79818726]
[132.97836304 132.26724243]
[122.67931366 140.17955017]
[110.58322144 144.90815735]
[97.64854431 146.07839966]
[84.90019989 143.59751892]
[83.56896210 152.60650635]
[77.58085632 156.90351868]
[70.26982880 170.00119019]
[62.95879745 183.09886169]
[55.64776993 196.19651794]
[48.33674240 209.29418945]
[41.02571106 222.39184570]
[33.71468353 235.48951721]
[26.40365410 248.58718872]
[31.34479904 252.85008240]
[35.32349396 258.35198975]
[38.02989578 264.86611938]
[39.20972824 272.08886719]
[38.68312454 279.65377808]
[36.35982895 287.15020752]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 32]
[4 31]
[5 30]
[6 29]
[7 28]
[8 27]
[9 26]
[10 25]
[11 24]
[12 23]
[13 22]
[36 46]
[37 45]
[38 44]
[48 246]
[49 245]
[50 244]
[51 243]
[52 242]
[53 241]
[54 240]
[55 239]
[56 237]
[61 72]
[62 71]
[75 84]
[76 83]
[77 82]
[87 228]
[88 227]
[89 226]
[90 225]
[91 224]
[97 223]
[98 222]
[99 221]
[100 218]
[101 217]
[102 216]
[103 215]
[104 214]
[105 213]
[110 207]
[111 206]
[114 203]
[115 202]
[116 201]
[117 199]
[118 198]
[120 196]
[121 195]
[122 194]
[123 193]
[124 192]
[125 191]
[134 147]
[135 146]
[136 145]
[137 144]
[138 143]
[152 186]
[153 185]
[154 184]
[156 182]
[157 181]
[158 180]
[159 179]
[160 178]
[163 173]
[164 172]
[165 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
