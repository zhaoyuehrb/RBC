%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 20:10:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCAGCUUCAGGCCUCUCUCUCGUUUCUCCUGAUUCUCACUCUCUGCCUAGAGCUUCGAUCAGAACUAGCACGAGACACUAUCAAGGAUCUCCUCCCAAAUGUAUGCGCUUUUCCUAUGGAAAAGGGCCCUUGUCAAACCUACAUGACGCGAUGGUUUUUCAACUUUGAAACUGGUGAAUGUGAGUUAUUUGCUUACGGAGGCUGCGGAGGCAACAGCAACAACUUUUUGAGGAAAGAAAAAUGUGAGAAAUUC\
UGCAAGUUCACCUGA\
) } def
/len { sequence length } bind def

/coor [
[245.36691284 1164.15515137]
[256.98901367 1153.69287109]
[256.29370117 1138.70898438]
[252.85690308 1132.19665527]
[255.67820740 1123.54760742]
[255.15664673 1108.55664062]
[254.63508606 1093.56567383]
[254.11352539 1078.57482910]
[253.59196472 1063.58386230]
[252.98352051 1048.59619141]
[252.28820801 1033.61230469]
[251.59291077 1018.62841797]
[250.89759827 1003.64453125]
[239.12734985 997.38580322]
[231.92115784 986.04229736]
[231.24655151 972.51202393]
[237.38583374 960.31475830]
[248.83488464 952.67614746]
[248.31330872 937.68518066]
[247.79174805 922.69427490]
[247.27018738 907.70330811]
[239.09503174 895.25280762]
[246.34780884 881.19195557]
[245.82624817 866.20098877]
[245.30468750 851.21008301]
[244.78312683 836.21911621]
[244.26156616 821.22821045]
[236.08641052 808.77764893]
[243.33918762 794.71679688]
[242.81762695 779.72589111]
[233.01956177 773.96337891]
[227.14500427 764.09259033]
[226.74421692 752.49322510]
[232.03129578 742.02691650]
[241.80288696 735.33117676]
[241.62899780 720.33221436]
[241.45512390 705.33319092]
[241.28123474 690.33422852]
[241.10734558 675.33520508]
[240.93345642 660.33624268]
[238.53926086 640.44195557]
[246.56455994 625.49041748]
[259.18768311 619.50665283]
[256.25067139 604.79699707]
[253.31367493 590.08734131]
[250.37666321 575.37768555]
[247.43963623 560.66802979]
[244.50262451 545.95837402]
[242.28741455 544.29669189]
[240.58474731 541.67303467]
[239.75854492 538.27410889]
[240.10011292 534.41265869]
[241.78709412 530.49957275]
[239.53507996 515.66955566]
[237.28308105 500.83959961]
[235.03106689 486.00961304]
[232.77905273 471.17962646]
[230.52705383 456.34963989]
[211.24798584 439.44223022]
[224.01480103 411.04812622]
[218.25447083 397.19827271]
[212.49414062 383.34841919]
[206.73381042 369.49853516]
[200.97348022 355.64868164]
[185.46803284 357.47567749]
[170.06179810 354.85659790]
[156.00497437 347.99569702]
[144.44058228 337.44174194]
[136.31155396 324.04412842]
[132.28379822 308.88464355]
[132.69172668 293.18997192]
[137.51048279 278.23251343]
[146.35725403 265.22723389]
[158.52169800 255.23287964]
[152.60121155 241.45072937]
[146.68070984 227.66857910]
[140.76022339 213.88641357]
[128.62765503 205.24638367]
[130.28985596 189.51272583]
[124.36936188 175.73057556]
[118.44886780 161.94842529]
[112.52837372 148.16625977]
[106.60788727 134.38410950]
[100.68739319 120.60195923]
[74.87427521 126.78333282]
[47.19007111 101.61074066]
[34.22877121 94.06060028]
[21.26746750 86.51045990]
[4.87527990 86.98820496]
[-3.50309396 72.89086914]
[4.75129795 58.72058105]
[21.14704514 59.05451584]
[28.81760788 73.54915619]
[41.77891159 81.09929657]
[54.74021530 88.64943695]
[60.35626221 83.67852020]
[50.41442871 72.44642639]
[40.47259521 61.21432877]
[30.53076172 49.98223495]
[17.60470390 42.37191010]
[20.84836197 27.72682190]
[35.77903366 26.28632736]
[41.76285934 40.04040146]
[51.70468903 51.27249908]
[61.64652252 62.50459290]
[71.58835602 73.73668671]
[77.20440674 68.76576996]
[71.28391266 54.98361588]
[58.72787857 45.35778427]
[60.81354141 30.60992813]
[54.89305115 16.82777405]
[48.97255707 3.04562044]
[43.05206680 -10.73653412]
[37.13157272 -24.51868820]
[31.21108246 -38.30084229]
[25.29059029 -52.08299637]
[13.48345375 -64.24966431]
[21.90610504 -78.96344757]
[38.37648773 -74.94313049]
[39.07274628 -58.00348663]
[44.99323654 -44.22133255]
[50.91373062 -30.43918037]
[56.83422089 -16.65702629]
[62.75471115 -2.87487173]
[68.67520142 10.90728283]
[74.59569550 24.68943596]
[86.72825623 33.32947540]
[85.06606293 49.06312561]
[90.98655701 62.84527969]
[98.42000580 61.84837723]
[104.12648773 47.97624207]
[113.28691101 59.85457230]
[120.72035980 58.85766983]
[122.80030060 44.00257492]
[124.88024902 29.14748192]
[126.96018982 14.29238701]
[129.04013062 -0.56270760]
[117.77945709 -11.23869705]
[114.97766876 -26.50073051]
[121.71212006 -40.48024368]
[135.39328003 -47.80182648]
[150.76045227 -45.65018463]
[161.90466309 -34.85266495]
[164.54071045 -19.56113815]
[157.65499878 -5.65550375]
[143.89523315 1.51723540]
[141.81527710 16.37232971]
[139.73533630 31.22742462]
[137.65539551 46.08251953]
[135.57545471 60.93761444]
[136.71682739 99.27632141]
[114.46954346 114.68146515]
[120.39003754 128.46362305]
[126.31053162 142.24577332]
[132.23101807 156.02792358]
[138.15151978 169.81008911]
[144.07200623 183.59223938]
[156.62803650 193.21806335]
[154.54237366 207.96592712]
[160.46286011 221.74807739]
[166.38336182 235.53022766]
[172.30384827 249.31239319]
[186.60820007 247.35986328]
[200.91842651 249.17481995]
[214.25999451 254.62730408]
[225.72596741 263.33990479]
[234.53865051 274.71380615]
[240.10237122 287.96997070]
[242.04368591 302.20242310]
[240.23654175 316.44033813]
[234.81028748 329.71408081]
[226.14059448 341.12130737]
[214.82334900 349.88836670]
[220.58367920 363.73822021]
[226.34400940 377.58807373]
[232.10432434 391.43792725]
[237.86465454 405.28781128]
[239.35188293 390.36172485]
[252.38121033 382.92956543]
[265.98602295 389.24691772]
[268.71536255 403.99652100]
[258.27185059 414.76385498]
[272.56961060 410.22793579]
[286.86734009 405.69204712]
[301.16510010 401.15612793]
[315.46282959 396.62020874]
[329.76058960 392.08428955]
[338.39010620 378.55981445]
[354.35885620 377.01763916]
[365.41699219 388.64077759]
[363.08166504 404.51293945]
[349.14431763 412.45837402]
[334.29650879 406.38201904]
[319.99874878 410.91793823]
[305.70101929 415.45385742]
[291.40325928 419.98977661]
[277.10552979 424.52569580]
[262.80776978 429.06161499]
[257.80368042 446.09838867]
[245.35704041 454.09762573]
[247.60903931 468.92761230]
[249.86105347 483.75759888]
[252.11305237 498.58758545]
[254.36506653 513.41760254]
[256.61706543 528.24755859]
[259.21228027 543.02136230]
[262.14929199 557.73101807]
[265.08630371 572.44067383]
[268.02331543 587.15032959]
[270.96032715 601.85998535]
[273.89733887 616.56964111]
[284.03298950 627.62713623]
[298.43203735 631.83038330]
[314.22570801 627.41546631]
[325.75515747 639.07751465]
[321.15988159 654.81964111]
[305.16708374 658.44769287]
[294.22882080 646.22943115]
[279.82974243 642.02618408]
[273.85543823 646.56024170]
[284.47665405 657.15222168]
[295.09786987 667.74414062]
[307.44241333 676.26544189]
[307.77972412 691.26165771]
[295.83084106 700.32940674]
[281.47866821 695.96881104]
[276.59378052 681.78729248]
[269.25027466 668.70776367]
[261.90676880 655.62829590]
[255.93244934 660.16235352]
[256.10635376 675.16131592]
[256.28021240 690.16033936]
[256.45410156 705.15930176]
[256.62799072 720.15832520]
[256.80187988 735.15728760]
[270.85241699 747.90692139]
[271.07998657 766.55792236]
[257.80856323 779.20434570]
[258.33010864 794.19525146]
[266.54257202 807.71801758]
[259.25250244 820.70666504]
[259.77404785 835.69757080]
[260.29562378 850.68853760]
[260.81716919 865.67944336]
[261.33874512 880.67034912]
[269.55120850 894.19317627]
[262.26110840 907.18176270]
[262.78268433 922.17272949]
[263.30426025 937.16363525]
[263.82580566 952.15454102]
[277.98492432 961.43872070]
[283.75033569 977.18127441]
[279.03094482 993.09484863]
[265.88146973 1002.94927979]
[266.57678223 1017.93310547]
[267.27209473 1032.91699219]
[267.96740723 1047.90087891]
[271.48049927 1056.29284668]
[268.58288574 1063.06225586]
[269.10446167 1078.05322266]
[269.62600708 1093.04418945]
[270.14758301 1108.03503418]
[270.66912842 1123.02600098]
[271.27758789 1138.01367188]
[271.97290039 1152.99755859]
[284.51394653 1162.33862305]
[288.06628418 1177.56738281]
[280.95263672 1191.49328613]
[266.53179932 1197.54089355]
[251.61286926 1192.85473633]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 265]
[3 264]
[5 263]
[6 262]
[7 261]
[8 260]
[9 259]
[10 257]
[11 256]
[12 255]
[13 254]
[18 250]
[19 249]
[20 248]
[21 247]
[23 245]
[24 244]
[25 243]
[26 242]
[27 241]
[29 239]
[30 238]
[35 235]
[36 234]
[37 233]
[38 232]
[39 231]
[40 230]
[43 211]
[44 210]
[45 209]
[46 208]
[47 207]
[48 206]
[53 205]
[54 204]
[55 203]
[56 202]
[57 201]
[58 200]
[60 177]
[61 176]
[62 175]
[63 174]
[64 173]
[74 162]
[75 161]
[76 160]
[77 159]
[79 157]
[80 156]
[81 155]
[82 154]
[83 153]
[84 152]
[86 95]
[87 94]
[88 93]
[107 129]
[108 128]
[110 126]
[111 125]
[112 124]
[113 123]
[114 122]
[115 121]
[116 120]
[133 150]
[134 149]
[135 148]
[136 147]
[137 146]
[182 198]
[183 197]
[184 196]
[185 195]
[186 194]
[187 193]
[212 219]
[213 218]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
