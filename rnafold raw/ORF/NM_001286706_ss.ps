%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 06:28:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCGAAGGUUUCCUUUAAGAUCACGCUGACGUCGGACCCACGGCUGCCGUACAAAGUACUCAGUGUUCCUGAAAGUACACCUUUCACAGCAGUCUUAAAGUUUGCAGCAGAAGAAUUUAAAGUUCCUGCUGCAACAAGUGCAAUUAUUACCAAUGAUGGAAUAGGAAUAAAUCCUGCACAGACUGCUGGCCUUGCAGUUGAAAUUCAGCCAUAA\
) } def
/len { sequence length } bind def

/coor [
[120.61795807 222.23153687]
[133.42471313 230.03771973]
[129.77012634 215.48973083]
[126.11555481 200.94172668]
[122.55403137 197.76594543]
[120.94697571 192.32075500]
[122.57226562 185.91964722]
[119.34040070 171.27195740]
[116.10852814 156.62425232]
[112.87666321 141.97656250]
[109.64479065 127.32886505]
[103.30884552 123.31566620]
[99.12259674 137.71966553]
[94.93634796 152.12367249]
[95.07338715 167.12304688]
[86.55920410 179.47248840]
[72.49166870 184.67866516]
[57.98922348 180.84733582]
[48.32856750 169.37249756]
[47.02471161 154.42927551]
[54.55206299 141.45472717]
[68.17002106 135.16984558]
[79.40348816 125.22956085]
[90.63694763 115.28926849]
[84.30100250 111.27606964]
[69.67707825 114.61388397]
[55.05316162 117.95169830]
[40.42924500 121.28951263]
[25.80532455 124.62732697]
[11.18140697 127.96514130]
[-3.44251227 131.30294800]
[3.26463938 151.47468567]
[-10.65734005 176.08403015]
[-24.31000900 182.29728699]
[-37.96267700 188.51054382]
[-51.61534882 194.72381592]
[-56.92245102 209.61038208]
[-71.23715210 216.30851746]
[-86.06678772 210.84431458]
[-92.61319733 196.45960999]
[-86.99251556 181.68856812]
[-72.53939819 175.29460144]
[-57.82860947 181.07113647]
[-44.17594147 174.85787964]
[-30.52327156 168.64462280]
[-16.87060165 162.43135071]
[-18.27382851 155.06379700]
[-33.00899887 157.86999512]
[-35.81496048 143.13478088]
[-21.08028221 140.32867432]
[-22.48350906 132.96110535]
[-37.46425629 132.20137024]
[-52.44500351 131.44163513]
[-67.42575073 130.68190002]
[-83.55079651 135.91824341]
[-93.04635620 121.87293243]
[-82.17857361 108.86032867]
[-66.66601562 115.70114899]
[-51.68526459 116.46088409]
[-36.70451736 117.22062683]
[-21.72377205 117.98036194]
[-6.78032637 116.67903900]
[7.84359264 113.34122467]
[22.46751022 110.00341034]
[37.09143066 106.66559601]
[51.71534729 103.32778168]
[66.33926392 99.98996735]
[80.96318817 96.65215302]
[82.89558411 89.40537262]
[72.27617645 78.81159210]
[86.76039124 74.91181183]
[88.69279480 67.66503143]
[77.67242432 57.48900223]
[66.65206146 47.31297302]
[55.63169861 37.13694000]
[44.61133575 26.96091270]
[33.59097290 16.78488159]
[17.56791496 15.98413181]
[8.32112789 2.87396407]
[12.94395542 -12.48862076]
[27.89015770 -18.31876373]
[41.69429016 -10.14407730]
[43.76700211 5.76451826]
[54.78736496 15.94054794]
[65.80773163 26.11657715]
[76.82809448 36.29260635]
[87.84845734 46.46863556]
[98.86882019 56.64466858]
[113.85900116 57.18745041]
[125.58647156 47.83510208]
[137.31393433 38.48275757]
[149.04141235 29.13040924]
[160.76889038 19.77806282]
[172.49635315 10.42571545]
[184.22383118 1.07336831]
[195.95130920 -8.27897835]
[207.67877197 -17.63132668]
[195.17803955 -9.34086800]
[180.19398499 -10.03240490]
[168.51000977 -19.43902397]
[164.63574219 -33.93005753]
[170.06655884 -47.91241455]
[182.70631409 -55.98933411]
[197.67691040 -55.04318619]
[202.57983398 -69.21927643]
[207.48274231 -83.39536285]
[212.38565063 -97.57144928]
[217.28855896 -111.74753571]
[222.19146729 -125.92362976]
[227.09437561 -140.09971619]
[231.99728394 -154.27580261]
[236.90019226 -168.45188904]
[236.02551270 -174.99792480]
[238.25103760 -180.22093201]
[242.15570068 -182.96386719]
[247.46696472 -196.99206543]
[252.77822876 -211.02027893]
[258.08947754 -225.04847717]
[263.40075684 -239.07667542]
[263.35452271 -256.03057861]
[279.63305664 -260.76828003]
[288.69195557 -246.43746948]
[277.42895508 -233.76541138]
[272.11770630 -219.73721313]
[266.80642700 -205.70901489]
[261.49517822 -191.68080139]
[256.18389893 -177.65260315]
[251.07627869 -163.54898071]
[246.17337036 -149.37289429]
[241.27046204 -135.19680786]
[236.36755371 -121.02071381]
[231.46464539 -106.84462738]
[226.56173706 -92.66854095]
[221.65882874 -78.49245453]
[216.75592041 -64.31636047]
[211.85301208 -50.14027786]
[216.40074158 -44.17638397]
[231.27825928 -46.08944321]
[225.49623108 -32.24859619]
[230.04397583 -26.28470039]
[245.01216125 -27.26123428]
[259.98034668 -28.23776627]
[274.94851685 -29.21429825]
[289.91668701 -30.19083023]
[289.46115112 -39.98231506]
[295.05148315 -50.44987488]
[306.79852295 -58.20627594]
[321.51293945 -61.11931610]
[336.22735596 -64.03235626]
[350.94177246 -66.94539642]
[358.74813843 -71.67982483]
[365.89022827 -69.79248047]
[380.64529419 -72.49220276]
[395.40032959 -75.19191742]
[407.53744507 -86.22016907]
[423.07217407 -80.96620178]
[426.02371216 -64.83484650]
[413.35577393 -54.42066574]
[398.10003662 -60.43686676]
[383.34500122 -57.73714828]
[368.58993530 -55.03743362]
[353.85482788 -52.23097992]
[339.14041138 -49.31793594]
[324.42599487 -46.40489578]
[309.71154785 -43.49185181]
[309.38583374 -28.49538994]
[323.95989990 -24.94621658]
[338.53396606 -21.39704514]
[352.93228149 -28.47293091]
[367.37957764 -21.49758530]
[370.79312134 -5.82189369]
[360.55432129 6.52909374]
[344.51754761 6.08075666]
[334.98480225 -6.82297945]
[320.41073608 -10.37215233]
[305.83666992 -13.92132473]
[290.89321899 -15.22265148]
[275.92504883 -14.24611950]
[260.95687866 -13.26958752]
[245.98869324 -12.29305458]
[231.02050781 -11.31652260]
[217.03112793 -5.90385342]
[205.30364990 3.44849348]
[193.57617188 12.80084038]
[181.84870911 22.15318680]
[170.12123108 31.50553513]
[158.39376831 40.85788345]
[146.66629028 50.21022797]
[134.93881226 59.56257629]
[123.21134186 68.91492462]
[124.29248810 124.09700012]
[127.52436066 138.74468994]
[130.75622559 153.39239502]
[133.98809814 168.04008484]
[137.21997070 182.68778992]
[140.66354370 197.28715515]
[144.31813049 211.83514404]
[147.97270203 226.38314819]
[152.35943604 240.72735596]
[157.46705627 254.83097839]
[162.57467651 268.93460083]
[167.68229675 283.03823853]
[172.78991699 297.14184570]
[183.86828613 309.97564697]
[174.60285950 324.17379761]
[158.39462280 319.20092773]
[158.68629456 302.24948120]
[153.57867432 288.14584351]
[148.47105408 274.04223633]
[143.36343384 259.93859863]
[138.25581360 245.83497620]
[132.00462341 259.47033691]
[118.50404358 266.00747681]
[103.93061829 262.45568848]
[94.95172119 250.43988037]
[95.67522430 235.45733643]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 198]
[3 197]
[4 196]
[7 195]
[8 194]
[9 193]
[10 192]
[11 191]
[25 68]
[26 67]
[27 66]
[28 65]
[29 64]
[30 63]
[31 62]
[33 46]
[34 45]
[35 44]
[36 43]
[51 61]
[52 60]
[53 59]
[54 58]
[72 88]
[73 87]
[74 86]
[75 85]
[76 84]
[77 83]
[89 190]
[90 189]
[91 188]
[92 187]
[93 186]
[94 185]
[95 184]
[96 183]
[97 182]
[104 136]
[105 135]
[106 134]
[107 133]
[108 132]
[109 131]
[110 130]
[111 129]
[112 128]
[115 127]
[116 126]
[117 125]
[118 124]
[119 123]
[140 181]
[141 180]
[142 179]
[143 178]
[144 177]
[147 165]
[148 164]
[149 163]
[150 162]
[152 161]
[153 160]
[154 159]
[166 176]
[167 175]
[168 174]
[199 211]
[200 210]
[201 209]
[202 208]
[203 207]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
