%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 19:45:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCUACAGGUCCAACUGCUGCCACUGGCAGUAAUCGAAGACUUCAGCAGACACAAAAUCAAGUAGAUGAGGUGGUGGACAUAAUGCGAGUUAACGUGGACAAGGUUCUGGAAAGAGACCAGAAGCUCUCUGAGUUAGACGACCGUGCAGACGCACUGCAGGCAGGCGCUUCUCAAUUUGAAACGAGCGCAGCCAAGUUGAAGAGGAAAUAUUGGUGGAAGAAUUGCAAGAUGUGGGCAAUCGGGAUUACUGUU\
CUGGUUAUCUUCAUCAUCAUCAUCAUCGUGUGGGUUGUCUCUUCAUGA\
) } def
/len { sequence length } bind def

/coor [
[-5.39230442 493.07192993]
[-12.79001427 491.83746338]
[-20.99423599 504.39495850]
[-29.19845963 516.95245361]
[-37.40268326 529.50994873]
[-45.60690308 542.06744385]
[-46.67747498 557.85241699]
[-60.11603928 564.27532959]
[-68.19005585 576.91693115]
[-76.13300323 589.64129639]
[-84.07594299 602.36566162]
[-92.01889038 615.09008789]
[-99.96183777 627.81445312]
[-91.33856964 643.17517090]
[-91.71173096 660.69744873]
[-100.88701630 675.52502441]
[-116.24325562 683.59460449]
[-133.48051453 682.74926758]
[-141.15879822 695.63507080]
[-148.83706665 708.52087402]
[-156.51535034 721.40667725]
[-164.19361877 734.29248047]
[-171.87190247 747.17828369]
[-179.55017090 760.06408691]
[-182.46385193 776.76580811]
[-199.31942749 778.58947754]
[-205.73793030 762.89746094]
[-192.43597412 752.38586426]
[-184.75770569 739.50000000]
[-177.07942200 726.61419678]
[-169.40115356 713.72839355]
[-161.72286987 700.84259033]
[-154.04460144 687.95678711]
[-146.36633301 675.07098389]
[-153.65686035 664.81927490]
[-156.55590820 652.53033447]
[-154.60157776 640.00903320]
[-148.04750061 629.10815430]
[-137.83052063 621.45404053]
[-125.43689728 618.20397949]
[-112.68621063 619.87145996]
[-104.74326324 607.14709473]
[-96.80031586 594.42272949]
[-88.85736847 581.69836426]
[-80.91442871 568.97399902]
[-81.08503723 564.24621582]
[-78.32109070 559.35211182]
[-72.67353821 556.07110596]
[-72.18978882 541.18438721]
[-58.16440201 533.86322021]
[-49.96017838 521.30572510]
[-41.75595474 508.74822998]
[-33.55173492 496.19073486]
[-25.34751129 483.63323975]
[-38.36470413 491.08660889]
[-53.30778885 492.39205933]
[-67.42021179 487.30880737]
[-78.09866333 476.77453613]
[-83.37327576 462.73251343]
[-82.27105713 447.77307129]
[-74.99533081 434.65576172]
[-62.88824081 425.80035400]
[-48.18318558 422.84039307]
[-33.59280777 426.32189941]
[-21.80859184 435.60263062]
[-15.00437164 448.97061157]
[-14.43477631 463.95678711]
[-8.12673855 450.34765625]
[-1.81870139 436.73852539]
[4.48933601 423.12939453]
[10.79737377 409.52023315]
[17.03500748 395.87869263]
[23.20207024 382.20510864]
[29.36913490 368.53149414]
[35.53619766 354.85791016]
[41.70326233 341.18429565]
[47.87032700 327.51068115]
[54.03738785 313.83709717]
[60.20445251 300.16348267]
[72.69867706 273.01306152]
[74.40015411 258.10989380]
[76.10162354 243.20669556]
[77.80309296 228.30351257]
[68.36150360 216.84088135]
[69.87474060 201.70268250]
[81.96182251 191.87719727]
[83.66329193 176.97401428]
[85.36476135 162.07083130]
[87.06623077 147.16763306]
[88.76770020 132.26445007]
[67.57446289 110.75843048]
[71.70864868 80.84904480]
[61.43592453 69.91876221]
[51.16320038 58.98847961]
[40.89047623 48.05819702]
[30.61774826 37.12791443]
[15.52866364 32.37080383]
[12.45047188 17.79774666]
[2.17774582 6.86746216]
[-8.09498024 -4.06282187]
[-18.36770630 -14.99310589]
[-31.18004417 -16.16264343]
[-39.51013184 -25.43612099]
[-39.31547928 -37.49988937]
[-49.47470474 -48.53574753]
[-64.51382446 -53.44853592]
[-67.44125366 -68.05262756]
[-77.60047913 -79.08848572]
[-87.75969696 -90.12434387]
[-97.91892242 -101.16020203]
[-108.07814789 -112.19606018]
[-118.23737335 -123.23191833]
[-133.84910583 -122.33324432]
[-146.35508728 -131.72125244]
[-149.85035706 -146.96321106]
[-142.68455505 -160.86231995]
[-128.24116516 -166.85586548]
[-113.33991241 -162.11386108]
[-105.01670074 -148.87535095]
[-107.20150757 -133.39114380]
[-97.04228973 -122.35528564]
[-86.88306427 -111.31942749]
[-76.72383881 -100.28356171]
[-66.56461334 -89.24770355]
[-56.40539169 -78.21184540]
[-42.09292984 -74.08841705]
[-38.43884277 -58.69497299]
[-28.27962112 -47.65911484]
[-11.25821304 -43.30265427]
[-7.43742180 -25.26583099]
[2.83530402 -14.33554745]
[13.10802937 -3.40526342]
[23.38075447 7.52502060]
[37.73506546 11.50032234]
[41.54803085 26.85518646]
[51.82075882 37.78546906]
[62.09348297 48.71575546]
[72.36621094 59.64603806]
[82.63893890 70.57632446]
[85.26106262 65.63294220]
[88.88156891 60.92627335]
[78.33734894 49.46079636]
[79.02246857 34.26259613]
[90.01802826 24.28095245]
[90.48299408 9.28816128]
[87.63209534 0.66358733]
[91.03102875 -5.85693884]
[91.65090179 -20.84412575]
[92.27077484 -35.83131027]
[92.89064789 -50.81849670]
[93.51052856 -65.80568695]
[83.74646759 -78.53528595]
[87.75076294 -94.07057190]
[102.45166779 -100.49420166]
[116.57189941 -92.87851715]
[119.27962494 -77.06562042]
[108.49771118 -65.18580627]
[107.87783813 -50.19862366]
[107.25796509 -35.21143723]
[106.63809204 -20.22425079]
[106.01821136 -5.23706436]
[105.47578430 9.75312519]
[105.01082611 24.74591637]
[115.36673737 35.38972092]
[115.10877991 50.60116959]
[103.87435913 61.39123917]
[118.22846222 65.74550629]
[126.17140961 53.02113724]
[134.11434937 40.29676819]
[142.05729675 27.57239532]
[150.00024414 14.84802437]
[157.94319153 2.12365365]
[157.77728271 -18.06624413]
[175.30273438 -26.30304337]
[182.98100281 -39.18885422]
[190.65928650 -52.07466125]
[193.57296753 -68.77635956]
[210.42854309 -70.60003662]
[216.84703064 -54.90802383]
[203.54508972 -44.39638519]
[195.86680603 -31.51057816]
[188.18853760 -18.62476730]
[191.56550598 -9.04508781]
[189.08557129 1.03060818]
[181.32766724 8.24697971]
[170.66755676 10.06659889]
[162.72462463 22.79096985]
[154.78167725 35.51534271]
[146.83872986 48.23971176]
[138.89578247 60.96408463]
[130.95283508 73.68845367]
[128.58587646 75.89234924]
[126.20219421 78.07730865]
[139.53903198 71.21226501]
[152.87586975 64.34722137]
[166.21269226 57.48217010]
[179.54953003 50.61712646]
[192.85070801 43.68325806]
[206.11589050 36.68075562]
[219.38107300 29.67825317]
[221.45310974 14.30014420]
[232.19277954 3.10018301]
[247.47045898 0.38498446]
[261.41156006 7.19859743]
[268.65545654 20.92104912]
[266.41671753 36.27577591]
[255.55616760 47.35857391]
[240.24993896 49.90787888]
[226.38357544 42.94343185]
[213.11839294 49.94593430]
[199.85321045 56.94843674]
[195.42712402 62.82037354]
[186.41458130 63.95396042]
[173.07774353 70.81900787]
[159.74090576 77.68405151]
[146.40406799 84.54909515]
[133.06724548 91.41414642]
[134.13720703 98.65458679]
[133.64039612 105.95677948]
[131.59959412 112.98557281]
[128.10847473 119.41837311]
[123.32726288 124.95993805]
[117.47540283 129.35591125]
[110.82147980 132.40455627]
[103.67089081 133.96592712]
[101.96942139 148.86911011]
[100.26795197 163.77229309]
[98.56647491 178.67549133]
[96.86500549 193.57867432]
[106.42639923 205.87573242]
[104.48856354 220.96543884]
[92.70628357 230.00498962]
[91.00480652 244.90817261]
[89.30333710 259.81137085]
[87.60186768 274.71453857]
[94.74108124 287.90664673]
[108.14814758 294.63351440]
[121.55520630 301.36035156]
[137.35971069 300.63351440]
[145.26554871 313.25677490]
[158.67262268 319.98364258]
[172.07968140 326.71051025]
[185.48675537 333.43734741]
[198.89381409 340.16421509]
[212.30088806 346.89108276]
[225.70794678 353.61791992]
[239.11500549 360.34478760]
[252.52207947 367.07162476]
[268.85253906 365.57220459]
[278.09402466 379.11941528]
[270.73971558 393.77703857]
[254.35507202 394.46658325]
[245.79522705 380.47869873]
[232.38815308 373.75186157]
[218.98109436 367.02499390]
[205.57402039 360.29812622]
[192.16696167 353.57128906]
[178.75988770 346.84442139]
[165.35282898 340.11755371]
[151.94577026 333.39071655]
[138.53869629 326.66384888]
[123.69316101 327.87185669]
[114.82835388 314.76742554]
[101.42128754 308.04058838]
[88.01422119 301.31372070]
[73.87805176 306.33056641]
[67.71099091 320.00415039]
[61.54392624 333.67776489]
[55.37686157 347.35134888]
[49.20979691 361.02496338]
[43.04273605 374.69854736]
[36.87567139 388.37216187]
[30.70860672 402.04574585]
[30.04201317 411.10482788]
[24.40651321 415.82827759]
[18.09847450 429.43740845]
[11.79043770 443.04656982]
[5.48240042 456.65570068]
[-0.82563716 470.26483154]
[17.21343994 474.35229492]
[31.34182930 493.09301758]
[35.02411270 507.63403320]
[38.70639420 522.17504883]
[42.38867569 536.71600342]
[46.07095718 551.25701904]
[59.21531296 564.18572998]
[53.72475052 580.87585449]
[57.55710220 595.37805176]
[61.38945770 609.88024902]
[73.32302094 621.12841797]
[69.28576660 637.02282715]
[53.43088150 641.21264648]
[42.06850815 629.38775635]
[46.88727951 613.71258545]
[43.05492783 599.21038818]
[39.22257614 584.70825195]
[28.95076942 578.37872314]
[25.61914062 566.36676025]
[31.52995300 554.93933105]
[27.84767151 540.39831543]
[24.16539001 525.85729980]
[20.48310661 511.31631470]
[16.80082512 496.77529907]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 54]
[3 53]
[4 52]
[5 51]
[6 50]
[8 48]
[9 45]
[10 44]
[11 43]
[12 42]
[13 41]
[18 34]
[19 33]
[20 32]
[21 31]
[22 30]
[23 29]
[24 28]
[67 279]
[68 278]
[69 277]
[70 276]
[71 275]
[72 273]
[73 272]
[74 271]
[75 270]
[76 269]
[77 268]
[78 267]
[79 266]
[80 235]
[81 234]
[82 233]
[83 232]
[86 229]
[87 228]
[88 227]
[89 226]
[90 225]
[92 139]
[93 138]
[94 137]
[95 136]
[96 135]
[98 133]
[99 132]
[100 131]
[101 130]
[104 128]
[105 127]
[107 125]
[108 124]
[109 123]
[110 122]
[111 121]
[112 120]
[141 166]
[144 163]
[145 162]
[147 161]
[148 160]
[149 159]
[150 158]
[151 157]
[167 191]
[168 190]
[169 189]
[170 188]
[171 187]
[172 186]
[174 182]
[175 181]
[176 180]
[193 217]
[194 216]
[195 215]
[196 214]
[197 213]
[198 211]
[199 210]
[200 209]
[236 265]
[237 264]
[238 263]
[240 261]
[241 260]
[242 259]
[243 258]
[244 257]
[245 256]
[246 255]
[247 254]
[248 253]
[281 303]
[282 302]
[283 301]
[284 300]
[285 299]
[287 296]
[288 295]
[289 294]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
