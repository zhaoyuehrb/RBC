%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 19:04:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGAGCUGCUGGGAGAGUACGUCGGGCAGGAAGGGAAGCCGCAGAAGCUGCGGGUGUCCUGUGAGGCGCCGGGUGACGGCGACCCUUUCCAGGGCCUGUUGUCUGGCGUGGCCCAGAUGAAGGACAUGGUAACGGAAUUAUUCGACCCUCUGGUACAGGGGGAAGUGCAGCACCGGGUGGCGGCGGCUCCAGACGAGGACUUGGACGGUGAUGAUGAAGAUGAUGCAGAAGAUGAAAAUAACAUUGAUAACAGA\
ACUAACUUCGAUGGACCAUCUGCAAAACGGCCAAAAACACCGUCUUAA\
) } def
/len { sequence length } bind def

/coor [
[255.05865479 200.33299255]
[255.65817261 180.41636658]
[242.04904175 174.10833740]
[228.43989563 167.80029297]
[214.83076477 161.49226379]
[201.22161865 155.18421936]
[187.61248779 148.87619019]
[174.00334167 142.56814575]
[160.39419556 136.26011658]
[146.78506470 129.95207214]
[133.17591858 123.64403534]
[119.56678772 117.33599854]
[112.87378693 123.63021851]
[104.18834686 127.35843658]
[94.48780060 127.90564728]
[84.93193817 125.02648163]
[76.72434235 118.89591980]
[70.96122742 110.10843658]
[68.48671722 99.62342834]
[53.87271881 103.00440979]
[39.25872040 106.38538361]
[24.64472008 109.76636505]
[10.03072071 113.14734650]
[-4.58327866 116.52832031]
[-19.19727898 119.90930176]
[-33.81127930 123.29027557]
[-48.42527771 126.67125702]
[-63.03927612 130.05223083]
[-77.65327454 133.43321228]
[-92.26727295 136.81419373]
[-103.96834564 147.46292114]
[-118.11208344 142.79344177]
[-118.95967865 150.86505127]
[-122.61370850 158.57147217]
[-128.90371704 164.92730713]
[-137.31263733 169.02848816]
[-147.01499939 170.17355347]
[-156.95715332 167.96742249]
[-163.98687744 182.14111328]
[-178.86044312 182.93243408]
[-191.24569702 191.39442444]
[-203.63096619 199.85641479]
[-216.01622009 208.31840515]
[-228.40147400 216.78041077]
[-240.78674316 225.24240112]
[-250.45391846 239.17013550]
[-266.51348877 233.73634338]
[-265.73779297 216.80015564]
[-249.24873352 212.85714722]
[-236.86347961 204.39514160]
[-224.47821045 195.93315125]
[-212.09295654 187.47116089]
[-199.70768738 179.00915527]
[-187.32243347 170.54716492]
[-181.17860413 156.97872925]
[-165.41914368 155.58216858]
[-169.77342224 141.22805786]
[-184.77261353 141.07304382]
[-199.77182007 140.91802979]
[-214.77101135 140.76303101]
[-229.77021790 140.60801697]
[-244.76940918 140.45300293]
[-260.62728882 149.85797119]
[-275.36071777 140.28546143]
[-290.36071777 140.28546143]
[-305.36071777 140.28546143]
[-320.36071777 140.28546143]
[-335.35992432 140.44047546]
[-350.35671997 140.75047302]
[-365.35351562 141.06047058]
[-380.35031128 141.37048340]
[-395.34710693 141.68048096]
[-407.44720459 152.21456909]
[-423.20077515 149.18061829]
[-430.52301025 134.90602112]
[-423.79693604 120.34101105]
[-408.18218994 116.65863037]
[-395.65710449 126.68368530]
[-380.66030884 126.37368774]
[-365.66351318 126.06368256]
[-350.66671753 125.75367737]
[-335.66992188 125.44367218]
[-331.80532837 122.71500397]
[-326.19635010 122.35203552]
[-320.36071777 125.28546143]
[-305.36071777 125.28546143]
[-290.36071777 125.28546143]
[-275.36071777 125.28546143]
[-266.61694336 116.97167969]
[-254.15242004 116.81957245]
[-244.61441040 125.45380402]
[-229.61520386 125.60881805]
[-214.61601257 125.76382446]
[-199.61680603 125.91883850]
[-184.61761475 126.07384491]
[-169.61840820 126.22885895]
[-142.75885010 113.04052734]
[-121.49305725 128.17944336]
[-110.83728027 117.77253723]
[-95.64825439 122.20019531]
[-81.03425598 118.81921387]
[-66.42025757 115.43823242]
[-51.80625534 112.05725861]
[-37.19225693 108.67627716]
[-22.57825661 105.29530334]
[-7.96425676 101.91432190]
[6.64974260 98.53334045]
[21.26374245 95.15236664]
[35.87774277 91.77138519]
[50.49174118 88.39041138]
[65.10574341 85.00942993]
[73.63161469 72.66806030]
[71.62250519 57.80321884]
[69.61339569 42.93838120]
[67.60428619 28.07353973]
[58.08830261 15.43405533]
[64.05118561 1.78512490]
[59.81960678 -6.25257778]
[62.09894180 -13.24361897]
[60.24354935 -28.12842751]
[48.05557632 -37.82847977]
[46.38598633 -52.95022202]
[55.70861435 -64.50981903]
[46.32375336 -77.24696350]
[52.42736816 -90.83354187]
[50.57197571 -105.71835327]
[42.51889801 -106.38793945]
[34.58427811 -109.32264709]
[27.41497612 -114.49359894]
[21.64674759 -121.68586731]
[17.85067558 -130.50352478]
[16.48188972 -140.39009094]
[17.83489799 -150.66339111]
[22.00953293 -160.56256104]
[18.17717934 -175.06474304]
[14.34482765 -189.56690979]
[10.51247501 -204.06909180]
[-1.42108858 -215.31729126]
[2.61616158 -231.21171570]
[18.47104836 -235.40153503]
[29.83342361 -223.57662964]
[25.01465034 -207.90144348]
[28.84700203 -193.39926147]
[32.67935562 -178.89709473]
[36.51170731 -164.39491272]
[51.44013977 -165.86524963]
[66.36724854 -167.33543396]
[67.29673004 -182.30661011]
[68.22621155 -197.27777100]
[69.15569305 -212.24894714]
[70.08517456 -227.22012329]
[71.01465607 -242.19129944]
[71.94413757 -257.16247559]
[66.89089203 -273.34582520]
[81.04292297 -282.68157959]
[93.93151093 -271.66702271]
[86.91530609 -256.23300171]
[85.98582458 -241.26182556]
[85.05635071 -226.29064941]
[84.12686920 -211.31947327]
[83.19738770 -196.34829712]
[82.26790619 -181.37712097]
[81.33842468 -166.40594482]
[91.27671814 -141.66241455]
[83.76235199 -118.79981232]
[65.45678711 -107.57374573]
[67.31217194 -92.68893433]
[76.56432343 -81.01644897]
[70.59342194 -66.36520386]
[82.46849823 -57.44790268]
[84.56216431 -42.37902069]
[75.12835693 -29.98381615]
[76.98374939 -15.09900856]
[78.91602325 -0.22398514]
[88.28830719 11.35226631]
[82.46913147 26.06443024]
[84.47824097 40.92927170]
[86.48735046 55.79410934]
[88.49645996 70.65895081]
[109.41190338 71.80513763]
[123.77294159 85.33358765]
[125.87482452 103.72686005]
[139.48396301 110.03489685]
[153.09309387 116.34293365]
[166.70223999 122.65097046]
[180.31138611 128.95901489]
[193.92051697 135.26704407]
[207.52966309 141.57508850]
[221.13879395 147.88311768]
[234.74794006 154.19116211]
[248.35707092 160.49919128]
[261.96621704 166.80723572]
[268.95166016 158.98579407]
[277.57553101 153.04154968]
[287.34695435 149.30551147]
[297.71154785 147.98324585]
[308.08270264 149.14350891]
[317.87493896 152.71478271]
[326.53686523 158.48956299]
[333.58224487 166.13647461]
[338.61727905 175.21923828]
[341.36264038 185.22160339]
[341.66897583 195.57664490]
[339.52493286 205.69891357]
[352.71704102 212.83813477]
[365.90911865 219.97734070]
[379.10122681 227.11654663]
[392.29333496 234.25576782]
[405.48544312 241.39497375]
[418.67755127 248.53417969]
[431.86965942 255.67340088]
[441.64660645 244.22830200]
[453.58496094 235.06979370]
[467.16140747 228.59623718]
[481.78146362 225.08842468]
[496.80551147 224.69731140]
[511.57678223 227.43756104]
[525.45007324 233.18701172]
[537.81982422 241.69209290]
[548.14685059 252.57904053]
[555.98138428 265.37030029]
[560.98315430 279.50552368]
[562.93572998 294.36599731]
[561.75628662 309.30184937]
[557.49865723 323.66043091]
[570.69079590 330.79962158]
[583.88287354 337.93884277]
[597.07501221 345.07806396]
[610.26708984 352.21725464]
[623.45922852 359.35647583]
[630.48065186 352.22875977]
[638.88732910 346.82315063]
[648.26605225 343.39974976]
[658.15716553 342.12136841]
[668.07696533 343.04583740]
[677.54125977 346.12335205]
[686.08935547 351.19915771]
[693.30603027 358.02127075]
[698.84204102 366.25314331]
[702.43084717 375.49008179]
[703.90148926 385.27920532]
[703.18676758 395.14169312]
[700.32629395 404.59616089]
[712.96789551 412.67016602]
[725.60949707 420.74417114]
[738.25115967 428.81820679]
[750.89276123 436.89221191]
[763.53436279 444.96621704]
[775.97613525 436.23297119]
[790.81402588 432.93063354]
[805.78533936 435.56283569]
[818.60705566 443.72814941]
[827.32397461 456.18142700]
[830.60675049 471.02365112]
[827.95489502 485.99148560]
[819.77270508 498.80242920]
[807.30798340 507.50292969]
[792.46142578 510.76620483]
[777.49707031 508.09463501]
[764.69689941 499.89562988]
[756.01281738 487.41946411]
[752.76910400 472.56863403]
[755.46032715 457.60784912]
[742.81872559 449.53381348]
[730.17712402 441.45980835]
[717.53552246 433.38580322]
[704.89392090 425.31176758]
[692.25225830 417.23776245]
[675.70190430 428.82717896]
[655.69348145 431.95727539]
[636.30450439 425.94821167]
[621.50451660 411.98690796]
[614.34289551 392.89279175]
[616.32000732 372.54858398]
[603.12786865 365.40936279]
[589.93579102 358.27017212]
[576.74365234 351.13095093]
[563.55157471 343.99172974]
[550.35949707 336.85253906]
[540.66760254 348.27023315]
[528.80895996 357.42678833]
[515.30029297 363.92004395]
[500.73107910 367.46395874]
[485.73754883 367.90130615]
[470.97503662 365.21047974]
[457.08923340 359.50677490]
[444.68801880 351.03717041]
[434.31484985 340.16995239]
[426.42489624 327.37838745]
[421.36511230 313.22036743]
[419.35894775 298.31393433]
[420.49649048 283.31030273]
[424.73046875 268.86550903]
[411.53836060 261.72628784]
[398.34625244 254.58708191]
[385.15414429 247.44787598]
[371.96203613 240.30865479]
[358.76992798 233.16944885]
[345.57781982 226.03024292]
[332.38571167 218.89102173]
[317.06512451 231.24961853]
[297.82083130 235.61073303]
[278.57513428 231.04188538]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 192]
[3 191]
[4 190]
[5 189]
[6 188]
[7 187]
[8 186]
[9 185]
[10 184]
[11 183]
[12 182]
[19 111]
[20 110]
[21 109]
[22 108]
[23 107]
[24 106]
[25 105]
[26 104]
[27 103]
[28 102]
[29 101]
[30 100]
[32 98]
[38 56]
[40 54]
[41 53]
[42 52]
[43 51]
[44 50]
[45 49]
[57 96]
[58 95]
[59 94]
[60 93]
[61 92]
[62 91]
[64 88]
[65 87]
[66 86]
[67 85]
[68 82]
[69 81]
[70 80]
[71 79]
[72 78]
[112 179]
[113 178]
[114 177]
[115 176]
[117 174]
[119 173]
[120 172]
[123 169]
[125 167]
[126 166]
[134 145]
[135 144]
[136 143]
[137 142]
[147 163]
[148 162]
[149 161]
[150 160]
[151 159]
[152 158]
[153 157]
[204 300]
[205 299]
[206 298]
[207 297]
[208 296]
[209 295]
[210 294]
[211 293]
[225 279]
[226 278]
[227 277]
[228 276]
[229 275]
[230 274]
[243 268]
[244 267]
[245 266]
[246 265]
[247 264]
[248 263]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
