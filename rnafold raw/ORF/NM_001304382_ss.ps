%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 21:09:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCACACUUCAACCUCUUCUUCAGUCACAAAGAGUUACAUCUCAUCACAGACAAAUGGAGAAACGGGACAACUUGUCCAUCGUUUCACUGUACCAGCUCCUGUAGUGAUAAUACUCAUUAUUUUGUGUGUGAUGGCUGGUAUUAUUGGAACGAUCCUCUUAAUUUCUUACAGUAUUCGCCGACUGAUAAAGGCAUGA\
) } def
/len { sequence length } bind def

/coor [
[88.76032257 361.89605713]
[86.63310242 377.10690308]
[77.17279053 389.20642090]
[62.92417145 394.93988037]
[47.72004700 392.76498413]
[35.65024948 383.26678467]
[29.96149635 369.00027466]
[32.18403244 353.80303955]
[41.72000504 341.76306152]
[56.00428772 336.11904907]
[58.12835693 321.27020264]
[60.25242233 306.42135620]
[51.14020920 294.69519043]
[53.08279037 279.60607910]
[65.44406128 270.12786865]
[63.27702713 263.05432129]
[67.72064972 255.06210327]
[70.07886505 240.24862671]
[72.43707275 225.43516541]
[63.51110840 213.56660461]
[65.69164276 198.51004028]
[78.20100403 189.22814941]
[80.55921173 174.41467285]
[82.91742706 159.60121155]
[85.27563477 144.78773499]
[87.63384247 129.97427368]
[89.99205780 115.16080475]
[84.19213104 110.40571594]
[78.73194122 124.37662506]
[63.75752640 123.50090027]
[59.96306610 108.98876953]
[72.59227753 100.89553833]
[66.79235840 96.14044952]
[52.72872925 101.35718536]
[38.66510010 106.57392883]
[32.30260849 121.04093170]
[17.54384041 126.69374847]
[3.14491177 120.17865753]
[-2.35154748 105.36094666]
[4.31541395 91.03170776]
[19.19040680 85.69221497]
[33.44836044 92.51029968]
[47.51198578 87.29356384]
[61.57561493 82.07682037]
[68.09910583 68.56963348]
[63.44133377 54.31112289]
[58.78356552 40.05260849]
[54.12579346 25.79409790]
[49.46802521 11.53558540]
[44.81025314 -2.72292686]
[33.17022324 -13.43835068]
[36.57300186 -27.93905258]
[31.91523361 -42.19756699]
[27.25746346 -56.45607758]
[22.59969139 -70.71459198]
[17.94192123 -84.97309875]
[8.95785236 -73.94319916]
[-5.39790583 -66.86553955]
[-23.53001404 -65.64620209]
[-43.25743484 -71.59922791]
[-62.01874542 -85.28287506]
[-72.83257294 -95.67812347]
[-83.64640045 -106.07336426]
[-94.46023560 -116.46861267]
[-105.27406311 -126.86385345]
[-116.08789062 -137.25909424]
[-127.06447601 -147.48233032]
[-138.20108032 -157.53102112]
[-149.33767700 -167.57971191]
[-160.47428894 -177.62838745]
[-171.61088562 -187.67707825]
[-187.42102051 -193.79885864]
[-185.91514587 -210.68580627]
[-169.27128601 -213.91355896]
[-161.56219482 -198.81367493]
[-150.42559814 -188.76499939]
[-139.28900146 -178.71630859]
[-128.15238953 -168.66761780]
[-117.01579285 -158.61894226]
[-112.27574158 -157.96609497]
[-107.89844513 -154.32238770]
[-105.69264984 -148.07292175]
[-94.87882233 -137.67768860]
[-84.06498718 -127.28244019]
[-73.25115967 -116.88719177]
[-62.43733215 -106.49195099]
[-51.62350082 -96.09671021]
[-38.49661636 -103.35652161]
[-25.37088966 -110.61567688]
[-28.42777061 -125.30088806]
[-31.48465157 -139.98609924]
[-40.63199234 -154.26063538]
[-29.44754219 -167.00209045]
[-14.10787392 -159.78192139]
[-16.79943848 -143.04298401]
[-13.74255753 -128.35777283]
[-10.68567753 -113.67255402]
[-3.22512937 -112.90429688]
[-1.68860662 -127.82539368]
[7.10235691 -139.97935486]
[13.23248959 -126.28887177]
[11.69596672 -111.36777496]
[19.15651512 -110.59951019]
[25.14197350 -124.35357666]
[31.12743187 -138.10763550]
[37.11288834 -151.86170959]
[43.09834671 -165.61576843]
[49.08380508 -179.36982727]
[55.06926346 -193.12390137]
[49.04899216 -207.73663330]
[55.20182037 -222.29403687]
[69.87738800 -228.15948486]
[84.36893463 -221.85308838]
[90.07888794 -207.11633301]
[83.61962891 -192.69226074]
[68.82332611 -187.13844299]
[62.83787155 -173.38436890]
[56.85241318 -159.63031006]
[50.86695480 -145.87625122]
[44.88149643 -132.12217712]
[38.89603806 -118.36811829]
[32.91057968 -104.61405182]
[32.20043564 -89.63087463]
[36.85820389 -75.37236023]
[41.51597595 -61.11384964]
[46.17374420 -46.85533524]
[50.83151627 -32.59682465]
[62.13838959 -22.90126419]
[59.06876373 -7.38069725]
[63.72653580 6.87781525]
[68.38430786 21.13632774]
[73.04207611 35.39484024]
[77.69984436 49.65335083]
[82.35762024 63.91186523]
[121.53910065 95.01446533]
[135.97029114 99.10601044]
[150.40147400 103.19755554]
[165.78883362 99.51792908]
[175.92298889 110.43344116]
[190.35417175 114.52498627]
[204.78536987 118.61653137]
[219.21655273 122.70807648]
[233.64775085 126.79962158]
[248.07893372 130.89115906]
[260.27050781 121.47459412]
[275.49124146 121.04740143]
[287.89822388 129.56390381]
[292.85198975 143.58526611]
[307.28317261 147.67680359]
[321.71435547 151.76835632]
[336.14556885 155.85989380]
[345.86724854 144.13774109]
[359.51913452 137.38902283]
[374.73599243 136.78295898]
[388.88137817 142.42457581]
[399.50451660 153.33644104]
[404.76492310 167.62797546]
[403.75115967 182.82312012]
[396.63885498 196.28919983]
[384.66030884 205.69313049]
[369.89083862 209.40565491]
[354.88937378 206.78352356]
[342.25497437 198.28105164]
[334.17663574 185.37135315]
[332.05401611 170.29109192]
[317.62283325 166.19953918]
[303.19161987 162.10800171]
[288.76043701 158.01644897]
[277.18469238 167.35134888]
[262.15405273 168.08871460]
[249.42247009 159.73645020]
[243.98739624 145.32235718]
[229.55619812 141.23080444]
[215.12501526 137.13926697]
[200.69381714 133.04771423]
[186.26263428 128.95617676]
[171.83143616 124.86463165]
[157.47628784 128.83691406]
[146.30993652 117.62874603]
[131.87873840 113.53720093]
[117.44755554 109.44565582]
[104.80552673 117.51901245]
[102.44731140 132.33248901]
[100.08910370 147.14595032]
[97.73088837 161.95941162]
[95.37268066 176.77288818]
[93.01447296 191.58634949]
[102.02326202 204.29380798]
[99.42067719 219.28318787]
[87.25054169 227.79338074]
[84.89233398 242.60684204]
[82.53411865 257.42031860]
[80.29290771 272.25192261]
[89.50118256 284.81558228]
[87.13555145 299.84417725]
[75.10127258 308.54544067]
[72.97720337 323.39428711]
[70.85313416 338.24313354]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 198]
[11 197]
[12 196]
[15 193]
[17 192]
[18 191]
[19 190]
[22 187]
[23 186]
[24 185]
[25 184]
[26 183]
[27 182]
[33 44]
[34 43]
[35 42]
[45 134]
[46 133]
[47 132]
[48 131]
[49 130]
[50 129]
[52 127]
[53 126]
[54 125]
[55 124]
[56 123]
[61 87]
[62 86]
[63 85]
[64 84]
[65 83]
[66 82]
[67 79]
[68 78]
[69 77]
[70 76]
[71 75]
[89 97]
[90 96]
[91 95]
[103 122]
[104 121]
[105 120]
[106 119]
[107 118]
[108 117]
[109 116]
[135 181]
[136 180]
[137 179]
[139 177]
[140 176]
[141 175]
[142 174]
[143 173]
[144 172]
[148 168]
[149 167]
[150 166]
[151 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
