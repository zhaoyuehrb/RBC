%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sat Sep 12 11:56:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAAUCAGUCAUUUCAUAUGCACUAUAUCAAGUACAAACAGGUAGUUUACCUGUUUAUAGUAGUGUACUAACAAAGUCUCCCUUGCAGCUUCAGACUGUUAUCUAUAGGCUUAUCGUUCAAAUACAGCACUUGAAUAUCCCAAGUAGUUCUUCUACGCAUAGCUCACCUUUCUAA\
) } def
/len { sequence length } bind def

/coor [
[128.47257996 386.89126587]
[113.43407440 387.17959595]
[98.58580017 384.77783203]
[84.40505981 379.76321411]
[71.34770966 372.29690552]
[59.83349991 362.61898804]
[50.23254776 351.04046631]
[42.85349655 337.93362427]
[37.93354416 323.71978760]
[35.63085175 308.85580444]
[36.01943970 293.81954956]
[39.08681488 279.09439087]
[44.73437881 265.15362549]
[52.78057861 252.44541931]
[62.96677017 241.37828064]
[74.96549988 232.30799866]
[88.39106750 225.52610779]
[102.81189728 221.25065613]
[117.76440430 219.61904907]
[118.82249451 204.65641785]
[119.88057709 189.69377136]
[120.93865967 174.73114014]
[121.99674225 159.76850891]
[109.23808289 161.82199097]
[96.56844330 161.23297119]
[84.51938629 158.12344360]
[73.57676697 152.71917725]
[64.16119385 145.33625793]
[56.61193848 136.36413574]
[51.17502594 126.24606323]
[47.99581528 115.45770264]
[47.11631775 104.48504639]
[48.47720718 93.80267334]
[33.99980164 89.87778473]
[19.52239799 85.95289612]
[5.04499388 82.02800751]
[-9.43241024 78.10311890]
[-23.90981483 74.17823029]
[-38.62801361 71.28433990]
[-53.51368332 69.43585968]
[-68.39935303 67.58738708]
[-83.28501892 65.73890686]
[-98.17069244 63.89043427]
[-113.05635834 62.04195786]
[-127.94202423 60.19348145]
[-142.82769775 58.34500504]
[-159.29119873 62.39337540]
[-167.73890686 47.69396973]
[-155.95252991 35.50719833]
[-140.97921753 43.45933533]
[-126.09355164 45.30781174]
[-111.20788574 47.15628815]
[-96.32221222 49.00476456]
[-81.43654633 50.85324097]
[-66.55088043 52.70171738]
[-51.66520691 54.55018997]
[-36.77953720 56.39866638]
[-46.57915497 45.04228210]
[-47.96789169 30.10670471]
[-40.43004227 17.13825035]
[-26.76477814 10.95273590]
[-12.04668045 13.84714699]
[-1.74129736 24.74664688]
[0.32447907 39.60371780]
[-6.61647463 52.90120316]
[-19.98492622 59.70082092]
[-5.50752163 63.62571335]
[8.96988297 67.55059814]
[23.44728851 71.47548676]
[37.92469406 75.40037537]
[52.40209579 79.32526398]
[58.85587692 68.37459564]
[67.77812958 59.32131195]
[78.63354492 52.70856857]
[90.77085876 48.93310547]
[103.46187592 48.22142792]
[106.61507416 33.55659485]
[109.76826477 18.89176178]
[112.92146301 4.22692680]
[116.07465363 -10.43790817]
[119.22785187 -25.10274124]
[105.48828125 -35.36039352]
[97.62642670 -50.53588486]
[97.17507935 -67.56573486]
[104.17653656 -83.03572845]
[117.18371582 -93.86538696]
[133.55902100 -97.92138672]
[136.19271851 -112.68836212]
[138.82640076 -127.45534515]
[141.46008301 -142.22232056]
[131.29379272 -154.10426331]
[131.19522095 -169.74153137]
[141.21090698 -181.75070190]
[156.61175537 -184.46139526]
[170.12596130 -176.59370422]
[175.37251282 -161.86253357]
[169.87416077 -147.22346497]
[156.22706604 -139.58863831]
[153.59338379 -124.82165527]
[150.95968628 -110.05467987]
[148.32600403 -95.28769684]
[159.46905518 -88.54903412]
[167.67185974 -78.39396667]
[171.93713379 -66.02243042]
[171.73457336 -52.90585709]
[167.06657410 -40.61212921]
[158.47067261 -30.61820602]
[146.95762634 -24.13265800]
[133.89268494 -21.94954872]
[130.73948669 -7.28471375]
[127.58629608 7.38012075]
[124.43310547 22.04495430]
[121.27990723 36.70978928]
[118.12671661 51.37462234]
[133.43690491 56.52953720]
[147.15921021 66.59633636]
[157.70460510 81.04087830]
[163.67674255 98.81539154]
[178.39494324 95.92150116]
[193.11314392 93.02761078]
[207.83134460 90.13372040]
[222.54954529 87.23983002]
[237.26774597 84.34593964]
[242.85212708 69.96475983]
[255.33848572 60.90417480]
[270.74249268 60.05537796]
[284.14874268 67.68922424]
[291.27938843 81.36976624]
[289.85906982 96.73161316]
[280.34097290 108.87284088]
[265.76229858 113.91923523]
[250.77507019 110.26050568]
[240.16163635 99.06414032]
[225.44343567 101.95803070]
[210.72523499 104.85192108]
[196.00703430 107.74581146]
[181.28883362 110.63970184]
[166.57063293 113.53359222]
[164.86488342 120.83704376]
[179.47177124 124.24855804]
[194.41798401 122.97934723]
[200.24368286 136.80183411]
[188.89794922 146.61376953]
[176.06025696 138.85545349]
[161.45336914 135.44393921]
[159.74760437 142.74739075]
[171.66131592 151.86129761]
[183.57504272 160.97521973]
[195.48875427 170.08912659]
[211.51724243 169.40550232]
[221.93615723 181.60491943]
[218.75302124 197.32901001]
[204.40963745 204.51560974]
[189.90904236 197.65176392]
[186.37484741 182.00283813]
[174.46113586 172.88893127]
[162.54740906 163.77502441]
[150.63369751 154.66111755]
[136.95938110 160.82658386]
[135.90129089 175.78923035]
[134.84321594 190.75186157]
[133.78512573 205.71449280]
[132.72703552 220.67712402]
[147.30114746 224.39671326]
[160.97679138 230.65902710]
[173.31436157 239.26274109]
[183.91726685 249.93132019]
[192.44464111 262.32177734]
[198.62239075 276.03582764]
[202.25192261 290.63262939]
[203.21655273 305.64291382]
[201.48527527 320.58422852]
[197.11373901 334.97622681]
[190.24247742 348.35626221]
[181.09237671 360.29425049]
[169.95758057 370.40640259]
[157.19599915 378.36767578]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 163]
[20 162]
[21 161]
[22 160]
[23 159]
[33 71]
[34 70]
[35 69]
[36 68]
[37 67]
[38 66]
[39 57]
[40 56]
[41 55]
[42 54]
[43 53]
[44 52]
[45 51]
[46 50]
[76 114]
[77 113]
[78 112]
[79 111]
[80 110]
[81 109]
[87 101]
[88 100]
[89 99]
[90 98]
[118 138]
[119 137]
[120 136]
[121 135]
[122 134]
[123 133]
[146 158]
[147 157]
[148 156]
[149 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
