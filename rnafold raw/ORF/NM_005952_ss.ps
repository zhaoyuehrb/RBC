%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 19:28:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGACCCCAACUGCUCCUGCUCGCCUGUUGGCUCCUGUGCCUGUGCCGGCUCCUGCAAAUGCAAAGAGUGCAAAUGCACCUCCUGCAAGAAGAGCUGCUGCUCCUGCUGCCCUGUGGGCUGUGCCAAGUGUGCCCAGGGCUGCAUCUGCAAAGGGACGUCAGACAAGUGCAGCUGCUGUGCCUGA\
) } def
/len { sequence length } bind def

/coor [
[1.31688344 319.41040039]
[-4.95254612 305.78341675]
[-12.42055225 305.09140015]
[-21.56030273 316.98532104]
[-30.70005226 328.87921143]
[-29.80419922 341.75991821]
[-37.67885590 351.48141479]
[-49.67063904 353.16677856]
[-59.00890350 364.90545654]
[-68.34717560 376.64413452]
[-77.68544006 388.38284302]
[-87.02370453 400.12152100]
[-89.31289673 418.38311768]
[-105.86332703 424.19158936]
[-115.00307465 436.08551025]
[-110.47742462 450.92794800]
[-115.57207489 465.58483887]
[-128.32803345 474.42028809]
[-143.84037781 474.03689575]
[-156.14428711 464.58206177]
[-160.50865173 449.69140625]
[-155.25531006 435.09066772]
[-142.40425110 426.39410400]
[-126.89698029 426.94573975]
[-117.75723267 415.05184937]
[-119.01403046 403.00759888]
[-111.47888184 393.02062988]
[-98.76239014 390.78326416]
[-89.42412567 379.04455566]
[-80.08586121 367.30587769]
[-70.74758911 355.56719971]
[-61.40932465 343.82852173]
[-59.76425552 326.36572266]
[-42.59395599 319.73947144]
[-33.45420837 307.84555054]
[-24.31445694 295.95166016]
[13.60957527 283.99209595]
[15.86893845 269.16323853]
[18.12830162 254.33436584]
[12.39631081 240.58686829]
[22.12397766 228.10957336]
[24.38333893 213.28070068]
[26.64270210 198.45184326]
[20.91071129 184.70434570]
[30.63837814 172.22705078]
[32.89773941 157.39817810]
[35.15710449 142.56930542]
[29.42511368 128.82182312]
[39.15277863 116.34451294]
[30.72778130 103.93405914]
[16.11191559 100.56115723]
[0.59656578 105.87208557]
[-11.58093834 94.88844299]
[-7.89342451 78.90925598]
[7.86570978 74.37255096]
[19.48481750 85.94528961]
[34.10068512 89.31819153]
[38.20834351 83.04307556]
[31.44715500 69.65328979]
[46.42366791 70.49283600]
[50.53133011 64.21772003]
[41.59267807 52.17195129]
[32.65402603 40.12618256]
[23.71537399 28.08041763]
[6.65881252 21.16665459]
[5.30733681 3.67869282]
[-3.83241272 -8.21521282]
[-11.55960369 -13.12634468]
[-13.02379417 -20.38656807]
[-21.96244621 -32.43233490]
[-30.90109825 -44.47810364]
[-39.83974838 -56.52386856]
[-55.09448242 -62.54260635]
[-57.24150848 -78.80059814]
[-44.07215500 -88.57302094]
[-29.13392258 -81.80683899]
[-27.79398346 -65.46252441]
[-18.85533142 -53.41675568]
[-9.91667843 -41.37098694]
[-0.97802699 -29.32522011]
[8.06149292 -17.35496140]
[17.20124245 -5.46105671]
[29.16301727 -3.57449508]
[36.87324905 6.27793026]
[35.76113892 19.14176559]
[44.69979095 31.18753242]
[53.63844299 43.23329926]
[62.57709503 55.27906799]
[69.87060547 53.53128815]
[66.37528992 38.94421387]
[80.96242523 35.44914246]
[84.45762634 50.03573608]
[91.75112915 48.28795624]
[94.25929260 33.49913788]
[96.76744843 18.71032143]
[99.27560425 3.92150259]
[93.06208038 -11.25493240]
[103.31111908 -24.05685616]
[119.47938538 -21.31474686]
[124.93435669 -5.84945202]
[114.06442261 6.42965937]
[111.55626678 21.21847725]
[109.04811096 36.00729752]
[106.53994751 50.79611588]
[116.26567078 66.42720032]
[117.38893127 82.07373047]
[130.58419800 74.94035339]
[143.77944946 67.80697632]
[152.23971558 54.43780518]
[167.11521912 55.19161987]
[180.31048584 48.05824280]
[193.50575256 40.92486572]
[206.70100403 33.79148865]
[219.89627075 26.65810966]
[223.69963074 21.20896339]
[228.90609741 18.86605263]
[233.65681458 19.51521873]
[247.08425903 12.82914352]
[260.51171875 6.14306831]
[273.93914795 -0.54300690]
[273.68618774 -15.80402756]
[280.08755493 -29.65989685]
[291.87228394 -39.35952377]
[306.70053101 -42.97703552]
[321.62808228 -39.79417801]
[333.69110107 -30.44290733]
[340.49444580 -16.77992439]
[340.68734741 -1.51802623]
[334.23144531 12.31252766]
[322.40859985 21.96566963]
[307.56625366 25.52476311]
[292.65133667 22.28314400]
[280.62524414 12.88444233]
[267.19778442 19.57051849]
[253.77033997 26.25659370]
[240.34288025 32.94266891]
[227.02964783 39.85337067]
[213.83438110 46.98674774]
[200.63912964 54.12012482]
[187.44386292 61.25350571]
[174.24861145 68.38687897]
[166.73216248 81.24582672]
[150.91282654 81.00223541]
[137.71757507 88.13561249]
[124.52230835 95.26898956]
[110.57405090 135.77560425]
[53.98164368 118.60388184]
[59.55203247 133.41203308]
[49.98596954 144.82867432]
[47.72660828 159.65754700]
[45.46724319 174.48640442]
[51.03763199 189.29455566]
[41.47156906 200.71119690]
[39.21220779 215.54006958]
[36.95284271 230.36894226]
[42.52322769 245.17709351]
[32.95716858 256.59371948]
[30.69780540 271.42260742]
[28.43844223 286.25146484]
[30.82228661 301.06082153]
[37.62091446 314.43164062]
[44.41954422 327.80245972]
[51.21817017 341.17327881]
[54.98237991 343.43127441]
[57.56103897 346.47003174]
[58.85414505 349.81671143]
[58.92697525 353.01501465]
[57.99013138 355.67810059]
[63.87557602 369.47528076]
[69.76101685 383.27243042]
[75.64646149 397.06958008]
[81.53190613 410.86672974]
[87.41735077 424.66390991]
[99.19351959 436.86053467]
[90.73349762 451.55285645]
[74.27339172 447.49069214]
[73.62019348 430.54934692]
[67.73474884 416.75219727]
[61.84930420 402.95501709]
[55.96386337 389.15786743]
[50.07841873 375.36071777]
[44.19297409 361.56356812]
[37.84735870 347.97189331]
[31.04872894 334.60107422]
[24.25010109 321.23025513]
[17.45147324 307.85946655]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 36]
[4 35]
[5 34]
[8 32]
[9 31]
[10 30]
[11 29]
[12 28]
[14 25]
[15 24]
[37 159]
[38 158]
[39 157]
[41 155]
[42 154]
[43 153]
[45 151]
[46 150]
[47 149]
[49 147]
[50 57]
[51 56]
[61 88]
[62 87]
[63 86]
[64 85]
[66 82]
[67 81]
[69 80]
[70 79]
[71 78]
[72 77]
[93 104]
[94 103]
[95 102]
[96 101]
[106 145]
[107 144]
[108 143]
[110 141]
[111 140]
[112 139]
[113 138]
[114 137]
[117 136]
[118 135]
[119 134]
[120 133]
[160 186]
[161 185]
[162 184]
[163 183]
[168 182]
[169 181]
[170 180]
[171 179]
[172 178]
[173 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
