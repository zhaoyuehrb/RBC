%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sat Sep 12 10:15:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGACCCCAGGGAAUGUGUCUGCAUGUCUGGAGGAAUCUGCAUGUGUGGAGACAACUGCAAAUGCACAACCUGCAACUGUAAAACAUAUUGGAAGAGCUGCUGUCCCUGCUGCCCCCCGGGCUGUGCCAAAUGUGCCCGGGGCUGCAUCUGCAAAGGAGGCUCAGACAAGUGCAGCUGCUGCCCAUGA\
) } def
/len { sequence length } bind def

/coor [
[105.31352234 187.26287842]
[104.81757355 172.27107239]
[104.32161713 157.27926636]
[103.82566833 142.28747559]
[96.39962006 141.23684692]
[74.12147522 138.08499146]
[69.48622131 152.35084534]
[73.42320251 168.27040100]
[61.41896820 179.44316101]
[45.82245255 174.37553406]
[42.67800903 158.28068542]
[55.22037125 147.71559143]
[59.85562897 133.44973755]
[52.07108307 120.62784576]
[37.27566528 118.15892792]
[22.48024559 115.69001007]
[7.68482494 113.22109222]
[-7.11059427 110.75217438]
[-21.90601349 108.28325653]
[-36.70143509 105.81433105]
[-53.78144455 112.67355347]
[-66.89009857 101.01757812]
[-81.72431946 98.79362488]
[-96.55854034 96.56967163]
[-111.39275360 94.34571838]
[-120.36193848 96.17000580]
[-126.45304108 91.96040344]
[-141.24845886 89.49147797]
[-150.24658203 91.16722870]
[-156.26725769 86.85748291]
[-171.01983643 84.14427948]
[-185.99189758 89.25776672]
[-197.10971069 79.34597778]
[-211.86228943 76.63277435]
[-226.61485291 73.91956329]
[-235.87361145 84.14437103]
[-248.87393188 88.42070770]
[-262.18228149 85.73185730]
[-272.33926392 76.88600922]
[-276.75872803 64.27745056]
[-291.46441650 61.32069397]
[-306.17013550 58.36393738]
[-320.87582397 55.40718460]
[-335.58154297 52.45042801]
[-350.63610840 57.31567383]
[-361.58850098 47.22141647]
[-376.29418945 44.26465988]
[-390.99990845 41.30790710]
[-405.70559692 38.35115051]
[-420.41131592 35.39439392]
[-433.42974854 44.35519028]
[-448.95602417 41.40388107]
[-457.77868652 28.29143333]
[-454.66339111 12.79722595]
[-441.45837402 4.11369705]
[-425.99798584 7.39263153]
[-417.45455933 20.68869591]
[-402.74884033 23.64545059]
[-388.04315186 26.60220528]
[-373.33743286 29.55896187]
[-358.63174438 32.51571655]
[-344.62902832 27.43898392]
[-332.62478638 37.74472809]
[-317.91906738 40.70148468]
[-303.21337891 43.65823746]
[-288.50765991 46.61499405]
[-273.80197144 49.57175064]
[-262.09539795 38.07551575]
[-245.67968750 35.79301453]
[-230.98931885 43.81866455]
[-223.90165710 59.16698837]
[-209.14907837 61.88019562]
[-194.39649963 64.59340668]
[-180.47962952 59.28584290]
[-168.30662537 69.39170074]
[-153.55404663 72.10491180]
[-138.77954102 74.69606018]
[-123.98412323 77.16497803]
[-109.16880035 79.51149750]
[-94.33457947 81.73545074]
[-79.50036621 83.95940399]
[-64.66614532 86.18336487]
[-54.74477386 79.24321747]
[-42.35803986 80.98686981]
[-34.23251343 91.01891327]
[-19.43709564 93.48783112]
[-4.64167547 95.95675659]
[10.15374374 98.42567444]
[24.94916344 100.89459229]
[39.74458313 103.36351013]
[54.54000092 105.83242798]
[65.60648346 77.32466888]
[89.98683929 64.83923340]
[113.39549255 71.02476501]
[124.83196259 88.69335938]
[139.66618347 86.46940613]
[154.48150635 84.12288666]
[169.27691650 81.65396881]
[184.07234192 79.18505096]
[198.86776733 76.71613312]
[213.66317749 74.24721527]
[228.45860291 71.77829742]
[243.18824768 68.94321442]
[257.84304810 65.74372101]
[272.49783325 62.54422760]
[287.15264893 59.34473419]
[293.46081543 45.29079819]
[306.68032837 37.73443985]
[321.63751221 39.39151764]
[332.61944580 49.41823959]
[347.27426147 46.21874619]
[361.92904663 43.01925278]
[373.76129150 32.51643753]
[387.84600830 37.36095810]
[402.50082397 34.16146088]
[416.72787476 29.40842628]
[430.36297607 23.15669823]
[443.99804688 16.90497017]
[457.63314819 10.65324306]
[471.26824951 4.40151501]
[484.90335083 -1.85021305]
[498.53845215 -8.10194111]
[512.17352295 -14.35366917]
[512.41046143 -29.61494827]
[519.25317383 -43.25825119]
[531.34313965 -52.57469559]
[546.27978516 -55.71448898]
[561.09753418 -52.05422592]
[572.85424805 -42.32065582]
[579.21563721 -28.44638062]
[578.91864014 -13.18615341]
[572.02221680 0.43009970]
[559.89569092 9.69886017]
[544.94677734 12.77980995]
[530.14355469 9.06122303]
[518.42529297 -0.71857089]
[504.79019165 5.53315687]
[491.15509033 11.78488541]
[477.51998901 18.03661346]
[463.88488770 24.28834152]
[450.24978638 30.54006958]
[436.61468506 36.79179764]
[422.97958374 43.04352570]
[423.72244263 50.50664520]
[425.95095825 72.89601135]
[440.55087280 76.33737183]
[455.15075684 79.77873230]
[470.69082642 74.54057312]
[482.81671143 85.58116150]
[479.05435181 101.54288483]
[463.27413940 106.00569153]
[451.70941162 94.37863159]
[437.10949707 90.93727112]
[422.50961304 87.49591064]
[409.31893921 75.66148376]
[403.80712891 61.60322952]
[405.70031738 48.81626511]
[391.04553223 52.01575851]
[380.26150513 62.28972244]
[365.12854004 57.67405319]
[350.47375488 60.87354660]
[335.81893921 64.07304382]
[330.01525879 77.76446533]
[317.10971069 85.50465393]
[301.94375610 84.14552307]
[290.35214233 73.99953461]
[275.69732666 77.19902802]
[261.04254150 80.39852142]
[246.38774109 83.59801483]
[244.18168640 86.37029266]
[240.51530457 88.20369720]
[235.84834290 88.41999817]
[230.92752075 86.57371521]
[216.13209534 89.04263306]
[201.33668518 91.51155090]
[186.54125977 93.98046875]
[171.74583435 96.44938660]
[156.95042419 98.91831207]
[150.85931396 103.12791443]
[141.89013672 101.30362701]
[127.05591583 103.52758026]
[129.85359192 115.12728882]
[127.38565063 128.67320251]
[118.81746674 141.79151917]
[119.31341553 156.78332520]
[119.80937195 171.77511597]
[120.30532074 186.76692200]
[126.87204742 202.39747620]
[113.67018890 213.03454590]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 187]
[2 186]
[3 185]
[4 184]
[6 13]
[7 12]
[14 91]
[15 90]
[16 89]
[17 88]
[18 87]
[19 86]
[20 85]
[22 82]
[23 81]
[24 80]
[25 79]
[27 78]
[28 77]
[30 76]
[31 75]
[33 73]
[34 72]
[35 71]
[40 67]
[41 66]
[42 65]
[43 64]
[44 63]
[46 61]
[47 60]
[48 59]
[49 58]
[50 57]
[95 181]
[96 180]
[97 178]
[98 177]
[99 176]
[100 175]
[101 174]
[102 173]
[103 169]
[104 168]
[105 167]
[106 166]
[110 162]
[111 161]
[112 160]
[114 158]
[115 157]
[116 143]
[117 142]
[118 141]
[119 140]
[120 139]
[121 138]
[122 137]
[123 136]
[145 154]
[146 153]
[147 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
