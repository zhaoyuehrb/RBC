%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 21:20:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAAGCGCUUCCUCUUCCUCCUACUCACCAUCAGCCUCCUGGUUAUGGUACAGAUACAAACUGGACUCUCAGGACAAAACGACACCAGCCAAACCAGCAGCCCCUCAGCAUCCAGCAACAUAAGCGGAGGCAUUUUCCUUUUCUUCGUGGCCAAUGCCAUAAUCCACCUCUUCUGCUUCAGUUGA\
) } def
/len { sequence length } bind def

/coor [
[236.17895508 344.91262817]
[247.58062744 334.21051025]
[246.57339478 319.24435425]
[245.56616211 304.27819824]
[244.55891418 289.31207275]
[243.55168152 274.34591675]
[242.54443359 259.37979126]
[236.31321716 245.73530579]
[225.66215515 235.17333984]
[215.01110840 224.61137390]
[204.36004639 214.04942322]
[193.70898438 203.48745728]
[183.05793762 192.92549133]
[168.57260132 189.45785522]
[164.22158813 174.24670410]
[153.57052612 163.68475342]
[142.91946411 153.12278748]
[133.25959778 159.64822388]
[122.63066101 164.43574524]
[111.34235382 167.34584045]
[99.72357941 168.29374695]
[88.11285400 167.25181580]
[76.84847260 164.25042725]
[66.25864410 159.37702942]
[56.65190506 152.77362061]
[48.30817032 144.63256836]
[41.47053909 135.19110107]
[36.33823395 124.72429657]
[21.84392357 128.58628845]
[7.34961557 132.44828796]
[-7.14469290 136.31028748]
[-21.63900185 140.17228699]
[-29.14439201 145.41612244]
[-36.40927505 143.97523499]
[-50.96641541 147.59318542]
[-65.52355957 151.21115112]
[-80.08069611 154.82911682]
[-91.50375366 166.59541321]
[-107.33687592 162.32408142]
[-111.29231262 146.40910339]
[-99.30104065 135.22244263]
[-83.69866180 140.27197266]
[-69.14151764 136.65400696]
[-54.58437729 133.03605652]
[-40.02723694 129.41809082]
[-25.50099945 125.67797852]
[-11.00669003 121.81597900]
[3.48761821 117.95398712]
[17.98192596 114.09198761]
[32.47623444 110.22998810]
[31.73382187 101.95971680]
[32.00057602 93.66046906]
[33.27254868 85.45494080]
[35.53094101 77.46443176]
[38.74236679 69.80705261]
[42.85935211 62.59601974]
[47.82103348 55.93791962]
[53.55406952 49.93117523]
[59.97370529 44.66459274]
[66.98503876 40.21602249]
[74.48442841 36.65122604]
[82.36100769 34.02289963]
[80.10164642 19.19403458]
[77.84228516 4.36516857]
[75.58292389 -10.46369839]
[73.32355499 -25.29256439]
[60.87638092 -34.65768814]
[58.79631042 -49.72845459]
[67.80123138 -61.53722000]
[65.54187012 -76.36608887]
[55.81420517 -88.84339142]
[61.54619598 -102.59088135]
[59.28683090 -117.41974640]
[57.02746964 -132.24861145]
[41.99441910 -133.01823425]
[27.42410660 -136.79856873]
[13.91317749 -143.43479919]
[2.01489449 -152.65519714]
[-7.78351450 -164.08218384]
[-15.08081150 -177.24783325]
[-19.57817650 -191.61302185]
[-21.09144402 -206.58950806]
[-19.55864906 -221.56399536]
[-15.04255581 -235.92330933]
[-7.72809744 -249.07943726]
[2.08520412 -260.49362183]
[13.99550056 -269.69851685]
[27.51507187 -276.31710815]
[42.09030151 -280.07846069]
[57.12434006 -280.82846069]
[72.00155640 -278.53646851]
[86.11273956 -273.29626465]
[98.88003540 -265.32250977]
[109.78064728 -254.94168091]
[118.36818695 -242.57887268]
[124.29100800 -228.74034119]
[127.30657196 -213.99275208]
[127.29139709 -198.94001770]
[124.24609375 -184.19854736]
[118.29537964 -170.37197876]
[109.68292999 -158.02651978]
[98.76140594 -147.66769409]
[85.97805786 -139.71969604]
[71.85633850 -134.50798035]
[74.11569977 -119.67910767]
[76.37506104 -104.85024261]
[85.94112396 -93.43360138]
[80.37073517 -78.62545013]
[82.63009644 -63.79658127]
[94.74320984 -55.20541382]
[97.24576569 -40.19902039]
[88.15242767 -27.55192757]
[90.41178894 -12.72306061]
[92.67115021 2.10580540]
[94.93051147 16.93467140]
[97.18988037 31.76353836]
[119.20145416 34.46057892]
[139.18843079 44.06809235]
[155.04338074 59.57306671]
[165.09457397 79.34065247]
[168.28218079 101.28655243]
[164.27012634 123.09680939]
[153.48143005 142.47172546]
[164.13249207 153.03369141]
[174.78353882 163.59565735]
[190.03070068 167.81875610]
[193.61988831 182.27444458]
[204.27095032 192.83639526]
[214.92201233 203.39836121]
[225.57305908 213.96032715]
[236.22412109 224.52227783]
[246.87516785 235.08424377]
[242.59165955 220.70886230]
[235.34025574 207.57809448]
[232.85437012 192.78552246]
[235.41545105 178.00576782]
[242.73355103 164.91204834]
[253.98019409 154.98667908]
[267.88217163 149.35330200]
[282.86566162 148.64965820]
[297.23440552 152.95539856]
[309.36172485 161.78308105]
[317.87472534 174.13334656]
[321.80963135 188.60803223]
[320.72100830 203.56846619]
[314.73208618 217.32102966]
[304.51840210 228.31066895]
[289.52175903 228.62866211]
[302.83499146 235.53936768]
[316.14822388 242.45005798]
[329.46145630 249.36076355]
[342.77468872 256.27145386]
[359.12423706 254.99688721]
[368.17846680 268.66998291]
[360.62313843 283.22500610]
[344.23056030 283.68905640]
[335.86398315 269.58471680]
[322.55075073 262.67401123]
[309.23751831 255.76330566]
[295.92428589 248.85260010]
[282.61105347 241.94189453]
[276.33593750 246.04956055]
[284.70623779 258.49697876]
[293.07653809 270.94439697]
[301.44683838 283.39181519]
[309.81710815 295.83923340]
[322.94064331 303.10369873]
[323.49606323 318.09341431]
[310.94613647 326.30920410]
[297.43005371 319.80413818]
[296.02206421 304.86941528]
[287.96295166 292.21826172]
[279.90386963 279.56713867]
[271.84478760 266.91601562]
[263.78570557 254.26487732]
[257.51058960 258.37252808]
[258.51782227 273.33868408]
[259.52505493 288.30484009]
[260.53228760 303.27096558]
[261.53955078 318.23712158]
[262.54678345 333.20324707]
[275.27966309 342.28112793]
[279.14843750 357.43258667]
[272.32635498 371.50357056]
[258.03460693 377.85025024]
[243.02131653 373.47583008]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 181]
[3 180]
[4 179]
[5 178]
[6 177]
[7 176]
[8 132]
[9 131]
[10 130]
[11 129]
[12 128]
[13 127]
[15 125]
[16 124]
[17 123]
[28 50]
[29 49]
[30 48]
[31 47]
[32 46]
[34 45]
[35 44]
[36 43]
[37 42]
[62 116]
[63 115]
[64 114]
[65 113]
[66 112]
[69 109]
[70 108]
[72 106]
[73 105]
[74 104]
[148 161]
[149 160]
[150 159]
[151 158]
[152 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
