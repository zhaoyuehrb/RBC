%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sat Sep 12 09:52:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGCCUCUCGCUGGGCUGUGCAGCUGCUGCUCGUGGCAGCCUGGAGCAUGGGCUGUGGUGAGGCCCUCAAGUGCUACACCUGCAAGGAGCCCAUGACCAGUGCUUCCUGCAGGACCAUUACCCGCUGCAAGCCAGAGGACACAGCCUGCAUGACCACGCUGGUGACGGUGGAGGCAGAGUACCCCUUCAACCAGAGCCCCGUGGUGACCCGCUCCUGCUCCAGCUCCUGUGUGGCCACCGACCCCGACAGCAUC\
GGGGCCGCCCACCUGAUCUUCUGCUGCUUCCGAGACCUCUGCAACUCGGAACUCUGA\
) } def
/len { sequence length } bind def

/coor [
[403.00497437 628.62292480]
[399.86666870 643.29095459]
[396.72836304 657.95898438]
[393.59005737 672.62701416]
[390.45175171 687.29504395]
[387.31344604 701.96307373]
[384.17514038 716.63110352]
[392.97433472 729.75927734]
[389.83132935 745.24792480]
[376.61080933 753.90777588]
[361.15631104 750.60119629]
[352.63665771 737.28991699]
[356.10644531 721.87121582]
[369.50711060 713.49279785]
[372.64541626 698.82476807]
[375.78372192 684.15673828]
[378.92202759 669.48870850]
[382.06033325 654.82067871]
[385.19863892 640.15264893]
[388.33694458 625.48461914]
[389.16458130 610.50744629]
[387.66156006 595.58294678]
[386.15853882 580.65844727]
[384.65551758 565.73394775]
[383.15246582 550.80944824]
[369.29327393 541.26519775]
[362.59582520 527.78179932]
[353.13458252 539.42163086]
[343.67333984 551.06140137]
[334.21209717 562.70117188]
[324.75085449 574.34100342]
[315.28961182 585.98077393]
[309.99096680 602.08544922]
[293.04885864 601.45214844]
[288.96740723 584.99676514]
[303.64981079 576.51953125]
[313.11105347 564.87976074]
[322.57229614 553.23999023]
[332.03353882 541.60015869]
[341.49478149 529.96038818]
[350.95602417 518.32055664]
[352.53393555 503.40377808]
[345.71737671 490.04211426]
[338.90081787 476.68041992]
[332.08422852 463.31875610]
[325.26766968 449.95706177]
[318.45111084 436.59539795]
[311.63455200 423.23370361]
[304.81799316 409.87203979]
[284.25402832 400.13943481]
[284.48233032 376.68322754]
[275.73880005 364.49508667]
[266.99526978 352.30697632]
[258.25170898 340.11883545]
[249.50817871 327.93069458]
[235.80253601 322.09936523]
[234.04527283 306.37603760]
[225.30172729 294.18789673]
[216.55819702 281.99978638]
[207.81465149 269.81164551]
[199.01005554 257.66754150]
[190.14463806 245.56779480]
[181.27920532 233.46803284]
[172.41377258 221.36827087]
[164.09533691 222.97642517]
[155.65855408 221.81976318]
[148.00250244 217.99346924]
[141.95207214 211.87873840]
[138.16906738 204.10491943]
[137.07992554 195.48478699]
[138.82780457 186.92959595]
[143.25442505 179.35278320]
[135.00714111 166.82353210]
[126.75984192 154.29428101]
[118.51255035 141.76502991]
[110.26525879 129.23577881]
[94.44699860 137.11753845]
[73.86662292 135.49241638]
[54.41736603 122.01548004]
[42.87175751 97.92889404]
[28.92178535 92.41542816]
[14.97181511 86.90195465]
[1.02184522 81.38848877]
[-12.92812538 75.87502289]
[-26.87809563 70.36155701]
[-42.55618668 72.48477173]
[-51.54856491 60.61100388]
[-65.49853516 55.09753799]
[-79.44850922 49.58406830]
[-93.39847565 44.07059860]
[-107.34844971 38.55713272]
[-121.32591248 33.11373901]
[-134.26435852 41.67973328]
[-149.76524353 40.97110367]
[-161.86816406 31.26033401]
[-165.91929626 16.28141785]
[-160.36088562 1.79404950]
[-147.33027649 -6.63108015]
[-131.83799744 -5.75433731]
[-119.84113312 4.08715248]
[-115.95273590 19.10913467]
[-108.62142181 18.57434464]
[-101.83497620 24.60716248]
[-87.88500977 30.12063026]
[-73.93503571 35.63409805]
[-59.98506546 41.14756775]
[-46.03509521 46.66103363]
[-31.35480309 44.14345551]
[-21.36462593 56.41158295]
[-7.41465664 61.92505264]
[6.53531361 67.43852234]
[20.48528290 72.95198822]
[34.43525314 78.46545410]
[48.38522339 83.97892761]
[53.31733322 78.32876587]
[42.01701736 68.46454620]
[30.71670151 58.60032654]
[19.41654968 48.73591614]
[29.28114510 37.43592834]
[40.58092117 47.30000687]
[51.88124084 57.16423035]
[63.18155670 67.02845001]
[68.11366272 61.37829208]
[60.76629257 48.30097961]
[47.26108551 40.05962372]
[47.77248764 25.17380142]
[40.42511749 12.09648895]
[33.07774353 -0.98082393]
[18.08157730 -6.68122768]
[13.32579613 -22.00317574]
[22.45862579 -35.19298172]
[38.47414398 -36.13255310]
[49.08661270 -24.10113335]
[46.15505600 -8.32819748]
[53.50242996 4.74911499]
[60.84980011 17.82642746]
[73.82947540 25.13240623]
[73.84360504 40.95360565]
[81.19097900 54.03091812]
[88.51702118 52.42498016]
[85.30514526 37.77288437]
[89.84932709 23.47776604]
[99.95723724 34.56100464]
[103.16912079 49.21310043]
[110.49516296 47.60715866]
[111.69831848 32.65549088]
[112.90146637 17.70381927]
[114.10461426 2.75214958]
[107.49916077 -11.62416744]
[116.23238373 -23.68982315]
[117.43553162 -38.64149094]
[118.63868713 -53.59316254]
[107.02838898 -63.71775055]
[103.64555359 -78.56395721]
[109.58312988 -92.39179993]
[122.37148285 -99.98100281]
[123.57463074 -114.93267059]
[124.77778625 -129.88433838]
[117.25882721 -144.45820618]
[126.34713745 -158.10864258]
[142.69345093 -156.79327393]
[149.48207092 -141.86521912]
[139.72944641 -128.68119812]
[138.52630615 -113.72952271]
[137.32315063 -98.77785492]
[148.73341370 -89.24140167]
[152.38346863 -74.64205170]
[146.67021179 -60.52780151]
[133.59034729 -52.39001083]
[132.38720703 -37.43834305]
[131.18405151 -22.48667145]
[137.87556458 -9.17979908]
[129.05628967 3.95530009]
[127.85313416 18.90696907]
[126.64998627 33.85863876]
[125.44683075 48.81031036]
[142.70315552 77.13558960]
[139.39602661 105.00206757]
[122.79450989 120.98847961]
[131.04180908 133.51773071]
[139.28909302 146.04698181]
[147.53639221 158.57623291]
[155.78367615 171.10548401]
[177.44558716 174.01486206]
[189.59127808 191.83792114]
[184.51353455 212.50283813]
[193.37896729 224.60260010]
[202.24438477 236.70236206]
[211.10981750 248.80212402]
[218.66416931 253.84022522]
[220.00279236 261.06811523]
[228.74632263 273.25625610]
[237.48986816 285.44436646]
[246.23339844 297.63250732]
[260.56442261 304.33563232]
[261.69631958 319.18716431]
[270.43984985 331.37530518]
[279.18338013 343.56344604]
[287.92694092 355.75155640]
[296.67047119 367.93969727]
[306.72497559 368.14260864]
[315.34375000 372.71118164]
[328.15493774 364.90902710]
[340.96612549 357.10690308]
[353.77731323 349.30474854]
[361.16296387 334.66287231]
[377.54904175 334.00839233]
[386.07894897 348.01458740]
[377.97784424 362.27304077]
[361.57943726 362.11593628]
[348.76824951 369.91809082]
[335.95706177 377.72021484]
[323.14587402 385.52236938]
[323.44851685 390.21847534]
[322.68688965 394.86224365]
[320.90008545 399.21566772]
[318.17965698 403.05548096]
[324.99621582 416.41714478]
[331.81280518 429.77883911]
[338.62936401 443.14050293]
[345.44592285 456.50219727]
[352.26248169 469.86386108]
[359.07904053 483.22555542]
[365.89559937 496.58721924]
[376.60464478 486.73532104]
[391.45233154 483.04455566]
[406.97732544 487.10800171]
[419.20739746 498.62127686]
[424.67187500 515.29443359]
[439.18325806 519.09179688]
[454.49264526 515.10021973]
[464.84655762 525.80749512]
[479.35791016 529.60485840]
[493.86929321 533.40228271]
[508.38064575 537.19964600]
[522.89202881 540.99700928]
[537.40338135 544.79443359]
[546.44323730 543.93902588]
[552.04095459 548.70343018]
[566.51348877 552.64630127]
[580.98602295 556.58911133]
[595.45855713 560.53198242]
[609.06390381 552.94696045]
[623.68493652 557.15173340]
[630.83221436 570.16906738]
[645.41705322 563.48596191]
[659.66998291 570.85028076]
[662.65740967 586.61273193]
[652.08764648 598.68170166]
[636.06890869 597.79895020]
[626.88940430 584.64160156]
[614.12701416 592.23480225]
[599.39361572 588.44232178]
[591.51568604 575.00451660]
[577.04321289 571.06164551]
[562.57067871 567.11877441]
[548.09814453 563.17596436]
[533.60601807 559.30578613]
[519.09466553 555.50842285]
[504.58328247 551.71099854]
[490.07189941 547.91363525]
[475.56051636 544.11621094]
[461.04916382 540.31884766]
[446.77770996 544.58209229]
[435.38586426 533.60321045]
[420.87448120 529.80578613]
[415.17510986 534.68096924]
[426.08947754 544.97058105]
[437.00384521 555.26025391]
[451.17498779 560.17736816]
[456.97225952 574.01184082]
[450.54010010 587.56274414]
[436.15631104 591.81787109]
[423.38705444 583.94732666]
[420.72479248 569.18505859]
[412.25057983 556.80816650]
[403.77636719 544.43127441]
[398.07699585 549.30639648]
[399.58001709 564.23089600]
[401.08303833 579.15539551]
[402.58605957 594.07989502]
[404.08911133 609.00445557]
[446.88577271 620.77325439]
[452.32916260 634.75067139]
[457.77258301 648.72814941]
[463.21597290 662.70562744]
[468.65936279 676.68310547]
[474.10275269 690.66052246]
[479.54614258 704.63800049]
[494.73937988 706.88769531]
[506.76226807 716.44519043]
[512.38073730 730.73956299]
[510.08343506 745.92565918]
[500.48831177 757.91851807]
[486.17642212 763.49218750]
[470.99758911 761.14727783]
[459.03482056 751.51458740]
[453.50607300 737.18530273]
[455.89855957 722.01391602]
[465.56866455 710.08142090]
[460.12527466 696.10394287]
[454.68188477 682.12646484]
[449.23849487 668.14898682]
[443.79510498 654.17156982]
[438.35171509 640.19409180]
[432.90832520 626.21661377]
[425.43249512 626.81817627]
[426.63565063 641.76983643]
[427.83877563 656.72155762]
[421.40518188 670.27178955]
[412.88711548 657.92468262]
[411.68395996 642.97302246]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 20]
[2 19]
[3 18]
[4 17]
[5 16]
[6 15]
[7 14]
[21 282]
[22 281]
[23 280]
[24 279]
[25 278]
[27 41]
[28 40]
[29 39]
[30 38]
[31 37]
[32 36]
[42 224]
[43 223]
[44 222]
[45 221]
[46 220]
[47 219]
[48 218]
[49 217]
[51 200]
[52 199]
[53 198]
[54 197]
[55 196]
[57 194]
[58 193]
[59 192]
[60 191]
[61 189]
[62 188]
[63 187]
[64 186]
[72 183]
[73 182]
[74 181]
[75 180]
[76 179]
[80 114]
[81 113]
[82 112]
[83 111]
[84 110]
[85 109]
[87 107]
[88 106]
[89 105]
[90 104]
[91 103]
[92 101]
[123 139]
[124 138]
[126 136]
[127 135]
[128 134]
[145 176]
[146 175]
[147 174]
[148 173]
[150 171]
[151 170]
[152 169]
[156 165]
[157 164]
[158 163]
[202 213]
[203 212]
[204 211]
[205 210]
[229 266]
[230 265]
[232 263]
[233 262]
[234 261]
[235 260]
[236 259]
[237 258]
[239 257]
[240 256]
[241 255]
[242 254]
[245 251]
[283 306]
[284 305]
[285 304]
[286 303]
[287 302]
[288 301]
[289 300]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
