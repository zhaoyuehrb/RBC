%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 17:53:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGACAGUGAGGUUCAGAGAGAUGGAAGGAUCUUGGAUUUGAUUGAUGAUGCUUGGCGAGAAGACAAGCUGCCUUAUGAGGAUGUCGCAAUACCACUGAAUGAGCUUCCUGAACCUGAACAAGACAAUGGUGGCACCACAGAAUCUGUCAAAGAACAAGAAAUGAAGUGGACAGACUUAGCCUUACAGUACCUCCAUGAGAAUGUUCCCCCCAUUGGAAACUGA\
) } def
/len { sequence length } bind def

/coor [
[416.87380981 160.48348999]
[411.30026245 147.79113770]
[408.93176270 134.12272644]
[393.98391724 132.87309265]
[378.52743530 141.19329834]
[363.49444580 130.55026245]
[348.53067017 129.50852966]
[333.56689453 128.46681213]
[326.68341064 131.13502502]
[318.40280151 127.30518341]
[303.45495605 126.05555725]
[288.50708008 124.80593109]
[273.55923462 123.55630493]
[258.61138916 122.30667114]
[243.66352844 121.05704498]
[228.71566772 119.80741882]
[213.76780701 118.55779266]
[204.19593811 129.93835449]
[189.58529663 133.54299927]
[175.48887634 127.78588867]
[167.39179993 114.68080139]
[152.44393921 113.43117523]
[145.52403259 116.00345612]
[137.29747009 112.05887604]
[122.36842346 110.60158539]
[107.43938446 109.14429474]
[92.64759064 111.63486481]
[79.01890564 117.90055084]
[65.39021301 124.16624451]
[56.08363724 136.96070862]
[41.28793335 135.24710083]
[27.65924644 141.51278687]
[14.03055859 147.77847290]
[4.72397804 160.57293701]
[-10.07172489 158.85932922]
[-19.37830544 171.65377808]
[-34.17400742 169.94018555]
[-47.80269623 176.20587158]
[-61.43138123 182.47155762]
[-73.29685211 194.58134460]
[-88.21807861 186.53190613]
[-84.61381531 169.96549988]
[-67.69707489 168.84288025]
[-54.06838608 162.57717896]
[-40.43969727 156.31149292]
[-32.10793304 143.96519470]
[-16.33741570 145.23063660]
[-8.00564957 132.88435364]
[7.76486778 134.14979553]
[21.39355469 127.88410187]
[35.02224350 121.61840820]
[43.35400772 109.27211761]
[59.12452698 110.53755951]
[72.75321198 104.27186584]
[86.38189697 98.00617981]
[86.74665070 90.51505280]
[71.76440430 89.78554535]
[56.78215408 89.05603790]
[41.79991531 88.32627869]
[42.52991867 73.34405518]
[57.51166153 74.07378387]
[72.49391174 74.80329132]
[87.47615814 75.53279877]
[87.84091187 68.04167938]
[74.88542175 60.48156357]
[61.92993546 52.92145157]
[48.97444534 45.36133957]
[33.86783600 49.15978241]
[20.83682442 41.30819702]
[17.30868912 26.88294601]
[4.35319996 19.32283401]
[-9.79670811 25.69148636]
[-24.98072052 22.49377441]
[-35.36027908 10.95928574]
[-36.94422531 -4.47673512]
[-29.12350273 -17.87882233]
[-14.90534019 -24.09359932]
[0.24309123 -20.73135948]
[10.49690914 -9.08495045]
[11.91331196 6.36734486]
[24.86880112 13.92745686]
[39.16341400 9.90258312]
[52.40982056 17.38505554]
[56.53455734 32.40584946]
[69.49004364 39.96596146]
[82.44553375 47.52607346]
[95.40102386 55.08618546]
[107.72458649 46.53458405]
[122.72405243 46.66148376]
[134.90115356 55.42036057]
[139.79223633 69.60054016]
[135.60438538 84.00407410]
[123.87272644 93.35116577]
[108.89666748 94.21525574]
[123.82571411 95.67254639]
[138.75476074 97.12982941]
[153.69355774 98.48332214]
[168.64141846 99.73294830]
[178.80206299 88.15418243]
[193.65870667 84.81752014]
[207.46801758 90.79804993]
[215.01744080 103.60993958]
[229.96528625 104.85956573]
[244.91314697 106.10919189]
[259.86099243 107.35881805]
[274.80886841 108.60844421]
[289.75671387 109.85807037]
[304.70458984 111.10769653]
[319.65243530 112.35732269]
[334.60861206 113.50302887]
[349.57238770 114.54475403]
[364.53619385 115.58647919]
[374.75582886 107.72901917]
[387.19140625 108.89820862]
[395.23352051 117.92523956]
[410.18139648 119.17486572]
[415.92565918 103.90829468]
[425.72314453 90.88452148]
[438.77670288 81.15010834]
[454.02792358 75.48451233]
[470.24304199 74.33769989]
[486.11257935 77.79440308]
[500.35720825 85.56791687]
[511.83087158 97.02385712]
[519.61297607 111.23194885]
[523.08221436 127.04152679]
[538.05902100 127.87514496]
[553.03588867 128.70877075]
[568.01269531 129.54238892]
[582.98950195 130.37600708]
[597.96630859 131.20964050]
[606.69769287 128.56410217]
[613.14508057 132.16036987]
[628.10888672 133.20208740]
[630.40686035 124.94870758]
[635.89709473 117.38357544]
[644.31323242 111.74168396]
[654.91815186 109.13418579]
[666.56469727 110.37313080]
[677.95043945 100.60765076]
[689.33618164 90.84217072]
[700.72192383 81.07668304]
[708.80828857 66.17542267]
[725.36572266 69.82066345]
[726.44647217 86.74012756]
[710.48742676 92.46243286]
[699.10168457 102.22792053]
[687.71594238 111.99340057]
[676.33013916 121.75888062]
[677.78057861 129.11730957]
[692.49743652 126.21675873]
[695.39776611 140.93370056]
[680.68133545 143.83415222]
[682.13171387 151.19256592]
[696.37158203 155.90707397]
[710.61145020 160.62158203]
[724.85131836 165.33609009]
[739.09112549 170.05059814]
[746.17395020 160.70178223]
[755.57116699 153.71563721]
[766.52807617 149.63993835]
[778.16815186 148.78924561]
[789.56359863 151.22059631]
[799.80895996 156.72979736]
[808.09332275 164.86862183]
[813.76446533 174.98114014]
[816.38000488 186.25669861]
[815.74212646 197.79476929]
[829.69799805 203.29336548]
[843.65380859 208.79196167]
[857.60968018 214.29055786]
[871.56549072 219.78915405]
[884.62854004 211.62437439]
[899.81689453 212.70445251]
[911.32086182 222.40615845]
[914.86376953 236.84864807]
[928.81958008 242.34724426]
[942.77545166 247.84584045]
[955.23260498 238.74517822]
[970.63378906 237.84689331]
[984.06451416 245.43760681]
[991.23907471 259.09518433]
[989.86816406 274.46151733]
[980.38909912 286.63323975]
[965.82672119 291.72647095]
[950.82781982 288.11590576]
[940.17846680 276.95370483]
[937.27685547 261.80169678]
[923.32098389 256.30310059]
[909.36517334 250.80448914]
[896.92303467 258.94891357]
[881.89312744 258.19625854]
[870.04992676 248.62591553]
[866.06689453 233.74499512]
[852.11108398 228.24639893]
[838.15521240 222.74780273]
[824.19940186 217.24920654]
[810.24353027 211.75061035]
[797.28668213 224.83854675]
[779.85791016 230.94552612]
[761.46435547 228.79522705]
[745.82812500 218.77774048]
[736.13311768 202.87969971]
[734.37664795 184.29045105]
[720.13677979 179.57594299]
[705.89691162 174.86143494]
[691.65710449 170.14692688]
[677.41723633 165.43241882]
[643.34777832 171.29100037]
[627.06713867 148.16587830]
[612.10333252 147.12414551]
[597.13269043 146.18644714]
[582.15588379 145.35282898]
[567.17907715 144.51921082]
[552.20227051 143.68559265]
[537.22540283 142.85195923]
[522.24859619 142.01834106]
[518.10467529 155.14286804]
[510.92874146 166.89889526]
[501.13568115 176.59771729]
[489.29385376 183.66981506]
[476.09197998 187.69825745]
[462.29940796 188.44337463]
[448.72094727 185.85691833]
[436.15014648 180.08518982]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 116]
[4 115]
[6 112]
[7 111]
[8 110]
[10 109]
[11 108]
[12 107]
[13 106]
[14 105]
[15 104]
[16 103]
[17 102]
[21 98]
[22 97]
[24 96]
[25 95]
[26 94]
[27 55]
[28 54]
[29 53]
[31 51]
[32 50]
[33 49]
[35 47]
[37 45]
[38 44]
[39 43]
[64 87]
[65 86]
[66 85]
[67 84]
[70 81]
[71 80]
[126 217]
[127 216]
[128 215]
[129 214]
[130 213]
[131 212]
[133 211]
[134 210]
[139 149]
[140 148]
[141 147]
[142 146]
[154 208]
[155 207]
[156 206]
[157 205]
[158 204]
[168 198]
[169 197]
[170 196]
[171 195]
[172 194]
[176 190]
[177 189]
[178 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
