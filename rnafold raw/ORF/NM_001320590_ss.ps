%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 23:55:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCUACCGCCCAGUCACUCAAAUCCGUGGACUACGAGGUGUUCGGAAGAGUGCAGGGUGUUUGCUUCAGAAUGUAUACAGAAGAUGAAGCUAGGAAAAUAGGAGUGGUUGGCUGGGUGAAGAAUACCAGCAAAGGCACCGUGACAGGCCAAGUGCAGGGGCCAGAAGACAAAGUCAAUUCCAUGCUGGAGUGCAGUGGUCUGAUCUAG\
) } def
/len { sequence length } bind def

/coor [
[145.64599609 177.02789307]
[134.67234802 187.25428772]
[120.64620972 192.57099915]
[105.65110016 192.18823242]
[91.91446686 186.16287231]
[81.47684479 175.38995361]
[75.88868713 161.46972656]
[75.98078918 146.46658325]
[83.72155762 133.61822510]
[70.76856232 141.18260193]
[57.81555939 148.74697876]
[44.86256027 156.31135559]
[31.90956306 163.87573242]
[23.89451408 177.51646423]
[9.00223351 177.25331116]
[3.16983438 184.28330994]
[-4.20040798 184.83224487]
[-17.26459312 192.20292664]
[-30.32877922 199.57362366]
[-43.39296341 206.94430542]
[-56.45714951 214.31500244]
[-58.76601028 224.94410706]
[-66.38655853 232.39443970]
[-76.63401794 234.37884521]
[-86.07886505 230.47911072]
[-99.35671234 237.45756531]
[-112.63455963 244.43601990]
[-125.91240692 251.41447449]
[-134.52854919 264.68371582]
[-149.39422607 263.75582886]
[-158.01037598 277.02505493]
[-172.87605286 276.09719849]
[-186.15390015 283.07565308]
[-199.43174744 290.05410767]
[-207.72633362 304.20089722]
[-224.12106323 303.82040405]
[-231.75044250 289.30404663]
[-222.76602173 275.58502197]
[-206.41018677 276.77624512]
[-193.13233948 269.79782104]
[-179.85450745 262.81936646]
[-172.18807983 250.04927063]
[-156.37268066 250.47798157]
[-148.70625305 237.70790100]
[-132.89085388 238.13662720]
[-119.61300659 231.15817261]
[-106.33516693 224.17971802]
[-93.05731964 217.20126343]
[-83.95571136 200.14114380]
[-63.82783890 201.25080872]
[-50.76365280 193.88012695]
[-37.69946671 186.50942993]
[-24.63528252 179.13874817]
[-11.57109737 171.76805115]
[1.43785489 164.30030823]
[8.52641869 151.20063782]
[24.34518433 150.92274475]
[37.29818344 143.35835266]
[50.25118256 135.79397583]
[63.20418167 128.22959900]
[76.15718079 120.66522217]
[77.04840851 113.21836090]
[65.04129028 104.22786713]
[78.83087921 98.32464600]
[79.72210693 90.87778473]
[68.91995239 80.47041321]
[58.11779785 70.06304169]
[47.31564331 59.65566635]
[36.51348495 49.24829483]
[25.71132851 38.84092331]
[7.96120262 42.54102325]
[-8.31400108 34.91230774]
[-16.67779160 19.18024063]
[-13.94795799 1.73261547]
[-25.05519104 -8.34852314]
[-41.18818665 -11.29105759]
[-46.45082092 -26.82285500]
[-35.42934799 -38.96613312]
[-19.46171570 -35.22892761]
[-14.97405243 -19.45575714]
[-3.86681890 -9.37461853]
[7.51910591 -13.58603001]
[19.68714142 -12.55073833]
[30.32290649 -6.40406942]
[37.37730789 3.74063182]
[39.46122742 15.99321270]
[36.11870193 28.03876495]
[46.92086029 38.44614029]
[57.72301483 48.85351181]
[68.52516937 59.26088333]
[79.32732391 69.66825867]
[90.12948608 80.07563019]
[97.54650879 78.96307373]
[93.05628204 64.65091705]
[83.19290161 53.34986877]
[85.25957489 38.49291992]
[97.83287048 30.31293106]
[112.25281525 34.44393539]
[118.58753967 48.04067230]
[112.47396851 61.73824692]
[112.38054657 76.73795319]
[119.79756927 75.62539673]
[119.72213745 59.80437088]
[132.66024780 52.42503738]
[134.08441162 43.40230942]
[140.14068604 39.16633987]
[147.60842896 26.15738678]
[155.07617188 13.14843369]
[155.23629761 -2.67196226]
[168.28283691 -9.85785007]
[175.75057983 -22.86680222]
[175.27755737 -41.27489090]
[190.78584290 -49.48830032]
[198.05906677 -62.60699463]
[205.33230591 -75.72569275]
[212.60552979 -88.84438324]
[219.87876892 -101.96308136]
[211.90075684 -115.08737183]
[211.56980896 -130.44270325]
[218.97491455 -143.89854431]
[232.12416077 -151.83537292]
[247.48043823 -152.11819458]
[260.91302490 -144.67094421]
[268.80859375 -131.49688721]
[269.04327393 -116.13979340]
[261.55395508 -102.73062897]
[248.35520935 -94.87639618]
[232.99745178 -94.68984985]
[225.72422791 -81.57115173]
[218.45100403 -68.45246124]
[211.17776489 -55.33376694]
[203.90454102 -42.21507263]
[206.93528748 -30.50434685]
[200.98321533 -19.51542282]
[188.75953674 -15.39906120]
[181.29179382 -2.39010882]
[181.66580200 12.49979973]
[168.08511353 20.61617470]
[160.61737061 33.62512589]
[153.14962769 46.63407898]
[145.77894592 59.69826508]
[146.37460327 74.58095551]
[132.91625977 82.89862823]
[136.99592590 97.33318329]
[150.06011963 104.70387268]
[163.17881775 111.97709656]
[176.35128784 119.15246582]
[189.52375793 126.32782745]
[202.69624329 133.50320435]
[215.86871338 140.67855835]
[229.04118347 147.85392761]
[242.21366882 155.02929688]
[254.78364563 152.13818359]
[265.60729980 158.38574219]
[269.15490723 169.95037842]
[282.21908569 177.32107544]
[295.28329468 184.69175720]
[308.34747314 192.06245422]
[318.95968628 186.70355225]
[330.72064209 187.12843323]
[340.71282959 193.11593628]
[346.51333618 203.07936096]
[346.78106689 214.48526001]
[359.62002563 222.24165344]
[372.45895386 229.99804688]
[385.29791260 237.75444031]
[407.09988403 230.20893860]
[427.11257935 241.13650513]
[432.42526245 263.03390503]
[446.00146484 269.41250610]
[459.57769775 275.79110718]
[476.48452759 277.05413818]
[479.95114136 293.64987183]
[464.96362305 301.57519531]
[453.19906616 289.36730957]
[439.62286377 282.98870850]
[426.04666138 276.61010742]
[420.49429321 281.63021851]
[413.77752686 284.99459839]
[406.37921143 286.44522095]
[398.83557129 285.86227417]
[391.69732666 283.27392578]
[385.48937988 278.85516357]
[380.67239380 272.91616821]
[377.60845947 265.88052368]
[376.53396606 258.25509644]
[377.54150391 250.59338379]
[364.70257568 242.83699036]
[351.86361694 235.08059692]
[339.02468872 227.32420349]
[321.54794312 232.77207947]
[305.36154175 223.55726624]
[300.97677612 205.12663269]
[287.91259766 197.75595093]
[274.84841919 190.38525391]
[261.78421021 183.01457214]
[244.27098083 184.13409424]
[235.03829956 168.20176697]
[221.86582947 161.02641296]
[208.69334412 153.85104370]
[195.52087402 146.67567444]
[182.34840393 139.50030518]
[169.17591858 132.32493591]
[156.00344849 125.14957428]
[148.62585449 124.71044159]
[142.68942261 117.76805115]
[129.62524414 110.39736176]
[137.55644226 123.12905884]
[147.56774902 134.29927063]
[152.61100769 148.42604065]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 61]
[10 60]
[11 59]
[12 58]
[13 57]
[15 55]
[17 54]
[18 53]
[19 52]
[20 51]
[21 50]
[25 48]
[26 47]
[27 46]
[28 45]
[30 43]
[32 41]
[33 40]
[34 39]
[65 92]
[66 91]
[67 90]
[68 89]
[69 88]
[70 87]
[74 81]
[75 80]
[102 143]
[104 141]
[106 140]
[107 139]
[108 138]
[110 136]
[111 135]
[113 132]
[114 131]
[115 130]
[116 129]
[117 128]
[144 207]
[145 206]
[146 204]
[147 203]
[148 202]
[149 201]
[150 200]
[151 199]
[152 198]
[155 196]
[156 195]
[157 194]
[158 193]
[163 190]
[164 189]
[165 188]
[166 187]
[169 177]
[170 176]
[171 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
