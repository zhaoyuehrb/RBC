%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 04:53:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCUUAUCAACAGCAGCAGUGCAAGCAGCCCUGCCAGCCACCUCCUGUGUGCCCCGCGCCAAAGUGCCCAGAGCCAUGUCCACCCCCGAAGUGCCCUGAGCCCUGCCCACCAUCAAAGUGUCCACAGUCCUGCCCACCUCAGCAGUGCCAGCAGAAAUGUCCUCCUGUGACACCUUCCCCACCCUGCCAGCCAAAGUGUCCACCCAAGAGCAAGUAA\
) } def
/len { sequence length } bind def

/coor [
[92.99804688 283.23825073]
[104.50701904 272.65158081]
[103.65068054 257.67605591]
[102.68744659 242.70701599]
[101.61736298 227.74523926]
[100.54727173 212.78344727]
[99.47718811 197.82167053]
[90.89041901 197.39799500]
[82.37400818 196.22201538]
[73.99374390 194.30285645]
[65.81433868 191.65530396]
[57.89898682 188.29981995]
[50.30881119 184.26231384]
[43.10244370 179.57398987]
[36.33554459 174.27105713]
[25.72894287 184.87765503]
[21.37356567 202.77249146]
[4.25383043 206.64300537]
[-6.20023298 217.39997864]
[-16.65429688 228.15695190]
[-27.10836029 238.91394043]
[-31.17755508 254.20289612]
[-45.59633255 257.93762207]
[-56.05039597 268.69458008]
[-57.25995636 284.69198608]
[-70.60192108 293.60104370]
[-85.84147644 288.58752441]
[-91.28813934 273.49734497]
[-82.76370239 259.90640259]
[-66.80737305 258.24050903]
[-56.35330963 247.48355103]
[-53.03186035 232.96398926]
[-37.86533737 228.45986938]
[-27.41127396 217.70289612]
[-16.95721054 206.94592285]
[-6.50314665 196.18893433]
[-6.36350584 184.09736633]
[2.25209284 175.05033875]
[15.12234116 174.27105713]
[25.72894287 163.66445923]
[20.83427429 157.46426392]
[16.45583534 150.88934326]
[12.62217236 143.98258972]
[9.35828781 136.78903198]
[6.68546247 129.35557556]
[4.62112665 121.73069763]
[3.17874122 113.96411896]
[2.36771178 106.10648346]
[-12.63075924 105.89228821]
[-21.24955559 108.89726257]
[-27.84146690 105.56642914]
[-42.83535004 105.13809204]
[-57.82923126 104.70974731]
[-72.82311249 104.28141022]
[-88.82844543 109.87297821]
[-98.63221741 96.04103851]
[-88.05478668 82.79134369]
[-72.39477539 89.28752136]
[-57.40089035 89.71586609]
[-42.40700912 90.14420319]
[-27.41312599 90.57254791]
[-12.41656685 90.89382172]
[2.58190393 91.10801697]
[8.40574932 65.65110779]
[20.75716591 42.64212418]
[38.75591278 23.72080994]
[30.28926659 11.33873177]
[21.82261848 -1.04334688]
[6.54545355 -4.08407211]
[-1.86454439 -16.76187134]
[1.12847018 -31.30757332]
[-7.33817816 -43.68965149]
[-15.80482674 -56.07173157]
[-29.98116302 -63.09611893]
[-30.77806282 -77.96939087]
[-39.24470901 -90.35147095]
[-47.79954910 -102.67278290]
[-56.44214630 -114.93269348]
[-63.93921661 -120.13917542]
[-65.11914825 -127.42995453]
[-80.39630890 -130.47067261]
[-88.80630493 -143.14848328]
[-85.81329346 -157.69418335]
[-94.27994537 -170.07626343]
[-102.74658966 -182.45834351]
[-118.32530212 -183.81401062]
[-129.35127258 -194.90283203]
[-130.61837769 -210.48899841]
[-121.52833557 -223.21319580]
[-106.37317657 -227.06744385]
[-92.30870819 -220.23188782]
[-85.97574615 -205.93406677]
[-90.36450958 -190.92498779]
[-81.89786530 -178.54290771]
[-73.43121338 -166.16082764]
[-58.79071045 -163.67262268]
[-50.02793884 -151.23603821]
[-52.73706818 -135.89660645]
[-44.18222809 -123.57529449]
[-35.53963470 -111.31537628]
[-29.12088203 -107.66197205]
[-26.86263275 -98.81811523]
[-18.39598465 -86.43603516]
[-4.82523775 -80.29730225]
[-3.42274785 -64.53837585]
[5.04390049 -52.15629959]
[13.51054859 -39.77421951]
[28.15105438 -37.28601074]
[36.91382599 -24.84943390]
[34.20469666 -9.50999546]
[42.67134476 2.87208319]
[51.13799286 15.25416183]
[67.99073029 7.56213140]
[85.99140930 3.18516564]
[104.49446869 2.28023410]
[122.83634186 4.87978983]
[140.35925293 10.89060688]
[156.43476868 20.09712029]
[170.48638916 32.16915894]
[182.01017761 46.67379379]
[195.17535400 39.48505783]
[208.34054565 32.29632187]
[221.50572205 25.10758781]
[234.67091370 17.91885376]
[240.69805908 11.06414318]
[248.07580566 10.72299099]
[261.34231567 3.72298098]
[274.60879517 -3.27702904]
[287.87530518 -10.27703857]
[292.62448120 -33.38532257]
[312.69921875 -45.26783371]
[334.73901367 -38.46949768]
[347.12109375 -46.93614578]
[359.50317383 -55.40279388]
[371.88525391 -63.86944199]
[379.78564453 -82.41992950]
[399.11581421 -83.03623962]
[411.25106812 -91.85301971]
[423.38632202 -100.66979980]
[424.29660034 -116.28086853]
[435.06604004 -127.61899567]
[450.60964966 -129.33067322]
[463.58822632 -120.60768127]
[467.87368774 -105.56877136]
[461.44253540 -91.31484222]
[447.33139038 -84.57616425]
[432.20309448 -88.53454590]
[420.06784058 -79.71776581]
[407.93258667 -70.90098572]
[407.25006104 -60.71368790]
[400.94311523 -52.40708542]
[390.89978027 -48.86662674]
[380.35189819 -51.48736191]
[367.96981812 -43.02071381]
[355.58773804 -34.55406570]
[343.20565796 -26.08741760]
[344.73956299 -19.23657036]
[344.54339600 -12.19687557]
[342.61834717 -5.39983463]
[339.07199097 0.73527646]
[334.11218262 5.82726860]
[328.03503418 9.55672073]
[321.20712280 11.68600273]
[314.04348755 12.07439804]
[306.98229980 10.68734837]
[300.45816040 7.59923220]
[294.87530518 2.98945522]
[281.60882568 9.98946476]
[268.34231567 16.98947525]
[255.07582092 23.98948479]
[241.85964966 31.08403778]
[228.69445801 38.27277374]
[215.52928162 45.46150589]
[202.36408997 52.65024185]
[189.19891357 59.83897781]
[194.34391785 74.14311218]
[197.21072388 89.07164001]
[197.73008728 104.26406860]
[195.88949585 119.35352325]
[191.73335266 133.97563171]
[185.36206055 147.77729797]
[176.92945862 160.42524719]
[187.98057556 170.56787109]
[199.03169250 180.71049500]
[214.60054016 180.21197510]
[225.66346741 190.65545654]
[226.04278564 205.50105286]
[237.09390259 215.64367676]
[253.11930847 216.39591980]
[262.40573120 229.47804260]
[257.82943726 244.85455322]
[242.90095520 250.72990417]
[229.07214355 242.59704590]
[226.95127869 226.69479370]
[215.90016174 216.55216980]
[201.07656860 217.44465637]
[189.72467041 207.31602478]
[188.88906860 191.76161194]
[177.83795166 181.61898804]
[166.78683472 171.47636414]
[161.21144104 176.30538940]
[155.28804016 180.70059204]
[149.05030823 184.63699341]
[142.53372192 188.09220886]
[135.77529907 191.04658508]
[128.81350708 193.48333740]
[121.68788910 195.38861084]
[114.43896484 196.75158691]
[115.50905609 211.71336365]
[116.57913971 226.67514038]
[117.64923096 241.63693237]
[121.38072968 249.96696472]
[118.62622070 256.81973267]
[119.48255157 271.79525757]
[132.12329102 281.00100708]
[135.83914185 296.19067383]
[128.87556458 310.19219971]
[114.52057648 316.39450073]
[99.55214691 311.86898804]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 214]
[3 213]
[4 211]
[5 210]
[6 209]
[7 208]
[15 40]
[16 39]
[18 36]
[19 35]
[20 34]
[21 33]
[23 31]
[24 30]
[48 63]
[49 62]
[51 61]
[52 60]
[53 59]
[54 58]
[66 112]
[67 111]
[68 110]
[71 107]
[72 106]
[73 105]
[75 103]
[76 102]
[77 100]
[78 99]
[80 98]
[83 95]
[84 94]
[85 93]
[120 175]
[121 174]
[122 173]
[123 172]
[124 171]
[126 170]
[127 169]
[128 168]
[129 167]
[132 156]
[133 155]
[134 154]
[135 153]
[137 149]
[138 148]
[139 147]
[182 200]
[183 199]
[184 198]
[187 195]
[188 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
