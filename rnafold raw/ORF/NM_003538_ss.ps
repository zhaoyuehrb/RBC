%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 21:42:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCUGGACGUGGUAAGGGCGGGAAGGGUUUGGGUAAGGGGGGUGCCAAGCGCCACCGCAAGGUGUUGCGUGACAACAUCCAGGGCAUCACCAAGCCGGCCAUCCGGCGUCUGGCCCGGCGUGGCGGUGUGAAGCGGAUCUCUGGUCUGAUCUACGAGGAGACUCGCGGGGUGCUCAAGGUGUUUUUGGAGAACGUGAUCCGUGACGCUGUCACCUAUACGGAGCACGCCAAGCGCAAGACAGUCACUGCCAUG\
GACGUGGUCUACGCGCUUAAGCGCCAGGGACGCACCCUUUAUGGCUUUGGCGGUUAA\
) } def
/len { sequence length } bind def

/coor [
[536.46777344 171.61495972]
[530.84332275 164.17826843]
[527.82330322 155.30253601]
[512.90655518 153.72462463]
[497.98977661 152.14672852]
[483.07299805 150.56881714]
[473.25326538 161.73622131]
[458.56692505 165.01882935]
[444.60046387 158.95323181]
[436.79342651 145.67332458]
[421.87664795 144.09541321]
[406.95986938 142.51750183]
[392.04309082 140.93959045]
[377.12631226 139.36167908]
[367.30657959 150.52908325]
[352.62023926 153.81169128]
[338.65377808 147.74610901]
[330.84674072 134.46620178]
[315.92996216 132.88829041]
[301.01318359 131.31037903]
[286.09640503 129.73246765]
[272.62582397 136.08801270]
[259.71615601 126.94194031]
[244.79936218 125.36403656]
[229.88259888 123.78612518]
[225.70780945 126.00519562]
[220.10168457 125.66159821]
[214.68330383 122.02390289]
[199.80120850 120.14688873]
[184.91911316 118.26987457]
[170.03700256 116.39286804]
[155.15490723 114.51585388]
[140.27281189 112.63884735]
[137.18707275 126.90951538]
[128.90013123 140.30401611]
[115.73574066 150.91090393]
[98.71576691 156.96539307]
[79.48932648 157.10043335]
[60.17362976 150.56402588]
[52.83027267 164.57778931]
[37.94277573 165.03794861]
[25.37229347 173.22225952]
[12.84304047 181.46955872]
[0.35533527 189.77961731]
[-12.13237000 198.08969116]
[-24.62007523 206.39974976]
[-37.10778046 214.70982361]
[-46.94437790 228.51843262]
[-62.93638229 222.88885498]
[-61.95384216 205.96340942]
[-45.41784668 202.22212219]
[-32.93014145 193.91204834]
[-20.44243622 185.60198975]
[-7.95473194 177.29191589]
[4.53297377 168.98184204]
[8.34036732 162.69392395]
[17.18798256 160.65177917]
[29.75846481 152.46746826]
[36.20269775 139.03909302]
[51.98931885 137.99354553]
[49.40845490 130.95158386]
[44.24672699 116.86767578]
[41.66586304 109.82572174]
[26.78376389 111.70272827]
[11.90166664 113.57974243]
[-2.98043132 115.45675659]
[-17.86252975 117.33376312]
[-32.74462509 119.21077728]
[-47.62672424 121.08778381]
[-58.55855179 132.82978821]
[-74.54304504 131.46035767]
[-83.31828308 118.02998352]
[-78.15264130 102.84130859]
[-63.00876236 97.54579163]
[-49.50373459 106.20568848]
[-34.62163925 104.32868195]
[-19.73954010 102.45166779]
[-4.85744238 100.57465363]
[10.02465534 98.69764709]
[24.90675354 96.82063293]
[39.78884888 94.94362640]
[41.57809448 87.66017914]
[27.01125908 84.08144379]
[30.59023285 69.51467133]
[45.15658569 73.09328461]
[46.94582748 65.80983734]
[34.62744522 57.25077820]
[22.30906105 48.69172287]
[9.99067783 40.13266754]
[-2.32770586 31.57361412]
[-18.07569313 30.05325317]
[-24.11272240 16.43695641]
[-36.43110657 7.87790155]
[-48.74948883 -0.68115360]
[-64.49747467 -2.20151377]
[-70.53450775 -15.81781101]
[-82.85289001 -24.37686539]
[-95.17127228 -32.93592072]
[-107.48965454 -41.49497604]
[-119.80803680 -50.05403137]
[-132.16921997 -58.55115891]
[-144.57289124 -66.98614502]
[-156.97656250 -75.42112732]
[-171.13108826 -69.28495026]
[-186.35241699 -71.79793549]
[-197.78344727 -82.15820312]
[-201.77658081 -97.05982208]
[-197.05764771 -111.74774933]
[-185.13241577 -121.53511810]
[-169.80619812 -123.29880524]
[-155.96952820 -116.47603607]
[-148.03764343 -103.24392700]
[-148.54158020 -87.82479858]
[-136.13790894 -79.38981628]
[-123.73423767 -70.95482635]
[-116.47504425 -69.79797363]
[-111.24898529 -62.37241364]
[-98.93060303 -53.81335831]
[-86.61222076 -45.25430298]
[-74.29383087 -36.69524765]
[-61.97544861 -28.13619423]
[-47.10855484 -27.22803497]
[-40.19043350 -12.99953747]
[-27.87204933 -4.44048214]
[-15.55366611 4.11857271]
[-0.68677336 5.02673197]
[6.23134899 19.25522995]
[18.54973221 27.81428528]
[30.86811638 36.37334061]
[43.18650055 44.93239594]
[55.50488281 53.49145126]
[81.88243103 42.87005234]
[108.24396515 45.11283875]
[129.05876160 58.00109863]
[140.72007751 77.25753784]
[142.14982605 97.75674438]
[157.03192139 99.63375854]
[171.91401672 101.51077271]
[186.79611206 103.38777924]
[201.67822266 105.26479340]
[216.56031799 107.14179993]
[231.46049500 108.86934662]
[246.37727356 110.44725800]
[261.29406738 112.02516937]
[275.83157349 105.78248596]
[287.67431641 114.81568909]
[302.59109497 116.39360046]
[317.50787354 117.97151184]
[332.42465210 119.54941559]
[342.83734131 108.19680786]
[357.76376343 105.18753052]
[371.43826294 111.47016907]
[378.70422363 124.44490814]
[393.62100220 126.02281952]
[408.53778076 127.60073090]
[423.45455933 129.17863464]
[438.37133789 130.75654602]
[448.78402710 119.40393066]
[463.71044922 116.39465332]
[477.38494873 122.67729950]
[484.65090942 135.65203857]
[499.56768799 137.22994995]
[514.48443604 138.80786133]
[529.40124512 140.38575745]
[548.70910645 123.00420380]
[573.82049561 127.71939850]
[585.50762939 118.31668854]
[597.19476318 108.91398621]
[608.78698730 99.39444733]
[620.28302002 89.75904083]
[625.88934326 74.96446991]
[640.61370850 72.71886444]
[652.10974121 63.08345795]
[663.60577393 53.44805145]
[675.10180664 43.81264877]
[686.59790039 34.17724228]
[698.09393311 24.54183769]
[700.41394043 15.96893120]
[706.49871826 10.85944271]
[713.48779297 10.26523685]
[723.96051025 -0.47359976]
[734.43322754 -11.21243668]
[744.90588379 -21.95127296]
[755.37860107 -32.69010925]
[765.85131836 -43.42894745]
[766.46142578 -56.27795410]
[775.36071777 -65.00366974]
[787.41937256 -65.33735657]
[797.99932861 -75.97054291]
[808.57928467 -86.60372162]
[819.15924072 -97.23690796]
[816.56054688 -112.53482819]
[823.48016357 -126.42360687]
[837.25744629 -133.56272888]
[852.59466553 -131.20706177]
[863.59436035 -120.26239777]
[866.02697754 -104.93719482]
[858.95709229 -91.12429047]
[845.10321045 -84.13504028]
[829.79241943 -86.65695190]
[819.21246338 -76.02377319]
[808.63250732 -65.39058685]
[798.05255127 -54.75740433]
[794.44458008 -37.56037521]
[776.59014893 -32.95624924]
[766.11743164 -22.21741486]
[755.64471436 -11.47857666]
[745.17205811 -0.73973989]
[734.69934082 9.99909687]
[724.22662354 20.73793411]
[738.91760254 17.70865250]
[753.52423096 21.12131500]
[765.35205078 30.34638596]
[772.21923828 43.68211746]
[772.85900879 58.66846848]
[767.15325928 72.54090881]
[756.15460205 82.74039459]
[741.89190674 87.38541412]
[726.99627686 85.61911774]
[714.21545410 77.76732635]
[705.90710449 65.27845001]
[703.60394287 50.45632935]
[707.72930908 36.03787994]
[696.23327637 45.67328262]
[684.73724365 55.30868912]
[673.24121094 64.94409180]
[661.74517822 74.57949829]
[650.24908447 84.21490479]
[645.46502686 98.32028961]
[629.91839600 101.25508118]
[618.42236328 110.89048767]
[617.11907959 115.43522644]
[612.97802734 119.22970581]
[606.59747314 120.60112000]
[594.91033936 130.00382996]
[583.22320557 139.40652466]
[585.18603516 145.92054749]
[585.55364990 152.71391296]
[584.30529785 159.40170288]
[581.51159668 165.60496521]
[591.87597656 176.44836426]
[602.24035645 187.29177856]
[617.36895752 191.92167664]
[620.56976318 206.46830750]
[630.93414307 217.31172180]
[641.29852295 228.15512085]
[651.66290283 238.99853516]
[667.23101807 239.51892090]
[677.58752441 250.66331482]
[676.99548340 265.50195312]
[687.35986328 276.34536743]
[697.72424316 287.18878174]
[708.08862305 298.03216553]
[718.45300293 308.87557983]
[728.81738281 319.71899414]
[739.18182373 330.56240845]
[749.54620361 341.40582275]
[767.35351562 346.18890381]
[770.78875732 363.42129517]
[781.26141357 374.16012573]
[791.73413086 384.89895630]
[802.26055908 395.58511353]
[812.84051514 406.21829224]
[823.42047119 416.85147095]
[834.00042725 427.48464966]
[851.51715088 427.22274780]
[863.54748535 439.48760986]
[862.97039795 456.31933594]
[873.65655518 466.84579468]
[884.34271240 477.37225342]
[895.02886963 487.89871216]
[911.02819824 491.49780273]
[915.65191650 507.23162842]
[904.14361572 518.91455078]
[888.34197998 514.52819824]
[884.50238037 498.58483887]
[873.81622314 488.05838013]
[863.13012695 477.53192139]
[852.44396973 467.00546265]
[839.73095703 468.90692139]
[828.06231689 463.06637573]
[821.78094482 451.40789795]
[823.36724854 438.06460571]
[812.78729248 427.43142700]
[802.20733643 416.79824829]
[791.62738037 406.16506958]
[784.71911621 403.65319824]
[780.99530029 395.37164307]
[770.52258301 384.63281250]
[760.04992676 373.89398193]
[747.99517822 373.43927002]
[739.18389893 364.62469482]
[738.70275879 351.77020264]
[728.33837891 340.92678833]
[717.97399902 330.08337402]
[707.60961914 319.23995972]
[697.24523926 308.39657593]
[686.88085938 297.55316162]
[676.51647949 286.70974731]
[666.15209961 275.86633301]
[651.30181885 275.78778076]
[640.63641357 264.93869019]
[640.81945801 249.36291504]
[630.45507812 238.51951599]
[620.09069824 227.67610168]
[609.72631836 216.83268738]
[595.33905029 212.97837830]
[591.39697266 197.65615845]
[581.03259277 186.81275940]
[570.66821289 175.96934509]
[562.11785889 179.13911438]
[552.95343018 179.46405029]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 164]
[4 163]
[5 162]
[6 161]
[10 157]
[11 156]
[12 155]
[13 154]
[14 153]
[18 149]
[19 148]
[20 147]
[21 146]
[23 144]
[24 143]
[25 142]
[28 141]
[29 140]
[30 139]
[31 138]
[32 137]
[33 136]
[39 60]
[41 58]
[42 57]
[43 55]
[44 54]
[45 53]
[46 52]
[47 51]
[63 81]
[64 80]
[65 79]
[66 78]
[67 77]
[68 76]
[69 75]
[86 131]
[87 130]
[88 129]
[89 128]
[90 127]
[92 125]
[93 124]
[94 123]
[96 121]
[97 120]
[98 119]
[99 118]
[100 117]
[101 115]
[102 114]
[103 113]
[166 236]
[167 235]
[168 234]
[169 231]
[170 230]
[172 228]
[173 227]
[174 226]
[175 225]
[176 224]
[177 223]
[180 210]
[181 209]
[182 208]
[183 207]
[184 206]
[185 205]
[188 203]
[189 202]
[190 201]
[191 200]
[240 310]
[241 309]
[242 308]
[244 306]
[245 305]
[246 304]
[247 303]
[250 300]
[251 299]
[252 298]
[253 297]
[254 296]
[255 295]
[256 294]
[257 293]
[259 290]
[260 289]
[261 288]
[262 286]
[263 285]
[264 284]
[265 283]
[268 279]
[269 278]
[270 277]
[271 276]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
