%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Sep  9 23:41:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGUCUUCCUCACCGCGCAGCUCUGGCUGCGGAAUCGCGUCACCGACCGCUACUUUCGGAUCCAGGAGGUGCUGAAGCACGCCAGGCACUUCCGGGGAAGGAAAAAUCGCUGCUACAGGUUGGCGGUCAGAACCGUGAUUCGAGCCUUUGUGAAAUGCACCAAAGCCCGAUACCUGAAGAAAAAGAACAUGAGGACCCUCUGGAUUAAUCGAAUUACAGCUGCUAGCCAGGAACAUGGACUGAAGUAUCCAGCG\
CUCAUUGGGAAUUUAGUUAAGGCACUUCCAGGUUGGCUUAAAGGGUUACCCUAG\
) } def
/len { sequence length } bind def

/coor [
[244.65872192 196.20671082]
[235.01229858 187.13258362]
[232.29766846 173.97175598]
[218.89823914 167.22970581]
[205.49880981 160.48765564]
[192.09936523 153.74560547]
[178.69993591 147.00357056]
[165.30050659 140.26152039]
[151.90107727 133.51947021]
[150.92178345 148.48747253]
[142.91900635 161.17430115]
[129.83236694 168.50506592]
[114.83367920 168.70301819]
[101.55813599 161.72019958]
[93.22331238 149.24900818]
[91.84931183 134.31205750]
[97.77017975 120.52828979]
[90.62393188 133.71658325]
[83.47768402 146.90487671]
[76.33143616 160.09318542]
[69.18518829 173.28147888]
[62.03894424 186.46977234]
[63.02271652 202.83938599]
[49.19086075 211.64913940]
[34.77240372 203.83631897]
[34.59982300 187.43807983]
[48.85064697 179.32353210]
[55.99689484 166.13522339]
[63.14314270 152.94692993]
[70.28939056 139.75863647]
[77.43563080 126.57033539]
[84.58187866 113.38204193]
[78.25025940 99.78385925]
[63.55731201 96.76438141]
[48.86436081 93.74490356]
[34.17141342 90.72542572]
[19.47846413 87.70594788]
[4.78551483 84.68647003]
[-9.90743446 81.66699219]
[-24.60038376 78.64751434]
[-36.06664658 88.93493652]
[-51.21478653 90.48001099]
[-64.21432495 82.89872742]
[-70.18553925 69.27952576]
[-85.26072693 74.08049011]
[-96.16996765 63.93959045]
[-110.86291504 60.92011261]
[-125.55586243 57.90063477]
[-140.24880981 54.88115692]
[-154.94175720 51.86167908]
[-169.63470459 48.84220123]
[-184.32766724 45.82272339]
[-199.02061462 42.80324554]
[-216.46278381 59.43572235]
[-245.84490967 50.59892654]
[-260.82565308 49.83919144]
[-275.80639648 49.07945251]
[-290.78713989 48.31971359]
[-300.56338501 60.22481537]
[-315.30285645 64.04592896]
[-329.30053711 58.52055359]
[-337.26519775 45.96261597]
[-352.24594116 45.20287704]
[-367.22668457 44.44313812]
[-381.40106201 51.47154236]
[-393.72009277 43.09954453]
[-408.70083618 42.33980942]
[-423.68157959 41.58007050]
[-438.66235352 40.82033539]
[-453.64309692 40.06059647]
[-468.62384033 39.30085754]
[-483.60458374 38.54112244]
[-498.58532715 37.78138351]
[-513.56610107 37.02164459]
[-521.30120850 50.22869492]
[-534.29412842 58.31841660]
[-549.55908203 59.43185043]
[-563.58831787 53.31313705]
[-573.15802002 41.36830902]
[-576.06921387 26.34220886]
[-571.65283203 11.68771553]
[-560.92376709 0.77232951]
[-546.34747314 -3.89567542]
[-531.27343750 -1.24362540]
[-519.16564941 8.11905766]
[-512.80633545 22.04089928]
[-497.82559204 22.80063629]
[-482.84484863 23.56037331]
[-467.86410522 24.32011032]
[-452.88336182 25.07984924]
[-437.90258789 25.83958626]
[-422.92184448 26.59932327]
[-407.94110107 27.35906029]
[-392.96035767 28.11879921]
[-379.85754395 21.03605461]
[-366.46694946 29.46239090]
[-351.48620605 30.22212982]
[-336.50546265 30.98186684]
[-327.31118774 19.29413033]
[-312.82635498 15.21322727]
[-298.54907227 20.50590324]
[-290.02740479 33.33896637]
[-275.04666138 34.09870529]
[-260.06591797 34.85844040]
[-245.08517456 35.61817932]
[-242.12750244 28.72599602]
[-257.06512451 27.35959244]
[-260.38140869 12.73077393]
[-247.49327087 5.05641794]
[-236.21215820 14.94162846]
[-233.25448608 8.04944515]
[-244.12638855 -2.28505850]
[-254.99827576 -12.61956215]
[-270.64410400 -19.14985657]
[-268.70019531 -35.99199677]
[-251.97813416 -38.78643417]
[-244.66377258 -23.49145508]
[-233.79188538 -13.15695000]
[-222.91998291 -2.82244658]
[-206.28158569 3.09326959]
[-196.93113708 15.18918610]
[-196.00112915 28.11029625]
[-181.30818176 31.12977409]
[-166.61523438 34.14925385]
[-151.92228699 37.16873169]
[-137.22933960 40.18820953]
[-122.53638458 43.20768738]
[-107.84343719 46.22716522]
[-93.15048981 49.24664307]
[-79.12623596 44.22970581]
[-67.16606140 54.58657837]
[-56.30795670 44.42588806]
[-41.37220383 42.58544922]
[-28.06101418 49.97907257]
[-21.58090591 63.95456314]
[-6.88795614 66.97404480]
[7.80499268 69.99352264]
[22.49794197 73.01300049]
[37.19089127 76.03247833]
[51.88383865 79.05195618]
[66.57678986 82.07143402]
[81.26973724 85.09091187]
[92.99044037 75.73007202]
[85.53441620 61.77592468]
[93.52806854 49.20808029]
[93.83206940 34.21116257]
[86.37604523 20.25701141]
[94.36970520 7.68916559]
[94.67370605 -7.30775356]
[87.21768188 -21.26190376]
[95.21133423 -33.82975006]
[95.51534271 -48.82666779]
[95.81934357 -63.82358932]
[85.78928375 -76.34466553]
[89.46540833 -91.96086121]
[104.02772522 -98.69277191]
[118.30525970 -91.37624359]
[121.34551239 -75.62390137]
[110.81626892 -63.51958466]
[110.51226044 -48.52266312]
[110.20825958 -33.52574539]
[117.68602753 -20.64427567]
[109.67062378 -7.00374937]
[109.36662292 7.99316978]
[116.84439087 20.87463951]
[108.82899475 34.51516342]
[108.52498627 49.51208496]
[116.00275421 62.39355469]
[107.98735809 76.03408051]
[115.21852112 78.02412415]
[119.19860840 63.56179428]
[129.87640381 53.02687073]
[133.66093445 67.54187775]
[129.68084717 82.00420380]
[136.91201782 83.99424744]
[144.32408142 70.95349121]
[137.79467773 56.87704086]
[140.81924438 41.65759277]
[152.23477173 31.14733696]
[167.65174866 29.38768387]
[181.14204407 37.05525589]
[187.51835632 51.20171356]
[184.32885742 66.38745880]
[172.79998779 76.77325439]
[157.36483765 78.36556244]
[149.95277405 91.40631104]
[152.12535095 98.58474731]
[164.43692017 90.01587677]
[176.39076233 99.07708740]
[171.46679688 113.24588013]
[156.47053528 112.94160461]
[158.64312744 120.12003326]
[172.04255676 126.86208344]
[185.44198608 133.60412598]
[198.84141541 140.34617615]
[212.24084473 147.08822632]
[225.64028931 153.83027649]
[239.03971863 160.57232666]
[255.57420349 154.78471375]
[270.86550903 162.61512756]
[275.64160156 178.76483154]
[289.10864258 185.37074280]
[302.57571411 191.97665405]
[316.04278564 198.58258057]
[330.83605957 193.70436096]
[344.39947510 200.59553528]
[348.95895386 214.72871399]
[362.42602539 221.33462524]
[375.89306641 227.94053650]
[389.36013794 234.54644775]
[402.82720947 241.15235901]
[410.53076172 232.66781616]
[420.01855469 226.26119995]
[430.74502563 222.29420471]
[442.09490967 220.98840332]
[453.41867065 222.41291809]
[464.06951904 226.48074341]
[473.44055176 232.95410156]
[480.99908447 241.45826721]
[486.31716919 251.50332642]
[489.09567261 262.51232910]
[489.18112183 273.85443115]
[486.57424927 284.88116455]
[499.68945312 292.16067505]
[512.80462646 299.44021606]
[525.91986084 306.71975708]
[539.03503418 313.99926758]
[552.15026855 321.27880859]
[565.26544189 328.55834961]
[581.08648682 328.49050903]
[588.45959473 341.43215942]
[601.57482910 348.71166992]
[614.69000244 355.99121094]
[627.80523682 363.27075195]
[641.02954102 370.35006714]
[654.84912109 363.54379272]
[669.85125732 366.14953613]
[680.31854248 376.96154785]
[682.38745117 391.68762207]
[695.71783447 398.56512451]
[709.04827881 405.44259644]
[722.37872314 412.32009888]
[735.70910645 419.19760132]
[749.03955078 426.07507324]
[762.36993408 432.95257568]
[774.61291504 427.41299438]
[787.62408447 429.88351440]
[796.71374512 439.24633789]
[798.73681641 451.94119263]
[811.99682617 458.95343018]
[825.25689697 465.96566772]
[838.51690674 472.97787476]
[851.77691650 479.99011230]
[866.80450439 475.09643555]
[880.85284424 482.33651733]
[885.58740234 497.41497803]
[878.19915771 511.38601685]
[863.07153320 515.96087646]
[849.17938232 508.42535400]
[844.76470947 493.25015259]
[831.50469971 486.23791504]
[818.24462891 479.22570801]
[804.98461914 472.21347046]
[791.72454834 465.20123291]
[775.85186768 470.82989502]
[760.52893066 463.06155396]
[755.49249268 446.28298950]
[742.16204834 439.40551758]
[728.83160400 432.52801514]
[715.50122070 425.65051270]
[702.17077637 418.77304077]
[688.84039307 411.89553833]
[675.50994873 405.01803589]
[662.31018066 411.86663818]
[647.43267822 409.60266113]
[636.61462402 398.88714600]
[634.15203857 383.68048096]
[630.74346924 384.36795044]
[626.83520508 383.47042847]
[623.16162109 380.77185059]
[620.52569580 376.38595581]
[607.41046143 369.10641479]
[594.29528809 361.82687378]
[581.18011475 354.54736328]
[566.29711914 355.13586426]
[557.98590088 341.67352295]
[544.87072754 334.39401245]
[531.75549316 327.11447144]
[518.64031982 319.83496094]
[505.52511597 312.55541992]
[492.40991211 305.27587891]
[479.29470825 297.99636841]
[465.15274048 310.18350220]
[447.37026978 315.97540283]
[428.69738770 314.44943237]
[412.03225708 305.81665039]
[399.97146606 291.39321899]
[394.40518188 273.39978027]
[396.22131348 254.61943054]
[382.75424194 248.01351929]
[369.28717041 241.40760803]
[355.82009888 234.80169678]
[342.35302734 228.19578552]
[328.38598633 233.24127197]
[314.63433838 226.73377991]
[309.43688965 212.04963684]
[295.96981812 205.44372559]
[282.50274658 198.83781433]
[269.03567505 192.23190308]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 198]
[4 197]
[5 196]
[6 195]
[7 194]
[8 193]
[9 192]
[17 32]
[18 31]
[19 30]
[20 29]
[21 28]
[22 27]
[33 142]
[34 141]
[35 140]
[36 139]
[37 138]
[38 137]
[39 136]
[40 135]
[44 131]
[46 129]
[47 128]
[48 127]
[49 126]
[50 125]
[51 124]
[52 123]
[53 122]
[55 105]
[56 104]
[57 103]
[58 102]
[62 98]
[63 97]
[64 96]
[66 94]
[67 93]
[68 92]
[69 91]
[70 90]
[71 89]
[72 88]
[73 87]
[74 86]
[111 119]
[112 118]
[113 117]
[143 169]
[145 167]
[146 166]
[148 164]
[149 163]
[151 161]
[152 160]
[153 159]
[175 186]
[176 185]
[201 309]
[202 308]
[203 307]
[204 306]
[207 303]
[208 302]
[209 301]
[210 300]
[211 299]
[223 292]
[224 291]
[225 290]
[226 289]
[227 288]
[228 287]
[229 286]
[231 284]
[232 283]
[233 282]
[234 281]
[235 277]
[239 273]
[240 272]
[241 271]
[242 270]
[243 269]
[244 268]
[245 267]
[249 264]
[250 263]
[251 262]
[252 261]
[253 260]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
