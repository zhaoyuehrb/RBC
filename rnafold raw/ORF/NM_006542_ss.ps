%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 19:49:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACUAGGAUAAAAAUAUCAGUAUGUAUCUGUUUUAGAUAUUUUGAGUUUUGCUUUUUUUAUGCCUUGAAUAUUUUAUUUCAAAAAGUAUCUGAAGCAAAUUCUCAGACUGAACUACUUCUUAGACCUCACUGUAAGAAUAUUUUAUUCAAUGUCUCAUUUAUGAUAGAUUUGCAAGCUGCUCAUUUUUGA\
) } def
/len { sequence length } bind def

/coor [
[208.63285828 291.17120361]
[206.66981506 286.93670654]
[206.51649475 281.68878174]
[198.63223267 268.92797852]
[190.74797058 256.16717529]
[174.23617554 253.00965881]
[164.92749023 238.60752869]
[168.98602295 221.59887695]
[160.89509583 208.96807861]
[152.80416870 196.33729553]
[144.71324158 183.70651245]
[136.62231445 171.07571411]
[128.53137207 158.44493103]
[120.44044495 145.81413269]
[112.34951782 133.18334961]
[92.39089203 134.57957458]
[74.86190033 124.93433380]
[65.35964966 107.32742310]
[66.91825867 87.38082123]
[54.35374069 79.18736267]
[41.78921890 70.99389648]
[29.22469711 62.80043793]
[16.66017723 54.60697556]
[13.68920803 68.15875244]
[2.49321294 74.96821594]
[-9.41885757 71.76618958]
[-22.83347893 78.47796631]
[-36.24810028 85.18974304]
[-49.66271973 91.90151978]
[-63.07733917 98.61329651]
[-76.49195862 105.32508087]
[-89.90658569 112.03685760]
[-101.36620331 124.53139496]
[-116.54478455 116.97845459]
[-113.48886871 100.30219269]
[-96.61836243 98.62223053]
[-83.20373535 91.91045380]
[-69.78911591 85.19867706]
[-56.37449646 78.48690033]
[-42.95987701 71.77512360]
[-29.54525566 65.06334686]
[-16.13063431 58.35157013]
[-11.41146278 46.13972855]
[2.00138640 41.20512390]
[-7.28262615 29.42347908]
[-16.56663895 17.64183617]
[-25.85065079 5.86019325]
[-35.13466263 -5.92145014]
[-52.38605499 -12.34117889]
[-54.23762894 -29.78572655]
[-63.71218109 -41.41469193]
[-73.18672943 -53.04365921]
[-82.66128540 -64.67263031]
[-92.13583374 -76.30158997]
[-101.61038971 -87.93055725]
[-111.08493805 -99.55952454]
[-120.55948639 -111.18849182]
[-135.94735718 -110.46765900]
[-148.66050720 -118.84794617]
[-153.93887329 -132.94059753]
[-149.95446777 -147.26759338]
[-159.42901611 -158.89656067]
[-168.90356445 -170.52552795]
[-184.29144287 -169.80468750]
[-197.00459290 -178.18498230]
[-202.28295898 -192.27763367]
[-198.29855347 -206.60461426]
[-207.77310181 -218.23358154]
[-217.24765015 -229.86254883]
[-226.72219849 -241.49151611]
[-236.19676208 -253.12048340]
[-251.68203735 -252.12771606]
[-264.77539062 -260.45498657]
[-270.44216919 -274.90032959]
[-266.50335693 -289.90917969]
[-254.47351074 -299.71032715]
[-238.97836304 -300.53503418]
[-225.97612000 -292.06622314]
[-220.46638489 -277.56027222]
[-224.56779480 -262.59503174]
[-215.09323120 -250.96606445]
[-205.61868286 -239.33709717]
[-196.14413452 -227.70812988]
[-186.66958618 -216.07916260]
[-171.83302307 -217.08631897]
[-159.09768677 -209.06913757]
[-153.45921326 -194.92485046]
[-157.27459717 -180.00007629]
[-147.80004883 -168.37110901]
[-138.32550049 -156.74214172]
[-123.48893738 -157.74929810]
[-110.75360107 -149.73211670]
[-105.11512756 -135.58782959]
[-108.93051910 -120.66304779]
[-99.45597076 -109.03408051]
[-89.98142242 -97.40511322]
[-80.50686646 -85.77614594]
[-71.03231812 -74.14717865]
[-61.55776215 -62.51821136]
[-52.08321381 -50.88924408]
[-42.60866165 -39.26027679]
[-30.60145569 -37.71636581]
[-22.61364937 -28.09235764]
[-23.35301971 -15.20546246]
[-14.06900692 -3.42381907]
[-4.78499508 8.35782433]
[4.49901724 20.13946724]
[13.78302956 31.92111015]
[24.85363770 42.04245758]
[37.41815948 50.23591614]
[49.98268127 58.42937851]
[62.54720306 66.62284088]
[75.11172485 74.81629944]
[82.83580017 69.03170013]
[91.83486938 65.54748535]
[101.44045258 64.62245941]
[110.93904114 66.32534790]
[119.62506104 70.52964020]
[126.85329437 76.92304230]
[140.04234314 69.77818298]
[153.23138428 62.63332367]
[166.42042542 55.48846054]
[179.60948181 48.34360123]
[192.79852295 41.19873810]
[201.24713135 27.82221031]
[216.12330627 28.56307793]
[220.38554382 13.34437752]
[234.20141602 5.66991520]
[249.37419128 10.09281540]
[256.90216064 23.98904800]
[252.31909180 39.11422729]
[238.34403992 46.49485016]
[223.26817322 41.75212479]
[215.76292419 54.61760712]
[199.94338989 54.38778687]
[186.75433350 61.53264618]
[173.56529236 68.67750549]
[160.37625122 75.82237244]
[147.18719482 82.96723175]
[133.99815369 90.11209106]
[135.31031799 102.61276245]
[132.17256165 114.78416443]
[124.98030853 125.09241486]
[133.07124329 137.72320557]
[141.16217041 150.35398865]
[149.25309753 162.98478699]
[157.34402466 175.61557007]
[165.43495178 188.24636841]
[173.52589417 200.87715149]
[181.61682129 213.50794983]
[195.02699280 214.85940552]
[205.06065369 223.56428528]
[208.19752502 236.27156067]
[203.50877380 248.28289795]
[211.39305115 261.04370117]
[219.27731323 273.80453491]
[227.47077942 286.36904907]
[235.96855164 298.72979736]
[244.46630859 311.09051514]
[259.86184692 311.62307739]
[271.85162354 321.00918579]
[275.96679688 335.48431396]
[270.83081055 349.43997192]
[279.32858276 361.80068970]
[287.82635498 374.16143799]
[296.32412720 386.52218628]
[304.92221069 398.81335449]
[313.62005615 411.03414917]
[322.31790161 423.25491333]
[337.72274780 422.42196655]
[351.12115479 430.06958008]
[358.23773193 443.75744629]
[356.80160522 459.11782837]
[347.27105713 471.24926758]
[332.68719482 476.28067017]
[317.70373535 472.60653687]
[307.10180664 461.39926147]
[304.26446533 446.23504639]
[310.09710693 431.95275879]
[301.39926147 419.73196411]
[292.70141602 407.51119995]
[286.25167847 403.87915039]
[283.96337891 395.01995850]
[275.46560669 382.65921021]
[266.96783447 370.29846191]
[258.47006226 357.93774414]
[243.60073853 357.73535156]
[231.55934143 348.70935059]
[227.08944702 334.15347290]
[232.10557556 319.58828735]
[223.60780334 307.22756958]
[215.11003113 294.86682129]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 156]
[4 155]
[5 154]
[8 150]
[9 149]
[10 148]
[11 147]
[12 146]
[13 145]
[14 144]
[15 143]
[19 113]
[20 112]
[21 111]
[22 110]
[23 109]
[26 42]
[27 41]
[28 40]
[29 39]
[30 38]
[31 37]
[32 36]
[44 108]
[45 107]
[46 106]
[47 105]
[48 104]
[50 101]
[51 100]
[52 99]
[53 98]
[54 97]
[55 96]
[56 95]
[57 94]
[61 90]
[62 89]
[63 88]
[67 84]
[68 83]
[69 82]
[70 81]
[71 80]
[119 140]
[120 139]
[121 138]
[122 137]
[123 136]
[124 135]
[126 133]
[157 192]
[158 191]
[159 190]
[163 186]
[164 185]
[165 184]
[166 183]
[167 181]
[168 180]
[169 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
