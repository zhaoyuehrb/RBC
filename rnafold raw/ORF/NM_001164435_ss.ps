%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 08:08:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUAUUUCAAUUACAAAAGUGUGUGUGGGAGCUGUGGAUUUGGCUCUUGCUAUGGUUGUGGGUAUGGCUGUAUACACAGCACCCACUGUGGCUGUAACGGUUAUUAUGGUUGUUAUGAAAAUAAAUAUUCUGUUAUAGAUGAUCUGAUAUUUUUUGCUUCUAAGAAAUGCCAUUGA\
) } def
/len { sequence length } bind def

/coor [
[92.72459412 243.49839783]
[98.20233917 229.07626343]
[110.62126923 219.92346191]
[109.56318665 204.96083069]
[108.50510406 189.99819946]
[107.44702148 175.03556824]
[106.38893890 160.07292175]
[105.33084869 145.11029053]
[104.27276611 130.14765930]
[98.23641205 125.69654083]
[91.99150085 139.33476257]
[88.04454803 153.80616760]
[73.87619019 158.73136902]
[61.80390930 149.82855225]
[62.32293320 134.83753967]
[74.98050690 126.79112244]
[86.16370392 116.79431152]
[80.12734985 112.34319305]
[65.52044678 115.75471497]
[53.84165955 126.42787933]
[39.68819809 121.78796387]
[25.08129501 125.19947815]
[10.47439480 128.61099243]
[-4.13250685 132.02250671]
[-11.80510139 137.03590393]
[-19.02726555 135.36293030]
[-33.69210052 138.51611328]
[-48.35693359 141.66931152]
[-63.02176666 144.82250977]
[-77.68659973 147.97569275]
[-92.35144043 151.12889099]
[-107.01627350 154.28208923]
[-121.68110657 157.43528748]
[-136.34594727 160.58847046]
[-151.01077271 163.74166870]
[-159.37559509 177.15081787]
[-174.79075623 180.63626099]
[-188.11071777 172.13014221]
[-191.43298340 156.67898560]
[-182.78651428 143.44970703]
[-167.30110168 140.29098511]
[-154.16397095 149.07684326]
[-139.49913025 145.92364502]
[-124.83429718 142.77044678]
[-110.16946411 139.61724854]
[-95.50463104 136.46406555]
[-80.83979797 133.31086731]
[-66.17496490 130.15766907]
[-51.51012802 127.00447845]
[-36.84529495 123.85128021]
[-22.18045998 120.69808960]
[-7.54402208 117.41560364]
[7.06287956 114.00408936]
[21.66978073 110.59257507]
[36.27668381 107.18106079]
[46.91068649 96.75190735]
[62.10893250 101.14781189]
[76.71583557 97.73629761]
[82.39488220 83.85290527]
[74.36642456 71.18231964]
[66.33796692 58.51173019]
[58.30950546 45.84114075]
[50.28104782 33.17054749]
[42.25259018 20.49995995]
[37.57270432 18.05473709]
[34.61350250 14.41360855]
[33.54214859 10.44061184]
[34.15520859 6.93946505]
[26.80857277 -6.13826132]
[19.46193695 -19.21598816]
[12.11530113 -32.29371643]
[4.76866484 -45.37144089]
[-9.60431194 -53.26761627]
[-9.68194675 -69.66658020]
[4.61562490 -77.69848633]
[18.58028603 -69.10079193]
[17.84639168 -52.71807861]
[25.19302750 -39.64035034]
[32.53966522 -26.56262398]
[39.88629913 -13.48489761]
[47.23293686 -0.40717083]
[54.92317963 12.47150040]
[62.95163727 25.14208984]
[70.98009491 37.81267929]
[79.00855255 50.48326874]
[87.03701019 63.15386200]
[95.06547546 75.82444763]
[102.42457581 77.27139282]
[100.62867737 62.37929153]
[114.23695374 56.06940079]
[124.44319153 67.06179810]
[117.14276886 80.16528320]
[124.50186920 81.61222839]
[136.72981262 72.92445374]
[148.95774841 64.23667145]
[161.18568420 55.54889679]
[173.41363525 46.86111832]
[185.64157104 38.17333603]
[197.86950684 29.48555946]
[210.09744263 20.79777908]
[222.32537842 12.11000156]
[229.58485413 -4.79764366]
[247.09246826 -5.79767179]
[259.16516113 -14.69990158]
[271.23788452 -23.60213280]
[283.31057739 -32.50436401]
[284.31851196 -43.37268066]
[291.01721191 -51.70996857]
[300.99438477 -54.90092850]
[310.86447144 -52.11728287]
[323.24380493 -60.58790588]
[335.62316895 -69.05852509]
[335.92666626 -84.57263184]
[345.31799316 -96.92507172]
[360.18600464 -101.36606598]
[374.81359863 -96.18798065]
[383.57623291 -83.38188171]
[383.10443115 -67.87197876]
[373.57968140 -55.62215042]
[358.66436768 -51.34269714]
[344.09381104 -56.67916489]
[331.71444702 -48.20854187]
[319.33508301 -39.73792267]
[312.30880737 -21.74228859]
[292.21282959 -20.43165398]
[280.14010620 -11.52942371]
[268.06741333 -2.62719321]
[255.99468994 6.27503729]
[253.86880493 18.20250893]
[243.85742188 25.71508789]
[231.01316833 24.33794022]
[218.78523254 33.02571869]
[206.55728149 41.71349716]
[194.32934570 50.40127563]
[182.10140991 59.08905411]
[169.87347412 67.77683258]
[157.64552307 76.46461487]
[145.41758728 85.15238953]
[133.18965149 93.84017181]
[148.08581543 92.07831573]
[162.98199463 90.31645966]
[176.31726074 83.44837189]
[190.88011169 79.85350037]
[205.87959290 79.72710419]
[220.50096130 83.07604980]
[233.95007324 89.71842957]
[245.49644470 99.29346466]
[254.51292419 111.28108215]
[260.50979614 125.03018188]
[263.16128540 139.79397583]
[262.32345581 154.77055359]
[258.04174805 169.14646912]
[250.54875183 182.14089966]
[240.25143433 193.04803467]
[227.70913696 201.27545166]
[213.60304260 206.37628174]
[198.69937134 208.07347107]
[183.80760193 206.27484131]
[169.73657227 201.07806396]
[157.25057983 192.76544189]
[147.02778625 181.78843689]
[139.62344360 168.74330139]
[135.43945312 154.33692932]
[127.33742523 141.71324158]
[119.23540497 129.08956909]
[120.29348755 144.05220032]
[121.35157013 159.01484680]
[122.40965271 173.97747803]
[123.46774292 188.94010925]
[124.52582550 203.90275574]
[125.58390808 218.86538696]
[139.16729736 226.17941284]
[146.62010193 239.68716431]
[145.56417847 255.07835388]
[136.33644104 267.44171143]
[121.88143921 272.83212280]
[106.81172180 269.52954102]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 171]
[4 170]
[5 169]
[6 168]
[7 167]
[8 166]
[9 165]
[18 58]
[19 57]
[21 55]
[22 54]
[23 53]
[24 52]
[26 51]
[27 50]
[28 49]
[29 48]
[30 47]
[31 46]
[32 45]
[33 44]
[34 43]
[35 42]
[59 87]
[60 86]
[61 85]
[62 84]
[63 83]
[64 82]
[68 81]
[69 80]
[70 79]
[71 78]
[72 77]
[93 139]
[94 138]
[95 137]
[96 136]
[97 135]
[98 134]
[99 133]
[100 132]
[101 131]
[103 128]
[104 127]
[105 126]
[106 125]
[110 123]
[111 122]
[112 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
