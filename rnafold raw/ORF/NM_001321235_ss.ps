%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 15:07:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUGUCAGAAAGAAGUGAUGGAGCAAAGUGCCGGGAUCAUGUACCGCAAGUCCUGUGCAUCAUCAGCGGCCUGUCUCAUCGCCUCUGCCGGGUACCAGUCCUUCUGCUCCCCAGGGAAACUGAACUCAGUUUGCAUCAGCUGCUGCAACACCCCUCUUUGUAACGGGCCAAGGCCCAAGAAAAGGGGAAGUUCUGCCUCGGCCCUCAGGCCAGGGCUCCGCACCACCAUCCUGUUCCUCAAAUUAGCCCUCUUC\
UCGGCACACUGCUGA\
) } def
/len { sequence length } bind def

/coor [
[124.45407867 512.10827637]
[136.88253784 502.96841431]
[135.84005737 488.00469971]
[134.79756165 473.04095459]
[133.75506592 458.07723999]
[132.71257019 443.11349487]
[131.67008972 428.14978027]
[130.54087830 413.19235229]
[129.32498169 398.24169922]
[128.10910034 383.29107666]
[126.89321136 368.34042358]
[123.23204803 361.95153809]
[125.75091553 353.20959473]
[124.70841980 338.24584961]
[106.27010345 325.28134155]
[103.57209778 302.62860107]
[118.80972290 285.28604126]
[116.55771637 270.45605469]
[114.30570984 255.62608337]
[110.20937347 249.50709534]
[112.11458588 240.61122131]
[110.03464508 225.75613403]
[107.95470428 210.90103149]
[105.87475586 196.04594421]
[103.79481506 181.19084167]
[101.71487427 166.33575439]
[80.84733582 163.53384399]
[61.90796661 154.33572388]
[46.80347824 139.66740417]
[33.84217453 147.21754456]
[20.88087273 154.76768494]
[7.91956997 162.31782532]
[-4.99775267 169.94297791]
[-17.87066078 177.64285278]
[-30.74356842 185.34274292]
[-43.61647797 193.04263306]
[-56.48938370 200.74250793]
[-69.36228943 208.44239807]
[-73.24701691 220.71694946]
[-84.09764862 226.87092590]
[-95.84665680 224.08856201]
[-108.80796051 231.63870239]
[-121.76926422 239.18884277]
[-132.41226196 252.38591003]
[-148.03987122 245.81216431]
[-146.04916382 228.97549438]
[-129.31939697 226.22753906]
[-116.35810089 218.67739868]
[-103.39679718 211.12725830]
[-95.49249268 195.44207764]
[-77.06217957 195.56948853]
[-64.18927002 187.86961365]
[-51.31636047 180.16972351]
[-38.44345474 172.46983337]
[-25.57054710 164.76994324]
[-12.69763851 157.07006836]
[-8.58543873 150.96173096]
[0.36942855 149.35652161]
[13.33073139 141.80638123]
[26.29203415 134.25624084]
[39.25333786 126.70610046]
[34.12051392 107.95401764]
[34.64280319 88.51915741]
[40.77536774 70.06981659]
[51.99178696 54.18968964]
[42.37960815 42.67422104]
[32.76742554 31.15875435]
[23.15524483 19.64328766]
[13.54306507 8.12782001]
[3.93088388 -3.38764668]
[-5.68129683 -14.90311337]
[-24.91155434 -21.02686501]
[-27.30403519 -40.23521042]
[-37.18059540 -51.52474213]
[-47.05715942 -62.81427383]
[-38.62744141 -50.40702438]
[-37.96240234 -35.42177582]
[-45.25988770 -22.31655884]
[-58.34893799 -14.99011135]
[-73.33561707 -15.62201309]
[-85.76148224 -24.02427483]
[-91.92988586 -37.69726944]
[-90.00576782 -52.57334900]
[-80.56150818 -64.22698212]
[-91.44113159 -74.55335236]
[-102.32074738 -84.87972260]
[-113.20036316 -95.20609283]
[-124.07997894 -105.53246307]
[-130.35319519 -107.42855072]
[-134.17666626 -111.57181549]
[-135.08860779 -116.22658539]
[-145.72590637 -126.80239868]
[-156.36320496 -137.37821960]
[-169.71621704 -135.78741455]
[-181.38255310 -142.07551575]
[-187.22085571 -153.75643921]
[-185.30538940 -166.47735596]
[-195.81938171 -177.17578125]
[-206.33335876 -187.87419128]
[-222.29873657 -189.45092773]
[-230.89895630 -202.99403381]
[-225.53666687 -218.11441040]
[-210.32534790 -223.21296692]
[-196.93383789 -214.37857056]
[-195.63493347 -198.38818359]
[-185.12095642 -187.68975830]
[-174.60697937 -176.99134827]
[-157.78237915 -177.55363464]
[-145.52761841 -165.52415466]
[-145.78738403 -148.01551819]
[-135.15008545 -137.43969727]
[-124.51279449 -126.86387634]
[-113.75360870 -116.41208649]
[-102.87399292 -106.08571625]
[-91.99437714 -95.75934601]
[-81.11476135 -85.43297577]
[-70.23513794 -75.10660553]
[-57.23029327 -82.58148956]
[-60.67699432 -97.18013000]
[-64.12370300 -111.77877045]
[-67.57040405 -126.37740326]
[-71.01710510 -140.97604370]
[-74.46380615 -155.57467651]
[-86.09510803 -167.13517761]
[-81.63807678 -182.91702271]
[-65.67772675 -186.68522644]
[-54.63270187 -174.56336975]
[-59.86516953 -159.02139282]
[-56.41846848 -144.42274475]
[-52.97176361 -129.82411194]
[-49.52506256 -115.22547150]
[-46.07835770 -100.62683105]
[-42.63165283 -86.02819824]
[-35.76762390 -72.69083405]
[-25.89106369 -61.40130615]
[-16.01450157 -50.11177444]
[-5.84316397 -50.35601044]
[2.97942615 -44.86199570]
[7.43143988 -35.22848511]
[5.83417034 -24.51529503]
[15.44635105 -12.99982738]
[25.05853081 -1.48436034]
[34.67071152 10.03110695]
[44.28289413 21.54657364]
[53.89507294 33.06204224]
[63.50725555 44.57750702]
[75.95418549 38.15202332]
[89.47259521 34.48246765]
[103.46009827 33.73235321]
[117.29342651 35.93510818]
[130.35615540 40.99257278]
[142.06623840 48.67938995]
[152.82540894 38.22759247]
[163.58459473 27.77579689]
[174.34378052 17.32400131]
[185.10295105 6.87220573]
[189.61027527 -8.29336739]
[204.13052368 -11.61175632]
[214.88970947 -22.06355286]
[225.64888000 -32.51535034]
[223.15066528 -42.82292557]
[225.12217712 -53.16208267]
[231.14529419 -61.69541168]
[240.08795166 -66.93453217]
[250.31643677 -67.99948883]
[259.99374390 -64.76597595]
[271.10983276 -74.83734131]
[282.22592163 -84.90871429]
[293.34201050 -94.98008728]
[297.84353638 -110.74930573]
[313.81445312 -114.47247314]
[324.82525635 -102.31951141]
[319.54895020 -86.79234314]
[303.41339111 -83.86399841]
[292.29730225 -73.79262543]
[281.18121338 -63.72125244]
[270.06509399 -53.64988327]
[270.49658203 -34.14367294]
[256.18218994 -20.43797874]
[236.10067749 -21.75616837]
[225.34150696 -11.30437279]
[214.58232117 -0.85257638]
[210.84457397 13.56541443]
[195.55474854 17.63138580]
[184.79557800 28.08318138]
[174.03639221 38.53497696]
[163.27720642 48.98677444]
[152.51803589 59.43857193]
[159.72099304 71.07292175]
[164.38449097 83.93731689]
[166.31022644 97.48473358]
[181.26766968 98.61394501]
[191.33473206 86.95373535]
[206.16401672 83.49753571]
[220.02105713 89.36666107]
[227.67340088 102.11733246]
[242.63082886 103.24654388]
[257.58825684 104.37574768]
[272.54571533 105.50495911]
[286.88919067 98.82849884]
[298.99786377 107.50196075]
[313.95532227 108.63117218]
[328.91275024 109.76037598]
[343.87017822 110.88958740]
[358.40667725 103.29866028]
[372.10189819 112.31936646]
[370.86737061 128.67198181]
[355.97305298 135.53433228]
[342.74096680 125.84702301]
[327.78353882 124.71781158]
[312.82611084 123.58860779]
[297.86865234 122.45939636]
[284.59503174 129.21662903]
[271.41650391 120.46239471]
[256.45904541 119.33318329]
[241.50161743 118.20397949]
[226.54418945 117.07476807]
[217.06427002 128.53204346]
[202.48313904 132.25424194]
[188.34082031 126.61083221]
[180.13845825 113.57138062]
[165.18101501 112.44216919]
[163.56184387 119.05953217]
[161.27272034 125.47601318]
[158.33778381 131.62397766]
[154.78797913 137.43861389]
[150.66070557 142.85867310]
[145.99948120 147.82698059]
[140.85342407 152.29121399]
[135.27676392 156.20429993]
[129.32830811 159.52497864]
[123.07071686 162.21829224]
[116.56996918 164.25581360]
[118.64990997 179.11090088]
[120.72985077 193.96600342]
[122.80979919 208.82109070]
[124.88973999 223.67619324]
[126.96968079 238.53128052]
[129.13569641 253.37406921]
[131.38771057 268.20407104]
[133.63970947 283.03405762]
[140.98048401 285.00833130]
[147.51306152 288.84277344]
[152.77803040 294.25125122]
[156.40953064 300.83752441]
[158.16064453 308.12435913]
[157.92010498 315.58789062]
[155.71931458 322.69552612]
[151.72903442 328.94381714]
[146.24626160 333.89410400]
[139.67214966 337.20336914]
[140.71464539 352.16711426]
[141.84385681 367.12454224]
[143.05973816 382.07516479]
[144.27563477 397.02581787]
[145.49151611 411.97644043]
[149.29429626 420.24114990]
[146.63381958 427.10729980]
[147.67630005 442.07101440]
[148.71879578 457.03475952]
[149.76129150 471.99847412]
[150.80378723 486.96221924]
[151.84626770 501.92593384]
[165.42202759 509.25411987]
[172.86076355 522.76959229]
[171.78878784 538.15966797]
[162.54818726 550.51342773]
[148.08757019 555.88879395]
[133.02130127 552.57049561]
[122.15695190 541.61743164]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 263]
[3 262]
[4 261]
[5 260]
[6 259]
[7 258]
[8 256]
[9 255]
[10 254]
[11 253]
[13 252]
[14 251]
[17 241]
[18 240]
[19 239]
[21 238]
[22 237]
[23 236]
[24 235]
[25 234]
[26 233]
[29 61]
[30 60]
[31 59]
[32 58]
[33 56]
[34 55]
[35 54]
[36 53]
[37 52]
[38 51]
[41 49]
[42 48]
[43 47]
[65 146]
[66 145]
[67 144]
[68 143]
[69 142]
[70 141]
[71 140]
[73 136]
[74 135]
[75 134]
[84 117]
[85 116]
[86 115]
[87 114]
[88 113]
[91 112]
[92 111]
[93 110]
[97 107]
[98 106]
[99 105]
[118 133]
[119 132]
[120 131]
[121 130]
[122 129]
[123 128]
[152 188]
[153 187]
[154 186]
[155 185]
[156 184]
[158 182]
[159 181]
[160 180]
[166 177]
[167 176]
[168 175]
[169 174]
[191 222]
[192 221]
[196 217]
[197 216]
[198 215]
[199 214]
[201 212]
[202 211]
[203 210]
[204 209]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
