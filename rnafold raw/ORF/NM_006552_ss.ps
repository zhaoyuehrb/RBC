%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 16:34:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAGGCUGUCGGUGUGUCUCCUGCUGCUCACGCUGGCCCUUUGCUGCUACCGGGCAAAUGCAGUGGUCUGCCAAGCUCUUGGUUCUGAAAUCACAGGCUUCUUAUUAGCUGGAAAACCUGUGUUCAAGUUCCAACUUGCCAAAUUUAAGGCACCUCUGGAAGCUGUUGCAGCCAAGAUGGAAGUGAAGAAAUGCGUGGAUACGAUGGCCUAUGAGAAAAGAGUGCUAAUUACAAAAACAUUGGGAAAAAUAGCA\
GAGAAAUGUGAUCGCUGA\
) } def
/len { sequence length } bind def

/coor [
[308.26196289 476.12060547]
[303.55816650 458.54382324]
[305.99685669 440.47821045]
[315.22732544 424.71875000]
[305.83660889 413.02197266]
[296.44589233 401.32522583]
[287.05517578 389.62844849]
[277.66445923 377.93167114]
[268.27374268 366.23489380]
[258.88302612 354.53811646]
[249.49232483 342.84133911]
[246.08355713 342.08880615]
[242.86236572 339.66970825]
[240.59835815 335.68640137]
[239.98812866 330.57699585]
[231.00521851 318.56420898]
[222.02230835 306.55139160]
[213.03941345 294.53860474]
[204.05650330 282.52578735]
[195.07359314 270.51300049]
[183.17189026 268.48587036]
[175.58659363 258.58392334]
[176.80302429 245.76782227]
[167.95843506 233.65281677]
[159.11386108 221.53781128]
[140.86520386 219.78150940]
[129.53100586 204.96640015]
[132.71708679 186.26187134]
[123.59703827 174.35284424]
[114.40886688 162.49630737]
[105.15287781 150.69264221]
[95.89688873 138.88896179]
[81.55847931 134.48329163]
[67.27152252 139.05307007]
[52.98456573 143.62284851]
[38.72404480 148.27445984]
[24.49042130 153.00775146]
[10.25679779 157.74102783]
[-3.89331841 162.71839905]
[-17.95574379 167.93838501]
[-28.20076370 179.99450684]
[-42.82508850 177.16990662]
[-56.88751221 182.38987732]
[-70.94993591 187.60986328]
[-85.01235962 192.82984924]
[-98.98293304 198.29089355]
[-112.85752869 203.99140930]
[-126.73211670 209.69190979]
[-140.60670471 215.39241028]
[-150.19334412 228.69761658]
[-166.47987366 226.77896118]
[-172.71209717 211.61019897]
[-162.47885132 198.79565430]
[-146.30720520 201.51782227]
[-132.43261719 195.81732178]
[-118.55802917 190.11682129]
[-104.68344116 184.41630554]
[-102.99784851 181.35940552]
[-99.76669312 178.95359802]
[-95.30580902 177.90815735]
[-90.23234558 178.76742554]
[-76.16992188 173.54743958]
[-62.10749435 168.32745361]
[-48.04507065 163.10748291]
[-38.80588913 151.42472839]
[-23.17572594 153.87596130]
[-9.11330128 148.65597534]
[-7.32357550 145.65884399]
[-4.01159716 143.36558533]
[0.48259735 142.47416687]
[5.52351284 143.50740051]
[19.75713539 138.77412415]
[33.99075699 134.04083252]
[39.32607651 128.96728516]
[48.41478729 129.33589172]
[62.70174408 124.76611328]
[76.98870087 120.19633484]
[72.02900696 108.02537537]
[72.77709961 95.56441498]
[78.52429962 85.23047638]
[69.13358307 73.53369904]
[59.74286652 61.83692932]
[50.35214996 50.14015579]
[34.88687897 48.27922440]
[25.52998352 36.28326035]
[27.39940453 21.55095482]
[18.00868988 9.85418320]
[8.55107307 -1.78856182]
[-0.97313243 -13.37689686]
[-10.49733829 -24.96523094]
[-16.48704529 -27.61900330]
[-19.77054405 -32.19991302]
[-20.10338974 -36.93022156]
[-29.35937881 -48.73389053]
[-38.61536789 -60.53756332]
[-47.87135696 -72.34123230]
[-57.12734604 -84.14490509]
[-66.38333893 -95.94857788]
[-83.63418579 -102.43891144]
[-85.38719177 -119.91605377]
[-94.77790833 -131.61282349]
[-104.16862488 -143.30960083]
[-113.55933380 -155.00636292]
[-129.05136108 -154.12493896]
[-142.08451843 -162.54612732]
[-147.64729309 -177.03181458]
[-143.60069275 -192.01194763]
[-131.50071716 -201.72637939]
[-116.00004578 -202.43969727]
[-103.05901337 -193.87762451]
[-97.65370178 -179.33244324]
[-101.86256409 -164.39707947]
[-92.47184753 -152.70031738]
[-83.08113861 -141.00354004]
[-73.69042206 -129.30676270]
[-61.72604752 -127.69015503]
[-53.80469894 -118.05492401]
[-54.57966614 -105.20456696]
[-45.32367706 -93.40089417]
[-36.06768799 -81.59722137]
[-26.81169701 -69.79354858]
[-17.55570793 -57.98987961]
[-8.29971886 -46.18621063]
[1.09099627 -34.48943710]
[10.61520195 -22.90110207]
[20.13940811 -11.31276798]
[26.78919983 -8.15256023]
[29.70546150 0.46346802]
[39.09617615 12.16024017]
[53.88431931 13.51907635]
[63.57446289 25.24749184]
[62.04892349 40.74944305]
[71.43963623 52.44621658]
[80.83035278 64.14299011]
[90.22106934 75.83975983]
[90.37906647 72.90662384]
[90.77477264 69.94648743]
[91.41062164 66.97452545]
[94.31588745 52.25856781]
[97.22115326 37.54261017]
[100.12641907 22.82665062]
[89.47873688 11.53920174]
[87.53257751 -3.85534525]
[95.03627014 -17.43747330]
[109.10449982 -23.98457527]
[124.32774353 -20.97916031]
[134.85234070 -9.57686806]
[136.63139343 5.83788538]
[128.98080444 19.33781242]
[114.84237671 25.73191643]
[111.93711090 40.44787598]
[109.03184509 55.16383362]
[106.12657928 69.87979126]
[119.65174866 76.36590576]
[129.30819702 64.88752747]
[138.89868164 53.35398483]
[148.42288208 41.76565170]
[157.94709778 30.17731667]
[167.40470886 18.53457069]
[176.79542542 6.83779907]
[175.26988220 -8.66415215]
[184.96002197 -20.39256668]
[199.74816895 -21.75140381]
[209.13888550 -33.44817734]
[211.10002136 -49.72963715]
[226.28500366 -55.92226791]
[239.07279968 -45.65561676]
[236.30844116 -29.49114037]
[220.83566284 -24.05746078]
[211.44494629 -12.36068916]
[213.31436157 2.37161756]
[203.95747375 14.36758232]
[188.49218750 16.22851372]
[179.10148621 27.92528534]
[177.37101746 35.08155060]
[169.53543091 39.70152283]
[160.01121521 51.28985596]
[150.48701477 62.87819290]
[148.67460632 70.01414490]
[140.78657532 74.54397583]
[131.13012695 86.02234650]
[132.54727173 105.16899872]
[123.53670502 121.36316681]
[107.70056152 129.63298035]
[116.95655060 141.43664551]
[126.21253967 153.24032593]
[133.94013977 158.03874207]
[135.50605774 165.23280334]
[144.62609863 177.14181519]
[156.44543457 176.37950134]
[167.06378174 181.35029602]
[173.90734863 190.72222900]
[175.37879944 202.11259460]
[171.22886658 212.69323730]
[180.07344055 224.80824280]
[188.91802979 236.92324829]
[205.93547058 244.00299072]
[207.08639526 261.53009033]
[216.06930542 273.54287720]
[225.05221558 285.55569458]
[234.03511047 297.56848145]
[243.01802063 309.58129883]
[252.00093079 321.59408569]
[261.18908691 333.45062256]
[270.57980347 345.14739990]
[279.97052002 356.84417725]
[289.36123657 368.54095459]
[298.75195312 380.23773193]
[308.14266968 391.93450928]
[317.53338623 403.63125610]
[326.92410278 415.32803345]
[338.12057495 410.85751343]
[350.07595825 409.41888428]
[361.98492432 411.10159302]
[373.04724121 415.78512573]
[382.52142334 423.14755249]
[389.77456665 432.68762207]
[394.32449341 443.75900269]
[395.87191772 455.61395264]
[394.32000732 467.45382690]
[389.78051758 478.48294067]
[382.56573486 487.96200562]
[391.41030884 500.07699585]
[400.25491333 512.19201660]
[409.09948730 524.30700684]
[413.80429077 526.39105225]
[416.94692993 529.72509766]
[418.31326294 533.51477051]
[418.03140259 536.99420166]
[426.45413208 549.40618896]
[434.87683105 561.81823730]
[443.29956055 574.23022461]
[451.72225952 586.64221191]
[460.14498901 599.05426025]
[473.89501953 598.46752930]
[486.04739380 604.69348145]
[493.48510742 616.01525879]
[494.35974121 629.42498779]
[488.54998779 641.42230225]
[502.61929321 648.65869141]
[503.19287109 663.54223633]
[511.47271729 676.04998779]
[519.75256348 688.55780029]
[535.07763672 687.53906250]
[548.85180664 694.33380127]
[557.36987305 707.11419678]
[558.34051514 722.44238281]
[551.50262451 736.19519043]
[538.69561768 744.67309570]
[523.36444092 745.59570312]
[509.63317871 738.71478271]
[501.19540405 725.88122559]
[500.32086182 710.54730225]
[507.24481201 696.83764648]
[498.96496582 684.32983398]
[490.68508911 671.82208252]
[477.20800781 665.48034668]
[476.04220581 649.70214844]
[459.61056519 649.50457764]
[446.41046143 639.44012451]
[441.77749634 623.32720947]
[447.73297119 607.47692871]
[439.31027222 595.06494141]
[430.88754272 582.65295410]
[422.46484375 570.24090576]
[414.04211426 557.82891846]
[405.61941528 545.41693115]
[396.98446655 533.15161133]
[388.13989258 521.03662109]
[379.29531860 508.92160034]
[370.45074463 496.80657959]
[353.06268311 501.68179321]
[335.10510254 499.47442627]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 211]
[5 210]
[6 209]
[7 208]
[8 207]
[9 206]
[10 205]
[11 204]
[15 203]
[16 202]
[17 201]
[18 200]
[19 199]
[20 198]
[23 196]
[24 195]
[25 194]
[28 189]
[29 188]
[30 186]
[31 185]
[32 184]
[33 77]
[34 76]
[35 75]
[36 73]
[37 72]
[38 71]
[39 67]
[40 66]
[42 64]
[43 63]
[44 62]
[45 61]
[46 57]
[47 56]
[48 55]
[49 54]
[80 135]
[81 134]
[82 133]
[83 132]
[86 129]
[87 128]
[88 126]
[89 125]
[90 124]
[93 123]
[94 122]
[95 121]
[96 120]
[97 119]
[98 118]
[100 115]
[101 114]
[102 113]
[103 112]
[138 153]
[139 152]
[140 151]
[141 150]
[154 181]
[155 180]
[156 178]
[157 177]
[158 176]
[159 174]
[160 173]
[163 170]
[164 169]
[222 271]
[223 270]
[224 269]
[225 268]
[229 267]
[230 266]
[231 265]
[232 264]
[233 263]
[234 262]
[239 258]
[241 256]
[242 255]
[243 254]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
