%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 12:28:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGUGUCUUCUGCACAGCUGGACUUCAACCUGCAGGCUCUUCUGGGACAGCUCAGCCAGGAUGACUUGUGCAAGUUCAAGUCUCUGAUCAGGACCGUCUCCCUGGGAAAUGAGCUGCAAAAGAUCCCCCAGACAUAG\
) } def
/len { sequence length } bind def

/coor [
[105.11704254 361.11816406]
[113.13627625 348.17166138]
[125.73167419 339.61154175]
[123.03426361 324.85604858]
[113.13437653 313.72763062]
[118.26390076 298.76104736]
[115.56648254 284.00558472]
[112.86907196 269.25012207]
[110.17166138 254.49464417]
[107.47425079 239.73916626]
[97.57436371 228.61076355]
[102.70388031 213.64418030]
[100.00646973 198.88870239]
[97.30905914 184.13322449]
[94.61164856 169.37776184]
[91.19201660 165.93450928]
[89.95309448 160.27903748]
[92.14157104 153.89556885]
[90.11367798 139.03329468]
[88.08577728 124.17099762]
[77.89640808 93.72200775]
[67.47111511 82.93714142]
[57.04582214 72.15228271]
[46.62052536 61.36741638]
[36.19523239 50.58255768]
[25.76993942 39.79769516]
[10.61550236 35.25307083]
[7.33284712 20.72470474]
[-3.09244657 9.93984222]
[-13.51774025 -0.84501958]
[-28.67217827 -5.38964176]
[-31.95483398 -19.91800880]
[-42.38012695 -30.70287132]
[-52.80541992 -41.48773193]
[-63.23071289 -52.27259445]
[-78.38515472 -56.81721878]
[-81.66780853 -71.34558105]
[-99.45526886 -75.95539093]
[-103.12786865 -93.07897186]
[-113.79423523 -103.62547302]
[-124.57909393 -114.05077362]
[-135.48107910 -124.35352325]
[-146.38305664 -134.65628052]
[-157.28504944 -144.95903015]
[-168.18702698 -155.26177979]
[-179.08901978 -165.56454468]
[-193.78320312 -161.09504700]
[-208.73985291 -164.58708191]
[-219.93568420 -175.10130310]
[-224.35910034 -189.80943298]
[-220.82020569 -204.75506592]
[-210.27093506 -215.91789246]
[-195.54901123 -220.29516602]
[-180.61456299 -216.70944214]
[-169.48484802 -206.12524414]
[-165.15373230 -191.38967896]
[-168.78625488 -176.46652222]
[-157.88427734 -166.16377258]
[-146.98229980 -155.86102295]
[-136.08030701 -145.55825806]
[-125.17832184 -135.25550842]
[-114.27633667 -124.95275116]
[-107.19472504 -122.62513733]
[-103.24773407 -114.29183960]
[-92.58136749 -103.74533844]
[-80.43488312 -103.48417664]
[-71.45881653 -94.71127319]
[-70.88294220 -81.77087402]
[-56.47419357 -77.99765778]
[-52.44585037 -62.69788742]
[-42.02055740 -51.91302490]
[-31.59526443 -41.12816238]
[-21.16997147 -30.34330177]
[-6.76121998 -26.57008553]
[-2.73287797 -11.27031326]
[7.69241571 -0.48545095]
[18.11771011 10.29941082]
[32.52645874 14.07262802]
[36.55480194 29.37240028]
[46.98009491 40.15726089]
[57.40538788 50.94212341]
[67.83068085 61.72698593]
[78.25597382 72.51184845]
[88.68126678 83.29671478]
[87.38096619 68.35317993]
[98.81010437 58.63850021]
[113.34892273 62.32939529]
[118.76030731 76.31928253]
[110.48948669 88.83310699]
[124.79665375 84.32701111]
[139.10382080 79.82091522]
[153.41099548 75.31481934]
[167.71817017 70.80872345]
[172.51853943 56.05284119]
[185.09516907 46.96394348]
[200.61207581 47.03689194]
[213.10269165 56.24364090]
[217.76411438 71.04399872]
[212.80395508 85.74694061]
[200.12947083 94.69886780]
[184.61425781 94.45759583]
[172.22425842 85.11589050]
[157.91709900 89.62198639]
[143.60992432 94.12808228]
[129.30274963 98.63417816]
[114.99558258 103.14027405]
[129.95974731 102.10404968]
[141.75575256 111.36979675]
[144.29330444 126.15360260]
[136.26225281 138.82254028]
[121.80905151 142.83563232]
[108.39591217 136.12088013]
[102.94806671 122.14310455]
[104.97596741 137.00538635]
[107.00386047 151.86767578]
[109.36711884 166.68034363]
[112.06452942 181.43582153]
[114.76194000 196.19128418]
[117.45935822 210.94676208]
[127.55217743 223.13058472]
[122.22972107 237.04176331]
[124.92713165 251.79722595]
[127.62454224 266.55270386]
[130.32196045 281.30816650]
[133.01936340 296.06365967]
[143.11218262 308.24746704]
[137.78973389 322.15866089]
[140.48715210 336.91412354]
[155.29643250 340.46447754]
[167.37738037 349.73648071]
[174.63690186 363.12377930]
[175.81723022 378.30688477]
[170.71386719 392.65524292]
[160.21099854 403.68292236]
[146.12832642 409.47930908]
[130.90574646 409.04016113]
[117.18065643 402.44152832]
[107.33102417 390.82669067]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 128]
[4 127]
[6 125]
[7 124]
[8 123]
[9 122]
[10 121]
[12 119]
[13 118]
[14 117]
[15 116]
[18 115]
[19 114]
[20 113]
[21 84]
[22 83]
[23 82]
[24 81]
[25 80]
[26 79]
[28 77]
[29 76]
[30 75]
[32 73]
[33 72]
[34 71]
[35 70]
[37 68]
[39 65]
[40 64]
[41 62]
[42 61]
[43 60]
[44 59]
[45 58]
[46 57]
[89 106]
[90 105]
[91 104]
[92 103]
[93 102]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
