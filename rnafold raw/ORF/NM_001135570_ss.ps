%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 12:30:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCCCGCGGGCGUGCCCAUGUCCACCUACCUGAAAAUGUUCGCAGCCAGUCUCCUGGCCAUGUGCGCAGGGGCAGAAGUGGUGCACAGGUACUACCGACCGGACCUGACAAUACCUGAAAUUCCACCAAAGCGUGGAGAACUCAAAACGGAGCUUUUGGGACUGAAAGAAAGAAAACACAAACCUCAAGUUUCUCAACAGGAGGAACUUAAAUAA\
) } def
/len { sequence length } bind def

/coor [
[45.87155533 145.38728333]
[47.55419922 130.48196411]
[55.73966217 117.91222382]
[68.69110870 110.34519196]
[83.66024780 109.38643646]
[68.66063690 109.49501038]
[53.66103363 109.60359192]
[38.66456985 109.92930603]
[23.67439270 110.47209167]
[8.68421650 111.01487732]
[-2.04739118 122.30515289]
[-17.25729370 122.64206696]
[-27.95471191 112.34154510]
[-42.94488907 112.88433075]
[-57.93506241 113.42710876]
[-72.92523956 113.96989441]
[-87.91542053 114.51268005]
[-93.70479584 117.69053650]
[-99.37897491 117.49963379]
[-103.34608459 114.84782410]
[-118.34568787 114.95640564]
[-133.34529114 115.06497955]
[-147.08909607 122.90197754]
[-159.87203979 115.25700378]
[-174.87165833 115.36558533]
[-189.87126160 115.47416687]
[-204.87086487 115.58274078]
[-214.52749634 129.47222900]
[-230.40306091 134.81442261]
[-246.17590332 129.69113159]
[-255.68927002 116.31051636]
[-270.68572998 116.63623047]
[-285.68218994 116.96194458]
[-293.13027954 130.32133484]
[-306.17910767 138.10755920]
[-321.27291870 138.31553650]
[-334.35668945 130.98951721]
[-341.96554565 118.18439484]
[-356.96200562 118.51010895]
[-371.95846558 118.83582306]
[-385.58737183 126.87096405]
[-398.47964478 119.41184998]
[-413.47610474 119.73756409]
[-428.47256470 120.06328583]
[-443.46902466 120.38899994]
[-458.45922852 120.93178558]
[-473.43997192 121.69152069]
[-488.42071533 122.45125580]
[-503.40145874 123.21099091]
[-518.38220215 123.97073364]
[-531.84930420 133.32853699]
[-546.56976318 126.10071564]
[-547.40032959 109.72261810]
[-533.48669434 101.04263306]
[-519.14196777 108.98998260]
[-504.16119385 108.23024750]
[-489.18045044 107.47051239]
[-474.19970703 106.71076965]
[-459.21896362 105.95103455]
[-455.41198730 103.07405853]
[-449.75836182 102.55507660]
[-443.79476929 105.39253235]
[-428.79827881 105.06681824]
[-413.80181885 104.74110413]
[-398.80535889 104.41539001]
[-386.24911499 96.40354919]
[-372.28417969 103.83936310]
[-357.28771973 103.51364899]
[-342.29125977 103.18792725]
[-335.24557495 90.06452179]
[-322.49218750 82.17733765]
[-307.40359497 81.72975159]
[-294.02902222 88.94207764]
[-286.00790405 101.96548462]
[-271.01144409 101.63977051]
[-256.01498413 101.31405640]
[-249.45631409 89.68824005]
[-237.91754150 82.76483917]
[-224.35664368 82.44337463]
[-212.31207275 88.91465759]
[-204.97944641 100.58313751]
[-189.97984314 100.47455597]
[-174.98023987 100.36597443]
[-159.98062134 100.25740051]
[-147.30969238 92.42816925]
[-133.45387268 100.06537628]
[-118.45426941 99.95679474]
[-103.45466614 99.84821320]
[-88.45819855 99.52249908]
[-73.46802521 98.97972107]
[-58.47784805 98.43693542]
[-43.48767090 97.89414978]
[-28.49749565 97.35136414]
[-18.57306480 86.30413818]
[-3.37862563 85.54013824]
[8.14143372 96.02469635]
[23.13160896 95.48191833]
[38.12178421 94.93913269]
[41.97001648 92.11756897]
[47.63055801 91.68048859]
[53.55245209 94.60398865]
[68.55206299 94.49540710]
[83.55166626 94.38682556]
[88.02300262 85.14853668]
[97.60750580 79.35961914]
[109.73394775 79.73892975]
[120.90047455 69.72351074]
[121.91413116 54.17969131]
[133.38124084 44.18170166]
[148.19364929 45.24385452]
[159.36018372 35.22843170]
[164.46736145 20.25420952]
[179.10813904 17.51619339]
[183.40454102 9.46046925]
[190.50958252 7.43804073]
[201.81993103 -2.41467619]
[213.13027954 -12.26739311]
[224.44062805 -22.12010956]
[235.75097656 -31.97282600]
[247.06132507 -41.82554245]
[258.37167358 -51.67826080]
[253.62553406 -70.59654999]
[269.91821289 -90.32261658]
[278.84005737 -102.38082886]
[287.76193237 -114.43904114]
[296.68377686 -126.49725342]
[305.60562134 -138.55546570]
[303.02139282 -154.14704895]
[312.28677368 -166.95048523]
[327.90481567 -169.36973572]
[340.60958862 -159.96949768]
[342.86355591 -144.32675171]
[333.32952881 -131.72209167]
[317.66384888 -129.63360596]
[308.74197388 -117.57540131]
[299.82012939 -105.51718903]
[290.89828491 -93.45897675]
[281.97640991 -81.40076447]
[286.73699951 -75.60533905]
[301.53549194 -78.05577087]
[296.25811768 -64.01448822]
[301.01870728 -58.21906281]
[314.57998657 -64.62931824]
[328.14129639 -71.03958130]
[333.23233032 -86.00142670]
[347.44854736 -92.90608978]
[362.35574341 -87.65715027]
[369.10971069 -73.36871338]
[363.70346069 -58.51785660]
[349.34442139 -51.91532516]
[334.55154419 -57.47829056]
[320.99026489 -51.06803131]
[307.42895508 -44.65777206]
[285.61795044 -32.77938461]
[268.22439575 -40.36791229]
[256.91403198 -30.51519585]
[245.60368347 -20.66247940]
[234.29333496 -10.80976200]
[222.98298645 -0.95704508]
[211.67263794 8.89567184]
[200.36228943 18.74838829]
[189.12356567 28.68271828]
[184.81509399 42.94057083]
[169.37561035 46.39495850]
[158.20907593 56.41038132]
[157.65979004 71.25065613]
[146.47802734 81.56679535]
[130.91589355 80.89003754]
[119.74937439 90.90545654]
[134.35057068 87.46961212]
[148.95176697 84.03377533]
[160.50547791 74.46759796]
[174.61843872 69.38584137]
[189.61843872 69.39064026]
[203.72814941 74.48143005]
[215.27574158 84.05500031]
[222.89294434 96.97699738]
[225.67723083 111.71632385]
[223.29869080 126.52654266]
[216.03913879 139.65281677]
[204.75875854 149.53982544]
[190.79414368 155.01609802]
[175.79992676 155.43273926]
[161.55276489 150.74038696]
[149.74075317 141.49504089]
[141.76318359 128.79139709]
[128.97227478 120.95607758]
[116.18134308 113.12075043]
[123.64997864 126.12918854]
[131.11860657 139.13763428]
[138.58724976 152.14607239]
[146.05587769 165.15451050]
[153.52452087 178.16294861]
[160.99314880 191.17138672]
[168.46177673 204.17982483]
[175.93041992 217.18826294]
[190.97892761 222.74900818]
[195.87695312 238.02607727]
[186.86714172 251.30021667]
[170.86105347 252.38865662]
[160.13719177 240.45640564]
[162.92198181 224.65690613]
[155.45333862 211.64846802]
[147.98471069 198.64002991]
[140.51608276 185.63157654]
[133.04743958 172.62313843]
[125.57881165 159.61470032]
[118.11017609 146.60626221]
[110.64154053 133.59782410]
[103.17290497 120.58938599]
[109.89200592 134.00033569]
[109.88677979 149.00033569]
[103.15834045 162.40660095]
[91.13436127 171.37454224]
[76.36614227 174.00128174]
[61.98728180 169.72946167]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 103]
[6 102]
[7 101]
[8 98]
[9 97]
[10 96]
[13 93]
[14 92]
[15 91]
[16 90]
[17 89]
[20 88]
[21 87]
[22 86]
[24 84]
[25 83]
[26 82]
[27 81]
[31 76]
[32 75]
[33 74]
[38 69]
[39 68]
[40 67]
[42 65]
[43 64]
[44 63]
[45 62]
[46 59]
[47 58]
[48 57]
[49 56]
[50 55]
[106 169]
[107 168]
[110 165]
[111 164]
[113 162]
[115 161]
[116 160]
[117 159]
[118 158]
[119 157]
[120 156]
[121 155]
[123 138]
[124 137]
[125 136]
[126 135]
[127 134]
[142 153]
[143 152]
[144 151]
[188 210]
[189 209]
[190 208]
[191 207]
[192 206]
[193 205]
[194 204]
[195 203]
[196 202]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
