%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 19:59:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAAGUUUUUUGUCUUUGCUUUAGUCUUGGCUCUCAUGAUUUCCAUGAUUAGCGCUGAUUCACAUGAAAAGAGACAUCAUGGGUAUAGAAGAAAAUUCCAUGAAAAGCAUCAUUCACAUCGAGAAUUUCCAUUUUAUGGGGACUAUGGAUCAAAUUAUCUAUAUGACAAUUGA\
) } def
/len { sequence length } bind def

/coor [
[34.20312119 73.11015320]
[20.99418640 66.00212097]
[7.78525352 58.89409256]
[-5.42367935 51.78606415]
[-21.24251366 52.06002426]
[-28.78362846 39.21553802]
[-41.99256134 32.10750961]
[-55.20149612 24.99947739]
[-68.41043091 17.89144897]
[-81.61936188 10.78341770]
[-95.50459290 14.59447670]
[-108.05089569 7.12193918]
[-123.04545593 6.71806908]
[-138.04002380 6.31419849]
[-153.03457642 5.91032839]
[-168.02914429 5.50645828]
[-183.02369690 5.10258818]
[-198.01826477 4.69871759]
[-207.92019653 12.99807262]
[-220.42131042 12.33359814]
[-228.82998657 3.60843873]
[-243.81488037 2.93546629]
[-258.79977417 2.26249385]
[-273.78466797 1.58952129]
[-288.78466797 1.58952129]
[-303.76956177 2.26249385]
[-318.75445557 2.93546629]
[-327.35028076 15.71896553]
[-341.65798950 20.92887497]
[-356.11895752 16.76416016]
[-365.24539185 5.02337599]
[-380.23028564 5.69634867]
[-395.21517944 6.36932087]
[-410.47811890 16.64331436]
[-425.73348999 7.99803019]
[-440.70388794 8.93988800]
[-455.67428589 9.88174629]
[-470.64468384 10.82360363]
[-485.61508179 11.76546192]
[-497.26040649 22.80022049]
[-513.12786865 20.43299294]
[-521.04528809 6.47971106]
[-514.93908691 -8.35585976]
[-499.49346924 -12.69314003]
[-486.55694580 -3.20493937]
[-471.58654785 -4.14679718]
[-456.61614990 -5.08865499]
[-441.64572144 -6.03051281]
[-426.67532349 -6.97237062]
[-418.42465210 -15.84706879]
[-405.93746948 -16.73584366]
[-395.88815308 -8.61557484]
[-380.90325928 -9.28854752]
[-365.91836548 -9.96152020]
[-357.88110352 -22.47312737]
[-343.85168457 -27.91734695]
[-329.13455200 -24.01094246]
[-319.42742920 -12.04942989]
[-304.44253540 -12.72240257]
[-289.45764160 -13.39537430]
[-298.44552612 -25.40445709]
[-294.83880615 -39.96438599]
[-281.28448486 -46.38941193]
[-267.73031616 -39.96411514]
[-264.12390137 -25.40411568]
[-273.11169434 -13.39537430]
[-258.12680054 -12.72240257]
[-243.14190674 -12.04942989]
[-228.15701294 -11.37645721]
[-213.05929565 -20.29419708]
[-197.61439514 -10.29584408]
[-182.61982727 -9.89197445]
[-167.62527466 -9.48810387]
[-152.63070679 -9.08423328]
[-137.63613892 -8.68036366]
[-122.64158630 -8.27649307]
[-107.64702606 -7.87262297]
[-96.26282501 -17.63991356]
[-94.38282013 -32.52163315]
[-92.50282288 -47.40335464]
[-90.62282562 -62.28507614]
[-88.74282837 -77.16679382]
[-86.86283112 -92.04851532]
[-84.98283386 -106.93023682]
[-98.03091431 -114.78310394]
[-106.75155640 -127.26789856]
[-109.63386536 -142.22157288]
[-106.17845917 -157.05329895]
[-96.98400116 -169.19338989]
[-83.64349365 -176.53849792]
[-68.46826172 -177.81605530]
[-54.08749771 -172.80471802]
[-42.99276352 -162.37271118]
[-37.10628891 -148.32745361]
[-37.44793701 -133.10237122]
[-43.95851517 -119.33529663]
[-55.51003265 -109.41146088]
[-70.10111237 -105.05023956]
[-71.98110962 -90.16851807]
[-73.86110687 -75.28679657]
[-75.74110413 -60.40507889]
[-77.62110138 -45.52335739]
[-79.50110626 -30.64163589]
[-81.38110352 -15.75991535]
[-74.51132965 -2.42551494]
[-61.30239868 4.68251514]
[-48.09346390 11.79054546]
[-34.88453293 18.89857483]
[-21.67559814 26.00660515]
[-6.80155563 25.22422791]
[1.68435037 38.57712936]
[14.89328289 45.68515778]
[28.10221672 52.79319000]
[41.31114960 59.90121841]
[50.33436584 49.15102768]
[61.29400635 40.38339615]
[73.76276398 33.94017029]
[87.25449371 30.07257080]
[101.24315643 28.93138504]
[115.18335724 30.56111145]
[128.53155518 34.89820862]
[140.76734924 41.77357483]
[151.41365051 50.91914368]
[160.05535889 61.97833633]
[166.35556030 74.51996613]
[170.06861877 88.05504608]
[171.04974365 102.05584717]
[185.91400146 104.06934357]
[200.77824402 106.08284760]
[215.64248657 108.09634399]
[230.50672913 110.10984039]
[245.37098694 112.12334442]
[260.23522949 114.13684082]
[276.74264526 110.27136230]
[285.02676392 125.06357574]
[273.10589600 137.11885071]
[258.22174072 129.00108337]
[243.35748291 126.98758698]
[228.49324036 124.97409058]
[213.62898254 122.96058655]
[198.76473999 120.94709015]
[183.90049744 118.93359375]
[169.03625488 116.92008972]
[162.89208984 133.11917114]
[153.01144409 147.35060120]
[163.08171082 158.46769714]
[173.15197754 169.58479309]
[183.22224426 180.70187378]
[193.29251099 191.81896973]
[203.36277771 202.93606567]
[213.43304443 214.05316162]
[229.22846985 214.58264160]
[239.96194458 226.18298340]
[239.26548767 241.97192383]
[227.55230713 252.58215332]
[211.77162170 251.71881104]
[201.28582764 239.89410400]
[202.31596375 224.12341309]
[192.24569702 213.00633240]
[182.17543030 201.88923645]
[172.10516357 190.77214050]
[162.03489685 179.65505981]
[151.96463013 168.53796387]
[141.89436340 157.42086792]
[128.62998962 165.05856323]
[114.03801727 169.67945862]
[98.79509735 171.06927490]
[83.60804749 169.16355896]
[69.18110657 164.05067444]
[56.18325806 155.96772766]
[45.21722031 145.28952026]
[36.79149628 132.51119995]
[31.29679108 118.22532654]
[28.98789787 103.09432220]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 114]
[2 113]
[3 112]
[4 111]
[6 109]
[7 108]
[8 107]
[9 106]
[10 105]
[12 77]
[13 76]
[14 75]
[15 74]
[16 73]
[17 72]
[18 71]
[21 69]
[22 68]
[23 67]
[24 66]
[25 60]
[26 59]
[27 58]
[31 54]
[32 53]
[33 52]
[35 49]
[36 48]
[37 47]
[38 46]
[39 45]
[78 104]
[79 103]
[80 102]
[81 101]
[82 100]
[83 99]
[84 98]
[127 143]
[128 142]
[129 141]
[130 140]
[131 139]
[132 138]
[133 137]
[145 164]
[146 163]
[147 162]
[148 161]
[149 160]
[150 159]
[151 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
