%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Sep  9 23:04:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGCAGUGACGGCGUUGGCGGCGCGGACGUGGCUUGGCGUGUGGGGCGUGAGGACCAUGCAAGCCCGAGGCUUCGGCUCGGAUCAGUCCGAGAAUGUCGACCGGGGCGCGGGCUCCAUCCGGGAAGCCGGUGGGGCCUUCGGAAAGAGAGAGCAGGCUGAAGAGGAACGAUAUUUCCGGUGA\
) } def
/len { sequence length } bind def

/coor [
[135.55834961 167.00999451]
[134.97042847 159.52725220]
[137.04483032 152.24282837]
[126.99519348 141.10708618]
[116.94554901 129.97134399]
[103.22845459 134.27842712]
[88.94840240 132.60821533]
[81.15464020 145.42449951]
[73.36087799 158.24078369]
[71.56858063 167.22257996]
[65.32306671 171.20776367]
[64.49375153 187.00721741]
[51.15486908 193.63468933]
[43.14343262 206.31605530]
[43.03129196 222.71481323]
[28.64172935 230.58073425]
[14.77749729 221.82202148]
[15.70092678 205.44888306]
[30.46207237 198.30461121]
[38.47351074 185.62326050]
[38.72979355 170.73086548]
[52.64170456 163.19631958]
[60.54459000 150.44703674]
[68.33834839 137.63073730]
[76.13211060 124.81444550]
[73.04145050 121.41658020]
[70.43059540 117.63755035]
[68.34598541 113.54461670]
[66.82474518 109.21062469]
[51.84442139 109.97861481]
[36.86409378 110.74660492]
[21.88376617 111.51459503]
[6.90343904 112.28257751]
[-8.06978607 113.17842865]
[-23.03481674 114.20206451]
[-37.99984741 115.22570038]
[-51.23983765 123.88671875]
[-64.46545410 117.03599548]
[-79.43048096 118.05963135]
[-94.39551544 119.08326721]
[-109.36054993 120.10690308]
[-120.94541168 131.20512390]
[-136.82554626 128.92462158]
[-144.81907654 115.01480865]
[-138.79405212 100.14609528]
[-123.37235260 95.72449493]
[-110.38418579 105.14186859]
[-95.41915131 104.11823273]
[-80.45411682 103.09459686]
[-65.48908997 102.07096100]
[-53.31949997 93.48316193]
[-39.02348709 100.26066589]
[-24.05845451 99.23703003]
[-9.09342194 98.21339417]
[-2.61925650 94.61154175]
[6.13545036 97.30225372]
[21.11577797 96.53426361]
[36.09610367 95.76627350]
[51.07643127 94.99829102]
[66.05675507 94.23030090]
[70.82457733 78.59558105]
[82.70721436 66.23026276]
[99.65529633 60.30672073]
[98.12133026 45.38536072]
[96.58737183 30.46400261]
[95.05340576 15.54264259]
[93.51944733 0.62128341]
[91.98548126 -14.30007553]
[82.48176575 -23.04335594]
[81.52314758 -35.51921082]
[89.07984161 -44.98414230]
[87.80085754 -59.92951584]
[86.52187347 -74.87489319]
[85.24288177 -89.82026672]
[83.96389771 -104.76564026]
[82.68491364 -119.71101379]
[81.40592957 -134.65638733]
[79.11001587 -149.47962952]
[75.80788422 -164.11164856]
[72.50574493 -178.74366760]
[69.20361328 -193.37568665]
[65.90148163 -208.00770569]
[62.59934235 -222.63972473]
[51.08296204 -234.31469727]
[55.69587708 -250.05168152]
[71.69271851 -253.66183472]
[82.61730194 -241.43132019]
[77.23136139 -225.94184875]
[80.53349304 -211.30982971]
[83.83563232 -196.67782593]
[87.13776398 -182.04580688]
[90.43989563 -167.41378784]
[93.74203491 -152.78176880]
[101.06287384 -165.87394714]
[114.62508392 -172.28225708]
[129.38781738 -169.62483215]
[139.86398315 -158.88938904]
[142.15979004 -144.06611633]
[135.42190552 -130.66459656]
[122.15469360 -123.66593933]
[107.28936768 -125.67144775]
[96.35130310 -135.93536377]
[97.63028717 -120.98999786]
[98.90927124 -106.04462433]
[100.18826294 -91.09925079]
[101.46724701 -76.15387726]
[102.74623108 -61.20849991]
[104.02521515 -46.26312637]
[114.82728577 -32.44553757]
[106.90684509 -15.83403778]
[108.44080353 -0.91267884]
[109.97476959 14.00868034]
[111.50872803 28.93004036]
[113.04269409 43.85139847]
[114.57665253 58.77275848]
[127.65155792 66.12441254]
[141.19767761 59.68215942]
[154.74380493 53.23990631]
[161.16856384 46.71249008]
[168.57664490 46.80551910]
[182.23077393 40.59547806]
[195.88490295 34.38544083]
[209.53904724 28.17539978]
[218.62675476 14.52455139]
[234.97311401 15.83919716]
[241.76240540 30.76694298]
[232.01037598 43.95140076]
[215.74908447 41.82953644]
[202.09495544 48.03957367]
[188.44081116 54.24961472]
[174.78668213 60.45965195]
[161.18605042 66.78602600]
[147.63993835 73.22827911]
[134.09381104 79.67053223]
[137.03327942 101.47000885]
[128.08128357 119.92169952]
[138.13093567 131.05744934]
[148.18057251 142.19317627]
[170.78021240 147.39265442]
[174.90092468 169.46182251]
[185.86346436 179.70011902]
[196.82600403 189.93841553]
[207.78854370 200.17671204]
[218.75108337 210.41500854]
[229.71362305 220.65330505]
[240.67616272 230.89160156]
[251.91194153 223.89283752]
[264.49172974 219.80650330]
[277.67474365 218.86793518]
[290.68597412 221.12725830]
[302.76171875 226.44677734]
[313.19439697 234.50929260]
[321.37405396 244.83706665]
[326.82397461 256.82006836]
[329.22851562 269.75210571]
[328.45129395 282.87234497]
[324.54299927 295.41009521]
[317.73809814 306.63012695]
[328.16204834 317.41629028]
[344.06802368 321.40786743]
[348.30334473 337.25067139]
[336.51110840 348.64694214]
[320.82214355 343.87319946]
[317.37591553 327.84024048]
[306.95193481 317.05410767]
[291.97158813 324.78332520]
[275.32250977 327.53350830]
[258.61688232 325.02716064]
[243.47581482 317.49639893]
[231.37199402 305.66137695]
[223.48648071 290.66156006]
[220.59346008 273.94589233]
[222.98420715 257.13293457]
[230.43786621 241.85414124]
[219.47532654 231.61584473]
[208.51278687 221.37754822]
[197.55024719 211.13925171]
[186.58770752 200.90095520]
[175.62516785 190.66265869]
[164.66262817 180.42436218]
[157.79072571 182.45162964]
[150.57501221 181.95301819]
[143.92294312 178.94363403]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 138]
[4 137]
[5 136]
[7 25]
[8 24]
[9 23]
[11 22]
[13 20]
[14 19]
[29 60]
[30 59]
[31 58]
[32 57]
[33 56]
[34 54]
[35 53]
[36 52]
[38 50]
[39 49]
[40 48]
[41 47]
[63 115]
[64 114]
[65 113]
[66 112]
[67 111]
[68 110]
[71 108]
[72 107]
[73 106]
[74 105]
[75 104]
[76 103]
[77 102]
[78 93]
[79 92]
[80 91]
[81 90]
[82 89]
[83 88]
[116 134]
[117 133]
[118 132]
[120 131]
[121 130]
[122 129]
[123 128]
[140 180]
[141 179]
[142 178]
[143 177]
[144 176]
[145 175]
[146 174]
[158 165]
[159 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
