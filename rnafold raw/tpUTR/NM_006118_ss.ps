%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 11:07:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUUGUUAACCCUCAGAGGCCUUCAAGUCCUUUCCACCUCUCACCCAUUGCCCACCAUUAAUAAGCUUAGCUUCUCUUGCCACCUCAGGGGCUUGGAUAUGUGGAAUAGUGAACUGGGGCCAUGUCAGUUUGUCACUCACCCAAACUGACCAAUAAAACCUUUAUUUAUGCUAAUUUU\
) } def
/len { sequence length } bind def

/coor [
[34.13705444 355.96304321]
[31.43130493 341.20910645]
[30.65418625 326.22924805]
[31.81872177 311.27453613]
[34.90539551 296.59555054]
[39.86247635 282.43832397]
[46.60689545 269.04006958]
[55.02562714 256.62536621]
[64.97758484 245.40223694]
[76.29598999 235.55877686]
[88.79116058 227.25993347]
[102.25370026 220.64480591]
[116.45800018 215.82423401]
[131.16601562 212.87899780]
[146.13125610 211.85847473]
[161.10293579 212.77975464]
[175.83015442 215.62739563]
[190.07502747 220.35731506]
[180.38847351 208.90434265]
[170.70191956 197.45135498]
[161.01535034 185.99838257]
[151.32879639 174.54541016]
[144.58898926 171.45973206]
[141.57489014 162.80538940]
[132.09082031 151.18417358]
[117.29227448 149.94378662]
[107.50852966 138.29333496]
[108.90990448 122.77966309]
[99.42583466 111.15845490]
[89.84015656 99.62091827]
[80.15360260 88.16794586]
[70.36691284 76.80041504]
[60.48085403 65.51920319]
[50.59478760 54.23799133]
[40.70872498 42.95677948]
[30.82266235 31.67556572]
[20.93659973 20.39435196]
[9.49817467 24.23777390]
[-2.53141308 23.98712921]
[-13.73505497 19.69540215]
[-22.80087662 11.89024258]
[-28.67583847 1.50920212]
[-30.68803406 -10.21283722]
[-28.62345123 -21.89054871]
[-22.74848175 -32.15188217]
[-32.02713776 -43.93774414]
[-41.30578995 -55.72360992]
[-54.01585770 -58.02746201]
[-61.49983215 -68.05937958]
[-60.17384338 -80.10136414]
[-69.24423218 -92.04825592]
[-78.31461334 -103.99514008]
[-87.38499451 -115.94203186]
[-104.13794708 -109.03749847]
[-122.13522339 -107.03970337]
[-139.97058105 -110.09798431]
[-156.25228882 -117.96686554]
[-169.71173096 -130.02575684]
[-179.30227661 -145.32791138]
[-184.28065491 -162.67469788]
[-184.26451111 -180.70956421]
[-179.26187134 -198.02406311]
[-169.66986084 -213.26786804]
[-179.94573975 -224.19519043]
[-190.22161865 -235.12251282]
[-200.49749756 -246.04981995]
[-215.75292969 -253.44633484]
[-212.86859131 -270.15313721]
[-196.01623535 -272.00640869]
[-189.57019043 -256.32571411]
[-179.29431152 -245.39839172]
[-169.01841736 -234.47106934]
[-158.74253845 -223.54374695]
[-148.38290405 -229.83905029]
[-137.02276611 -234.08454895]
[-125.06349182 -236.12821960]
[-112.92795563 -235.89584351]
[-101.04566956 -233.39372253]
[-89.83750916 -228.70854187]
[-79.70087433 -222.00433350]
[-70.99552155 -213.51675415]
[-64.03086853 -203.54476929]
[-59.05494690 -192.44020081]
[-56.24560547 -180.59524536]
[-55.70412064 -168.42860413]
[-57.45156860 -156.37077332]
[-61.42800903 -144.84872437]
[-67.49452972 -134.27084351]
[-75.43811035 -125.01241302]
[-66.36772919 -113.06552887]
[-57.29734039 -101.11863708]
[-48.22695541 -89.17175293]
[-31.71259308 -83.27188110]
[-29.51992798 -65.00226593]
[-20.24127388 -53.21640015]
[-10.96261883 -41.43053818]
[6.80006742 -44.85199356]
[23.92984772 -38.78030777]
[35.68182755 -24.80621147]
[38.75471497 -6.72179985]
[32.21781158 10.50828934]
[42.10387421 21.78950119]
[51.98994064 33.07071304]
[61.87600327 44.35192871]
[71.76206207 55.63314056]
[81.64812469 66.91435242]
[88.44105530 69.88127136]
[91.60657501 78.48139191]
[101.29312897 89.93436432]
[108.51068878 93.57967377]
[111.04705048 101.67439270]
[120.53111267 113.29560089]
[136.01078796 115.03264618]
[145.46343994 126.95330811]
[143.71203613 141.70011902]
[153.19609070 153.32131958]
[162.78176880 164.85885620]
[172.46833801 176.31182861]
[182.15489197 187.76480103]
[191.84144592 199.21777344]
[201.52799988 210.67076111]
[205.52548218 211.44644165]
[208.91571045 213.27215576]
[211.45053101 215.86996460]
[226.38070679 217.31565857]
[241.31086731 218.76135254]
[256.24102783 220.20704651]
[271.17120361 221.65274048]
[286.10137939 223.09843445]
[301.03155518 224.54411316]
[315.96173096 225.98980713]
[330.89190674 227.43550110]
[340.36361694 215.25807190]
[354.92294312 210.15611267]
[369.92401123 213.75765991]
[380.58007812 224.91346741]
[383.49078369 240.06375122]
[377.72738647 254.37411499]
[365.12890625 263.27819824]
[349.71554565 263.93469238]
[336.40557861 256.13415527]
[329.44619751 242.36567688]
[314.51602173 240.91998291]
[299.58584595 239.47428894]
[284.65570068 238.02859497]
[269.72552490 236.58290100]
[254.79534912 235.13720703]
[239.86517334 233.69151306]
[224.93501282 232.24581909]
[210.00483704 230.80012512]
[221.99436951 239.81407166]
[232.71899414 250.30133057]
[241.99897766 262.08615112]
[249.67880249 274.97103882]
[255.62976074 288.74005127]
[259.75213623 303.16247559]
[261.97686768 317.99658203]
[262.26660156 332.99377441]
[260.61654663 347.90274048]
[257.05432129 362.47363281]
[251.63964844 376.46224976]
[244.46325684 389.63415527]
[235.64540100 401.76861572]
[225.33387756 412.66232300]
[213.70146179 422.13262939]
[200.94313049 430.02090454]
[187.27265930 436.19491577]
[172.91917419 440.55117798]
[158.12318420 443.01675415]
[143.13267517 443.55026245]
[128.19885254 442.14276123]
[113.57199097 438.81787109]
[99.49720764 433.63131714]
[86.21038055 426.66998291]
[73.93416595 418.05056763]
[62.87429810 407.91748047]
[53.21612549 396.44055176]
[45.12150574 383.81213379]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 121]
[19 120]
[20 119]
[21 118]
[22 117]
[24 116]
[25 115]
[28 112]
[29 111]
[30 109]
[31 108]
[32 106]
[33 105]
[34 104]
[35 103]
[36 102]
[37 101]
[45 96]
[46 95]
[47 94]
[50 92]
[51 91]
[52 90]
[53 89]
[63 73]
[64 72]
[65 71]
[66 70]
[124 150]
[125 149]
[126 148]
[127 147]
[128 146]
[129 145]
[130 144]
[131 143]
[132 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
