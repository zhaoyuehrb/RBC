%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Sep  9 23:50:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUACAAAAGCCCUUUCUCCCCACAAGCCUCUGGGUUUUCCCUUUACCAGUCUGUCCUCACUGCCAUCGCCACUACCAUCCUGUCACCAGUGGGACCUCUUUAAAACAAGCAGCCAACCAUUCUUUGAUGUAUCCCAUUCGCUCCAUGUUAACAUCCAAAACCAGCCUGGAUUUCAUACAUGGACUUCUGAUUAAAAGUGGCAGGUUGUGCAUGUUAA\
) } def
/len { sequence length } bind def

/coor [
[122.17987061 145.16244507]
[109.58609772 150.14685059]
[95.92540741 151.63427734]
[82.16470337 149.41455078]
[69.30577087 143.54367065]
[58.31240845 134.34701538]
[49.42582321 146.43124390]
[40.53923798 158.51547241]
[31.65265465 170.59970093]
[22.76607132 182.68392944]
[13.87948704 194.76815796]
[4.99290228 206.85238647]
[14.00260353 218.98979187]
[19.03289413 233.24418640]
[19.63648605 248.34806824]
[15.75970745 262.95840454]
[7.74727869 275.77606201]
[-3.68834043 285.66131592]
[-17.53030205 291.73513794]
[-32.54779053 293.45748901]
[-47.40545654 290.67520142]
[-60.78217316 283.63568115]
[-71.48848724 272.96487427]
[-78.57239532 259.61160278]
[-81.40401459 244.76325989]
[-79.73154449 229.74012756]
[-73.70371246 215.87806702]
[-63.85650253 204.40968323]
[-51.06552505 196.35473633]
[-36.46813965 192.42945862]
[-21.36234283 192.98287964]
[-7.09132767 197.96580505]
[1.79525638 185.88157654]
[10.68184090 173.79734802]
[19.56842422 161.71311951]
[28.45500946 149.62889099]
[37.34159470 137.54464722]
[46.22817612 125.46042633]
[44.83131409 118.09165192]
[31.23911285 124.43611145]
[17.64691162 130.78056335]
[8.14809608 142.38972473]
[-6.10022974 147.07855225]
[-20.63684273 143.37898254]
[-30.91025543 132.44934082]
[-33.70381165 117.71176910]
[-28.14283371 103.78067017]
[-15.96849155 95.01794434]
[-0.99263406 94.16723633]
[12.09527493 101.49446869]
[27.06642723 102.42429352]
[42.03758240 103.35411835]
[40.64071655 95.98534393]
[27.94807434 87.99179840]
[15.25543308 79.99824524]
[2.56279111 72.00469208]
[-6.36135483 70.08119965]
[-10.25400066 63.80338669]
[-22.83013344 55.62775803]
[-35.40626526 47.45212936]
[-47.98239899 39.27650452]
[-60.55853271 31.10087585]
[-71.55541229 41.41261673]
[-84.70085144 48.79237747]
[-99.23059082 52.81110764]
[-114.29988098 53.23516846]
[-129.03262329 50.03989792]
[-142.57228088 43.41107178]
[-154.13165283 33.73407364]
[-163.03871155 21.57151985]
[-168.77560425 7.63052130]
[-171.00880432 -7.27841091]
[-169.60847473 -22.28849030]
[-164.65600586 -36.52705002]
[-156.43936157 -49.16628265]
[-145.43623352 -59.47135544]
[-132.28631592 -66.84314728]
[-117.75415039 -70.85306549]
[-102.68460083 -71.26799011]
[-87.95380402 -68.06378937]
[-74.41817474 -61.42675400]
[-62.86466599 -51.74275208]
[-53.96498108 -39.57479858]
[-48.23653793 -25.63032532]
[-46.01237869 -10.72004128]
[-47.42181778 4.28918695]
[-52.38290405 18.52474213]
[-39.80677032 26.70037079]
[-27.23063850 34.87599945]
[-14.65450573 43.05162430]
[-2.07837319 51.22725296]
[10.55634212 59.31205368]
[23.24898338 67.30560303]
[35.94162369 75.29915619]
[48.63426590 83.29270172]
[55.97382355 70.00196075]
[66.59855652 59.45077515]
[79.57292938 52.40341187]
[93.79917145 49.32308960]
[108.10987091 50.34294128]
[121.36374664 55.26440811]
[132.53660583 63.58247757]
[140.80046082 74.53495026]
[145.58442688 87.17114258]
[160.48486328 85.44565582]
[175.38528442 83.72016907]
[190.28570557 81.99467468]
[205.91503906 69.25796509]
[223.30856323 77.71186066]
[238.15307617 75.55769348]
[252.99758911 73.40351868]
[267.84210205 71.24934387]
[282.68661499 69.09517670]
[297.53112793 66.94100189]
[306.98425293 54.56053543]
[322.06939697 52.58736420]
[333.81402588 61.67578506]
[348.65853882 59.52161026]
[363.50305176 57.36743927]
[378.34756470 55.21326828]
[393.19207764 53.05909348]
[401.23037720 48.73175430]
[408.26586914 50.98243713]
[423.13986206 49.04240799]
[438.01388550 47.10237503]
[452.88790894 45.16234207]
[467.76190186 43.22231293]
[482.63592529 41.28227997]
[483.98977661 30.69233131]
[487.52224731 20.62636566]
[493.07427979 11.52697659]
[500.39819336 3.79349375]
[509.16857910 -2.23555279]
[518.99682617 -6.29724550]
[529.44830322 -8.21574593]
[540.06170654 -7.90990162]
[550.36914062 -5.39667702]
[559.91711426 -0.79024768]
[568.28625488 5.70317888]
[575.10968018 13.79459381]
[580.08923340 23.12504768]
[583.00854492 33.28157425]
[598.00231934 32.84930801]
[612.99609375 32.41703796]
[627.98986816 31.98476791]
[642.98364258 31.55249786]
[657.97741699 31.12022781]
[672.97119141 30.68795967]
[680.67388916 16.05435944]
[694.62615967 7.35320377]
[710.96850586 6.87979126]
[725.23620605 14.66869164]
[733.57910156 28.51014137]
[748.56512451 27.86184883]
[763.55108643 27.21355629]
[778.53704834 26.56526566]
[793.52307129 25.91697311]
[801.20599365 12.53879070]
[814.91259766 5.45835972]
[830.26916504 6.93502092]
[842.37536621 16.49757576]
[847.36828613 31.09464836]
[843.65460205 46.06836700]
[832.41937256 56.64067078]
[817.24774170 59.43797684]
[802.98089600 53.56767654]
[794.17132568 40.90295792]
[779.18536377 41.55125046]
[764.19940186 42.19953918]
[749.21337891 42.84783173]
[734.22741699 43.49612427]
[728.73010254 55.99494934]
[718.33471680 64.94968414]
[705.03192139 68.57023621]
[691.40197754 66.09532166]
[680.11401367 57.95166397]
[673.40344238 45.68172836]
[658.40966797 46.11399841]
[643.41589355 46.54626846]
[628.42211914 46.97853851]
[613.42834473 47.41080856]
[598.43457031 47.84307480]
[583.44079590 48.27534485]
[577.40826416 66.92981720]
[564.68841553 81.88973236]
[547.19171143 90.87165833]
[527.56011963 92.49279785]
[508.76815796 86.48383331]
[493.67208862 73.73329163]
[484.57595825 56.15629196]
[469.70193481 58.09632492]
[454.82794189 60.03635788]
[439.95391846 61.97638702]
[425.07989502 63.91641998]
[410.20590210 65.85645294]
[395.34625244 67.90361023]
[380.50173950 70.05777740]
[365.65722656 72.21195221]
[350.81271362 74.36612701]
[335.96820068 76.52029419]
[327.29135132 88.57218933]
[312.26760864 90.96829224]
[299.68530273 81.78551483]
[284.84078979 83.93968964]
[269.99627686 86.09385681]
[255.15176392 88.24803162]
[240.30725098 90.40219879]
[225.46273804 92.55637360]
[220.11524963 101.25621033]
[210.66452026 105.67180634]
[200.12612915 104.12791443]
[192.01119995 96.89510345]
[177.11077881 98.62059021]
[162.21034241 100.34607697]
[147.30992126 102.07157135]
[145.78221130 114.73551178]
[140.87490845 126.72281647]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 38]
[7 37]
[8 36]
[9 35]
[10 34]
[11 33]
[12 32]
[53 95]
[54 94]
[55 93]
[56 92]
[58 91]
[59 90]
[60 89]
[61 88]
[62 87]
[104 215]
[105 214]
[106 213]
[107 212]
[109 208]
[110 207]
[111 206]
[112 205]
[113 204]
[114 203]
[117 200]
[118 199]
[119 198]
[120 197]
[121 196]
[123 195]
[124 194]
[125 193]
[126 192]
[127 191]
[128 190]
[142 183]
[143 182]
[144 181]
[145 180]
[146 179]
[147 178]
[148 177]
[153 171]
[154 170]
[155 169]
[156 168]
[157 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
