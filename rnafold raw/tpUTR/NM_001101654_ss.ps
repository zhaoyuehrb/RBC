%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 11:44:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCUCCUGGCCCGGACCCCUUACACCCUGCAUUCCAGAUGGGGGAGCCGCCCGGUGCCCGUGUGUCCGUUCCUCCACUCAUCUGUUUCUCCGGUUCUCCCUGUGCCCAUCCACCGGUUGACCGCCCAUCUGCCUUUAUCAGAGGGACUGUCCCCGUCGACAUGUUCAGUGCCUGGUGGGGCUGCGGAGUCCACUCAUCCUUGCCUCCUCUCCCUGGGUUUUGUUAAUAAAAUUUUGAAGAAACCAAGGAA\
) } def
/len { sequence length } bind def

/coor [
[263.18515015 370.44033813]
[261.12646484 385.29840088]
[259.06781006 400.15643311]
[265.73855591 415.13754272]
[255.88232422 428.24429321]
[239.63836670 425.99359131]
[233.71705627 410.70077515]
[244.20974731 398.09777832]
[246.26841736 383.23971558]
[248.32708740 368.38165283]
[238.32438660 333.24029541]
[254.57989502 311.90390015]
[244.90615845 300.44009399]
[235.23242188 288.97628784]
[228.53424072 285.89926147]
[225.51043701 277.30792236]
[215.98092651 265.72393799]
[206.45143127 254.13996887]
[196.92193604 242.55598450]
[194.17454529 242.13998413]
[191.42398071 240.62480164]
[189.08459473 238.00303650]
[187.56611633 234.41549683]
[187.22299194 230.14546204]
[178.28514099 218.09909058]
[169.34729004 206.05271912]
[154.62173462 204.13095093]
[145.38587952 192.04154968]
[147.50144958 176.60903931]
[138.56359863 164.56268311]
[129.62576294 152.51631165]
[120.68791199 140.46995544]
[111.75006866 128.42358398]
[72.22333527 131.23315430]
[49.14615250 85.65268707]
[34.19576645 86.87168121]
[19.24538040 88.09067535]
[4.29499388 89.30966949]
[-10.62019730 90.90248871]
[-25.49084663 92.86813354]
[-40.36149597 94.83378601]
[-55.23214722 96.79943085]
[-70.10279846 98.76508331]
[-84.97344971 100.73072815]
[-99.84409332 102.69638062]
[-114.71474457 104.66202545]
[-129.58540344 106.62767792]
[-144.41651917 108.87214661]
[-159.20289612 111.39466095]
[-173.98927307 113.91716766]
[-186.29174805 123.86501312]
[-200.13893127 118.37821198]
[-214.92530823 120.90071869]
[-229.71168518 123.42323303]
[-244.30844116 132.04708862]
[-256.63607788 120.40808868]
[-248.86454773 105.34024811]
[-232.23419189 108.63685608]
[-217.44781494 106.11434174]
[-202.66143799 103.59183502]
[-191.41658020 93.82441711]
[-176.51177979 99.13079071]
[-161.72540283 96.60828400]
[-146.93902588 94.08576965]
[-144.62115479 91.46115112]
[-140.92761230 89.81682587]
[-136.32739258 89.78246307]
[-131.55104065 91.75702667]
[-116.68039703 89.79137421]
[-101.80974579 87.82572937]
[-86.93909454 85.86007690]
[-72.06844330 83.89443207]
[-57.19779587 81.92877960]
[-42.32714462 79.96313477]
[-27.45649529 77.99748993]
[-12.58584595 76.03183746]
[-10.78038502 73.91959381]
[-8.04020405 72.38571930]
[-4.57805204 71.78583527]
[-0.73003983 72.39331055]
[3.07599974 74.35928345]
[18.02638626 73.14028931]
[32.97677231 71.92129517]
[47.92715836 70.70230103]
[51.60921097 64.16835022]
[36.61002350 64.32469177]
[28.97513008 51.41313171]
[36.33951569 38.34539032]
[51.33870316 38.18937683]
[58.97331238 51.10044861]
[62.65536118 44.56649780]
[55.95446014 31.14644241]
[49.25356293 17.72638512]
[42.55266190 4.30632782]
[35.85176086 -9.11372948]
[21.13126183 -14.20732021]
[14.52676964 -27.91262245]
[19.47344780 -41.91497803]
[12.77254772 -55.33503723]
[0.82253641 -60.14366531]
[-4.48813295 -71.43816376]
[-0.81141722 -82.94535065]
[-7.34382725 -96.44822693]
[-13.87623787 -109.95110321]
[-28.88343048 -114.90687561]
[-35.91613388 -129.06021118]
[-30.80197144 -144.01416016]
[-16.57508278 -150.89683533]
[-1.67602944 -145.62486267]
[5.05584383 -131.32598877]
[-0.37336335 -116.48351288]
[6.15904713 -102.98063660]
[12.69145679 -89.47776794]
[27.72206688 -80.39846039]
[26.19260406 -62.03593826]
[32.89350510 -48.61587906]
[47.05854797 -44.15638351]
[54.04539108 -30.64199448]
[49.27181625 -15.81462955]
[55.97271729 -2.39457250]
[62.67361832 11.02548504]
[69.37451935 24.44554138]
[76.07541656 37.86560059]
[90.96950531 36.08622360]
[94.32039642 21.46529579]
[97.67127991 6.84436798]
[96.53862000 -2.19284415]
[101.15668488 -7.93803692]
[104.69030762 -22.51588058]
[108.22392273 -37.09372330]
[111.75754547 -51.67156982]
[102.33844757 -64.15414429]
[103.19827271 -79.76807404]
[113.93103027 -91.14093018]
[129.46903992 -92.90280914]
[142.47573853 -84.22179413]
[146.80975342 -69.19680023]
[140.42468262 -54.92217255]
[126.33538818 -48.13795090]
[122.80176544 -33.56010437]
[119.26815033 -18.98226166]
[115.73452759 -4.40441751]
[112.29220581 10.19525433]
[108.94132233 24.81618309]
[105.59043121 39.43711090]
[118.88233185 46.38877106]
[128.97959900 35.29619980]
[139.00724792 24.14065742]
[148.96490479 12.92257690]
[158.92254639 1.70449805]
[168.88018799 -9.51358128]
[167.69107056 -25.27307129]
[178.05708313 -37.20291901]
[193.82826233 -38.22535706]
[205.64784241 -27.73378944]
[206.50347900 -11.95267868]
[195.88754272 -0.24467815]
[180.09826660 0.44406396]
[170.14062500 11.66214371]
[160.18298340 22.88022232]
[150.22532654 34.09830093]
[148.14089966 41.16858673]
[140.07217407 45.39347076]
[129.97489929 56.48604202]
[141.59304810 81.60755157]
[137.77110291 105.12610626]
[123.79643250 119.48574066]
[132.73428345 131.53210449]
[141.67211914 143.57847595]
[150.60997009 155.62483215]
[159.54782104 167.67120361]
[174.93087769 170.12052917]
[183.82351685 182.46456909]
[181.39366150 197.11488342]
[190.33151245 209.16123962]
[199.26934814 221.20761108]
[208.50592041 233.02648926]
[218.03541565 244.61047363]
[227.56491089 256.19445801]
[237.09442139 267.77844238]
[246.69622803 279.30255127]
[256.36996460 290.76635742]
[266.04370117 302.23016357]
[293.98849487 291.92626953]
[325.90911865 317.98693848]
[340.62774658 320.87875366]
[355.34634399 323.77056885]
[370.06494141 326.66238403]
[381.17166138 320.13806152]
[393.35812378 322.83227539]
[400.22326660 332.77227783]
[414.90451050 335.84808350]
[426.31472778 325.33206177]
[441.73083496 323.56466675]
[455.22497559 331.22543335]
[461.60842896 345.36868286]
[458.42657471 360.55603027]
[446.90295410 370.94763184]
[431.46859741 372.54769897]
[418.05831909 364.74099731]
[411.82870483 350.52932739]
[397.14743042 347.45352173]
[380.77764893 353.80831909]
[367.17312622 341.38101196]
[352.45452881 338.48916626]
[337.73593140 335.59735107]
[323.01730347 332.70553589]
[318.66226196 338.81155396]
[330.87414551 347.52188110]
[322.16360474 359.73361206]
[309.95211792 351.02359009]
[305.59707642 357.12960815]
[313.12414551 370.10430908]
[320.65124512 383.07901001]
[334.26885986 391.13327026]
[333.96286011 406.02474976]
[341.48992920 418.99945068]
[349.01702881 431.97415161]
[356.54409790 444.94885254]
[364.07116699 457.92358398]
[371.59826660 470.89828491]
[385.21588135 478.95254517]
[384.90988159 493.84399414]
[392.43695068 506.81872559]
[399.96405029 519.79339600]
[407.49111938 532.76812744]
[422.92678833 535.27301025]
[433.10189819 547.14739990]
[433.21203613 562.78460693]
[423.20526123 574.80120850]
[407.80642700 577.52331543]
[394.28640747 569.66564941]
[389.02893066 554.93835449]
[394.51641846 540.29522705]
[386.98934937 527.32049561]
[379.46224976 514.34576416]
[371.93518066 501.37109375]
[358.85595703 494.24487305]
[358.62356567 478.42535400]
[351.09646606 465.45065308]
[343.56939697 452.47595215]
[336.04229736 439.50125122]
[328.51522827 426.52651978]
[320.98815918 413.55181885]
[307.90890503 406.42559814]
[307.67651367 390.60610962]
[300.14944458 377.63140869]
[292.62237549 364.65667725]
[285.26306152 366.10260010]
[280.40817261 380.29519653]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 10]
[2 9]
[3 8]
[12 183]
[13 182]
[14 181]
[16 180]
[17 179]
[18 178]
[19 177]
[24 176]
[25 175]
[26 174]
[29 171]
[30 170]
[31 169]
[32 168]
[33 167]
[35 84]
[36 83]
[37 82]
[38 81]
[39 76]
[40 75]
[41 74]
[42 73]
[43 72]
[44 71]
[45 70]
[46 69]
[47 68]
[48 64]
[49 63]
[50 62]
[52 60]
[53 59]
[54 58]
[91 123]
[92 122]
[93 121]
[94 120]
[95 119]
[98 116]
[99 115]
[102 113]
[103 112]
[104 111]
[124 145]
[125 144]
[126 143]
[128 142]
[129 141]
[130 140]
[131 139]
[146 164]
[147 163]
[148 161]
[149 160]
[150 159]
[151 158]
[185 207]
[186 206]
[187 205]
[188 204]
[191 202]
[192 201]
[212 248]
[213 247]
[214 246]
[216 244]
[217 243]
[218 242]
[219 241]
[220 240]
[221 239]
[223 237]
[224 236]
[225 235]
[226 234]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
