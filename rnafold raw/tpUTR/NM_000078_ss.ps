%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 14:31:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUCCAAGGAGGUCGGGAUGGGGCUUGUAGCAGAAGGCAAGCACCAGGCUCACAGCUGGAACCCUGGUGUCUCCUCCAGCGUGGUGGAAGUUGGGUUAGGAGUACGGAGAUGGAGAUUGGCUCCCAACUCCUCCCUAUCCUAAAGGCCCACUGGCAUUAAAGUGCUGUAUCCAAG\
) } def
/len { sequence length } bind def

/coor [
[56.69016266 374.70190430]
[57.12976074 359.70834351]
[61.90238571 345.48785400]
[70.59710693 333.26486206]
[82.46529388 324.09173584]
[96.48509216 318.75833130]
[111.44937897 317.72384644]
[126.06970978 321.07733154]
[139.08726501 328.53009033]
[149.38031006 339.43911743]
[145.73162842 324.88964844]
[132.86181641 317.47994995]
[128.95425415 302.77670288]
[136.81350708 289.32788086]
[133.16481018 274.77841187]
[129.51611328 260.22894287]
[125.86742401 245.67948914]
[121.83700562 231.23110962]
[117.42765808 216.89382935]
[113.01831055 202.55654907]
[108.60897064 188.21925354]
[104.19962311 173.88197327]
[99.79027557 159.54469299]
[95.38092804 145.20741272]
[90.97158051 130.87013245]
[77.62445831 124.02511597]
[63.40821075 128.81033325]
[49.19196320 133.59555054]
[34.97571945 138.38078308]
[20.75947189 143.16600037]
[6.54322529 147.95121765]
[2.03253317 162.79821777]
[-10.36381721 172.13150024]
[-25.87917709 172.36222839]
[-38.54757309 163.40167236]
[-43.49774933 148.69537354]
[-38.82626343 133.89817810]
[-26.32939148 124.69992828]
[-10.81244183 124.63752747]
[1.75800395 133.73497009]
[15.97424984 128.94975281]
[30.19049644 124.16452789]
[44.40674210 119.37931061]
[58.62298965 114.59408569]
[72.83923340 109.80886841]
[74.02268219 94.85562134]
[60.73614120 87.89374542]
[47.44959641 80.93186188]
[34.16305542 73.96998596]
[20.87651062 67.00810242]
[7.58996820 60.04622269]
[-12.47229385 61.80719757]
[-22.15259933 45.08813477]
[-35.67528152 38.59682465]
[-49.19796371 32.10551834]
[-65.49968719 33.89036942]
[-74.97675323 20.50689507]
[-67.87995911 5.72286606]
[-51.50988007 4.74682331]
[-42.70665359 18.58283615]
[-29.18397331 25.07414436]
[-15.66129112 31.56545448]
[-6.33005095 27.31481552]
[4.01494694 28.95178413]
[11.90261459 36.17250824]
[14.55184841 46.75967789]
[27.83839226 53.72155762]
[41.12493515 60.68344116]
[54.41147614 67.64531708]
[67.69802094 74.60720062]
[80.98456573 81.56908417]
[93.88629913 73.91760254]
[94.14955139 58.91991425]
[94.28118134 43.92049026]
[94.28118134 28.92049026]
[94.28118134 13.92049122]
[94.28118134 -1.07950890]
[94.28118134 -16.07950974]
[93.88632965 -31.07431030]
[93.09690857 -46.05352402]
[92.30748749 -61.03273773]
[91.51807404 -76.01194763]
[90.72865295 -90.99116516]
[77.27869415 -98.54776001]
[70.06946564 -112.18706512]
[71.40141296 -127.55682373]
[80.84951782 -139.75260925]
[95.39891052 -144.88276672]
[110.40694427 -141.31031799]
[121.08460999 -130.17518616]
[124.02469635 -115.03056335]
[118.28903961 -100.70905304]
[105.70786285 -91.78058624]
[106.49728394 -76.80136871]
[107.28670502 -61.82215881]
[108.07612610 -46.84294510]
[108.86554718 -31.86373138]
[111.25551605 -29.23415565]
[112.47553253 -25.30571747]
[111.92436981 -20.64800453]
[109.28118134 -16.07950974]
[109.28118134 -1.07950890]
[109.28118134 13.92049122]
[109.28118134 28.92049026]
[109.28118134 43.92049026]
[112.43460083 50.62887192]
[109.14723969 59.18316269]
[108.88399506 74.18085480]
[121.50926208 82.28039551]
[135.03193665 75.78908539]
[148.55462646 69.29777527]
[162.07730103 62.80646896]
[167.56039429 46.20921326]
[183.03973389 38.84432983]
[198.74603271 44.82014084]
[212.15270996 38.09251022]
[225.55938721 31.36487770]
[238.96606445 24.63724709]
[245.36167908 9.92413807]
[260.88931274 5.89025736]
[273.63748169 15.63005352]
[273.82690430 31.67198753]
[261.31222534 41.71006393]
[245.69369507 38.04392624]
[232.28701782 44.77155685]
[218.88034058 51.49918747]
[205.47366333 58.22681808]
[203.16076660 70.91992950]
[193.81356812 80.09372711]
[180.69493103 82.23136139]
[168.56861877 76.32914734]
[155.04592896 82.82045746]
[141.52325439 89.31176758]
[128.00056458 95.80307770]
[126.10050201 109.77700043]
[117.77951050 120.88744354]
[105.30886078 126.46078491]
[109.71820831 140.79806519]
[114.12755585 155.13534546]
[118.53690338 169.47262573]
[122.94625092 183.80990601]
[127.35559845 198.14720154]
[131.76493835 212.48448181]
[136.17428589 226.82176208]
[140.04364014 230.41143799]
[141.93962097 234.70133972]
[141.92828369 238.81484985]
[140.41688538 242.03079224]
[144.06558228 256.58026123]
[147.71427917 271.12973022]
[151.36297607 285.67919922]
[164.63839722 293.82788086]
[168.13142395 308.63510132]
[160.28109741 321.24096680]
[163.92977905 335.79043579]
[169.94252014 349.53259277]
[178.15254211 362.08630371]
[186.36256409 374.63998413]
[194.57258606 387.19369507]
[202.78260803 399.74740601]
[217.65435791 406.65847778]
[218.83535767 423.01504517]
[205.11068726 431.99087524]
[190.59910583 424.35238647]
[190.22889709 407.95742798]
[182.01887512 395.40371704]
[173.80885315 382.85000610]
[165.59883118 370.29632568]
[157.38882446 357.74261475]
[158.41580200 372.70739746]
[155.05496216 387.32604980]
[147.59567261 400.33984375]
[136.68020630 410.62832642]
[123.24837494 417.30560303]
[108.45668030 419.79675293]
[93.57871246 417.88729858]
[79.89546967 411.74166870]
[68.58509827 401.88897705]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 155]
[11 154]
[14 151]
[15 150]
[16 149]
[17 148]
[18 144]
[19 143]
[20 142]
[21 141]
[22 140]
[23 139]
[24 138]
[25 137]
[26 45]
[27 44]
[28 43]
[29 42]
[30 41]
[31 40]
[46 71]
[47 70]
[48 69]
[49 68]
[50 67]
[51 66]
[53 62]
[54 61]
[55 60]
[72 108]
[73 107]
[74 105]
[75 104]
[76 103]
[77 102]
[78 101]
[79 97]
[80 96]
[81 95]
[82 94]
[83 93]
[109 134]
[110 133]
[111 132]
[112 131]
[115 127]
[116 126]
[117 125]
[118 124]
[156 169]
[157 168]
[158 167]
[159 166]
[160 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
