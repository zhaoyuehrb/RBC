%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 05:44:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUCUGCUUUAUCUUUACCUAUCCAGAUUUGCUUCUUAGUUACUCACGGUAUACUAUUUCCACAGAUGAUUCAUCAGCAUCUGUCCUCUAGAACACACGGAAGUGAAGAUUCCUGAGGAUCUAACUUGCAGUUGGACACUAUGUUACAUACUCUAAUAUAGUAGUGAAAGUCAUUUCUUUGUAUUCCAAGUGGAGGAG\
) } def
/len { sequence length } bind def

/coor [
[69.30635834 265.82305908]
[69.07074738 250.82490540]
[68.83513641 235.82676697]
[68.59952545 220.82861328]
[68.36391449 205.83045959]
[68.12831116 190.83230591]
[67.89270020 175.83416748]
[67.65708923 160.83601379]
[67.42147827 145.83786011]
[67.18586731 130.83972168]
[63.87736893 145.47029114]
[54.73680878 157.36357117]
[41.45034409 164.32560730]
[26.46893120 165.07209778]
[12.55618858 159.46536255]
[2.27859855 148.53965759]
[-2.46793294 134.31044006]
[-0.80781323 119.40258789]
[6.95271540 106.56614685]
[19.38206863 98.16905975]
[34.18740463 95.76032257]
[48.63758850 99.78428650]
[60.06513596 109.49620819]
[51.24835968 97.36095428]
[42.43157959 85.22570038]
[33.61479950 73.09044647]
[24.79802132 60.95518875]
[18.91066360 57.91516113]
[15.90067005 53.08142471]
[15.90198898 48.29741669]
[7.47073889 35.89120865]
[-0.96051186 23.48499870]
[-9.39176273 11.07879066]
[-24.78421593 10.46353912]
[-36.72338486 1.01315820]
[-40.76074600 -13.48386478]
[-35.54988098 -27.41170883]
[-43.98112869 -39.81791687]
[-52.41238022 -52.22412491]
[-60.84363174 -64.63033295]
[-76.23608398 -65.24559021]
[-88.17525482 -74.69596863]
[-92.21261597 -89.19299316]
[-87.00174713 -103.12083435]
[-95.43299866 -115.52704620]
[-103.86425018 -127.93325043]
[-112.29550171 -140.33946228]
[-119.71425629 -145.68429565]
[-120.75995636 -153.00741577]
[-128.99530029 -165.54452515]
[-145.10144043 -163.26654053]
[-160.53404236 -168.22059631]
[-172.22077942 -179.36715698]
[-177.85830688 -194.43925476]
[-176.36614990 -210.40342712]
[-168.09335327 -224.07019043]
[-176.52461243 -236.47639465]
[-184.95585632 -248.88259888]
[-193.38711548 -261.28881836]
[-201.81835938 -273.69500732]
[-210.24961853 -286.10122681]
[-218.68086243 -298.50744629]
[-228.42257690 -309.91351318]
[-239.35711670 -320.18173218]
[-250.29164124 -330.44995117]
[-261.22616577 -340.71813965]
[-272.16070557 -350.98635864]
[-283.09521484 -361.25454712]
[-294.02975464 -371.52276611]
[-308.96878052 -367.67190552]
[-323.61105347 -372.53067017]
[-333.28424072 -384.54867554]
[-334.90173340 -399.89102173]
[-327.94732666 -413.66198730]
[-314.64019775 -421.46734619]
[-299.22656250 -420.81643677]
[-286.62487793 -411.91693115]
[-280.85629272 -397.60864258]
[-283.76156616 -382.45730591]
[-272.82702637 -372.18908691]
[-261.89248657 -361.92086792]
[-250.95796204 -351.65267944]
[-240.02343750 -341.38446045]
[-229.08889771 -331.11627197]
[-218.15437317 -320.84805298]
[-222.24670410 -335.27902222]
[-220.58552551 -350.18676758]
[-213.41693115 -363.36291504]
[-201.80281067 -372.85565186]
[-187.46362305 -377.25881958]
[-172.52348328 -375.92010498]
[-159.19552612 -369.03784180]
[-149.45407104 -357.63153076]
[-144.74215698 -343.39080811]
[-145.75778198 -328.42523193]
[-152.35049438 -314.95169067]
[-163.54368591 -304.96609497]
[-177.67927551 -299.94760132]
[-192.66329956 -300.63967896]
[-206.27465820 -306.93869019]
[-197.84339905 -294.53247070]
[-189.41215515 -282.12628174]
[-180.98089600 -269.72006226]
[-172.54965210 -257.31384277]
[-164.11839294 -244.90763855]
[-155.68714905 -232.50143433]
[-142.07832336 -235.22120667]
[-128.41796875 -232.53858948]
[-116.77611542 -224.82644653]
[-108.92975616 -213.22229004]
[-106.09159088 -199.46066284]
[-108.72274780 -185.61384583]
[-116.45819092 -173.77986145]
[-108.22284698 -161.24275208]
[-99.88928986 -148.77070618]
[-91.45803833 -136.36450195]
[-83.02678680 -123.95829773]
[-74.59554291 -111.55208588]
[-59.72750854 -111.26984406]
[-47.73477173 -102.17929077]
[-43.34312820 -87.59961700]
[-48.43742371 -73.06158447]
[-40.00617218 -60.65537643]
[-31.57492065 -48.24916840]
[-23.14367104 -35.84296036]
[-8.27564049 -35.56072235]
[3.71709847 -26.47016525]
[8.10873985 -11.89049149]
[3.01444602 2.64754009]
[11.44569683 15.05374908]
[19.87694740 27.45995712]
[28.30819893 39.86616516]
[36.93327713 52.13841248]
[45.75005722 64.27366638]
[54.56683350 76.40892029]
[63.38361359 88.54417419]
[72.20039368 100.67942810]
[83.58529663 66.10327911]
[130.36604309 63.45286560]
[145.35864258 63.92403030]
[160.35122681 64.39518738]
[175.34382629 64.86634827]
[190.33642578 65.33750916]
[205.32902527 65.80867767]
[220.32162476 66.27983856]
[235.31422424 66.75099945]
[250.30682373 67.22216034]
[260.59420776 55.44490051]
[276.05294800 53.08668518]
[289.38391113 61.26099777]
[294.29263306 76.10816956]
[288.46133423 90.61782837]
[274.64340210 97.93894958]
[259.36325073 94.61472321]
[249.83566284 82.21475983]
[234.84306335 81.74359894]
[219.85046387 81.27243042]
[204.85786438 80.80126953]
[189.86526489 80.33010864]
[174.87266541 79.85894775]
[159.88006592 79.38778687]
[144.88746643 78.91662598]
[129.89488220 78.44546509]
[127.18879700 85.44026184]
[136.59829712 97.12192535]
[121.77663422 99.42984009]
[119.07054901 106.42463684]
[130.47663879 116.16635895]
[141.88273621 125.90808105]
[153.28881836 135.64979553]
[169.50318909 138.10466003]
[175.23164368 153.47074890]
[164.58125305 165.94075012]
[148.50820923 162.68659973]
[143.54710388 147.05589294]
[132.14100647 137.31416321]
[120.73491669 127.57244873]
[109.32882690 117.83072662]
[102.54262543 121.02407074]
[108.92931366 134.59648132]
[115.31600952 148.16888428]
[121.70269775 161.74128723]
[128.08917236 175.31379700]
[114.51657104 181.70005798]
[108.13028717 168.12797546]
[101.74359894 154.55557251]
[95.35691071 140.98316956]
[88.97022247 127.41075897]
[82.18402100 130.60411072]
[82.41962433 145.60224915]
[82.65523529 160.60040283]
[82.89084625 175.59855652]
[83.12645721 190.59671021]
[83.36206818 205.59484863]
[83.59767914 220.59300232]
[83.83329010 235.59115601]
[84.06889343 250.58929443]
[84.30450439 265.58746338]
[86.79756165 284.80813599]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 198]
[2 197]
[3 196]
[4 195]
[5 194]
[6 193]
[7 192]
[8 191]
[9 190]
[10 189]
[23 137]
[24 136]
[25 135]
[26 134]
[27 133]
[30 132]
[31 131]
[32 130]
[33 129]
[37 125]
[38 124]
[39 123]
[40 122]
[44 118]
[45 117]
[46 116]
[47 115]
[49 114]
[50 113]
[56 106]
[57 105]
[58 104]
[59 103]
[60 102]
[61 101]
[62 100]
[63 85]
[64 84]
[65 83]
[66 82]
[67 81]
[68 80]
[69 79]
[139 163]
[140 162]
[141 161]
[142 160]
[143 159]
[144 158]
[145 157]
[146 156]
[147 155]
[167 178]
[168 177]
[169 176]
[170 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
