%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 14:41:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCAAUUCUUUGGGCCUACUCCCCGACUCCCUCCCUGAAGAUGCUUCUCAGGCUCCCAUGAGAAAACAAUCUAUACUUAUCUUCCGUGAAUAAACAAGUGUCACUCUACCUACCACA\
) } def
/len { sequence length } bind def

/coor [
[76.73625183 233.75154114]
[66.15240479 223.12222290]
[58.69640350 210.10653687]
[54.88114929 195.59986877]
[54.96910095 180.60011292]
[58.95420837 166.13917542]
[66.56233215 153.21182251]
[77.26808167 142.70886230]
[83.90648651 129.25778198]
[90.54489899 115.80670929]
[78.27035522 124.42852020]
[65.99581146 133.05033875]
[53.72127151 141.67214966]
[41.44673157 150.29396057]
[40.28722382 165.88848877]
[29.33804703 177.05314636]
[13.76906586 178.51631165]
[0.93147856 169.58712769]
[-3.11319995 154.48167419]
[3.54480433 140.33229065]
[17.76178551 133.81988525]
[32.82492065 138.01940918]
[45.09946060 129.39759827]
[57.37400436 120.77578735]
[69.64854431 112.15397644]
[81.92308807 103.53216553]
[68.22128296 109.63631439]
[53.27256393 108.39705658]
[40.76297379 100.11996460]
[33.77713013 86.84600830]
[34.03759384 71.84826660]
[41.48014069 58.82488251]
[54.26959229 50.98715973]
[69.25232697 50.26771164]
[82.73390961 56.84394836]
[91.39006042 69.09429932]
[93.08650970 83.99687195]
[94.28330231 69.04468536]
[95.48009491 54.09251022]
[96.67688751 39.14032745]
[97.87368011 24.18814850]
[99.07047272 9.23596859]
[100.26726532 -5.71621180]
[96.00389862 -14.87586403]
[98.85280609 -23.38779068]
[95.29290771 -37.95923996]
[91.73300171 -52.53068542]
[88.17310333 -67.10213470]
[84.61320496 -81.67358398]
[81.05330658 -96.24503326]
[77.29975128 -110.76779938]
[73.35321045 -125.23931885]
[63.35258102 -138.92959595]
[73.73938751 -152.32925415]
[89.49073029 -146.05775452]
[87.82472992 -129.18585205]
[91.77127075 -114.71434021]
[96.62898254 -109.01625824]
[95.62475586 -99.80493164]
[99.18465424 -85.23348236]
[102.74455261 -70.66203308]
[106.30445099 -56.09058762]
[109.86435699 -41.51913834]
[113.42425537 -26.94769096]
[119.66502380 -40.58780670]
[130.77552795 -50.66534042]
[144.95802307 -55.54968262]
[159.91769409 -54.45052338]
[173.23399353 -47.54570770]
[182.75224304 -35.95248032]
[186.93234253 -21.54669380]
[185.09793091 -6.65928459]
[177.54582214 6.30087328]
[165.49800110 15.23675060]
[150.90386963 18.70247078]
[136.12483215 16.13725853]
[123.55224609 7.95617962]
[115.21944427 -4.51942015]
[114.02265167 10.43275928]
[112.82585907 25.38493919]
[111.62906647 40.33712006]
[110.43227386 55.28929901]
[109.23548126 70.24147797]
[108.03869629 85.19365692]
[114.63654327 90.56449890]
[117.93441772 98.70988464]
[132.04492188 103.79846191]
[146.15542603 108.88704681]
[160.26593018 113.97563171]
[171.51127625 103.59291840]
[186.29663086 99.63666534]
[201.22442627 103.01598358]
[212.86434937 112.95433044]
[218.54164124 127.16794586]
[216.95170593 142.39065552]
[208.45988464 155.12437439]
[195.01756287 162.44299316]
[179.71365356 162.66476440]
[166.06491089 155.73870850]
[157.20770264 143.25637817]
[155.17735291 128.08613586]
[141.06684875 122.99755096]
[126.95633698 117.90896606]
[112.84583282 112.82038116]
[122.78936768 124.05097198]
[132.73291016 135.28155518]
[145.82684326 142.59927368]
[156.56767273 153.06991577]
[164.21652222 165.97322083]
[168.24720764 180.42152405]
[168.38246155 195.42091370]
[164.61296082 209.93955994]
[157.19804382 222.97868347]
[146.64776611 233.64131165]
[133.68791199 241.19395447]
[119.21002197 245.11703491]
[104.21004486 245.14068604]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 26]
[11 25]
[12 24]
[13 23]
[14 22]
[37 84]
[38 83]
[39 82]
[40 81]
[41 80]
[42 79]
[43 78]
[45 64]
[46 63]
[47 62]
[48 61]
[49 60]
[50 59]
[51 57]
[52 56]
[86 104]
[87 103]
[88 102]
[89 101]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
