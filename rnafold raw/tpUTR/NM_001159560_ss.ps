%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 01:10:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCUUGAGGUUAAUAAUCAUAAAAUCCCUGCUUUCUAAAUUCGCAUUUUUCCUGGUGUACCUUUAAUGUGAACCUUUUGGCAUUCUUCUGCAAUUUUCUGAUUGGAGAUUGCAUUUUGACCUAGUCUGUAAGUUUUUCUGUCAGAAGAGGACUUUCAUCAACUUUCAUGGAAAGAUGUUUAUUGCAUACUGUAAAGUUAAUAAAGCAAUUUAAAAGCAGUCUA\
) } def
/len { sequence length } bind def

/coor [
[92.89799500 644.36907959]
[92.21800232 659.39746094]
[88.78790283 674.04492188]
[82.72451019 687.81268311]
[74.23435974 700.23168945]
[63.60660553 710.87902832]
[51.20323944 719.39202881]
[37.44670486 725.48071289]
[22.80554962 728.93774414]
[7.77844429 729.64538574]
[-7.12279272 727.57952881]
[-21.39063072 722.81054688]
[-34.53911209 715.50079346]
[-46.12040710 705.89935303]
[-55.74005890 694.33312988]
[-63.07042694 681.19616699]
[-67.86183929 666.93585205]
[-69.95110321 652.03784180]
[-69.26705933 637.00964355]
[-65.83300781 622.36309814]
[-59.76591110 608.59704590]
[-51.27240753 596.18029785]
[-40.64178848 585.53582764]
[-28.23612404 577.02618408]
[-14.47795010 570.94116211]
[0.16413659 567.48803711]
[15.19143200 566.78448486]
[30.09211159 568.85437012]
[34.84724808 554.62799072]
[39.60238266 540.40167236]
[44.35752106 526.17535400]
[49.11265564 511.94900513]
[53.86779404 497.72265625]
[58.62292862 483.49633789]
[57.76301575 476.16302490]
[63.54579544 469.10464478]
[68.49998474 454.94638062]
[73.45417023 440.78811646]
[78.40835571 426.62988281]
[83.36254120 412.47161865]
[88.31672668 398.31338501]
[99.60124207 374.83563232]
[118.23820496 369.92672729]
[117.60726929 354.94000244]
[116.97633362 339.95327759]
[116.34539795 324.96655273]
[115.71445465 309.97982788]
[115.08351898 294.99310303]
[114.45258331 280.00637817]
[113.82164764 265.01965332]
[113.19070435 250.03292847]
[112.55976868 235.04620361]
[111.08951569 220.11843872]
[108.78456116 205.29658508]
[106.47961426 190.47473145]
[104.17465973 175.65289307]
[101.86971283 160.83103943]
[86.78477478 159.40765381]
[72.51896667 154.30197144]
[59.95653152 145.83047485]
[49.87612534 134.51823425]
[42.90257263 121.06643677]
[39.46811295 106.30886841]
[39.78563309 91.16026306]
[43.83544540 76.55957031]
[30.81014252 69.12037659]
[17.78484154 61.68119049]
[4.75954056 54.24200058]
[-8.26576042 46.80281448]
[-24.08646965 46.67738724]
[-31.30095863 33.64663696]
[-44.32625961 26.20744705]
[-60.71376801 26.82515144]
[-69.21221924 12.79987240]
[-61.07912445 -1.44038343]
[-44.68112564 -1.24646223]
[-36.88706970 13.18214703]
[-23.86176872 20.62133408]
[-8.97271729 20.21466255]
[-0.82657242 33.77751160]
[12.19872856 41.21670151]
[25.22402954 48.65588760]
[38.24933243 56.09507751]
[51.27463150 63.53426361]
[55.12751770 58.88587189]
[59.42201614 54.64210510]
[64.11586761 50.84473419]
[69.16287231 47.53112411]
[74.51336670 44.73389435]
[69.95821381 30.44226646]
[65.40306091 16.15063858]
[60.84791183 1.85901213]
[56.29275894 -12.43261433]
[51.73760986 -26.72424126]
[47.18245697 -41.01586914]
[42.62730789 -55.30749512]
[38.07215500 -69.59912109]
[33.51700592 -83.89074707]
[19.98094368 -92.50205231]
[18.41727638 -108.46872711]
[30.02551460 -119.54249573]
[45.90081024 -117.22851562]
[53.86499786 -103.30187225]
[47.80863190 -88.44589996]
[52.36378098 -74.15427399]
[56.91893387 -59.86264801]
[61.47408676 -45.57101822]
[66.02923584 -31.27939224]
[70.58438873 -16.98776627]
[75.13954163 -2.69613910]
[79.69468689 11.59548759]
[84.24983978 25.88711548]
[88.80499268 40.17874146]
[94.89027405 39.35511780]
[101.02757263 39.14891052]
[107.15441132 39.56221771]
[113.20840454 40.59083176]
[119.12793732 42.22428513]
[124.85272217 44.44594193]
[130.32449341 47.23318863]
[139.34425354 35.24803162]
[148.36399841 23.26287270]
[146.35368347 7.81630898]
[155.67172241 -4.20985508]
[170.41004944 -6.03119946]
[179.42980957 -18.01635742]
[188.44956970 -30.00151443]
[197.46932983 -41.98667145]
[195.45899963 -57.43323517]
[204.77705383 -69.45939636]
[219.51538086 -71.28074646]
[228.53512573 -83.26589966]
[227.72525024 -99.28849792]
[239.84219360 -109.80321503]
[255.59088135 -106.74406433]
[262.89025879 -92.45776367]
[256.14089966 -77.90353394]
[240.52029419 -74.24614716]
[231.50053406 -62.26098633]
[233.83045959 -47.59445953]
[224.85388184 -35.31131744]
[209.45448303 -32.96691513]
[200.43472290 -20.98175812]
[191.41496277 -8.99660015]
[182.39521790 2.98855686]
[184.72514343 17.65508461]
[175.74856567 29.93822670]
[160.34916687 32.28263092]
[151.32940674 44.26778793]
[142.30964661 56.25294495]
[154.72344971 73.36814880]
[160.53256226 93.69760895]
[159.03587341 114.78771973]
[150.41403198 134.09306335]
[135.70761108 149.28364563]
[116.69155884 158.52609253]
[118.99651337 173.34793091]
[121.30146027 188.16978455]
[123.60641479 202.99163818]
[125.91136169 217.81347656]
[133.86778259 205.09753418]
[147.73789978 199.38613892]
[162.34132385 202.81246948]
[172.22383118 214.09680176]
[173.69435120 229.02453613]
[166.20368958 242.02030945]
[152.54953003 248.23028564]
[137.83157349 245.33509827]
[127.54649353 234.41526794]
[128.17742920 249.40199280]
[128.80836487 264.38870239]
[129.43930054 279.37542725]
[130.07025146 294.36215210]
[130.70118713 309.34887695]
[131.33212280 324.33560181]
[131.96305847 339.32232666]
[132.59399414 354.30905151]
[133.22492981 369.29577637]
[140.20294189 382.57388306]
[152.18809509 391.59362793]
[164.17326355 400.61337280]
[176.15841675 409.63314819]
[188.14356995 418.65289307]
[200.12872314 427.67263794]
[205.29153442 428.30249023]
[209.30006409 430.61383057]
[211.70793152 433.88781738]
[212.41763306 437.33251953]
[224.01280212 446.84841919]
[235.60795593 456.36431885]
[251.86738586 458.50036621]
[257.89645386 473.75100708]
[247.49293518 486.42773438]
[231.35910034 483.48977661]
[226.09205627 467.95947266]
[214.49690247 458.44357300]
[202.90173340 448.92767334]
[191.10897827 439.65780640]
[179.12380981 430.63806152]
[167.13865662 421.61828613]
[155.15350342 412.59854126]
[143.16835022 403.57879639]
[131.18318176 394.55902100]
[124.00613403 396.73617554]
[120.60029602 411.34439087]
[109.65203094 401.09042358]
[102.47497559 403.26757812]
[97.52079010 417.42581177]
[92.56660461 431.58407593]
[87.61241913 445.74230957]
[82.65823364 459.90057373]
[77.70404816 474.05880737]
[72.84926605 488.25146484]
[68.09413147 502.47778320]
[63.33899307 516.70416260]
[58.58385849 530.93048096]
[53.82872009 545.15679932]
[49.07358551 559.38311768]
[44.31844711 573.60949707]
[57.46890259 580.91564941]
[69.05278015 590.51403809]
[78.67555237 602.07763672]
[86.00946045 615.21264648]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 219]
[29 218]
[30 217]
[31 216]
[32 215]
[33 214]
[34 213]
[36 212]
[37 211]
[38 210]
[39 209]
[40 208]
[41 207]
[43 178]
[44 177]
[45 176]
[46 175]
[47 174]
[48 173]
[49 172]
[50 171]
[51 170]
[52 169]
[53 160]
[54 159]
[55 158]
[56 157]
[57 156]
[65 84]
[66 83]
[67 82]
[68 81]
[69 80]
[71 78]
[72 77]
[89 113]
[90 112]
[91 111]
[92 110]
[93 109]
[94 108]
[95 107]
[96 106]
[97 105]
[98 104]
[120 150]
[121 149]
[122 148]
[125 145]
[126 144]
[127 143]
[128 142]
[131 139]
[132 138]
[179 203]
[180 202]
[181 201]
[182 200]
[183 199]
[184 198]
[188 197]
[189 196]
[190 195]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
