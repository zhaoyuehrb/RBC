%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 13:22:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCUGGCUGGUGGAUUGUGGGCACCAGGCUCCCUGGCACGGCCUAACUCUGCGGACCCCCAUCCUGCUGGGGGCCUAGAACCCUGAGACAUAGACCAUGGAUAAAUGGCAACCGGGGUGGCAAAGAGGGCAGGACCCAGCAUAAUGAUUAUAUGGCUGAAUAAAGUUGCACUGUGACUGGG\
) } def
/len { sequence length } bind def

/coor [
[88.54148102 122.96005249]
[78.21303558 133.83769226]
[67.88458252 144.71533203]
[57.55613708 155.59298706]
[47.22768784 166.47062683]
[36.99350357 177.43701172]
[26.85434914 188.49130249]
[16.71519470 199.54560852]
[6.57604074 210.59991455]
[-3.56311417 221.65420532]
[-7.07026911 230.11724854]
[-13.97395229 232.80987549]
[-24.30240059 243.68753052]
[-34.63084793 254.56517029]
[-38.52223206 269.90036011]
[-52.89667130 273.80224609]
[-56.78805542 289.13742065]
[-71.16249084 293.03930664]
[-81.49094391 303.91696167]
[-91.81938934 314.79461670]
[-98.34097290 330.44406128]
[-115.18418884 328.50955200]
[-117.98794556 311.78903198]
[-102.69703674 304.46615601]
[-92.36858368 293.58850098]
[-82.04013824 282.71087646]
[-78.88751221 268.15374756]
[-63.77431488 263.47378540]
[-60.62169266 248.91665649]
[-45.50849533 244.23672485]
[-35.18004608 233.35908508]
[-24.85159683 222.48143005]
[-14.61741352 211.51506042]
[-4.47825909 200.46075439]
[5.66089535 189.40644836]
[15.80004978 178.35215759]
[25.93920517 167.29785156]
[28.14912415 160.22485352]
[36.35004425 156.14218140]
[46.67848969 145.26454163]
[57.00693893 134.38688660]
[67.33538818 123.50924683]
[77.66383362 112.63159943]
[74.66872406 104.09732056]
[74.82067108 95.05400085]
[78.10079193 86.62516022]
[84.10159302 79.85794830]
[92.07753754 75.59310913]
[91.81863403 60.59534454]
[91.55972290 45.59757996]
[91.30081177 30.59981537]
[91.04190063 15.60204983]
[84.18594360 2.26054144]
[72.14265442 -6.68144560]
[63.36237335 -9.29486465]
[59.97044373 -15.88317966]
[48.08329010 -25.03170967]
[36.19614029 -34.18024063]
[24.30898666 -43.32876968]
[12.42183304 -52.47729874]
[0.53468084 -61.62583160]
[-15.10302353 -59.33721924]
[-27.72876740 -68.84333038]
[-29.85191917 -84.50435638]
[-20.21285057 -97.02889252]
[-4.53025198 -98.98634338]
[7.89167070 -89.21540070]
[9.68321133 -73.51298523]
[21.57036400 -64.36445618]
[33.45751572 -55.21592331]
[45.34466934 -46.06739426]
[57.23182297 -36.91886139]
[69.11897278 -27.77033234]
[81.08464050 -18.72473717]
[93.12792969 -9.78275013]
[100.22817230 -12.19865322]
[95.39659882 -26.39921379]
[109.59724426 -31.23054886]
[114.42864990 -17.03046036]
[121.52889252 -19.44636345]
[125.61918640 -33.87790680]
[129.70948792 -48.30945206]
[133.79977417 -62.74099731]
[137.89006042 -77.17254639]
[141.98036194 -91.60408783]
[141.31042480 -100.74052429]
[146.26780701 -106.24828339]
[139.01367188 -114.13293457]
[135.72526550 -124.24478149]
[136.93548584 -134.72737122]
[142.35777283 -143.68544006]
[150.95014954 -149.52767944]
[161.11491394 -151.24913025]
[161.07690430 -160.41001892]
[166.40246582 -165.56263733]
[171.72154236 -179.58789062]
[177.04061890 -193.61312866]
[182.35969543 -207.63836670]
[175.64567566 -221.94563293]
[181.09339905 -236.78132629]
[195.47084045 -243.34370422]
[210.24810791 -237.73942566]
[216.65811157 -223.29339600]
[210.89790344 -208.57621765]
[196.38493347 -202.31930542]
[191.06585693 -188.29405212]
[185.74678040 -174.26881409]
[180.42771912 -160.24357605]
[175.22988892 -146.17294312]
[184.81608582 -129.23872375]
[178.80412292 -110.41184998]
[160.62660217 -101.90950012]
[156.41191101 -87.51379395]
[152.32160950 -73.08225250]
[148.23132324 -58.65070724]
[144.14102173 -44.21916199]
[140.05073547 -29.78761482]
[135.96043396 -15.35606956]
[150.86923218 -13.70440292]
[163.60238647 -5.77554083]
[171.66212463 6.87517071]
[173.46743774 21.76613426]
[168.66419983 35.97630310]
[158.19461060 46.71817017]
[144.11242676 51.88458252]
[129.18002319 50.46208954]
[116.32659912 42.72972488]
[108.07350922 30.20429039]
[106.03966522 15.34314060]
[106.29857635 30.34090614]
[106.55748749 45.33867264]
[106.81639862 60.33643723]
[107.07530975 75.33420563]
[123.39981079 89.46859741]
[123.15441132 111.06050873]
[134.20870972 121.19966125]
[145.26301575 131.33882141]
[156.31730652 141.47796631]
[167.37161255 151.61712646]
[178.51300049 161.66049194]
[189.74066162 171.60733032]
[200.96832275 181.55416870]
[212.19598389 191.50102234]
[227.65634155 194.86076355]
[232.05206299 209.09196472]
[243.27972412 219.03880310]
[243.62963867 204.04289246]
[254.36976624 193.57151794]
[269.36975098 193.60168457]
[280.06765747 204.11616516]
[280.35723877 219.11337280]
[270.07321167 230.03300476]
[255.08493042 230.64198303]
[265.22409058 241.69627380]
[275.36325073 252.75057983]
[285.50241089 263.80487061]
[295.64154053 274.85916138]
[311.43997192 275.29049683]
[322.24530029 286.82391357]
[321.64697266 302.61688232]
[309.99996948 313.29968262]
[294.21420288 312.53442383]
[283.65515137 300.77511597]
[284.58724976 284.99832153]
[274.44808960 273.94403076]
[264.30895996 262.88973999]
[254.16978455 251.83543396]
[244.03063965 240.78112793]
[233.33288574 230.26646423]
[222.10522461 220.31962585]
[207.44795227 217.67134094]
[202.24914551 202.72868347]
[191.02148438 192.78184509]
[179.79382324 182.83499146]
[168.56616211 172.88815308]
[161.45606995 170.80065918]
[157.23245239 162.67143250]
[146.17816162 152.53227234]
[135.12385559 142.39311218]
[124.06955719 132.25396729]
[113.01525879 122.11480713]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 43]
[2 42]
[3 41]
[4 40]
[5 39]
[6 37]
[7 36]
[8 35]
[9 34]
[10 33]
[12 32]
[13 31]
[14 30]
[16 28]
[18 26]
[19 25]
[20 24]
[48 133]
[49 132]
[50 131]
[51 130]
[52 129]
[53 75]
[54 74]
[56 73]
[57 72]
[58 71]
[59 70]
[60 69]
[61 68]
[80 118]
[81 117]
[82 116]
[83 115]
[84 114]
[85 113]
[87 112]
[93 109]
[95 108]
[96 107]
[97 106]
[98 105]
[135 181]
[136 180]
[137 179]
[138 178]
[139 177]
[140 175]
[141 174]
[142 173]
[143 172]
[145 170]
[146 169]
[153 168]
[154 167]
[155 166]
[156 165]
[157 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
