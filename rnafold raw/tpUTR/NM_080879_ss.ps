%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Sep  9 22:28:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAGGCACCAAAAGGAAACAAGCUGGAAUCGCUCCAGGAAAAACUCUGGUUACACCUGGAAGAUGGAAGUCGCAUUGUAGAUUCAAGAAAUUAGUUUUCAGUUUCUCACGGGAACCAUGCUGCUUGGGAAUGUGUGUGAUGCCUUCUGUCAAUAAAAACACAUUACACA\
) } def
/len { sequence length } bind def

/coor [
[154.76269531 216.95336914]
[148.86370850 203.16200256]
[142.96470642 189.37062073]
[137.06571960 175.57925415]
[131.16671753 161.78788757]
[125.26772308 147.99652100]
[119.36872864 134.20515442]
[113.46973419 120.41378021]
[98.47542572 120.00046539]
[91.82565308 133.44593811]
[93.41881561 149.76751709]
[79.92488861 159.08663940]
[65.22528076 151.81660461]
[64.44168091 135.43618774]
[78.38018799 126.79615784]
[85.02996063 113.35069275]
[81.58213806 106.69017792]
[73.49351501 119.32244873]
[58.50934601 118.63352966]
[51.61398315 105.31234741]
[59.70287323 92.68025208]
[74.68647766 93.36914825]
[71.23865509 86.70862579]
[56.42117691 84.37572479]
[41.60370255 82.04281616]
[30.62826920 92.85234833]
[15.56837368 95.10022736]
[2.23032594 88.13169861]
[-4.36779547 74.80492401]
[-19.18527031 72.47202301]
[-34.00274277 70.13911438]
[-44.89452744 77.09425354]
[-57.20819855 74.82125092]
[-64.42057037 65.08033752]
[-79.19268799 62.47561646]
[-93.96480560 59.87089539]
[-108.73692322 57.26617050]
[-123.50904083 54.66144943]
[-138.28115845 52.05672455]
[-149.45332336 62.66280746]
[-164.55197144 64.63364410]
[-177.75975037 57.42125702]
[-184.11192322 43.97552490]
[-198.88404846 41.37080002]
[-213.65615845 38.76607895]
[-228.87286377 44.88031769]
[-241.60755920 34.54785919]
[-238.75987244 18.39785194]
[-223.25927734 13.04403782]
[-211.05143738 23.99396324]
[-196.27932739 26.59868431]
[-181.50720215 29.20340729]
[-170.93939209 18.74112511]
[-156.06135559 16.48102379]
[-142.54733276 23.49704933]
[-135.67643738 37.28461075]
[-120.90431213 39.88933182]
[-106.13220215 42.49405670]
[-91.36008453 45.09877777]
[-76.58796692 47.70349884]
[-61.81584930 50.30822372]
[-45.69452667 43.41609955]
[-31.66983795 55.32164001]
[-16.85236359 57.65454483]
[-2.03488874 59.98745346]
[8.33893871 49.33279800]
[23.17294312 46.79975128]
[36.81357574 53.56632996]
[43.93661118 67.22534180]
[58.75408554 69.55825043]
[73.57155609 71.89115143]
[87.71347809 66.89054871]
[97.77089691 55.76183319]
[107.82832336 44.63311768]
[117.88574219 33.50440598]
[127.94316864 22.37569046]
[122.10614777 9.48214054]
[121.63284302 -4.61980295]
[126.56180573 -17.79448700]
[136.11596680 -28.05932045]
[148.82495117 -33.88311386]
[162.75125122 -34.41442871]
[175.78564453 -29.60591698]
[186.04582214 -40.54798889]
[196.30598450 -51.49006271]
[206.56614685 -62.43213272]
[216.82632446 -73.37420654]
[227.08648682 -84.31627655]
[227.93354797 -88.66332245]
[229.93626404 -92.14749146]
[232.67411804 -94.50852203]
[235.68511963 -95.65228271]
[238.52453613 -95.64974213]
[249.56039429 -105.80896759]
[260.59625244 -115.96819305]
[271.63211060 -126.12741089]
[268.55795288 -138.28903198]
[270.94750977 -150.52980042]
[278.28427124 -160.52577209]
[289.11856079 -166.40599060]
[301.35360718 -167.10258484]
[312.65118408 -162.54420471]
[324.05279541 -172.29115295]
[335.45440674 -182.03811646]
[346.85601807 -191.78507996]
[358.25762939 -201.53202820]
[369.65924072 -211.27899170]
[377.76980591 -226.16708374]
[394.32128906 -222.49493408]
[395.37454224 -205.57373047]
[379.40618896 -199.87738037]
[368.00457764 -190.13041687]
[356.60296631 -180.38346863]
[345.20135498 -170.63650513]
[333.79974365 -160.88954163]
[322.39813232 -151.14259338]
[324.62341309 -133.65371704]
[315.85302734 -118.17974091]
[299.41799927 -110.97863770]
[281.79135132 -115.09155273]
[270.75549316 -104.93233490]
[259.71963501 -94.77310944]
[248.68376160 -84.61388397]
[238.02856445 -74.05611420]
[227.76838684 -63.11404037]
[217.50822449 -52.17196655]
[207.24806213 -41.22989273]
[196.98788452 -30.28782082]
[186.72772217 -19.34574890]
[192.77018738 -4.57144260]
[191.77018738 11.41761589]
[183.87690735 25.42516327]
[170.62257385 34.62896347]
[154.62527466 37.14939880]
[139.07188416 32.43311310]
[129.01445007 43.56182480]
[118.95703888 54.69054031]
[108.89961243 65.81925201]
[98.84219360 76.94796753]
[122.77687836 85.53339386]
[127.26110077 114.51478577]
[133.16009521 128.30615234]
[139.05909729 142.09751892]
[144.95808411 155.88890076]
[150.85708618 169.68026733]
[156.75607300 183.47163391]
[162.65507507 197.26300049]
[168.55406189 211.05436707]
[183.45825195 208.74871826]
[198.46751404 210.22282410]
[212.63835144 215.38406372]
[225.07997131 223.90795898]
[235.01028442 235.25871277]
[241.80505371 248.72280884]
[245.03718567 263.45385742]
[244.50347900 278.52590942]
[240.23748779 292.99145508]
[232.50737000 305.94119263]
[221.79907227 316.56112671]
[208.78569031 324.18365479]
[194.28529358 328.32962036]
[179.20935059 328.73840332]
[164.50558472 325.38433838]
[151.09826660 318.47821045]
[139.83020020 308.45416260]
[131.40968323 295.94232178]
[126.36607361 281.72921753]
[125.01638794 266.70825195]
[127.44548035 251.82368469]
[133.50065613 238.01116943]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 148]
[2 147]
[3 146]
[4 145]
[5 144]
[6 143]
[7 142]
[8 141]
[9 16]
[10 15]
[23 71]
[24 70]
[25 69]
[29 65]
[30 64]
[31 63]
[34 61]
[35 60]
[36 59]
[37 58]
[38 57]
[39 56]
[43 52]
[44 51]
[45 50]
[72 139]
[73 138]
[74 137]
[75 136]
[76 135]
[83 129]
[84 128]
[85 127]
[86 126]
[87 125]
[88 124]
[93 123]
[94 122]
[95 121]
[96 120]
[102 116]
[103 115]
[104 114]
[105 113]
[106 112]
[107 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
