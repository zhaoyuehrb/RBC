%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 15:02:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUAGGAUUCAAUGACAGGAAGUGAAUAAGAAGAUAACAGUGUUUCAAAUGCCGUGAAACAUGGCAUCAUGCUCUAACUUCAGUAUACCAAUAAAACAAUCAGCUUGCAAUUUC\
) } def
/len { sequence length } bind def

/coor [
[-47.58996964 403.92724609]
[-44.84962082 418.79272461]
[-46.61434174 433.80526733]
[-52.72721481 447.63003540]
[-62.64468765 459.03771973]
[-75.48490906 467.01394653]
[-90.10612488 470.84948730]
[-105.20824432 470.20327759]
[-119.44837952 465.13278198]
[-131.56031799 456.08886719]
[-140.46705627 443.87570190]
[-145.37664795 429.57928467]
[-145.85250854 414.47085571]
[-141.85232544 399.89379883]
[-133.73179626 387.14434814]
[-122.21300507 377.35617065]
[-108.32018280 371.39959717]
[-93.28866577 369.80429077]
[-78.45505524 372.71209717]
[-71.37281799 359.48931885]
[-64.29057312 346.26654053]
[-57.20833206 333.04376221]
[-50.12609100 319.82098389]
[-55.56085587 308.05130005]
[-53.14673233 295.11532593]
[-43.55197906 285.82611084]
[-30.15836525 283.77239990]
[-22.71758842 270.74801636]
[-15.27681160 257.72360229]
[-7.83603477 244.69921875]
[-11.99205589 230.44218445]
[-4.63158798 217.12759399]
[10.35068226 212.86505127]
[17.79145813 199.84065247]
[25.23223495 186.81625366]
[10.24380589 187.40530396]
[0.22832654 176.23881531]
[2.43799734 161.40246582]
[15.27279758 153.63922119]
[29.43906021 158.57044983]
[34.67897797 172.62582397]
[43.82394028 160.73591614]
[52.96889877 148.84602356]
[62.11386108 136.95613098]
[71.25881958 125.06623077]
[62.53477478 107.12236023]
[64.06573486 87.22895813]
[75.43264008 70.83125305]
[93.52413940 62.41763306]
[93.93386078 47.42322922]
[94.34358215 32.42882538]
[94.75330353 17.43442345]
[95.16302490 2.44002032]
[95.57274628 -12.55438232]
[95.98246765 -27.54878616]
[96.39218903 -42.54319000]
[90.78075409 -58.54156494]
[104.60050201 -68.36250305]
[117.86331940 -57.80153656]
[111.38659668 -42.13346863]
[110.97687531 -27.13906479]
[110.56715393 -12.14466095]
[110.15743256 2.84974241]
[109.74771118 17.84414482]
[109.33798218 32.83855057]
[108.92826080 47.83295059]
[108.51853943 62.82735443]
[120.25817871 67.68936157]
[129.74884033 76.13835907]
[143.06710815 69.23738098]
[156.38539124 62.33640671]
[169.70367432 55.43543243]
[183.02194214 48.53445816]
[185.21139526 33.17262268]
[196.03630066 22.05501938]
[211.33425903 19.45659447]
[225.22291565 26.37649536]
[232.36177063 40.15387726]
[230.00581360 55.49105453]
[219.06094360 66.49057770]
[203.73568726 68.92288971]
[189.92292786 61.85273361]
[176.60464478 68.75370789]
[163.28636169 75.65468597]
[149.96809387 82.55566406]
[136.64981079 89.45663452]
[138.13485718 100.32260895]
[136.46618652 111.16190338]
[131.78181458 121.07812500]
[124.46912384 129.25120544]
[115.13286591 135.00524902]
[104.54513550 137.86439514]
[93.58152771 137.59220886]
[83.14871979 134.21118164]
[74.00376129 146.10108948]
[64.85879517 157.99098206]
[55.71383667 169.88088989]
[46.56887817 181.77078247]
[38.25662994 194.25703430]
[30.81585312 207.28143311]
[23.37507629 220.30583191]
[27.31213379 235.37690735]
[19.58058929 248.47949219]
[5.18835926 252.13999939]
[-2.25241733 265.16439819]
[-9.69319439 278.18878174]
[-17.13397026 291.21316528]
[-12.20309353 307.92926025]
[-20.66183853 322.78164673]
[-36.90331268 326.90322876]
[-43.98555374 340.12600708]
[-51.06779480 353.34878540]
[-58.15003967 366.57156372]
[-65.23227692 379.79434204]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 114]
[20 113]
[21 112]
[22 111]
[23 110]
[27 107]
[28 106]
[29 105]
[30 104]
[33 101]
[34 100]
[35 99]
[41 98]
[42 97]
[43 96]
[44 95]
[45 94]
[49 67]
[50 66]
[51 65]
[52 64]
[53 63]
[54 62]
[55 61]
[56 60]
[69 86]
[70 85]
[71 84]
[72 83]
[73 82]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
