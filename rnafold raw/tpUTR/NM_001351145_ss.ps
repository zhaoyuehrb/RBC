%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 21:35:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCUCCGUGAUUCUCUGCCUGGGCCGGCCACCCUCUGUCCUGAGGACGCUGGAGCCUGGCCCGGCCCUUGGCAGCCCCACCCUCACCGCCCAUCCCAGCCUCGCUGGUGCCCCCUCCACGUGGGAGGCUCAGCCACACCUGCCCCCACGACCCCAUCAGAAAUAAACAGUCUGUGCCA\
) } def
/len { sequence length } bind def

/coor [
[63.11367416 185.07681274]
[49.49617767 177.76907349]
[37.28149033 168.30119324]
[26.80889320 156.93615723]
[18.36927605 143.98963928]
[12.19706059 129.82125854]
[8.46368790 114.82455444]
[7.27285814 99.41607666]
[-7.67006254 98.10874176]
[-22.61298370 96.80139923]
[-37.55590439 95.49406433]
[-47.85997772 111.68876648]
[-64.87411499 120.39756775]
[-83.87419891 119.29502106]
[-99.63143158 108.76712036]
[-107.85128021 91.78234100]
[-122.84899139 91.52055359]
[-137.84671021 91.25876617]
[-152.84442139 90.99697876]
[-167.84213257 90.73519135]
[-183.71878052 100.03772736]
[-198.40455627 90.45249176]
[-213.40455627 90.45249176]
[-228.40455627 90.45249176]
[-243.40455627 90.45249176]
[-258.40454102 90.45249176]
[-273.40454102 90.45249176]
[-288.40454102 90.45249176]
[-303.40399170 90.58338928]
[-318.40170288 90.84517670]
[-333.39941406 91.10695648]
[-344.34069824 102.19415283]
[-359.55426025 102.24599457]
[-370.05676270 91.74681854]
[-385.05447388 92.00859833]
[-400.05218506 92.27038574]
[-415.04989624 92.53217316]
[-430.03564453 93.18646240]
[-444.99908447 94.23281097]
[-459.96255493 95.27915955]
[-474.92602539 96.32550812]
[-490.30477905 103.46199799]
[-501.41964722 90.65980530]
[-492.19467163 76.43531799]
[-475.97235107 81.36204529]
[-461.00891113 80.31569672]
[-446.04544067 79.26934814]
[-431.08197021 78.22300720]
[-428.49423218 75.78929138]
[-424.58862305 74.50236511]
[-419.92379761 74.97254181]
[-415.31170654 77.53446198]
[-400.31399536 77.27267456]
[-385.31625366 77.01088715]
[-370.31854248 76.74909973]
[-360.18884277 65.88978577]
[-344.98275757 65.41065216]
[-333.66119385 76.10924530]
[-318.66348267 75.84745789]
[-303.66577148 75.58567047]
[-297.01416016 72.31603241]
[-288.40454102 75.45249176]
[-273.40454102 75.45249176]
[-258.40454102 75.45249176]
[-243.40455627 75.45249176]
[-228.40455627 75.45249176]
[-213.40455627 75.45249176]
[-198.40455627 75.45249176]
[-189.61602783 67.11502075]
[-177.10119629 67.00884247]
[-167.58035278 75.73748016]
[-152.58264160 75.99926758]
[-137.58491516 76.26105499]
[-122.58720398 76.52283478]
[-107.58949280 76.78462219]
[-103.51362610 66.44989777]
[-96.45780182 57.83436203]
[-87.08439636 51.77254105]
[-76.28126526 48.85800934]
[-65.07763672 49.38529968]
[-54.54607010 53.32024765]
[-45.69974518 60.30167007]
[-39.39502716 69.67448425]
[-36.24856567 80.55114746]
[-21.30564690 81.85848236]
[-6.36272621 83.16581726]
[8.58019447 84.47315216]
[13.26831913 67.19330597]
[21.18993759 51.13653946]
[32.04972076 36.90147781]
[45.44279480 25.01883316]
[60.86985016 15.93160343]
[77.75573730 9.97857666]
[95.47093201 7.38169003]
[113.35497284 8.23776054]
[130.74111938 12.51487255]
[136.84216309 -1.18830955]
[142.94322205 -14.89149189]
[149.04426575 -28.59467316]
[155.14530945 -42.29785538]
[156.06407166 -59.22689056]
[172.58584595 -63.03046799]
[180.81445312 -48.20730591]
[168.84849548 -36.19680405]
[162.74745178 -22.49362373]
[156.64639282 -8.79044151]
[150.54534912 4.91274023]
[144.44430542 18.61592102]
[150.99957275 22.55513191]
[157.20793152 27.02112770]
[163.02717590 31.98353386]
[168.41769409 37.40859604]
[173.34281921 43.25940704]
[177.76907349 49.49617767]
[181.66632080 56.07647705]
[185.00807190 62.95555115]
[187.77159119 70.08660126]
[189.93807983 77.42112732]
[191.49279785 84.90924072]
[192.42518616 92.50000000]
[207.42518616 92.50000000]
[222.42518616 92.50000000]
[237.42518616 92.50000000]
[252.42518616 92.50000000]
[267.42517090 92.50000000]
[276.03479004 89.36354065]
[282.68640137 92.63318634]
[297.68411255 92.89496613]
[312.68182373 93.15675354]
[319.49716187 79.49974823]
[331.56838989 70.15907288]
[346.49874878 66.98931885]
[361.32379150 70.61985016]
[373.10000610 80.32981873]
[379.48922729 94.19130707]
[379.22283936 109.45209503]
[372.35375977 123.08215332]
[360.24584961 132.37522888]
[345.30313110 135.48616028]
[330.49249268 131.79727173]
[318.75460815 122.04100800]
[312.42004395 108.15447235]
[297.42233276 107.89268494]
[282.42462158 107.63089752]
[267.42517090 107.50000000]
[252.42518616 107.50000000]
[237.42518616 107.50000000]
[222.42518616 107.50000000]
[207.42518616 107.50000000]
[192.42518616 107.50000000]
[189.57621765 123.97425842]
[183.81538391 139.66918945]
[175.32995605 154.07458496]
[164.39576721 166.72216797]
[151.36827087 177.20080566]
[158.64041138 190.32011414]
[165.55763245 196.32965088]
[165.92271423 203.73243713]
[172.96478271 216.97665405]
[180.00685120 230.22085571]
[187.04893494 243.46507263]
[202.43194580 244.63398743]
[214.72721863 253.95223999]
[220.01136780 268.44641113]
[216.59823608 283.49148560]
[205.57695007 294.28662109]
[190.46435547 297.38711548]
[176.08282471 291.80364990]
[167.02146912 279.31784058]
[166.17170715 263.91387939]
[173.80471802 250.50715637]
[166.76263428 237.26293945]
[159.72056580 224.01872253]
[152.67849731 210.77450562]
[145.52111816 197.59225464]
[138.24896240 184.47296143]
[123.68827057 189.65226746]
[108.46959686 192.34136963]
[93.01567078 192.46557617]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 87]
[9 86]
[10 85]
[11 84]
[16 75]
[17 74]
[18 73]
[19 72]
[20 71]
[22 68]
[23 67]
[24 66]
[25 65]
[26 64]
[27 63]
[28 62]
[29 60]
[30 59]
[31 58]
[34 55]
[35 54]
[36 53]
[37 52]
[38 48]
[39 47]
[40 46]
[41 45]
[96 108]
[97 107]
[98 106]
[99 105]
[100 104]
[120 150]
[121 149]
[122 148]
[123 147]
[124 146]
[125 145]
[127 144]
[128 143]
[129 142]
[155 176]
[156 175]
[158 174]
[159 173]
[160 172]
[161 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
