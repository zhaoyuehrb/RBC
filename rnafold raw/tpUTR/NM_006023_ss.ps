%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 08:32:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGCGUACUGGAACUGGAGAAGAGGAGGCCCCGCCCCACCGCUCCGGGAGCUGCUCAUCAGCCGCAACUUCCUGCCGACCCUGAUGCGGGUGGGCCGAGCAGUGUGGACAUCAGCCACUUUUUAUAUUCAUGUACAUUCACCUGGGGAAAAAAACGGAGGGACUUUGCUACUUGUAAAAAUAACAUAAUAAAUAGAUCUUAAACAUAGGAAAACCAUACUGUUCUGAUAAUAAAAUGCUUUCUAUGAAAUAC\
) } def
/len { sequence length } bind def

/coor [
[88.67562866 239.49113464]
[101.81829834 231.85316467]
[99.78379059 216.99177551]
[97.74928284 202.13038635]
[95.71477509 187.26899719]
[93.68026733 172.40762329]
[91.64575958 157.54623413]
[84.53022766 155.17573547]
[79.78923035 169.40679932]
[75.04824066 183.63784790]
[74.93673706 198.63743591]
[60.63677216 203.16633606]
[51.91074753 190.96566772]
[60.81718445 178.89685059]
[65.55817413 164.66580200]
[70.29917145 150.43473816]
[63.18364334 148.06423950]
[52.64283752 158.73623657]
[42.10203171 169.40823364]
[31.56122780 180.08021545]
[35.51213455 194.85647583]
[31.56255913 209.52949524]
[20.86989975 220.18470764]
[6.37649775 224.03141785]
[-7.99954605 220.13334656]
[-18.54035187 230.80534363]
[-22.33002281 239.08558655]
[-29.27813911 241.54313660]
[-39.95013046 252.08393860]
[-50.62212372 262.62475586]
[-57.64224625 278.05697632]
[-74.41475677 275.58328247]
[-76.68082428 258.78146362]
[-61.16292953 251.95274353]
[-50.49093628 241.41194153]
[-39.81894684 230.87113953]
[-29.21234322 220.26454163]
[-18.67153740 209.59254456]
[-22.74711609 195.26580811]
[-19.07994652 180.72593689]
[-8.55780411 169.90231323]
[6.06524944 165.77156067]
[20.88923454 169.53941345]
[31.43004036 158.86741638]
[41.97084427 148.19543457]
[52.51165009 137.52343750]
[46.13503647 123.94629669]
[31.19122124 125.24336243]
[16.24740601 126.54043579]
[1.30359018 127.83750153]
[-13.64022541 129.13456726]
[-26.71965408 138.03620911]
[-40.06830597 131.42842102]
[-55.01212311 132.72549438]
[-69.95594025 134.02256775]
[-77.05196381 147.72109985]
[-90.43887329 155.38882446]
[-105.84497070 154.57899475]
[-118.35420990 145.55001831]
[-123.97495270 131.18301392]
[-120.91362762 116.06243896]
[-110.14709473 105.01321411]
[-95.11092377 101.56110382]
[-80.60309601 106.80767059]
[-71.25300598 119.07875061]
[-56.30918884 117.78168488]
[-41.36537552 116.48461151]
[-29.35482788 107.67575073]
[-14.93729305 114.19075012]
[0.00652214 112.89368439]
[14.95033741 111.59661865]
[29.89415359 110.29955292]
[44.83796692 109.00247955]
[52.08331299 95.29579163]
[62.15211487 85.86200714]
[49.31908798 78.09583282]
[36.48606110 70.32965851]
[20.67358398 69.80422211]
[13.79090309 56.59521484]
[0.95787722 48.82904053]
[-11.87514877 41.06287003]
[-24.70817566 33.29669571]
[-39.99322128 37.31451416]
[-53.60010147 29.27533340]
[-57.45609283 13.94866180]
[-49.27350235 0.42753842]
[-33.90691757 -3.26619339]
[-20.47306252 5.05889225]
[-16.94200134 20.46366882]
[-4.10897589 28.22984314]
[8.72405052 35.99601364]
[21.55707550 43.76218796]
[36.45165253 43.73213577]
[44.25223541 57.49663544]
[57.08526230 65.26280975]
[69.91828918 73.02898407]
[96.50636292 59.74903870]
[124.98489380 68.24940491]
[136.28793335 58.38830948]
[147.59098816 48.52721405]
[158.89402771 38.66611862]
[170.19706726 28.80502510]
[181.50012207 18.94392967]
[192.80316162 9.08283520]
[204.10620117 -0.77825934]
[215.40924072 -10.63935375]
[226.71229553 -20.50044823]
[238.01533508 -30.36154366]
[233.16285706 -39.58008575]
[230.55984497 -49.80680084]
[230.41062927 -60.49365616]
[232.78622437 -71.05273438]
[237.61705017 -80.88858032]
[244.69338989 -89.43173981]
[253.67393494 -96.17164612]
[264.10186768 -100.68693542]
[275.42797852 -102.67134094]
[287.03961182 -101.95373535]
[298.29373169 -98.51091766]
[308.55249023 -92.47229767]
[316.78936768 -105.00839233]
[325.02627563 -117.54448700]
[333.26315308 -130.08058167]
[341.50006104 -142.61666870]
[349.73696899 -155.15275574]
[357.97384644 -167.68885803]
[366.21075439 -180.22494507]
[359.29248047 -192.36502075]
[358.27865601 -206.23487854]
[363.30993652 -219.12876892]
[373.35336304 -228.55589294]
[386.41363525 -232.72151184]
[399.92962646 -230.86843872]
[408.32092285 -243.30169678]
[416.71224976 -255.73495483]
[411.57122803 -270.25653076]
[415.91595459 -284.85025024]
[427.87939453 -293.97933960]
[442.74645996 -294.30938721]
[451.13775635 -306.74264526]
[453.33499146 -315.57983398]
[459.71054077 -319.27688599]
[468.25497437 -331.60540771]
[476.79943848 -343.93392944]
[474.18695068 -359.29013062]
[483.02786255 -371.67129517]
[497.68374634 -374.06726074]
[492.43441772 -388.66946411]
[496.80294800 -403.55892944]
[509.10946655 -413.01031494]
[524.62188721 -413.38940430]
[537.37542725 -404.55041504]
[542.46600342 -389.89212036]
[537.93621826 -375.05093384]
[525.52789307 -365.73361206]
[510.01226807 -365.52282715]
[512.91363525 -350.95855713]
[504.42395020 -338.33395386]
[489.12796021 -335.38949585]
[480.58349609 -323.06097412]
[472.03906250 -310.73245239]
[463.57101440 -298.35131836]
[455.17971802 -285.91806030]
[460.43533325 -272.00704956]
[456.44461060 -257.49713135]
[444.53588867 -248.00839233]
[429.14550781 -247.34364319]
[420.75418091 -234.91038513]
[412.36288452 -222.47712708]
[419.79718018 -208.11566162]
[418.96173096 -191.87152100]
[409.99023438 -178.19131470]
[395.25643921 -170.86766052]
[378.74682617 -171.98805237]
[370.50994873 -159.45196533]
[362.27304077 -146.91586304]
[354.03616333 -134.37977600]
[345.79925537 -121.84368134]
[337.56237793 -109.30759430]
[329.32546997 -96.77149963]
[321.08859253 -84.23540497]
[323.45907593 -77.11988068]
[336.69775391 -84.17235565]
[349.93643188 -91.22483826]
[363.17510986 -98.27731323]
[376.41378784 -105.32979584]
[387.74163818 -115.16238403]
[402.71450806 -116.06404877]
[415.14044189 -107.66190338]
[419.88076782 -93.43062592]
[414.97515869 -79.25547791]
[402.45227051 -70.99852753]
[387.49291992 -72.07353210]
[372.66970825 -69.77735138]
[357.84649658 -67.48117828]
[343.02328491 -65.18499756]
[328.20007324 -62.88882446]
[330.57055664 -55.77329254]
[344.67999268 -50.68175507]
[358.78945923 -45.59021378]
[372.89889526 -40.49867249]
[387.00833130 -35.40713120]
[403.04623413 -38.83021927]
[413.82723999 -26.47296524]
[408.26077271 -11.04745007]
[392.07315063 -8.42212200]
[381.91677856 -21.29769325]
[367.80734253 -26.38923454]
[353.69790649 -31.48077583]
[339.58847046 -36.57231522]
[325.47903442 -41.66385651]
[312.31741333 -20.18272972]
[291.12036133 -8.24672318]
[267.65988159 -8.14290714]
[247.87643433 -19.05849838]
[236.57337952 -9.19740391]
[225.27033997 0.66369033]
[213.96730042 10.52478504]
[202.66426086 20.38587952]
[191.36120605 30.24697495]
[180.05816650 40.10807037]
[168.75512695 49.96916199]
[157.45207214 59.83025742]
[146.14903259 69.69135284]
[134.84599304 79.55244446]
[139.27238464 85.65455627]
[142.59710693 92.69715118]
[144.62417603 100.47497559]
[145.19702148 108.74275208]
[144.20643616 117.22286987]
[141.59709167 125.61471558]
[137.37217712 133.60525513]
[131.59594727 140.88050842]
[124.39398193 147.13752747]
[115.95113373 152.09637451]
[106.50714111 155.51171875]
[108.54164886 170.37310791]
[110.57615662 185.23449707]
[112.61066437 200.09588623]
[114.64517212 214.95726013]
[116.67967987 229.81864929]
[131.39158630 233.64337158]
[143.51693726 242.81092834]
[151.20672607 255.92335510]
[153.28828430 270.98107910]
[149.44422913 285.68795776]
[140.26072693 297.80123901]
[127.13819122 305.47375488]
[112.07772827 307.53552246]
[97.37594604 303.67211914]
[85.27474976 294.47268677]
[77.61949158 281.34005737]
[75.57754517 266.27691650]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 241]
[3 240]
[4 239]
[5 238]
[6 237]
[7 236]
[17 46]
[18 45]
[19 44]
[20 43]
[25 38]
[26 37]
[28 36]
[29 35]
[30 34]
[47 73]
[48 72]
[49 71]
[50 70]
[51 69]
[53 67]
[54 66]
[55 65]
[75 96]
[76 95]
[77 94]
[79 92]
[80 91]
[81 90]
[82 89]
[98 225]
[99 224]
[100 223]
[101 222]
[102 221]
[103 220]
[104 219]
[105 218]
[106 217]
[107 216]
[108 215]
[120 181]
[121 180]
[122 179]
[123 178]
[124 177]
[125 176]
[126 175]
[127 174]
[133 169]
[134 168]
[135 167]
[139 163]
[140 162]
[142 161]
[143 160]
[144 159]
[147 156]
[198 211]
[199 210]
[200 209]
[201 208]
[202 207]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
