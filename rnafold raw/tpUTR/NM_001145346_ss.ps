%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Sep  9 22:54:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGGAACAGACUUGGGCCCAAAAAUUCCUUUUCAAAGAAACAAAAAGAAGAACCUGUUCUAUGUUAACUACCCAAGGACUAGUAUAAGUAGGAGUUGUUUUUACCUUUUAAGAAUUUCCUGUUAAGAUCUCCAUUUUUAUGCUUUUGUGAGGAAAAACUUAAAAUUAGUUUGAAAUUGUUAAUGUUUCUUUCAACAAGUUCUUGUUAAAAGUAUAAGAUAUG\
) } def
/len { sequence length } bind def

/coor [
[146.55482483 410.57565308]
[143.01225281 395.99996948]
[139.46966553 381.42431641]
[135.92709351 366.84863281]
[132.38450623 352.27297974]
[128.84193420 337.69729614]
[125.29935455 323.12161255]
[121.75677490 308.54595947]
[114.39080811 307.13439941]
[92.29290009 302.89971924]
[83.61283112 315.13314819]
[88.41249084 329.77108765]
[83.72731781 344.25909424]
[71.55344391 353.10562134]
[56.68274689 353.08752441]
[48.00267792 365.32095337]
[39.32260895 377.55435181]
[45.17598724 391.82815552]
[42.36069489 406.99649048]
[31.77507401 418.21914673]
[16.79696465 421.91503906]
[2.20582128 416.90484619]
[-7.34237194 404.78729248]
[-8.80082226 389.42901611]
[-1.70414400 375.73080444]
[11.68313980 368.06372070]
[27.08919334 368.87429810]
[35.76926422 356.64086914]
[44.44933319 344.40747070]
[39.52079391 330.37722778]
[43.85009766 315.96469116]
[55.97767639 306.75735474]
[71.37941742 306.45306396]
[80.05948639 294.21966553]
[84.91426849 280.02700806]
[85.54520416 265.04028320]
[86.17613983 250.05355835]
[86.80707550 235.06683350]
[87.43801117 220.08010864]
[88.06895447 205.09338379]
[88.69989014 190.10665894]
[89.33082581 175.11993408]
[89.96176147 160.13320923]
[72.24929810 154.28321838]
[57.13478088 143.35137939]
[46.03318787 128.36111450]
[39.98381424 110.71574402]
[39.55299759 92.06719971]
[44.78105927 74.16130829]
[32.08019638 66.18082428]
[19.37933350 58.20034409]
[6.67847013 50.21986389]
[-6.02239275 42.23937988]
[-18.72325516 34.25889969]
[-33.06905365 39.87176895]
[-47.79697037 36.00631332]
[-57.31216431 24.34762192]
[-58.12792587 9.49930382]
[-70.82878876 1.51882303]
[-83.52965546 -6.46165800]
[-96.23051453 -14.44213963]
[-108.93138123 -22.42262077]
[-121.63224030 -30.40310097]
[-135.20275879 -23.34701157]
[-150.38284302 -24.02639961]
[-163.10020447 -32.15876770]
[-169.99333191 -45.47569656]
[-169.29994202 -60.35470200]
[-182.00080872 -68.33518219]
[-194.70166016 -76.31566620]
[-207.40252686 -84.29614258]
[-220.21406555 -92.09771729]
[-233.13375854 -99.71884918]
[-249.84819031 -102.55853271]
[-251.74650574 -119.40586853]
[-236.08306885 -125.89379883]
[-225.51261902 -112.63854218]
[-212.59294128 -105.01741028]
[-207.83515930 -105.31882477]
[-202.83595276 -102.64109802]
[-199.42204285 -96.99700928]
[-186.72119141 -89.01652527]
[-174.02032471 -81.03604889]
[-161.31945801 -73.05556488]
[-148.21479797 -80.13604736]
[-133.22583008 -79.70354462]
[-120.38097382 -71.77411652]
[-113.18247223 -58.39209747]
[-113.65176392 -43.10396576]
[-100.95089722 -35.12348175]
[-88.25003815 -27.14300156]
[-75.54917145 -19.16252136]
[-62.84830856 -11.18204021]
[-50.14744568 -3.20155883]
[-36.41562653 -8.90902519]
[-21.78302193 -5.39465141]
[-11.91016006 6.19758797]
[-10.74277401 21.55803680]
[1.95808852 29.53851891]
[14.65895176 37.51900101]
[27.35981369 45.49948120]
[40.06067657 53.47996140]
[52.76153946 61.46044159]
[69.31781769 47.31819153]
[89.78793335 39.89606476]
[111.56070709 40.14083481]
[131.85877991 48.02128220]
[141.21113586 36.29380798]
[150.56347656 24.56633568]
[159.91583252 12.83886337]
[169.26817322 1.11139131]
[178.62051392 -10.61608124]
[187.97286987 -22.34355354]
[186.39654541 -37.84042358]
[196.04821777 -49.60052109]
[210.83183289 -51.00779343]
[220.18418884 -62.73526382]
[229.53652954 -74.46273804]
[238.88887024 -86.19020844]
[248.24122620 -97.91767883]
[257.59356689 -109.64515686]
[256.01724243 -125.14202118]
[265.66891479 -136.90211487]
[280.45254517 -138.30940247]
[289.80490112 -150.03686523]
[299.15722656 -161.76434326]
[308.50958252 -173.49180603]
[317.86193848 -185.21928406]
[320.41693115 -200.83282471]
[334.40151978 -205.95927429]
[328.18231201 -219.94425964]
[329.18618774 -235.21681213]
[337.18246460 -248.26741028]
[350.33367920 -256.09710693]
[365.61776733 -256.90670776]
[379.52255249 -250.51017761]
[388.85281372 -238.37738037]
[391.46453857 -223.29635620]
[386.75753784 -208.73260498]
[375.81350708 -198.03276062]
[361.14724731 -193.65559387]
[346.12899780 -196.60693359]
[344.24291992 -181.83221436]
[329.58938599 -175.86694336]
[320.23706055 -164.13946533]
[310.88470459 -152.41198730]
[301.53234863 -140.68452454]
[292.18002319 -128.95704651]
[294.09768677 -114.23094177]
[284.78015137 -102.20439148]
[269.32104492 -100.29280853]
[259.96868896 -88.56533813]
[250.61634827 -76.83786011]
[241.26400757 -65.11038971]
[231.91165161 -53.38291931]
[222.55931091 -41.65544510]
[224.47697449 -26.92934227]
[215.15943909 -14.90279102]
[199.70033264 -12.99120617]
[190.34799194 -1.26373386]
[180.99565125 10.46373844]
[171.64329529 22.19120979]
[162.29095459 33.91868210]
[152.93859863 45.64615631]
[143.58625793 57.37362671]
[148.34407043 62.85675049]
[152.41638184 68.86653900]
[155.74546814 75.31777954]
[158.28413391 82.11900330]
[159.99635315 89.17375946]
[160.85786438 96.38202667]
[160.85646057 103.64160156]
[159.99214172 110.84953308]
[158.27717590 117.90362549]
[155.73588562 124.70385742]
[152.40429688 131.15380859]
[148.32963562 137.16201782]
[143.56970215 142.64329529]
[138.19198608 147.51991272]
[132.27272034 151.72273254]
[125.89585114 155.19215393]
[119.15179443 157.87899780]
[112.13618469 159.74514771]
[104.94848633 160.76414490]
[104.31755066 175.75086975]
[103.68661499 190.73759460]
[103.05567932 205.72431946]
[102.42473602 220.71104431]
[101.79380035 235.69776917]
[101.16286469 250.68449402]
[100.53192902 265.67123413]
[99.90098572 280.65795898]
[105.18466949 266.61932373]
[117.47221375 258.01605225]
[132.47132874 257.85342407]
[144.94253540 266.18823242]
[150.52937317 280.10897827]
[147.28025818 294.75286865]
[136.33244324 305.00338745]
[139.87501526 319.57904053]
[143.41760254 334.15472412]
[146.96017456 348.73037720]
[150.50276184 363.30606079]
[154.04533386 377.88171387]
[157.58792114 392.45739746]
[161.13049316 407.03305054]
[176.21646118 408.15948486]
[190.21520996 413.89447021]
[201.75529480 423.67617798]
[209.70614624 436.54626465]
[213.28878784 451.24389648]
[212.15225220 466.32910156]
[206.40788269 480.32400513]
[196.61845398 491.85751343]
[183.74304199 499.79974365]
[169.04302979 503.37252808]
[153.95858765 502.22589111]
[139.96752930 496.47216797]
[128.44056702 486.67498779]
[120.50698090 473.79425049]
[116.94403839 459.09185791]
[118.10078430 444.00817871]
[123.86389923 430.02099609]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 206]
[2 205]
[3 204]
[4 203]
[5 202]
[6 201]
[7 200]
[8 199]
[10 34]
[11 33]
[15 29]
[16 28]
[17 27]
[35 192]
[36 191]
[37 190]
[38 189]
[39 188]
[40 187]
[41 186]
[42 185]
[43 184]
[49 103]
[50 102]
[51 101]
[52 100]
[53 99]
[54 98]
[58 94]
[59 93]
[60 92]
[61 91]
[62 90]
[63 89]
[68 84]
[69 83]
[70 82]
[71 81]
[72 78]
[73 77]
[107 165]
[108 164]
[109 163]
[110 162]
[111 161]
[112 160]
[113 159]
[116 156]
[117 155]
[118 154]
[119 153]
[120 152]
[121 151]
[124 148]
[125 147]
[126 146]
[127 145]
[128 144]
[130 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
