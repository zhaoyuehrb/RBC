%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 21:40:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCUGCCACCAAUAUGAUUAUGCUACAUGCUUAUUAUCAGGCACUGACUGAAUAAUAUCUACAAUUGGGUCCAUUUUCUUAUGAGACAGGGGUGCUGUUCUACUACACUUUU\
) } def
/len { sequence length } bind def

/coor [
[101.72442627 247.17254639]
[110.09150696 234.59602356]
[121.66376495 224.88729858]
[115.63833618 211.15069580]
[109.99176025 206.22137451]
[109.64192963 196.95158386]
[103.99729156 183.05418396]
[98.35265350 169.15676880]
[92.84404755 164.07373047]
[92.74977112 154.79782104]
[87.49021149 140.75015259]
[85.37110138 155.59971619]
[87.39456940 170.46260071]
[81.97908020 184.45089722]
[70.47496796 194.07667542]
[55.75074005 196.93974304]
[41.47784424 192.32624817]
[31.21517181 181.38652039]
[27.52169037 166.84835815]
[31.31835365 152.33680725]
[41.65847778 141.47026062]
[55.96127319 136.95838928]
[68.48619080 128.70452881]
[53.53742218 129.94320679]
[42.11332321 141.20684814]
[26.20203400 139.15490723]
[18.00933838 125.36145020]
[23.81996918 110.40765381]
[39.17650986 105.76477814]
[52.29873276 114.99444580]
[67.24749756 113.75575256]
[67.97612000 95.50093079]
[77.27255249 81.74207306]
[68.38902283 69.65560150]
[59.50549316 57.56912231]
[50.62196350 45.48264694]
[41.73843384 33.39617157]
[32.85490799 21.30969429]
[23.80568695 9.34676552]
[14.59249687 -2.49034190]
[5.37930584 -14.32744980]
[-10.25332260 -14.72105694]
[-21.94132614 -25.10973358]
[-24.16598511 -40.58826447]
[-15.87688541 -53.84815979]
[-0.98788565 -58.62850189]
[13.47088432 -52.67216110]
[20.67243385 -38.79153824]
[17.21641350 -23.54063988]
[26.42960358 -11.70353222]
[35.64279556 0.13357496]
[42.32665634 3.52590203]
[44.94138336 12.42616463]
[53.82491302 24.51264191]
[62.70843887 36.59911728]
[71.59197235 48.68559265]
[80.47549438 60.77207184]
[89.35902405 72.85855103]
[96.87056732 67.51600647]
[106.52112579 64.47769165]
[112.54655457 50.74109268]
[118.57198334 37.00449371]
[116.23112488 20.77327538]
[129.28294373 10.84442043]
[144.30084229 17.43188286]
[145.83569336 33.75904465]
[132.30857849 43.02992249]
[126.28314972 56.76652527]
[120.25772095 70.50312042]
[130.56803894 81.39795685]
[144.61570740 76.13838959]
[158.66337585 70.87882996]
[172.63723755 65.42620850]
[186.53465271 59.78157043]
[200.43206787 54.13692856]
[206.34889221 39.48200989]
[220.92778015 33.38022995]
[235.51931763 39.45166779]
[241.46662903 54.09424591]
[235.24125671 68.62078857]
[220.53660583 74.41294098]
[206.07670593 68.03433990]
[192.17929077 73.67897797]
[178.28187561 79.32362366]
[173.19885254 84.83222198]
[163.92294312 84.92649841]
[149.87527466 90.18605804]
[135.82760620 95.44562531]
[127.38445282 123.09020233]
[101.53787994 135.49058533]
[106.79743958 149.53825378]
[112.25006104 163.51213074]
[117.89469910 177.40953064]
[123.53934479 191.30694580]
[129.37493896 205.12525940]
[135.40036011 218.86186218]
[150.38099670 216.92343140]
[165.30070496 219.28540039]
[178.95002747 225.75631714]
[190.22245789 235.81159973]
[198.20422363 248.63610840]
[202.24824524 263.19024658]
[202.02671814 278.29412842]
[197.55758667 292.72338867]
[189.20314026 305.30828857]
[177.64064026 315.02865601]
[163.80740356 321.09646606]
[148.82484436 323.01986694]
[133.90751648 320.64288330]
[120.26470184 314.15826416]
[109.00236511 304.09167480]
[101.03349304 291.25915527]
[97.00408936 276.70095825]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 96]
[4 95]
[6 94]
[7 93]
[8 92]
[10 91]
[11 90]
[23 31]
[24 30]
[33 58]
[34 57]
[35 56]
[36 55]
[37 54]
[38 53]
[39 51]
[40 50]
[41 49]
[60 69]
[61 68]
[62 67]
[70 88]
[71 87]
[72 86]
[73 84]
[74 83]
[75 82]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
