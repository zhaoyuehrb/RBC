%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 13:28:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGCCUGAAUUUAAGUUUUCUAAGAUAAACUCAGUGGUUUGGUUUUUAUUAUUAAUAGAGAUAGAACUAUUGUGUGUUAAUAUUAGCAUUAGUCAAUAAGUUAUUUUAAUGUCAGAUUUUUGAAUGUUAUUAUAUAUUACCUGUAUGAUGGAAGGAUUACCACUGUACACAAAUCUAAUCAAUAAAAACGUUAGAACCUUCUGCUUAGAGUACUUUUAA\
) } def
/len { sequence length } bind def

/coor [
[121.87674713 366.35702515]
[110.42240906 376.26040649]
[96.37214661 381.90567017]
[81.25003052 382.68041992]
[66.69639587 378.50067139]
[54.28990173 369.81979370]
[45.37631989 357.57943726]
[40.92253113 343.10729980]
[41.41164398 327.97323608]
[46.79060745 313.81890869]
[56.47594833 302.17962646]
[69.41707611 294.31793213]
[84.21023560 291.08663940]
[85.92010498 276.18441772]
[87.62997437 261.28219604]
[89.33984375 246.37997437]
[83.10377502 232.85366821]
[92.36374664 220.02543640]
[94.07361603 205.12321472]
[95.78348541 190.22097778]
[97.49336243 175.31875610]
[99.20323181 160.41653442]
[100.91310120 145.51431274]
[102.62297058 130.61207581]
[97.39594269 125.23358917]
[86.63879395 135.68748474]
[76.18508148 124.93015289]
[86.94187927 114.47661591]
[81.71484375 109.09812927]
[66.76986694 110.38175201]
[53.68244171 119.27162170]
[40.33973694 112.65184021]
[25.39476013 113.93546295]
[10.44978333 115.21908569]
[-4.49519205 116.50271606]
[-19.44016838 117.78633881]
[-34.38514328 119.06996155]
[-49.33012009 120.35359192]
[-64.27509308 121.63721466]
[-79.22006989 122.92083740]
[-92.30750275 131.81069946]
[-105.65020752 125.19092560]
[-120.59518433 126.47454834]
[-135.54016113 127.75817871]
[-150.48513794 129.04179382]
[-165.43011475 130.32542419]
[-180.37509155 131.60905457]
[-195.32006836 132.89266968]
[-210.26504517 134.17630005]
[-225.21000671 135.45993042]
[-240.47363281 142.83952332]
[-251.79020691 130.21528625]
[-242.79208374 115.84622192]
[-226.49363708 120.51495361]
[-211.54866028 119.23132324]
[-196.60368347 117.94770050]
[-181.65870667 116.66407776]
[-166.71372986 115.38044739]
[-151.76875305 114.09682465]
[-136.82377625 112.81320190]
[-121.87880707 111.52957153]
[-106.93383026 110.24594879]
[-94.91536713 101.44789886]
[-80.50370026 107.97586060]
[-65.55872345 106.69223785]
[-50.61374664 105.40861511]
[-35.66876984 104.12498474]
[-20.72379303 102.84136200]
[-5.77881718 101.55773926]
[9.16615868 100.27410889]
[24.11113548 98.99048615]
[39.05611038 97.70686340]
[51.07457733 88.90880585]
[65.48624420 95.43677521]
[80.43122101 94.15315247]
[84.57570648 87.90229034]
[70.84485626 81.86377716]
[57.11400223 75.82526398]
[42.86063004 71.15178680]
[37.93960953 56.98197556]
[46.22811890 44.47994995]
[61.19580078 43.49582291]
[71.05022430 54.80617905]
[81.95745087 65.10337830]
[92.86468506 75.40058136]
[97.00917053 69.14971924]
[92.37391663 54.88387299]
[87.73866272 40.61802292]
[83.10340881 26.35217667]
[78.46815491 12.08632851]
[73.83289337 -2.17951894]
[69.19763947 -16.44536591]
[54.04779816 -17.99524689]
[40.84135437 -25.57876015]
[31.86640167 -37.88201904]
[28.67790794 -52.77340317]
[31.82830048 -67.67289734]
[40.77175140 -79.99906921]
[53.95875931 -87.61634064]
[69.10458374 -89.20497131]
[83.58513641 -84.48971558]
[94.89155579 -74.28752136]
[101.06494904 -60.36598969]
[101.03573608 -45.13710022]
[94.80897522 -31.23935509]
[83.46349335 -21.08062172]
[88.09874725 -6.81477356]
[92.73400116 7.45107412]
[97.36925507 21.71692085]
[102.00450897 35.98276901]
[106.63976288 50.24861908]
[111.27501678 64.51446533]
[124.22955322 72.07621765]
[138.93078613 69.09735870]
[153.63203430 66.11849976]
[168.33326721 63.13964462]
[182.83168030 49.12774658]
[200.87705994 56.08469772]
[215.48724365 52.68724823]
[230.09741211 49.28979492]
[244.70759583 45.89234543]
[259.31777954 42.49489212]
[273.92794800 39.09744263]
[281.57168579 34.10877991]
[288.77099609 35.75736618]
[303.42819214 32.56888962]
[318.08538818 29.38040924]
[332.74261475 26.19192886]
[344.58270264 15.69801331]
[358.66381836 20.55311584]
[373.32101440 17.36463737]
[387.97821045 14.17615700]
[402.63540649 10.98767757]
[411.19830322 -2.02441645]
[426.10821533 -5.04919052]
[438.46047974 3.19440961]
[453.11770630 0.00593019]
[467.77490234 -3.18254924]
[482.43209839 -6.37102842]
[492.64141846 -24.76137161]
[512.82000732 -29.55346298]
[529.72100830 -18.04814339]
[544.17224121 -22.06818581]
[558.62353516 -26.08822632]
[573.07482910 -30.10826874]
[587.52606201 -34.12831116]
[601.97735596 -38.14834976]
[613.19903564 -49.30109024]
[627.53436279 -45.25777817]
[641.98565674 -49.27782059]
[656.43688965 -53.29786301]
[661.73321533 -67.88309479]
[674.60980225 -76.54180145]
[690.11535645 -75.94453430]
[702.28771973 -66.32095337]
[706.44635010 -51.37152100]
[700.99212646 -36.84460068]
[688.02239990 -28.32608795]
[672.52416992 -29.09152794]
[660.45697021 -38.84659195]
[646.00567627 -34.82654953]
[631.55438232 -30.80650711]
[621.36633301 -19.94130898]
[605.99737549 -23.69707870]
[591.54614258 -19.67703819]
[577.09484863 -15.65699577]
[562.64355469 -11.63695431]
[548.19232178 -7.61691284]
[533.74102783 -3.59687138]
[531.87463379 5.55467653]
[526.77490234 13.44844818]
[519.10565186 18.97946358]
[509.89361572 21.35535240]
[500.39102173 20.20965195]
[491.90563965 15.65762138]
[485.62057495 8.28617477]
[470.96337891 11.47465420]
[456.30618286 14.66313362]
[441.64898682 17.85161209]
[433.83746338 30.48157501]
[419.01840210 33.92394257]
[405.82388306 25.64488029]
[391.16668701 28.83336067]
[376.50949097 32.02183914]
[361.85229492 35.21031952]
[351.06054688 45.47617340]
[335.93109131 40.84913254]
[321.27386475 44.03761292]
[306.61666870 47.22609329]
[291.95947266 50.41456985]
[277.32540894 53.70761871]
[262.71524048 57.10507202]
[248.10504150 60.50252151]
[233.49487305 63.89997482]
[218.88468933 67.29742432]
[204.27450562 70.69487762]
[199.68019104 79.81294250]
[190.63722229 85.00925446]
[180.00787354 84.36088562]
[171.31211853 77.84088135]
[156.61088562 80.81974030]
[141.90965271 83.79859161]
[127.20841217 86.77745056]
[117.52519989 132.32194519]
[115.81533051 147.22418213]
[114.10545349 162.12640381]
[112.39558411 177.02862549]
[110.68571472 191.93086243]
[108.97584534 206.83308411]
[107.26597595 221.73530579]
[113.37973785 236.32751465]
[104.24207306 248.08984375]
[102.53220367 262.99206543]
[100.82232666 277.89428711]
[99.11245728 292.79650879]
[112.78929138 299.29443359]
[123.61345673 309.88293457]
[130.41084290 323.41342163]
[132.44409180 338.41824341]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 215]
[14 214]
[15 213]
[16 212]
[18 210]
[19 209]
[20 208]
[21 207]
[22 206]
[23 205]
[24 204]
[29 75]
[30 74]
[32 72]
[33 71]
[34 70]
[35 69]
[36 68]
[37 67]
[38 66]
[39 65]
[40 64]
[42 62]
[43 61]
[44 60]
[45 59]
[46 58]
[47 57]
[48 56]
[49 55]
[50 54]
[86 112]
[87 111]
[88 110]
[89 109]
[90 108]
[91 107]
[92 106]
[113 203]
[114 202]
[115 201]
[116 200]
[118 196]
[119 195]
[120 194]
[121 193]
[122 192]
[123 191]
[125 190]
[126 189]
[127 188]
[128 187]
[130 185]
[131 184]
[132 183]
[133 182]
[136 179]
[137 178]
[138 177]
[139 176]
[142 169]
[143 168]
[144 167]
[145 166]
[146 165]
[147 164]
[149 162]
[150 161]
[151 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
