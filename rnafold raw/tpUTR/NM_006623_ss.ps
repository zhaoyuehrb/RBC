%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 14:53:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUUGGAGCUCACUGGUCCCUGCCUCUGGGGCUUUUCUGAAGAAACCCACCCACUGUGAUCAAUAGGGAGAGAAAAUCCACAUUCUUGGGCUGAACGCGGGCCUCUGACACUGCUUACACUGCACUCUGACCCUGUAGUACAGCAAUAACCGUCUAAUAAAGAGCCUACCCCCAACUCCUUCUGCA\
) } def
/len { sequence length } bind def

/coor [
[108.43464661 214.10945129]
[116.11410522 201.12144470]
[126.89411163 190.56427002]
[140.03967285 183.15774536]
[136.29956055 168.63151550]
[132.55944824 154.10527039]
[127.83705139 148.39970398]
[128.88070679 139.30357361]
[125.38516235 124.71656036]
[121.88960266 110.12953949]
[118.39405060 95.54251862]
[129.31782532 107.60728455]
[130.60287476 128.25361633]
[117.36225891 150.08944702]
[89.87335968 163.57400513]
[79.04637909 173.95553589]
[68.21939087 184.33708191]
[57.39240646 194.71862793]
[46.56542206 205.10015869]
[35.73843765 215.48170471]
[36.95439148 231.07194519]
[27.82264137 243.76623535]
[12.65491867 247.57073975]
[-1.38704097 240.68907166]
[-7.67305422 226.37054443]
[-3.23505688 211.37594604]
[9.83146381 202.78524780]
[25.35689735 204.65472412]
[36.18387985 194.27317810]
[47.01086807 183.89163208]
[57.83785248 173.51010132]
[68.66483307 163.12855530]
[79.49182129 152.74700928]
[72.24785614 139.61213684]
[57.69071579 143.23010254]
[43.13357162 146.84805298]
[28.57643127 150.46601868]
[17.15337563 162.23231506]
[1.32025266 157.96099854]
[-2.63517809 142.04600525]
[9.35609150 130.85934448]
[24.95847130 135.90887451]
[39.51561356 132.29092407]
[54.07275391 128.67295837]
[68.62989807 125.05500031]
[69.32190704 117.58699036]
[54.68922424 120.88616180]
[47.02979660 107.98914337]
[56.92872238 96.71920776]
[70.70593262 102.65097809]
[71.39794922 95.18297577]
[57.75346756 88.95174408]
[48.62619400 88.22953796]
[43.93347168 82.49952698]
[30.39559746 76.03996277]
[16.85772324 69.58039856]
[3.31984782 63.12083817]
[-12.22266579 67.09699249]
[-24.93456078 57.30989838]
[-25.06435966 41.26736832]
[-12.51249027 31.27586555]
[3.09232569 35.00001526]
[9.77940941 49.58296585]
[23.31728554 56.04252625]
[36.85515976 62.50208664]
[50.39303589 68.96164703]
[63.98469162 75.30726624]
[77.62917328 81.53849030]
[83.17173767 76.48577881]
[73.06630707 65.40064240]
[62.96086884 54.31550598]
[49.92462921 46.89550781]
[52.95323181 32.20443726]
[67.86118317 30.54520416]
[74.04600525 44.21007156]
[84.15143585 55.29520798]
[94.25687408 66.38034058]
[99.79943848 61.32762146]
[94.85375214 47.16640472]
[89.90805817 33.00518417]
[75.56591034 26.36602783]
[70.19757843 11.50142002]
[76.98799896 -2.76973128]
[91.90853119 -7.98060560]
[106.10709381 -1.03968358]
[111.15992737 13.93510914]
[104.06928253 28.05949402]
[109.01496887 42.22071457]
[113.96066284 56.38193130]
[128.57652283 59.75483322]
[139.22758484 49.19287491]
[149.87863159 38.63091278]
[160.52969360 28.06895256]
[164.88072205 12.85779953]
[179.36604309 9.39016438]
[190.01710510 -1.17179608]
[200.57905579 -11.82285213]
[211.05117798 -22.56225014]
[221.52330017 -33.30165100]
[231.99542236 -44.04104996]
[242.46754456 -54.78044891]
[243.08915710 -67.67729187]
[252.05003357 -76.40773010]
[264.15673828 -76.67446136]
[274.80780029 -87.23641968]
[279.15881348 -102.44757080]
[293.64413452 -105.91520691]
[304.29519653 -116.47716522]
[303.71289062 -127.36487579]
[309.11791992 -136.58015442]
[318.51037598 -141.19187927]
[328.67095947 -139.88909912]
[339.67083740 -150.08729553]
[350.67068481 -160.28547668]
[349.71679688 -175.89395142]
[359.06051636 -188.43304443]
[374.29000854 -191.98219299]
[388.21438599 -184.86560059]
[394.25897217 -170.44351196]
[389.56970215 -155.52557373]
[376.36071777 -147.15559387]
[360.86886597 -149.28562927]
[349.86901855 -139.08743286]
[338.86917114 -128.88923645]
[334.55343628 -110.05324554]
[314.85714722 -105.82611084]
[304.20611572 -95.26415253]
[300.61691284 -80.80846405]
[285.36975098 -76.58536530]
[274.71868896 -66.02340698]
[271.03610229 -48.87424088]
[253.20693970 -44.30832672]
[242.73481750 -33.56892776]
[232.26269531 -22.82952881]
[221.79057312 -12.09013081]
[211.31846619 -1.35073137]
[208.89463806 5.64782476]
[200.57905579 9.47925949]
[189.92800903 20.04121971]
[186.33882141 34.49691010]
[171.09165955 38.72000885]
[160.44059753 49.28197098]
[149.78953552 59.84392929]
[139.13848877 70.40589142]
[153.54934692 66.24328613]
[165.20326233 56.79944229]
[179.32537842 51.74319458]
[194.32505798 51.64406204]
[208.51277161 56.51320648]
[220.29049683 65.80218506]
[228.33163452 78.46473694]
[231.73046875 93.07459259]
[230.10415649 107.98617554]
[223.63587952 121.51988983]
[213.05421448 132.15136719]
[199.55101013 138.68312073]
[184.64724731 140.37942505]
[170.02157593 137.04924011]
[157.32141113 129.06765747]
[147.97723389 117.33368683]
[143.04209900 103.17242432]
[132.98106384 92.04696655]
[136.47662354 106.63398743]
[139.97218323 121.22100067]
[143.46772766 135.80802917]
[147.08569336 150.36515808]
[150.82580566 164.89140320]
[154.56591797 179.41763306]
[169.65377808 179.55482483]
[184.19177246 183.59329224]
[197.18865967 191.25770569]
[207.75830078 202.02548218]
[215.18005371 215.16244507]
[218.94786072 229.77293396]
[218.80485535 244.86073303]
[214.76077271 259.39715576]
[207.09133911 272.39111328]
[196.31948853 282.95657349]
[183.17965698 290.37326050]
[168.56771851 294.13543701]
[153.47996521 293.98660278]
[138.94509888 289.93688965]
[125.95413208 282.26245117]
[115.39280701 271.48651123]
[107.98120880 258.34381104]
[104.22467041 243.73043823]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 168]
[5 167]
[6 166]
[8 165]
[9 164]
[10 163]
[11 162]
[15 33]
[16 32]
[17 31]
[18 30]
[19 29]
[20 28]
[34 45]
[35 44]
[36 43]
[37 42]
[51 68]
[52 67]
[54 66]
[55 65]
[56 64]
[57 63]
[78 89]
[79 88]
[80 87]
[90 144]
[91 143]
[92 142]
[93 141]
[95 139]
[96 138]
[97 136]
[98 135]
[99 134]
[100 133]
[101 132]
[104 130]
[105 129]
[107 127]
[108 126]
[112 124]
[113 123]
[114 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
