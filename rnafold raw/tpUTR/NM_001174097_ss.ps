%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 22:52:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAGUGAGCUCUAGGCUGUAGAAAUUUAAAAACUACAAUGUGAUUAACUCGAGCCUUUAGUUUUCAUCCAUGUACAUGGAUCACAGUUUGCUUUGAUCUUCUUCAAUAUGUGAAUUUGGGCUCACAGAAUCAAAGCCUAUGCUUGGUUUAAUGCUUGCAAUCUGAGCUCUUGAACAAAUAAAAUUAACUAUUGUAGUGUG\
) } def
/len { sequence length } bind def

/coor [
[80.65464020 289.16152954]
[76.79420471 270.68356323]
[78.18146515 251.84606934]
[84.71513367 234.11128235]
[95.89421082 218.85751343]
[110.85638428 207.27217102]
[104.92715454 193.49377441]
[98.99791718 179.71537781]
[93.06867981 165.93698120]
[87.13945007 152.15858459]
[81.21021271 138.38020325]
[85.80117035 97.15682220]
[75.23609924 86.50885773]
[64.67102051 75.86089325]
[54.10594559 65.21292877]
[43.54087067 54.56496429]
[32.97579193 43.91699600]
[17.98312187 43.44818115]
[6.77341700 53.41525269]
[-4.43628740 63.38232422]
[-15.64599133 73.34939575]
[-11.89448071 88.18801880]
[-15.47981071 103.06767273]
[-25.57809830 114.56911469]
[-39.86883163 120.04940033]
[-55.06810379 118.24919891]
[-67.68323517 109.58219147]
[-74.81535339 96.03998566]
[-74.82556152 80.73448181]
[-67.71150970 67.18276978]
[-55.10795212 58.49893951]
[-39.91109467 56.67847061]
[-25.61306381 62.13969040]
[-14.40335941 52.17261887]
[-3.19365501 42.20554733]
[8.01604939 32.23847580]
[-6.85301876 34.21604919]
[-17.07669258 23.23987198]
[-14.04984379 8.54843903]
[-0.32013050 2.50733209]
[12.55637741 10.20133781]
[6.19940233 -3.38501048]
[-0.15757306 -16.97135925]
[-6.51454830 -30.55770683]
[-12.87152386 -44.14405441]
[-26.85574341 -44.62106705]
[-39.21039200 -51.04764175]
[-47.54941559 -62.11832428]
[-50.29008865 -75.63712311]
[-46.95315933 -88.95300293]
[-38.24552917 -99.47974396]
[-44.38938522 -113.16378784]
[-50.53324127 -126.84783173]
[-56.67709732 -140.53187561]
[-62.82094955 -154.21591187]
[-68.96480560 -167.89996338]
[-80.72556305 -173.20881653]
[-85.55900574 -184.73925781]
[-81.37551117 -196.09477234]
[-87.30474854 -209.87316895]
[-93.23398590 -223.65156555]
[-99.16321564 -237.42996216]
[-105.09245300 -251.20835876]
[-117.65458679 -260.82623291]
[-115.57828522 -275.57540894]
[-121.50751495 -289.35379028]
[-127.43675232 -303.13220215]
[-140.44477844 -306.64450073]
[-148.92900085 -316.85998535]
[-149.96258545 -329.90368652]
[-143.39141846 -340.99288940]
[-149.10458374 -354.86227417]
[-163.05108643 -355.99423218]
[-175.09092712 -362.99282837]
[-182.90187073 -374.44219971]
[-185.00587463 -388.07461548]
[-181.04846191 -401.21945190]
[-171.85699463 -411.32647705]
[-177.35269165 -425.28344727]
[-182.84840393 -439.24041748]
[-188.34410095 -453.19741821]
[-193.83979797 -467.15438843]
[-199.33549500 -481.11135864]
[-211.59089661 -491.11715698]
[-209.05462646 -505.79421997]
[-214.55032349 -519.75122070]
[-227.71301270 -529.53259277]
[-225.55487061 -545.78912354]
[-210.29603577 -551.79748535]
[-197.63348389 -541.37670898]
[-200.59335327 -525.24688721]
[-195.09764099 -511.28994751]
[-183.23533630 -502.28244019]
[-185.37852478 -486.60705566]
[-179.88282776 -472.65008545]
[-174.38711548 -458.69311523]
[-168.89141846 -444.73614502]
[-163.39572144 -430.77914429]
[-157.90002441 -416.82217407]
[-141.86871338 -414.82482910]
[-128.95642090 -404.96038818]
[-122.74297333 -389.84463501]
[-125.01087952 -373.56497192]
[-135.23521423 -360.57543945]
[-129.52204895 -346.70605469]
[-113.73748779 -340.91259766]
[-106.88845062 -325.18756104]
[-113.65835571 -309.06143188]
[-107.72911835 -295.28302002]
[-101.79988861 -281.50463867]
[-89.66184998 -272.87228394]
[-91.31405640 -257.13760376]
[-85.38481903 -243.35919189]
[-79.45558929 -229.58079529]
[-73.52635193 -215.80241394]
[-67.59712219 -202.02401733]
[-52.98561096 -192.31062317]
[-55.28076172 -174.04380798]
[-49.13690567 -160.35977173]
[-42.99305344 -146.67572021]
[-36.84919739 -132.99168396]
[-30.70534134 -119.30764008]
[-24.56148529 -105.62359619]
[-8.45417500 -104.37986755]
[4.90629196 -95.13151550]
[11.82141972 -80.32359314]
[10.31907082 -63.95553207]
[0.71482474 -50.50102997]
[7.07180023 -36.91468430]
[13.42877579 -23.32833481]
[19.78575134 -9.74198627]
[26.14272690 3.84436250]
[43.07392120 14.59110928]
[43.62376022 33.35192108]
[54.18883514 43.99988556]
[64.75391388 54.64785385]
[75.31898499 65.29581451]
[85.88406372 75.94378662]
[96.44914246 86.59175110]
[110.40612030 92.08744812]
[125.39466858 91.50148010]
[140.38322449 90.91551208]
[149.70187378 81.99015045]
[162.20317078 81.81501770]
[171.17312622 89.93838501]
[186.16900635 89.58674622]
[201.16488647 89.23510742]
[213.23570251 78.66746521]
[228.99761963 81.65766907]
[236.35946655 95.91189575]
[229.67384338 110.49551392]
[214.06939697 114.22122955]
[201.51652527 104.23098755]
[186.52064514 104.58262634]
[171.52476501 104.93426514]
[157.05543518 114.85820007]
[140.96919250 105.90406036]
[125.98063660 106.49002838]
[110.99208832 107.07599640]
[106.99121857 113.41973877]
[119.67856598 121.42169189]
[111.67640686 134.10890198]
[98.98947906 126.10722351]
[94.98860931 132.45095825]
[100.91784668 146.22935486]
[106.84707642 160.00775146]
[112.77631378 173.78614807]
[118.70555115 187.56454468]
[124.63478088 201.34294128]
[135.86334229 198.95904541]
[147.32905579 198.49963379]
[158.70462036 199.97650146]
[169.66546631 203.34622192]
[179.89910889 208.51132202]
[189.11402893 215.32321167]
[197.04795837 223.58638000]
[203.47537231 233.06404114]
[208.21388245 243.48493958]
[211.12944031 254.55107117]
[212.14007568 265.94619751]
[211.21824646 277.34494019]
[208.39158630 288.42202759]
[203.74203491 298.86160278]
[197.40351868 308.36618042]
[189.55807495 316.66522217]
[180.43058777 323.52267456]
[170.28239441 328.74389648]
[174.44699097 343.15417480]
[178.61160278 357.56445312]
[182.77619934 371.97473145]
[192.98240662 385.51245117]
[182.79910278 399.06741333]
[166.95486450 393.03445435]
[168.36592102 376.13934326]
[164.20132446 361.72906494]
[160.03671265 347.31878662]
[155.87211609 332.90850830]
[137.06295776 333.52017212]
[118.80362701 328.91687012]
[102.51251221 319.44958496]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 169]
[7 168]
[8 167]
[9 166]
[10 165]
[11 164]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 36]
[19 35]
[20 34]
[21 33]
[41 132]
[42 131]
[43 130]
[44 129]
[45 128]
[51 123]
[52 122]
[53 121]
[54 120]
[55 119]
[56 118]
[59 116]
[60 115]
[61 114]
[62 113]
[63 112]
[65 110]
[66 109]
[67 108]
[71 105]
[72 104]
[78 99]
[79 98]
[80 97]
[81 96]
[82 95]
[83 94]
[85 92]
[86 91]
[140 159]
[141 158]
[142 157]
[145 155]
[146 154]
[147 153]
[187 197]
[188 196]
[189 195]
[190 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
