%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 08:32:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCACAGGACUGGAGGGGUCUCAAGGCUCCUCAUGGAGUGGGGGCUUCACUCAAGCAGCUGGCGGCAGAGGGAAGGGGCUGAAUAAACGCCUGGAGGCCUGGCCAUGUA\
) } def
/len { sequence length } bind def

/coor [
[204.27813721 142.46134949]
[189.72602844 138.82319641]
[182.36201477 140.27613831]
[174.80999756 134.86483765]
[160.36877441 130.80883789]
[145.92756653 126.75283813]
[141.27877808 128.35009766]
[135.57580566 126.93302155]
[130.78396606 122.02469635]
[116.60041046 117.14344025]
[102.41684723 112.26219177]
[87.41684723 112.26219177]
[73.23329163 117.14344025]
[59.04972839 122.02469635]
[44.86616898 126.90594482]
[30.68260956 131.78720093]
[16.49904823 136.66844177]
[2.31548810 141.54969788]
[-11.86807251 146.43095398]
[-22.21469879 159.15412903]
[-38.36152649 156.28846741]
[-43.69808197 140.78192139]
[-32.73457718 128.58628845]
[-16.74932289 132.24739075]
[-2.56576324 127.36613464]
[11.61779690 122.48488617]
[25.80135727 117.60363770]
[39.98491669 112.72238159]
[54.16847992 107.84113312]
[68.35203552 102.95988464]
[82.53559875 98.07862854]
[84.66744232 90.88799286]
[74.34451294 80.00511169]
[88.93112946 76.50672150]
[91.06296539 69.31608582]
[81.83183289 57.49296570]
[72.60069275 45.66984940]
[63.36956024 33.84672928]
[54.13842392 22.02361298]
[44.90728760 10.20049477]
[29.22421265 6.82103062]
[22.21748543 -7.61106205]
[29.26206207 -22.02471733]
[44.95394897 -25.36301422]
[57.25567245 -15.06509399]
[56.73040390 0.96935803]
[65.96154022 12.79247570]
[75.19268036 24.61559486]
[84.42381287 36.43871307]
[93.65495300 48.26182938]
[102.88608551 60.08494949]
[111.90613556 70.40394592]
[115.18959808 81.69950867]
[113.20748901 91.57673645]
[107.29810333 98.07862854]
[121.48165894 102.95988464]
[135.66522217 107.84113312]
[149.98356628 112.31161499]
[164.42477417 116.36761475]
[178.86599731 120.42361450]
[193.36416626 124.27108765]
[207.91627502 127.90924072]
[222.72821045 130.27709961]
[237.68928528 131.35699463]
[252.65036011 132.43687439]
[262.98794556 124.55850220]
[275.51525879 125.85877991]
[283.48678589 135.08337402]
[298.41052246 136.59396362]
[313.33425903 138.10455322]
[322.80117798 124.63687897]
[337.66436768 117.77964020]
[353.86849976 119.30055237]
[367.04403687 128.69535828]
[373.68536377 143.34928894]
[388.64645386 144.42916870]
[403.60751343 145.50906372]
[418.56860352 146.58894348]
[427.73947144 134.18336487]
[442.16958618 128.72663879]
[457.25430298 131.96000671]
[468.18017578 142.85168457]
[471.46078491 157.92620850]
[466.04931641 172.37333679]
[453.67251587 181.58303833]
[438.27981567 182.61654663]
[424.78292847 175.14405823]
[417.48870850 161.55001831]
[402.52761841 160.47013855]
[387.56655884 159.39024353]
[372.60546875 158.31036377]
[365.65121460 170.15830994]
[354.19741821 177.86395264]
[340.47070312 179.85995483]
[327.16983032 175.69573975]
[316.93493652 166.13755798]
[311.82369995 153.02828979]
[296.89993286 151.51770020]
[281.97619629 150.00711060]
[266.47406006 158.09188843]
[251.57048035 147.39796448]
[236.60940552 146.31806946]
[221.64831543 145.23818970]
[229.79023743 157.83616638]
[226.89955139 172.55499268]
[214.59782410 181.13796997]
[199.78585815 178.77037048]
[190.77259827 166.78031921]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 62]
[2 61]
[4 60]
[5 59]
[6 58]
[9 57]
[10 56]
[11 55]
[12 31]
[13 30]
[14 29]
[15 28]
[16 27]
[17 26]
[18 25]
[19 24]
[35 51]
[36 50]
[37 49]
[38 48]
[39 47]
[40 46]
[63 103]
[64 102]
[65 101]
[68 99]
[69 98]
[70 97]
[75 91]
[76 90]
[77 89]
[78 88]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
