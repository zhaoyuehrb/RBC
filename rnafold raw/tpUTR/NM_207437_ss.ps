%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 18:34:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUUUGGGUGAAGAAAACUGCUUAAUGAAUUCGGAGCCUGGGGUUGUCAGAGUGAUCGGGUCUGCUGUCAUUUCUUGGGGCCUCUCAAGAGGCAGGAGGGGGACUGACACUGAUUUUUCAUUUGAAAUCAGCCACUUAAAUCUCUUUCCAUACAAAUUAACCUGAAUGGUUUUGUUUUUAAUACUACUUUUUAAAAGGAAUUUAUAUAAUCAAAAAGUAAAUAUUGGAGAGUAUUUUAA\
) } def
/len { sequence length } bind def

/coor [
[100.31475830 135.28329468]
[87.08084869 132.83451843]
[78.74729156 145.30656433]
[70.41374207 157.77861023]
[62.08018875 170.25065613]
[53.74663544 182.72270203]
[45.41308212 195.19474792]
[37.07952881 207.66677856]
[28.74597359 220.13882446]
[33.95429230 234.63639832]
[29.67729187 249.25012207]
[17.75631905 258.43457031]
[2.89096403 258.83358765]
[-5.44258928 271.30563354]
[-13.77614307 283.77767944]
[-10.90288544 299.08721924]
[-19.53196335 311.61694336]
[-34.14498138 314.26177979]
[-28.64811707 328.77261353]
[-32.76278305 343.73422241]
[-44.90680313 353.39352417]
[-60.41055679 354.03637695]
[-73.31253052 345.41552734]
[-78.65165710 330.84594727]
[-74.37493134 315.92987061]
[-62.12683868 306.40286255]
[-46.61702347 305.92825317]
[-49.76564789 291.41543579]
[-41.49190903 278.64828491]
[-26.24818802 275.44412231]
[-17.91463280 262.97207642]
[-9.58108044 250.50003052]
[-14.90117550 236.61354065]
[-10.97779369 222.08525085]
[0.88678205 212.54139709]
[16.27392960 211.80528259]
[24.60748291 199.33323669]
[32.94103622 186.86119080]
[41.27458954 174.38914490]
[49.60814285 161.91709900]
[57.94169617 149.44505310]
[66.27525330 136.97300720]
[74.60880280 124.50096893]
[62.39478683 105.13844299]
[64.27007294 80.66787720]
[50.73129654 74.21021271]
[37.19251633 67.75254822]
[23.65373802 61.29487991]
[10.11495876 54.83721542]
[-3.42382026 48.37954712]
[-0.84173596 63.15563965]
[-10.68300915 74.47594452]
[-25.67462158 73.97439575]
[-34.73728943 62.02165604]
[-31.17340851 47.45117950]
[-17.61571312 41.03102493]
[-30.70315361 33.70170593]
[-43.14769745 38.82331085]
[-56.08236313 35.89147568]
[-64.84154510 26.19317055]
[-66.39823914 13.41380596]
[-79.38862610 5.91380596]
[-92.37900543 -1.58619404]
[-108.19895172 -1.78558159]
[-115.35244751 -14.84991646]
[-128.34281921 -22.34991646]
[-141.33320618 -29.84991646]
[-154.32359314 -37.34991455]
[-167.31396484 -44.84991455]
[-172.49478149 -44.85015869]
[-176.74073792 -46.64706421]
[-179.52633667 -49.58836746]
[-180.65881348 -52.90798187]
[-193.34472656 -60.91220093]
[-206.03063965 -68.91641998]
[-218.71656799 -76.92063904]
[-231.40248108 -84.92485809]
[-244.08839417 -92.92906952]
[-256.77432251 -100.93328857]
[-273.17312622 -101.03610229]
[-281.04724121 -115.42118073]
[-272.29641724 -129.29039001]
[-255.92277527 -128.37628174]
[-248.77009583 -113.61920929]
[-236.08418274 -105.61499023]
[-223.39826965 -97.61077118]
[-210.71234131 -89.60655212]
[-198.02642822 -81.60233307]
[-185.34051514 -73.59812164]
[-172.65458679 -65.59390259]
[-159.81396484 -57.84029770]
[-146.82359314 -50.34029770]
[-133.83320618 -42.84029770]
[-120.84282684 -35.34029770]
[-107.85244751 -27.84029770]
[-92.96165466 -28.17736053]
[-84.87900543 -14.57657528]
[-71.88862610 -7.07657528]
[-58.89824295 0.42342490]
[-42.84411621 -4.61653662]
[-27.82087517 3.68584871]
[-23.37383461 20.61426544]
[-10.28639507 27.94358253]
[3.03384614 34.84077072]
[16.57262611 41.29843521]
[30.11140442 47.75610352]
[43.65018463 54.21376801]
[57.18896484 60.67143631]
[70.72774506 67.12910461]
[83.46577454 59.20808411]
[83.66211700 44.20936966]
[83.85845947 29.21065331]
[84.05480957 14.21193886]
[84.25115204 -0.78677630]
[84.44749451 -15.78549099]
[84.64383698 -30.78420639]
[84.84017944 -45.78292084]
[73.63395691 -56.92724991]
[73.67374420 -72.73149109]
[84.93592834 -83.81925964]
[100.73886108 -83.61238861]
[111.70694733 -72.23360443]
[111.33300781 -56.43374252]
[99.83889771 -45.58657837]
[99.64255524 -30.58786201]
[99.44621277 -15.58914757]
[99.24986267 -0.59043241]
[99.05352020 14.40828228]
[98.85717773 29.40699768]
[98.66083527 44.40571213]
[98.46449280 59.40442657]
[108.95490265 61.28760147]
[118.36511993 65.77094269]
[126.08096313 72.42575836]
[131.63539124 80.68699646]
[134.73605347 89.89977264]
[135.27908325 99.37051392]
[149.99085999 102.29686737]
[164.70265198 105.22322083]
[179.41442871 108.14957428]
[190.81529236 97.78974152]
[205.95335388 96.14874268]
[219.00064087 103.64754486]
[225.05799866 117.22865295]
[239.76977539 120.15500641]
[254.48156738 123.08135986]
[269.19332886 126.00771332]
[283.90512085 128.93406677]
[298.61691284 131.86042786]
[313.32867432 134.78677368]
[332.70809937 114.94564056]
[364.99493408 120.97882080]
[378.61709595 114.69892120]
[392.23922729 108.41902924]
[405.86138916 102.13912964]
[419.48352051 95.85923767]
[422.47381592 91.62850952]
[426.39175415 89.19815826]
[430.40145874 88.62088776]
[433.76599121 89.61195374]
[447.62417603 83.87170410]
[461.48239136 78.13145447]
[468.92550659 63.91950607]
[484.70425415 61.01936340]
[496.71450806 71.65576935]
[495.74304199 87.66938019]
[482.53506470 96.77593231]
[467.22262573 91.98964691]
[453.36444092 97.72989655]
[439.50625610 103.47014618]
[425.76342773 109.48138428]
[412.14126587 115.76127625]
[398.51913452 122.04117584]
[384.89697266 128.32107544]
[371.27484131 134.60096741]
[370.73535156 142.08154297]
[385.70065308 143.10121155]
[400.66595459 144.12089539]
[415.25274658 140.62438965]
[423.14459229 153.38050842]
[413.50442505 164.87255859]
[399.56985474 159.31924438]
[384.61309814 158.18096924]
[369.65634155 157.04267883]
[369.11685181 164.52325439]
[381.69689941 172.69284058]
[394.27697754 180.86242676]
[406.85702515 189.03201294]
[419.43707275 197.20159912]
[432.01715088 205.37118530]
[444.59719849 213.54075623]
[457.17727661 221.71034241]
[468.77078247 212.01078796]
[482.70889282 206.16091919]
[497.75219727 204.68095398]
[512.56304932 207.70243835]
[525.82452393 214.95674133]
[536.35742188 225.79879761]
[543.22509766 239.26454163]
[545.81689453 254.15661621]
[543.90240479 269.15081787]
[537.65185547 282.91387939]
[527.62103271 294.22201538]
[514.70184326 302.06967163]
[500.04302979 305.75906372]
[484.94812012 304.96212769]
[470.75930786 299.74975586]
[458.73825073 290.58538818]
[449.95385742 278.28393555]
[445.18722534 263.93923950]
[444.86218262 248.82678223]
[449.00769043 234.29040527]
[436.42761230 226.12081909]
[423.84756470 217.95123291]
[411.26751709 209.78164673]
[398.68743896 201.61206055]
[386.10739136 193.44247437]
[373.52731323 185.27288818]
[360.94726562 177.10330200]
[348.33569336 181.74864197]
[335.56292725 181.57527161]
[324.32177734 177.07415771]
[315.94085693 169.28079224]
[311.22833252 159.58401489]
[310.40231323 149.49855042]
[295.69055176 146.57220459]
[280.97875977 143.64584351]
[266.26699829 140.71949768]
[251.55520630 137.79313660]
[236.84342957 134.86679077]
[222.13165283 131.94042969]
[211.33811951 142.16967773]
[196.41432190 144.10469055]
[183.05656433 136.79553223]
[176.48806763 122.86135864]
[161.77629089 119.93500519]
[147.06451416 117.00864410]
[132.35273743 114.08229065]
[124.72649384 125.17162323]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 43]
[3 42]
[4 41]
[5 40]
[6 39]
[7 38]
[8 37]
[9 36]
[13 32]
[14 31]
[15 30]
[18 27]
[45 109]
[46 108]
[47 107]
[48 106]
[49 105]
[50 104]
[56 103]
[57 102]
[61 99]
[62 98]
[63 97]
[65 95]
[66 94]
[67 93]
[68 92]
[69 91]
[73 90]
[74 89]
[75 88]
[76 87]
[77 86]
[78 85]
[79 84]
[110 131]
[111 130]
[112 129]
[113 128]
[114 127]
[115 126]
[116 125]
[117 124]
[137 238]
[138 237]
[139 236]
[140 235]
[144 231]
[145 230]
[146 229]
[147 228]
[148 227]
[149 226]
[150 225]
[152 175]
[153 174]
[154 173]
[155 172]
[156 171]
[160 170]
[161 169]
[162 168]
[185 219]
[186 218]
[187 217]
[188 216]
[189 215]
[190 214]
[191 213]
[192 212]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
