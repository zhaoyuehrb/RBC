%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 22:30:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGCCACCCCGGGACUGCAGGCGGCGGAUGUCAGGCCCUGUCUGGGCCAGAACUGAGCGCUGUGGGGAGCGCGCCCGGACCUGGCAGUGGAGCCACCGAGCGAGCAGCUCGGUCCAGUGACCCAGAUCCCAGGGACCUCAGUCGGCUUAAUCAGAGUGUGGCAUAGAAGCUAUUUAAUGAUUAAAGUCAUUUGCAGUA\
) } def
/len { sequence length } bind def

/coor [
[219.22239685 568.31555176]
[216.39772034 583.04718018]
[213.57304382 597.77880859]
[221.35176086 611.80993652]
[215.09883118 626.58422852]
[199.61097717 630.76818848]
[186.76913452 621.15222168]
[186.42448425 605.11285400]
[198.84140015 594.95416260]
[201.66607666 580.22253418]
[204.49075317 565.49090576]
[195.94390869 553.34643555]
[198.59867859 538.36621094]
[211.39482117 529.48388672]
[214.21948242 514.75219727]
[217.04415894 500.02059937]
[219.86883545 485.28894043]
[222.69351196 470.55731201]
[225.51818848 455.82565308]
[228.34286499 441.09402466]
[231.16754150 426.36239624]
[225.96536255 412.40579224]
[236.16296387 400.30953979]
[234.15617371 385.44439697]
[227.52626038 371.98910522]
[214.96038818 363.99234009]
[215.80130005 348.19351196]
[209.17140198 334.73825073]
[202.54148865 321.28295898]
[189.87603760 318.88247681]
[180.77204895 309.48300171]
[178.71678162 296.36276245]
[184.68264771 284.28048706]
[178.26597595 270.72222900]
[171.84930420 257.16397095]
[165.32580566 243.65678406]
[158.69590759 230.20150757]
[152.06599426 216.74623108]
[145.43609619 203.29096985]
[138.80618286 189.83569336]
[131.85954285 176.54116821]
[124.60005951 163.41487122]
[117.34057617 150.28855896]
[110.08109283 137.16226196]
[102.82160950 124.03594971]
[95.56212616 110.90964508]
[84.91374207 100.34499359]
[71.73054504 93.18934631]
[58.54734802 86.03369904]
[45.36414719 78.87805176]
[30.38229752 83.14207458]
[17.11459541 75.69742584]
[13.14182949 61.38824463]
[-0.04136910 54.23259735]
[-13.22456741 47.07695007]
[-29.04428673 47.29383087]
[-36.53900528 34.42221451]
[-49.72220230 27.26656723]
[-62.90539932 20.11092186]
[-76.08860016 12.95527363]
[-85.13347626 11.60933590]
[-89.42212677 5.58118629]
[-102.49072266 -1.78168225]
[-118.26712036 1.13117683]
[-130.28594971 -9.49554539]
[-129.32739258 -25.50993538]
[-116.12677765 -34.62712479]
[-100.81047821 -29.85318756]
[-95.12785339 -14.85027695]
[-82.05925751 -7.48740816]
[-68.93295288 -0.22792424]
[-55.74975204 6.92772293]
[-42.56655502 14.08337021]
[-29.38335800 21.23901749]
[-14.50658798 20.51031685]
[-6.06892014 33.89375305]
[7.11427784 41.04940033]
[20.29747581 48.20504761]
[34.46071625 43.73982239]
[47.93228912 50.80886459]
[52.51979446 65.69484711]
[65.70299530 72.85049438]
[78.88619232 80.00614166]
[92.06938934 87.16178894]
[105.25258636 80.00614166]
[106.43537903 65.05284882]
[99.81034851 50.68554306]
[108.52713013 38.60800552]
[109.70992279 23.65471077]
[110.89270782 8.70141602]
[112.07550049 -6.25187826]
[110.05749512 -10.12164402]
[109.44377899 -14.03790188]
[110.07556152 -17.55175209]
[111.66410065 -20.31250381]
[113.83419800 -22.10165977]
[115.95825958 -36.95051193]
[118.08232880 -51.79935837]
[120.20639801 -66.64820862]
[122.33046722 -81.49706268]
[124.45453644 -96.34590912]
[116.02026367 -109.99298096]
[121.56671906 -125.04676819]
[136.83914185 -129.95928955]
[150.12182617 -120.96207428]
[151.22543335 -104.95702362]
[139.30339050 -94.22183990]
[137.17932129 -79.37299347]
[135.05525208 -64.52413940]
[132.93118286 -49.67529297]
[130.80711365 -34.82644272]
[128.68304443 -19.97759247]
[127.02879333 -5.06908989]
[125.84600067 9.88420391]
[124.66321564 24.83749962]
[123.48043060 39.79079437]
[130.19006348 53.08854294]
[121.38867188 66.23564148]
[120.20588684 81.18893433]
[118.22948456 96.75866699]
[108.68843079 103.65016174]
[115.94791412 116.77646637]
[123.20739746 129.90277100]
[130.46688843 143.02908325]
[137.72636414 156.15538025]
[144.98585510 169.28169250]
[149.47575378 171.98214722]
[152.20198059 175.75973511]
[153.04978943 179.75961304]
[152.26145935 183.20578003]
[158.89135742 196.66105652]
[165.52127075 210.11633301]
[172.15116882 223.57160950]
[178.78108215 237.02687073]
[185.38778687 243.34927368]
[185.40756226 250.74729919]
[191.82423401 264.30554199]
[198.24089050 277.86380005]
[214.81468201 283.44635010]
[222.08448792 298.98046875]
[215.99676514 314.65304565]
[222.62667847 328.10833740]
[229.25657654 341.56359863]
[242.29666138 350.52276611]
[240.98153687 365.35919189]
[247.61145020 378.81448364]
[285.47445679 377.44671631]
[298.54302979 384.80957031]
[311.61163330 392.17245483]
[324.68023682 399.53530884]
[337.74880981 406.89819336]
[350.81741333 414.26104736]
[363.88601685 421.62393188]
[377.10290527 413.92581177]
[392.29812622 413.87722778]
[405.39047241 421.39099121]
[412.91363525 434.36242676]
[412.93383789 449.25756836]
[426.00244141 456.62042236]
[439.07104492 463.98330688]
[452.13961792 471.34616089]
[465.20822144 478.70904541]
[480.36077881 474.21728516]
[494.21133423 481.82894897]
[498.54263306 497.02813721]
[490.78497314 510.79745483]
[475.54086304 514.96783447]
[461.85430908 507.06500244]
[457.84536743 491.77761841]
[444.77676392 484.41476440]
[431.70816040 477.05187988]
[418.63958740 469.68902588]
[405.57098389 462.32614136]
[392.82055664 470.02630615]
[377.82809448 470.31234741]
[364.61810303 463.00738525]
[356.78677368 449.98559570]
[356.52313232 434.69250488]
[343.45455933 427.32965088]
[330.38595581 419.96679688]
[317.31735229 412.60391235]
[304.24874878 405.24105835]
[291.18017578 397.87817383]
[278.11157227 390.51531982]
[271.30734253 393.67004395]
[269.96725464 408.61004639]
[257.69885254 399.97949219]
[250.89460754 403.13421631]
[255.89474487 418.14450073]
[245.89918518 429.18707275]
[243.07450867 443.91870117]
[240.24983215 458.65032959]
[237.42515564 473.38198853]
[234.60047913 488.11361694]
[231.77580261 502.84524536]
[228.95112610 517.57690430]
[226.12644958 532.30853271]
[234.72959900 545.29406738]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 11]
[2 10]
[3 9]
[14 197]
[15 196]
[16 195]
[17 194]
[18 193]
[19 192]
[20 191]
[21 190]
[23 188]
[24 146]
[25 145]
[27 143]
[28 142]
[29 141]
[33 138]
[34 137]
[35 136]
[36 134]
[37 133]
[38 132]
[39 131]
[40 130]
[41 126]
[42 125]
[43 124]
[44 123]
[45 122]
[46 121]
[47 84]
[48 83]
[49 82]
[50 81]
[53 78]
[54 77]
[55 76]
[57 74]
[58 73]
[59 72]
[60 71]
[62 70]
[63 69]
[85 119]
[86 118]
[88 116]
[89 115]
[90 114]
[91 113]
[96 112]
[97 111]
[98 110]
[99 109]
[100 108]
[101 107]
[147 184]
[148 183]
[149 182]
[150 181]
[151 180]
[152 179]
[153 178]
[158 173]
[159 172]
[160 171]
[161 170]
[162 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
