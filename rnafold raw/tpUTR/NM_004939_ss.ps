%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 06:34:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUUACAUUUACUGAAUAAGAUUUGAGUAAUGAAAGUCUGUAGUCUUAAAACUCUAAAACAGUUGUACUGCUUCCAAGCAGCAGUAUUUAUAGUAACGUAAGCUAUUAAUGCUAACUCUUGCAUGUCAAGAAACAUUAGUCUUAGGAAUUCUUCAAAAAAUGGCAUCCCAAUGAAAAUAAAUUUGAUGACUAUAUUUUCAUGAA\
) } def
/len { sequence length } bind def

/coor [
[61.79501343 594.57641602]
[65.59906769 609.08599854]
[63.63905334 623.95739746]
[56.20552063 636.98596191]
[44.40047455 646.24017334]
[29.97396660 650.34820557]
[15.06468010 648.70104980]
[1.88286483 641.54284668]
[-7.61732149 629.93481445]
[-12.02750874 615.59777832]
[-10.69334126 600.65527344]
[-19.47306633 612.81732178]
[-28.25279045 624.97943115]
[-37.03251266 637.14154053]
[-38.83650970 652.85955811]
[-52.55942535 658.65014648]
[-61.33914948 670.81219482]
[-58.57210159 686.37237549]
[-67.68659210 699.28369141]
[-83.27515411 701.88604736]
[-96.08936310 692.63555908]
[-98.52678680 677.02038574]
[-89.14133453 664.30468750]
[-73.50123596 662.03247070]
[-64.72151184 649.87042236]
[-63.54550171 635.02227783]
[-49.19460297 628.36181641]
[-40.41487885 616.19970703]
[-31.63515663 604.03759766]
[-22.85543251 591.87554932]
[-15.42156506 578.84716797]
[-9.41819286 565.10095215]
[-3.41482043 551.35467529]
[2.58855152 537.60839844]
[8.59192371 523.86218262]
[14.59529591 510.11590576]
[20.59866714 496.36965942]
[26.60203934 482.62338257]
[25.72214699 477.92562866]
[27.78680038 472.62554932]
[33.00381470 468.55386353]
[39.42360306 454.99710083]
[45.84339142 441.44030762]
[52.26317978 427.88354492]
[58.68296814 414.32675171]
[65.10275269 400.76995850]
[71.41898346 387.16464233]
[77.63128662 373.51153564]
[83.84358978 359.85842896]
[90.05589294 346.20532227]
[96.26819611 332.55221558]
[93.22578430 319.49636841]
[97.60678101 307.15863037]
[107.70699310 299.32949829]
[106.56431580 284.37310791]
[105.42163849 269.41668701]
[104.27896881 254.46026611]
[103.13629150 239.50386047]
[94.45192719 227.40298462]
[101.11547089 213.05349731]
[99.97279358 198.09707642]
[87.21524048 190.45622253]
[81.33363342 176.60447693]
[84.77648163 161.77207947]
[96.42762756 151.69451904]
[95.28495026 136.73811340]
[94.14227295 121.78169250]
[67.12072754 117.04162598]
[51.64226913 82.25437164]
[40.48489761 72.22875214]
[29.32752609 62.20313263]
[18.17015457 52.17751312]
[7.01278353 42.15189362]
[-9.13468552 39.28985214]
[-14.47471428 23.78449249]
[-3.51393867 11.58640099]
[12.47213459 15.24392700]
[17.03840446 30.99452019]
[28.19577599 41.02014160]
[39.35314560 51.04576111]
[50.51051712 61.07138443]
[61.66788864 71.09700012]
[68.31900024 67.63107300]
[88.27234650 57.23327255]
[86.44682312 42.34477234]
[84.62130737 27.45627022]
[82.79579163 12.56776810]
[80.97027588 -2.32073402]
[79.14476013 -17.20923615]
[69.78546906 -29.96519089]
[75.91633606 -43.53949738]
[74.09082031 -58.42799759]
[72.26530457 -73.31649780]
[70.43978119 -88.20500183]
[68.61426544 -103.09350586]
[55.40324020 -111.46026611]
[50.71034622 -126.37705994]
[56.75142670 -140.80062866]
[70.67406464 -147.92060852]
[85.90442657 -144.37515259]
[95.25119019 -131.83833313]
[94.30110168 -116.22963715]
[83.50276947 -104.91902161]
[85.32828522 -90.03051758]
[87.15380096 -75.14201355]
[88.97931671 -60.25351334]
[90.80484009 -45.36501312]
[100.03354645 -33.67398453]
[94.03325653 -19.03475380]
[95.85877228 -4.14625120]
[97.68429565 10.74225044]
[99.50981140 25.63075256]
[101.33532715 40.51925278]
[103.16084290 55.40775681]
[110.38003540 57.44080734]
[121.12035370 46.96963120]
[124.81841278 61.50690842]
[132.03759766 63.53995895]
[141.36437988 51.79214096]
[150.69116211 40.04431915]
[160.01792908 28.29650116]
[169.34471130 16.54868126]
[168.94956970 0.51049513]
[181.33445740 -9.68725872]
[196.99873352 -6.22173643]
[203.92611694 8.24861050]
[196.80250549 22.62336922]
[181.09252930 25.87545586]
[171.76574707 37.62327576]
[162.43898010 49.37109756]
[153.11219788 61.11891556]
[143.78543091 72.86673737]
[135.37480164 110.95838928]
[109.09868622 120.63902283]
[110.24136353 135.59542847]
[111.38404083 150.55184937]
[124.43087006 158.74246216]
[130.08700562 172.87969971]
[126.37794495 187.46417236]
[114.92920685 196.95440674]
[116.07188416 211.91081238]
[124.83797455 225.08146667]
[118.09270477 238.36117554]
[119.23538208 253.31759644]
[120.37805176 268.27401733]
[121.52072906 283.23040771]
[122.66340637 298.18682861]
[128.83110046 284.51351929]
[130.01954651 269.56066895]
[136.98530579 256.27615356]
[148.60888672 246.79499817]
[163.02221680 242.64094543]
[177.90884399 244.48161316]
[190.87631226 252.02117920]
[199.84053040 264.04794312]
[203.36082458 278.62899780]
[200.87145996 293.42098999]
[192.77247620 306.04663086]
[180.36552429 314.47677612]
[165.64457703 317.35662842]
[150.97521973 314.22317505]
[136.10966492 316.22702026]
[150.11610413 321.59539795]
[164.12254333 326.96380615]
[180.22474670 323.85720825]
[190.76033020 336.42437744]
[184.89118958 351.73727417]
[168.65498352 354.04333496]
[158.75413513 340.97024536]
[144.74771118 335.60183716]
[130.74127197 330.23345947]
[140.45932007 341.65969849]
[154.04217529 348.02413940]
[162.73661804 360.24734497]
[164.29287720 375.16638184]
[158.30822754 388.92080688]
[146.33126831 397.95147705]
[131.46121216 399.92156982]
[117.54585266 394.32131958]
[108.18595886 382.59988403]
[105.80352783 367.79028320]
[111.01513672 353.72457886]
[109.92130280 338.76449585]
[103.70899963 352.41760254]
[97.49669647 366.07070923]
[91.28439331 379.72381592]
[85.07209015 393.37692261]
[84.36565399 402.48806763]
[78.65953827 407.18975830]
[72.23974609 420.74655151]
[65.81996155 434.30331421]
[59.40017319 447.86010742]
[52.98038483 461.41687012]
[46.56059647 474.97366333]
[40.34829330 488.62677002]
[34.34492111 502.37301636]
[28.34155083 516.11926270]
[22.33817863 529.86553955]
[16.33480644 543.61181641]
[10.33143425 557.35803223]
[4.32806206 571.10430908]
[-1.67530990 584.85052490]
[10.50804806 576.10034180]
[25.09438324 572.60192871]
[39.92131805 574.87396240]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 30]
[12 29]
[13 28]
[14 27]
[16 25]
[17 24]
[31 202]
[32 201]
[33 200]
[34 199]
[35 198]
[36 197]
[37 196]
[38 195]
[41 194]
[42 193]
[43 192]
[44 191]
[45 190]
[46 189]
[47 187]
[48 186]
[49 185]
[50 184]
[51 183]
[54 147]
[55 146]
[56 145]
[57 144]
[58 143]
[60 141]
[61 140]
[65 136]
[66 135]
[67 134]
[69 82]
[70 81]
[71 80]
[72 79]
[73 78]
[84 114]
[85 113]
[86 112]
[87 111]
[88 110]
[89 109]
[91 107]
[92 106]
[93 105]
[94 104]
[95 103]
[118 132]
[119 131]
[120 130]
[121 129]
[122 128]
[162 171]
[163 170]
[164 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
