%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 22:53:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCCAUUUCCUGAGGUAAAAGAUUAGUGUGAGACCAUCAUGGUGCCAGUCUAGGACCCCAUUCUCCUAUUUACCAGUCCUGUCCUAUAUACCCUCUAGAAACAGAAAGCAAUUUUUAGGCAGCUAUGGUCAAAUUGAGAAAGGUAGUGUAUAAAUGUGACAAAGACACUAAUAACAUGUUAGCCUCCACCCAAAAUAAAAUGGGCUUUAAAUUU\
) } def
/len { sequence length } bind def

/coor [
[99.10040283 525.50524902]
[97.03562927 510.64804077]
[98.80622101 495.75289917]
[104.29638672 481.79376221]
[113.14717865 469.68328857]
[124.77988434 460.21331787]
[138.43391418 454.00305176]
[153.21652222 451.45852661]
[168.16114807 452.74612427]
[182.29067993 457.78164673]
[194.68125916 466.23587036]
[204.52067566 477.55291748]
[200.83280945 463.01333618]
[197.14494324 448.47375488]
[193.45706177 433.93417358]
[189.76919556 419.39459229]
[179.14027405 408.96023560]
[183.24719238 393.68136597]
[179.55932617 379.14178467]
[161.17962646 370.19299316]
[155.30505371 350.30593872]
[166.17594910 332.30273438]
[161.64505005 318.00341797]
[157.11413574 303.70407104]
[152.58323669 289.40475464]
[148.05232239 275.10540771]
[143.52142334 260.80609131]
[138.99052429 246.50675964]
[134.45960999 232.20742798]
[121.49623871 231.42564392]
[109.54034424 226.27325439]
[100.02297974 217.34338379]
[94.09134674 205.68263245]
[92.47051239 192.66853333]
[95.37485504 179.84678650]
[102.47997284 168.74768066]
[112.95879364 160.70343018]
[108.84764862 146.27781677]
[104.73650360 131.85220337]
[100.62535858 117.42658234]
[88.05525970 109.24168396]
[73.19954681 111.31722260]
[58.34383774 113.39275360]
[50.28063965 117.67832947]
[43.25607300 115.38844299]
[28.37162209 117.24669647]
[18.86585999 129.87269592]
[3.20489168 131.99629211]
[-9.31990814 122.35756683]
[-11.27779675 106.67501831]
[-1.50719512 94.25283051]
[14.19517326 92.46085358]
[26.51337242 102.36224365]
[41.39782333 100.50399017]
[56.26830292 98.53704834]
[71.12401581 96.46150970]
[85.97972107 94.38597107]
[94.61824799 82.12318420]
[91.57106781 67.43595886]
[81.19166565 55.49532700]
[86.18215179 41.46164322]
[83.13497925 26.77441406]
[80.08780670 12.08718300]
[77.04062653 -2.60004663]
[73.99345398 -17.28727722]
[63.65981674 -25.00269890]
[61.42290497 -37.29625702]
[67.94509888 -47.48162460]
[65.11284637 -62.21181107]
[62.28060150 -76.94199371]
[59.44835663 -91.67218018]
[56.50856781 -106.38127899]
[53.46139145 -121.06851196]
[50.41421509 -135.75573730]
[47.36704254 -150.44297791]
[33.37935638 -156.89671326]
[25.96065140 -170.19393921]
[27.77292633 -185.13314819]
[37.91312408 -196.01039124]
[34.86594772 -210.69761658]
[31.81877327 -225.38484192]
[27.01265907 -233.14903259]
[28.83602905 -240.30886841]
[26.00378227 -255.03906250]
[23.17153549 -269.76925659]
[20.33928871 -284.49942017]
[3.23055673 -286.90969849]
[-11.99926567 -295.01638794]
[-23.51991844 -307.82611084]
[-29.95344734 -323.78152466]
[-30.53900528 -340.95050049]
[-25.22279930 -357.26019287]
[-14.66253376 -370.74737549]
[-0.14610466 -379.79452515]
[-3.62113857 -394.38644409]
[-7.09617281 -408.97836304]
[-20.68609238 -417.04617310]
[-24.50979614 -432.38092041]
[-16.29875183 -445.88479614]
[-0.92442262 -449.54617310]
[12.49187183 -441.19281006]
[15.99048328 -425.78060913]
[7.49574757 -412.45339966]
[10.97078133 -397.86148071]
[14.44581604 -383.26956177]
[27.28849220 -382.67556763]
[39.55220413 -378.77224731]
[50.39828110 -371.81924438]
[59.08311844 -362.28491211]
[65.00913239 -350.81491089]
[67.76587677 -338.18847656]
[67.15848541 -325.26538086]
[63.22140503 -312.92745972]
[56.21654510 -302.01843262]
[46.61583710 -293.28622437]
[35.06947327 -287.33166504]
[37.90172195 -272.60150146]
[40.73396683 -257.87130737]
[43.56621552 -243.14111328]
[46.50600433 -228.43202209]
[49.55317688 -213.74479675]
[52.60035324 -199.05755615]
[66.23078918 -193.11203003]
[73.83657074 -180.12681580]
[72.32005310 -164.97578430]
[62.05427170 -153.49014282]
[65.10144806 -138.80291748]
[68.14862061 -124.11568451]
[71.19579315 -109.42845917]
[75.63112640 -103.51948547]
[74.17854309 -94.50442505]
[77.01078796 -79.77424622]
[79.84303284 -65.04405975]
[82.67528534 -50.31386948]
[94.85967255 -37.68244934]
[88.68068695 -20.33445168]
[91.72785950 -5.64722157]
[94.77503204 9.04000854]
[97.82221222 23.72723770]
[100.86938477 38.41446686]
[111.03083038 49.30456543]
[106.25830078 64.38877869]
[109.30547333 79.07601166]
[116.83843994 66.10472107]
[128.90150452 57.18941498]
[143.51240540 53.79509354]
[158.27024841 56.47952271]
[170.74996948 64.80158234]
[178.90084839 77.39376831]
[181.38351440 92.18688965]
[177.79000854 106.75008392]
[168.71081543 118.69028473]
[155.63787842 126.04543304]
[140.71937561 127.60691071]
[126.40676880 123.11812592]
[115.05097961 113.31543732]
[119.16212463 127.74105072]
[123.27326965 142.16667175]
[127.38441467 156.59228516]
[144.36015320 159.20062256]
[158.44169617 168.93669128]
[166.82240295 183.80111694]
[167.85771179 200.77842712]
[161.38755798 216.44869995]
[148.75894165 227.67651367]
[153.28985596 241.97584534]
[157.82075500 256.27517700]
[162.35165405 270.57452393]
[166.88256836 284.87384033]
[171.41346741 299.17318726]
[175.94438171 313.47250366]
[180.47528076 327.77185059]
[190.00517273 329.55496216]
[198.18286133 334.65444946]
[203.90834045 342.33468628]
[206.42962646 351.51644897]
[205.44131470 360.92843628]
[201.12095642 369.28335571]
[194.09890747 375.45391846]
[197.78678894 389.99349976]
[208.67947388 401.46780396]
[204.30877686 415.70669556]
[207.99664307 430.24627686]
[211.68452454 444.78588867]
[215.37239075 459.32546997]
[219.06027222 473.86505127]
[224.65158081 478.57232666]
[226.96936035 484.76330566]
[226.02966309 490.60409546]
[233.75001526 503.46475220]
[241.47036743 516.32537842]
[249.19071960 529.18603516]
[264.65939331 530.41052246]
[276.43218994 540.51898193]
[279.98220825 555.62451172]
[273.94442749 569.91870117]
[260.64044189 577.90521240]
[245.18595886 576.51300049]
[233.52351379 566.27740479]
[230.13755798 551.13427734]
[236.33006287 536.90637207]
[228.60971069 524.04571533]
[220.88935852 511.18508911]
[213.16900635 498.32446289]
[214.26829529 513.28411865]
[211.53779602 528.03350830]
[205.15605164 541.60821533]
[195.54034424 553.12072754]
[183.31936646 561.81829834]
[169.29216003 567.13226318]
[154.37591553 568.71508789]
[139.54588318 566.46337891]
[125.77172852 560.52429199]
[113.95404053 551.28619385]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 186]
[13 185]
[14 184]
[15 183]
[16 182]
[18 180]
[19 179]
[22 172]
[23 171]
[24 170]
[25 169]
[26 168]
[27 167]
[28 166]
[29 165]
[37 159]
[38 158]
[39 157]
[40 156]
[41 57]
[42 56]
[43 55]
[45 54]
[46 53]
[58 143]
[59 142]
[61 140]
[62 139]
[63 138]
[64 137]
[65 136]
[68 134]
[69 133]
[70 132]
[71 131]
[72 129]
[73 128]
[74 127]
[75 126]
[79 122]
[80 121]
[81 120]
[83 119]
[84 118]
[85 117]
[86 116]
[94 105]
[95 104]
[96 103]
[189 204]
[190 203]
[191 202]
[192 201]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
