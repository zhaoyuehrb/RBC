%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 21:39:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUGCAGCUAGCCAGUUUCUUUCAAGUAUGGCAAGCUAACGUUAAAAUGUUUAGAGAUUAACAGAUUUCAGAAUGUCUUUCUGCAUAUUACUGAACAGAAUAGUCACAAAAUGAUUAUCAAAUAAAAAUUUUAUACUAUAUGUAAGAUUGUCCCAUAAAGAAAUUACGGGUAUUGCUUUUAAAUAA\
) } def
/len { sequence length } bind def

/coor [
[63.27470398 211.24124146]
[67.42797089 196.61869812]
[76.86482239 184.70172119]
[90.14619446 177.30757141]
[88.38626099 162.41116333]
[74.06688690 157.94400024]
[64.14910126 169.19732666]
[54.23131561 180.45066833]
[44.31352615 191.70399475]
[40.99374390 207.17298889]
[26.77395630 211.60546875]
[16.85616875 222.85881042]
[6.93838072 234.11213684]
[-2.97940660 245.36546326]
[0.06816366 256.88247681]
[-2.80240965 268.32116699]
[-10.76320553 276.85894775]
[-21.74530602 280.44702148]
[-32.97555161 278.30133057]
[-43.26578140 289.21514893]
[-46.51412582 305.28933716]
[-62.14305115 310.25610352]
[-74.07485962 299.00604248]
[-70.03512573 283.11224365]
[-54.17958832 278.92489624]
[-43.88935852 268.01110840]
[-45.54066849 249.79472351]
[-33.15600967 235.90408325]
[-14.23273945 235.44767761]
[-4.31495142 224.19435120]
[5.60283613 212.94100952]
[15.52062321 201.68768311]
[18.13102150 187.02360535]
[33.06019592 181.78620911]
[42.97798157 170.53288269]
[52.89577103 159.27954102]
[62.81355667 148.02621460]
[56.32435608 141.71015930]
[50.88150406 134.53787231]
[46.59455490 126.67925262]
[43.54592896 118.31764221]
[41.78937531 109.64553833]
[41.34909058 100.86017609]
[42.21950912 92.15903473]
[44.36577225 83.73541260]
[47.72486496 75.77413177]
[52.20732880 68.44744873]
[57.69961548 61.91140366]
[47.97227478 50.49304962]
[38.24493408 39.07469177]
[28.51759338 27.65633774]
[18.79025078 16.23798370]
[9.06291008 4.81962776]
[-0.66443098 -6.59872675]
[-15.50351334 -12.08618736]
[-17.86719894 -26.79204559]
[-27.59453964 -38.21039963]
[-37.32188034 -49.62875366]
[-52.69023895 -48.57057571]
[-65.58413696 -56.67000198]
[-71.17034149 -70.64348602]
[-67.50114441 -85.05442047]
[-77.22848511 -96.47277832]
[-86.95582581 -107.89112854]
[-96.68316650 -119.30948639]
[-111.13521576 -114.59707642]
[-126.29013824 -115.77891541]
[-139.83691406 -122.67479706]
[-149.70977783 -134.23312378]
[-154.40316772 -148.69136047]
[-153.20140076 -163.84471130]
[-146.28770447 -177.38241577]
[-134.71640015 -187.24006653]
[-120.25199890 -191.91442871]
[-105.10024261 -190.69271851]
[-91.57164764 -183.76123047]
[-81.72923279 -172.17695618]
[-77.07389069 -157.70643616]
[-78.31552887 -142.55628967]
[-85.26481628 -129.03681946]
[-75.53746796 -117.61846924]
[-65.81012726 -106.20011902]
[-56.08279037 -94.78176117]
[-41.27188492 -96.11409760]
[-28.36376190 -88.37818909]
[-22.41640854 -74.36096954]
[-25.90352631 -59.35609818]
[-16.17618370 -47.93774033]
[-6.44884300 -36.51938629]
[7.69447422 -31.84864426]
[10.75392437 -16.32606888]
[20.48126602 -4.90771341]
[30.20860672 6.51064157]
[39.93594742 17.92899704]
[49.66328812 29.34735107]
[59.39063263 40.76570511]
[69.11797333 52.18406296]
[88.25920868 42.04684448]
[110.60009003 39.58342743]
[133.06681824 45.73234558]
[140.53041077 32.72101593]
[147.99401855 19.70968628]
[155.45761108 6.69835663]
[162.92120361 -6.31297350]
[170.38481140 -19.32430267]
[177.84840393 -32.33563232]
[175.05749512 -48.13406372]
[185.77673340 -60.07044983]
[201.78324890 -58.98822021]
[210.79820251 -45.71756744]
[205.90609741 -30.43860054]
[190.85972595 -24.87203598]
[183.39613342 -11.86070538]
[175.93254089 1.15062428]
[168.46893311 14.16195393]
[161.00534058 27.17328453]
[153.54174805 40.18461609]
[146.07814026 53.19594574]
[150.07981873 59.53918457]
[162.76629639 51.53585434]
[175.45277405 43.53252411]
[188.13937378 35.52940369]
[196.14228821 48.21614838]
[183.45610046 56.21900177]
[170.76962280 64.22232819]
[158.08314514 72.22566223]
[162.08480835 78.56890106]
[177.04196167 77.43598175]
[191.99911499 76.30306244]
[206.95626831 75.17015076]
[221.91342163 74.03723145]
[236.87059021 72.90431213]
[251.82774353 71.77139282]
[266.78488159 70.63848114]
[281.74203491 69.50556183]
[293.24554443 58.32301712]
[309.14190674 60.48746109]
[317.23684692 74.33852386]
[311.32058716 89.25084686]
[295.93157959 93.78497314]
[282.87496948 84.46271515]
[267.91781616 85.59563446]
[252.96066284 86.72855377]
[238.00349426 87.86146545]
[223.04634094 88.99438477]
[208.08918762 90.12730408]
[193.13203430 91.26022339]
[178.17488098 92.39313507]
[163.21772766 93.52605438]
[160.89596558 107.36238098]
[155.69238281 119.86888123]
[148.07365417 130.47929382]
[159.57331848 140.11038208]
[171.07298279 149.74145508]
[186.62071228 152.67041016]
[191.41007996 166.77400208]
[202.90974426 176.40509033]
[214.40940857 186.03616333]
[230.45243835 186.06097412]
[240.32252502 198.70855713]
[236.44816589 214.27674866]
[221.80145264 220.82299805]
[207.61807251 213.32554626]
[204.77832031 197.53582764]
[193.27865601 187.90473938]
[181.77900696 178.27366638]
[167.05380249 176.03358459]
[161.44189453 161.24111938]
[149.94223022 151.61003113]
[138.44256592 141.97895813]
[132.76062012 147.47978210]
[126.28819275 152.20353699]
[119.13274384 156.03636169]
[111.41817474 158.87939453]
[103.28265381 160.65124512]
[105.04258728 175.54763794]
[119.68141174 179.64317322]
[131.63552856 189.03291321]
[139.08204651 202.28500366]
[140.88542175 217.37858582]
[136.77062988 232.01200867]
[127.36516571 243.95376587]
[114.10329437 251.38284302]
[99.00735474 253.16635132]
[84.37935638 249.03231812]
[72.44997406 239.61116028]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 176]
[5 175]
[6 37]
[7 36]
[8 35]
[9 34]
[11 32]
[12 31]
[13 30]
[14 29]
[19 26]
[20 25]
[48 97]
[49 96]
[50 95]
[51 94]
[52 93]
[53 92]
[54 91]
[56 89]
[57 88]
[58 87]
[62 83]
[63 82]
[64 81]
[65 80]
[100 118]
[101 117]
[102 116]
[103 115]
[104 114]
[105 113]
[106 112]
[127 149]
[128 148]
[129 147]
[130 146]
[131 145]
[132 144]
[133 143]
[134 142]
[135 141]
[152 170]
[153 169]
[154 168]
[156 166]
[157 165]
[158 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
