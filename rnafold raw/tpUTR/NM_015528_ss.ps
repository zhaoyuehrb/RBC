%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 11:03:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAACCCCCCACACAUACACCUCUGGUGACCUAUUUGCACAGACCGUCGUCUUCCCUCCAGUCUUCUGAGGGAUAGGGGACAUUCCAUCCCAAGCUUCUCCCUUACCCACACCUAUCCUUUUGAGGGGCUUUGGGGUGGAGCUGGGGCAAGCAGAGGGACUGGGUCUUCACUUCUUGGGCUAAUAAAAUUGUUUCUUUGUGGACUAAG\
) } def
/len { sequence length } bind def

/coor [
[152.98677063 212.21975708]
[150.48275757 205.42584229]
[149.33067322 198.26757812]
[149.57723999 191.01167297]
[151.21696472 183.92921448]
[154.19226074 177.28550720]
[142.96459961 167.33866882]
[131.73693848 157.39183044]
[120.50926971 147.44499207]
[109.28160858 137.49815369]
[114.36604309 151.61015320]
[122.54200745 164.18606567]
[122.93829346 179.18083191]
[115.43801117 192.17105103]
[102.25370789 199.32466125]
[87.27469635 198.53137207]
[74.91973114 190.02519226]
[68.83348083 176.31544495]
[70.81135559 161.44641113]
[80.26776886 149.80592346]
[86.81304169 136.30928040]
[74.59838867 145.01571655]
[62.38373184 153.72216797]
[50.16907501 162.42861938]
[38.02051926 171.22705078]
[25.93875122 180.11698914]
[13.85698414 189.00691223]
[1.77521706 197.89685059]
[-2.05047941 213.47708130]
[-16.67667198 220.06904602]
[-30.88339615 212.61596680]
[-33.77247238 196.83518982]
[-23.12764359 184.83239746]
[-7.11471605 185.81507874]
[4.96705103 176.92515564]
[17.04881859 168.03521729]
[29.13058472 159.14527893]
[32.65585709 152.64756775]
[41.46263123 150.21395874]
[53.67728806 141.50750732]
[65.89194489 132.80107117]
[78.10659790 124.09461975]
[74.33730316 115.74866486]
[73.32090759 107.31497955]
[74.78513336 99.61665344]
[60.53335190 94.93832397]
[46.28157043 90.25999451]
[30.75659370 93.30723572]
[21.07734871 81.98638916]
[6.82556772 77.30805969]
[-7.42621279 72.62973785]
[-21.71291733 68.05916595]
[-36.03372955 63.59662247]
[-50.35454178 59.13407898]
[-64.67535400 54.67153168]
[-78.99617004 50.20898438]
[-93.31697845 45.74644089]
[-102.44347382 46.18095398]
[-107.81946564 41.10684204]
[-122.07125092 36.42851257]
[-138.00262451 40.31738663]
[-149.13906860 28.27946091]
[-144.02436829 12.69832325]
[-127.92007446 9.60251236]
[-117.39292145 22.17673302]
[-103.14114380 26.85506058]
[-88.85443878 31.42562675]
[-74.53362274 35.88817215]
[-60.21281052 40.35071945]
[-45.89199829 44.81326294]
[-31.57118416 49.27581024]
[-17.25037193 53.73835754]
[-9.92747879 52.72683716]
[-2.74788547 58.37795639]
[11.50389576 63.05628204]
[25.75567627 67.73461151]
[40.26126862 64.35274506]
[50.95989609 76.00821686]
[65.21167755 80.68653870]
[79.46345520 85.36486816]
[87.44612122 78.12908936]
[97.72029114 74.88547516]
[100.86850739 60.21957016]
[104.01672363 45.55366516]
[107.16493988 30.88776207]
[110.31315613 16.22185707]
[113.46137238 1.55595386]
[116.60958862 -13.10995007]
[119.75780487 -27.77585411]
[122.90602112 -42.44175720]
[126.05423737 -57.10766220]
[129.20245361 -71.77356720]
[132.23982239 -86.46282196]
[135.16618347 -101.17460632]
[138.09252930 -115.88638306]
[141.01889038 -130.59815979]
[143.94525146 -145.30993652]
[146.87159729 -160.02172852]
[149.79795837 -174.73350525]
[136.26078796 -181.39738464]
[124.91025543 -191.33860779]
[116.52027893 -203.87937927]
[111.66288757 -218.16461182]
[110.66927338 -233.22035217]
[113.60717773 -248.02005005]
[120.27629089 -261.55465698]
[130.22189331 -272.90133667]
[142.76589966 -281.28646851]
[157.05300903 -286.13833618]
[172.10913086 -287.12615967]
[186.90769958 -284.18252563]
[200.43972778 -277.50817871]
[211.78256226 -267.55819702]
[220.16285706 -255.01097107]
[225.00921631 -240.72198486]
[225.99119568 -225.66548157]
[223.04187012 -210.86805725]
[216.36230469 -197.33860779]
[206.40794373 -185.99960327]
[193.85746765 -177.62416077]
[179.56660461 -172.78332520]
[164.50973511 -171.80714417]
[161.58337402 -157.09536743]
[158.65702820 -142.38359070]
[155.73066711 -127.67180634]
[152.80432129 -112.96002960]
[149.87796021 -98.24825287]
[146.95159912 -83.53646851]
[148.73025513 -76.36121368]
[143.86836243 -68.62535095]
[140.72013855 -53.95944595]
[137.57192993 -39.29354095]
[134.42370605 -24.62763786]
[131.27549744 -9.96173382]
[128.12727356 4.70417023]
[124.97905731 19.37007332]
[121.83084106 34.03597641]
[118.68262482 48.70188141]
[115.53440857 63.36778641]
[112.38619232 78.03369141]
[128.83612061 98.29073334]
[119.22845459 126.27048492]
[130.45611572 136.21733093]
[141.68377686 146.16416931]
[152.91143799 156.11100769]
[164.13909912 166.05784607]
[186.71139526 158.66134644]
[209.10037231 166.23179626]
[222.41712952 185.61297607]
[221.46504211 208.98983765]
[234.18309021 216.94288635]
[246.90115356 224.89595032]
[259.61920166 232.84899902]
[272.33724976 240.80206299]
[285.05529785 248.75512695]
[297.77334595 256.70819092]
[310.49142456 264.66122437]
[323.20947266 272.61428833]
[335.92752075 280.56735229]
[357.83966064 273.35137939]
[377.68948364 284.57037354]
[382.69012451 306.54055786]
[396.17645264 313.10705566]
[409.66278076 319.67358398]
[423.14910889 326.24008179]
[436.63543701 332.80661011]
[449.76217651 324.70153809]
[465.18658447 325.00283813]
[477.98681641 333.61434937]
[484.07830811 347.78817749]
[481.51733398 363.00149536]
[471.12106323 374.39978027]
[456.20693970 378.34591675]
[441.53396606 373.58065796]
[431.78427124 361.62463379]
[430.06890869 346.29293823]
[416.58258057 339.72640991]
[403.09625244 333.15991211]
[389.60995483 326.59338379]
[376.12362671 320.02685547]
[370.49603271 324.97491455]
[363.72531128 328.24819946]
[356.29904175 329.59497070]
[348.75640869 328.90283203]
[341.64892578 326.20785522]
[335.50015259 321.69320679]
[330.76718140 315.67657471]
[327.80657959 308.58792114]
[326.84756470 300.93881226]
[327.97445679 293.28540039]
[315.25640869 285.33233643]
[302.53836060 277.37930298]
[289.82031250 269.42623901]
[277.10223389 261.47317505]
[264.38418579 253.52011108]
[251.66613770 245.56706238]
[238.94808960 237.61399841]
[226.23004150 229.66094971]
[213.51197815 221.70788574]
[208.13081360 226.40617371]
[201.93806458 229.98660278]
[195.16310120 232.31224060]
[188.05770874 233.29270935]
[180.88671875 232.88768005]
[173.91810608 231.10858154]
[167.41302490 228.01820374]
[161.61598206 223.72859192]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 146]
[7 145]
[8 144]
[9 143]
[10 142]
[21 42]
[22 41]
[23 40]
[24 39]
[25 37]
[26 36]
[27 35]
[28 34]
[45 80]
[46 79]
[47 78]
[49 76]
[50 75]
[51 74]
[52 72]
[53 71]
[54 70]
[55 69]
[56 68]
[57 67]
[59 66]
[60 65]
[82 140]
[83 139]
[84 138]
[85 137]
[86 136]
[87 135]
[88 134]
[89 133]
[90 132]
[91 131]
[92 130]
[93 128]
[94 127]
[95 126]
[96 125]
[97 124]
[98 123]
[99 122]
[150 199]
[151 198]
[152 197]
[153 196]
[154 195]
[155 194]
[156 193]
[157 192]
[158 191]
[159 190]
[162 180]
[163 179]
[164 178]
[165 177]
[166 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
