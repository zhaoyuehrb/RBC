%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 07:34:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCCAGCCCUGCUGUGCCCCAUCACACCCGGCAUCUACACAAGAUCCGCCGGGCCACAGAGCUCGAGGCUGUCUUCACCAGCUGGGCUGGGCCAGCCUGGCCCUGCAGGGCAGAGCACGCUUGUUUGGGCAAUUGUAAUCAGUUACUUUUUUUCUAUGCUAUUUUACCAUUUUUUAAUCUUGUUUUCUGCUGUGCCCAAAUUAUUAAUAAAUCAGAUUGCAUUAA\
) } def
/len { sequence length } bind def

/coor [
[268.28509521 143.55458069]
[267.46411133 136.03401184]
[252.50033569 134.99229431]
[237.52966309 134.05459595]
[224.39207458 141.07261658]
[211.04322815 132.58033752]
[196.06640625 131.74671936]
[181.08958435 130.91308594]
[166.11276245 130.07946777]
[151.13595581 129.24584961]
[136.15913391 128.41223145]
[121.18231201 127.57860565]
[107.92290497 134.59202576]
[100.18343353 147.44117737]
[92.44396973 160.29032898]
[84.70449829 173.13946533]
[88.75409698 188.41613770]
[80.74323273 202.03970337]
[65.42461395 205.92755127]
[51.88650131 197.77310181]
[48.16082001 182.41423035]
[56.45795059 168.96308899]
[71.85535431 165.40000916]
[79.59481812 152.55085754]
[87.33428955 139.70170593]
[95.07375336 126.85255432]
[84.91857147 115.81298065]
[71.46932220 122.45510101]
[58.02007675 129.09722900]
[44.57083130 135.73934937]
[31.12158394 142.38146973]
[17.67233849 149.02359009]
[4.31671906 155.85202026]
[-8.94269085 162.86543274]
[-22.20210075 169.87886047]
[-35.46151352 176.89227295]
[-41.54032898 191.73907471]
[-56.97794342 196.10481262]
[-69.93193054 186.64047241]
[-70.46510315 170.60629272]
[-58.16846085 160.30230713]
[-42.47492981 163.63285828]
[-29.21551895 156.61944580]
[-15.95610905 149.60603333]
[-2.69669914 142.59260559]
[-0.46156392 138.38313293]
[4.43632126 135.52764893]
[11.03021622 135.57434082]
[24.47946358 128.93222046]
[37.92871094 122.29010010]
[51.37795639 115.64797974]
[64.82720184 109.00585938]
[78.27645111 102.36373901]
[78.38069916 94.86446381]
[63.38214874 94.65595245]
[48.38360214 94.44719696]
[48.59260559 79.44865417]
[63.59065628 79.65740204]
[78.58921051 79.86591339]
[78.69345856 72.36663818]
[65.43405151 65.35321808]
[52.17464066 58.33979797]
[38.91522980 51.32637787]
[25.65581894 44.31296158]
[19.06317329 44.17634201]
[14.24655819 41.18581390]
[12.12930202 36.91582489]
[-0.93002450 29.53653145]
[-13.98935127 22.15723610]
[-27.04867744 14.77794170]
[-40.10800552 7.39864635]
[-54.68789673 13.05203342]
[-69.47392273 7.96209621]
[-77.48457336 -5.46785116]
[-74.93746185 -20.89659882]
[-63.03526306 -31.03916359]
[-47.39782333 -31.10653687]
[-35.40866852 -21.06690788]
[-32.72871017 -5.66067982]
[-19.66938210 1.71861482]
[-6.61005640 9.09790993]
[6.44927025 16.47720337]
[19.50859642 23.85649872]
[32.66923523 31.05355072]
[45.92864609 38.06697083]
[59.18805695 45.08038712]
[72.44747162 52.09380722]
[85.70687866 59.10722351]
[96.38694000 48.57460022]
[89.55851746 35.21897888]
[82.73008728 21.86336136]
[75.90165710 8.50774288]
[69.07322693 -4.84787607]
[62.24479675 -18.20349503]
[49.65086365 -29.55378914]
[57.07123566 -44.79761887]
[73.77349854 -41.88715363]
[75.60041809 -25.03192520]
[82.42884064 -11.67630577]
[89.25727081 1.67931294]
[96.08570099 15.03493118]
[102.91413116 28.39055061]
[109.74256134 41.74617004]
[138.14724731 81.91940308]
[122.01593781 112.60179138]
[136.99275208 113.43540955]
[151.96957397 114.26902771]
[166.94639587 115.10265350]
[181.92320251 115.93627167]
[196.90002441 116.76989746]
[211.87684631 117.60351562]
[226.08569336 110.64511871]
[238.36329651 119.07777405]
[247.09468079 116.43224335]
[253.54205322 120.02850342]
[268.50582886 121.07022858]
[277.32119751 98.80241394]
[293.67288208 81.33628845]
[315.26962280 71.09410858]
[339.09442139 69.48765564]
[361.82595825 76.72364044]
[380.30166626 91.77729034]
[391.95767212 112.53745270]
[406.63278198 109.43237305]
[421.30786133 106.32729340]
[435.98297119 103.22222137]
[450.65808105 100.11714172]
[465.33316040 97.01206207]
[480.00827026 93.90699005]
[494.68338013 90.80191040]
[509.35845947 87.69683838]
[496.22448730 80.45123291]
[489.76046753 66.91548920]
[492.38119507 52.14619827]
[503.10760498 41.66078949]
[517.93261719 39.37632751]
[531.31799316 46.14623642]
[538.26330566 59.44144821]
[536.17395020 74.29522705]
[525.83123779 85.15818024]
[540.76025391 83.70088959]
[555.68933105 82.24359894]
[570.61834717 80.78631592]
[571.16326904 65.77343750]
[573.70446777 50.96715546]
[578.19647217 36.63170624]
[584.55920410 23.02292061]
[592.67907715 10.38366318]
[602.41125488 -1.06050253]
[613.58197021 -11.10534191]
[625.99188232 -19.57159424]
[639.41949463 -26.30816650]
[653.62530518 -31.19483948]
[668.35565186 -34.14440536]
[683.34771729 -35.10422134]
[698.33392334 -34.05716324]
[713.04687500 -31.02191353]
[727.22399902 -26.05264282]
[740.61218262 -19.23803139]
[752.97265625 -10.69969368]
[764.08465576 -0.59000802]
[773.75006104 10.91060734]
[781.79626465 23.59691048]
[788.07965088 37.24249649]
[792.48815918 51.60385132]
[794.94311523 66.42467499]
[795.40063477 81.44046783]
[793.85266113 96.38326263]
[790.32672119 110.98638153]
[784.88574219 124.98921967]
[777.62689209 138.14187622]
[768.67968750 150.20964050]
[758.20379639 160.97712708]
[746.38610840 170.25219727]
[733.43762207 177.86930847]
[719.58941650 183.69253540]
[705.08856201 187.61795044]
[690.19390869 189.57550049]
[675.17120361 189.53025818]
[660.28857422 187.48303223]
[645.81164551 183.47033691]
[631.99871826 177.56381226]
[619.09637451 169.86885071]
[607.33483887 160.52276611]
[596.92395020 149.69238281]
[588.04956055 137.57095337]
[580.87005615 124.37480927]
[575.51354980 110.33945465]
[572.07562256 95.71535492]
[557.14660645 97.17264557]
[542.21759033 98.62993622]
[527.28851318 100.08721924]
[512.46356201 102.37193298]
[497.78845215 105.47701263]
[483.11334229 108.58208466]
[468.43823242 111.68716431]
[453.76315308 114.79224396]
[439.08804321 117.89731598]
[424.41296387 121.00239563]
[409.73785400 124.10746765]
[395.06274414 127.21254730]
[395.31655884 134.72358704]
[394.68453979 142.21423340]
[393.17510986 149.58033752]
[390.80874634 156.71945190]
[387.61791992 163.53225708]
[383.64657593 169.92388916]
[378.94946289 175.80526733]
[373.59155273 181.09442139]
[367.64694214 185.71751404]
[361.19799805 189.60993958]
[354.33404541 192.71725464]
[347.15032959 194.99584961]
[339.74649048 196.41362000]
[332.22531128 196.95043945]
[324.69134521 196.59840393]
[317.24923706 195.36193848]
[310.00250244 193.25778198]
[303.05194092 190.31474304]
[296.49432373 186.57330322]
[290.42098999 182.08505249]
[284.91662598 176.91198730]
[280.05798340 171.12568665]
[275.91293335 164.80622864]
[272.53948975 158.04119873]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 116]
[3 115]
[4 113]
[6 111]
[7 110]
[8 109]
[9 108]
[10 107]
[11 106]
[12 105]
[13 26]
[14 25]
[15 24]
[16 23]
[27 53]
[28 52]
[29 51]
[30 50]
[31 49]
[32 48]
[33 45]
[34 44]
[35 43]
[36 42]
[60 88]
[61 87]
[62 86]
[63 85]
[64 84]
[67 83]
[68 82]
[69 81]
[70 80]
[71 79]
[89 103]
[90 102]
[91 101]
[92 100]
[93 99]
[94 98]
[123 201]
[124 200]
[125 199]
[126 198]
[127 197]
[128 196]
[129 195]
[130 194]
[131 193]
[140 192]
[141 191]
[142 190]
[143 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
