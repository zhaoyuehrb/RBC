%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 14:53:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGAAUCUGGACCACUACCCGGGCACCAGGGACCACAGCACUGGUUUGGACCGUUACUCUGCACAUGGACCAGAAAAAGUAUAUGGGACCUUAAGCUCACCUUCUUUACUUGUAUCAAAUGAUGACUGGUAUACUGGUCUCCCAUCCCUUUGCUUGUGGCAGGAGAUGGCUUAAAUAAAUAACUUAAAUUUAGAUUGGUCAUGA\
) } def
/len { sequence length } bind def

/coor [
[108.56102753 326.87310791]
[99.60092926 339.68914795]
[84.48577881 343.69741821]
[70.35248566 337.00534058]
[63.87435150 322.77270508]
[68.11015320 307.71972656]
[81.05988312 298.95397949]
[82.43051147 284.01672363]
[72.73709869 272.76623535]
[73.91432190 257.59820557]
[85.78058624 247.50715637]
[87.15121460 232.56991577]
[88.52184296 217.63265991]
[89.89246368 202.69541931]
[91.26309204 187.75816345]
[92.40576935 172.80175781]
[93.32022858 157.82965088]
[94.23468781 142.85755920]
[80.52543640 130.09048462]
[75.83798218 115.00426483]
[79.09826660 102.41484070]
[87.07708740 95.63613129]
[72.63871002 91.57003021]
[58.20033264 87.50392914]
[43.76195145 83.43782806]
[31.58699608 92.87586975]
[16.36703300 93.32989502]
[3.94506502 84.83526611]
[-1.03339887 70.82266998]
[-15.47177887 66.75656128]
[-29.91015816 62.69046402]
[-43.57966995 70.15921021]
[-58.16431427 65.82992554]
[-65.20038605 52.75211334]
[-79.63877106 48.68600845]
[-94.07714844 44.61990738]
[-104.23515320 53.94017410]
[-117.56645203 56.99886322]
[-130.56402588 53.10108185]
[-139.86264038 43.36769104]
[-143.11015320 30.41569901]
[-157.48484802 26.12988663]
[-171.85954285 21.84407425]
[-187.09075928 30.44427490]
[-203.50680542 25.46778679]
[-211.09373474 10.46053696]
[-225.53210449 6.39443541]
[-239.97048950 2.32833290]
[-254.40887451 -1.73776937]
[-268.84725952 -5.80387163]
[-284.22808838 -2.09712696]
[-294.38146973 -12.99475861]
[-308.81985474 -17.06085968]
[-323.25823975 -21.12696266]
[-337.69659424 -25.19306564]
[-348.63796997 -14.41427612]
[-363.50686646 -10.56578255]
[-378.30368042 -14.68281078]
[-389.04812622 -25.65789986]
[-392.85000610 -40.53880692]
[-388.68661499 -55.32263947]
[-377.67788696 -66.03262329]
[-362.78515625 -69.78783417]
[-348.01443481 -65.57812500]
[-337.33901978 -54.53589249]
[-333.63049316 -39.63144302]
[-319.19213867 -35.56534195]
[-304.75375366 -31.49924088]
[-290.31536865 -27.43313789]
[-275.96725464 -31.43071747]
[-264.78115845 -20.24225235]
[-250.34275818 -16.17614937]
[-235.90438843 -12.11004734]
[-221.46600342 -8.04394436]
[-207.02761841 -3.97784233]
[-196.77760315 -11.78972816]
[-183.70455933 -12.27766514]
[-172.57434082 -5.03950167]
[-167.57373047 7.46938086]
[-153.19903564 11.75519371]
[-138.82434082 16.04100609]
[-126.11104584 5.65879393]
[-109.54869080 4.89104891]
[-95.65364838 14.23808384]
[-90.01104736 30.18152809]
[-75.57266235 34.24763107]
[-61.13428497 38.31373215]
[-48.30760956 30.82961464]
[-33.60711670 34.74753952]
[-25.84405708 48.25208282]
[-11.40567684 52.31818390]
[3.03270340 56.38428879]
[14.59197330 47.02900696]
[29.62129593 46.26514816]
[42.36757660 54.59495544]
[47.82805252 68.99945068]
[62.26643372 73.06555176]
[76.70481110 77.13165283]
[91.14319611 81.19775391]
[104.97940063 75.40470886]
[112.21372223 62.26451874]
[119.44804382 49.12432861]
[111.59691620 37.54492569]
[109.51159668 23.77803802]
[113.54277039 10.51957321]
[122.84898376 0.34106332]
[135.57151794 -4.80906534]
[149.20547485 -3.97833180]
[156.63934326 -17.00667191]
[164.07321167 -30.03500938]
[171.50708008 -43.06335068]
[171.62603760 -58.88410950]
[184.65383911 -66.10391998]
[192.08770752 -79.13225555]
[199.42201233 -92.21690369]
[206.65634155 -105.35709381]
[213.89065552 -118.49728394]
[213.01643372 -134.87310791]
[226.90692139 -143.59013367]
[241.27278137 -135.68101501]
[241.33564758 -119.28198242]
[227.03085327 -111.26296234]
[219.79652405 -98.12277222]
[212.56221008 -84.98258209]
[212.08992004 -77.60404968]
[205.11604309 -71.69838715]
[197.68217468 -58.67005157]
[198.09494019 -43.78116608]
[184.53541565 -35.62948227]
[177.10154724 -22.60114288]
[169.66767883 -9.57280445]
[162.23381042 3.45553517]
[170.72259521 17.20306396]
[171.12355042 33.44916153]
[163.23263550 47.76314926]
[149.12010193 56.19351959]
[132.58824158 56.35865021]
[125.35391235 69.49884033]
[118.11959076 82.63903046]
[121.73674774 89.20912170]
[136.73365784 89.51408386]
[128.97106934 102.34931183]
[132.58824158 108.91941071]
[147.56033325 109.83386993]
[162.53244019 110.74832916]
[177.50453186 111.66278839]
[192.47663879 112.57724762]
[207.45527649 113.37751770]
[222.43957520 114.06354523]
[237.42387390 114.74958038]
[243.46636963 112.05066681]
[249.11579895 112.71208954]
[252.85261536 115.69192505]
[267.80902100 116.83460236]
[282.76544189 117.97727966]
[299.01916504 113.15510559]
[308.15234375 127.43870544]
[296.95529175 140.16906738]
[281.62277222 132.93370056]
[266.66635132 131.79101562]
[251.70994568 130.64834595]
[236.73783875 129.73388672]
[221.75354004 129.04785156]
[206.76924133 128.36181641]
[199.94094849 131.19734192]
[191.56217957 127.54934692]
[176.59007263 126.63488770]
[161.61798096 125.72042847]
[146.64587402 124.80596924]
[131.67378235 123.89151001]
[126.05702972 128.86163330]
[138.75787354 136.84216309]
[151.45870972 144.82267761]
[164.15954590 152.80319214]
[176.86038208 160.78372192]
[191.58860779 163.62612915]
[204.00685120 172.03964233]
[212.10758972 184.66415405]
[214.58128357 199.45877075]
[211.02801514 214.03184509]
[202.02221680 226.02749634]
[189.01974487 233.50651550]
[174.12257385 235.25988770]
[159.73895264 231.00413513]
[148.19412231 221.42724609]
[141.35440063 208.07740784]
[140.32550049 193.11256409]
[133.95001221 179.53489685]
[127.57452393 165.95722961]
[121.19902802 152.37956238]
[114.82353210 138.80189514]
[109.20678711 143.77201843]
[108.29232788 158.74411011]
[107.37786865 173.71621704]
[109.98431396 179.79916382]
[109.23681641 185.43785095]
[106.20034027 189.12879944]
[104.82971191 204.06604004]
[103.45909119 219.00329590]
[102.08846283 233.94053650]
[100.71783447 248.87779236]
[110.54952240 260.95983887]
[108.94672394 276.08880615]
[97.36775970 285.38735962]
[95.99713135 300.32458496]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 205]
[8 204]
[11 201]
[12 200]
[13 199]
[14 198]
[15 197]
[16 194]
[17 193]
[18 192]
[22 99]
[23 98]
[24 97]
[25 96]
[29 92]
[30 91]
[31 90]
[34 87]
[35 86]
[36 85]
[41 81]
[42 80]
[43 79]
[46 75]
[47 74]
[48 73]
[49 72]
[50 71]
[52 69]
[53 68]
[54 67]
[55 66]
[100 139]
[101 138]
[102 137]
[108 132]
[109 131]
[110 130]
[111 129]
[113 127]
[114 126]
[115 124]
[116 123]
[117 122]
[143 170]
[144 169]
[145 168]
[146 167]
[147 166]
[148 164]
[149 163]
[150 162]
[153 161]
[154 160]
[155 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
