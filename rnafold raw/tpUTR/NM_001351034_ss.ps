%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 16:46:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGACACCCUUGGCCUCCAAGCCAGCCUUGAACCCACCUCCCUGUCCCUGGACUCUACUCCCGAGGCUCUGUACAUUGCUGCCACAUACUCCUGCCAGCUUGGGGGAGUGUUCCUUCACCCUCACAGUAUUUAUUAUCCUGCACCACCUCACUGUUCCCCAUGCGCACACACAUACACACACCCCAAAACACAUACAUUGAAAGUGCCUCAUCUGAAUAAAAUGACUUGUGUUUCCCCUUUGGGAUCUGCUAA\
) } def
/len { sequence length } bind def

/coor [
[223.94641113 165.02093506]
[210.30888367 158.77449036]
[196.67137146 152.52804565]
[183.03384399 146.28160095]
[169.39633179 140.03515625]
[155.75880432 133.78871155]
[142.12129211 127.54226685]
[128.48376465 121.29582977]
[124.18480682 129.65704346]
[117.42986298 137.07925415]
[108.45106506 142.84968567]
[97.68364716 146.32075500]
[85.74596405 146.96679688]
[73.40403748 144.43434143]
[66.49595642 157.74894714]
[59.58787537 171.06353760]
[64.59919739 186.05227661]
[57.46943283 200.15695190]
[42.42855072 205.00952148]
[28.40003777 197.73103333]
[23.70676231 182.63969421]
[31.13315964 168.68891907]
[46.27328110 164.15545654]
[53.18136215 150.84086609]
[60.08944321 137.52626038]
[49.94805145 126.47401428]
[36.08985901 132.21426392]
[22.23166656 137.95451355]
[8.37347317 143.69477844]
[-5.48471975 149.43502808]
[-19.34291267 155.17527771]
[-33.20110703 160.91552734]
[-31.89191628 176.69288635]
[-35.52231598 192.08259583]
[-43.72456360 205.57821655]
[-55.68400574 215.86248779]
[-70.21995544 221.93597412]
[-85.90226746 223.21418762]
[-101.19202423 219.58374023]
[-114.59258270 211.41239929]
[-124.79603577 199.51174927]
[-138.58273315 205.42163086]
[-152.36944580 211.33151245]
[-155.67495728 226.49243164]
[-167.28289795 236.78977966]
[-182.72978210 238.26400757]
[-196.07597351 230.34826660]
[-202.18957520 216.08630371]
[-198.71978760 200.96214294]
[-187.00082397 190.79133606]
[-171.53886414 189.48475647]
[-158.27932739 197.54481506]
[-144.49261475 191.63493347]
[-130.70591736 185.72505188]
[-132.34901428 171.58000183]
[-129.93968201 157.52899170]
[-123.66410065 144.71080017]
[-114.02214050 134.16679382]
[-101.78758240 126.75640869]
[-87.94599152 123.08709717]
[-73.61537170 123.46446991]
[-59.95581055 127.86695862]
[-48.07561493 135.94676208]
[-38.94135666 147.05732727]
[-25.08316422 141.31707764]
[-11.22497082 135.57682800]
[2.63322186 129.83657837]
[16.49141502 124.09632874]
[30.34960747 118.35607910]
[44.20780182 112.61582184]
[45.17153549 105.17800140]
[30.25780487 103.57157135]
[15.34407330 101.96514893]
[0.50771898 104.17480469]
[-6.51158905 90.91851044]
[3.65464449 79.88911438]
[17.43770599 85.80711365]
[32.26835632 88.05473328]
[47.09900665 90.30235291]
[48.06274414 82.86453247]
[36.12519073 73.78186798]
[24.18763733 64.69920349]
[12.25008297 55.61653519]
[-3.41762376 53.41800690]
[-8.86143589 39.55387497]
[-20.79898834 30.47121048]
[-35.61957932 35.06791306]
[-50.30070114 30.04353714]
[-59.19715500 17.33005333]
[-58.88808060 1.81605613]
[-49.49232101 -10.53300476]
[-34.62273788 -14.96866417]
[-19.99698639 -9.78532028]
[-11.23896980 3.02392507]
[-11.71632385 18.53365517]
[0.22122993 27.61632156]
[15.03508377 29.16519547]
[21.33274841 43.67898178]
[33.27030182 52.76164627]
[45.20785522 61.84431458]
[57.14540863 70.92697906]
[75.57062531 63.79611588]
[92.50000000 65.23525238]
[92.50000000 50.23525620]
[92.50000000 35.23525620]
[92.50000000 20.23525620]
[92.50000000 5.23525620]
[81.60544586 -5.89786863]
[81.81912994 -21.11000252]
[92.50000000 -31.42768288]
[92.50000000 -46.42768478]
[92.50000000 -61.42768478]
[92.50000000 -76.42768097]
[77.75438690 -79.45286560]
[63.91971207 -85.38470459]
[51.56250763 -93.98030090]
[41.18878555 -104.88768005]
[33.22334671 -117.66017151]
[27.99236870 -131.77476501]
[25.71005821 -146.65347290]
[26.46987534 -161.68702698]
[30.24070549 -176.25979614]
[36.86813354 -189.77505493]
[46.08077240 -201.67933655]
[57.50136948 -211.48519897]
[70.66226196 -218.79107666]
[85.02451324 -223.29780579]
[100.00000000 -224.82084656]
[114.97548676 -223.29780579]
[129.33773804 -218.79107666]
[142.49862671 -211.48519897]
[153.91921997 -201.67933655]
[163.13186646 -189.77505493]
[169.75929260 -176.25979614]
[173.53012085 -161.68702698]
[174.28994751 -146.65347290]
[172.00762939 -131.77476501]
[166.77665710 -117.66017151]
[158.81121826 -104.88768005]
[148.43750000 -93.98030090]
[136.08029175 -85.38470459]
[122.24561310 -79.45286560]
[107.50000000 -76.42768097]
[107.50000000 -61.42768478]
[107.50000000 -46.42768478]
[107.50000000 -31.42768288]
[118.18087006 -21.11000252]
[118.39455414 -5.89786863]
[107.50000000 5.23525620]
[107.50000000 20.23525620]
[107.50000000 35.23525620]
[107.50000000 50.23525620]
[107.50000000 65.23525238]
[129.92951965 80.78903961]
[134.73020935 107.65830994]
[148.36773682 113.90474701]
[162.00524902 120.15119171]
[175.64277649 126.39763641]
[189.28028870 132.64407349]
[202.91781616 138.89051819]
[216.55532837 145.13696289]
[230.19285583 151.38340759]
[236.10574341 142.62776184]
[243.13914490 134.74673462]
[251.16532898 127.88266754]
[260.03857422 122.15939331]
[269.59796143 117.68005371]
[279.67016602 114.52524567]
[290.07266235 112.75154877]
[300.61697388 112.39052582]
[311.11224365 113.44813538]
[321.36846924 115.90467072]
[331.20010376 119.71511841]
[340.42932129 124.80995941]
[348.88934326 131.09645081]
[356.42730713 138.46032715]
[362.90713501 146.76786804]
[368.21194458 155.86830139]
[372.24621582 165.59660339]
[374.93737793 175.77639771]
[376.23727417 186.22323608]
[376.12295532 196.74792480]
[374.59701538 207.15991211]
[371.68765259 217.27076721]
[367.44808960 226.89759827]
[380.02145386 235.07746887]
[392.59481812 243.25733948]
[405.16818237 251.43721008]
[417.74157715 259.61709595]
[430.31494141 267.79696655]
[443.18087769 275.50851440]
[456.32192993 282.74127197]
[469.46298218 289.97402954]
[482.60403442 297.20678711]
[495.74508667 304.43954468]
[512.46966553 299.26406860]
[527.46044922 307.63339233]
[531.66174316 323.93127441]
[544.89056396 331.00222778]
[558.11938477 338.07315063]
[571.34820557 345.14410400]
[588.23608398 336.07302856]
[607.02496338 339.02416992]
[620.10955811 352.61865234]
[622.30529785 371.20709229]
[635.78540039 377.78634644]
[649.42449951 370.38659668]
[664.80371094 372.45028687]
[676.00952148 383.18386841]
[678.73297119 398.46008301]
[671.92694092 412.40487671]
[658.20843506 419.65621948]
[642.85247803 417.42581177]
[631.76379395 406.57128906]
[629.20617676 391.26644897]
[615.72607422 384.68722534]
[607.08062744 391.66128540]
[596.41217041 394.93325806]
[585.24121094 393.99694824]
[575.17474365 388.94879150]
[567.67504883 380.47952271]
[563.84741211 369.77981567]
[564.27722168 358.37292480]
[551.04840088 351.30197144]
[537.81964111 344.23101807]
[524.59082031 337.16009521]
[512.92169189 342.58541870]
[500.06488037 340.27340698]
[490.74356079 330.84613037]
[488.51232910 317.58059692]
[475.37127686 310.34783936]
[462.23022461 303.11508179]
[449.08917236 295.88232422]
[435.94812012 288.64956665]
[439.26062012 303.27923584]
[431.35473633 316.02664185]
[416.77703857 319.56091309]
[403.91104126 311.84945679]
[400.15588379 297.32708740]
[407.67111206 284.34552002]
[422.13507080 280.37033081]
[409.56170654 272.19046021]
[396.98831177 264.01058960]
[384.41494751 255.83071899]
[371.84158325 247.65083313]
[359.26821899 239.47096252]
[345.03610229 253.33128357]
[327.76293945 263.16131592]
[308.56188965 268.32275391]
[288.67150879 268.47833252]
[269.37597656 263.61383057]
[251.92210388 254.03926086]
[237.43872070 240.36911011]
[226.86383057 223.48292542]
[220.88369751 204.46871948]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 162]
[2 161]
[3 160]
[4 159]
[5 158]
[6 157]
[7 156]
[8 155]
[14 25]
[15 24]
[16 23]
[26 70]
[27 69]
[28 68]
[29 67]
[30 66]
[31 65]
[32 64]
[41 54]
[42 53]
[43 52]
[80 101]
[81 100]
[82 99]
[83 98]
[85 96]
[86 95]
[103 153]
[104 152]
[105 151]
[106 150]
[107 149]
[110 146]
[111 145]
[112 144]
[113 143]
[185 246]
[186 245]
[187 244]
[188 243]
[189 242]
[190 241]
[191 234]
[192 233]
[193 232]
[194 231]
[195 230]
[198 226]
[199 225]
[200 224]
[201 223]
[205 216]
[206 215]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
