%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 12:03:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAGGAUUAAGAAAACUUACUGUUUGGGAACUCCAUAUACAAGGGAGCCCUUCACUGUUGAUACAAAGAAAUCAUACUGUUCAGGCUUUUUUGUACUUUAGUGUCACUUCAUUUUUAUUGCUAUUAAAUAAAAAAUUUGUAAAAGGCAAAACUUUUUGUACAUUUUCUUACAAUUAAAAUAAUCUCUUAUGGACCAU\
) } def
/len { sequence length } bind def

/coor [
[50.55441284 323.19073486]
[38.11075211 326.55889893]
[32.53581619 340.48440552]
[26.96087837 354.40994263]
[27.70962143 359.59735107]
[26.50735855 364.09960938]
[23.94419479 367.28662109]
[20.77508736 368.85513306]
[14.54386139 382.49960327]
[8.31263638 396.14407349]
[2.08141088 409.78857422]
[4.17803526 426.05313110]
[-9.02154636 435.78469849]
[-23.93873596 428.97222900]
[-25.22800636 412.62384033]
[-11.56306934 403.55734253]
[-5.33184385 389.91287231]
[0.89938134 376.26837158]
[7.13060665 362.62390137]
[13.03535938 348.83499146]
[18.61029625 334.90948486]
[24.18523407 320.98394775]
[16.90956879 305.82672119]
[22.96175575 289.77941895]
[39.05603027 282.93725586]
[44.40932083 268.92504883]
[49.76261520 254.91281128]
[48.73352051 252.29441833]
[48.68525314 249.10853577]
[49.83996964 245.72875977]
[52.27984619 242.60243225]
[55.92552948 240.19956970]
[62.15675735 226.55508423]
[68.38797760 212.91061401]
[74.61920929 199.26612854]
[80.85043335 185.62165833]
[87.08165741 171.97717285]
[50.74910736 88.32310486]
[37.87935638 80.61794281]
[25.00960541 72.91278839]
[12.13985348 65.20762634]
[-0.72989732 57.50246429]
[-13.59964848 49.79730225]
[-26.46940041 42.09214020]
[-39.33914948 34.38698196]
[-52.20890045 26.68181992]
[-65.07865143 18.97665787]
[-77.94840240 11.27149773]
[-90.81815338 3.56633687]
[-103.06605530 9.90245628]
[-116.73680878 9.36080456]
[-128.26112366 2.18990469]
[-134.68307495 -9.64489555]
[-134.41801453 -22.99890137]
[-147.16389465 -30.90728378]
[-162.96954346 -31.60850525]
[-169.70494080 -44.89322662]
[-182.45082092 -52.80160904]
[-195.25903320 -60.60862732]
[-208.12878418 -68.31378937]
[-220.99853516 -76.01895142]
[-233.86828613 -83.72410583]
[-248.08883667 -77.51480103]
[-263.23599243 -80.88287354]
[-273.48532104 -92.53322601]
[-274.89578247 -107.98606110]
[-266.92498779 -121.29945374]
[-252.63792419 -127.35413361]
[-237.52821350 -123.82194519]
[-227.40586853 -112.06108856]
[-226.16313171 -96.59385681]
[-213.29338074 -88.88870239]
[-200.42362976 -81.18354034]
[-187.55387878 -73.47837830]
[-180.19219971 -72.73899078]
[-174.54243469 -65.54749298]
[-161.79655457 -57.63911057]
[-146.90255737 -57.50354767]
[-139.25550842 -43.65316391]
[-126.50962830 -35.74478149]
[-111.52049255 -42.42632294]
[-95.33946991 -38.82466507]
[-84.38199615 -26.16501236]
[-83.11299133 -9.30341434]
[-70.24324036 -1.59825349]
[-57.37349319 6.10690737]
[-44.50374222 13.81206799]
[-31.63398933 21.51722908]
[-18.76423836 29.22238922]
[-5.89448786 36.92755127]
[6.97526360 44.63271332]
[19.84501457 52.33787155]
[32.71476746 60.04303360]
[45.58451843 67.74819183]
[58.45426941 75.45335388]
[65.37192535 72.55576324]
[55.58505630 61.18839264]
[63.37178421 48.36782837]
[77.97109222 51.81169510]
[79.20723724 66.76058960]
[86.12490082 63.86300278]
[89.66127777 49.28582764]
[93.19766235 34.70865250]
[84.75906372 21.34581184]
[88.32247925 5.94848537]
[101.77378845 -2.34836292]
[117.13258362 1.37763941]
[125.28675079 14.91592121]
[121.39857483 30.23446083]
[107.77484131 38.24503708]
[104.23845673 52.82221222]
[100.70207214 67.39938354]
[113.86725616 74.58811951]
[124.21843719 63.73210907]
[134.56962585 52.87609863]
[144.92080688 42.02008820]
[155.27200317 31.16407776]
[165.62318420 20.30806732]
[175.97436523 9.45205688]
[174.06143188 -6.06808043]
[182.61549377 -19.15860367]
[197.59762573 -23.63856888]
[211.93368530 -17.39267159]
[218.85464478 -3.37003565]
[215.09263611 11.80828094]
[202.42395020 20.97554016]
[186.83038330 19.80324173]
[176.47918701 30.65925217]
[166.12800598 41.51526260]
[155.77682495 52.37127304]
[145.42564392 63.22728348]
[135.07444763 74.08329773]
[124.72326660 84.93930817]
[128.26530457 91.55020905]
[135.34936523 104.77200317]
[138.89140320 111.38290405]
[153.66351318 108.77818298]
[168.43563843 106.17346191]
[183.20774841 103.56874084]
[197.97985840 100.96401215]
[208.32258606 88.69993591]
[224.35501099 89.28368378]
[233.77844238 102.26745605]
[229.36402893 117.69122314]
[214.49812317 123.72318268]
[200.58457947 115.73612976]
[185.81246948 118.34085083]
[171.04035950 120.94557953]
[156.26823425 123.55030060]
[141.49612427 126.15502167]
[140.25239563 133.55117798]
[155.08938599 131.34584045]
[161.77166748 144.77517700]
[151.06451416 155.28027344]
[137.76493835 148.34349060]
[136.52122498 155.73965454]
[149.62896729 163.03260803]
[162.73670959 170.32556152]
[175.84443665 177.61849976]
[188.95217896 184.91145325]
[202.96856689 178.25408936]
[218.21493530 181.13987732]
[228.82876587 192.45916748]
[230.72879028 207.85948181]
[223.18444824 221.41906738]
[209.09666443 227.92399597]
[193.88249207 224.87298584]
[183.39208984 213.43920898]
[181.65922546 198.01919556]
[168.55149841 190.72624207]
[155.44375610 183.43328857]
[142.33601379 176.14035034]
[129.22827148 168.84739685]
[122.10273743 171.18763733]
[130.10943604 183.87199402]
[138.11613464 196.55635071]
[150.88516235 204.42729187]
[157.41543579 217.93119812]
[155.65637207 232.82769775]
[146.16032410 244.43911743]
[131.90916443 249.11933899]
[117.37791443 245.39874268]
[107.12956238 234.44560242]
[104.38218689 219.69935608]
[109.99786377 205.79127502]
[108.92476654 190.82971191]
[107.85166931 175.86814880]
[100.72613525 178.20840454]
[94.49491119 191.85287476]
[88.26368713 205.49736023]
[82.03246307 219.14183044]
[75.80123901 232.78631592]
[69.57000732 246.43080139]
[63.77483368 260.26611328]
[58.42153931 274.27832031]
[53.06824493 288.29055786]
[59.94718933 299.87789917]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 22]
[3 21]
[4 20]
[8 19]
[9 18]
[10 17]
[11 16]
[25 196]
[26 195]
[27 194]
[32 193]
[33 192]
[34 191]
[35 190]
[36 189]
[37 188]
[38 95]
[39 94]
[40 93]
[41 92]
[42 91]
[43 90]
[44 89]
[45 88]
[46 87]
[47 86]
[48 85]
[49 84]
[54 80]
[55 79]
[57 77]
[58 76]
[59 74]
[60 73]
[61 72]
[62 71]
[101 112]
[102 111]
[103 110]
[113 133]
[114 132]
[115 131]
[116 130]
[117 129]
[118 128]
[119 127]
[136 150]
[137 149]
[138 148]
[139 147]
[140 146]
[156 173]
[157 172]
[158 171]
[159 170]
[160 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
