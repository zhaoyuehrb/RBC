%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 04:38:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAUCACAGUUGCUGUAAUGACAGAAUUGUUUAAAAAACCAACUUGUCAUGUAAGCACUCUACUGCUUAUUAAAAUAUAGCACAAUUGAAAAAAUAAAAUGUGUUUUAAAUCUUUAA\
) } def
/len { sequence length } bind def

/coor [
[169.66044617 171.87393188]
[162.84555054 166.35180664]
[157.21710205 159.61462402]
[152.98815918 151.91285706]
[150.31964111 143.53358459]
[149.31423950 134.78973389]
[150.01251221 126.00848389]
[135.90200806 120.91989899]
[121.79149628 115.83131409]
[107.68099213 110.74272919]
[93.31966400 106.41235352]
[78.74821472 102.85245514]
[64.17676544 99.29254913]
[49.60531616 95.73265076]
[37.76704788 105.58970642]
[22.57219124 106.57444763]
[9.86142445 98.51837158]
[4.39711952 84.68799591]
[-10.17432880 81.12808990]
[-24.74577713 77.56819153]
[-39.31722641 74.00829315]
[-53.88867569 70.44838715]
[-68.46012115 66.88848877]
[-83.03157043 63.32859039]
[-93.67836761 74.31007385]
[-108.29582214 78.46058655]
[-122.93089294 74.76177979]
[-133.67767334 64.30410767]
[-137.71977234 49.96790314]
[-152.29122925 46.40800095]
[-166.86267090 42.84809875]
[-181.43412781 39.28820038]
[-198.25569153 41.40274429]
[-204.94427490 25.82393837]
[-191.82586670 15.08410740]
[-177.87422180 24.71675110]
[-163.30278015 28.27665138]
[-148.73132324 31.83655167]
[-134.15988159 35.39645386]
[-123.96278381 24.53897476]
[-109.60466003 20.21459770]
[-94.91271210 23.68057632]
[-83.85564423 34.10354233]
[-79.47167206 48.75714111]
[-64.90022278 52.31704330]
[-50.32877350 55.87694168]
[-35.75732422 59.43684387]
[-21.18587685 62.99674225]
[-6.61442852 66.55664062]
[7.95702028 70.11654663]
[19.18286705 60.36367798]
[34.17638779 59.07594299]
[47.20552063 66.95598602]
[53.16521835 81.16120148]
[67.73666382 84.72110748]
[82.30811310 88.28100586]
[96.87956238 91.84090424]
[99.71460724 90.37463379]
[103.17027283 89.96512604]
[106.83378601 90.85298920]
[110.20650482 93.11421967]
[112.76957703 96.63222504]
[126.88008118 101.72080994]
[140.99058533 106.80939484]
[155.10108948 111.89797974]
[170.83518982 95.62071991]
[192.40864563 88.96508789]
[214.45724487 93.52349854]
[231.52870178 108.10777283]
[239.43093872 129.05804443]
[254.40966797 129.85638428]
[269.38842773 130.65470886]
[284.36715698 131.45304871]
[299.34588623 132.25137329]
[314.32464600 133.04971313]
[329.30337524 133.84803772]
[344.28210449 134.64637756]
[359.26086426 135.44470215]
[374.23959351 136.24304199]
[381.29434204 124.08396912]
[392.86041260 116.21147156]
[406.62829590 114.12799835]
[419.87878418 118.18689728]
[430.01992798 127.53412628]
[435.09408569 140.28710938]
[450.04626465 141.48390198]
[464.99844360 142.68069458]
[478.09475708 133.41429138]
[493.46423340 138.01409912]
[499.31677246 152.95156860]
[491.16275024 166.76791382]
[475.25729370 168.86445618]
[463.80166626 157.63287354]
[448.84948730 156.43608093]
[433.89730835 155.23928833]
[425.10528564 168.72647095]
[410.64471436 176.01431274]
[394.38677979 175.04667664]
[380.73699951 165.99172974]
[373.44125366 151.22178650]
[358.46252441 150.42344666]
[343.48379517 149.62510681]
[328.50503540 148.82678223]
[313.52630615 148.02844238]
[298.54757690 147.23011780]
[283.56881714 146.43177795]
[268.59008789 145.63345337]
[253.61134338 144.83511353]
[238.63259888 144.03678894]
[235.95098877 152.30915833]
[231.72250366 159.91664124]
[226.10301208 166.57293701]
[219.30075073 172.02687073]
[211.56867981 176.07189941]
[203.19503784 178.55395508]
[194.49261475 179.37733459]
[185.78707886 178.50827026]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 65]
[8 64]
[9 63]
[10 62]
[11 57]
[12 56]
[13 55]
[14 54]
[18 50]
[19 49]
[20 48]
[21 47]
[22 46]
[23 45]
[24 44]
[29 39]
[30 38]
[31 37]
[32 36]
[70 109]
[71 108]
[72 107]
[73 106]
[74 105]
[75 104]
[76 103]
[77 102]
[78 101]
[79 100]
[85 95]
[86 94]
[87 93]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
