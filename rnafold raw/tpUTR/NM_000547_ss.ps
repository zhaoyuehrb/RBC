%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 14:53:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCAAAGUGGCAGGACACUGCAGAACAGCUUCAUGUUCCCAAAAUCACCGUACGACUCUUUUCCAAACACAGGCAAAUCCGAAAUCAGCAGGACGACUGUUUUCCCAACACGGGUAAAUCUAGUACCAUGUCGUAGUUACUCUCAGGCAUGGAUGAAUAAAUGUUAUAGCUGCAUUUGUCUGGCCUUUUCUUGUAAACAUUGCCUGAUUUGUUCCUUCUGGGGCUUUGCCAUUAAAAUGUAUUUACAGAUUA\
) } def
/len { sequence length } bind def

/coor [
[142.80172729 231.82237244]
[156.02543640 224.58380127]
[152.17303467 210.08694458]
[148.32061768 195.59008789]
[144.46821594 181.09321594]
[140.61579895 166.59635925]
[136.76339722 152.09950256]
[132.91098022 137.60264587]
[129.05857849 123.10578156]
[121.57921600 122.54971313]
[99.14114380 120.88150024]
[93.18733215 134.64929199]
[87.23352051 148.41708374]
[81.27970886 162.18487549]
[83.70506287 178.40368652]
[70.70513153 188.40037537]
[55.65312576 181.89120483]
[54.03326035 165.57226562]
[67.51191711 156.23106384]
[73.46572876 142.46327209]
[79.41954041 128.69548035]
[85.37335205 114.92768860]
[72.93953705 106.53601074]
[60.50683594 98.14506531]
[49.96603012 108.81705475]
[39.42522430 119.48905182]
[28.88442039 130.16104126]
[18.34361458 140.83303833]
[18.69196701 156.63348389]
[7.70547295 167.99449158]
[-8.09777641 168.17576599]
[-19.34199333 157.06977844]
[-19.35618210 141.26548767]
[-8.13192654 130.13932800]
[7.67162228 130.29222107]
[18.21242714 119.62023926]
[28.75323296 108.94824219]
[39.29404068 98.27625275]
[49.83484650 87.60425568]
[38.88944626 97.86087799]
[25.90565872 105.37228394]
[11.55813122 109.74818420]
[-3.40762281 110.76119995]
[-18.21397018 108.35868835]
[-32.09156036 102.66549683]
[-44.31930542 93.97743988]
[-54.26182938 82.74595642]
[-61.40252304 69.55465698]
[-65.37033844 55.08895493]
[-65.95911407 40.10051346]
[-63.13824463 25.36814499]
[-57.05431366 11.65735340]
[-48.02344894 -0.31943461]
[-36.51489639 -9.93989468]
[-23.12665749 -16.70413780]
[-8.55439091 -20.26069069]
[6.44471216 -20.42474937]
[21.09128380 -17.18778801]
[34.62427902 -10.71800423]
[46.34050369 -1.35157371]
[55.63117981 10.42481613]
[62.01354980 23.99925232]
[65.15598297 38.66639709]
[64.89519501 53.66413116]
[61.24513245 68.21211243]
[65.45493317 53.81497574]
[69.66473389 39.41783905]
[73.87454224 25.02070045]
[68.38062286 13.37100983]
[72.16368866 1.47851002]
[82.68167114 -4.46128321]
[87.06922150 -18.80525208]
[91.45676422 -33.14921951]
[95.84431458 -47.49318695]
[100.23185730 -61.83715820]
[104.61940765 -76.18112183]
[109.00695801 -90.52509308]
[112.94894409 -104.99785614]
[116.44160461 -119.58556366]
[108.43877411 -132.94941711]
[112.18863678 -147.69367981]
[124.97834778 -155.24078369]
[128.47100830 -169.82850647]
[131.96366882 -184.41621399]
[135.45632935 -199.00392151]
[127.14471436 -209.58161926]
[126.44413757 -222.82118225]
[133.38645935 -233.88751221]
[145.25300598 -238.86773682]
[148.92582703 -253.41113281]
[144.80308533 -268.68572998]
[155.42118835 -279.13107300]
[159.09400940 -293.67446899]
[162.76681519 -308.21786499]
[166.43963623 -322.76126099]
[130.75340271 -322.49142456]
[100.99914551 -360.73461914]
[95.21607208 -374.57501221]
[89.43299866 -388.41537476]
[83.64992523 -402.25576782]
[68.74791718 -413.09454346]
[71.69483185 -430.40618896]
[65.74102020 -444.17398071]
[59.78720474 -457.94177246]
[53.74836349 -471.67248535]
[47.62472534 -485.36557007]
[41.50108719 -499.05868530]
[27.08753014 -506.10345459]
[23.74946213 -521.79541016]
[34.04755783 -534.09698486]
[50.08200073 -533.57147217]
[59.55253983 -520.62200928]
[55.19418716 -505.18231201]
[61.31782532 -491.48922729]
[67.44146729 -477.79611206]
[73.02563477 -472.98645020]
[73.55500031 -463.89556885]
[79.50881195 -450.12777710]
[85.46262360 -436.35998535]
[96.57534027 -431.62536621]
[101.65608978 -420.22671509]
[97.49030304 -408.03884888]
[103.27337646 -394.19845581]
[109.05644989 -380.35809326]
[114.83952332 -366.51770020]
[122.33436584 -366.79592896]
[144.81887817 -367.63061523]
[149.55987549 -381.86166382]
[154.30085754 -396.09271240]
[159.04185486 -410.32379150]
[163.78285217 -424.55484009]
[168.52384949 -438.78588867]
[173.26484680 -453.01693726]
[166.44758606 -467.02276611]
[171.45834351 -481.38754272]
[184.85276794 -487.80044556]
[189.59375000 -502.03149414]
[183.73149109 -516.96514893]
[191.87646484 -530.78680420]
[207.78057861 -532.89373779]
[219.24353027 -521.66961670]
[217.47193909 -505.72470093]
[203.82481384 -497.29049683]
[199.08381653 -483.05944824]
[205.95608521 -469.89480591]
[201.35076904 -455.39495850]
[187.49589539 -448.27597046]
[182.75489807 -434.04489136]
[178.01391602 -419.81384277]
[173.27291870 -405.58279419]
[168.53192139 -391.35174561]
[163.79092407 -377.12066650]
[159.04992676 -362.88961792]
[164.88047791 -358.17211914]
[174.31547546 -369.83319092]
[183.75065613 -381.49411011]
[195.41142273 -372.05874634]
[185.97654724 -360.39819336]
[176.54154968 -348.73712158]
[182.37208557 -344.01962280]
[195.30018616 -351.62646484]
[208.22828674 -359.23333740]
[221.15638733 -366.84017944]
[234.08448792 -374.44705200]
[247.01258850 -382.05389404]
[249.42233276 -397.50469971]
[261.23382568 -407.75274658]
[276.87005615 -407.95922852]
[288.94805908 -398.02664185]
[291.76495361 -382.64486694]
[283.99072266 -369.07669067]
[269.29608154 -363.72860718]
[254.61944580 -369.12582397]
[241.69134521 -361.51895142]
[228.76324463 -353.91210938]
[215.83514404 -346.30523682]
[202.90704346 -338.69839478]
[189.97894287 -331.09152222]
[180.98303223 -319.08847046]
[177.31022644 -304.54507446]
[173.63740540 -290.00164795]
[169.96458435 -275.45825195]
[174.35003662 -261.22390747]
[163.46922302 -249.73832703]
[159.79641724 -235.19491577]
[169.02372742 -221.11968994]
[165.12638855 -204.39953613]
[150.04403687 -195.51126099]
[146.55137634 -180.92355347]
[143.05871582 -166.33584595]
[139.56605530 -151.74812317]
[147.55094910 -139.22706604]
[144.21670532 -124.38329315]
[131.02931213 -116.09290314]
[127.53665161 -101.50519562]
[141.43244934 -107.15380859]
[154.57444763 -99.92278290]
[157.24029541 -85.16157532]
[147.45782471 -73.79042816]
[132.46401978 -74.22163391]
[123.35092163 -86.13755035]
[118.96337891 -71.79357910]
[114.57582855 -57.44961166]
[110.18828583 -43.10564041]
[105.80073547 -28.76167297]
[101.41318512 -14.41770458]
[97.02564240 -0.07373623]
[101.87740326 16.80339050]
[88.27167511 29.23050308]
[84.06187439 43.62763977]
[79.85207367 58.02477646]
[75.64226532 72.42191315]
[120.95063782 53.19131851]
[165.77095032 99.62866211]
[177.31443787 109.20716858]
[188.85794067 118.78566742]
[205.10557556 121.00965881]
[211.05201721 136.29270935]
[200.58006287 148.91294861]
[184.46237183 145.88774109]
[179.27943420 130.32916260]
[167.73593140 120.75066376]
[156.19244385 111.17215729]
[143.55543518 119.25337219]
[147.40783691 133.75022888]
[151.26025391 148.24708557]
[155.11265564 162.74395752]
[158.96507263 177.24081421]
[162.81748962 191.73767090]
[166.66989136 206.23452759]
[170.52230835 220.73138428]
[185.59494019 220.45045471]
[200.29667664 223.78549194]
[213.77276611 230.54258728]
[225.23973083 240.32891846]
[234.03088379 252.57551575]
[239.63513184 266.57037354]
[241.72665405 281.49981689]
[240.18383789 296.49594116]
[235.09638977 310.68682861]
[226.76008606 323.24746704]
[215.65959167 333.44757080]
[202.44026184 340.69415283]
[187.87066650 344.56588745]
[172.79786682 344.83770752]
[158.09814453 341.49374390]
[144.62615967 334.72848511]
[133.16513062 324.93518066]
[124.38140869 312.68328857]
[118.78564453 298.68502808]
[116.70317841 283.75430298]
[118.25508118 268.75912476]
[123.35113525 254.57131958]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 231]
[3 230]
[4 229]
[5 228]
[6 227]
[7 226]
[8 225]
[9 224]
[11 22]
[12 21]
[13 20]
[14 19]
[24 39]
[25 38]
[26 37]
[27 36]
[28 35]
[65 212]
[66 211]
[67 210]
[68 209]
[71 207]
[72 206]
[73 205]
[74 204]
[75 203]
[76 202]
[77 201]
[78 195]
[79 194]
[82 191]
[83 190]
[84 189]
[85 188]
[89 185]
[90 184]
[92 182]
[93 181]
[94 180]
[95 179]
[97 125]
[98 124]
[99 123]
[100 122]
[102 119]
[103 118]
[104 117]
[105 115]
[106 114]
[107 113]
[127 153]
[128 152]
[129 151]
[130 150]
[131 149]
[132 148]
[133 147]
[136 144]
[137 143]
[160 178]
[161 177]
[162 176]
[163 175]
[164 174]
[165 173]
[214 223]
[215 222]
[216 221]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
