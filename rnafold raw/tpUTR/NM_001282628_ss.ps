%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 16:59:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCUGCAGUGAAAAGCUGGAGCCCCGAUUCCUAAAUUUUGUCACUCAAAUUGAAACAAACCAGCUGGCCAUGGUGGUUGUCAUCCCAGCACUUUAGGAGGCCACCACAGGAGGAUCACUCCCGUGAUCAAAACCAACCUGGGCAACAUGAUGAAACUCUAGCUCUACAAAACAAAAAUAAAAAAAAAAUUAGCCUGCA\
) } def
/len { sequence length } bind def

/coor [
[169.26342773 382.35946655]
[157.30421448 392.69158936]
[141.54815674 391.45773315]
[131.34304810 379.38995361]
[132.74339294 363.64782715]
[144.91839600 353.57089233]
[146.08944702 338.61666870]
[147.26048279 323.66244507]
[148.43153381 308.70822144]
[149.60256958 293.75399780]
[147.84823608 278.85696411]
[143.23529053 264.58389282]
[129.04327393 260.14260864]
[120.08179474 248.05311584]
[119.95593262 232.82690430]
[128.92352295 220.30139160]
[124.31056213 206.02832031]
[119.69760895 191.75523376]
[115.08466339 177.48216248]
[110.47171021 163.20909119]
[105.85875702 148.93601990]
[101.24580383 134.66293335]
[96.63285065 120.38986206]
[91.10839844 134.33547974]
[77.75974274 141.17752075]
[63.21251297 137.51988220]
[54.68726730 125.17808533]
[56.41552353 110.27797699]
[67.53945923 100.21527100]
[82.53919983 99.98515320]
[69.21154785 93.10228729]
[55.88390732 86.21942139]
[42.55625916 79.33654785]
[29.22861671 72.45368195]
[15.90097046 65.57081604]
[2.57332540 58.68794632]
[-10.75432014 51.80507660]
[-30.35156059 64.01029968]
[-56.79209900 52.82894516]
[-71.79164124 52.94616699]
[-86.79118347 53.06339264]
[-101.79072571 53.18061447]
[-116.79026794 53.29783630]
[-123.96772003 61.48408508]
[-134.25512695 64.30627441]
[-144.18725586 61.06439590]
[-150.55494690 53.06018066]
[-165.55082703 52.70854187]
[-180.54670715 52.35690308]
[-196.52322388 58.03026962]
[-206.39761353 44.24866104]
[-195.88810730 30.94503593]
[-180.19506836 37.36102295]
[-165.19918823 37.71266174]
[-150.20330811 38.06430054]
[-133.96803284 27.57040024]
[-116.90748596 38.29829407]
[-101.90794373 38.18107224]
[-86.90840149 38.06385040]
[-71.90886688 37.94662857]
[-56.90932083 37.82940292]
[-53.78401947 31.01159859]
[-62.46752548 18.78062630]
[-47.53341293 17.37598610]
[-44.40810776 10.55817986]
[-54.10965729 -0.88209778]
[-63.81120682 -12.32237530]
[-73.51275635 -23.76265335]
[-83.21430206 -35.20293045]
[-87.36967468 -36.52442932]
[-90.56327820 -38.86716843]
[-92.59172821 -41.80182648]
[-93.41255951 -44.87715530]
[-93.13733673 -47.67456055]
[-102.10516357 -59.69862747]
[-111.07298279 -71.72269440]
[-120.04080963 -83.74675751]
[-135.64543152 -87.47169495]
[-142.33178711 -102.05497742]
[-134.97065735 -116.30957031]
[-119.20889282 -119.30056763]
[-107.13755035 -108.73352814]
[-108.01674652 -92.71458435]
[-99.04891968 -80.69051361]
[-90.08110046 -68.66645050]
[-81.11327362 -56.64238358]
[-71.77402496 -44.90447998]
[-62.07247543 -33.46420288]
[-52.37092972 -22.02392387]
[-42.66938019 -10.58364677]
[-32.96783066 0.85663122]
[-12.86113930 7.40898991]
[-2.56644011 22.73394775]
[-3.87145162 38.47743225]
[9.45619392 45.36030197]
[22.78383827 52.24316788]
[36.11148453 59.12603760]
[49.43912888 66.00890350]
[62.76677322 72.89177704]
[76.09442139 79.77464294]
[89.42206573 86.65750885]
[104.15900421 83.86061096]
[114.03816986 72.57335663]
[123.91733551 61.28610229]
[124.60955811 56.98095703]
[126.45406342 53.47591400]
[129.05633545 51.03562927]
[131.97639465 49.76887512]
[134.78373718 49.62722397]
[145.34881592 38.97925568]
[155.91389465 28.33129120]
[166.47897339 17.68332672]
[164.49455261 -4.70774078]
[179.52116394 -21.05357361]
[201.44868469 -20.95822525]
[210.97024536 -32.54873276]
[220.49180603 -44.13924026]
[230.01336670 -55.72974777]
[239.53492737 -67.32025909]
[249.05648804 -78.91076660]
[251.20046997 -95.16915894]
[266.45407104 -101.19075775]
[279.12570190 -90.78105927]
[276.17987061 -74.64866638]
[260.64700317 -69.38919830]
[251.12544250 -57.79869461]
[241.60388184 -46.20818710]
[232.08232117 -34.61767960]
[222.56074524 -23.02717018]
[213.03918457 -11.43666363]
[216.64746094 -4.26732683]
[217.99661255 3.67886305]
[216.94808960 11.70432758]
[213.57469177 19.09861183]
[208.15596008 25.20127106]
[201.15502930 29.46085930]
[193.17907715 31.48472214]
[184.92675781 31.07512856]
[177.12693787 28.24840164]
[166.56185913 38.89636612]
[155.99678040 49.54433441]
[145.43170166 60.19229889]
[135.20458984 71.16526794]
[125.32542419 82.45252228]
[115.44625854 93.73977661]
[125.64442444 82.73989868]
[139.51618958 77.03250885]
[154.50260925 77.67045593]
[167.83915710 84.53604889]
[177.06564331 96.36280060]
[180.48005676 110.96902466]
[177.45251465 125.66031647]
[168.54154968 137.72657776]
[155.39093018 144.94194031]
[140.42657471 145.97538757]
[126.40895081 140.63627625]
[115.92388153 129.90951538]
[110.90592957 115.77690887]
[115.51888275 130.04998779]
[120.13182831 144.32305908]
[124.74478149 158.59613037]
[129.35774231 172.86921692]
[133.97068787 187.14228821]
[138.58363342 201.41535950]
[143.19659424 215.68843079]
[157.79856873 220.59645081]
[166.60769653 233.01629639]
[166.41668701 248.06379700]
[157.50836182 259.97091675]
[162.12132263 274.24398804]
[164.46701050 259.42855835]
[170.12004089 245.53454590]
[178.78424072 233.28988647]
[190.00570679 223.33605957]
[203.19654846 216.19451904]
[217.66572571 212.23942566]
[232.65522766 211.67797852]
[247.37973022 214.53956604]
[261.06787109 220.67430115]
[273.00253296 229.76078796]
[282.55844116 241.32298279]
[289.23501587 254.75515747]
[292.68246460 269.35360718]
[292.72015381 284.35357666]
[289.34616089 298.96917725]
[282.73721313 312.43475342]
[273.23953247 324.04483032]
[261.35070801 333.19119263]
[247.69358826 339.39468384]
[232.98364258 342.33026123]
[217.99151611 341.84417725]
[203.50263977 337.96188354]
[190.27604675 330.88674927]
[179.00468445 320.98944092]
[170.27903748 308.78851318]
[164.55679321 294.92504883]
[163.38574219 309.87927246]
[162.21470642 324.83349609]
[161.04365540 339.78771973]
[159.87261963 354.74194336]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 200]
[7 199]
[8 198]
[9 197]
[10 196]
[11 170]
[12 169]
[16 165]
[17 164]
[18 163]
[19 162]
[20 161]
[21 160]
[22 159]
[23 158]
[30 101]
[31 100]
[32 99]
[33 98]
[34 97]
[35 96]
[36 95]
[37 94]
[39 61]
[40 60]
[41 59]
[42 58]
[43 57]
[47 55]
[48 54]
[49 53]
[65 91]
[66 90]
[67 89]
[68 88]
[69 87]
[74 86]
[75 85]
[76 84]
[77 83]
[102 145]
[103 144]
[104 143]
[109 142]
[110 141]
[111 140]
[112 139]
[115 130]
[116 129]
[117 128]
[118 127]
[119 126]
[120 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
