%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 09:58:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGGACCUGGAUCUGGGCGGGGUGGUGCGCUCCUCAGGGCGGGUGCCACCGGGUUCCCCAGGGGAAUACAUGUCCCCAGCUCUGGGAGGGGUUUGCUACUGGCCUCCUACUUUCCUCCCUAGGUGGACAGUGCUCCUCUAGAGAGCUGCGACUUUAAUUAAAAACAACAGGAAAACA\
) } def
/len { sequence length } bind def

/coor [
[160.87849426 103.16048431]
[172.29397583 93.42916107]
[157.57577515 96.32305145]
[142.85757446 99.21694183]
[128.13937378 102.11083221]
[113.42118073 105.00473022]
[102.76346588 114.05484772]
[89.47270966 109.71347046]
[74.75450897 112.60736084]
[64.24651337 130.78814697]
[44.03786469 135.30288696]
[27.27172852 123.65586853]
[12.79432297 127.58075714]
[-1.68308163 131.50564575]
[-16.16048622 135.43052673]
[-30.63789177 139.35542297]
[-45.11529541 143.28030396]
[-52.60618210 148.56135559]
[-59.88288879 147.14430237]
[-74.42730713 150.81307983]
[-88.83319092 154.99285889]
[-103.08258820 159.67843628]
[-117.33197784 164.36402893]
[-131.58137512 169.04960632]
[-145.83078003 173.73518372]
[-160.08016968 178.42077637]
[-174.32957458 183.10635376]
[-188.57896423 187.79193115]
[-199.27165222 199.45285034]
[-213.77897644 196.07836914]
[-224.47166443 207.73928833]
[-238.97897339 204.36480713]
[-253.22837830 209.05038452]
[-263.74911499 221.62997437]
[-279.85498047 218.54235840]
[-284.97763062 202.96382141]
[-273.84732056 190.92022705]
[-257.91397095 194.80099487]
[-243.66456604 190.11540222]
[-233.99108887 178.78964233]
[-218.46455383 181.82897949]
[-208.79107666 170.50320435]
[-193.26455688 173.54254150]
[-179.01515198 168.85694885]
[-164.76576233 164.17137146]
[-150.51635742 159.48579407]
[-136.26696777 154.80020142]
[-122.01756287 150.11462402]
[-107.76816559 145.42904663]
[-93.51876831 140.74345398]
[-92.13690186 138.27160645]
[-89.67785645 136.20690918]
[-86.29494476 134.96797180]
[-82.29198456 134.90895081]
[-78.09607697 136.26866150]
[-63.55166245 132.59988403]
[-49.04018402 128.80290222]
[-34.56277847 124.87801361]
[-20.08537483 120.95312500]
[-5.60797024 117.02823639]
[8.86943436 113.10334778]
[23.34683990 109.17845917]
[25.29349899 99.96008301]
[30.50990868 92.04465485]
[38.30814362 86.55319214]
[47.63124847 84.28192139]
[57.19643402 85.58705902]
[65.67154694 90.32967377]
[71.86061859 97.88916779]
[86.57881927 94.99526978]
[97.23653412 85.94515228]
[110.52729034 90.28652954]
[125.24549103 87.39263916]
[139.96368408 84.49874878]
[154.68188477 81.60485077]
[169.40008545 78.71096039]
[182.78913879 71.94832611]
[193.85327148 61.81989670]
[204.91738892 51.69146347]
[215.98152161 41.56303406]
[227.04565430 31.43460464]
[238.10977173 21.30617523]
[249.17390442 11.17774487]
[254.29447937 -6.49562454]
[271.54541016 -9.64552402]
[282.42907715 -19.96764183]
[293.31271362 -30.28975868]
[304.19638062 -40.61187744]
[315.08001709 -50.93399429]
[325.96368408 -61.25611115]
[336.84732056 -71.57823181]
[347.73098755 -81.90034485]
[333.06991577 -85.07109070]
[326.24612427 -98.42907715]
[332.26983643 -112.16642761]
[346.71826172 -116.19673157]
[358.98287964 -107.56079865]
[360.05871582 -92.59970856]
[371.80972290 -101.92246246]
[383.56072998 -111.24520874]
[395.31176758 -120.56795502]
[401.31396484 -135.20640564]
[416.09338379 -137.05520630]
[427.84439087 -146.37794495]
[433.84661865 -161.01640320]
[448.62603760 -162.86520386]
[460.37704468 -172.18794250]
[472.12805176 -181.51069641]
[483.87905884 -190.83343506]
[481.54888916 -206.01454163]
[487.13641357 -220.32101440]
[499.13861084 -229.90449524]
[514.32696533 -232.18705750]
[528.61584473 -226.55471802]
[538.16162109 -214.52255249]
[540.39660645 -199.32713318]
[534.71948242 -185.05596924]
[522.65747070 -175.54792786]
[507.45510864 -173.36062622]
[493.20181274 -179.08242798]
[481.45080566 -169.75967407]
[469.69979858 -160.43693542]
[457.94876099 -151.11418152]
[452.78707886 -137.14256287]
[437.16714478 -134.62693787]
[425.41613770 -125.30419159]
[420.25442505 -111.33256531]
[404.63449097 -108.81694031]
[392.88348389 -99.49419403]
[381.13247681 -90.17144775]
[369.38146973 -80.84869385]
[358.05310059 -71.01669312]
[347.16943359 -60.69457626]
[336.28579712 -50.37245941]
[325.40213013 -40.05034256]
[314.51849365 -29.72822380]
[303.63482666 -19.40610695]
[292.75119019 -9.08398914]
[281.86752319 1.23812842]
[281.22769165 13.33666515]
[272.21841431 22.02570343]
[259.30233765 22.24187279]
[248.23820496 32.37030029]
[237.17407227 42.49873352]
[226.10995483 52.62716293]
[215.04582214 62.75559235]
[203.98170471 72.88402557]
[192.91757202 83.01245117]
[207.52429199 79.60015106]
[222.51094055 78.96761322]
[237.35324097 81.13697815]
[251.53193665 86.03234100]
[264.55099487 93.48245239]
[275.95495605 103.22666931]
[285.34484863 114.92409515]
[292.39218140 128.16551208]
[296.85043335 142.48767090]
[298.56359863 157.38951111]
[297.47174072 172.34973145]
[293.61309814 186.84492493]
[287.12261963 200.36801147]
[278.22738647 212.44587708]
[267.23861694 222.65600586]
[254.54069519 230.64118958]
[240.57789612 236.12207031]
[225.83866882 238.90690613]
[210.83866882 238.89828491]
[196.10266113 236.09648132]
[182.14617920 230.59954834]
[169.45745850 222.59976196]
[158.48042297 212.37699890]
[149.59910583 200.28890991]
[143.12419128 186.75836182]
[139.28221130 172.25874329]
[138.20756531 157.29728699]
[139.93786621 142.39741516]
[144.41258240 128.08039856]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 76]
[3 75]
[4 74]
[5 73]
[6 72]
[8 70]
[9 69]
[12 62]
[13 61]
[14 60]
[15 59]
[16 58]
[17 57]
[19 56]
[20 55]
[21 50]
[22 49]
[23 48]
[24 47]
[25 46]
[26 45]
[27 44]
[28 43]
[30 41]
[32 39]
[33 38]
[77 148]
[78 147]
[79 146]
[80 145]
[81 144]
[82 143]
[83 142]
[85 139]
[86 138]
[87 137]
[88 136]
[89 135]
[90 134]
[91 133]
[92 132]
[98 131]
[99 130]
[100 129]
[101 128]
[103 126]
[104 125]
[106 123]
[107 122]
[108 121]
[109 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
