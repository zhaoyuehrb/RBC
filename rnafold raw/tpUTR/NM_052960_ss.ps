%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 13:27:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCACAUCCAGCAGCAGAGCCCACUUGUGGCUGCAGCUUUAUGCCAAAUUAUAUUGCAGACUGAACAGACGUUUAUCUAUCCCAUUUGGCGACGAGGACUCGUGGCUGGAGAGAGCCACACAGCGUGUAACCUGAAGUCAUCUAGAUUAUGGGGAAACUGCUCAGCUUCAAUAAACCUGUCCAAAUGA\
) } def
/len { sequence length } bind def

/coor [
[147.03167725 122.16663361]
[142.50309753 129.94702148]
[136.70034790 136.82965088]
[129.79734802 142.60816956]
[122.00107574 147.10934448]
[113.54524231 150.19825745]
[104.68333435 151.78228760]
[95.68103027 151.81394958]
[86.80819702 150.29229736]
[78.33084106 147.26293945]
[70.50309753 142.81671143]
[60.30050278 153.81248474]
[50.09791183 164.80827332]
[39.89532089 175.80404663]
[29.69273186 186.79981995]
[26.11957359 206.62648010]
[7.43490219 211.56071472]
[-2.39657116 222.88952637]
[-12.22804451 234.21833801]
[-14.81084347 250.41282654]
[-30.22168541 256.01977539]
[-42.60721588 245.27127075]
[-39.22626495 229.22442627]
[-23.55686378 224.38687134]
[-13.72538948 213.05805969]
[-3.89391661 201.72923279]
[-5.52960730 191.61930847]
[-1.23105812 182.08206177]
[7.79836464 176.37649536]
[18.69695282 176.59722900]
[28.89954376 165.60145569]
[39.10213470 154.60568237]
[49.30472565 143.60989380]
[59.50731659 132.61412048]
[49.51101685 119.54098511]
[43.81946945 103.40390015]
[28.82413292 103.77786255]
[17.96607780 114.94658661]
[2.75334525 115.11222076]
[-7.82741070 104.69189453]
[-22.82274818 105.06585693]
[-37.81808472 105.43981934]
[-52.81342316 105.81377411]
[-63.52370453 117.43553925]
[-79.31803131 117.99657440]
[-90.82591248 107.16401672]
[-91.21992493 91.36463928]
[-80.26630402 79.97193146]
[-64.46364594 79.74498749]
[-53.18738556 90.81843567]
[-38.19204712 90.44448090]
[-23.19670868 90.07051849]
[-8.20137119 89.69655609]
[1.84682190 78.76177979]
[17.04889870 78.16891479]
[28.45017242 88.78252411]
[43.44551086 88.40856171]
[48.34082031 74.22985077]
[36.77041626 64.68386841]
[25.20001221 55.13788605]
[16.57131577 52.08209229]
[13.51834869 45.33580399]
[2.10821176 35.59882736]
[-9.30192471 25.86184502]
[-20.71206093 16.12486458]
[-32.12220001 6.38788557]
[-48.33758545 3.93976808]
[-54.07243347 -11.42394161]
[-43.42721939 -23.89837646]
[-27.35283089 -20.65090561]
[-22.38521767 -5.02225113]
[-10.97508144 4.71472883]
[0.43505496 14.45170879]
[11.84519196 24.18868828]
[23.25532913 33.92567062]
[34.74599457 43.56748199]
[46.31639862 53.11346436]
[57.88680267 62.65944672]
[76.59349823 49.75928116]
[98.54980469 45.45168686]
[120.06298065 50.17833710]
[137.62640381 62.88467026]
[148.49099731 81.23937225]
[163.11491394 77.90155792]
[177.73883057 74.56374359]
[192.36276245 71.22592926]
[206.98667908 67.88811493]
[221.61059570 64.55030060]
[236.23451233 61.21248627]
[241.35620117 56.98338318]
[246.99739075 56.11995697]
[251.39981079 58.01533890]
[266.12658691 55.16544342]
[273.97500610 50.45431519]
[281.12173462 52.39270401]
[295.89382935 49.78798294]
[310.66595459 47.18325806]
[314.28750610 25.85366631]
[325.90667725 7.65253687]
[343.66226196 -4.56419945]
[364.73315430 -8.89446545]
[385.78674316 -4.68611860]
[393.39447021 -17.61371803]
[401.00216675 -30.54131889]
[408.60986328 -43.46891785]
[416.21755981 -56.39651871]
[423.82528687 -69.32411957]
[419.61972046 -84.55857849]
[427.49087524 -98.26333618]
[442.76895142 -102.30759430]
[456.38973999 -94.29196930]
[460.27221680 -78.97199249]
[452.11303711 -65.43672943]
[436.75286865 -61.71641541]
[429.14517212 -48.78881454]
[421.53747559 -35.86121368]
[413.92977905 -22.93361473]
[406.32205200 -10.00601482]
[398.71435547 2.92158508]
[408.32894897 12.80845547]
[415.12493896 24.80868149]
[418.65884399 38.13919067]
[433.65832520 38.26385498]
[448.65780640 38.38851929]
[463.65728760 38.51318359]
[472.28356934 35.45059586]
[478.90451050 38.76665115]
[493.89984131 39.14060974]
[505.30111694 28.52700043]
[520.50317383 29.11986351]
[530.55139160 40.05464554]
[545.54675293 40.42860413]
[560.54205322 40.80256271]
[574.53082275 33.41171646]
[587.06127930 41.46391296]
[602.05920410 41.71323395]
[617.05865479 41.83789825]
[632.05816650 41.96256256]
[647.05761719 42.08722687]
[659.45788574 31.90816498]
[675.11694336 35.39731216]
[682.02246094 49.87808990]
[674.87719727 64.24208832]
[659.16235352 67.47047424]
[646.93298340 57.08670807]
[631.93347168 56.96204376]
[616.93402100 56.83737946]
[601.93450928 56.71271515]
[595.20703125 59.80686951]
[586.68731689 56.45925140]
[573.77111816 63.87684631]
[560.16809082 55.79790115]
[545.17279053 55.42394257]
[530.17742920 55.04998016]
[519.59667969 65.47030640]
[504.38394165 65.30467224]
[493.52587891 54.13594818]
[478.53054810 53.76198959]
[463.53262329 53.51266861]
[448.53314209 53.38800049]
[433.53366089 53.26333618]
[418.53417969 53.13867188]
[416.08050537 63.17055511]
[411.75912476 72.55836487]
[405.72555542 80.95764923]
[398.19830322 88.05968475]
[389.45077515 93.60277557]
[379.80142212 97.38193512]
[369.60217285 99.25644684]
[359.22552490 99.15510559]
[349.05093384 97.07892609]
[339.45108032 93.10118866]
[330.77804565 87.36486816]
[323.35049438 80.07750702]
[317.44192505 71.50366974]
[313.27066040 61.95537567]
[298.49856567 64.56009674]
[283.72644043 67.16481781]
[268.97647095 69.89222717]
[254.24971008 72.74211884]
[239.57232666 75.83640289]
[224.94841003 79.17421722]
[210.32449341 82.51203156]
[195.70057678 85.84984589]
[181.07664490 89.18766022]
[166.45272827 92.52547455]
[151.82881165 95.86328888]
[151.76548767 104.86542511]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 34]
[12 33]
[13 32]
[14 31]
[15 30]
[17 26]
[18 25]
[19 24]
[36 57]
[37 56]
[40 53]
[41 52]
[42 51]
[43 50]
[58 78]
[59 77]
[60 76]
[62 75]
[63 74]
[64 73]
[65 72]
[66 71]
[83 187]
[84 186]
[85 185]
[86 184]
[87 183]
[88 182]
[89 181]
[92 180]
[93 179]
[95 178]
[96 177]
[97 176]
[102 119]
[103 118]
[104 117]
[105 116]
[106 115]
[107 114]
[122 162]
[123 161]
[124 160]
[125 159]
[127 158]
[128 157]
[131 154]
[132 153]
[133 152]
[135 150]
[136 148]
[137 147]
[138 146]
[139 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
