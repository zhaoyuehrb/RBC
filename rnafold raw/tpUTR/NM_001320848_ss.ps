%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 22:18:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGCUCCUGCACAGGCCCGACAUAGGAUGAGGGCAUCUGCUCCCACUCAGCCUAGCCCAGGGAAAGGCCCAGUGGCAGGUGUGGGCAGGUGCCAGCCCUGCAAGCCGCCUCUUCUCGGUAGAAGGGAGAAGGACAGAGCUCUCUUCAAUAAAUGCGUCGGGUCAAAGCA\
) } def
/len { sequence length } bind def

/coor [
[93.51148987 261.70852661]
[89.67384338 276.20928955]
[85.97035217 290.74490356]
[82.40132141 305.31411743]
[87.50325012 320.89944458]
[76.35694122 332.92822266]
[60.42876053 329.02630615]
[56.10425568 313.20761108]
[67.83210754 301.74508667]
[71.40113831 287.17587280]
[69.93270111 279.90237427]
[75.17307281 272.37164307]
[79.01071167 257.87088013]
[81.90307617 243.15237427]
[83.83805847 228.27769470]
[85.77304840 213.40303040]
[87.70803833 198.52836609]
[89.64302826 183.65368652]
[91.57801819 168.77902222]
[93.51300049 153.90434265]
[95.44799042 139.02967834]
[69.95025635 116.62211609]
[73.46437836 87.37212372]
[62.01340866 77.68320465]
[50.56243134 67.99427795]
[39.11145782 58.30535889]
[32.62215424 56.74211884]
[28.53515625 52.72241592]
[27.42496681 48.04064941]
[11.85787582 48.59148407]
[0.75992918 38.18522644]
[0.33072767 23.34098816]
[-10.75440598 13.23555279]
[-21.83954048 3.13011861]
[-32.92467499 -6.97531605]
[-44.00980759 -17.08075142]
[-55.09494019 -27.18618584]
[-66.18007660 -37.29161835]
[-77.26520538 -47.39705658]
[-88.35034180 -57.50249100]
[-94.77745056 -59.30445480]
[-98.71312714 -63.47242737]
[-99.64955902 -68.19202423]
[-110.35370636 -78.70016479]
[-121.05786133 -89.20831299]
[-131.76200867 -99.71646118]
[-136.89382935 -101.03472137]
[-140.61367798 -103.91880035]
[-142.55935669 -107.55794525]
[-142.74778748 -111.11596680]
[-152.85322571 -122.20109558]
[-162.95866394 -133.28623962]
[-173.06410217 -144.37136841]
[-181.19184875 -148.62728882]
[-183.25152588 -155.75596619]
[-193.15039062 -167.02593994]
[-203.04925537 -178.29592896]
[-213.05183411 -189.47395325]
[-228.06687927 -194.45982361]
[-230.92326355 -209.07797241]
[-241.02868652 -220.16310120]
[-251.13412476 -231.24824524]
[-267.02917480 -233.42251587]
[-275.11550903 -247.27857971]
[-269.19003296 -262.18725586]
[-253.79823303 -266.71185303]
[-240.74739075 -257.38153076]
[-240.04899597 -241.35366821]
[-229.94355774 -230.26853943]
[-219.83811951 -219.18341064]
[-205.54588318 -214.99043274]
[-201.96670532 -199.57939148]
[-195.10971069 -196.74356079]
[-191.77928162 -188.19479370]
[-181.88041687 -176.92480469]
[-171.98153687 -165.65483093]
[-161.97895813 -154.47680664]
[-151.87353516 -143.39166260]
[-141.76809692 -132.30653381]
[-131.66265869 -121.22139740]
[-121.25386810 -110.42060852]
[-110.54971313 -99.91246796]
[-99.84556580 -89.40431976]
[-89.14141083 -78.89617157]
[-78.24491119 -68.58762360]
[-67.15977478 -58.48218918]
[-56.07463837 -48.37675476]
[-44.98950577 -38.27132034]
[-33.90437317 -28.16588402]
[-22.81923866 -18.06044960]
[-11.73410511 -7.95501518]
[-0.64897144 2.15041947]
[10.43616199 12.25585365]
[25.25667763 11.31357098]
[36.64253616 21.40400696]
[37.53040314 36.95551682]
[48.80038071 46.85438538]
[60.25135422 56.54330444]
[71.70233154 66.23222351]
[83.15330505 75.92115021]
[91.94864655 71.73734283]
[101.62837982 70.65803528]
[111.12925720 72.80180359]
[119.40763092 77.93314362]
[131.86039734 69.57080078]
[144.31315613 61.20846176]
[156.76591492 52.84611893]
[157.20469666 37.33525085]
[166.70338440 25.06518364]
[181.60954285 20.75401115]
[196.19143677 26.05946732]
[204.84204102 38.94149399]
[204.23503113 54.44669342]
[194.60379028 66.61299133]
[179.65174866 70.76220703]
[165.12825012 65.29888153]
[152.67549133 73.66122437]
[140.22273254 82.02356720]
[127.76997375 90.38590240]
[134.29922485 98.31325531]
[138.21406555 109.14993286]
[152.84675598 112.44912720]
[167.47943115 115.74832153]
[182.11210632 119.04751587]
[196.74479675 122.34671783]
[211.37747192 125.64591217]
[226.01014709 128.94509888]
[240.64282227 132.24429321]
[251.00067139 120.90363312]
[265.64599609 116.27653503]
[280.63928223 119.60768890]
[291.94744873 130.00102234]
[296.52859497 144.66078186]
[293.15048218 159.64356995]
[282.72174072 170.91908264]
[268.04769897 175.45426941]
[253.07557678 172.02919006]
[241.83280945 161.56517029]
[237.34362793 146.87698364]
[222.71095276 143.57778931]
[208.07827759 140.27859497]
[193.44558716 136.97940063]
[178.81291199 133.68019104]
[164.18023682 130.38099670]
[149.54756165 127.08181000]
[134.91487122 123.78261566]
[128.76683044 128.07812500]
[140.02648926 137.98872375]
[153.55397034 144.47000122]
[157.84352112 158.84358215]
[150.08064270 171.67860413]
[135.35876465 174.55371094]
[123.33725739 165.58245850]
[121.90390015 150.65058899]
[116.47071838 136.66915894]
[110.32266235 140.96466064]
[108.38767242 155.83934021]
[106.45268250 170.71400452]
[104.51770020 185.58868408]
[102.58271027 200.46334839]
[100.64772034 215.33801270]
[98.71273041 230.21269226]
[96.77774048 245.08735657]
[108.78852844 236.10176086]
[123.77303314 236.78332520]
[134.91850281 246.82218933]
[137.15757751 261.65411377]
[129.47227478 274.53573608]
[115.35674286 279.61035156]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 13]
[2 12]
[3 10]
[4 9]
[14 163]
[15 162]
[16 161]
[17 160]
[18 159]
[19 158]
[20 157]
[21 156]
[23 100]
[24 99]
[25 98]
[26 97]
[29 96]
[32 93]
[33 92]
[34 91]
[35 90]
[36 89]
[37 88]
[38 87]
[39 86]
[40 85]
[43 84]
[44 83]
[45 82]
[46 81]
[50 80]
[51 79]
[52 78]
[53 77]
[55 76]
[56 75]
[57 74]
[58 72]
[60 70]
[61 69]
[62 68]
[104 119]
[105 118]
[106 117]
[107 116]
[121 146]
[122 145]
[123 144]
[124 143]
[125 142]
[126 141]
[127 140]
[128 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
