%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 05:56:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGGAGGUUUGAGCUCAAAUGCUUAAACUGCUGGCAACAUAUAAUAAAUGCAUGCUAUUCAAUGAAUUUCUGCCUAUGAGGCAUCUGGCCCCUGGUAGCCAGCUCUCCAGAAUUACUUGUAGGUAAUUCCUCUCUUCAUGUUCUAAUAAACUUCUACAUUAUCACCAA\
) } def
/len { sequence length } bind def

/coor [
[125.99069977 195.61663818]
[122.67230988 180.98829651]
[119.35391235 166.35995483]
[116.03552246 151.73161316]
[112.71712494 137.10328674]
[109.39873505 122.47494507]
[94.74018097 119.29265594]
[85.65491486 131.22822571]
[76.56964874 143.16380310]
[67.48438263 155.09938049]
[58.39912033 167.03495789]
[49.31385422 178.97053528]
[40.22858810 190.90611267]
[31.14332199 202.84167480]
[33.51495743 218.46701050]
[24.07603645 231.14306641]
[8.42650700 233.34936523]
[-4.14904451 223.77694702]
[-6.18976593 208.10496521]
[3.51506662 195.63133240]
[19.20774841 193.75640869]
[28.29301453 181.82084656]
[37.37828064 169.88526917]
[46.46354675 157.94969177]
[55.54881287 146.01411438]
[64.63407898 134.07853699]
[73.71934509 122.14296722]
[82.80461121 110.20738983]
[76.20647430 96.73577118]
[69.60894012 83.26533508]
[54.60958481 83.12592316]
[43.37568283 93.91652679]
[28.16619301 93.56146240]
[17.94823074 82.78515625]
[2.94887853 82.64573669]
[-12.05047321 82.50631714]
[-18.75417519 96.21847534]
[-30.74879265 105.65732574]
[-45.65278625 108.94877625]
[-60.50696182 105.43932343]
[-72.36200714 95.82575226]
[-78.86408997 82.01686096]
[-78.72222900 66.75440216]
[-71.96458435 53.06875229]
[-59.93288803 43.67720795]
[-45.01604462 40.44446945]
[-30.17580795 44.01239777]
[-18.35871315 53.67257309]
[-11.91105556 67.50696564]
[3.08829618 67.64638519]
[18.08764839 67.78580475]
[28.50415802 57.20129013]
[43.71762085 57.12900925]
[54.74900436 68.12657166]
[69.74835968 68.26598358]
[55.03919983 65.32646942]
[44.52326202 54.62997437]
[41.83456039 39.87290955]
[47.90223312 26.15491676]
[60.62946320 18.21655273]
[75.61806488 18.80109787]
[87.68840027 27.70654869]
[92.66928864 41.85542679]
[88.83927917 56.35857010]
[95.31163025 42.82680130]
[101.78397369 29.29503441]
[108.25631714 15.76326466]
[107.84012604 10.47879124]
[109.36436462 6.02341604]
[112.17857361 3.00315261]
[115.48521423 1.67302203]
[122.70174408 -11.47694778]
[129.91827393 -24.62691689]
[137.13479614 -37.77688599]
[144.35133362 -50.92685699]
[151.56785583 -64.07682800]
[158.78439331 -77.22679901]
[166.00091553 -90.37677002]
[173.21743774 -103.52673340]
[180.43397522 -116.67670441]
[173.01434326 -131.85540771]
[176.05889893 -148.30516052]
[188.17677307 -159.59660339]
[204.47048950 -161.43627930]
[211.44134521 -174.71810913]
[218.41218567 -187.99995422]
[225.38304138 -201.28179932]
[232.35388184 -214.56364441]
[224.65339661 -229.60179138]
[227.39164734 -246.10530090]
[239.29753113 -257.62005615]
[255.55424500 -259.76226807]
[262.27700806 -273.17138672]
[268.99975586 -286.58050537]
[275.72253418 -299.98962402]
[277.41629028 -316.85876465]
[294.09503174 -319.90103149]
[301.63555908 -304.71624756]
[289.13165283 -293.26687622]
[282.40887451 -279.85775757]
[275.68612671 -266.44863892]
[268.96337891 -253.03950500]
[276.18353271 -241.78306580]
[276.89428711 -228.32037354]
[270.80233765 -216.17248535]
[259.40768433 -208.56968689]
[245.63572693 -207.59278870]
[238.66487122 -194.31094360]
[231.69403076 -181.02911377]
[224.72317505 -167.74726868]
[217.75233459 -154.46542358]
[224.76202393 -143.07670593]
[225.22239685 -129.60313416]
[218.90570068 -117.57057953]
[207.37168884 -110.18090820]
[193.58393860 -109.46017456]
[186.36741638 -96.31021118]
[179.15087891 -83.16024017]
[171.93435669 -70.01026917]
[164.71781921 -56.86029816]
[157.50129700 -43.71032715]
[150.28477478 -30.56035805]
[143.06823730 -17.41038895]
[135.85171509 -4.26041889]
[128.63517761 8.88955116]
[121.78808594 22.23560905]
[115.31574249 35.76737595]
[108.84339905 49.29914474]
[102.37104797 62.83091354]
[114.53854370 54.05867767]
[122.61675262 41.41974640]
[133.51539612 31.11346054]
[146.58558655 23.75342751]
[161.04916382 19.77785492]
[176.04496765 19.42343903]
[190.68020630 22.71128082]
[204.08351135 29.44562721]
[215.45687866 39.22553253]
[224.12315369 51.46871567]
[229.56637573 65.44624329]
[231.46246338 80.32592010]
[229.69853210 95.22184753]
[224.37957764 109.24713898]
[215.82231140 121.56676483]
[204.53620911 131.44723511]
[191.19320679 138.30027771]
[176.58772278 141.71789551]
[161.58935547 141.49659729]
[147.09106445 137.64956665]
[133.95243835 130.40319824]
[124.02706909 119.15654755]
[127.34546661 133.78488159]
[130.66386414 148.41322327]
[133.98225403 163.04156494]
[137.30064392 177.66990662]
[140.61903381 192.29823303]
[155.56509399 195.21975708]
[168.02697754 203.97309875]
[175.84559631 217.04173279]
[177.66633606 232.16142273]
[173.17372131 246.71258545]
[163.14613342 258.17413330]
[149.32092285 264.56033325]
[134.09336853 264.76467896]
[120.10176086 258.75180054]
[109.77021790 247.56344604]
[104.88874054 233.13807678]
[106.30308533 217.97497559]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 156]
[2 155]
[3 154]
[4 153]
[5 152]
[6 151]
[7 28]
[8 27]
[9 26]
[10 25]
[11 24]
[12 23]
[13 22]
[14 21]
[30 55]
[31 54]
[34 51]
[35 50]
[36 49]
[64 129]
[65 128]
[66 127]
[67 126]
[71 125]
[72 124]
[73 123]
[74 122]
[75 121]
[76 120]
[77 119]
[78 118]
[79 117]
[80 116]
[84 111]
[85 110]
[86 109]
[87 108]
[88 107]
[92 102]
[93 101]
[94 100]
[95 99]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
