%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 04:12:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUAAAGAGACAAAAGAGGCCAGCCACCCACCUCCAACACCUCCUGUGAGUUUCUUGGUCUGAAAUACUUAAAAAAUAUAUAUAUUGUUGUGUCUGGUAAUGAAAGUAAUGCAUCUAAUAAAGAGUAUUCAAUUUUUUAACUUUGCUUGAGUUUUAAGAGGAAAUAAACUAAUAUAAAACUGAA\
) } def
/len { sequence length } bind def

/coor [
[89.42063141 152.60784912]
[74.44429779 153.45016479]
[61.58238983 145.73191833]
[55.27962112 132.12033081]
[57.71406174 117.31920624]
[68.04443359 106.44338226]
[82.70119476 103.25128937]
[67.91464233 100.72977448]
[53.12809753 98.20826721]
[38.22365952 103.51564026]
[26.97814560 93.74897766]
[12.19159794 91.22746277]
[-2.59494901 88.70594788]
[-17.38149643 86.18443298]
[-21.78958702 88.66201782]
[-26.41823578 89.43458557]
[-30.67537689 88.64116669]
[-34.08555984 86.60773468]
[-48.72541428 89.87493134]
[-63.36526871 93.14213562]
[-78.00512695 96.40933990]
[-92.64498138 99.67654419]
[-107.28483582 102.94374847]
[-121.92469025 106.21095276]
[-131.02044678 121.14149475]
[-147.76824951 124.81274414]
[-161.71533203 115.43264771]
[-176.29792786 118.94664764]
[-187.90147400 129.70155334]
[-202.08717346 125.16113281]
[-216.66975403 128.67512512]
[-231.25234985 132.18913269]
[-233.58303833 147.21032715]
[-241.48895264 160.19357300]
[-253.76449585 169.15904236]
[-268.53771973 172.73954773]
[-283.55584717 170.38909912]
[-296.52868652 162.46611023]
[-305.47799683 150.17878723]
[-309.03906250 135.40086365]
[-306.66885376 120.38584900]
[-298.72882080 107.42343140]
[-286.42971802 98.49029541]
[-271.64712524 94.94866943]
[-256.63525391 97.33863068]
[-243.68328857 105.29571533]
[-234.76634216 117.60654449]
[-220.18376160 114.09254456]
[-205.60116577 110.57855225]
[-195.04064941 100.07498932]
[-179.81192017 104.36405945]
[-165.22932434 100.85005951]
[-160.10235596 89.01490784]
[-148.92453003 82.19773102]
[-135.66668701 83.08309174]
[-125.19189453 91.57109833]
[-110.55204010 88.30389404]
[-95.91218567 85.03668976]
[-81.27233124 81.76948547]
[-66.63247681 78.50228119]
[-51.99261856 75.23507690]
[-37.35276031 71.96787262]
[-51.88410568 68.24765778]
[-65.25039673 61.44014740]
[-76.80477905 51.87478256]
[-85.98809052 40.01447296]
[-92.35589600 26.43319702]
[-95.60002899 11.78821278]
[-95.56350708 -3.21174264]
[-92.24807739 -17.84075356]
[-85.81420898 -31.39085579]
[-76.57324982 -43.20629883]
[-64.97241974 -52.71527863]
[-51.57312775 -59.45761490]
[-37.02383804 -63.10701370]
[-22.02864647 -63.48686218]
[-7.31324434 -60.57878494]
[6.41022587 -54.52350998]
[18.47762299 -45.61407852]
[28.30495071 -34.28166580]
[35.41662216 -21.07469177]
[39.46846771 -6.63230467]
[40.26440430 8.34656334]
[37.76590729 23.13701630]
[32.09389877 37.02328110]
[23.52286530 49.33333206]
[12.46759987 59.47143555]
[-0.53688115 66.94696045]
[-14.85998249 71.39788818]
[-0.07343560 73.91940308]
[14.71311092 76.44091797]
[29.49965858 78.96243286]
[43.34646606 73.47470093]
[55.64961243 83.42171478]
[70.43615723 85.94322968]
[85.22270203 88.46474457]
[108.22879791 78.26680756]
[120.82263947 70.11848450]
[133.41647339 61.97015762]
[146.01031494 53.82183456]
[158.60415649 45.67350769]
[167.27154541 25.02075768]
[188.90438843 24.64579964]
[200.91940308 15.66585636]
[212.93441772 6.68591309]
[224.94943237 -2.29403043]
[236.96444702 -11.27397346]
[248.97946167 -20.25391769]
[260.84109497 -29.43550682]
[272.54598999 -38.81612396]
[284.25085449 -48.19673920]
[295.95571899 -57.57735825]
[307.66058350 -66.95797729]
[312.41360474 -74.78460693]
[319.64328003 -76.39617157]
[331.50494385 -85.57776642]
[343.36657715 -94.75935364]
[346.81161499 -110.42814636]
[361.27288818 -117.37443542]
[375.65695190 -110.26961517]
[378.92956543 -94.56389618]
[368.58026123 -82.30536652]
[352.54815674 -82.89771271]
[340.68652344 -73.71612549]
[328.82489014 -64.53453827]
[317.04119873 -55.25310135]
[305.33633423 -45.87248611]
[293.63146973 -36.49186707]
[281.92660522 -27.11125183]
[270.22171021 -17.73063469]
[268.81671143 -13.14529896]
[264.50354004 -9.40268898]
[257.95941162 -8.23890018]
[245.94439697 0.74104285]
[233.92938232 9.72098637]
[221.91436768 18.70092964]
[209.89935303 27.68087196]
[197.88432312 36.66081619]
[198.44706726 44.56664658]
[195.79624939 52.13582611]
[190.29647827 58.10157776]
[182.79541016 61.43436050]
[174.49359131 61.51912308]
[166.75248718 58.26734543]
[154.15864563 66.41567230]
[141.56480408 74.56399536]
[128.97096252 82.71232605]
[116.37712860 90.86064911]
[113.85561371 105.64719391]
[128.42124939 111.82398987]
[130.09321594 126.62445831]
[139.27481079 138.48609924]
[148.45640564 150.34773254]
[157.63798523 162.20936584]
[166.81958008 174.07099915]
[176.00117493 185.93263245]
[185.18275452 197.79426575]
[204.03793335 199.45320129]
[215.51440430 214.10217285]
[212.70997620 232.17625427]
[222.28694153 243.72102356]
[237.76284790 242.59141541]
[250.92929077 250.80264282]
[256.72351074 265.19732666]
[252.91752625 280.24038696]
[240.97477722 290.14749146]
[225.48753357 291.10913086]
[212.41093445 282.75555420]
[206.77320862 268.29888916]
[210.74217224 253.29798889]
[201.16520691 241.75321960]
[189.82028198 243.18196106]
[179.08714294 238.90327454]
[171.68423462 229.87596130]
[169.54660034 218.27673340]
[173.32112122 206.97586060]
[164.13952637 195.11422729]
[154.95794678 183.25259399]
[145.77635193 171.39096069]
[136.59475708 159.52931213]
[127.41317749 147.66767883]
[118.23158264 135.80604553]
[104.32267761 130.47767639]
[101.99398041 114.82878876]
[106.07272339 129.26359558]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 96]
[8 95]
[9 94]
[11 92]
[12 91]
[13 90]
[14 89]
[18 62]
[19 61]
[20 60]
[21 59]
[22 58]
[23 57]
[24 56]
[27 52]
[28 51]
[30 49]
[31 48]
[32 47]
[97 148]
[98 147]
[99 146]
[100 145]
[101 144]
[103 138]
[104 137]
[105 136]
[106 135]
[107 134]
[108 133]
[109 130]
[110 129]
[111 128]
[112 127]
[113 126]
[115 125]
[116 124]
[117 123]
[149 184]
[151 182]
[152 181]
[153 180]
[154 179]
[155 178]
[156 177]
[157 176]
[160 171]
[161 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
