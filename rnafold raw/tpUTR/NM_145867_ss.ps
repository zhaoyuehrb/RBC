%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 01:41:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACCAAGGCCCCCGGGCCGACGGAGCCGGGAAAGAAGAGCCGGAGCCUCCAGCUGCCCCGGGGAGGGGCGCUCGCUUCCGCAUCCUAGUCUCUAUCAUUAAAGUUCUAGUGACCGAGA\
) } def
/len { sequence length } bind def

/coor [
[105.35250092 142.89167786]
[95.13804626 153.87643433]
[80.70793152 157.97178650]
[66.24597931 153.99032593]
[55.94524384 143.08644104]
[52.79228210 128.42155457]
[57.70125580 114.24756622]
[69.24887085 104.67402649]
[84.08462524 102.47636414]
[69.89398193 97.61573029]
[55.70334625 92.75509644]
[41.51270676 87.89446259]
[25.94994354 90.74243927]
[16.41661453 79.29844666]
[2.22597599 74.43781281]
[-11.96466255 69.57717896]
[-26.15530205 64.71654510]
[-41.71806335 67.56452179]
[-51.25139236 56.12052917]
[-65.31410217 62.81963730]
[-79.63618469 57.68811035]
[-85.93609619 44.24018478]
[-100.12673187 39.37955093]
[-114.31737518 34.51891708]
[-128.50801086 29.65828133]
[-142.87995911 25.36325836]
[-157.41067505 21.64058304]
[-171.94139099 17.91790581]
[-186.47210693 14.19522858]
[-197.15486145 25.23036957]
[-211.92835999 29.43027115]
[-226.81861877 25.66518021]
[-237.82022095 14.94788742]
[-241.97378540 0.16129220]
[-238.16204834 -14.71708679]
[-227.41032410 -25.68503952]
[-212.61077881 -29.79224396]
[-197.74441528 -25.93387985]
[-186.81022644 -15.14783001]
[-182.74942017 -0.33548602]
[-168.21870422 3.38719058]
[-153.68798828 7.10986710]
[-139.15728760 10.83254433]
[-135.86862183 9.25930309]
[-131.62921143 9.27888775]
[-127.23376465 11.33143234]
[-123.64737701 15.46764278]
[-109.45674133 20.32827759]
[-95.26609802 25.18891144]
[-81.07546234 30.04954529]
[-67.85343933 23.28835106]
[-53.39287186 28.01557541]
[-46.39075851 41.92988968]
[-31.84300613 38.73424911]
[-21.29466629 50.52590179]
[-7.10402822 55.38653946]
[7.08661079 60.24717331]
[21.27725029 65.10780334]
[35.82500458 61.91216660]
[46.37334061 73.70381927]
[60.56398010 78.56445312]
[74.75461578 83.42508698]
[88.94525909 88.28572083]
[103.61196136 85.14122772]
[114.56274414 74.89035797]
[125.51351929 64.63948059]
[136.46430969 54.38861084]
[147.27882385 43.99408340]
[157.95520020 33.45771790]
[168.63156128 22.92134857]
[166.17231750 7.60039282]
[173.21817017 -6.22478104]
[187.05987549 -13.23811245]
[202.37501526 -10.74283218]
[213.27458191 0.30157438]
[215.56748962 15.64830685]
[208.37207031 29.39623260]
[194.45509338 36.25899506]
[179.16793823 33.59772110]
[168.49156189 44.13409042]
[157.81518555 54.67045593]
[155.23222351 61.69655228]
[146.71517944 65.33939362]
[135.76438904 75.59026337]
[124.81361389 85.84114075]
[113.86283112 96.09201050]
[114.17609406 98.46021271]
[114.09175110 100.82366943]
[113.62006378 103.11676788]
[124.57083893 113.36763763]
[135.52162170 123.61851501]
[146.47239685 133.86938477]
[162.04541016 133.52407837]
[173.00503540 144.07592773]
[173.23825073 158.92453003]
[184.18904114 169.17539978]
[195.13981628 179.42628479]
[206.09059143 189.67715454]
[217.04138184 199.92802429]
[227.99215698 210.17889404]
[243.77758789 209.40702820]
[255.42909241 220.08494568]
[256.03402710 235.87765503]
[245.23350525 247.41560364]
[229.43528748 247.85354614]
[218.01217651 236.93164062]
[217.74128723 221.12968445]
[206.79051208 210.87879944]
[195.83972168 200.62792969]
[184.88894653 190.37705994]
[173.93815613 180.12619019]
[162.98738098 169.87530518]
[148.15571594 170.62188721]
[136.90403748 160.38204956]
[136.22152710 144.82017517]
[125.27075195 134.56929016]
[114.31996918 124.31842041]
[103.36918640 114.06755066]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 63]
[10 62]
[11 61]
[12 60]
[14 58]
[15 57]
[16 56]
[17 55]
[19 53]
[22 50]
[23 49]
[24 48]
[25 47]
[26 43]
[27 42]
[28 41]
[29 40]
[64 86]
[65 85]
[66 84]
[67 83]
[68 81]
[69 80]
[70 79]
[89 118]
[90 117]
[91 116]
[92 115]
[95 112]
[96 111]
[97 110]
[98 109]
[99 108]
[100 107]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
