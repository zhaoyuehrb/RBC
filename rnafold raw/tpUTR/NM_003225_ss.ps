%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 15:53:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACUUCUGCAGGGAUCUGCCUGCAUCCUGACGCGGUGCCGUCCCCAGCACGGUGAUUAGUCCCAGAGCUCGGCUGCCACCUCCACCGGACACCUCAGACACGCUUCUGCAGCUGUGCCUCGGCUCACAACACAGAUUGACUGCUCUGACUUUGACUACUCAAAAUUGGCCUAAAAAUUAAAAGAGAUCGAUAUUAA\
) } def
/len { sequence length } bind def

/coor [
[113.06417847 229.11706543]
[100.04414368 221.66867065]
[94.57943726 207.69952393]
[99.08842468 193.39451599]
[99.44236755 178.39869690]
[99.79631805 163.40286255]
[100.15026855 148.40704346]
[92.74447632 149.59205627]
[85.24447632 162.58244324]
[77.74447632 175.57281494]
[70.24447632 188.56320190]
[62.74447632 201.55357361]
[55.24447632 214.54396057]
[59.57650757 229.74295044]
[51.81951141 243.51263428]
[36.57557678 247.68373108]
[22.88866043 239.78158569]
[18.87896729 224.49441528]
[26.92537689 210.89179993]
[42.25409698 207.04396057]
[49.75409698 194.05357361]
[57.25409698 181.06320190]
[64.75409698 168.07281494]
[72.25409698 155.08244324]
[79.75409698 142.09205627]
[71.74466705 133.63334656]
[66.55281067 123.96349335]
[64.24974823 113.91943359]
[49.47763062 116.52415466]
[34.70551300 119.12887573]
[19.93339729 121.73360443]
[5.18241072 124.45543671]
[-9.54652023 127.29420471]
[-24.27544975 130.13296509]
[-36.36194229 140.34214783]
[-50.32350922 135.15332031]
[-65.05243683 137.99209595]
[-79.78137207 140.83085632]
[-94.51029968 143.66963196]
[-100.96820068 157.77902222]
[-114.50254822 165.36856079]
[-129.90910339 163.51991272]
[-141.26374817 152.94390869]
[-144.20036316 137.70724487]
[-137.58979797 123.66873932]
[-123.97390747 116.22646332]
[-108.58831024 118.24214172]
[-97.34906769 128.94070435]
[-82.62014008 126.10192871]
[-67.89120483 123.26316071]
[-53.16227722 120.42439270]
[-42.12929916 110.41826630]
[-27.11421967 115.40403748]
[-12.38528824 112.56526947]
[2.34364200 109.72650146]
[8.32303047 105.36901093]
[17.32867622 106.96148682]
[32.10079193 104.35676575]
[46.87290955 101.75203705]
[61.64502335 99.14731598]
[64.90309906 84.50681305]
[73.52549744 72.23433685]
[86.19434357 64.20565796]
[100.97328949 61.64789581]
[104.27794647 47.01644897]
[107.58260345 32.38500214]
[110.88726044 17.75355530]
[114.19191742 3.12210798]
[117.49657440 -11.50933838]
[120.56867981 -26.19137573]
[123.40744781 -40.92030716]
[126.24621582 -55.64923477]
[129.08497620 -70.37816620]
[131.80680847 -85.12915802]
[134.41152954 -99.90126801]
[137.01626587 -114.67338562]
[123.50780487 -121.41146088]
[112.45650482 -131.67259216]
[104.75215912 -144.61895752]
[101.01181793 -159.19696045]
[101.53031921 -174.22303772]
[106.25710297 -188.47975159]
[114.80097961 -200.81436157]
[126.46250916 -210.23214722]
[140.29124451 -215.97648621]
[155.16319275 -217.58973694]
[157.76791382 -232.36186218]
[160.37263489 -247.13397217]
[162.86009216 -261.92630005]
[157.40042114 -276.77563477]
[167.05145264 -288.12051392]
[169.42147827 -302.93209839]
[171.79150391 -317.74368286]
[173.92622375 -332.59100342]
[175.82510376 -347.47033691]
[177.60589600 -362.36425781]
[179.26846313 -377.27182007]
[180.93104553 -392.17941284]
[182.59361267 -407.08697510]
[172.53126526 -419.27404785]
[174.11682129 -434.99859619]
[186.40960693 -444.93154907]
[202.11651611 -443.17980957]
[211.91893005 -430.78271484]
[210.00123596 -415.09521484]
[197.50119019 -405.42440796]
[195.83862305 -390.51681519]
[194.17604065 -375.60925293]
[192.51347351 -360.70169067]
[194.89904785 -353.69812012]
[190.70443726 -345.57144165]
[188.80554199 -330.69210815]
[190.97430420 -326.42617798]
[190.47879028 -320.75128174]
[186.60308838 -315.37365723]
[184.23306274 -300.56207275]
[181.86303711 -285.75048828]
[187.49223328 -271.96060181]
[177.67166138 -259.55627441]
[179.72129822 -252.44712830]
[175.14474487 -244.52925110]
[172.54002380 -229.75714111]
[169.93530273 -214.98501587]
[183.35859680 -208.38255310]
[194.38867188 -198.25492859]
[202.12585449 -185.41664124]
[205.93579102 -170.90370178]
[205.50143433 -155.89013672]
[200.84944153 -141.59289551]
[192.34869385 -129.17332458]
[180.68107605 -119.64276886]
[166.78672791 -113.78021240]
[151.78837585 -112.06866455]
[149.18365479 -97.29654694]
[146.57893372 -82.52442932]
[148.51551819 -75.38366699]
[143.81391907 -67.53939819]
[140.97514343 -52.81046677]
[138.13638306 -38.08153534]
[135.29760742 -23.35260582]
[137.19143677 -18.95769691]
[136.33700562 -13.32565784]
[132.12802124 -8.20468044]
[128.82336426 6.42676592]
[125.51870728 21.05821228]
[122.21405029 35.68965912]
[118.90939331 50.32110596]
[115.60473633 64.95255280]
[131.88980103 75.11486053]
[141.89848328 92.66187286]
[142.41439819 113.86192322]
[132.36917114 133.67304993]
[143.54814148 143.67457581]
[154.72711182 153.67611694]
[165.90608215 163.67765808]
[177.16403198 173.59019470]
[188.50027466 183.41310120]
[197.04499817 186.67277527]
[199.93685913 193.48291016]
[211.11582947 203.48445129]
[226.20089722 200.36244202]
[240.06968689 206.64816284]
[247.49011230 219.74018860]
[245.79879761 234.51440430]
[256.97775269 244.51593018]
[268.15673828 254.51747131]
[279.33569336 264.51901245]
[294.47436523 261.11315918]
[308.71038818 267.28698730]
[316.56964111 280.66650391]
[315.03015137 296.10702515]
[304.68383789 307.67132568]
[289.50909424 310.91275024]
[275.34091187 304.58486938]
[267.62725830 291.12088013]
[269.33416748 275.69796753]
[258.15518188 265.69644165]
[246.97622681 255.69490051]
[235.79725647 245.69335938]
[221.30152893 249.01181030]
[207.46771240 243.08819580]
[199.68353271 230.00157166]
[201.11430359 214.66340637]
[189.93533325 204.66188049]
[178.67736816 194.74934387]
[167.34112549 184.92643738]
[160.21969604 182.91993713]
[155.90454102 174.85661316]
[144.72557068 164.85508728]
[133.54661560 154.85354614]
[122.36764526 144.85202026]
[114.96185303 146.03701782]
[119.97732544 160.17367554]
[124.99280548 174.31033325]
[130.00827026 188.44699097]
[138.75611877 200.63203430]
[137.92227173 215.60882568]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 25]
[9 24]
[10 23]
[11 22]
[12 21]
[13 20]
[28 60]
[29 59]
[30 58]
[31 57]
[32 55]
[33 54]
[34 53]
[36 51]
[37 50]
[38 49]
[39 48]
[64 148]
[65 147]
[66 146]
[67 145]
[68 144]
[69 143]
[70 140]
[71 139]
[72 138]
[73 137]
[74 135]
[75 134]
[76 133]
[86 123]
[87 122]
[88 121]
[89 119]
[91 117]
[92 116]
[93 115]
[94 112]
[95 111]
[96 109]
[97 108]
[98 107]
[99 106]
[152 191]
[153 190]
[154 189]
[155 188]
[156 186]
[157 185]
[159 184]
[160 183]
[164 179]
[165 178]
[166 177]
[167 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
