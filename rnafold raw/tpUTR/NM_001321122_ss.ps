%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 04:51:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCGAAGAAGAUGGCCCAGCUCCCCAAGAAAGCCUCAGCCAUUCACUGCCCCCAGCUCUUCUCCCCAGGUGUGUUGGGGCCUUGGCCUCCCCUGCUGAAGGUGGGGAUUGCCCAUCCAUCUGCUUACAAUUCCCUGCUGUCGUCUUAGCAAGAAGUAAAAUGAGAAAUUUUGUUGAUAUUCUCUCCUUA\
) } def
/len { sequence length } bind def

/coor [
[56.70005417 126.01053619]
[53.01193619 116.85225677]
[51.21194839 107.26289368]
[51.32533264 97.62289429]
[53.30231094 88.30583191]
[57.02176666 79.66392517]
[44.64475250 71.18987274]
[32.26774216 62.71582031]
[16.50966263 61.30390549]
[10.37904167 47.72949219]
[-1.99797070 39.25543976]
[-14.37498283 30.78138542]
[-26.75199509 22.30733299]
[-39.12900925 13.83328056]
[-51.50601959 5.35922813]
[-65.34366608 11.87588215]
[-80.48527527 10.59971714]
[-92.87277985 1.97324622]
[-99.23658752 -11.60460091]
[-97.95827484 -26.44479942]
[-110.33528137 -34.91885376]
[-122.84999847 -43.18819046]
[-135.49902344 -51.25057220]
[-148.14805603 -59.31295776]
[-160.79708862 -67.37534332]
[-173.44612122 -75.43772125]
[-171.38084412 -60.58058548]
[-180.30407715 -48.52339172]
[-195.11621094 -46.15681076]
[-207.35212708 -54.83333969]
[-210.01902771 -69.59435272]
[-201.59278870 -82.00395966]
[-186.88914490 -84.97012329]
[-198.68225098 -94.23957062]
[-210.47535706 -103.50901794]
[-222.26846313 -112.77846527]
[-234.13740540 -121.95060730]
[-246.08137512 -131.02484131]
[-258.02532959 -140.09906006]
[-269.96929932 -149.17329407]
[-281.84225464 -141.13697815]
[-295.59677124 -137.16865540]
[-309.88290405 -137.64399719]
[-323.30285645 -142.50323486]
[-334.54757690 -151.25825500]
[-342.52465820 -163.04171753]
[-346.46429443 -176.69281006]
[-345.99362183 -190.87174988]
[-341.17196655 -204.19116211]
[-352.96505737 -213.46061707]
[-364.75817871 -222.73005676]
[-376.92236328 -231.50686646]
[-389.43707275 -239.77619934]
[-401.95178223 -248.04554749]
[-414.46652222 -256.31488037]
[-426.98123169 -264.58422852]
[-439.49594116 -272.85354614]
[-455.27511597 -274.00610352]
[-461.62817383 -287.47784424]
[-477.40731812 -288.63040161]
[-483.76037598 -302.10214233]
[-496.27511597 -310.37145996]
[-508.78982544 -318.64080811]
[-525.18286133 -319.08859253]
[-532.75256348 -333.63616943]
[-523.71191406 -347.31820679]
[-507.36111450 -346.05981445]
[-500.52047729 -331.15551758]
[-488.00576782 -322.88619995]
[-475.49105835 -314.61685181]
[-460.60702515 -314.05578613]
[-453.35882568 -299.99255371]
[-438.47479248 -299.43148804]
[-431.22659302 -285.36825562]
[-418.71188354 -277.09893799]
[-406.19717407 -268.82958984]
[-393.68246460 -260.56027222]
[-381.16775513 -252.29092407]
[-368.65301514 -244.02157593]
[-368.95339966 -259.01858521]
[-357.52420044 -268.73318481]
[-342.77154541 -266.02038574]
[-335.54592896 -252.87542725]
[-341.16168213 -238.96632385]
[-355.48873901 -234.52316284]
[-343.69561768 -225.25372314]
[-331.90252686 -215.98426819]
[-318.63931274 -224.45367432]
[-303.25228882 -227.87826538]
[-287.59582520 -225.82652283]
[-273.56320190 -218.52801514]
[-262.85769653 -206.84797668]
[-256.78579712 -192.18461609]
[-256.09777832 -176.30189514]
[-260.89508057 -161.11726379]
[-248.95111084 -152.04302979]
[-237.00714111 -142.96881104]
[-225.06317139 -133.89457703]
[-217.82281494 -132.34893799]
[-212.99902344 -124.57157135]
[-201.20591736 -115.30212402]
[-189.41281128 -106.03267670]
[-177.61970520 -96.76322937]
[-165.38374329 -88.08675385]
[-152.73471069 -80.02436829]
[-140.08567810 -71.96199036]
[-127.43664551 -63.89960480]
[-114.78761292 -55.83721924]
[-109.99842834 -55.98161697]
[-105.07095337 -53.10738754]
[-101.86122894 -47.29586411]
[-89.48422241 -38.82181168]
[-76.11109924 -45.38117218]
[-61.15076447 -44.35922241]
[-48.62785721 -35.93051147]
[-41.96148300 -22.27561188]
[-43.03196716 -7.01778412]
[-30.65495491 1.45626867]
[-18.27794266 9.93032169]
[-5.90093040 18.40437317]
[6.47608185 26.87842751]
[18.85309410 35.35247803]
[33.72588730 36.15827179]
[40.74179459 50.33880997]
[53.11880493 58.81286240]
[65.49581909 67.28691864]
[83.45857239 53.78246689]
[106.29428864 49.76245499]
[129.15563965 56.73475266]
[146.89230347 73.80262756]
[155.20906067 97.72761536]
[170.20855713 97.60425568]
[185.20803833 97.48089600]
[194.80271912 88.84420013]
[207.30911255 89.05974579]
[216.02247620 97.46582031]
[231.02197266 97.58917999]
[246.02146912 97.71253967]
[261.02096558 97.83589935]
[276.02044678 97.95925903]
[287.11010742 86.69894409]
[302.91436768 86.66181946]
[314.05682373 97.86992645]
[313.92684937 113.67367554]
[302.60156250 124.69699860]
[286.80004883 124.39994812]
[275.89709473 112.95875549]
[260.89761353 112.83539581]
[245.89810181 112.71203613]
[230.89862061 112.58867645]
[215.89912415 112.46531677]
[201.12829590 121.92761993]
[185.33140564 112.48038483]
[170.33190918 112.60374451]
[155.33241272 112.72710419]
[151.77995300 119.33240509]
[165.00239563 126.41529083]
[179.75802612 129.11184692]
[181.76736450 143.97665405]
[168.25723267 150.49403381]
[157.87376404 139.66996765]
[144.67503357 132.54301453]
[141.12257385 139.14831543]
[149.28871155 151.73060608]
[157.45483398 164.31291199]
[165.62097168 176.89520264]
[173.78710938 189.47750854]
[182.05645752 201.99221802]
[190.42843628 214.43850708]
[198.80039978 226.88478088]
[214.20524597 231.36479187]
[220.17390442 246.25622559]
[212.12771606 260.13565063]
[196.23904419 262.35595703]
[184.69631958 251.21392822]
[186.35412598 235.25675964]
[177.98214722 222.81048584]
[169.61016846 210.36419678]
[163.25738525 206.56236267]
[161.20481873 197.64364624]
[153.03868103 185.06134033]
[144.87254333 172.47904968]
[136.70640564 159.89674377]
[128.54026794 147.31445312]
[118.54814911 151.41970825]
[108.05948639 153.46574402]
[97.48943329 153.41780090]
[87.24748230 151.32315063]
[77.72154999 147.30743408]
[69.26333618 141.56817627]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 126]
[7 125]
[8 124]
[10 122]
[11 121]
[12 120]
[13 119]
[14 118]
[15 117]
[20 112]
[21 111]
[22 108]
[23 107]
[24 106]
[25 105]
[26 104]
[33 103]
[34 102]
[35 101]
[36 100]
[37 98]
[38 97]
[39 96]
[40 95]
[49 87]
[50 86]
[51 85]
[52 79]
[53 78]
[54 77]
[55 76]
[56 75]
[57 74]
[59 72]
[61 70]
[62 69]
[63 68]
[131 155]
[132 154]
[133 153]
[136 151]
[137 150]
[138 149]
[139 148]
[140 147]
[163 184]
[164 183]
[165 182]
[166 181]
[167 180]
[168 178]
[169 177]
[170 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
