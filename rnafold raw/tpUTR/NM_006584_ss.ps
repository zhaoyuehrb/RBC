%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 11:18:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUUGAAUUCAAAAUCAACCCUUCUAGAAGAUGAAAUUUAGUACACUUUACAUCUGACUACUAUUGUGUAGCCUGAGCCAUUCUGAAUUUCUACACAAUAAAUGCAGUUUAUGUCUUUUGGGUCUUAAUAGUCUCAAAAAUAUUUCAUCAAGGUAUAAAGAACACAAUAAAUACUUUUACAGUAAAGG\
) } def
/len { sequence length } bind def

/coor [
[72.63604736 345.09140015]
[68.00079346 359.35723877]
[63.36553574 373.62310791]
[58.73028183 387.88894653]
[54.09502411 402.15478516]
[63.32433701 414.62875366]
[63.42533493 430.14547729]
[54.35918808 442.73852539]
[39.61201096 447.56558228]
[24.85439491 442.77053833]
[15.76094627 430.19720459]
[15.82827950 414.68026733]
[25.03050423 402.18630981]
[39.82917786 397.51953125]
[44.46443176 383.25369263]
[49.09968948 368.98785400]
[53.73494339 354.72198486]
[58.37019730 340.45614624]
[53.15771103 329.52777100]
[56.91637039 317.59698486]
[68.14900970 311.23348999]
[73.01950073 297.04623413]
[77.88999939 282.85897827]
[82.76049042 268.67172241]
[70.34185028 260.25878906]
[65.18210602 246.17414856]
[69.22728729 231.72990417]
[80.95172119 222.37374878]
[95.93349457 221.63442993]
[108.52214050 229.79077148]
[113.96981812 243.76699829]
[111.74585724 228.93278503]
[109.52190399 214.09855652]
[107.29795074 199.26434326]
[105.07399750 184.43013000]
[102.85004425 169.59590149]
[100.62609100 154.76168823]
[98.40213013 139.92747498]
[90.75276184 138.87472534]
[83.44866943 136.37045288]
[76.76258850 132.50813293]
[70.94416046 127.43199921]
[66.21065521 121.33158112]
[62.73880768 114.43466949]
[60.65824890 106.99877930]
[60.04667282 99.30155945]
[60.92691040 91.63042450]
[63.26609421 84.27179718]
[66.97688293 77.50044250]
[71.92072296 71.56919861]
[77.91300964 66.69953156]
[72.11552429 52.86518478]
[66.31803894 39.03084183]
[60.52054977 25.19649315]
[54.38175964 11.51017666]
[47.90544510 -2.01969147]
[41.42913055 -15.54955959]
[34.88944244 -21.95321846]
[34.95965958 -29.35709381]
[19.88361931 -32.52240372]
[9.68144512 -43.82589722]
[8.11002159 -58.79234695]
[15.56355476 -71.66024780]
[9.31182671 -85.29534912]
[3.06009889 -98.93044281]
[-3.19162893 -112.56554413]
[-9.44335651 -126.20063782]
[-15.69508457 -139.83573914]
[-21.94681358 -153.47084045]
[-28.19853973 -167.10592651]
[-34.45026779 -180.74102783]
[-40.70199585 -194.37612915]
[-51.12174606 -197.57464600]
[-57.91345215 -205.81669617]
[-59.01450729 -216.21859741]
[-54.30089188 -225.30946350]
[-60.09837723 -239.14381409]
[-74.44925690 -245.20104980]
[-80.13166046 -259.31362915]
[-74.26856995 -272.95767212]
[-80.06606293 -286.79202271]
[-91.76435089 -299.06338501]
[-83.21096039 -313.70153809]
[-66.77704620 -309.53466797]
[-66.23171234 -292.58950806]
[-60.43422699 -278.75515747]
[-46.59559250 -273.36740112]
[-40.51903915 -259.42001343]
[-46.26403046 -244.94129944]
[-40.46654510 -231.10696411]
[-24.26070404 -220.57815552]
[-27.06689835 -200.62785339]
[-20.81517029 -186.99276733]
[-14.56344223 -173.35766602]
[-8.31171513 -159.72256470]
[-2.05998683 -146.08746338]
[4.19174099 -132.45236206]
[10.44346905 -118.81726837]
[16.69519615 -105.18217468]
[22.94692421 -91.54707336]
[29.19865227 -77.91197205]
[43.81291962 -75.16222382]
[54.12773514 -64.20463562]
[56.03476715 -49.09779739]
[48.59475708 -35.60882187]
[54.95899582 -22.02587509]
[61.43531418 -8.49600697]
[67.91162872 5.03386164]
[71.11608124 6.54504633]
[73.74173737 9.69300270]
[75.02297974 14.18586349]
[74.35489655 19.39900589]
[80.15238190 33.23335266]
[85.94986725 47.06769943]
[91.74736023 60.90204620]
[113.90809631 62.53907394]
[131.76791382 75.76045227]
[145.18885803 69.06132507]
[158.60980225 62.36219025]
[172.03073120 55.66305923]
[185.45167542 48.96392822]
[198.87261963 42.26479340]
[212.29356384 35.56566238]
[221.18542480 22.47959328]
[236.02844238 23.71827126]
[249.44938660 17.01914024]
[258.03811646 3.04897785]
[274.42132568 3.77238631]
[281.74533081 18.44518471]
[272.47583008 31.97325516]
[256.14849854 30.44008064]
[242.72756958 37.13921356]
[234.79565430 49.74611282]
[218.99269104 48.98660278]
[205.57174683 55.68573380]
[192.15080261 62.38486481]
[178.72987366 69.08399963]
[165.30892944 75.78312683]
[151.88798523 82.48226166]
[138.46705627 89.18139648]
[138.92272949 109.04306030]
[129.75732422 126.66942596]
[113.23635101 137.70352173]
[115.46030426 152.53773499]
[117.68425751 167.37194824]
[119.90821838 182.20617676]
[122.13217163 197.04039001]
[124.35612488 211.87460327]
[126.58007812 226.70883179]
[128.80403137 241.54304504]
[135.94323730 254.73515320]
[147.14556885 264.71051025]
[158.34788513 274.68588257]
[169.55021667 284.66125488]
[180.75253296 294.63662720]
[191.95484924 304.61199951]
[203.15718079 314.58737183]
[216.82575989 307.93618774]
[231.99949646 307.02703857]
[246.36447144 311.99853516]
[257.73013306 322.09259033]
[264.36331177 335.76992798]
[265.25250244 350.94482422]
[260.26211548 365.30325317]
[250.15312195 376.65563965]
[236.46707153 383.27084351]
[221.29101562 384.14004517]
[206.93916321 379.13076782]
[195.60009766 369.00683594]
[189.00291443 355.31213379]
[188.15364075 340.13491821]
[193.18180847 325.78967285]
[181.97949219 315.81430054]
[170.77716064 305.83895874]
[159.57484436 295.86358643]
[148.37251282 285.88821411]
[137.17019653 275.91284180]
[125.96787262 265.93746948]
[118.71284485 267.83865356]
[123.76136017 281.96353149]
[130.88934326 295.16171265]
[121.09735870 306.52468872]
[106.99109650 301.42437744]
[106.73025513 286.42654419]
[104.20278168 271.64102173]
[96.94774628 273.54220581]
[92.07725525 287.72946167]
[87.20676422 301.91671753]
[82.33627319 316.10400391]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 18]
[2 17]
[3 16]
[4 15]
[5 14]
[21 189]
[22 188]
[23 187]
[24 186]
[31 150]
[32 149]
[33 148]
[34 147]
[35 146]
[36 145]
[37 144]
[38 143]
[51 115]
[52 114]
[53 113]
[54 112]
[55 108]
[56 107]
[57 106]
[59 105]
[63 101]
[64 100]
[65 99]
[66 98]
[67 97]
[68 96]
[69 95]
[70 94]
[71 93]
[72 92]
[76 90]
[77 89]
[80 86]
[81 85]
[117 140]
[118 139]
[119 138]
[120 137]
[121 136]
[122 135]
[123 134]
[125 132]
[126 131]
[151 178]
[152 177]
[153 176]
[154 175]
[155 174]
[156 173]
[157 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
