%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 01:03:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACCUGAAGCGCGGAUUGUAGAUGAAGAAACUCAGCAGCGCCGGCGGGAACUGCUUCUCCUGGGCCGCCCAGGACCCGCUCCCGGCCCCGGCCGUCGCUGCGCUGCAGCCAUCCUGGCCCGGCCCCCACCUCAGGAAGCCUCCCACGGCCCGCCCAGAGACCGAGAAAAUCUCUUAAUUUCAGUGGAACUCAGUUUGUUUCUCUUUUUAAACAUUGCCAGUUAUAAAUGUAUUUUAUUUUA\
) } def
/len { sequence length } bind def

/coor [
[153.72967529 344.96563721]
[156.51127625 333.96804810]
[161.09353638 323.58657837]
[167.34870911 314.11386108]
[175.10189819 305.81707764]
[184.13587952 298.93060303]
[177.55253601 285.45248413]
[170.96919250 271.97436523]
[164.38584900 258.49624634]
[157.80250549 245.01814270]
[151.21916199 231.54002380]
[147.09286499 229.17303467]
[144.39898682 224.19876099]
[144.64495850 217.62547302]
[138.41374207 203.98098755]
[132.18251038 190.33651733]
[125.95128632 176.69203186]
[119.72006226 163.04754639]
[114.09427643 158.27883911]
[113.49779510 149.18525696]
[107.44422150 135.46104431]
[58.03007507 129.50804138]
[43.48738861 65.18492126]
[33.37349319 76.26233673]
[23.25959778 87.33975220]
[24.22772217 103.11435699]
[13.69551754 114.89775085]
[-2.08844495 115.69904327]
[-13.75982094 105.04284668]
[-14.39419079 89.25128937]
[-3.61519337 77.69322968]
[12.18218327 77.22585297]
[22.29607964 66.14843750]
[32.40997696 55.07102585]
[27.71919823 40.82334137]
[13.00268936 37.92086411]
[-1.71381879 35.01838303]
[-16.43032646 32.11590576]
[-31.14683533 29.21342850]
[-45.93373489 26.69397926]
[-60.78105545 24.55925751]
[-75.62837982 22.42453384]
[-90.47570038 20.28981209]
[-105.32302094 18.15508842]
[-120.20909119 16.30986977]
[-135.12828064 14.75485420]
[-150.04745483 13.19983864]
[-164.96662903 11.64482307]
[-179.88581848 10.08980751]
[-184.61489868 12.19984531]
[-189.22262573 12.28983688]
[-192.96414185 10.74074078]
[-195.35159302 8.17273045]
[-210.19891357 6.03800774]
[-221.02894592 16.99321938]
[-236.05746460 19.44211578]
[-249.48742676 12.65241241]
[-256.26300049 -0.58501005]
[-271.11035156 -2.71973252]
[-285.95767212 -4.85445499]
[-300.80499268 -6.98917770]
[-315.65231323 -9.12390041]
[-330.49963379 -11.25862312]
[-345.34695435 -13.39334583]
[-361.88534546 -9.66269207]
[-370.04849243 -24.52201462]
[-358.02966309 -36.47960663]
[-343.21221924 -28.24066734]
[-328.36489868 -26.10594368]
[-313.51757812 -23.97122192]
[-298.67025757 -21.83650017]
[-283.82293701 -19.70177650]
[-268.97561646 -17.56705475]
[-254.12829590 -15.43233204]
[-243.89775085 -26.22464180]
[-229.09890747 -28.95565605]
[-215.36909485 -22.37193489]
[-208.06419373 -8.80931377]
[-193.21687317 -6.67459154]
[-178.33079529 -4.82937241]
[-163.41162109 -3.27435660]
[-148.49243164 -1.71934104]
[-133.57325745 -0.16432533]
[-118.65407562 1.39069033]
[-115.71188354 -0.51667833]
[-111.70537567 -1.10536110]
[-107.25907135 0.10693330]
[-103.18830109 3.30776763]
[-88.34098053 5.44249010]
[-73.49365234 7.57721281]
[-58.64633179 9.71193504]
[-43.79901123 11.84665775]
[-41.48658371 10.29725933]
[-38.42734909 9.56075191]
[-34.92437744 9.92381191]
[-31.37806702 11.55947685]
[-28.24435806 14.49692059]
[-13.52784920 17.39939880]
[1.18865907 20.30187607]
[15.90516758 23.20435333]
[30.62167549 26.10683250]
[41.08969498 15.36343479]
[37.80614471 0.72723657]
[34.52259445 -13.90896130]
[31.23904610 -28.54516029]
[20.79042435 -36.08423996]
[18.34831047 -48.32704926]
[24.68547821 -58.61544037]
[21.59220314 -73.29302979]
[18.49892807 -87.97061920]
[15.40565395 -102.64820862]
[6.22295523 -116.90003204]
[17.37578583 -129.66915894]
[32.73330307 -122.48703766]
[30.08324432 -105.74148560]
[33.17651749 -91.06389618]
[36.26979446 -76.38630676]
[39.36306763 -61.70871353]
[51.76914978 -49.28428650]
[45.87524414 -31.82871056]
[49.15879440 -17.19251251]
[52.44234467 -2.55631328]
[55.72589493 12.07988548]
[63.22526169 12.17724609]
[78.22399902 12.37196732]
[85.72336578 12.46932793]
[89.38577271 -2.07669449]
[81.06314087 -15.51206875]
[84.75967407 -30.87797928]
[98.28228760 -39.05810165]
[113.60825348 -35.19931793]
[121.64495087 -21.59097481]
[117.62435150 -6.30665874]
[103.93179321 1.58571398]
[100.26938629 16.13173676]
[107.13150024 19.15852356]
[120.85572052 25.21209908]
[127.71782684 28.23888779]
[135.99057007 15.72642136]
[144.26330566 3.21395612]
[140.85943604 -12.21942520]
[149.43588257 -25.49421692]
[164.90438843 -28.73472023]
[178.08776855 -20.01840401]
[181.16455078 -4.51650143]
[172.30934143 8.57398224]
[156.77577209 11.48669529]
[148.50303650 23.99916077]
[140.23030090 36.51162720]
[149.52816772 48.28233337]
[163.61614990 43.13170624]
[177.70411682 37.98107529]
[191.79209900 32.83044815]
[195.78527832 22.74120522]
[204.48571777 16.63143158]
[214.89300537 16.31396866]
[223.57586670 21.65263367]
[237.79280090 16.86947441]
[252.00973511 12.08631611]
[266.22668457 7.30315638]
[273.30459595 -6.57275820]
[287.79071045 -11.22103596]
[300.97567749 -4.38782215]
[315.19259644 -9.17098141]
[329.40954590 -13.95414066]
[343.62649536 -18.73729897]
[352.02020264 -32.40936661]
[367.95980835 -34.22821426]
[379.21783447 -22.79858398]
[377.15808105 -6.88830614]
[363.36059570 1.29761446]
[348.40963745 -4.52035952]
[334.19271851 0.26279953]
[319.97576904 5.04595900]
[305.75881958 9.82911777]
[299.38565063 23.24248123]
[285.03579712 28.29581070]
[271.00982666 21.52009583]
[256.79290771 26.30325508]
[242.57595825 31.08641434]
[228.35902405 35.86957550]
[216.64073181 51.26540375]
[196.94271851 46.91842270]
[182.85475159 52.06904984]
[168.76676941 57.21968079]
[154.67880249 62.37030792]
[156.11941528 95.14983368]
[142.06163025 119.30746460]
[121.16844177 129.40747070]
[127.22201538 143.13168335]
[133.36454773 156.81632996]
[139.59576416 170.46080017]
[145.82699585 184.10528564]
[152.05821228 197.74977112]
[158.28944397 211.39424133]
[164.69726562 224.95668030]
[171.28060913 238.43479919]
[177.86395264 251.91291809]
[184.44729614 265.39102173]
[191.03065491 278.86914062]
[197.61399841 292.34725952]
[216.23237610 288.56387329]
[235.15727234 290.10083008]
[252.89927673 296.83071899]
[268.06390381 308.21759033]
[279.46118164 323.35980225]
[286.19897461 341.06130981]
[287.75289917 359.92620850]
[284.00708008 378.46871948]
[275.26281738 395.23034668]
[262.21426392 408.89443970]
[270.15936279 421.61746216]
[278.10449219 434.34048462]
[286.04962158 447.06347656]
[293.99472046 459.78649902]
[309.34143066 459.17471313]
[322.93048096 466.33245850]
[331.10650635 479.33432007]
[331.67016602 494.68289185]
[324.46984863 508.24942017]
[311.44241333 516.38464355]
[296.09219360 516.90020752]
[282.54827881 509.65740967]
[274.45394897 496.60452271]
[273.98651123 481.25274658]
[281.27172852 467.73162842]
[273.32659912 455.00860596]
[265.38146973 442.28558350]
[257.43637085 429.56256104]
[249.49124146 416.83956909]
[238.94033813 420.86700439]
[227.86088562 423.07495117]
[216.56437683 423.40005493]
[205.36859131 421.83184814]
[194.58872986 418.41317749]
[184.52850342 413.23901367]
[175.47154236 406.45373535]
[167.67347717 398.24728394]
[161.35464478 388.84957886]
[156.69392395 378.52441406]
[153.82360840 367.56167603]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 201]
[7 200]
[8 199]
[9 198]
[10 197]
[11 196]
[14 195]
[15 194]
[16 193]
[17 192]
[18 191]
[20 190]
[21 189]
[23 34]
[24 33]
[25 32]
[35 101]
[36 100]
[37 99]
[38 98]
[39 97]
[40 92]
[41 91]
[42 90]
[43 89]
[44 88]
[45 84]
[46 83]
[47 82]
[48 81]
[49 80]
[53 79]
[54 78]
[58 74]
[59 73]
[60 72]
[61 71]
[62 70]
[63 69]
[64 68]
[102 123]
[103 122]
[104 121]
[105 120]
[108 118]
[109 117]
[110 116]
[111 115]
[126 135]
[127 134]
[138 149]
[139 148]
[140 147]
[150 186]
[151 185]
[152 184]
[153 183]
[157 181]
[158 180]
[159 179]
[160 178]
[163 175]
[164 174]
[165 173]
[166 172]
[211 230]
[212 229]
[213 228]
[214 227]
[215 226]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
