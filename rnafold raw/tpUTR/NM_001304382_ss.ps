%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 19:56:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGUGGCCUGCAUGCUGCCUGAUCUUGCCUAGAACCGGCUGCACCUGCUGUUCUCUUGUUUAUGCAAACUGGCUGCACCUGCUAUUCCUUUGCUUAUGCCCCUACCCCUGGCUAUCCUAAUUCCCUGUUCUCCUGCCUCACUAUUACUGUAUUCUCUACUUCUAAAUAAAAAUAAAACAAAAUACAAACCGUU\
) } def
/len { sequence length } bind def

/coor [
[5.38847303 132.56364441]
[-9.12094975 136.36846924]
[-16.63936043 141.57847595]
[-23.89344215 140.11599731]
[-38.46198654 143.68777466]
[-53.03052902 147.25955200]
[-67.59906769 150.83132935]
[-82.16761017 154.40310669]
[-96.73615265 157.97486877]
[-111.30469513 161.54664612]
[-122.15441895 186.35638428]
[-155.21640015 188.75517273]
[-167.78771973 196.93820190]
[-180.35903931 205.12121582]
[-192.79759216 213.50468445]
[-205.10017395 222.08642578]
[-217.40275574 230.66818237]
[-224.29464722 244.90940857]
[-239.15983582 245.84497070]
[-251.46241760 254.42672729]
[-263.76501465 263.00848389]
[-270.65689087 277.24969482]
[-285.52206421 278.18527222]
[-292.41397095 292.42648315]
[-307.27914429 293.36206055]
[-319.58172607 301.94381714]
[-331.88430786 310.52557373]
[-336.10253906 326.00411987]
[-350.89068604 332.22433472]
[-364.90451050 324.41458130]
[-367.39382935 308.56582642]
[-356.44903564 296.83590698]
[-340.46606445 298.22299194]
[-328.16348267 289.64123535]
[-315.86090088 281.05947876]
[-309.84896851 267.43206787]
[-294.10382080 265.88269043]
[-288.09191895 252.25527954]
[-272.34674072 250.70588684]
[-260.04415894 242.12414551]
[-247.74159241 233.54238892]
[-241.72967529 219.91499329]
[-225.98451233 218.36560059]
[-213.68193054 209.78384399]
[-201.37934875 201.20210266]
[-199.67346191 196.72915649]
[-195.13267517 193.28581238]
[-188.54206848 192.54989624]
[-175.97074890 184.36688232]
[-163.39942932 176.18385315]
[-163.81994629 168.69564819]
[-178.77548218 169.84991455]
[-192.85556030 175.02207947]
[-202.26797485 163.34277344]
[-194.22190857 150.68336487]
[-179.65173340 154.24671936]
[-164.66101074 153.71925354]
[-165.08154297 146.23104858]
[-178.49002075 139.50701904]
[-191.89849854 132.78298950]
[-205.30699158 126.05895996]
[-221.63713074 127.56182861]
[-230.88148499 114.01657867]
[-223.53025818 99.35739899]
[-207.14576721 98.66439819]
[-198.58296204 112.65047455]
[-185.17446899 119.37450409]
[-171.76599121 126.09853363]
[-158.35751343 132.82255554]
[-144.07998657 128.28694153]
[-130.53353882 130.25619507]
[-120.29907990 137.26303101]
[-114.87647247 146.97810364]
[-100.30792999 143.40632629]
[-85.73938751 139.83456421]
[-71.17084503 136.26278687]
[-56.60230255 132.69100952]
[-42.03376007 129.11923218]
[-27.46521759 125.54745483]
[-12.92576885 121.85903931]
[1.58365417 118.05422211]
[0.08531038 105.36534119]
[0.21618973 92.58897400]
[1.97415805 79.93344879]
[5.33054972 67.60513306]
[10.23063469 55.80505371]
[16.59451294 44.72562408]
[24.31841087 34.54750443]
[33.27638626 25.43666267]
[43.32236481 17.54166222]
[54.29253387 10.99123764]
[66.00801849 5.89220333]
[78.27777863 2.32770419]
[90.90174866 0.35586342]
[90.66133118 -14.64221001]
[81.77557373 -28.42536354]
[89.50891113 -42.88660431]
[105.90595245 -43.14944839]
[114.09882355 -28.94350243]
[105.65940857 -14.88262749]
[105.89982605 0.11544571]
[112.66899872 0.74664468]
[119.37969208 1.83605671]
[126.00090790 3.37865233]
[132.50209045 5.36731005]
[138.85322571 7.79284906]
[145.02499390 10.64407158]
[150.98889160 13.90781498]
[156.71740723 17.56901169]
[162.18406677 21.61075974]
[167.36366272 26.01439857]
[172.23225403 30.75959969]
[183.80831909 21.22048759]
[195.38439941 11.68137550]
[189.12002563 -2.04524589]
[186.62278748 -16.92564201]
[188.06292725 -31.94524193]
[193.34226990 -46.07998657]
[202.10084534 -58.36614227]
[213.74150085 -67.96601868]
[227.47053528 -74.22509003]
[242.35189819 -76.71658325]
[257.37094116 -75.27064514]
[271.50363159 -69.98584747]
[283.78640747 -61.22252274]
[293.38180542 -49.57816696]
[299.63555908 -35.84671021]
[302.12130737 -20.96438980]
[300.66958618 -5.94590664]
[295.37933350 8.18475628]
[286.61126709 20.46414566]
[274.96319580 30.05503273]
[261.22933960 36.30349350]
[246.34605408 38.78350067]
[231.32812500 37.32596207]
[217.19950867 32.03025055]
[204.92350769 23.25744247]
[193.34744263 32.79655457]
[181.77136230 42.33566666]
[187.75831604 51.93535233]
[192.62329102 62.14952850]
[196.30410767 72.84761810]
[198.75369263 83.89283752]
[199.94073486 95.14398956]
[199.85006714 106.45722198]
[198.48284912 117.68789673]
[195.85653687 128.69244385]
[192.00473022 139.33015442]
[186.97666931 149.46505737]
[180.83662415 158.96754456]
[192.25831604 168.69096375]
[203.68000793 178.41439819]
[215.10169983 188.13781738]
[226.52339172 197.86125183]
[237.94508362 207.58467102]
[249.94088745 198.47892761]
[263.61389160 192.16523743]
[278.32461548 188.93887329]
[293.38494873 188.95077515]
[308.09051514 192.20036316]
[321.75354004 198.53564453]
[333.73495483 207.66032410]
[343.47436523 219.14762878]
[350.51626587 232.46025085]
[354.53125000 246.97555542]
[355.33154297 262.01461792]
[352.87976074 276.87405396]
[347.29052734 290.85885620]
[338.82525635 303.31491089]
[327.87991333 313.65963745]
[314.96643066 321.40921021]
[300.68878174 326.20114136]
[285.71475220 327.81134033]
[270.74472046 326.16445923]
[256.47885132 321.33752441]
[243.58439636 313.55633545]
[232.66444397 303.18478394]
[224.22973633 290.70800781]
[218.67480469 276.70956421]
[216.25942993 261.84417725]
[217.09660339 246.80709839]
[221.14715576 232.30168152]
[228.22164917 219.00636292]
[216.79995728 209.28294373]
[205.37826538 199.55950928]
[193.95658875 189.83609009]
[182.53489685 180.11265564]
[171.11320496 170.38923645]
[153.57112122 184.50956726]
[133.31558228 194.34936523]
[111.37256622 199.41024780]
[88.85350800 199.43585205]
[66.89904022 194.42488098]
[46.62118149 184.63116455]
[29.04703712 170.55075073]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 81]
[2 80]
[4 79]
[5 78]
[6 77]
[7 76]
[8 75]
[9 74]
[10 73]
[12 50]
[13 49]
[14 48]
[15 45]
[16 44]
[17 43]
[19 41]
[20 40]
[21 39]
[23 37]
[25 35]
[26 34]
[27 33]
[58 69]
[59 68]
[60 67]
[61 66]
[94 101]
[95 100]
[112 139]
[113 138]
[114 137]
[150 188]
[151 187]
[152 186]
[153 185]
[154 184]
[155 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
