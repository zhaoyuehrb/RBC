%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 01:31:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAUAACGAUUCUGGUGUUACUUUCUGUUUUUCCUACCUCUUAGGCUGGUCCUUCUGUCUCUUAUAUUAGUUAUUCCUGAUUUCCUGACCCUUAAUUGUGAGAUUCCCCAAAGACAUUGUCCUUUACCUUCUUAUUCACUAUUUUUUCAGUGAGCACAUUUACUUCCAAGAGUUUAUCAAUCACUUCCUAAUAUUAAUAAACACUUAUUAGUGCUU\
) } def
/len { sequence length } bind def

/coor [
[108.02757263 420.34988403]
[103.33039856 434.59545898]
[98.63323212 448.84106445]
[105.49356842 462.82580566]
[100.52703094 477.20593262]
[87.15242767 483.66003418]
[82.45525360 497.90563965]
[90.83753967 511.10681152]
[88.72194672 526.60064697]
[77.10739899 537.07135010]
[61.47793198 537.57507324]
[49.21329880 527.87390137]
[46.10448456 512.54846191]
[53.61937332 498.83493042]
[68.20967102 493.20846558]
[72.90684509 478.96286011]
[65.99408722 465.81945801]
[70.55475616 451.30551147]
[84.38764954 444.14389038]
[89.08481598 429.89828491]
[93.78199005 415.65270996]
[79.25337219 408.38922119]
[65.98887634 399.01007080]
[54.29425430 387.73056030]
[44.43918610 374.80984497]
[36.65107727 360.54489136]
[31.10982513 345.26370239]
[27.94364548 329.31781006]
[27.22611237 313.07412720]
[28.97445107 296.90652466]
[33.14912415 281.18722534]
[39.65471649 266.27825928]
[48.34213638 252.52304077]
[59.01200485 240.23863220]
[71.41925812 229.70823669]
[85.27875519 221.17478943]
[100.27185059 214.83532715]
[116.05369568 210.83642578]
[114.53617096 195.91339111]
[113.01864624 180.99035645]
[111.50112152 166.06730652]
[109.98359680 151.14427185]
[106.18135834 144.81065369]
[108.55372620 135.99444580]
[107.25240326 121.05099487]
[92.43756104 125.35693359]
[75.76950073 118.77956390]
[65.17343903 101.31401062]
[51.52076721 95.10074615]
[37.86809921 88.88748932]
[24.21542931 82.67422485]
[12.46990013 92.35946655]
[-2.25598860 95.96989441]
[-17.02869415 92.84141541]
[-28.92923164 83.64694977]
[-35.62994385 70.25254822]
[-35.84967804 55.33889008]
[-49.50234985 49.12562943]
[-63.15501785 42.91236877]
[-75.66193390 51.71715927]
[-90.79682159 53.07064056]
[-104.48610687 46.70905304]
[-113.09555054 34.43169785]
[-114.39495087 19.59332848]
[-128.04762268 13.38006687]
[-141.70028687 7.16680527]
[-157.16822815 11.42386341]
[-170.05532837 1.86864877]
[-170.47570801 -14.16889572]
[-158.10690308 -24.38613892]
[-142.43717957 -20.94528580]
[-135.48703003 -6.48586369]
[-121.83435822 -0.27260196]
[-108.18168640 5.94066000]
[-96.13970947 -2.82611322]
[-81.22720337 -4.39874649]
[-67.43863678 1.74469829]
[-58.51787567 14.04578686]
[-56.94175720 29.25969696]
[-43.28908539 35.47296143]
[-29.63641739 41.68622208]
[-18.24683952 32.05590439]
[-3.74580526 28.31031609]
[11.00387764 31.24423409]
[23.06624031 40.32826233]
[30.01656532 53.80342102]
[30.42868996 69.02155304]
[44.08135986 75.23481750]
[57.73402786 81.44808197]
[71.38669586 87.66133881]
[78.12023163 84.35838318]
[64.55887604 77.94826508]
[61.11499786 63.34896088]
[70.38184357 51.55381393]
[85.38144684 51.44462204]
[94.81903839 63.10361099]
[91.58730316 77.75247192]
[98.32083130 74.44951630]
[101.76441956 59.85013962]
[105.20800018 45.25076675]
[108.65158844 30.65139198]
[112.09516907 16.05201912]
[115.53874969 1.45264399]
[105.34085083 -6.46278620]
[98.91605377 -17.60592270]
[97.18762207 -30.30476761]
[100.37716675 -42.66923141]
[107.97695923 -52.87244797]
[118.83038330 -59.42069626]
[131.30783081 -61.37202835]
[135.17262268 -75.86558533]
[139.03742981 -90.35914612]
[142.90223694 -104.85270691]
[133.01829529 -116.81462097]
[132.08666992 -132.30371094]
[140.46557617 -145.36408997]
[154.93315125 -150.97378540]
[169.92633057 -146.97575378]
[179.67991638 -134.90733337]
[180.44346619 -119.40904999]
[171.92338562 -106.44033051]
[157.39579773 -100.98790741]
[153.53099060 -86.49434662]
[149.66618347 -72.00078583]
[145.80139160 -57.50722504]
[158.42558289 -45.79419327]
[163.40150452 -29.21462250]
[159.27110291 -12.31272030]
[147.08522034 0.23109095]
[130.13812256 4.89622784]
[126.69454193 19.49560165]
[123.25096130 34.09497452]
[119.80737305 48.69435120]
[116.36379242 63.29372406]
[112.92021179 77.89309692]
[124.97842407 86.81495667]
[137.93244934 79.25235748]
[150.88648987 71.68975067]
[163.84053040 64.12715149]
[176.79457092 56.56455231]
[178.20799255 41.11198425]
[188.45957947 29.46360397]
[203.60736084 26.09845161]
[217.82672119 32.31049728]
[225.65002441 45.71108246]
[224.06903076 61.14740753]
[213.69169617 72.68389130]
[198.50830078 75.88452148]
[184.35716248 69.51858521]
[171.40313721 77.08119202]
[158.44909668 84.64379120]
[145.49505615 92.20639038]
[132.54101562 99.76898956]
[147.53495789 99.34268188]
[162.02627563 95.46947479]
[176.72494507 98.46099854]
[188.54963684 107.69012451]
[195.02149963 121.22212219]
[194.78382874 136.22023010]
[187.88644409 149.54037476]
[175.77525330 158.39018250]
[160.98918152 160.91445923]
[146.62786865 156.58403015]
[135.70191956 146.30670166]
[130.50213623 132.23988342]
[122.19584656 119.74966431]
[123.49716949 134.69311523]
[124.90663910 149.62673950]
[126.42416382 164.54978943]
[127.94168854 179.47282410]
[129.45921326 194.39585876]
[130.97673035 209.31890869]
[145.35202026 209.84510803]
[159.52604675 212.28897095]
[173.24417114 216.60612488]
[186.26002502 222.71852112]
[198.33993530 230.51591492]
[209.26705933 239.85780334]
[218.84536743 250.57592773]
[226.90309143 262.47738647]
[233.29580688 275.34808350]
[237.90908813 288.95648193]
[240.66044617 303.05789185]
[241.50093079 317.39886475]
[240.41590881 331.72161865]
[237.42532349 345.76885986]
[232.58338928 359.28826904]
[225.97755432 372.03701782]
[217.72694397 383.78622437]
[207.98020935 394.32510376]
[196.91282654 403.46453857]
[184.72398376 411.04064941]
[190.83825684 424.73794556]
[196.95252991 438.43524170]
[203.06680298 452.13253784]
[209.18107605 465.82980347]
[215.29534912 479.52709961]
[221.40962219 493.22439575]
[227.52389526 506.92166138]
[233.63816833 520.61895752]
[247.22505188 529.80200195]
[245.79597473 546.13879395]
[230.82104492 552.82336426]
[217.70520020 542.97924805]
[219.94088745 526.73321533]
[213.82661438 513.03594971]
[207.71234131 499.33865356]
[201.59806824 485.64135742]
[195.48379517 471.94409180]
[189.36952209 458.24679565]
[183.25524902 444.54949951]
[177.14097595 430.85223389]
[171.02670288 417.15493774]
[158.76239014 420.81365967]
[146.14910889 422.98263550]
[133.36711121 423.63085938]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 21]
[2 20]
[3 19]
[6 16]
[7 15]
[38 172]
[39 171]
[40 170]
[41 169]
[42 168]
[44 167]
[45 166]
[48 90]
[49 89]
[50 88]
[51 87]
[57 81]
[58 80]
[59 79]
[64 74]
[65 73]
[66 72]
[98 135]
[99 134]
[100 133]
[101 132]
[102 131]
[103 130]
[110 125]
[111 124]
[112 123]
[113 122]
[136 153]
[137 152]
[138 151]
[139 150]
[140 149]
[192 213]
[193 212]
[194 211]
[195 210]
[196 209]
[197 208]
[198 207]
[199 206]
[200 205]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
