%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 18:45:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGGGCUACAGAAGAGCUCUUGGGACUGAAUGGCCAAGAACCUGCUACGGCCUGAUGGAUACUCUUUCCACUUCCUCUCAUUCCAUUCAUUGGUUGGCAGAGACCACAAAGACUCAUGGGGCUUUCCUGGAAGAACUUCGUGCUUGAUGUAACACCCCAAUUGCAAGUCUUCUUUUCCUCCUUUACCUCAUGUUAUAAUAAAGCUCUGAUCUCUGACUCACUAA\
) } def
/len { sequence length } bind def

/coor [
[72.86585999 390.04867554]
[75.27992249 374.59854126]
[87.09429169 364.35379028]
[86.67731476 349.35958862]
[86.26034546 334.36538696]
[85.84337616 319.37118530]
[77.82762909 313.05520630]
[74.53695679 303.16369629]
[77.28459930 292.88052368]
[85.39801788 285.65655518]
[85.39801788 270.65655518]
[85.39801788 255.65657043]
[85.39801788 240.65657043]
[84.98104095 225.66236877]
[84.14742279 210.68554688]
[83.31379700 195.70872498]
[82.48017883 180.73190308]
[81.64655304 165.75509644]
[67.72927094 160.15963745]
[56.76054764 170.39129639]
[45.79182053 180.62297058]
[34.82309723 190.85464478]
[23.85437012 201.08630371]
[12.88564587 211.31797791]
[16.42108727 226.26441956]
[11.99427795 240.97152710]
[0.79600662 251.48315430]
[-14.16144753 254.97172546]
[-28.85460281 250.49884033]
[-39.33107758 239.26768494]
[-42.77275085 224.29936218]
[-38.25382996 209.62030029]
[-26.98988152 199.17907715]
[-12.01085186 195.78434753]
[2.65397573 200.34925842]
[13.62270069 190.11758423]
[24.59142685 179.88591003]
[35.56015015 169.65425110]
[46.52887726 159.42257690]
[57.49760437 149.19090271]
[43.06273270 128.86888123]
[37.53553772 105.02653503]
[41.41121674 81.31887817]
[27.78252983 75.05318451]
[14.15384293 68.78749847]
[0.52515584 62.52180481]
[-13.10353184 56.25611496]
[-26.73221970 49.99042511]
[-33.32226944 50.22039795]
[-38.29763794 47.50217438]
[-40.64892578 43.35645294]
[-54.09817123 36.71433258]
[-67.54741669 30.07221031]
[-81.08769226 23.61768150]
[-94.71637726 17.35198975]
[-108.34506989 11.08629894]
[-122.01697540 4.91548443]
[-135.73144531 -1.16015685]
[-149.44590759 -7.23579788]
[-163.16036987 -13.31143856]
[-172.62579346 -1.56120038]
[-184.81045532 7.33804178]
[-198.88357544 12.77952194]
[-213.88563538 14.39223194]
[-228.79374695 12.06621361]
[-242.59147644 5.96005869]
[-254.33805847 -3.50990462]
[-263.23260498 -15.69799805]
[-268.66864014 -29.77321815]
[-270.27557373 -44.77589417]
[-267.94378662 -59.68311310]
[-261.83230591 -73.47848511]
[-252.35780334 -85.22140503]
[-240.16627502 -94.11123657]
[-226.08895874 -99.54184723]
[-211.08566284 -101.14297485]
[-196.17935181 -98.80544281]
[-182.38633728 -92.68863678]
[-170.64707947 -83.20960236]
[-161.76194763 -71.01464844]
[-156.33677673 -56.93523026]
[-154.74143982 -41.93132019]
[-157.08473206 -27.02590561]
[-143.37026978 -20.95026398]
[-129.65579224 -14.87462330]
[-115.94132996 -8.79898167]
[-108.56063843 -8.96339798]
[-102.07937622 -2.54238820]
[-88.45069122 3.72330236]
[-74.82199860 9.98899269]
[-70.12081909 9.20512009]
[-64.87626648 11.35864449]
[-60.90529633 16.62296486]
[-47.45605087 23.26508522]
[-34.00680161 29.90720558]
[-20.46652794 36.36173630]
[-6.83784103 42.62742615]
[6.79084635 48.89311600]
[20.41953468 55.15880966]
[34.04822159 61.42449951]
[47.67691040 67.69019318]
[52.56440735 60.86569214]
[58.33575058 54.77036667]
[64.88339996 49.51778030]
[72.08537292 45.20581055]
[79.80745697 41.91479492]
[87.90578461 39.70605850]
[96.22945404 38.62074661]
[104.62338257 38.67908859]
[112.93115997 39.87999725]
[120.99800110 42.20109177]
[128.67359924 45.59912872]
[135.81492615 50.01079559]
[142.28894043 55.35388565]
[147.97499084 61.52884674]
[152.76715088 68.42062378]
[166.48162842 62.34498215]
[180.19609070 56.26934052]
[193.91055298 50.19369888]
[207.62501526 44.11805725]
[221.33949280 38.04241943]
[235.05395508 31.96677780]
[234.08010864 16.85793877]
[238.32627869 2.35476375]
[247.26142883 -9.79773235]
[259.79162598 -18.14425659]
[274.39382935 -21.69349670]
[289.30108643 -20.03584099]
[302.71633911 -13.39053917]
[313.02902222 -2.57693195]
[326.74349976 -8.65257263]
[340.45794678 -14.72821426]
[354.17242432 -20.80385590]
[367.88690186 -26.87949562]
[381.60134888 -32.95513916]
[395.14163208 -39.40966797]
[408.49725342 -46.23809814]
[421.85287476 -53.06652451]
[435.20849609 -59.89495468]
[441.41641235 -66.58058929]
[448.79754639 -66.72402191]
[462.24679565 -73.36614227]
[475.69604492 -80.00826263]
[484.64337158 -93.05648041]
[499.48098755 -91.75482941]
[512.93023682 -98.39694977]
[526.37945557 -105.03907013]
[531.53741455 -119.73714447]
[545.27148438 -126.28160858]
[559.25207520 -121.27371979]
[572.70129395 -127.91584015]
[584.22558594 -140.35078430]
[599.36480713 -132.71923828]
[596.22241211 -116.05904388]
[579.34344482 -114.46659088]
[565.89416504 -107.82447052]
[561.37274170 -93.67907715]
[547.82794189 -86.75142670]
[533.02160645 -91.58982849]
[519.57232666 -84.94770813]
[506.12310791 -78.30558777]
[498.13775635 -65.73245239]
[482.33816528 -66.55902100]
[468.88891602 -59.91689682]
[455.43966675 -53.27477646]
[442.03692627 -46.53933716]
[428.68130493 -39.71090698]
[415.32568359 -32.88247681]
[401.97006226 -26.05404854]
[400.97817993 -23.44309044]
[398.89791870 -21.06545830]
[395.81213379 -19.33561897]
[391.95144653 -18.63071442]
[387.67700195 -19.24067116]
[373.96252441 -13.16502953]
[360.24807739 -7.08938885]
[346.53359985 -1.01374781]
[332.81912231 5.06189299]
[319.10467529 11.13753414]
[320.18496704 26.04116440]
[316.09344482 40.44215012]
[307.30526733 52.59710312]
[294.86557007 61.02769470]
[280.26483154 64.70043182]
[265.26062012 63.15330887]
[251.66578674 56.55386353]
[241.12959290 45.68124390]
[227.41513062 51.75688553]
[213.70066833 57.83252716]
[199.98619080 63.90816498]
[186.27172852 69.98381042]
[172.55726624 76.05944824]
[158.84280396 82.13508606]
[161.36663818 92.57305908]
[162.04374695 103.34616089]
[160.83430481 114.12850189]
[157.75585938 124.59053802]
[152.88337708 134.40919495]
[146.34754944 143.27777100]
[138.33125305 150.91555786]
[129.06459045 157.07673645]
[118.81819916 161.55815125]
[107.89543915 164.20611572]
[96.62337494 164.92146301]
[97.45699310 179.89828491]
[98.29061890 194.87510681]
[99.12423706 209.85192871]
[99.95786285 224.82873535]
[102.44680786 228.35693359]
[103.57666779 232.11528015]
[103.44119263 235.65025330]
[102.27121735 238.58483887]
[100.39801788 240.65657043]
[100.39801788 255.65657043]
[100.39801788 270.65655518]
[100.39801788 285.65655518]
[111.24951935 302.65335083]
[100.83757782 318.95422363]
[101.25454712 333.94842529]
[101.67151642 348.94262695]
[102.08849335 363.93682861]
[114.45394897 373.50915527]
[117.72292328 388.80123901]
[110.35190582 402.59262085]
[95.82126617 408.37142944]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 221]
[4 220]
[5 219]
[6 218]
[10 216]
[11 215]
[12 214]
[13 213]
[14 208]
[15 207]
[16 206]
[17 205]
[18 204]
[19 40]
[20 39]
[21 38]
[22 37]
[23 36]
[24 35]
[43 101]
[44 100]
[45 99]
[46 98]
[47 97]
[48 96]
[51 95]
[52 94]
[53 93]
[54 90]
[55 89]
[56 88]
[57 86]
[58 85]
[59 84]
[60 83]
[116 193]
[117 192]
[118 191]
[119 190]
[120 189]
[121 188]
[122 187]
[130 179]
[131 178]
[132 177]
[133 176]
[134 175]
[135 174]
[136 169]
[137 168]
[138 167]
[139 166]
[141 165]
[142 164]
[143 163]
[145 161]
[146 160]
[147 159]
[150 156]
[151 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
