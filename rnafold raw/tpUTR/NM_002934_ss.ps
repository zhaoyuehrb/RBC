%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 06:10:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCCUGUAUCAGCACUCCUCAUCAUCACUCAUCUGCCAAGCUCCUCAAUCAUAGCCAAGAUCCCAUCUCUCCAUAUACUUUGGGUAUCAGCAUCUGUCCUCAUCAGUCUCCAUACCCCUUCAGCUUUCCUGAGCUGAAGUGCCUUGUGAACCCUGCAAUAAACUGCUUUGCAAAUUC\
) } def
/len { sequence length } bind def

/coor [
[-8.43218422 345.56964111]
[-12.33565712 360.05282593]
[-16.23913002 374.53601074]
[-6.38715363 386.52426147]
[-5.49686480 402.01577759]
[-13.91059780 415.05377197]
[-28.39310074 420.62481689]
[-43.37555313 416.58679199]
[-53.09690094 404.49237061]
[-53.81908417 388.99209595]
[-45.26440811 376.04617310]
[-30.72232246 370.63253784]
[-26.81885147 356.14935303]
[-22.91537857 341.66616821]
[-30.78299904 337.74047852]
[-37.98240662 332.68695068]
[-44.35305023 326.61703491]
[-49.75267410 319.66488647]
[-54.06050491 311.98437500]
[-57.17994308 303.74566650]
[-59.04073334 295.13146973]
[-59.60054779 286.33303833]
[-58.84594727 277.54577637]
[-56.79270172 268.96502686]
[-53.48546219 260.78170776]
[-48.99678421 253.17805481]
[-43.42555237 246.32350159]
[-36.89478302 240.37101746]
[-29.54891968 235.45359802]
[-21.55064011 231.68135071]
[-13.07724285 229.13900757]
[-4.31672668 227.88401794]
[4.53638458 227.94526672]
[13.28535938 229.32238770]
[21.73563194 231.98579407]
[29.04484367 218.88710022]
[36.35405731 205.78842163]
[35.79924774 190.90415955]
[49.28036880 182.62345886]
[56.58958054 169.52478027]
[63.89879227 156.42610168]
[71.20800781 143.32742310]
[58.51372528 151.31837463]
[47.93599319 161.95376587]
[34.55981064 168.74182129]
[19.73072433 170.99974060]
[4.94041872 168.50036621]
[-8.32331944 161.49513245]
[-18.72626114 150.68872070]
[-25.22195625 137.16813660]
[-27.15698433 122.29347229]
[-24.33670044 107.56099701]
[-17.04480362 94.45266724]
[-6.01479673 84.28709412]
[7.64378548 78.08683777]
[22.55699921 76.47560883]
[37.22469330 79.61547089]
[50.17460632 87.19322205]
[64.94365692 89.81526947]
[53.23966980 80.43354797]
[41.53568268 71.05182648]
[29.83169746 61.67010498]
[13.69129181 56.48130035]
[14.20920658 39.53526688]
[30.63635635 35.34180832]
[39.21341705 49.96611786]
[50.91740417 59.34783936]
[62.62139130 68.72956085]
[74.32537842 78.11128235]
[81.58382416 76.22316742]
[75.81044769 62.37874222]
[70.03707123 48.53431702]
[64.26368713 34.68989182]
[55.19294357 22.74327850]
[57.23969650 7.88357353]
[69.20241547 -1.16592479]
[84.05845642 0.90723366]
[93.08667755 12.88601398]
[90.98707581 27.73843193]
[92.69161987 42.64126587]
[94.39616394 57.54410172]
[96.10071564 72.44693756]
[103.35916138 70.55882263]
[109.00807953 56.66315460]
[114.65699768 42.76747894]
[120.30591583 28.87180901]
[125.95483398 14.97613621]
[131.60375977 1.08046365]
[121.71482086 -9.03830528]
[116.45048523 -22.12427139]
[116.57641602 -36.18552017]
[122.04049683 -49.09525299]
[131.98568726 -58.91344452]
[144.88430786 -64.17839813]
[158.77261353 -64.12428284]
[164.66452026 -77.91867828]
[170.55644226 -91.71306610]
[163.32746887 -105.57942963]
[166.75334167 -120.83713531]
[179.21646118 -130.28195190]
[194.83212280 -129.45433044]
[206.22709656 -118.74505615]
[208.02102661 -103.21071625]
[199.36685181 -90.18614197]
[184.35083008 -85.82115173]
[178.45892334 -72.02675629]
[172.56700134 -58.23236465]
[183.30610657 -46.41733170]
[187.84080505 -31.04789925]
[185.21640015 -15.18089581]
[175.90730286 -1.99517119]
[161.73233032 5.84526014]
[145.49943542 6.72938299]
[139.85050964 20.62505531]
[134.20158386 34.52072906]
[128.55267334 48.41640091]
[122.90374756 62.31207275]
[117.25482941 76.20774841]
[126.63655090 87.91172791]
[141.42854309 85.42231750]
[156.22052002 82.93289948]
[171.01251221 80.44348145]
[185.80448914 77.95406342]
[200.59648132 75.46464539]
[215.38845825 72.97522736]
[230.18045044 70.48581696]
[244.97242737 67.99639893]
[257.26528931 57.14202881]
[272.72366333 62.61658859]
[275.44528198 78.78831482]
[262.63040161 89.02112579]
[247.46183777 82.78838348]
[232.66986084 85.27780151]
[217.87786865 87.76721191]
[203.08589172 90.25662994]
[188.29389954 92.74604797]
[173.50192261 95.23546600]
[158.70994568 97.72488403]
[143.91795349 100.21430206]
[129.12597656 102.70371246]
[127.42957306 110.00934601]
[142.04078674 113.40235901]
[138.64753723 128.01351929]
[124.03678894 124.62060547]
[122.34039307 131.92623901]
[134.52189636 140.67900085]
[146.70341492 149.43176270]
[158.88491821 158.18452454]
[171.06642151 166.93728638]
[187.06721497 165.77360535]
[197.84707642 177.65528870]
[195.13661194 193.46771240]
[181.01506042 201.08094788]
[166.31527710 194.65476990]
[162.31365967 179.11878967]
[150.13215637 170.36602783]
[137.95065308 161.61326599]
[125.76913452 152.86050415]
[113.58763123 144.10774231]
[106.26739502 145.73997498]
[116.41463470 156.78684998]
[111.92127991 171.09802246]
[97.28073883 174.36213684]
[87.13373566 163.31504822]
[91.62692261 149.00440979]
[84.30668640 150.63662720]
[76.99747467 163.73530579]
[69.68826294 176.83398438]
[62.37905121 189.93267822]
[62.41105270 205.75384521]
[49.45273590 213.09764099]
[42.14352417 226.19631958]
[34.83431244 239.29499817]
[49.92443085 255.70138550]
[57.89738846 276.49029541]
[57.64846039 298.72879028]
[49.23143768 319.28689575]
[33.84844589 335.27798462]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 14]
[2 13]
[3 12]
[35 173]
[36 172]
[37 171]
[39 169]
[40 168]
[41 167]
[42 166]
[59 69]
[60 68]
[61 67]
[62 66]
[83 118]
[84 117]
[85 116]
[86 115]
[87 114]
[88 113]
[95 107]
[96 106]
[97 105]
[119 140]
[120 139]
[121 138]
[122 137]
[123 136]
[124 135]
[125 134]
[126 133]
[127 132]
[145 159]
[146 158]
[147 157]
[148 156]
[149 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
