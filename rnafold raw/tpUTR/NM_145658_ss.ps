%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 21:04:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAAUAAUAUAAAAAUUUUAAACCUACUUGAUAUUCCAUAACAAAGCUGAUUUAAGCAAACUGCAUUUUUUCACAGGAGAAAUAAUCAUAUUCGUAAUUUCAAAAGUUGUAUAAAAAUAUUUUCUAUUGUAGUUCAAAUGUGCCAACAUCUUUAUGUGUCAUGUGUUAUGAACAAUUUUCAUAUGCACUAAAAACCUAAUUUAAAAUAAAAUUUUGGUUCAGGA\
) } def
/len { sequence length } bind def

/coor [
[107.58744049 219.98999023]
[113.23168182 233.94836426]
[115.85007477 248.77528381]
[115.32817078 263.82260132]
[111.68877411 278.43246460]
[105.09098816 291.96624756]
[95.82324219 303.83227539]
[84.29067230 313.51181030]
[70.99745178 320.58172607]
[56.52468109 324.73297119]
[41.50506210 325.78402710]
[26.59518623 323.68899536]
[12.44684410 318.53939819]
[-0.32145599 310.56042480]
[-11.15153980 300.10083008]
[-19.56996155 287.61788940]
[-25.20870590 273.65728760]
[-27.82126808 258.82934570]
[-27.29344177 243.78224182]
[-23.64829826 229.17379761]
[-17.04519081 215.64262390]
[-7.77277470 203.78025818]
[3.76359677 194.10523987]
[17.05960464 187.04054260]
[31.53400230 182.89501953]
[46.55403137 181.84985352]
[61.46308517 183.95077515]
[66.59339142 169.85537720]
[71.72369385 155.75999451]
[76.85398865 141.66459656]
[81.98429108 127.56921387]
[77.28476715 121.72417450]
[66.02481079 131.63444519]
[54.76485825 141.54472351]
[43.50490570 151.45498657]
[32.24495316 161.36524963]
[24.99028778 174.49423218]
[10.04595566 175.78533936]
[0.64704943 164.09513855]
[5.11748505 149.77679443]
[19.49772644 145.51091003]
[31.59472084 136.64170837]
[43.69171906 127.77250671]
[55.78871155 118.90330505]
[67.88571167 110.03410339]
[63.18618011 104.18907166]
[48.31794739 106.17292023]
[33.44971466 108.15676117]
[24.05088425 120.86257172]
[8.40840244 123.11830139]
[-4.19732523 113.58566284]
[-6.28754330 97.92020416]
[3.37783694 85.41596222]
[19.06451797 83.49148560]
[31.46586800 93.28852844]
[46.33410263 91.30468750]
[61.20233536 89.32083893]
[47.20312500 83.93361664]
[33.20391846 78.54639435]
[18.31381607 76.73397064]
[5.61975718 68.74266815]
[-2.45221877 56.09976196]
[-4.35942698 41.22150421]
[0.26263008 26.95137405]
[10.53060341 16.01662445]
[24.48211670 10.50706387]
[39.45081329 11.47565746]
[52.57592773 18.73728943]
[61.34904480 30.90414619]
[64.09342194 45.65240860]
[70.34903717 59.28572845]
[76.60464478 72.91904449]
[77.65099335 57.95558548]
[78.69734192 42.99212265]
[79.74368286 28.02866364]
[71.29124451 11.66376877]
[81.67643738 -2.48775220]
[82.51376343 -17.46436310]
[83.35108185 -32.44097519]
[84.18840790 -47.41758728]
[70.54347992 -54.05773926]
[60.50738144 -65.38556671]
[55.58614349 -79.65424347]
[56.50025177 -94.67929077]
[63.07932281 -108.17301941]
[74.29282379 -118.09284210]
[88.41134644 -122.95045471]
[89.24867249 -137.92706299]
[90.08599854 -152.90367126]
[90.92331696 -167.88029480]
[91.76064301 -182.85690308]
[92.59796143 -197.83351135]
[85.64307404 -212.04406738]
[94.07876587 -224.31959534]
[91.43525696 -233.05232239]
[95.03377533 -239.49902344]
[96.08012390 -254.46247864]
[97.12646484 -269.42593384]
[98.17281342 -284.38940430]
[91.41701508 -298.69567871]
[100.02327728 -310.85223389]
[101.06962585 -325.81567383]
[102.11596680 -340.77914429]
[95.36016846 -355.08541870]
[103.96643066 -367.24197388]
[105.01277924 -382.20544434]
[93.29511261 -395.20098877]
[94.58142090 -412.31301880]
[107.58782196 -422.98190308]
[108.42514801 -437.95852661]
[109.26246643 -452.93515015]
[110.09979248 -467.91174316]
[102.22684479 -482.29745483]
[110.97878265 -496.16598511]
[127.35235596 -495.25054932]
[134.50384521 -480.49288940]
[125.07640076 -467.07443237]
[124.23908234 -452.09780884]
[123.40175629 -437.12121582]
[122.56443024 -422.14459229]
[132.40875244 -413.83993530]
[135.72496033 -401.19360352]
[131.08671570 -388.76226807]
[119.97624207 -381.15908813]
[118.92989349 -366.19561768]
[125.76053619 -352.95962524]
[117.07942963 -339.73278809]
[116.03308105 -324.76934814]
[114.98673248 -309.80587769]
[121.81738281 -296.56988525]
[113.13627625 -283.34304810]
[112.08992767 -268.37960815]
[111.04357910 -253.41613770]
[109.99723053 -238.45266724]
[109.05537415 -223.48226929]
[116.07015991 -210.34294128]
[107.57457733 -196.99618530]
[106.73725128 -182.01957703]
[105.89993286 -167.04296875]
[105.06260681 -152.06636047]
[104.22528076 -137.08973694]
[103.38796234 -122.11312866]
[116.87702942 -115.71201324]
[126.91489410 -104.60405731]
[131.94883728 -90.46105957]
[131.18241882 -75.42775726]
[124.70133209 -61.79656982]
[113.46508026 -51.65805054]
[99.16501617 -46.58026505]
[98.32769775 -31.60365295]
[97.49037170 -16.62704086]
[96.65305328 -1.65042973]
[104.47657776 7.56724262]
[103.90789795 20.04515839]
[94.70714569 29.07501030]
[93.66079712 44.03847122]
[92.61444855 59.00193024]
[91.56810760 73.96539307]
[99.87313080 68.76626587]
[110.54383850 66.51900482]
[122.45980835 68.15322113]
[134.16969299 74.16349792]
[144.05934143 84.50086212]
[158.79365540 87.31158447]
[173.52795410 90.12229919]
[188.26226807 92.93302155]
[203.01583862 95.64080811]
[217.78796387 98.24552917]
[232.56007385 100.85025787]
[247.33218384 103.45497894]
[262.10430908 106.05970001]
[276.87643433 108.66442108]
[290.78997803 100.67737579]
[305.65585327 106.70932770]
[310.07028198 122.13309479]
[300.64685059 135.11686707]
[284.61441040 135.70062256]
[274.27169800 123.43653870]
[259.49957275 120.83181763]
[244.72746277 118.22709656]
[229.95535278 115.62236786]
[215.18324280 113.01764679]
[200.41111755 110.41292572]
[193.28535461 112.34495544]
[185.45155334 107.66732788]
[170.71723938 104.85661316]
[155.98292542 102.04589081]
[141.24862671 99.23516846]
[136.92538452 105.36375427]
[151.25454712 109.79940033]
[151.46392822 124.79794312]
[137.26417542 129.63185120]
[128.27890015 117.62093353]
[123.95565796 123.74951935]
[131.54615784 136.68722534]
[139.13667297 149.62492371]
[155.35650635 158.35247803]
[154.78269958 175.89637756]
[162.55310059 188.72683716]
[170.32350159 201.55731201]
[178.09390259 214.38777161]
[185.86431885 227.21823120]
[201.27024841 230.74421692]
[209.59977722 244.17532349]
[205.91110229 259.54312134]
[192.39268494 267.73016357]
[177.06474304 263.87924194]
[169.02107239 250.27500916]
[173.03384399 234.98863220]
[165.26344299 222.15817261]
[157.49304199 209.32771301]
[149.72264099 196.49723816]
[141.95222473 183.66677856]
[130.28924561 180.48118591]
[123.70886230 169.86421204]
[126.19895935 157.21543884]
[118.60845947 144.27772522]
[111.01795197 131.34002686]
[96.07968140 132.69950867]
[90.94937897 146.79490662]
[85.81907654 160.89028931]
[80.68877411 174.98568726]
[75.55847168 189.08106995]
[88.32991028 197.05503845]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 223]
[28 222]
[29 221]
[30 220]
[31 219]
[46 57]
[47 56]
[48 55]
[72 158]
[73 157]
[74 156]
[75 155]
[77 152]
[78 151]
[79 150]
[80 149]
[87 142]
[88 141]
[89 140]
[90 139]
[91 138]
[92 137]
[94 135]
[96 134]
[97 133]
[98 132]
[99 131]
[101 129]
[102 128]
[103 127]
[105 125]
[106 124]
[109 120]
[110 119]
[111 118]
[112 117]
[163 188]
[164 187]
[165 186]
[166 185]
[167 183]
[168 182]
[169 181]
[170 180]
[171 179]
[172 178]
[194 218]
[195 217]
[196 216]
[198 213]
[199 212]
[200 211]
[201 210]
[202 209]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
