%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 18:35:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGGGACUGGUGGUCGGGGGCGGGGGGUCCUCCAUGAGAUGCUAAUGCUAUCGGUAAUCUCUGGGGAGUCCGUUUAAGGCUUUCCUUGGUAUUUGGCACCCAAGCCCCCCAUCUCCUAUUCCUGAGUCCCCAAAUGCCCUGCUCCCAUUCACGUCAAUACCAAGAACCAUGUUCUCCAGAGAAUAAAUUUAAUUUAUGACAGCUG\
) } def
/len { sequence length } bind def

/coor [
[465.45889282 302.76712036]
[463.64328003 281.91458130]
[468.13571167 261.45700073]
[454.81741333 254.55601501]
[441.49914551 247.65502930]
[428.18087769 240.75405884]
[414.86257935 233.85308838]
[401.54431152 226.95210266]
[388.22604370 220.05113220]
[373.36602783 221.06559753]
[364.67269897 207.84678650]
[357.28521729 207.56054688]
[351.20584106 200.73867798]
[337.99383545 193.63638306]
[320.81539917 199.95567322]
[304.18658447 191.57069397]
[298.87463379 173.38815308]
[285.45315552 166.69007874]
[272.03167725 159.99201965]
[258.61019897 153.29396057]
[245.18872070 146.59590149]
[230.34580994 147.83576965]
[221.45289612 134.75041199]
[208.03141785 128.05235291]
[194.60993958 121.35429382]
[181.18847656 114.65623474]
[167.76699829 107.95816803]
[154.34552002 101.26010895]
[140.92404175 94.56204987]
[120.68491364 136.71807861]
[73.06550598 133.52357483]
[58.11773682 134.77420044]
[43.16996384 136.02482605]
[28.22218895 137.27546692]
[13.27441597 138.52609253]
[4.98050833 142.36116028]
[-1.90941143 139.68051147]
[-16.87444305 140.70414734]
[-31.83947372 141.72778320]
[-46.80450439 142.75141907]
[-61.76953888 143.77505493]
[-76.72637177 144.91223145]
[-91.67414093 146.16285706]
[-106.62191772 147.41348267]
[-113.76046753 161.08992004]
[-127.17114258 168.71600342]
[-142.57464600 167.85830688]
[-155.05577087 158.79051208]
[-160.63185120 144.40611267]
[-157.52355957 129.29512024]
[-146.72274780 118.27940369]
[-131.67591858 114.87403107]
[-117.18446350 120.16564178]
[-107.87255096 132.46571350]
[-92.92477417 131.21508789]
[-77.97699738 129.96444702]
[-71.57155609 126.27297211]
[-62.79317474 128.81002808]
[-47.82814407 127.78639221]
[-32.86310959 126.76275635]
[-17.89807892 125.73912048]
[-2.93304777 124.71548462]
[12.02378559 123.57831573]
[26.97155762 122.32769012]
[41.91933060 121.07705688]
[56.86710358 119.82642365]
[71.81488037 118.57579803]
[74.90694427 111.74285126]
[61.18944931 105.67404175]
[46.29397583 103.90632629]
[43.30018616 89.20812225]
[56.31752777 81.75502014]
[67.47773743 91.77796173]
[81.09106445 98.07695770]
[84.18312836 91.24401093]
[75.25621033 79.18954468]
[66.32929230 67.13507843]
[57.40237808 55.08061218]
[48.47546387 43.02614594]
[39.54854584 30.97167969]
[24.29968452 24.93808746]
[22.16849136 8.67801189]
[35.34735489 -1.08157539]
[50.27899170 5.69915199]
[51.60301208 22.04476357]
[60.52993011 34.09923172]
[69.45684814 46.15369797]
[78.38375854 58.20816422]
[87.31067657 70.26262665]
[96.23759460 82.31710052]
[103.18291473 79.48645020]
[105.22537994 64.62615967]
[117.07354736 73.82516479]
[124.01886749 70.99452209]
[121.97637177 56.13423157]
[119.93386841 41.27394104]
[117.89137268 26.41365242]
[109.74458313 11.54535770]
[121.77656555 -0.39900240]
[136.58491516 7.85623789]
[132.75166321 24.37115288]
[134.79415894 39.23144150]
[136.83665466 54.09173203]
[138.87916565 68.95201874]
[147.62210083 81.14057922]
[161.04357910 87.83863831]
[174.46505737 94.53669739]
[187.88653564 101.23475647]
[201.30801392 107.93281555]
[214.72947693 114.63087463]
[228.15095520 121.32893372]
[243.95385742 120.56816101]
[251.88677979 133.17443848]
[265.30825806 139.87249756]
[278.72973633 146.57055664]
[292.15121460 153.26861572]
[305.57269287 159.96667480]
[315.90264893 154.07447815]
[327.67376709 153.90362549]
[337.95870972 159.38084412]
[344.25555420 169.04264832]
[345.09613037 180.42436218]
[358.30816650 187.52667236]
[371.57366943 194.52850342]
[387.38632202 194.00764465]
[395.12701416 206.73284912]
[408.44528198 213.63383484]
[421.76358032 220.53480530]
[435.08184814 227.43577576]
[448.40011597 234.33676147]
[461.71841431 241.23773193]
[475.03668213 248.13870239]
[481.06286621 240.36050415]
[488.12658691 233.51451111]
[496.08535767 227.73783875]
[504.77880859 223.14598083]
[514.03173828 219.83058167]
[523.65802002 217.85760498]
[533.46398926 217.26597595]
[543.25244141 218.06684875]
[552.82666016 220.24339294]
[561.99444580 223.75111389]
[570.57171631 228.51882935]
[578.38641357 234.45004272]
[585.28198242 241.42495728]
[591.12023926 249.30284119]
[595.78448486 257.92489624]
[599.18157959 267.11746216]
[601.24401855 276.69552612]
[601.93096924 286.46633911]
[601.22937012 296.23352051]
[599.15417480 305.80075073]
[595.74768066 314.97589111]
[591.07910156 323.57476807]
[602.78625488 332.95251465]
[614.49346924 342.33026123]
[626.20062256 351.70803833]
[637.17840576 342.90554810]
[649.74749756 336.59387207]
[663.35174561 333.04925537]
[677.39007568 332.42559814]
[691.24255371 334.74783325]
[704.29827881 339.91082764]
[715.98181152 347.68420410]
[725.77893066 357.72262573]
[733.25897217 369.58111572]
[738.09405518 382.73483276]
[740.07324219 396.60223389]
[739.11169434 410.57077026]
[735.25457764 424.02401733]
[728.67462158 436.36883545]
[740.09179688 446.09756470]
[751.50897217 455.82629395]
[762.92614746 465.55502319]
[774.34332275 475.28375244]
[785.76049805 485.01251221]
[801.97766113 487.44888306]
[807.72357178 502.80847168]
[797.08740234 515.29058838]
[781.01068115 512.05474854]
[776.03179932 496.42965698]
[764.61462402 486.70092773]
[753.19744873 476.97219849]
[741.78027344 467.24346924]
[730.36309814 457.51473999]
[718.94592285 447.78601074]
[706.07568359 457.25082397]
[691.31359863 463.38073730]
[675.50793457 465.81918335]
[659.56799316 464.42175293]
[644.41180420 459.26495361]
[630.91308594 450.64184570]
[619.85113525 439.04544067]
[611.86566162 425.14059448]
[607.41986084 409.72570801]
[606.77349854 393.68713379]
[609.96783447 377.94802856]
[616.82287598 363.41519165]
[605.11572266 354.03744507]
[593.40850830 344.65969849]
[581.70135498 335.28195190]
[564.95361328 347.67761230]
[545.25714111 354.51547241]
[524.40399170 355.16485596]
[504.29394531 349.55838013]
[486.76165771 338.19912720]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 132]
[4 131]
[5 130]
[6 129]
[7 128]
[8 127]
[9 126]
[11 124]
[13 123]
[14 122]
[17 117]
[18 116]
[19 115]
[20 114]
[21 113]
[23 111]
[24 110]
[25 109]
[26 108]
[27 107]
[28 106]
[29 105]
[31 67]
[32 66]
[33 65]
[34 64]
[35 63]
[37 62]
[38 61]
[39 60]
[40 59]
[41 58]
[42 56]
[43 55]
[44 54]
[75 90]
[76 89]
[77 88]
[78 87]
[79 86]
[80 85]
[94 104]
[95 103]
[96 102]
[97 101]
[154 201]
[155 200]
[156 199]
[157 198]
[171 186]
[172 185]
[173 184]
[174 183]
[175 182]
[176 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
