%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 06:46:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGUGCUGCCCAGGAUGGCCUCCUCUUGACAGGCGGACAGGGGGUGAGGGGGCCAGGGGGCAUCUCCAAAGGAAGCUUUUAAACUCAGCAGCUGCACCCCAGAAUCUGUAUGCCUGCACCUGCCCAAGGAUUUAUUCAUAGCUUACCUAAGAAUUUCAAAUUUCUACCAUAACACUGAAUAAAGUUUGACUUUUUGAAACUUC\
) } def
/len { sequence length } bind def

/coor [
[66.71647644 180.01963806]
[61.87154770 165.82362366]
[62.99194717 150.86552429]
[69.89758301 137.54966736]
[81.47942352 128.01588440]
[89.15129089 115.12625885]
[76.23897552 122.75988007]
[63.32666397 130.39350891]
[50.41435242 138.02713013]
[37.50204086 145.66075134]
[36.84033966 157.53848267]
[30.58858490 167.51823425]
[20.39951897 173.17977905]
[8.86315060 173.21641541]
[-1.15128505 167.73481750]
[-14.29364777 174.96517944]
[-27.43601036 182.19555664]
[-40.57837296 189.42593384]
[-53.72073746 196.65631104]
[-66.86309814 203.88667297]
[-80.00546265 211.11705017]
[-93.14782715 218.34742737]
[-106.29019165 225.57780457]
[-119.43254852 232.80816650]
[-119.85079193 248.09779358]
[-127.81335449 261.03973389]
[-141.09651184 268.21081543]
[-156.08532715 267.77319336]
[-168.75724792 259.94454956]
[-173.26017761 274.85632324]
[-186.69139099 282.00173950]
[-200.87976074 277.61697388]
[-208.90307617 291.91937256]
[-225.30209351 291.85159302]
[-233.20689392 277.48333740]
[-224.48570251 263.59548950]
[-208.11013794 264.47460938]
[-204.21865845 250.14311218]
[-190.99343872 242.62327576]
[-175.98762512 246.80216980]
[-175.81683350 231.90800476]
[-168.16290283 219.01330566]
[-154.99526978 211.63226318]
[-139.80133057 211.83448792]
[-126.66292572 219.66580200]
[-113.52056122 212.43544006]
[-100.37819672 205.20506287]
[-87.23583221 197.97468567]
[-74.09347534 190.74432373]
[-60.95111084 183.51394653]
[-47.80874634 176.28356934]
[-34.66638565 169.05319214]
[-21.52402115 161.82283020]
[-8.38165855 154.59245300]
[-4.35258293 136.73991394]
[11.71850777 127.33491516]
[29.86841774 132.74844360]
[42.78073120 125.11481476]
[55.69304276 117.48119354]
[68.60535431 109.84757233]
[81.51766968 102.21394348]
[66.61816406 103.94740295]
[53.77516556 96.19773102]
[48.36325836 82.20804596]
[52.64723587 67.83280182]
[64.83432007 59.08781052]
[79.82442474 59.63270569]
[91.34442139 69.23945618]
[94.57324219 83.88904572]
[97.57071686 69.19159698]
[100.56818390 54.49414062]
[103.45183563 39.77392960]
[106.22149658 25.03184891]
[108.99116516 10.28976727]
[111.76082611 -4.45231342]
[114.53049469 -19.19439507]
[102.32582092 -35.14705276]
[105.72526550 -54.63355255]
[122.09776306 -65.18087769]
[124.18025208 -80.03561401]
[126.26274109 -94.89035797]
[128.34523010 -109.74509430]
[130.31271362 -124.61550140]
[132.16506958 -139.50068665]
[119.96390533 -153.98713684]
[122.18132019 -172.47543335]
[136.94703674 -183.28837585]
[138.33786011 -198.22375488]
[139.72868347 -213.15913391]
[141.11950684 -228.09452820]
[134.69511414 -242.55265808]
[143.57917786 -254.50769043]
[144.97000122 -269.44305420]
[146.36082458 -284.37844849]
[147.75164795 -299.31384277]
[137.93630981 -311.40914917]
[139.55957031 -326.53594971]
[151.15109253 -335.81881714]
[152.19487000 -350.78247070]
[152.89103699 -365.76629639]
[153.58718872 -380.75015259]
[148.28247070 -396.85281372]
[162.28736877 -406.40789795]
[175.34596252 -395.59542847]
[168.57102966 -380.05398560]
[167.87486267 -365.07012939]
[167.17871094 -350.08630371]
[169.27627563 -347.24462891]
[170.09815979 -343.24380493]
[169.11369324 -338.69610596]
[166.08647156 -334.42800903]
[175.76466370 -323.16442871]
[174.56692505 -307.99801636]
[162.68702698 -297.92300415]
[161.29620361 -282.98764038]
[159.90538025 -268.05224609]
[158.51455688 -253.11686707]
[165.03843689 -239.72700500]
[156.05488586 -226.70370483]
[154.66406250 -211.76831055]
[153.27323914 -196.83293152]
[151.88241577 -181.89755249]
[160.90232849 -174.89910889]
[165.46838379 -164.30476379]
[164.33879089 -152.70329285]
[157.67922974 -142.99092102]
[147.05026245 -137.64833069]
[145.19789124 -122.76314545]
[147.49296570 -115.73278809]
[143.19996643 -107.66260529]
[141.11747742 -92.80786896]
[139.03498840 -77.95312500]
[136.95249939 -63.09838867]
[145.12048340 -56.86293030]
[149.99832153 -47.72670364]
[150.64532471 -37.30915451]
[146.87760925 -27.48869705]
[139.31338501 -20.06402588]
[129.27256775 -16.42473030]
[126.50290680 -1.68264937]
[123.73324585 13.05943203]
[120.96358490 27.80151367]
[118.19391632 42.54359436]
[120.04966736 49.70246506]
[115.26564026 57.49160767]
[112.26816559 72.18906403]
[109.27069855 86.88652039]
[116.81088257 93.01939392]
[120.05831909 103.40722656]
[132.47364807 111.82502747]
[144.88899231 120.24283600]
[157.30432129 128.66064453]
[172.63296509 125.89110565]
[185.10397339 134.60481262]
[187.64984131 149.23541260]
[200.06517029 157.65321350]
[212.48049927 166.07101440]
[224.89584351 174.48883057]
[237.31117249 182.90663147]
[249.72651672 191.32443237]
[262.14184570 199.74224854]
[274.55718994 208.16004944]
[288.36511230 201.58067322]
[303.51235962 202.78813171]
[315.93887329 211.35830688]
[322.36422729 224.90713501]
[321.15325928 239.75297546]
[333.56860352 248.17079163]
[349.04055786 244.94677734]
[362.21463013 253.67713928]
[365.27487183 269.18231201]
[356.40570068 282.26333618]
[340.86904907 285.15951538]
[327.88250732 276.15252686]
[325.15078735 260.58612061]
[312.73544312 252.16831970]
[299.39224243 258.78829956]
[284.42742920 257.83422852]
[271.86639404 249.46241760]
[265.13812256 235.83792114]
[266.13937378 220.57539368]
[253.72404480 212.15757751]
[241.30870056 203.73977661]
[228.89337158 195.32197571]
[216.47802734 186.90415955]
[204.06269836 178.48635864]
[191.64736938 170.06855774]
[179.23202515 161.65074158]
[164.69822693 164.70103455]
[151.98739624 156.34104919]
[148.88652039 141.07597351]
[136.47117615 132.65817261]
[124.05584717 124.24036407]
[111.64051056 115.82256317]
[118.50028229 129.16210938]
[129.46951294 139.39323425]
[135.53855896 153.11062622]
[135.73187256 168.10937500]
[130.01841736 181.97863770]
[119.31652832 192.48908997]
[105.34641266 197.95132446]
[90.35359192 197.48733521]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 61]
[7 60]
[8 59]
[9 58]
[10 57]
[15 54]
[16 53]
[17 52]
[18 51]
[19 50]
[20 49]
[21 48]
[22 47]
[23 46]
[24 45]
[29 40]
[32 37]
[69 147]
[70 146]
[71 145]
[72 143]
[73 142]
[74 141]
[75 140]
[76 139]
[79 133]
[80 132]
[81 131]
[82 130]
[83 128]
[84 127]
[87 122]
[88 121]
[89 120]
[90 119]
[92 117]
[93 116]
[94 115]
[95 114]
[98 111]
[99 107]
[100 106]
[101 105]
[149 194]
[150 193]
[151 192]
[152 191]
[155 188]
[156 187]
[157 186]
[158 185]
[159 184]
[160 183]
[161 182]
[162 181]
[167 176]
[168 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
