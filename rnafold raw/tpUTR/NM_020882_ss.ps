%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 18:33:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGGACAUUUUCUGCACUGCCCCGAGGAACGCUGAGCCUUCCUCCCUGGGUUUGUCUGGACACCGAGAGCGACCACAUCCUGGAGAAGCCAGGAGAAAAGCUCAGGAAGAGCCUGCAGGUGGAAGGAGAGGGAAGCAGCGGCCUCGGCCAAGGCCCACCCCAUACUCUUGGCUCUGUAGCAUUUCCAAGUUCAGAUAAACCCCUGAGUGCUCACCCA\
) } def
/len { sequence length } bind def

/coor [
[4.01293755 530.26049805]
[-10.30080795 535.05834961]
[-25.37825966 535.81530762]
[-40.10057449 532.47521973]
[-53.37525177 525.28594971]
[-64.21723175 514.78100586]
[-71.82196045 501.73989868]
[-75.62511444 487.13034058]
[-75.34448242 472.03652954]
[-71.00088501 457.57846069]
[-62.91664505 444.82904053]
[-51.69166946 434.73434448]
[-38.15892029 428.04351807]
[-23.32262611 425.25302124]
[-22.02725410 410.30905151]
[-20.73188210 395.36508179]
[-19.43651009 380.42111206]
[-18.14113808 365.47717285]
[-24.60000038 361.66494751]
[-27.85967445 376.30645752]
[-42.79191208 377.73062134]
[-48.76051712 363.96923828]
[-37.51773071 354.04046631]
[-43.97659302 350.22824097]
[-56.43360519 358.58425903]
[-68.89061737 366.94027710]
[-81.34762573 375.29626465]
[-93.80464172 383.65228271]
[-106.26165009 392.00830078]
[-113.41204834 406.12149048]
[-128.29183960 406.78585815]
[-140.74884033 415.14184570]
[-150.53451538 428.98660278]
[-166.54714966 423.41598511]
[-165.62695312 406.48703003]
[-149.10485840 402.68484497]
[-136.64784241 394.32882690]
[-130.38844299 380.81332397]
[-114.61766052 379.55126953]
[-102.16064453 371.19528198]
[-89.70363617 362.83926392]
[-77.24662018 354.48324585]
[-64.78961182 346.12725830]
[-52.33259964 337.77124023]
[-50.21104050 317.23779297]
[-38.86496735 301.60330200]
[-22.41253853 294.31597900]
[-5.84194231 296.15692139]
[0.83274823 282.72381592]
[7.50743866 269.29067993]
[14.18212891 255.85757446]
[20.85681915 242.42446899]
[27.53150940 228.99136353]
[34.20619965 215.55824280]
[40.88088989 202.12513733]
[47.55558014 188.69201660]
[54.23027039 175.25891113]
[60.90496063 161.82579041]
[67.57965088 148.39268494]
[74.25434113 134.95956421]
[80.92903137 121.52645874]
[76.30146790 116.29323578]
[73.07218933 110.09867096]
[71.43173981 103.30824280]
[71.47690582 96.32262421]
[73.20502472 89.55397797]
[76.51413727 83.40167999]
[66.94611359 71.84949493]
[57.37809372 60.29730988]
[47.81007385 48.74512482]
[35.25050735 52.83296585]
[22.08108902 52.41207123]
[9.86751556 47.55418015]
[0.05447680 38.85725784]
[-6.20523405 27.37196541]
[-8.18612003 14.47476292]
[-5.67400885 1.70296133]
[1.01101983 -9.42852020]
[-8.22011662 -21.25163841]
[-17.45125198 -33.07475662]
[-26.68238831 -44.89787292]
[-35.91352463 -56.72099304]
[-45.14466095 -68.54411316]
[-60.82773590 -71.92357635]
[-67.83446503 -86.35566711]
[-60.78988647 -100.76932526]
[-45.09799957 -104.10762024]
[-32.79627228 -93.80970001]
[-33.32154465 -77.77524567]
[-24.09040642 -65.95212555]
[-14.85927105 -54.12900925]
[-5.62813473 -42.30589294]
[3.60300159 -30.48277473]
[12.83413792 -18.65965652]
[29.23769188 -22.72557068]
[45.82204056 -19.19816971]
[59.23828888 -8.74023056]
[66.75566101 6.58101416]
[66.81726074 23.70237541]
[59.36225891 39.17710495]
[68.93027496 50.72929001]
[78.49829865 62.28147507]
[88.06632233 73.83365631]
[105.15262604 71.70617676]
[120.39198303 79.72052765]
[133.41824341 72.28301239]
[146.44450378 64.84550476]
[159.47076416 57.40798950]
[172.49702454 49.97047806]
[180.64491272 36.40867615]
[195.53390503 36.81726456]
[208.56016541 29.37975311]
[214.45707703 22.41077232]
[221.82817078 21.93046761]
[234.96025085 14.68144226]
[248.09233093 7.43241644]
[261.22442627 0.18339115]
[274.35650635 -7.06563425]
[287.48858643 -14.31466007]
[293.48532104 -21.19793892]
[300.86254883 -21.57197380]
[305.55880737 -36.42400742]
[319.08172607 -43.39432907]
[333.21194458 -38.82563400]
[346.44711304 -45.88466644]
[359.68231201 -52.94369888]
[372.91748047 -60.00273132]
[386.15264893 -67.06176758]
[396.03628540 -84.63485718]
[415.31704712 -83.13314819]
[428.34332275 -90.57065582]
[441.36956787 -98.00817108]
[445.66412354 -116.46419525]
[461.81091309 -125.75612640]
[479.31481934 -120.38339996]
[492.12133789 -128.19322205]
[493.49414062 -143.53666687]
[503.52124023 -154.99575806]
[518.19958496 -158.31401062]
[531.85375977 -152.42330933]
[544.66027832 -160.23312378]
[557.46679688 -168.04293823]
[564.84368896 -182.68920898]
[581.22943115 -183.35350037]
[589.76770020 -169.35244751]
[581.67510986 -155.08912659]
[565.27661133 -155.23641968]
[552.47009277 -147.42660522]
[539.66357422 -139.61679077]
[538.64923096 -124.78072357]
[528.97888184 -113.25039673]
[514.20056152 -109.58236694]
[499.93115234 -115.38670349]
[487.12463379 -107.57688904]
[486.90533447 -96.17604828]
[481.15225220 -86.19223785]
[471.19332886 -80.16148376]
[459.44076538 -79.67967224]
[448.80709839 -84.98191071]
[435.78082275 -77.54439545]
[422.75457764 -70.10688782]
[420.96203613 -60.05355453]
[413.78298950 -52.48552322]
[403.41070557 -50.06546021]
[393.21170044 -53.82658386]
[379.97650146 -46.76755142]
[366.74133301 -39.70851898]
[353.50613403 -32.64948273]
[340.27096558 -25.59045219]
[336.19363403 -11.31070805]
[322.87185669 -3.96330428]
[307.92160034 -8.33679104]
[294.73760986 -1.18257582]
[281.60552979 6.06644964]
[268.47344971 13.31547546]
[255.34135437 20.56450081]
[242.20927429 27.81352615]
[229.07719421 35.06255341]
[215.99768066 42.40600967]
[202.97142029 49.84352493]
[195.75526428 62.87334442]
[179.93453979 62.99673462]
[166.90827942 70.43424988]
[153.88201904 77.87175751]
[140.85575867 85.30927277]
[127.82949829 92.74678802]
[126.26673889 111.71104431]
[113.20487213 125.54841614]
[94.36214447 128.20114136]
[87.68745422 141.63426208]
[81.01276398 155.06736755]
[74.33807373 168.50048828]
[67.66338348 181.93359375]
[60.98869324 195.36671448]
[54.31400299 208.79981995]
[47.63931274 222.23294067]
[40.96462250 235.66604614]
[34.28993225 249.09915161]
[27.61524200 262.53225708]
[20.94055176 275.96539307]
[14.26586056 289.39849854]
[7.59117031 302.83160400]
[19.45957375 316.07061768]
[22.66836929 334.99404907]
[14.76686764 354.02801514]
[-3.19717479 366.77252197]
[-4.49254704 381.71649170]
[-5.78791952 396.66046143]
[-7.08329153 411.60443115]
[-8.37866402 426.54837036]
[5.75617695 431.85015869]
[17.93577576 440.76980591]
[27.25632477 452.64541626]
[33.02617645 466.59573364]
[34.81717300 481.58554077]
[32.49641037 496.50253296]
[26.23609924 510.23974609]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 210]
[15 209]
[16 208]
[17 207]
[18 206]
[24 44]
[25 43]
[26 42]
[27 41]
[28 40]
[29 39]
[31 37]
[32 36]
[48 202]
[49 201]
[50 200]
[51 199]
[52 198]
[53 197]
[54 196]
[55 195]
[56 194]
[57 193]
[58 192]
[59 191]
[60 190]
[61 189]
[67 103]
[68 102]
[69 101]
[70 100]
[78 94]
[79 93]
[80 92]
[81 91]
[82 90]
[83 89]
[105 186]
[106 185]
[107 184]
[108 183]
[109 182]
[111 180]
[112 179]
[114 178]
[115 177]
[116 176]
[117 175]
[118 174]
[119 173]
[121 172]
[124 169]
[125 168]
[126 167]
[127 166]
[128 165]
[130 161]
[131 160]
[132 159]
[135 154]
[136 153]
[140 149]
[141 148]
[142 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
