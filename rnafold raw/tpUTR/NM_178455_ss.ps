%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 10:39:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGAUGUGAACUCAUGAAGUUGUCUGCUGCACCAUCCGAAAUAAAGACACAAGAAAAUUCAGACUGAUUUUGAAAUCUUUGUAAUAUUUCCAUAAUGCUUUAAGCUUCCAUAUGUUUGCUAUUUUCCUGACCCUAGUUUUGUCUUUCCUGGAAAUUAACUGUAUGAUCAUUAGAAUGAAAGAGUCUUUCUGUCA\
) } def
/len { sequence length } bind def

/coor [
[78.84042358 97.42034912]
[65.54143524 90.48227692]
[52.24244690 83.54420471]
[38.94345474 76.60613251]
[25.64446640 69.66805267]
[12.34547615 62.72998047]
[-1.00868917 55.89870834]
[-14.41717243 49.17467880]
[-27.82565689 42.45065308]
[-41.23413849 35.72662354]
[-54.64262390 29.00259399]
[-68.05110931 22.27856445]
[-82.88668060 27.02656364]
[-96.38900757 20.01643372]
[-100.82406616 5.84372044]
[-114.23255157 -0.88030875]
[-127.64103699 -7.60433769]
[-141.10298157 -14.22069263]
[-154.61750793 -20.72894859]
[-168.13204956 -27.23720551]
[-181.64657593 -33.74546051]
[-195.16110229 -40.25371552]
[-204.15872192 -32.25446320]
[-215.29658508 -27.77560806]
[-227.25799561 -27.32142830]
[-238.63739014 -30.92189217]
[-248.10545349 -38.13188171]
[-254.56448364 -48.08607864]
[-257.27554321 -59.60277176]
[-255.94306946 -71.32412720]
[-269.12915039 -78.47446442]
[-282.31524658 -85.62480164]
[-293.45739746 -76.91938019]
[-307.03549194 -73.13192749]
[-320.98886108 -74.80292511]
[-333.21307373 -81.64707184]
[-341.87707520 -92.60134125]
[-345.69760132 -105.98999786]
[-344.12918091 -119.78086090]
[-357.19894409 -127.14162445]
[-370.26873779 -134.50238037]
[-383.33853149 -141.86314392]
[-396.40829468 -149.22390747]
[-409.47808838 -156.58467102]
[-421.95410156 -151.48916626]
[-434.89712524 -154.46990967]
[-443.62780762 -164.21917725]
[-445.12274170 -177.02467346]
[-458.07287598 -184.59397888]
[-471.02297974 -192.16326904]
[-480.02334595 -193.79556274]
[-484.11862183 -199.95909119]
[-496.94577026 -207.73498535]
[-509.77291870 -215.51087952]
[-522.60003662 -223.28675842]
[-533.01220703 -220.08712769]
[-543.25366211 -223.09104919]
[-550.00384521 -231.07250977]
[-551.21374512 -241.23420715]
[-563.78509521 -249.41723633]
[-576.35644531 -257.60025024]
[-588.92773438 -265.78326416]
[-601.49908447 -273.96630859]
[-614.07037354 -282.14932251]
[-630.00067139 -280.25067139]
[-641.31579590 -291.62380981]
[-639.33575439 -307.54418945]
[-625.57940674 -315.79910278]
[-610.59954834 -310.05606079]
[-605.88732910 -294.72064209]
[-593.31604004 -286.53762817]
[-580.74468994 -278.35461426]
[-568.17340088 -270.17156982]
[-555.60205078 -261.98855591]
[-543.03076172 -253.80552673]
[-523.70581055 -254.20121765]
[-514.82415771 -236.11390686]
[-501.99703979 -228.33801270]
[-489.16989136 -220.56213379]
[-476.34274292 -212.78623962]
[-463.45370483 -205.11340332]
[-450.50357056 -197.54409790]
[-437.55343628 -189.97480774]
[-421.48925781 -194.93382263]
[-406.51104736 -186.58094788]
[-402.11730957 -169.65444946]
[-389.04754639 -162.29368591]
[-375.97775269 -154.93292236]
[-362.90798950 -147.57217407]
[-349.83819580 -140.21141052]
[-336.76840210 -132.85064697]
[-323.84542847 -142.24021912]
[-308.06454468 -145.06738281]
[-292.57360840 -140.71667480]
[-280.48513794 -130.00958252]
[-274.25094604 -115.04998016]
[-275.16488647 -98.81088257]
[-261.97882080 -91.66054535]
[-248.79273987 -84.51020813]
[-233.81442261 -94.68513489]
[-215.66032410 -95.86529541]
[-199.33895874 -87.63872528]
[-189.39700317 -72.20062256]
[-188.65284729 -53.76824951]
[-175.13832092 -47.25999451]
[-161.62379456 -40.75173950]
[-148.10925293 -34.24348068]
[-134.59472656 -27.73522568]
[-127.19501495 -27.66544724]
[-120.91700745 -21.01282120]
[-107.50852203 -14.28879261]
[-94.10003662 -7.56476355]
[-80.08917999 -12.48729134]
[-66.39527893 -5.85917854]
[-61.32707977 8.87008095]
[-47.91859436 15.59410954]
[-34.51011276 22.31813812]
[-21.10162735 29.04216766]
[-7.69314384 35.76619720]
[5.71533966 42.49022675]
[13.11298084 42.67859650]
[19.28355026 49.43099213]
[32.58253860 56.36906433]
[45.88153076 63.30714035]
[59.18051910 70.24521637]
[72.47950745 77.18328857]
[85.77849579 84.12136078]
[107.74822998 72.92707825]
[133.61209106 90.22900391]
[148.56394958 91.42985535]
[163.51579285 92.63071442]
[177.89109802 86.02304840]
[189.95809937 94.75441742]
[207.74470520 85.28491974]
[223.18367004 96.91450500]
[238.16633606 97.63551331]
[253.14900208 98.35651398]
[268.13165283 99.07752228]
[283.11431885 99.79853058]
[293.51651001 86.46849060]
[309.65289307 82.00508881]
[325.11669922 87.97512817]
[333.88989258 101.84312439]
[348.88220215 102.32389832]
[363.87448120 102.80467224]
[376.51293945 92.92290497]
[392.08471680 96.78286743]
[398.64447021 111.42353058]
[391.16015625 125.61382294]
[375.37307739 128.46817017]
[363.39370728 117.79695892]
[348.40142822 117.31618500]
[333.40911865 116.83541107]
[326.22842407 128.09877014]
[314.32293701 134.39085388]
[300.75521851 133.97203064]
[289.07562256 126.84484863]
[282.39331055 114.78118896]
[267.41064453 114.06018829]
[252.42799377 113.33917999]
[237.44532776 112.61817169]
[222.46266174 111.89716339]
[215.53504944 119.42923737]
[205.39065552 121.95123291]
[195.32801819 118.39390564]
[188.75724792 109.70626831]
[175.45140076 116.39983368]
[162.31494141 107.58256531]
[147.36308289 106.38171387]
[132.41123962 105.18086243]
[127.97371674 111.22721863]
[134.00909424 124.95945740]
[119.09868622 123.31993866]
[114.66117859 129.36630249]
[120.29017639 143.27005005]
[134.56642151 149.50115967]
[140.07696533 163.68173218]
[134.04856873 177.25354004]
[139.67758179 191.15728760]
[145.30657959 205.06105042]
[150.93559265 218.96479797]
[156.56459045 232.86854553]
[168.11294556 245.28111267]
[159.38237000 259.81430054]
[143.00028992 255.44810486]
[142.66084290 238.49755859]
[137.03182983 224.59379578]
[131.40283203 210.69004822]
[125.77382660 196.78630066]
[120.14482117 182.88255310]
[106.37265778 177.32708740]
[100.46598053 163.30690002]
[106.38642883 148.89904785]
[100.75742340 134.99530029]
[84.09894562 125.95796204]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 127]
[2 126]
[3 125]
[4 124]
[5 123]
[6 122]
[7 120]
[8 119]
[9 118]
[10 117]
[11 116]
[12 115]
[15 112]
[16 111]
[17 110]
[18 108]
[19 107]
[20 106]
[21 105]
[22 104]
[30 99]
[31 98]
[32 97]
[39 91]
[40 90]
[41 89]
[42 88]
[43 87]
[44 86]
[48 83]
[49 82]
[50 81]
[52 80]
[53 79]
[54 78]
[55 77]
[59 75]
[60 74]
[61 73]
[62 72]
[63 71]
[64 70]
[129 170]
[130 169]
[131 168]
[133 166]
[135 162]
[136 161]
[137 160]
[138 159]
[139 158]
[143 153]
[144 152]
[145 151]
[174 194]
[175 193]
[178 190]
[179 189]
[180 188]
[181 187]
[182 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
