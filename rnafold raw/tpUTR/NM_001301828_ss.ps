%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 13:44:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCUGGUGAAGACCACCUGGGCCGGAAGAGGAACUGGGGGCACCCUGAGCUCCAGUACCACCACUCACAACAGGCCUCCCAGUGGCAGCUCCCAGACCUGGGCCCUGGCCAGGGCUCUAGGGGCCGGCAGUCUUGGGGUGGGCCCUGCCAAUUGGGACGAGUAUCCCUGAUUUGUGAAAAUGAUGGAAAAACGUUCAGUCUCAAGAGUCCAAUUCC\
) } def
/len { sequence length } bind def

/coor [
[-70.33117676 584.07153320]
[-75.23408508 598.24761963]
[-80.13700104 612.42370605]
[-85.03990936 626.59979248]
[-89.84007263 640.81103516]
[-94.53724670 655.05657959]
[-99.23441315 669.30218506]
[-103.93158722 683.54772949]
[-98.02338409 698.46325684]
[-106.12578583 712.30993652]
[-122.02333069 714.46582031]
[-133.52076721 703.27703857]
[-131.79826355 687.32672119]
[-118.17716980 678.85058594]
[-113.47999573 664.60498047]
[-108.78282928 650.35943604]
[-104.08565521 636.11383057]
[-104.97598267 628.78039551]
[-99.21599579 621.69689941]
[-94.31308746 607.52081299]
[-89.41017914 593.34472656]
[-84.50726318 579.16864014]
[-87.65953064 564.61138916]
[-75.83648682 554.09826660]
[-70.93357849 539.92218018]
[-66.03067017 525.74609375]
[-61.12775803 511.57000732]
[-67.84951019 498.32788086]
[-63.07920837 483.88146973]
[-49.14408493 476.92086792]
[-44.24117661 462.74478149]
[-39.33826447 448.56869507]
[-43.58530045 431.53939819]
[-29.56633186 419.59677124]
[-24.86915970 405.35119629]
[-28.23183823 390.84112549]
[-16.56223106 380.15792847]
[-11.86506081 365.91235352]
[-7.16789007 351.66677856]
[-2.47071958 337.42117310]
[2.22645116 323.17559814]
[1.09058833 320.61746216]
[0.89727813 317.45623779]
[1.88092673 314.04782104]
[4.14319754 310.82623291]
[7.62981176 308.25537109]
[13.14360237 294.30551147]
[18.65739250 280.35568237]
[24.17118454 266.40582275]
[29.68497467 252.45599365]
[19.23868179 243.08850098]
[12.60256672 230.69189453]
[10.59150124 216.74519348]
[13.46715927 202.92030334]
[20.90417290 190.88151550]
[32.02680969 182.08525085]
[45.51205063 177.60377502]
[59.74694443 177.99458313]
[65.46211243 164.12603760]
[71.17727661 150.25747681]
[68.87282562 135.54222107]
[81.28451538 125.73097992]
[86.99967957 111.86241913]
[83.63310242 93.53084564]
[98.62323761 82.45491791]
[103.93450165 68.42671204]
[109.24576569 54.39851379]
[114.55702972 40.37030792]
[119.86829376 26.34210587]
[125.17955780 12.31390285]
[130.28717041 -1.78972113]
[135.19009399 -15.96580887]
[140.09300232 -30.14189720]
[144.99591064 -44.31798553]
[149.27868652 -58.69358063]
[145.13679504 -73.96300507]
[155.74179077 -84.42165375]
[159.39636230 -98.96964264]
[163.05094910 -113.51763916]
[166.70552063 -128.06562805]
[170.36009216 -142.61361694]
[174.01467896 -157.16160583]
[177.66925049 -171.70960999]
[181.21842957 -186.28367615]
[184.66200256 -200.88304138]
[188.10559082 -215.48242188]
[191.54917908 -230.08178711]
[194.99275208 -244.68116760]
[186.94503784 -258.01803589]
[190.64529419 -272.77481079]
[203.40954590 -280.36489868]
[206.85313416 -294.96426392]
[210.29672241 -309.56365967]
[213.74029541 -324.16302490]
[205.69258118 -337.49987793]
[209.39283752 -352.25668335]
[222.15708923 -359.84674072]
[225.60067749 -374.44613647]
[221.23815918 -389.65399170]
[231.69064331 -400.26507568]
[235.13423157 -414.86444092]
[238.57780457 -429.46380615]
[242.02139282 -444.06320190]
[236.31460571 -461.57290649]
[248.83802795 -473.86917114]
[252.06990051 -488.51687622]
[255.30177307 -503.16455078]
[258.53363037 -517.81225586]
[261.76550293 -532.45996094]
[264.99737549 -547.10766602]
[253.25482178 -556.92456055]
[247.43017578 -571.07843018]
[248.86186218 -586.31677246]
[257.22091675 -599.13806152]
[270.58651733 -606.59594727]
[285.88726807 -606.97668457]
[299.60723877 -600.19281006]
[308.59365845 -587.80316162]
[310.78149414 -572.65484619]
[305.66802979 -558.22882080]
[294.42828369 -547.84002686]
[279.64508057 -543.87579346]
[276.41320801 -529.22808838]
[273.18133545 -514.58038330]
[269.94946289 -499.93270874]
[266.71759033 -485.28500366]
[263.48571777 -470.63729858]
[269.72821045 -460.27920532]
[267.15878296 -448.05178833]
[256.62075806 -440.61959839]
[253.17718506 -426.02023315]
[249.73359680 -411.42086792]
[246.29002380 -396.82147217]
[250.89883423 -382.65786743]
[240.20005798 -371.00253296]
[236.75646973 -356.40316772]
[244.78341675 -343.90902710]
[241.49911499 -329.05413818]
[228.33967590 -320.71945190]
[224.89608765 -306.12005615]
[221.45251465 -291.52069092]
[218.00892639 -276.92132568]
[226.03587341 -264.42718506]
[222.75157166 -249.57226562]
[209.59213257 -241.23757935]
[206.14854431 -226.63821411]
[202.70497131 -212.03883362]
[199.26138306 -197.43945312]
[195.81779480 -182.84008789]
[197.34097290 -175.61155701]
[192.21723938 -168.05502319]
[188.56266785 -153.50703430]
[184.90809631 -138.95904541]
[181.25350952 -124.41104889]
[177.59893799 -109.86306000]
[173.94436646 -95.31507111]
[170.28977966 -80.76707458]
[174.69308472 -66.53822327]
[163.82667542 -55.03900528]
[177.20695496 -61.81900024]
[191.50357056 -57.27953339]
[198.52171326 -44.02262115]
[194.23857117 -29.64712906]
[181.10925293 -22.39308739]
[166.65948486 -26.41851425]
[159.17199707 -39.41507721]
[154.26908875 -25.23898697]
[149.36618042 -11.06289959]
[144.46327209 3.11318874]
[145.70611572 7.72029161]
[144.07116699 13.15718079]
[139.20776367 17.62516594]
[133.89649963 31.65336800]
[128.58523560 45.68157196]
[123.27397156 59.70977402]
[117.96270752 73.73797607]
[112.65144348 87.76618195]
[117.26170349 96.57086182]
[116.36689758 106.46915436]
[110.25240326 114.30432129]
[100.86824036 117.57758331]
[95.15307617 131.44613647]
[97.04873657 147.15336609]
[85.04582977 155.97264099]
[79.33066559 169.84120178]
[73.61550140 183.70974731]
[85.07898712 194.98648071]
[91.32151031 209.76377869]
[91.41416931 225.76670837]
[85.37236023 240.54394531]
[74.14888763 251.84327698]
[59.48382950 257.95480347]
[43.63481903 257.96978760]
[38.12102890 271.91961670]
[32.60723495 285.86947632]
[27.09344482 299.81930542]
[21.57965469 313.76916504]
[16.47203255 327.87277222]
[11.77486229 342.11834717]
[7.07769108 356.36395264]
[2.38052058 370.60952759]
[-2.31665015 384.85510254]
[0.71005499 400.38409424]
[-10.62357903 410.04837036]
[-15.32074928 424.29394531]
[-10.22321987 436.13885498]
[-14.42549610 447.90545654]
[-25.16217804 453.47158813]
[-30.06508827 467.64767456]
[-34.96799850 481.82379150]
[-28.31083488 495.90640259]
[-33.48502731 510.21310425]
[-46.95167160 516.47290039]
[-51.85457993 530.64898682]
[-56.75749207 544.82507324]
[-61.66040039 559.00115967]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 22]
[2 21]
[3 20]
[4 19]
[5 17]
[6 16]
[7 15]
[8 14]
[24 216]
[25 215]
[26 214]
[27 213]
[30 210]
[31 209]
[32 208]
[34 205]
[35 204]
[37 202]
[38 201]
[39 200]
[40 199]
[41 198]
[46 197]
[47 196]
[48 195]
[49 194]
[50 193]
[58 186]
[59 185]
[60 184]
[62 182]
[63 181]
[65 177]
[66 176]
[67 175]
[68 174]
[69 173]
[70 172]
[71 169]
[72 168]
[73 167]
[74 166]
[75 159]
[77 157]
[78 156]
[79 155]
[80 154]
[81 153]
[82 152]
[83 151]
[84 149]
[85 148]
[86 147]
[87 146]
[88 145]
[91 142]
[92 141]
[93 140]
[94 139]
[97 136]
[98 135]
[100 133]
[101 132]
[102 131]
[103 130]
[105 127]
[106 126]
[107 125]
[108 124]
[109 123]
[110 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
