%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 10:37:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUGUAAAAAGCUAAAAGGCACGACUUUUUCCAGAGCCUCAUGAGUGGAUGGGGGUAAGGGGUGCAACUUAUUAAUUCUUGAACAUACUUGGUUCAGGAGAGUUUGUAAGUAUGUGUGGUCUUGUUUCCUUGUUUGUUUGUUUGUUUUGUUCUGUUUUGUUUGAGGAUUGUUAUUUGGCGUGCUGUUUUCUACCUCUGGUCUUAUCUGUGAUACAUAAUUUCAAAUAAACAUUAUCAUACAAAAACA\
) } def
/len { sequence length } bind def

/coor [
[168.20396423 161.09942627]
[164.50762939 175.63685608]
[154.83409119 187.10083008]
[141.12550354 193.18971252]
[126.13413239 192.68103027]
[112.86979675 185.67692566]
[103.99558258 173.58361816]
[101.29316711 158.82905579]
[105.30372620 144.37808228]
[103.69730377 129.46435547]
[102.09087372 114.55062866]
[96.35062408 128.40881348]
[90.61037445 142.26701355]
[93.28617859 158.44638062]
[80.44235229 168.64285278]
[65.29151154 162.36717224]
[63.41955185 146.07522583]
[76.75218201 136.52676392]
[82.49243164 122.66856384]
[88.23268127 108.81037140]
[76.55116272 118.22006226]
[66.92374420 129.72279358]
[52.96221161 135.20690918]
[38.07989120 133.33166504]
[25.91522598 124.55550385]
[19.44224167 111.02404785]
[20.24345589 96.04545593]
[28.12299156 83.28172302]
[41.15444946 75.85332489]
[56.15189362 75.57637024]
[69.44990540 82.51961517]
[83.84314728 86.74270630]
[73.23654938 76.13610077]
[62.62994766 65.52950287]
[52.02334595 54.92290115]
[41.41674423 44.31629944]
[30.81014061 33.70969772]
[19.93824959 23.37519264]
[4.37377644 23.99562073]
[-6.77058506 13.63908386]
[-7.26615000 -1.20308590]
[-18.39635277 -11.25885868]
[-29.52655792 -21.31463051]
[-40.65676117 -31.37040329]
[-51.78696442 -41.42617798]
[-62.91716766 -51.48194885]
[-74.04737091 -61.53772354]
[-85.17757416 -71.59349823]
[-96.30777740 -81.64926910]
[-107.43798065 -91.70503998]
[-118.56818390 -101.76081085]
[-129.69839478 -111.81658173]
[-140.82859802 -121.87236023]
[-151.95880127 -131.92813110]
[-163.08900452 -141.98390198]
[-180.55282593 -140.78411865]
[-193.22329712 -152.36685181]
[-193.57713318 -169.19184875]
[-204.83383179 -179.10581970]
[-216.09051514 -189.01979065]
[-227.34721375 -198.93377686]
[-242.81732178 -202.24832153]
[-247.25462341 -216.46659851]
[-258.51132202 -226.38056946]
[-269.76800537 -236.29455566]
[-281.02468872 -246.20852661]
[-292.46774292 -255.90682983]
[-304.09295654 -265.38595581]
[-315.71820068 -274.86508179]
[-327.34344482 -284.34423828]
[-338.96865845 -293.82336426]
[-350.59390259 -303.30249023]
[-366.17877197 -306.02685547]
[-371.15307617 -320.06628418]
[-382.77832031 -329.54541016]
[-394.40356445 -339.02456665]
[-406.02880859 -348.50369263]
[-417.65402222 -357.98281860]
[-429.27926636 -367.46194458]
[-441.02365112 -376.79306030]
[-452.88528442 -385.97463989]
[-464.74691772 -395.15621948]
[-476.60855103 -404.33782959]
[-488.47018433 -413.51940918]
[-503.71182251 -410.02273560]
[-517.61157227 -417.18722534]
[-523.60644531 -431.63006592]
[-518.86584473 -446.53176880]
[-505.62811279 -454.85620117]
[-490.14370728 -452.67282104]
[-479.72387695 -441.01257324]
[-479.28860474 -425.38104248]
[-467.42697144 -416.19946289]
[-455.56533813 -407.01788330]
[-443.70367432 -397.83627319]
[-431.84204102 -388.65469360]
[-427.09768677 -388.35406494]
[-422.48571777 -385.08581543]
[-419.80014038 -379.08718872]
[-408.17489624 -369.60806274]
[-396.54965210 -360.12890625]
[-384.92443848 -350.64978027]
[-373.29919434 -341.17065430]
[-361.67395020 -331.69152832]
[-346.92059326 -329.64514160]
[-341.11477661 -314.92770386]
[-329.48953247 -305.44857788]
[-317.86431885 -295.96945190]
[-306.23907471 -286.49032593]
[-294.61383057 -277.01119995]
[-282.98858643 -267.53207397]
[-279.48550415 -267.51296997]
[-275.81576538 -265.81115723]
[-272.76342773 -262.36569214]
[-271.11071777 -257.46520996]
[-259.85403442 -247.55123901]
[-248.59735107 -237.63726807]
[-237.34065247 -227.72329712]
[-222.67568970 -225.11785889]
[-217.43324280 -210.19046021]
[-206.17654419 -200.27648926]
[-194.91986084 -190.36251831]
[-183.66316223 -180.44853210]
[-171.05883789 -183.05570984]
[-159.07228088 -177.85647583]
[-152.16056824 -166.54025269]
[-153.03323364 -153.11410522]
[-141.90303040 -143.05833435]
[-130.77282715 -133.00256348]
[-119.64261627 -122.94679260]
[-108.51241302 -112.89101410]
[-97.38220978 -102.83524323]
[-86.25200653 -92.77947235]
[-75.12180328 -82.72370148]
[-63.99160004 -72.66792297]
[-52.86139679 -62.61215210]
[-41.73119354 -52.55638123]
[-30.60098839 -42.50060654]
[-19.47078514 -32.44483566]
[-8.34058094 -22.38906288]
[2.78962278 -12.33329010]
[17.60577774 -13.34182453]
[29.03663635 -3.30239534]
[29.99402237 12.24498940]
[32.77429199 12.25132084]
[35.71984863 13.34587669]
[38.42107010 15.59710503]
[40.45104980 18.92575645]
[41.41674423 23.10309601]
[52.02334595 33.70969772]
[62.62994766 44.31629944]
[73.23654938 54.92290115]
[83.84314728 65.52950287]
[94.44975281 76.13610077]
[127.68434906 91.28527069]
[141.81549072 96.31624603]
[155.94664001 101.34722137]
[170.07778931 106.37820435]
[184.20892334 111.40917969]
[198.34007263 116.44015503]
[213.93597412 113.77958679]
[223.33094788 125.33742523]
[237.46209717 130.36840820]
[251.59324646 135.39938354]
[262.34268188 126.79347992]
[275.83270264 124.63374329]
[288.52896118 129.37786865]
[297.15829468 139.68881226]
[299.55252075 152.80946350]
[313.61880493 158.01904297]
[327.68505859 163.22862244]
[341.75134277 168.43820190]
[355.85034180 173.55859375]
[369.98150635 178.58956909]
[384.11264038 183.62054443]
[398.24377441 188.65151978]
[412.37493896 193.68249512]
[426.50607300 198.71347046]
[442.10195923 196.05290222]
[451.49694824 207.61074829]
[465.62811279 212.64172363]
[479.77035522 206.11225891]
[494.02969360 211.41567993]
[500.16738892 224.93841553]
[514.29852295 229.96939087]
[528.42968750 235.00036621]
[540.37823486 230.18527222]
[552.03479004 234.64855957]
[557.35791016 245.49397278]
[571.42419434 250.70355225]
[580.60638428 238.69612122]
[592.92083740 229.92999268]
[607.27264404 225.18466187]
[622.38549805 224.88208008]
[636.91571045 229.04914856]
[649.57122803 237.31532288]
[659.22668457 248.94560242]
[665.02362061 262.90582275]
[666.44641113 277.95462036]
[663.36871338 292.75393677]
[656.06408691 305.98776245]
[645.18212891 316.47937012]
[631.69036865 323.29586792]
[616.78857422 325.83111572]
[601.80175781 323.85971069]
[588.06256104 317.55691528]
[576.79260254 307.48318481]
[568.99407959 294.53430176]
[565.36035156 279.86160278]
[566.21459961 264.76983643]
[552.14831543 259.56027222]
[535.02056885 263.42926025]
[523.39868164 249.13151550]
[509.26754761 244.10054016]
[495.13641357 239.06956482]
[481.83401489 245.67121887]
[467.43136597 240.77040100]
[460.59710693 226.77287292]
[446.46597290 221.74188232]
[431.88082886 224.76231384]
[421.47509766 212.84461975]
[407.34396362 207.81364441]
[393.21279907 202.78266907]
[379.08166504 197.75169373]
[364.95053101 192.72070312]
[350.81936646 187.68972778]
[343.48181152 188.40541077]
[336.54177856 182.50448608]
[322.47549438 177.29490662]
[308.40921021 172.08532715]
[294.34292603 166.87574768]
[280.96868896 176.41362000]
[264.37866211 176.08825684]
[251.12553406 165.82971191]
[246.56225586 149.53051758]
[232.43112183 144.49954224]
[218.29997253 139.46856689]
[203.71482849 142.48898315]
[193.30909729 130.57130432]
[179.17794800 125.54032135]
[165.04679871 120.50934601]
[150.91566467 115.47837067]
[136.78451538 110.44738770]
[122.65336609 105.41641235]
[132.64263916 116.60634613]
[142.63189697 127.79627228]
[156.04557800 134.50994873]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 20]
[12 19]
[13 18]
[32 154]
[33 153]
[34 152]
[35 151]
[36 150]
[37 149]
[38 144]
[41 141]
[42 140]
[43 139]
[44 138]
[45 137]
[46 136]
[47 135]
[48 134]
[49 133]
[50 132]
[51 131]
[52 130]
[53 129]
[54 128]
[55 127]
[58 123]
[59 122]
[60 121]
[61 120]
[63 118]
[64 117]
[65 116]
[66 115]
[67 111]
[68 110]
[69 109]
[70 108]
[71 107]
[72 106]
[74 104]
[75 103]
[76 102]
[77 101]
[78 100]
[79 99]
[80 96]
[81 95]
[82 94]
[83 93]
[84 92]
[155 244]
[156 243]
[157 242]
[158 241]
[159 240]
[160 239]
[162 237]
[163 236]
[164 235]
[169 231]
[170 230]
[171 229]
[172 228]
[173 226]
[174 225]
[175 224]
[176 223]
[177 222]
[178 221]
[180 219]
[181 218]
[184 215]
[185 214]
[186 213]
[189 211]
[190 210]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
