%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 12:55:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAUUGCACAUGAGAUGGCACACAUAUUUAUGCUGUCUGAAGGUCACGAUCAUGUUACCAUAUCAAGCUGAAAAUGUCACCACUAUCUGGAGAUUUCGACGUGUUUUCCUCUCUGAAUCUGUUAUGAACACGUUGGUUGGCUGGAUUCAGUAAUAAAUAUGUAAGGCCUUUCUUUUUAA\
) } def
/len { sequence length } bind def

/coor [
[73.34699249 556.07843018]
[58.53930664 559.06329346]
[43.49063873 557.75396729]
[29.42091370 552.25677490]
[17.47070312 543.01721191]
[8.60875607 530.78436279]
[3.55347300 516.54986572]
[2.71466160 501.46765137]
[6.16032124 486.76037598]
[13.61112690 473.62030029]
[24.46307564 463.11257935]
[37.83644867 456.08908081]
[52.64712524 453.11914062]
[53.94725800 438.17559814]
[55.24739075 423.23205566]
[56.54751968 408.28848267]
[53.98801804 401.33352661]
[58.00210571 393.09762573]
[59.56140137 378.17889404]
[61.12069702 363.26016235]
[49.98284912 350.67532349]
[51.40810013 333.59158325]
[65.00193024 322.60174561]
[66.30205536 307.65820312]
[67.60218811 292.71463013]
[68.90232086 277.77108765]
[70.20245361 262.82754517]
[71.50258636 247.88398743]
[72.80271912 232.94044495]
[74.10284424 217.99690247]
[75.40297699 203.05334473]
[76.70310974 188.10980225]
[77.87350464 173.15553284]
[78.91408539 158.19166565]
[79.95465851 143.22779846]
[80.99523163 128.26394653]
[76.64245605 142.61849976]
[63.78765488 150.34857178]
[49.06779861 147.46311951]
[40.08277893 135.45190430]
[41.47158432 120.51632690]
[52.51716995 110.36768341]
[67.51859283 110.24644470]
[52.87025070 107.01750183]
[38.22190857 103.78856659]
[23.07971191 108.37380981]
[12.31636906 98.07819366]
[-2.33197403 94.84925079]
[-15.51433659 103.56710052]
[-30.98321915 100.32839203]
[-39.56120682 87.05459595]
[-36.15913391 71.62081909]
[-22.79538727 63.18365097]
[-7.39844275 66.74871063]
[0.89696634 80.20091248]
[15.54530907 83.42984772]
[29.63975716 78.61364746]
[41.45084763 89.14022064]
[56.09918976 92.36916351]
[70.74753571 95.59809875]
[79.07629395 83.49386597]
[91.10697937 78.01084900]
[102.78227234 79.39888000]
[110.01770782 66.25930023]
[117.25313568 53.11972046]
[117.13215637 37.29897690]
[130.04896545 29.88242340]
[137.28439331 16.74284363]
[144.51982117 3.60326290]
[151.75524902 -9.53631687]
[158.99067688 -22.67589760]
[166.22610474 -35.81547546]
[155.68238831 -36.38061905]
[147.33193970 -42.26102066]
[143.51545715 -51.36063385]
[145.06208801 -60.75614548]
[151.13766479 -67.63322449]
[148.80400085 -82.45057678]
[146.47033691 -97.26793671]
[136.68025208 -109.69631958]
[142.34327698 -123.47237396]
[140.00961304 -138.28973389]
[137.67596436 -153.10708618]
[125.60340881 -163.67274475]
[126.48078156 -179.69178772]
[139.63500977 -188.87577820]
[154.97531128 -184.17953491]
[160.73391724 -169.20562744]
[152.49331665 -155.44073486]
[154.82696533 -140.62338257]
[157.16062927 -125.80603027]
[166.78379822 -114.43747711]
[161.28770447 -99.60159302]
[163.62135315 -84.78423309]
[165.95501709 -69.96688080]
[175.97703552 -63.94641876]
[180.07341003 -51.87274933]
[192.00665283 -60.96108246]
[203.93989563 -70.04940796]
[215.87313843 -79.13774109]
[227.80638123 -88.22607422]
[239.73962402 -97.31439972]
[251.67286682 -106.40273285]
[263.60610962 -115.49105835]
[275.53933716 -124.57939148]
[287.47259521 -133.66772461]
[299.40582275 -142.75605774]
[297.56613159 -157.94033813]
[303.53436279 -171.91450500]
[315.61560059 -180.96490479]
[330.50521851 -182.74111938]
[344.19256592 -176.86552429]
[342.86209106 -192.23541260]
[350.07260132 -205.87403870]
[363.52328491 -213.42935181]
[378.92205811 -212.49049377]
[391.35522461 -203.35705566]
[396.85540771 -188.94346619]
[393.66754150 -173.84906006]
[382.80883789 -162.89041138]
[367.74426270 -159.56437683]
[353.28088379 -164.93228149]
[355.30706787 -150.17558289]
[349.63711548 -136.29367065]
[337.70111084 -127.05258179]
[322.64328003 -125.01333618]
[308.49417114 -130.82281494]
[296.56091309 -121.73448181]
[284.62768555 -112.64614868]
[272.69442749 -103.55782318]
[260.76119995 -94.46949005]
[248.82795715 -85.38115692]
[236.89471436 -76.29283142]
[224.96147156 -67.20449829]
[213.02822876 -58.11616898]
[201.09498596 -49.02783966]
[189.16174316 -39.93951035]
[179.36569214 -28.58004761]
[172.13026428 -15.44046783]
[164.89483643 -2.30088782]
[157.65940857 10.83869267]
[150.42398071 23.97827148]
[143.18853760 37.11785126]
[143.82705688 51.99876404]
[130.39271545 60.35515213]
[123.15728760 73.49472809]
[115.92185974 86.63430786]
[122.04438782 112.17900848]
[95.95909882 129.30451965]
[94.91852570 144.26837158]
[93.87794495 159.23223877]
[92.83737183 174.19610596]
[95.36882019 183.00148010]
[91.64665985 189.40992737]
[90.34652710 204.35348511]
[89.04639435 219.29702759]
[87.74626160 234.24057007]
[86.44613647 249.18412781]
[85.14600372 264.12768555]
[83.84587097 279.07122803]
[82.54573822 294.01477051]
[81.24560547 308.95831299]
[79.94547272 323.90188599]
[89.74742889 333.16314697]
[92.37874603 346.19046021]
[87.09685516 358.17367554]
[76.03942871 364.81945801]
[74.48013306 379.73818970]
[72.92083740 394.65692139]
[71.49107361 409.58862305]
[70.19094086 424.53216553]
[68.89080811 439.47573853]
[67.59067535 454.41928101]
[81.66591644 459.90237427]
[93.62540436 469.12991333]
[102.49963379 481.35385132]
[107.56921387 495.58325195]
[108.42317963 510.66461182]
[104.99229431 525.37536621]
[97.55469513 538.52288818]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 173]
[14 172]
[15 171]
[16 170]
[18 169]
[19 168]
[20 167]
[23 163]
[24 162]
[25 161]
[26 160]
[27 159]
[28 158]
[29 157]
[30 156]
[31 155]
[32 154]
[33 152]
[34 151]
[35 150]
[36 149]
[43 60]
[44 59]
[45 58]
[47 56]
[48 55]
[63 147]
[64 146]
[65 145]
[67 143]
[68 142]
[69 141]
[70 140]
[71 139]
[72 138]
[77 95]
[78 94]
[79 93]
[81 91]
[82 90]
[83 89]
[97 137]
[98 136]
[99 135]
[100 134]
[101 133]
[102 132]
[103 131]
[104 130]
[105 129]
[106 128]
[107 127]
[112 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
