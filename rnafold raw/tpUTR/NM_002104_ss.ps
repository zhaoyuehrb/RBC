%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 16:38:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUACAAAUAAUUUUAUUGGAUGCACUUGCUUCUUUUUUCCUAAUAUGCUCGCAGGUUAGAGUUGGGUGUAAGUAAAGCAGAGCACAUAUGGGGUCCAUUUUUGCACUUGUAAGUCAUUUUAUUAAGGAAUCAAGUUCUUUUUCACUUGUAUCACUGAUGUAUUUCUACCAUGCUGGUUUUAUUCUAAAUAAAAUUUAGAAGACUC\
) } def
/len { sequence length } bind def

/coor [
[10.25808811 131.91697693]
[7.55709934 130.24473572]
[5.84018707 128.02503967]
[-8.93192959 125.42031860]
[-23.70404625 122.81558990]
[-38.47616196 120.21086884]
[-53.24827957 117.60614777]
[-59.46798706 130.65606689]
[-68.84922791 141.63908386]
[-80.74624634 149.80885315]
[-94.34257507 154.61233521]
[-108.70714569 155.72727966]
[-122.85798645 153.08377075]
[-135.82937622 146.86859131]
[-146.73773193 137.51210022]
[-154.84182739 125.65835571]
[-159.59312439 112.12083435]
[-160.67292786 97.82659149]
[-175.40380859 94.99798584]
[-190.13470459 92.16938019]
[-204.86558533 89.34077454]
[-219.59646606 86.51216888]
[-234.60810852 91.50830078]
[-245.64797974 81.50978088]
[-259.04370117 95.17592621]
[-277.82064819 97.98871613]
[-294.36907959 88.99109650]
[-302.09240723 71.97562408]
[-316.93676758 69.82041931]
[-331.78112793 67.66521454]
[-346.62548828 65.51000977]
[-355.57095337 67.37426758]
[-361.67810059 63.20780182]
[-376.48806763 60.82756424]
[-391.34115601 66.27698517]
[-402.67938232 56.61812210]
[-417.48934937 54.23788452]
[-432.29928589 51.85764694]
[-447.10922241 49.47740555]
[-461.96231079 54.92682648]
[-473.30056763 45.26796341]
[-488.11050415 42.88772583]
[-502.96359253 48.33714676]
[-514.30181885 38.67828369]
[-529.11175537 36.29804611]
[-543.92175293 33.91780853]
[-558.73168945 31.53756905]
[-573.59197998 29.49506950]
[-588.49487305 27.79136658]
[-603.39782715 26.08766365]
[-618.30078125 24.38396263]
[-628.68865967 35.91095734]
[-643.87493896 39.09770966]
[-658.02026367 32.71884537]
[-665.68542480 19.22717285]
[-663.92297363 3.81051064]
[-653.41064453 -7.60311747]
[-638.19067383 -10.62493992]
[-624.11535645 -4.09300280]
[-616.59704590 9.48102951]
[-601.69409180 11.18473244]
[-586.79119873 12.88843441]
[-571.88824463 14.59213734]
[-568.91357422 12.69354153]
[-564.87072754 12.14319706]
[-560.40411377 13.42785168]
[-556.35144043 16.72762489]
[-541.54150391 19.10786247]
[-526.73156738 21.48810196]
[-511.92160034 23.86833954]
[-498.12780762 18.24866867]
[-485.73025513 28.07778168]
[-470.92031860 30.45801926]
[-457.12652588 24.83835030]
[-444.72897339 34.66746140]
[-429.91903687 37.04769897]
[-415.10910034 39.42794037]
[-400.29916382 41.80817795]
[-386.50537109 36.18850708]
[-374.10781860 46.01762009]
[-359.29788208 48.39785767]
[-344.47030640 50.66564560]
[-329.62594604 52.82085037]
[-314.78155518 54.97605515]
[-299.93719482 57.13125992]
[-293.79727173 47.81086349]
[-284.57980347 41.42693329]
[-273.59548950 38.93387985]
[-262.42388916 40.72948074]
[-252.68612671 46.59197235]
[-245.80972290 55.70665359]
[-242.81938171 66.77890015]
[-228.86138916 61.58044434]
[-216.76786804 71.78128052]
[-202.03697205 74.60988617]
[-187.30609131 77.43849182]
[-172.57521057 80.26710510]
[-157.84431458 83.09571075]
[-150.83204651 69.16630554]
[-140.17269897 57.76316452]
[-126.72218323 49.81391525]
[-111.56393433 45.96834564]
[-95.92160797 46.54533386]
[-81.06031036 51.50638962]
[-68.18429565 60.45812225]
[-58.33935547 72.68343353]
[-52.32789993 87.19892120]
[-50.64355469 102.83403015]
[-35.87144089 105.43875122]
[-21.09932327 108.04347992]
[-6.32720661 110.64820099]
[8.44491005 113.25292206]
[23.28927231 115.40812683]
[38.19220352 117.11183167]
[53.09513855 118.81553650]
[67.99806976 120.51923370]
[61.14233780 102.39473724]
[64.06855011 82.77350616]
[76.47652435 66.70865631]
[95.56811523 58.55664825]
[116.66877747 60.80117035]
[130.19035339 54.30756760]
[143.71194458 47.81396484]
[157.23352051 41.32036209]
[170.75509644 34.82676315]
[176.07460022 20.18638420]
[189.87991333 13.79356861]
[203.80448914 18.95512581]
[217.32606506 12.46152496]
[222.64556885 -2.17885232]
[236.45088196 -8.57166767]
[250.37545776 -3.41011071]
[263.89703369 -9.90371227]
[277.41864014 -16.39731407]
[290.94021606 -22.89091682]
[304.46179199 -29.38451767]
[307.11642456 -44.67282867]
[318.27377319 -55.45678711]
[333.64355469 -57.58973694]
[347.31579590 -50.25152206]
[354.03323364 -36.26382828]
[351.21289062 -21.00521469]
[339.93923950 -10.34292793]
[324.54721069 -8.37683392]
[310.95538330 -15.86293697]
[297.43380737 -9.36933517]
[283.91223145 -2.87573385]
[270.39065552 3.61786795]
[256.86907959 10.11146927]
[252.19212341 24.20621490]
[238.57182312 30.98427200]
[223.81967163 25.98310471]
[210.29809570 32.47670746]
[205.62115479 46.57145309]
[192.00085449 53.34951019]
[177.24870300 48.34834290]
[163.72712708 54.84194183]
[150.20553589 61.33554459]
[136.68395996 67.82914734]
[123.16237640 74.32274628]
[122.82102203 81.81497955]
[137.80548096 82.49769592]
[152.26751709 78.51657104]
[160.52278137 91.04057312]
[151.16275024 102.76190948]
[137.12275696 97.48214722]
[122.13829803 96.79943085]
[121.79694366 104.29165649]
[134.67201233 111.98793793]
[147.54707336 119.68421936]
[160.42213440 127.38050079]
[177.11975098 130.31753540]
[178.91986084 147.17564392]
[163.21888733 153.57218933]
[152.72584534 140.25556946]
[139.85078430 132.55928040]
[126.97572327 124.86300659]
[114.10066223 117.16672516]
[108.58070374 122.24413300]
[118.73533630 133.28421021]
[107.69508362 143.43865967]
[97.54078674 132.39894104]
[92.02082825 137.47634888]
[98.61685181 150.94827271]
[105.21287537 164.42018127]
[111.80889130 177.89210510]
[118.40491486 191.36401367]
[125.00093842 204.83593750]
[131.59695435 218.30784607]
[138.19297791 231.77975464]
[150.58837891 243.34654236]
[142.90502930 258.45953369]
[126.25569153 255.26013184]
[124.72106171 238.37577820]
[118.12503815 224.90386963]
[111.52902222 211.43194580]
[104.93299866 197.96003723]
[98.33697510 184.48811340]
[91.74095917 171.01620483]
[85.14493561 157.54429626]
[78.54891205 144.07237244]
[66.29436493 135.42216492]
[51.39143372 133.71846008]
[36.48850250 132.01477051]
[21.58556938 130.31106567]
[17.66087723 132.18524170]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 112]
[4 111]
[5 110]
[6 109]
[7 108]
[18 98]
[19 97]
[20 96]
[21 95]
[22 94]
[24 92]
[28 85]
[29 84]
[30 83]
[31 82]
[33 81]
[34 80]
[36 78]
[37 77]
[38 76]
[39 75]
[41 73]
[42 72]
[44 70]
[45 69]
[46 68]
[47 67]
[48 63]
[49 62]
[50 61]
[51 60]
[113 205]
[114 204]
[115 203]
[116 202]
[121 160]
[122 159]
[123 158]
[124 157]
[125 156]
[128 153]
[129 152]
[132 149]
[133 148]
[134 147]
[135 146]
[136 145]
[168 178]
[169 177]
[170 176]
[171 175]
[183 201]
[184 200]
[185 199]
[186 198]
[187 197]
[188 196]
[189 195]
[190 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
