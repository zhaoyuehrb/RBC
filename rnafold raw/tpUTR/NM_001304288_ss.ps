%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 13:06:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGUUCUUGCAUAGGCUCUUAAGCAGCAUGGAAAAAUGGUUGAUGGAAAAUAAACAUCAGUUUCUAAAAGUUGUCUUCAUUUAGUUUGCUUUUUACUCCAGAUCAGAAUACCUGGGAUUGCAUAUCAAAGCAUAAUAAUAAAUACAUGUCUCGACAUGAGUUGUACUUCUAA\
) } def
/len { sequence length } bind def

/coor [
[19.52774429 260.32830811]
[12.02774525 273.31866455]
[4.52774477 286.30905151]
[-2.97225499 299.29943848]
[-10.47225475 312.28982544]
[-17.97225571 325.28021240]
[-10.10449123 341.58413696]
[-13.54203987 359.19805908]
[-26.73027802 371.13681030]
[-44.28609467 372.78067017]
[-51.31222153 386.03332520]
[-50.17976379 402.39334106]
[-63.93100357 411.32839966]
[-78.41985321 403.64691162]
[-78.74141693 387.25091553]
[-64.56490326 379.00720215]
[-57.53877640 365.75451660]
[-64.44926453 355.72634888]
[-66.43865204 343.63800049]
[-63.06671143 331.78503418]
[-54.91727829 322.44494629]
[-43.49820709 317.43966675]
[-30.96263695 317.78021240]
[-23.46263695 304.78982544]
[-15.96263599 291.79943848]
[-8.46263599 278.80905151]
[-0.96263611 265.81866455]
[6.53736401 252.82829285]
[5.57625055 235.32040405]
[21.56406784 226.21641541]
[28.82831573 213.09274292]
[36.09256363 199.96908569]
[43.35681152 186.84541321]
[50.62105560 173.72174072]
[39.07365799 164.50701904]
[29.21520805 153.50408936]
[21.31899261 141.01797485]
[15.60390663 127.39478302]
[12.22837639 113.01218414]
[11.28597641 98.26886749]
[12.80283070 83.57353973]
[-1.65041876 79.56061554]
[-16.10366821 75.54769135]
[-30.55691910 71.53476715]
[-45.01016998 67.52184296]
[-59.46341705 63.50891495]
[-70.90339661 73.85929871]
[-86.12687683 76.35912323]
[-100.27610779 70.21071625]
[-108.83611298 57.37600327]
[-109.07542419 41.95049286]
[-100.91768646 28.85641670]
[-86.96599579 22.27204323]
[-71.67229462 24.29842186]
[-59.91674423 34.28894043]
[-55.45049286 49.05566788]
[-40.99724197 53.06859207]
[-26.54399300 57.08151627]
[-12.09074402 61.09444046]
[2.36250639 65.10736847]
[16.81575584 69.12029266]
[22.33580780 57.08790207]
[29.58459091 46.01069641]
[38.40075302 36.13523865]
[48.58805847 27.68135071]
[59.91974258 20.83720779]
[72.14357758 15.75515270]
[68.65505981 1.16644835]
[65.16654968 -13.42225552]
[61.67803955 -28.01095963]
[58.18952560 -42.59966278]
[54.70101547 -57.18836594]
[40.52515030 -63.21754837]
[32.70899200 -76.28510284]
[34.07012558 -91.27214050]
[43.87784195 -102.45010376]
[40.38932800 -117.03880310]
[26.79196358 -125.09406281]
[22.95409393 -140.42527771]
[31.15266228 -153.93672180]
[46.52360153 -157.61228943]
[59.94760513 -149.27133179]
[63.46045303 -133.86238098]
[54.97803116 -120.52732086]
[58.46654510 -105.93861389]
[72.27000427 -100.40665436]
[80.26374817 -87.65659332]
[79.20462036 -72.46674347]
[69.28971863 -60.67687988]
[72.77822876 -46.08817673]
[76.26674652 -31.49947166]
[79.75525665 -16.91076660]
[83.24376678 -2.32206345]
[86.73227692 12.26664066]
[104.55350494 11.38600349]
[122.19059753 14.08869553]
[138.93035889 20.26542664]
[154.09587097 29.66642380]
[164.21307373 18.59202957]
[174.33027649 7.51763439]
[184.44747925 -3.55676031]
[194.56468201 -14.63115501]
[189.84771729 -29.24778366]
[193.08670044 -44.26126099]
[203.41036987 -55.63303757]
[218.04171753 -60.30416489]
[233.04496765 -57.01813126]
[244.38432312 -46.65886307]
[249.00956726 -32.01295471]
[245.67652893 -17.02007484]
[235.28176880 -5.71324015]
[220.62142944 -1.13392878]
[205.63906860 -4.51395321]
[195.52186584 6.56044197]
[185.40466309 17.63483620]
[175.28746033 28.70923233]
[165.17025757 39.78362656]
[174.52838135 51.84717941]
[181.67993164 65.33641052]
[186.41313171 79.85194397]
[201.25694275 77.69284821]
[216.10073853 75.53376007]
[223.20002747 61.73595047]
[237.06877136 54.77622604]
[252.37413025 57.33073807]
[263.23089600 68.41723633]
[265.46441650 83.77272034]
[258.21585083 97.49270630]
[244.27243042 104.30157471]
[228.99568176 101.58117676]
[218.25982666 90.37755585]
[203.41603088 92.53665161]
[188.57223511 94.69573975]
[188.70161438 102.27994537]
[188.18276978 109.84748840]
[187.01950073 117.34306335]
[185.22027588 124.71189880]
[182.79827881 131.90014648]
[179.77119446 138.85525513]
[176.16114807 145.52642822]
[171.99450684 151.86488342]
[167.30172729 157.82431030]
[177.81214905 168.52622986]
[188.32257080 179.22814941]
[203.51254272 183.65255737]
[206.91020203 198.15446472]
[217.42062378 208.85638428]
[227.93104553 219.55830383]
[238.44146729 230.26022339]
[248.95188904 240.96214294]
[264.88943481 244.82562256]
[269.25210571 260.63381958]
[257.55194092 272.12463379]
[241.82508850 267.47726440]
[238.24996948 251.47256470]
[227.73954773 240.77064514]
[217.22912598 230.06872559]
[206.71870422 219.36680603]
[196.20828247 208.66488647]
[181.77009583 205.00595093]
[177.62065125 189.73857117]
[167.11022949 179.03665161]
[156.59980774 168.33473206]
[140.12266541 179.14131165]
[121.66680145 186.04489136]
[102.14240265 188.70504761]
[82.51235199 186.99055481]
[63.74472809 180.98599243]
[56.48048019 194.10964966]
[49.21623230 207.23332214]
[41.95198441 220.35699463]
[34.68773651 233.48066711]
[37.49419022 246.09297180]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 28]
[2 27]
[3 26]
[4 25]
[5 24]
[6 23]
[10 17]
[11 16]
[30 172]
[31 171]
[32 170]
[33 169]
[34 168]
[41 61]
[42 60]
[43 59]
[44 58]
[45 57]
[46 56]
[67 94]
[68 93]
[69 92]
[70 91]
[71 90]
[72 89]
[76 85]
[77 84]
[98 117]
[99 116]
[100 115]
[101 114]
[102 113]
[120 133]
[121 132]
[122 131]
[142 163]
[143 162]
[144 161]
[146 159]
[147 158]
[148 157]
[149 156]
[150 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
