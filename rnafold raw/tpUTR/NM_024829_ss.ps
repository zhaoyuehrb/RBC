%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 20:50:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGGAGAUGACGGACUAGAAGACUGUAAAUAAGAUACCAAAGGCACUAUUUUAGCUAUGUUUUUCCCAUCAGAAUUAUGCAAUAAAAUAUAUUAAUUUGUCACUUU\
) } def
/len { sequence length } bind def

/coor [
[193.74510193 186.78623962]
[199.79568481 173.02626038]
[187.17689514 164.91665649]
[172.28692627 164.54479980]
[164.86058044 150.57482910]
[152.24177551 142.46522522]
[139.62297058 134.35560608]
[127.00417328 126.24599457]
[114.38536835 118.13638306]
[101.76657104 110.02677155]
[93.69550323 108.62963104]
[88.90781403 101.50106812]
[76.52574158 93.03442383]
[64.14366150 84.56777191]
[51.76158142 76.10112762]
[34.70956039 79.67057037]
[20.58691216 70.05408478]
[17.77272606 53.54209900]
[5.15392303 45.43248367]
[-7.46487999 37.32287216]
[-20.08368301 29.21326065]
[-32.70248795 21.10364914]
[-45.32128906 12.99403667]
[-59.72359085 18.46029091]
[-74.41131592 14.44481373]
[-83.80709839 2.68967438]
[-84.47136688 -12.16619110]
[-97.09017181 -20.27580261]
[-109.70897675 -28.38541603]
[-121.75636292 -19.18561935]
[-136.22463989 -14.66405201]
[-151.36671448 -15.36671352]
[-165.35408020 -21.20875359]
[-176.49769592 -31.48471832]
[-183.45193481 -44.95373535]
[-185.37702942 -59.98935318]
[-182.04051208 -74.77594757]
[-173.84527588 -87.52796936]
[-161.78096008 -96.70555115]
[-147.30436707 -101.20044708]
[-132.16362000 -100.46987915]
[-118.18704987 -94.60207367]
[-107.06237793 -84.30559540]
[-100.13298035 -70.82378387]
[-98.23559570 -55.78464127]
[-101.59935760 -41.00421906]
[-88.98056030 -32.89460754]
[-76.36175537 -24.78499413]
[-62.57243729 -30.35210228]
[-47.97643661 -26.68866158]
[-38.22232819 -14.99632359]
[-37.21167755 0.37523341]
[-24.59287453 8.48484612]
[-11.97407055 16.59445763]
[0.64473218 24.70407104]
[13.26353550 32.81368256]
[25.88233757 40.92329407]
[38.05433655 36.43910980]
[50.76384735 39.88063049]
[59.25889587 50.19550705]
[60.22822952 63.71904755]
[72.61030579 72.18569946]
[84.99238586 80.65234375]
[97.37446594 89.11899567]
[109.87618256 97.40796661]
[122.49497986 105.51757812]
[135.11378479 113.62718964]
[147.73258972 121.73680878]
[160.35139465 129.84642029]
[172.97019958 137.95602417]
[188.76274109 138.90792847]
[195.28649902 152.29785156]
[207.90530396 160.40745544]
[217.90830994 149.18754578]
[229.54341125 139.67068481]
[242.52410889 132.09123230]
[256.53073120 126.63582611]
[271.21832275 123.43882751]
[286.22521973 122.57896423]
[301.18185425 124.07740784]
[315.71994019 127.89725494]
[329.48138428 133.94444275]
[342.12738037 142.07005310]
[353.34646606 152.07397461]
[362.86236572 163.70986938]
[370.44076538 176.69119263]
[375.89501953 190.69824219]
[379.09078979 205.38610840]
[379.94940186 220.39308167]
[378.44973755 235.34960938]
[374.62869263 249.88735962]
[368.58038330 263.64831543]
[360.45370483 276.29364014]
[350.44885254 287.51190186]
[338.81219482 297.02685547]
[325.83023071 304.60415649]
[311.82272339 310.05725098]
[297.13461304 313.25183105]
[282.12756348 314.10922241]
[267.17117310 312.60830688]
[252.63372803 308.78604126]
[238.87326050 302.73660278]
[226.22862244 294.60891724]
[215.01118469 284.60311890]
[205.49719238 272.96566772]
[197.92095947 259.98309326]
[192.46902466 245.97512817]
[189.27566528 231.28674316]
[188.41950989 216.27961731]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 73]
[3 72]
[5 70]
[6 69]
[7 68]
[8 67]
[9 66]
[10 65]
[12 64]
[13 63]
[14 62]
[15 61]
[18 57]
[19 56]
[20 55]
[21 54]
[22 53]
[23 52]
[27 48]
[28 47]
[29 46]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
