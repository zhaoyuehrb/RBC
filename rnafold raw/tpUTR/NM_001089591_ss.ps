%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Sep  9 23:15:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUGUGGACUUAAUUCACCCCAGCCUUCAUCAUCUGGGCAUCAGAAUAUUUCCUUAUGGUUUCGGAUGUACCAUUUGUUUCUUAUUUGUGUAACUGUAAGUUCACAUGAACCUCGUGGGUUUUGGCUUAGGCUGGUAGCUUCUAUGUAAUUCGCAGUGAUUCCAUCUAAAUAAAAGUUCUGUGAUCUGCAAAAAAAAAAAAAAAUUAGCCG\
) } def
/len { sequence length } bind def

/coor [
[82.18354797 119.51824951]
[73.33708954 106.86579132]
[72.87818146 90.80417633]
[57.91120911 89.80932617]
[42.94423294 88.81448364]
[27.97726059 87.81964111]
[13.01028824 86.82479858]
[-1.95668495 85.82994843]
[-16.92365837 84.83510590]
[-31.89063072 83.84026337]
[-46.85760498 82.84542084]
[-61.82457733 81.85057831]
[-76.79154968 80.85572815]
[-88.41014862 96.06774902]
[-106.70557404 101.16156006]
[-124.23424530 94.25266266]
[-133.97741699 78.30210114]
[-148.97373962 77.97026825]
[-163.97007751 77.63843536]
[-167.53854370 91.15676117]
[-174.03279114 103.52947998]
[-183.12155151 114.13301086]
[-194.34288025 122.43379974]
[-207.12765503 128.01519775]
[-220.82841492 130.59837341]
[-234.75216675 130.05624390]
[-248.19544983 126.41970062]
[-260.47985840 119.87590027]
[-270.98623657 110.75859833]
[-279.18600464 99.53118134]
[-284.66763306 86.76305389]
[-287.15731812 73.10082245]
[-302.13732910 72.32682800]
[-313.81777954 82.63240814]
[-328.99862671 81.63407135]
[-338.75143433 70.43504333]
[-353.73144531 69.66104889]
[-368.71145630 68.88705444]
[-383.69677734 68.22355652]
[-398.68658447 67.67058563]
[-413.67639160 67.11761475]
[-428.66619873 66.56464386]
[-443.65600586 66.01166534]
[-457.73202515 73.23497009]
[-470.16540527 65.03373718]
[-485.15521240 64.48076630]
[-500.14501953 63.92779541]
[-505.10055542 70.64128113]
[-512.22430420 74.80323029]
[-520.31964111 75.80042267]
[-528.06011963 73.54417419]
[-534.20678711 68.47286224]
[-537.80651855 61.46902084]
[-552.73767090 60.03316879]
[-567.42681885 67.32424927]
[-580.93408203 58.02445984]
[-579.36431885 41.70061493]
[-564.33233643 35.14529419]
[-551.30181885 45.10204697]
[-536.37066650 46.53789902]
[-517.65228271 35.67150116]
[-499.59204102 48.93799210]
[-484.60223389 49.49096298]
[-469.61242676 50.04393387]
[-456.60858154 42.78108215]
[-443.10302734 51.02186584]
[-428.11322021 51.57483673]
[-413.12341309 52.12780762]
[-398.13360596 52.68077850]
[-383.14379883 53.23375320]
[-376.34469604 50.33945465]
[-367.93746948 53.90703964]
[-352.95745850 54.68103027]
[-337.97744751 55.45502472]
[-327.12237549 45.32076645]
[-311.91946411 45.89230728]
[-301.36334229 57.34681320]
[-286.38333130 58.12080383]
[-281.61492920 42.77375031]
[-273.04385376 29.16670990]
[-261.24542236 18.22336769]
[-247.01420593 10.68827534]
[-231.31057739 7.07619476]
[-215.19592285 7.63693571]
[-199.76081848 12.33808613]
[-186.05134583 20.86683083]
[-174.99807739 32.65076447]
[-167.35296631 46.89629745]
[-163.63824463 62.64210892]
[-148.64190674 62.97394180]
[-133.64558411 63.30577087]
[-128.69018555 53.31389999]
[-120.32630157 45.85829926]
[-109.73638916 42.04430008]
[-98.43688965 42.45874023]
[-88.06109619 47.08001328]
[-80.12306976 55.27568436]
[-75.79670715 65.88875580]
[-60.82973480 66.88359833]
[-45.86275864 67.87844849]
[-30.89578629 68.87329102]
[-15.92881393 69.86813354]
[-0.96184057 70.86297607]
[14.00513268 71.85782623]
[28.97210503 72.85266876]
[43.93907928 73.84751129]
[58.90605164 74.84235382]
[73.87302399 75.83720398]
[86.14971924 67.21846008]
[90.29845428 52.80360413]
[94.44719696 38.38875198]
[98.59593201 23.97389984]
[102.74466705 9.55904579]
[106.89340210 -4.85580683]
[105.46375275 -21.74936867]
[121.30134583 -27.79974937]
[131.49955750 -14.25601006]
[121.30825806 -0.70707071]
[117.15952301 13.70778275]
[113.01078033 28.12263489]
[108.86204529 42.53748703]
[104.71331024 56.95234299]
[100.56457520 71.36719513]
[117.66858673 81.09774780]
[123.02230072 97.98835754]
[137.58030701 101.60286713]
[152.13829041 105.21738434]
[166.69628906 108.83190155]
[164.09356689 92.09815216]
[172.45384216 73.73374176]
[183.92077637 64.06370544]
[195.38771057 54.39367676]
[206.85462952 44.72364426]
[218.32156372 35.05361176]
[226.53208923 20.22042084]
[243.05850220 24.00384331]
[243.99789429 40.93174744]
[227.99159241 46.52054214]
[216.52467346 56.19057465]
[205.05773926 65.86060333]
[193.59080505 75.53063965]
[182.12387085 85.20066833]
[183.76966858 92.51786804]
[198.08921814 96.98444366]
[187.06124878 107.15225983]
[188.70703125 114.46945953]
[203.21012878 118.29829407]
[217.71324158 122.12712860]
[232.21633911 125.95596313]
[245.76156616 118.26409912]
[260.41522217 122.35368347]
[267.66476440 135.31437683]
[282.16787720 139.14321899]
[296.67098999 142.97204590]
[311.17407227 146.80088806]
[325.67718506 150.62971497]
[340.18029785 154.45855713]
[349.27487183 153.62330627]
[354.86825562 158.45228577]
[369.31329346 162.49461365]
[383.75836182 166.53692627]
[398.20343018 170.57925415]
[407.88507080 158.82402039]
[421.51388550 152.02877808]
[436.72860718 151.37084961]
[450.89312744 156.96421814]
[461.55343628 167.83978271]
[466.86251831 182.11331177]
[465.90054321 197.31181335]
[458.83422852 210.80206299]
[446.88778687 220.24679565]
[432.13107300 224.00964355]
[417.12072754 221.43867493]
[404.45742798 212.97932434]
[396.33514404 200.09724426]
[394.16110229 185.02430725]
[379.71603394 180.98197937]
[365.27099609 176.93966675]
[350.82592773 172.89733887]
[336.35147095 168.96165466]
[321.84835815 165.13282776]
[307.34524536 161.30398560]
[292.84213257 157.47515869]
[278.33905029 153.64631653]
[263.83593750 149.81748962]
[251.13369751 157.51089478]
[236.37094116 153.83451843]
[228.38751221 140.45906067]
[213.88439941 136.63023376]
[199.38130188 132.80139160]
[184.87820435 128.97256470]
[196.57348633 138.36512756]
[204.47387695 151.11596680]
[207.67770386 165.76982117]
[205.81930542 180.65425110]
[199.11079407 194.07051086]
[188.31779480 204.48738098]
[174.67211914 210.71600342]
[159.73115540 212.04550171]
[145.20010376 208.32414246]
[132.73739624 199.97663879]
[123.76539612 187.95568848]
[119.30807495 173.63325500]
[119.87414551 158.64393616]
[125.39900970 144.69847107]
[135.25210571 133.38845825]
[148.30891418 126.00470734]
[163.08177185 123.38990021]
[148.52378845 119.77538300]
[133.96578979 116.16086578]
[119.40779114 112.54634857]
[109.82981110 122.13085175]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 108]
[4 107]
[5 106]
[6 105]
[7 104]
[8 103]
[9 102]
[10 101]
[11 100]
[12 99]
[13 98]
[17 91]
[18 90]
[19 89]
[32 78]
[33 77]
[36 74]
[37 73]
[38 72]
[39 70]
[40 69]
[41 68]
[42 67]
[43 66]
[45 64]
[46 63]
[47 62]
[53 60]
[54 59]
[109 123]
[110 122]
[111 121]
[112 120]
[113 119]
[114 118]
[125 211]
[126 210]
[127 209]
[128 208]
[130 142]
[131 141]
[132 140]
[133 139]
[134 138]
[146 191]
[147 190]
[148 189]
[149 188]
[152 185]
[153 184]
[154 183]
[155 182]
[156 181]
[157 180]
[159 179]
[160 178]
[161 177]
[162 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
