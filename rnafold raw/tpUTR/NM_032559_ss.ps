%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 20:17:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCAAUGGCGAGAGAUCAGGUCCGAAAUGCUGCAUUGCUGCAGUUUCCACCACUCUUAUACAGGAAAACUGUCCAAAUUAUCUAAAGAUCCUCCUGAGAAGCUUAAAACAUCUUAAAAUACACUGAUGGGAAACAUGCUCUUUCUUCUGCCUCUGU\
) } def
/len { sequence length } bind def

/coor [
[94.65820312 234.25662231]
[80.52603149 226.66311646]
[77.79348755 210.85447693]
[88.55673981 198.95776367]
[89.15308380 183.96961975]
[78.89085388 173.23545837]
[79.28211975 158.02685547]
[90.61067200 147.33566284]
[91.20702362 132.34751892]
[91.80336761 117.35938263]
[84.51963806 104.24652100]
[71.47983551 96.83278656]
[58.44002914 89.41904449]
[49.37897873 87.88304138]
[45.21677780 81.72605896]
[32.32695389 74.05452728]
[19.43712807 66.38299561]
[6.54730225 58.71146011]
[-3.67314529 73.13662720]
[-26.23167038 77.83724213]
[-41.08661270 79.91827393]
[-55.94155502 81.99930573]
[-64.34600830 91.83032990]
[-76.79962921 93.23208618]
[-86.53411865 85.99370575]
[-101.42749786 87.77897644]
[-116.32087708 89.56424713]
[-121.90601349 93.26479340]
[-127.65267944 93.51017761]
[-131.84033203 91.11225891]
[-146.79290771 92.30400848]
[-161.74549866 93.49576569]
[-176.69807434 94.68751526]
[-191.65066528 95.87926483]
[-206.60324097 97.07102203]
[-219.79469299 106.81358337]
[-234.71757507 100.01358032]
[-236.02047729 83.66627502]
[-222.36311340 74.58837128]
[-207.79499817 82.11843872]
[-192.84240723 80.92668915]
[-177.88983154 79.73493195]
[-162.93725586 78.54318237]
[-147.98466492 77.35142517]
[-133.03208923 76.15967560]
[-118.10614777 74.67086792]
[-103.21276855 72.88559723]
[-88.31938934 71.10032654]
[-74.89554596 59.83305359]
[-58.02258682 67.14436340]
[-43.16764450 65.06333160]
[-28.31270409 62.98229980]
[-24.86797333 56.32018280]
[-38.90211105 51.02462006]
[-53.88890839 50.39540100]
[-61.41767502 37.42167282]
[-54.52817917 24.09745216]
[-39.58965683 22.74078560]
[-30.41256523 34.60580444]
[-17.97851562 42.99594116]
[-14.53378487 36.33382416]
[-21.42324448 23.00958252]
[-28.31270409 9.68534470]
[-35.20216370 -3.63889503]
[-49.99163055 -9.85590649]
[-54.21321487 -25.33356094]
[-44.62848282 -38.19872284]
[-28.59001732 -38.58234787]
[-18.40115738 -26.19014359]
[-21.87792397 -10.52835464]
[-14.98846436 2.79588485]
[-8.09900475 16.12012482]
[-1.20954585 29.44436264]
[-5.32149315 15.01897240]
[-3.78159213 0.09822541]
[3.18985748 -13.18329906]
[14.59551144 -22.92552948]
[28.80366325 -27.73472977]
[43.78167725 -26.92289162]
[57.38678360 -20.60615730]
[67.67261505 -9.68820572]
[73.16767120 4.26902771]
[73.08581543 19.26880455]
[67.43877411 33.16523743]
[57.03440475 43.97028732]
[43.36117172 50.13817215]
[28.37519073 50.78650284]
[14.21883488 45.82163620]
[27.10865974 53.49316788]
[39.99848557 61.16469955]
[52.88830948 68.83623505]
[65.85376740 76.37924194]
[78.89356995 83.79297638]
[91.93337250 91.20671844]
[97.33409882 80.52008057]
[112.41213226 75.58362579]
[130.91725159 83.34302521]
[145.84318542 84.83183289]
[160.76911926 86.32064056]
[175.69505310 87.80944824]
[190.63505554 89.14979553]
[205.58763123 90.34154510]
[220.54022217 91.53330231]
[227.95037842 76.42918396]
[240.55050659 65.33638000]
[256.40258789 59.92370605]
[273.08267212 60.98920441]
[288.05148315 68.34258270]
[299.04104614 80.83845520]
[304.39825439 96.55470276]
[319.38641357 97.15104675]
[334.37454224 97.74739838]
[349.36270142 98.34374237]
[356.48104858 84.84220123]
[368.75769043 75.77318573]
[383.75503540 72.93734741]
[398.49539185 76.89774323]
[410.05203247 86.86804199]
[416.13037109 100.86862946]
[415.52355957 116.11968231]
[408.35208130 129.59309387]
[396.03985596 138.61369324]
[381.03143311 141.39045715]
[366.30679321 137.37203979]
[354.78952026 127.35630035]
[348.76635742 113.33188629]
[333.77819824 112.73553467]
[318.79006958 112.13919067]
[303.80191040 111.54283905]
[298.99981689 123.96225739]
[290.57833862 134.30583191]
[279.35195923 141.55079651]
[266.41342163 144.97515869]
[253.02731323 144.22959900]
[240.50646973 139.37310791]
[230.08326721 130.86851501]
[222.78829956 119.53847504]
[219.34846497 106.48588562]
[204.39587402 105.29412842]
[189.44329834 104.10237885]
[182.48776245 106.72016907]
[174.20625305 102.73538208]
[159.28031921 101.24657440]
[144.35438538 99.75776672]
[129.42845154 98.26895905]
[123.76921844 103.19065094]
[133.61242676 114.50927734]
[122.29365540 124.35231018]
[112.45074463 113.03404236]
[106.79151154 117.95573425]
[106.19516754 132.94387817]
[105.59881592 147.93200684]
[116.04214478 159.48947144]
[115.22384644 174.68107605]
[104.14122772 184.56596375]
[103.54487610 199.55410767]
[113.32891083 212.26837158]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 156]
[5 155]
[8 152]
[9 151]
[10 150]
[11 94]
[12 93]
[13 92]
[15 91]
[16 90]
[17 89]
[18 88]
[20 52]
[21 51]
[22 50]
[25 48]
[26 47]
[27 46]
[30 45]
[31 44]
[32 43]
[33 42]
[34 41]
[35 40]
[61 73]
[62 72]
[63 71]
[64 70]
[97 145]
[98 144]
[99 143]
[100 142]
[101 140]
[102 139]
[103 138]
[110 129]
[111 128]
[112 127]
[113 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
