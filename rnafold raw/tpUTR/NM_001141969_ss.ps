%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 02:50:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCCUCCCCUUCUCCCUGCCUCCAGAAUGUUCUGGGAUAACAUUUGGAGGAAGGUGGGAAGCAGAUGACUGAGGAAGGGAUGGACUAAGCUAAUCCCCUUUUGGUGGUGUUUCUUUAAAAAAAAAAAAAAGCUUAAGUUUUACACAGAAACAUUAAUAAACAAUAAAGUUCUUUUCUUACUGUA\
) } def
/len { sequence length } bind def

/coor [
[-119.28211975 219.83644104]
[-132.74919128 226.44235229]
[-146.21624756 233.04826355]
[-159.68331909 239.65417480]
[-168.66571045 252.67826843]
[-183.49978638 251.33670044]
[-196.96685791 257.94262695]
[-210.43391418 264.54852295]
[-223.90098572 271.15444946]
[-224.68060303 278.68298340]
[-228.00286865 285.40765381]
[-233.40928650 290.50772095]
[-240.19053650 293.37924194]
[-247.47914124 293.70651245]
[-254.36053467 291.49591064]
[-259.98773193 287.06945801]
[-273.96401978 292.51586914]
[-287.94030762 297.96224976]
[-297.98928833 310.18228149]
[-312.65731812 307.59420776]
[-326.63360596 313.04061890]
[-340.60989380 318.48703003]
[-354.58618164 323.93344116]
[-368.56246948 329.37985229]
[-382.53875732 334.82626343]
[-396.51504517 340.27267456]
[-410.49133301 345.71905518]
[-417.36935425 351.76388550]
[-424.74993896 351.13723755]
[-438.81622314 356.34683228]
[-452.88250732 361.55639648]
[-466.94879150 366.76599121]
[-472.04364014 381.55032349]
[-485.47622681 389.55651855]
[-500.90414429 387.00430298]
[-511.04275513 375.09875488]
[-511.10494995 359.46127319]
[-501.06134033 347.47546387]
[-485.65423584 344.80059814]
[-472.15835571 352.69970703]
[-458.09210205 347.49011230]
[-444.02581787 342.28054810]
[-429.95953369 337.07095337]
[-415.93774414 331.74276733]
[-401.96145630 326.29638672]
[-387.98516846 320.84997559]
[-374.00888062 315.40356445]
[-360.03259277 309.95715332]
[-346.05630493 304.51074219]
[-332.08001709 299.06433105]
[-318.10372925 293.61791992]
[-309.05441284 281.78747559]
[-293.38671875 283.98596191]
[-279.41043091 278.53955078]
[-265.43411255 273.09317017]
[-253.42233276 254.12609863]
[-230.50689697 257.68737793]
[-217.03982544 251.08145142]
[-203.57276917 244.47554016]
[-190.10569763 237.86962891]
[-182.08654785 225.31803894]
[-166.28923035 226.18710327]
[-152.82217407 219.58119202]
[-139.35510254 212.97528076]
[-125.88803101 206.36936951]
[-126.31242371 190.40536499]
[-119.71327209 175.79916382]
[-107.36368561 165.49165344]
[-91.70007324 161.58238220]
[-75.84158325 164.90203857]
[-62.96897125 174.83659363]
[-49.61539459 168.00416565]
[-36.26181793 161.17173767]
[-22.90823936 154.33932495]
[-9.55466270 147.50689697]
[3.79891396 140.67448425]
[17.15249062 133.84205627]
[30.50606728 127.00963593]
[43.85964584 120.17721558]
[57.21322250 113.34478760]
[70.56679535 106.51236725]
[83.92037201 99.67994690]
[91.08888245 86.50373840]
[89.57135773 71.58070374]
[88.05383301 56.65766144]
[74.25203705 49.76462555]
[66.38753510 36.49235916]
[66.96985626 21.07598877]
[75.81318665 8.43482590]
[90.09565735 2.60261726]
[105.25977325 5.44040012]
[116.46672821 16.04264832]
[120.14042664 31.02622414]
[115.10859680 45.60992050]
[102.97687531 55.14013672]
[104.49440002 70.06317902]
[106.01192474 84.98621368]
[120.94725037 86.37766266]
[125.19533539 71.99176788]
[120.82962799 56.18441010]
[132.52757263 44.69136429]
[148.25532532 49.33569336]
[151.83352661 65.33971405]
[139.58122253 76.23985291]
[135.33314514 90.62574005]
[145.93974304 101.23234558]
[160.32562256 96.98426056]
[174.71151733 92.73617554]
[189.09741211 88.48809814]
[203.48329163 84.24001312]
[217.86918640 79.99192810]
[232.25506592 75.74385071]
[246.64096069 71.49576569]
[261.02685547 67.24768066]
[275.41275024 62.99959946]
[288.60168457 47.77336502]
[307.18801880 53.05971909]
[321.42224121 48.32818604]
[335.65643311 43.59665680]
[349.89065552 38.86512756]
[364.12484741 34.13359833]
[364.25170898 18.99217606]
[369.29046631 4.71318197]
[378.69454956 -7.15450811]
[391.44384766 -15.32357502]
[406.15545654 -18.90789986]
[421.23355103 -17.51868057]
[435.04257202 -11.30661201]
[446.08459473 -0.94553089]
[453.16192627 12.44067001]
[455.50680542 27.39995575]
[452.86492920 42.30965424]
[445.52282715 55.55247498]
[434.27691650 65.69193268]
[420.34710693 71.62817383]
[405.24438477 72.71728516]
[390.60696411 68.84112549]
[378.02261353 60.42015076]
[368.85638428 48.36780167]
[354.62216187 53.09933472]
[340.38796997 57.83086395]
[326.15374756 62.56239319]
[311.91955566 67.29392242]
[308.16925049 76.82778931]
[299.60391235 82.84006500]
[288.92346191 83.13976288]
[279.66082764 77.38549042]
[265.27493286 81.63357544]
[250.88903809 85.88165283]
[236.50315857 90.12973785]
[222.11726379 94.37782288]
[207.73138428 98.62590027]
[193.34548950 102.87398529]
[178.95959473 107.12207031]
[164.57371521 111.37014771]
[150.18782043 115.61823273]
[158.07313538 128.37840271]
[160.93879700 143.10212708]
[158.41477966 157.88824463]
[150.82701111 170.82754517]
[139.15521240 180.24929810]
[124.90649414 184.93692017]
[109.92066193 184.28515625]
[96.13272095 178.37814331]
[85.32299805 167.97863770]
[78.88726807 154.42941284]
[77.65651703 139.47999573]
[81.78968048 125.06066132]
[90.75279999 113.03352356]
[77.39922333 119.86594391]
[64.04563904 126.69836426]
[50.69206619 133.53079224]
[37.33848953 140.36320496]
[23.98491287 147.19563293]
[10.63133621 154.02806091]
[-2.72224092 160.86047363]
[-16.07581711 167.69290161]
[-29.42939377 174.52531433]
[-42.78297043 181.35774231]
[-56.13654709 188.19017029]
[-55.25730515 202.30752563]
[-59.81523895 215.65196228]
[-69.08990479 226.21646118]
[-81.65412140 232.42549133]
[-95.59350586 233.36985779]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 65]
[2 64]
[3 63]
[4 62]
[6 60]
[7 59]
[8 58]
[9 57]
[16 55]
[17 54]
[18 53]
[20 51]
[21 50]
[22 49]
[23 48]
[24 47]
[25 46]
[26 45]
[27 44]
[29 43]
[30 42]
[31 41]
[32 40]
[71 180]
[72 179]
[73 178]
[74 177]
[75 176]
[76 175]
[77 174]
[78 173]
[79 172]
[80 171]
[81 170]
[82 169]
[83 97]
[84 96]
[85 95]
[98 105]
[99 104]
[106 156]
[107 155]
[108 154]
[109 153]
[110 152]
[111 151]
[112 150]
[113 149]
[114 148]
[115 147]
[117 143]
[118 142]
[119 141]
[120 140]
[121 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
