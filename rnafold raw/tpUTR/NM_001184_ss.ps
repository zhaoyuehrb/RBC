%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 02:23:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAAAUUAUGUAAAAGAAUAUGUUAAUAAUCUAAAAGUAAUGCAUUUGGUAUGAAUCUGUGGUUGUAUCUGUUCAAUUCUAAAGUACAACAUAAAUUUACGUUCUCAGCAACUGUUAUUUCUCUCUGAUCAUUAAUUAUAUGUAAAAUAAUAUACAUUCAGUUAUUAAGAAAUAAACUGCUUUCUUAAUACA\
) } def
/len { sequence length } bind def

/coor [
[331.15701294 560.22705078]
[332.48284912 549.69897461]
[338.10778809 540.60607910]
[331.13693237 527.32421875]
[324.16610718 514.04235840]
[317.19525146 500.76052856]
[302.94293213 496.58831787]
[295.68429565 483.21795654]
[300.15713501 468.29711914]
[293.18627930 455.01528931]
[286.21542358 441.73342896]
[279.24459839 428.45159912]
[272.27374268 415.16976929]
[255.74291992 417.06930542]
[239.71360779 412.46914673]
[226.64842224 402.04669189]
[218.56582642 387.37606812]
[216.72833252 370.69039917]
[221.44537354 354.54199219]
[232.02162170 341.41174316]
[224.62651062 328.36138916]
[217.23139954 315.31100464]
[209.83628845 302.26065063]
[202.44116211 289.21026611]
[194.94116211 276.21987915]
[187.33676147 263.29034424]
[179.73237610 250.36079407]
[172.12797546 237.43124390]
[164.52357483 224.50169373]
[151.40203857 217.45367432]
[151.07522583 201.63584900]
[143.47082520 188.70629883]
[135.86642456 175.77676392]
[120.97348785 176.03329468]
[107.86453247 168.75241089]
[100.10880280 155.80192566]
[99.87509155 140.60842896]
[107.32630920 127.25079346]
[99.72190857 114.32124329]
[87.65319061 107.26166534]
[87.34854126 93.28314972]
[79.74414825 80.35360718]
[72.13974762 67.42406464]
[64.53534698 54.49451828]
[56.82704926 41.62664795]
[49.01534271 28.82128716]
[35.22322083 21.06964302]
[35.20036697 6.17505598]
[27.38866043 -6.63030386]
[19.57695580 -19.43566322]
[5.78483438 -27.18730736]
[5.76198101 -42.08189392]
[-9.33651066 -45.91247177]
[-17.07627487 -59.01020813]
[-13.33135986 -73.38070679]
[-21.14306641 -86.18606567]
[-28.95477295 -98.99142456]
[-36.76647949 -111.79678345]
[-42.39617157 -115.30442810]
[-45.00742722 -120.37094116]
[-44.61589050 -125.14292145]
[-52.01100540 -138.19329834]
[-59.40612030 -151.24366760]
[-67.52497101 -163.85653687]
[-76.34175110 -175.99179077]
[-85.15853119 -188.12704468]
[-93.97531128 -200.26229858]
[-102.79209137 -212.39755249]
[-111.60886383 -224.53280640]
[-119.19532013 -229.64488220]
[-120.46807098 -236.93533325]
[-129.08821106 -249.21104431]
[-144.13952637 -246.67718506]
[-158.79731750 -250.93302917]
[-170.15124512 -261.13357544]
[-175.94699097 -275.25347900]
[-175.03379822 -290.48925781]
[-167.59298706 -303.81582642]
[-155.10194397 -312.58715820]
[-140.04075623 -315.06173706]
[-125.39984894 -310.74819946]
[-114.08617401 -300.50302124]
[-108.34607697 -286.36041260]
[-109.31925964 -271.12832642]
[-116.81248474 -257.83117676]
[-108.19235229 -245.55546570]
[-99.47360992 -233.34957886]
[-90.65682983 -221.21432495]
[-81.84005737 -209.07907104]
[-73.02327728 -196.94381714]
[-64.20649719 -184.80856323]
[-55.38971710 -172.67330933]
[-53.03094864 -187.48669434]
[-41.79162598 -197.42034912]
[-26.80067253 -197.94119263]
[-14.89901924 -188.81153870]
[-11.51783562 -174.19758606]
[-18.20008278 -160.76823425]
[-31.89640045 -154.65177917]
[-46.35574722 -158.63877869]
[-38.96063232 -145.58840942]
[-31.56551743 -132.53804016]
[-23.96111870 -119.60848999]
[-16.14941216 -106.80313110]
[-8.33770657 -93.99777222]
[-0.52600002 -81.19241333]
[13.96540737 -77.94669342]
[22.07000542 -65.07151794]
[18.56734085 -49.89360046]
[31.80071640 -43.05788422]
[32.38231659 -27.24736977]
[40.19401932 -14.44200993]
[48.00572586 -1.63665020]
[61.23910141 5.19906855]
[61.82070160 21.00958061]
[69.63240814 33.81494141]
[75.80794525 37.89333725]
[77.46489716 46.89012146]
[85.06929016 59.81966400]
[92.67369080 72.74920654]
[100.27809143 85.67875671]
[112.34680939 92.73833466]
[112.65145874 106.71685028]
[120.25585175 119.64639282]
[135.55117798 119.62586212]
[148.71621704 127.21389771]
[156.26536560 140.28588867]
[156.25790405 155.28108215]
[148.79597473 168.17236328]
[156.40037537 181.10189819]
[164.00477600 194.03144836]
[177.67022705 202.00427246]
[177.45312500 216.89730835]
[185.05751038 229.82684326]
[192.66191101 242.75639343]
[200.26631165 255.68594360]
[207.87071228 268.61547852]
[214.92835999 274.43588257]
[215.49154663 281.81515503]
[222.88665771 294.86550903]
[230.28176880 307.91589355]
[237.67687988 320.96627808]
[245.07200623 334.01663208]
[258.31283569 331.62564087]
[271.62307739 333.43161011]
[283.70700073 339.24453735]
[293.39270020 348.48510742]
[299.74566650 360.24227905]
[302.15893555 373.36318970]
[300.41104126 386.56622314]
[294.68630981 398.56604004]
[285.55557251 408.19891357]
[292.52642822 421.48074341]
[299.49728394 434.76257324]
[306.46810913 448.04443359]
[313.43896484 461.32626343]
[328.25942993 466.12121582]
[335.13964844 479.69018555]
[330.47708130 493.78970337]
[337.44793701 507.07153320]
[344.41879272 520.35339355]
[351.38961792 533.63519287]
[370.85314941 538.57019043]
[380.28607178 555.95001221]
[374.01449585 574.38214111]
[381.61889648 587.31170654]
[389.22329712 600.24127197]
[396.82769775 613.17077637]
[404.43209839 626.10034180]
[412.03649902 639.02990723]
[419.64089966 651.95941162]
[427.24526978 664.88897705]
[434.84967041 677.81854248]
[442.45407104 690.74804688]
[457.91113281 692.11157227]
[469.59255981 702.32550049]
[473.00662231 717.46234131]
[466.84051514 731.70166016]
[453.46527100 739.56823730]
[438.02392578 738.03710938]
[426.45397949 727.69708252]
[423.20434570 712.52410889]
[429.52453613 698.35247803]
[421.92013550 685.42291260]
[414.31573486 672.49340820]
[406.71133423 659.56384277]
[399.10693359 646.63427734]
[391.50253296 633.70477295]
[383.89816284 620.77520752]
[376.29376221 607.84564209]
[368.68936157 594.91613770]
[361.08496094 581.98657227]
[350.79882812 582.18017578]
[341.28903198 578.04803467]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 162]
[4 161]
[5 160]
[6 159]
[9 156]
[10 155]
[11 154]
[12 153]
[13 152]
[20 143]
[21 142]
[22 141]
[23 140]
[24 139]
[25 137]
[26 136]
[27 135]
[28 134]
[29 133]
[31 131]
[32 130]
[33 129]
[38 124]
[39 123]
[41 121]
[42 120]
[43 119]
[44 118]
[45 116]
[46 115]
[48 113]
[49 112]
[50 111]
[52 109]
[55 106]
[56 105]
[57 104]
[58 103]
[61 102]
[62 101]
[63 100]
[64 92]
[65 91]
[66 90]
[67 89]
[68 88]
[69 87]
[71 86]
[72 85]
[165 192]
[166 191]
[167 190]
[168 189]
[169 188]
[170 187]
[171 186]
[172 185]
[173 184]
[174 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
