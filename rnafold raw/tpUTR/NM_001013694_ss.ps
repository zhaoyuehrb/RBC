%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 02:38:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUCGUUGUGAGGUACUCAGUGUUGGCUGAGGUAGAAGCUGCCACCAGAGACUAAAGGGAAGGCUGCUAUGGAGGAACUACAGAGAACUCCUUUGCCAGGAAAGAACAUCAACUUGGCUGUCCUGUUUUGAGGACGAUACCCCACAUGAGGACUUGGUAUAAAGAUUCCUGCCCUACGUGGCAUUGUCCCAUUUUACAUCCUUCCCUCAUGACCUGGCCUGAUGUGGAGUAGCUCCUGAGUAAAGAAGUUACCCU\
UUUGAAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[191.71835327 255.02760315]
[187.29504395 245.59411621]
[186.24066162 235.19023132]
[188.69921875 224.98696899]
[194.41795349 216.14114380]
[186.24096680 203.56588745]
[178.06398010 190.99064636]
[169.88700867 178.41539001]
[161.71002197 165.84013367]
[153.53303528 153.26489258]
[145.35604858 140.68963623]
[137.17906189 128.11439514]
[129.00207520 115.53913879]
[121.50259399 115.62738800]
[106.50363159 115.80387115]
[99.00415039 115.89212036]
[91.12533569 128.65629578]
[83.24651337 141.42047119]
[75.36769104 154.18464661]
[67.48886871 166.94882202]
[59.61005020 179.71299744]
[59.66883850 196.11204529]
[45.36204910 204.12751770]
[31.40727615 195.51377869]
[32.15999603 179.13191223]
[46.84587097 171.83418274]
[54.72469330 159.07000732]
[62.60351562 146.30583191]
[70.48233795 133.54165649]
[78.36116028 120.77747345]
[86.23997498 108.01329803]
[76.64330292 96.48490143]
[62.66185379 101.91804504]
[48.68040466 107.35118866]
[34.69895554 112.78433228]
[24.63838387 124.99480438]
[9.97281075 122.39282990]
[-4.00863934 127.82597351]
[-17.99008942 133.25910950]
[-31.97154045 138.69226074]
[-38.40257645 152.87956238]
[-52.65915298 158.19036865]
[-66.14494324 151.97192383]
[-72.98178101 157.97686768]
[-80.32299805 157.38568115]
[-94.36740875 162.65394592]
[-96.80683136 177.81787109]
[-106.51383972 189.72036743]
[-120.87729645 195.15972900]
[-136.03350830 192.67279053]
[-147.90551758 182.92852783]
[-153.29983521 168.54808044]
[-150.76539612 153.39974976]
[-140.98396301 141.55833435]
[-126.58668518 136.20912170]
[-111.44636536 138.79103088]
[-99.63566589 148.60952759]
[-85.59126282 143.34127808]
[-71.57808685 137.99047852]
[-65.82972717 124.29770660]
[-51.72794342 118.58855438]
[-37.40468216 124.71080780]
[-23.42323303 119.27766418]
[-9.44178295 113.84452057]
[4.53966761 108.41137695]
[13.60019112 96.58952332]
[29.26581001 98.80288696]
[43.24726105 93.36974335]
[57.22871017 87.93659973]
[71.21015930 82.50345612]
[80.25382233 70.53632355]
[81.66368866 55.60272980]
[83.07355499 40.66913223]
[84.48342896 25.73553848]
[85.89329529 10.80194283]
[87.30316162 -4.13165283]
[70.50589752 -11.39872074]
[57.11412048 -23.82169724]
[48.64124680 -39.96463776]
[46.03412247 -57.97306442]
[49.56726074 -75.78701019]
[36.40399933 -82.97926331]
[23.24073601 -90.17151642]
[10.07747364 -97.36377716]
[-3.08578825 -104.55603027]
[-18.82296562 -101.43820190]
[-30.97900772 -111.90769196]
[-30.22884178 -127.93319702]
[-17.14793015 -137.22132874]
[-1.77082872 -132.64701843]
[4.10646677 -117.71929169]
[17.26972961 -110.52703857]
[30.43299103 -103.33477783]
[43.59625244 -96.14252472]
[56.75951385 -88.95027161]
[61.29814911 -94.27946472]
[66.49154663 -98.97286987]
[58.91525269 -111.91890717]
[51.33895874 -124.86493683]
[43.76266479 -137.81097412]
[36.18637085 -150.75700378]
[22.53827095 -158.75949097]
[22.78772354 -173.65200806]
[15.21142960 -186.59805298]
[2.97353625 -190.60073853]
[-3.07596397 -201.51135254]
[-0.17925021 -213.23391724]
[-7.60269690 -226.26818848]
[-22.90851402 -230.20614624]
[-30.87475777 -243.85585022]
[-26.77519798 -259.11917114]
[-13.04203033 -266.94067383]
[2.17710042 -262.67996216]
[9.85295391 -248.86486816]
[5.43158293 -233.69163513]
[12.85502911 -220.65736389]
[28.46211815 -212.60169983]
[28.15746307 -194.17434692]
[35.73375702 -181.22830200]
[48.83995056 -174.15179443]
[49.13240433 -158.33329773]
[56.70869827 -145.38726807]
[64.28498840 -132.44123840]
[71.86128235 -119.49520111]
[79.43757629 -106.54916382]
[90.67309570 -109.78279877]
[102.34219360 -110.50760651]
[113.89151001 -108.68921661]
[124.77335358 -104.41385651]
[133.53292847 -116.59047699]
[135.99110413 -125.35169220]
[142.46788025 -128.85801697]
[151.37011719 -140.93072510]
[160.27233887 -153.00343323]
[169.17457581 -165.07614136]
[178.07679749 -177.14884949]
[186.97903442 -189.22155762]
[195.88125610 -201.29426575]
[193.64227295 -211.89437866]
[197.50888062 -221.77995300]
[205.98829651 -227.79414368]
[216.15834045 -228.15893555]
[225.34217834 -240.01882935]
[234.52603149 -251.87872314]
[243.70986938 -263.73861694]
[240.48504639 -276.79483032]
[245.28819275 -289.14810181]
[256.16201782 -296.38125610]
[269.02307129 -296.04660034]
[278.34582520 -307.79760742]
[287.66857910 -319.54861450]
[290.18420410 -335.16854858]
[304.15582275 -340.33023071]
[303.45404053 -353.18695068]
[311.43258667 -362.77761841]
[323.40838623 -364.32360840]
[332.86874390 -375.96411133]
[327.31503296 -390.28375244]
[329.68106079 -405.45932007]
[339.33038330 -417.40863037]
[353.66735840 -422.91741943]
[368.83541870 -420.50384521]
[380.75442505 -410.81713867]
[386.21826172 -396.46295166]
[383.75714111 -381.30255127]
[374.03311157 -369.41394043]
[359.66189575 -363.99511719]
[344.50924683 -366.50375366]
[335.04888916 -354.86325073]
[333.19326782 -337.39810181]
[315.90682983 -331.00750732]
[314.05804443 -316.22808838]
[299.41958618 -310.22586060]
[290.09686279 -298.47485352]
[280.77410889 -286.72384644]
[283.40368652 -270.09735107]
[272.97604370 -256.45471191]
[255.56976318 -254.55476379]
[246.38592529 -242.69487000]
[237.20207214 -230.83497620]
[228.01823425 -218.97508240]
[226.78068542 -199.65899658]
[207.95396423 -192.39202881]
[199.05174255 -180.31932068]
[190.14950562 -168.24661255]
[181.24728394 -156.17390442]
[172.34504700 -144.10119629]
[163.44282532 -132.02848816]
[154.54058838 -119.95578003]
[145.70953369 -107.83090973]
[136.94996643 -95.65428925]
[146.58787537 -83.37196350]
[152.29409790 -68.81945801]
[153.57656860 -53.22189331]
[150.31613159 -37.89572906]
[142.77749634 -24.13765144]
[131.58781433 -13.11489105]
[117.68451691 -5.76617193]
[102.23675537 -2.72178531]
[100.82688904 12.21181011]
[99.41702271 27.14540482]
[98.00715637 42.07900238]
[96.59728241 57.01259613]
[95.18741608 71.94618988]
[141.57733154 107.36215210]
[149.75431824 119.93740082]
[157.93128967 132.51264954]
[166.10827637 145.08790588]
[174.28526306 157.66316223]
[182.46224976 170.23840332]
[190.63923645 182.81365967]
[198.81622314 195.38890076]
[206.99320984 207.96415710]
[227.02668762 207.98124695]
[242.83256531 220.05253601]
[248.04528809 239.09489441]
[240.70014954 257.26403809]
[249.45971680 269.44067383]
[258.21926880 281.61727905]
[266.97885132 293.79391479]
[282.99481201 290.83688354]
[298.63873291 295.15292358]
[310.78524780 305.82699585]
[317.03070068 320.67916870]
[316.16888428 336.70962524]
[308.42349243 350.70462036]
[317.32571411 362.77734375]
[324.91036987 367.80471802]
[326.26068115 375.04486084]
[335.02026367 387.22149658]
[343.77981567 399.39810181]
[352.53939819 411.57470703]
[361.29895020 423.75134277]
[370.05853271 435.92794800]
[384.39837646 442.61221313]
[385.54977417 457.46224976]
[394.30935669 469.63885498]
[409.94564819 471.93695068]
[419.31002808 484.66818237]
[416.84674072 500.27932739]
[404.01724243 509.50857544]
[388.43301392 506.88037109]
[379.33990479 493.95401001]
[382.13272095 478.39843750]
[373.37316895 466.22183228]
[359.65985107 460.40850830]
[357.88189697 444.68753052]
[349.12234497 432.51089478]
[340.36276245 420.33428955]
[331.60321045 408.15765381]
[322.84362793 395.98104858]
[314.08407593 383.80444336]
[305.25302124 371.67956543]
[296.35079956 359.60684204]
[282.87930298 362.84643555]
[269.14627075 360.70623779]
[257.22540283 353.47613525]
[248.92948914 342.21701050]
[245.53466797 328.60537720]
[247.58430481 314.68356323]
[254.80223083 302.55346680]
[246.04266357 290.37686157]
[237.28309631 278.20022583]
[228.52352905 266.02362061]
[218.49877930 268.23870850]
[208.26818848 267.00527954]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 213]
[6 212]
[7 211]
[8 210]
[9 209]
[10 208]
[11 207]
[12 206]
[13 205]
[16 31]
[17 30]
[18 29]
[19 28]
[20 27]
[21 26]
[32 70]
[33 69]
[34 68]
[35 67]
[37 65]
[38 64]
[39 63]
[40 62]
[43 59]
[45 58]
[46 57]
[71 204]
[72 203]
[73 202]
[74 201]
[75 200]
[76 199]
[81 95]
[82 94]
[83 93]
[84 92]
[85 91]
[97 125]
[98 124]
[99 123]
[100 122]
[101 121]
[103 119]
[104 118]
[107 116]
[108 115]
[129 191]
[130 190]
[132 189]
[133 188]
[134 187]
[135 186]
[136 185]
[137 184]
[138 183]
[142 181]
[143 180]
[144 179]
[145 178]
[149 175]
[150 174]
[151 173]
[153 171]
[156 169]
[157 168]
[217 264]
[218 263]
[219 262]
[220 261]
[226 254]
[227 253]
[229 252]
[230 251]
[231 250]
[232 249]
[233 248]
[234 247]
[236 245]
[237 244]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
