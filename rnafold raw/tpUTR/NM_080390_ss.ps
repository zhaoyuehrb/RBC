%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 22:46:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCCCUGGCAGGCAUUUGUCAGGCCAUAUGUUUUAACCUUAUGGUAAUACUUUGCUUUAGUCGUUCCUCCUGCUACCAGUAGCGUUUUGACCCACCUGCCAGUGUUUGCUUGCUCUAUGUUUCAGUAGCAGAUUUUCACACAUGUGCAUUGCAGAGACGUCAUGAUUCGUGGAAAAAUAAAGCAGCUUAUAAUAUCA\
) } def
/len { sequence length } bind def

/coor [
[307.85385132 205.20646667]
[299.01461792 193.08757019]
[296.21878052 178.35043335]
[300.00537109 163.83624268]
[309.64437866 152.34323120]
[323.27761841 146.08709717]
[308.44601440 143.84588623]
[293.61437988 141.60467529]
[278.78277588 139.36346436]
[263.95114136 137.12225342]
[249.11952209 134.88105774]
[234.28790283 132.63984680]
[219.45628357 130.39863586]
[212.30152893 140.21965027]
[201.58488464 146.09812927]
[189.31343079 146.86305237]
[177.81546021 142.30770874]
[169.29867554 133.24070740]
[165.42642212 121.34307098]
[150.67294312 118.63476562]
[135.91947937 115.92646027]
[121.16599274 113.21815491]
[106.41252136 110.50984955]
[91.56366730 112.63391876]
[78.16114807 119.36981964]
[64.75862885 126.10572815]
[51.35610580 132.84162903]
[37.95358658 139.57754517]
[24.55106354 146.31344604]
[24.34534454 161.61756897]
[17.04081535 175.06756592]
[4.31600285 183.57272339]
[-10.90502453 185.17861938]
[-25.12458611 179.51623535]
[-35.07513046 167.88673401]
[-38.47009659 152.96250916]
[-34.52934265 138.17300415]
[-24.15842819 126.91677856]
[-9.74051285 121.78041077]
[5.41127205 123.94419861]
[17.81515694 132.91093445]
[31.21767807 126.17501831]
[44.62020111 119.43911743]
[58.02272034 112.70320892]
[71.42523956 105.96730042]
[84.82775879 99.23139954]
[85.24195862 91.74284363]
[72.68557739 83.53690338]
[86.07035065 76.76573181]
[86.48454285 69.27717590]
[73.90663147 61.10428619]
[58.11907196 60.07306290]
[51.66265106 46.65055084]
[39.08474350 38.47765350]
[26.50683403 30.30475998]
[13.92892456 22.13186455]
[1.35101628 13.95896816]
[-17.05078125 13.42174625]
[-24.40593910 -2.50691390]
[-37.11130142 -10.48023319]
[-49.81666183 -18.45355225]
[-62.52202225 -26.42687035]
[-78.32389832 -27.20873642]
[-84.99140167 -40.52765656]
[-100.33961487 -36.75830841]
[-113.81430054 -45.01715088]
[-117.42116547 -60.40435410]
[-109.02031708 -73.79096985]
[-93.59584045 -77.23494720]
[-80.29879761 -68.69304657]
[-77.01808167 -53.23301697]
[-62.12498093 -53.02145386]
[-54.54870224 -39.13223267]
[-41.84334183 -31.15891266]
[-29.13798141 -23.18559265]
[-16.43262100 -15.21227455]
[-4.56852388 -17.60361671]
[6.08405828 -11.05661201]
[9.52391148 1.38106000]
[22.10181999 9.55395508]
[34.67972946 17.72685051]
[47.25763702 25.89974594]
[59.83554459 34.07263947]
[74.72344971 34.51927948]
[82.07952881 48.52637482]
[94.65744019 56.69927216]
[113.01753235 76.52308655]
[109.12082672 95.75637054]
[123.87429810 98.46467590]
[138.62777710 101.17298126]
[153.38125610 103.88128662]
[168.13473511 106.58959198]
[180.87796021 93.70262146]
[198.64906311 91.06048584]
[214.31376648 99.53330231]
[221.69749451 115.56700897]
[236.52911377 117.80821991]
[251.36073303 120.04943085]
[266.19235229 122.29064178]
[281.02398682 124.53184509]
[295.85559082 126.77305603]
[310.68722534 129.01426697]
[325.51882935 131.25547791]
[340.49594116 132.08386230]
[355.48425293 131.49200439]
[370.47259521 130.90016174]
[381.16717529 119.57480621]
[396.37588501 119.18809509]
[407.10696411 129.45355225]
[422.09527588 128.86169434]
[437.08361816 128.26983643]
[445.54476929 124.80140686]
[452.31280518 127.78883362]
[467.30862427 127.43366241]
[482.30441284 127.07849121]
[495.82720947 105.37158966]
[522.38580322 100.10176849]
[545.62030029 116.74179840]
[559.91516113 112.19671631]
[574.20996094 107.65164185]
[588.50482178 103.10655975]
[602.79962158 98.56148529]
[617.09448242 94.01640320]
[631.38928223 89.47132874]
[642.19628906 77.91624451]
[656.66967773 81.43337250]
[670.96447754 76.88829803]
[685.25933838 72.34322357]
[699.48065186 67.57304382]
[713.62487793 62.57896805]
[727.76910400 57.58488846]
[738.20587158 45.69440079]
[752.78308105 48.75287628]
[766.92730713 43.75879669]
[771.21887207 28.84697914]
[783.47644043 19.33213806]
[798.98669434 18.87292480]
[811.78570557 27.64591789]
[816.95190430 42.27772141]
[812.49890137 57.14210510]
[800.13885498 66.52341461]
[784.62451172 66.81434631]
[771.92138672 57.90302658]
[757.77716064 62.89710617]
[748.35205078 74.43038177]
[732.76318359 71.72911835]
[718.61895752 76.72319794]
[704.47473145 81.71727753]
[701.63977051 85.57177734]
[696.34918213 87.68068695]
[689.80438232 86.63805389]
[675.50958252 91.18312836]
[661.21472168 95.72821045]
[651.43023682 106.95819855]
[635.93438721 103.76615906]
[621.63952637 108.31124115]
[607.34472656 112.85631561]
[593.04986572 117.40139771]
[578.75506592 121.94647217]
[564.46020508 126.49155426]
[550.16540527 131.03663635]
[548.27600098 145.91716003]
[560.98132324 153.89047241]
[573.68670654 161.86380005]
[586.39208984 169.83711243]
[603.02215576 173.13508606]
[604.45672607 190.02822876]
[588.62091064 196.08323669]
[578.41876221 182.54248047]
[565.71337891 174.56915283]
[553.00805664 166.59584045]
[540.30267334 158.62251282]
[534.07812500 163.43125916]
[527.07971191 166.74682617]
[519.65289307 168.46278381]
[512.15252686 168.55021667]
[504.92590332 167.05676270]
[498.29684448 164.10209656]
[492.55093384 159.87011719]
[487.92352295 154.59831238]
[484.58999634 148.56488037]
[482.65957642 142.07427979]
[467.66378784 142.42945862]
[452.66799927 142.78462219]
[437.67547607 143.25814819]
[422.68713379 143.85000610]
[407.69882202 144.44186401]
[397.81060791 155.52153015]
[382.61874390 156.33526611]
[371.06442261 145.88847351]
[356.07611084 146.48033142]
[341.08779907 147.07218933]
[353.94781494 154.79356384]
[362.26058960 167.27946472]
[364.42349243 182.12271118]
[360.01953125 196.46163940]
[349.89773560 207.53182983]
[336.00949097 213.19905090]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 103]
[7 102]
[8 101]
[9 100]
[10 99]
[11 98]
[12 97]
[13 96]
[19 92]
[20 91]
[21 90]
[22 89]
[23 88]
[24 46]
[25 45]
[26 44]
[27 43]
[28 42]
[29 41]
[50 86]
[51 85]
[53 83]
[54 82]
[55 81]
[56 80]
[57 79]
[59 76]
[60 75]
[61 74]
[62 73]
[64 71]
[104 192]
[105 191]
[106 190]
[109 187]
[110 186]
[111 185]
[113 184]
[114 183]
[115 182]
[118 161]
[119 160]
[120 159]
[121 158]
[122 157]
[123 156]
[124 155]
[126 153]
[127 152]
[128 151]
[129 148]
[130 147]
[131 146]
[133 144]
[134 143]
[162 172]
[163 171]
[164 170]
[165 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
