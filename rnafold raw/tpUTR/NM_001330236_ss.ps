%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 03:55:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACAAGGACGUGGCUGGGCUCUGCUGUCUGACUGCUGAGGGCCUCUGCCCCAGGGUGGCCGGGCUGAUGCACAGGAGGGCCGGGCCUGCCCAGCCUGGAAAGCCCAGAGGCUGCUUCCUGUGUCACAGGGUCUGGACCGCAGCCCUGCCCUCUUCUGCCCAUGGCCCAGGUCUGGAUCACACCCCGCUUUGUUCCGUGGUUUGAAGCAGAAAUAAAGGCACUUCCUGG\
) } def
/len { sequence length } bind def

/coor [
[99.69756317 574.92431641]
[85.16482544 569.15081787]
[77.78878784 555.36212158]
[81.05219269 540.06884766]
[93.41415405 530.49200439]
[93.82566833 515.49768066]
[94.23717499 500.50329590]
[94.64868927 485.50894165]
[87.26345825 472.57421875]
[95.37644196 458.99148560]
[95.78795624 443.99713135]
[96.19946289 429.00277710]
[88.81423950 416.06802368]
[96.92722321 402.48532104]
[97.33872986 387.49096680]
[83.36487579 379.36486816]
[75.35288239 365.21722412]
[75.57386017 348.86599731]
[84.06220245 334.77908325]
[98.58036041 326.85348511]
[98.78613281 311.85488892]
[98.99191284 296.85629272]
[99.19768524 281.85772705]
[99.40345764 266.85913086]
[99.60923767 251.86053467]
[96.56202698 245.13787842]
[99.92211914 236.65797424]
[100.33363342 221.66362000]
[92.94840240 208.72888184]
[101.06138611 195.14616394]
[101.47289276 180.15180969]
[101.88440704 165.15745544]
[102.29591370 150.16310120]
[102.70742798 135.16874695]
[103.11894226 120.17439270]
[90.88764954 111.49132538]
[76.86802673 116.82520294]
[69.97083282 122.79409027]
[62.61932373 122.13463593]
[48.52784729 127.27567291]
[34.43637085 132.41671753]
[20.34489632 137.55776978]
[10.23379993 150.46891785]
[-5.96295691 147.90043640]
[-11.58353901 132.49455261]
[-0.84597290 120.09952545]
[15.20385361 123.46628571]
[29.29532814 118.32524109]
[43.38680267 113.18420410]
[57.47827911 108.04315948]
[71.53415680 102.80558014]
[85.55377960 97.47170258]
[94.73274994 85.60803986]
[96.37569427 70.69828796]
[98.01863861 55.78853226]
[99.66158295 40.87878036]
[101.30453491 25.96902657]
[102.12724304 10.99160576]
[102.12724304 -4.00839376]
[102.12724304 -19.00839424]
[102.02435303 -34.00804138]
[101.81858063 -49.00662994]
[101.61280823 -64.00521851]
[101.40702820 -79.00380707]
[101.20125580 -94.00239563]
[87.24719238 -103.57246399]
[81.80546570 -119.41828918]
[86.83498383 -135.22531128]
[100.16297913 -144.81875610]
[99.75147247 -159.81311035]
[99.33995819 -174.80746460]
[91.22697449 -188.39016724]
[98.61220551 -201.32492065]
[98.20069122 -216.31927490]
[97.78918457 -231.31362915]
[97.37767029 -246.30798340]
[96.96616364 -261.30233765]
[96.55464935 -276.29669189]
[96.14314270 -291.29104614]
[95.73162842 -306.28540039]
[87.61864471 -319.86810303]
[95.00387573 -332.80285645]
[94.59236145 -347.79721069]
[94.18085480 -362.79156494]
[93.76934052 -377.78591919]
[90.40924835 -386.26583862]
[93.45645905 -392.98849487]
[93.25067902 -407.98706055]
[93.04490662 -422.98565674]
[92.53055573 -437.97683716]
[91.70783997 -452.95425415]
[90.88513184 -467.93167114]
[90.06242371 -482.90908813]
[89.13699341 -497.88052368]
[88.10889435 -512.84527588]
[87.08079529 -527.80999756]
[85.13140106 -542.68273926]
[82.26814270 -557.40698242]
[79.40489197 -572.13116455]
[76.54163361 -586.85534668]
[73.47665405 -601.53887939]
[70.21052551 -616.17895508]
[66.94440460 -630.81903076]
[63.67828369 -645.45916748]
[52.19066238 -657.16241455]
[56.84228134 -672.88800049]
[72.84795380 -676.45880127]
[83.74241638 -664.20141602]
[78.31838226 -648.72528076]
[81.58450317 -634.08520508]
[84.85062408 -619.44506836]
[88.11675262 -604.80499268]
[91.58560944 -601.53918457]
[93.04759216 -596.06402588]
[91.26582336 -589.71856689]
[94.12908173 -574.99438477]
[96.99233246 -560.27020264]
[99.85559082 -545.54602051]
[106.65321350 -558.91735840]
[119.55104065 -566.57543945]
[134.54479980 -566.14270020]
[146.97949219 -557.75354004]
[152.99462891 -544.01239014]
[150.72274780 -529.18542480]
[140.86915588 -517.87585449]
[126.49304199 -513.59484863]
[112.05763245 -517.67144775]
[102.04551697 -528.83807373]
[103.07361603 -513.87335205]
[104.10171509 -498.90863037]
[107.69134521 -492.45925903]
[105.03984070 -483.73181152]
[105.86255646 -468.75439453]
[106.68526459 -453.77697754]
[107.50797272 -438.79956055]
[109.86400604 -436.19247437]
[111.08083344 -432.31933594]
[110.57915497 -427.72494507]
[108.04349518 -423.19143677]
[108.24926758 -408.19284058]
[108.45504761 -393.19424438]
[108.76369476 -378.19741821]
[109.17520905 -363.20306396]
[109.58671570 -348.20870972]
[109.99822998 -333.21435547]
[118.08177948 -320.70416260]
[110.72598267 -306.69689941]
[111.13749695 -291.70254517]
[111.54900360 -276.70819092]
[111.96051788 -261.71383667]
[112.37202454 -246.71949768]
[112.78353882 -231.72514343]
[113.19504547 -216.73078918]
[113.60655975 -201.73643494]
[121.69010925 -189.22621155]
[114.33431244 -175.21896362]
[114.74582672 -160.22460938]
[115.15733337 -145.23025513]
[126.81694031 -138.74127197]
[133.80645752 -127.24781799]
[134.21058655 -113.69377136]
[127.81704712 -101.61302948]
[116.19984436 -94.20816803]
[116.40561676 -79.20957947]
[116.61139679 -64.21099091]
[116.81716919 -49.21240234]
[117.02294159 -34.21381760]
[120.25343323 -27.57728767]
[117.12724304 -19.00839424]
[117.12724304 -4.00839376]
[117.12724304 10.99160576]
[126.92222595 -0.36877939]
[141.49932861 -3.90545058]
[155.41130066 1.70319474]
[163.45945740 14.36128807]
[162.63629150 29.33868408]
[153.24943542 41.03855133]
[138.80661011 45.08881760]
[124.70487976 39.97595978]
[116.21428680 27.61197472]
[114.57133484 42.52172852]
[112.92839050 57.43148041]
[111.28544617 72.34123230]
[109.64250183 87.25098419]
[116.69792938 74.01388550]
[128.69192505 65.00587463]
[143.37094116 61.91944122]
[157.97702026 65.33449554]
[169.76585388 74.60938263]
[176.52246094 88.00147247]
[176.97738647 102.99457550]
[171.04513550 116.77167511]
[159.84030151 126.74423218]
[145.46815491 131.03852844]
[130.62899780 128.84773254]
[118.11329651 120.58590698]
[117.70178223 135.58026123]
[117.29026794 150.57461548]
[116.87876129 165.56896973]
[116.46724701 180.56332397]
[116.05574036 195.55767822]
[123.41152954 209.56492615]
[115.32798767 222.07513428]
[114.91647339 237.06948853]
[114.60782623 252.06631470]
[114.40204620 267.06491089]
[114.19627380 282.06347656]
[113.99050140 297.06207275]
[113.78472137 312.06066895]
[113.57894897 327.05926514]
[125.94550323 333.58126831]
[134.25810242 344.74029541]
[136.94166565 358.32653809]
[133.52879333 371.67987061]
[124.74015808 382.21078491]
[112.33308411 387.90246582]
[111.92157745 402.89682007]
[119.27736664 416.90408325]
[111.19381714 429.41430664]
[110.78231049 444.40866089]
[110.37079620 459.40301514]
[117.72659302 473.41024780]
[109.64304352 485.92047119]
[109.23152924 500.91482544]
[108.82002258 515.90917969]
[108.40850830 530.90350342]
[120.22660828 541.14398193]
[122.64630127 556.59320068]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 226]
[6 225]
[7 224]
[8 223]
[10 221]
[11 220]
[12 219]
[14 217]
[15 216]
[20 210]
[21 209]
[22 208]
[23 207]
[24 206]
[25 205]
[27 204]
[28 203]
[30 201]
[31 200]
[32 199]
[33 198]
[34 197]
[35 196]
[36 52]
[37 51]
[39 50]
[40 49]
[41 48]
[42 47]
[53 184]
[54 183]
[55 182]
[56 181]
[57 180]
[58 171]
[59 170]
[60 169]
[61 167]
[62 166]
[63 165]
[64 164]
[65 163]
[69 158]
[70 157]
[71 156]
[73 154]
[74 153]
[75 152]
[76 151]
[77 150]
[78 149]
[79 148]
[80 147]
[82 145]
[83 144]
[84 143]
[85 142]
[87 141]
[88 140]
[89 139]
[90 135]
[91 134]
[92 133]
[93 132]
[94 130]
[95 129]
[96 128]
[97 118]
[98 117]
[99 116]
[100 115]
[101 112]
[102 111]
[103 110]
[104 109]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
