%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 08:36:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCACCUGACCACUGACCGCCCCUAUUUAUUCGUCCGCUCGGACACCACGCCCGGGCUUGCCGGGGCCUGGACAGCUGCGAGGGCCGCCCGGACCGCGGGCCGGAAGGAGGCGCCCCCGCCCCGCCCCAGAGCUGGGCCCCCUGGGCAGGUUCCCCACCCCGCCCCACCGCAUCCUUCUCGGAGCUGGUGCCUGGGGCUGCAUUGCUGGAACUGUGUCAAGAGAGCAGAGUGAGAUUAAAGAGCGAGAAAGGAGA\
) } def
/len { sequence length } bind def

/coor [
[94.32522583 452.19668579]
[87.54721832 465.91955566]
[75.16143799 474.91128540]
[60.01404572 477.10562134]
[45.58580399 471.99832153]
[35.19221115 460.76303101]
[31.22164345 445.98150635]
[34.58650589 431.05047607]
[44.51358032 419.40093994]
[58.72169495 413.70986938]
[49.10356140 402.39495850]
[50.38196182 387.23513794]
[62.31528854 377.22348022]
[63.78554535 362.29571533]
[54.16741562 350.98080444]
[55.44581223 335.82098389]
[67.37914276 325.80929565]
[68.75777435 310.87280273]
[70.04473877 295.92810059]
[71.33169556 280.98342896]
[62.88969421 275.23028564]
[57.54287720 266.43081665]
[56.30657959 256.12756348]
[59.46858215 246.15931702]
[66.52571106 238.33282471]
[76.26262665 234.09555054]
[78.09878540 219.20835876]
[79.93494415 204.32116699]
[81.77111053 189.43395996]
[75.64994812 175.85528564]
[85.01834869 163.10601807]
[86.85450745 148.21882629]
[73.94150543 140.58638000]
[61.78464890 149.37333679]
[49.62778854 158.16030884]
[37.47093201 166.94728088]
[31.26146507 182.12538147]
[14.97783852 184.06845093]
[5.37125301 170.77764893]
[12.32413960 155.92539978]
[28.68396378 154.79042053]
[40.84082413 146.00344849]
[52.99768066 137.21649170]
[65.15454102 128.42951965]
[62.36965942 121.46572113]
[54.01502228 100.57433319]
[39.15148163 102.59304810]
[24.28794289 104.61175537]
[11.65460777 114.13590240]
[-1.99817097 108.18183899]
[-16.86171150 110.20055389]
[-31.72525024 112.21926117]
[-46.58879089 114.23796844]
[-59.22212601 123.76212311]
[-72.87490082 117.80805206]
[-87.73844147 119.82676697]
[-100.36960602 130.28552246]
[-115.64644623 124.32312012]
[-117.85345459 108.07316589]
[-104.72025299 98.25221252]
[-89.75715637 104.96322632]
[-74.89361572 102.94451141]
[-63.32341766 93.56475830]
[-48.60750198 99.37443542]
[-33.74396133 97.35572052]
[-18.88042068 95.33701324]
[-4.01688147 93.31829834]
[7.55331421 83.93854523]
[22.26923370 89.74821472]
[37.13277054 87.72950745]
[51.99631119 85.71080017]
[78.54523468 62.31187057]
[108.94071198 64.45845795]
[100.60716248 51.98641205]
[92.27360535 39.51436996]
[83.94004822 27.04232597]
[75.60649872 14.57028103]
[60.36277390 11.36611557]
[52.08903503 -1.40102565]
[55.23765945 -15.91383934]
[47.88977051 -21.29091072]
[46.87946320 -28.59046173]
[38.69958878 -41.16382980]
[30.51971436 -53.73720169]
[22.33983994 -66.31056976]
[6.35216379 -52.76937103]
[-21.04624557 -55.83143616]
[-32.16051102 -65.90482330]
[-43.27478027 -75.97820282]
[-54.38904572 -86.05158997]
[-65.50331116 -96.12497711]
[-81.53310394 -96.77708435]
[-90.90108490 -109.80093384]
[-86.42093658 -125.20572662]
[-71.52944946 -131.17424011]
[-57.65009308 -123.12792969]
[-55.42992783 -107.23924255]
[-44.31566238 -97.16585541]
[-33.20139313 -87.09247589]
[-22.08712769 -77.01908875]
[-10.97286034 -66.94570160]
[-4.68617535 -71.03564453]
[-12.86604977 -83.60900879]
[-13.66365433 -98.58779144]
[-0.29267946 -91.78888702]
[7.88719559 -79.21551514]
[14.17388058 -83.30545044]
[9.46865463 -97.54837799]
[3.82106709 -104.69044495]
[4.79424191 -111.99504089]
[0.26415282 -126.29463196]
[-4.26593637 -140.59422302]
[-8.79602528 -154.89381409]
[-21.26025772 -165.55096436]
[-17.99739075 -181.62223816]
[-2.36398506 -186.57487488]
[9.55765343 -175.31404114]
[5.50356483 -159.42390442]
[10.03365421 -145.12431335]
[14.56374359 -130.82472229]
[19.09383202 -116.52513123]
[23.71157646 -102.25360107]
[28.41680336 -88.01068115]
[34.91321182 -74.49044800]
[43.09308624 -61.91707611]
[51.27296066 -49.34370804]
[59.45283508 -36.77033615]
[67.70970154 -24.24739265]
[82.32272339 -21.60252953]
[90.95179749 -9.07281685]
[88.07854462 6.23672724]
[96.41209412 18.70877075]
[104.74565125 31.18081665]
[113.07920074 43.65285873]
[121.41275787 56.12490463]
[136.14221191 58.96093369]
[148.51104736 50.47495651]
[160.87989807 41.98897934]
[173.24873352 33.50300217]
[185.61756897 25.01702499]
[197.98641968 16.53104782]
[196.50939941 -2.46106172]
[208.74899292 -19.10816002]
[230.45658875 -24.11153793]
[239.53924561 -36.04909134]
[248.62191772 -47.98664474]
[257.70458984 -59.92419815]
[259.90310669 -75.59190369]
[273.76724243 -81.03572083]
[282.84991455 -92.97327423]
[278.25320435 -107.79386139]
[283.27758789 -122.47498322]
[295.99105835 -131.37144470]
[311.50506592 -131.06236267]
[323.85412598 -121.66660309]
[328.28976440 -106.79701996]
[323.10644531 -92.17126465]
[310.29718018 -83.41325378]
[294.78744507 -83.89060211]
[285.70480347 -71.95304871]
[284.15591431 -57.13919830]
[269.64212036 -50.84153366]
[260.55947876 -38.90398026]
[251.47680664 -26.96642494]
[242.39413452 -15.02887154]
[251.25552368 -2.92615843]
[265.37869263 -7.97950602]
[279.50186157 -13.03285408]
[293.62500000 -18.08620262]
[307.71688843 -23.22611237]
[321.77697754 -28.45239258]
[328.70632935 -34.35903168]
[336.04180908 -33.65538025]
[350.16497803 -38.70872879]
[364.28811646 -43.76207352]
[372.41964722 -57.59168625]
[388.32168579 -59.71411133]
[399.79556274 -48.50120163]
[398.03952026 -32.55454254]
[384.40063477 -24.10704994]
[369.34149170 -29.63891411]
[355.21832275 -24.58556557]
[341.09515381 -19.53221893]
[327.00326538 -14.39230728]
[312.94317627 -9.16602707]
[307.78335571 -3.90481162]
[298.67837524 -3.96304083]
[284.55520630 1.09030712]
[270.43203735 6.14365482]
[256.30886841 11.19700241]
[248.68090820 26.94007683]
[234.76298523 35.89710236]
[219.15830994 36.26222610]
[206.47239685 28.89988708]
[194.10354614 37.38586426]
[181.73471069 45.87184143]
[169.36587524 54.35781860]
[156.99702454 62.84379578]
[144.62818909 71.32977295]
[144.81227112 86.32864380]
[157.38563538 94.50852203]
[173.17262268 95.54850006]
[179.62159729 108.97459412]
[192.19496155 117.15447235]
[204.76834106 125.33435059]
[217.34170532 133.51422119]
[229.91506958 141.69409180]
[240.81141663 137.02543640]
[252.49006653 138.17117310]
[262.07382202 144.73323059]
[267.25744629 154.99349976]
[266.86169434 166.36228943]
[279.23056030 174.84826660]
[294.72000122 171.70941162]
[307.84585571 180.51211548]
[310.82077026 196.03388977]
[301.87976074 209.06593323]
[286.32742310 211.87657166]
[273.39062500 202.79830933]
[270.74456787 187.21710205]
[258.37573242 178.73112488]
[240.58854675 183.14515686]
[224.97125244 172.95652771]
[221.73519897 154.26747131]
[209.16183472 146.08758545]
[196.58845520 137.90771484]
[184.01509094 129.72784424]
[171.44172668 121.54796600]
[156.55406189 121.09306335]
[149.20576477 107.08188629]
[136.63238525 98.90201569]
[136.24893188 119.42932129]
[124.10076904 138.71824646]
[101.74170685 150.05499268]
[99.90554047 164.94218445]
[105.89537048 179.58569336]
[96.65830231 191.27012634]
[94.82214355 206.15731812]
[92.98597717 221.04450989]
[91.14981842 235.93170166]
[104.32650757 251.13395691]
[102.06343842 270.81570435]
[86.27639008 282.27038574]
[84.98942566 297.21505737]
[83.70246887 312.15975952]
[86.07932281 320.94924927]
[82.30691528 327.27957153]
[92.05776978 339.42694092]
[90.35407257 354.54486084]
[78.71331787 363.76596069]
[77.24305725 378.69372559]
[86.99391937 390.84109497]
[85.29021454 405.95904541]
[73.64946747 415.18011475]
[86.47430420 423.53369141]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 254]
[13 251]
[14 250]
[17 247]
[18 245]
[19 244]
[20 243]
[26 240]
[27 239]
[28 238]
[29 237]
[31 235]
[32 234]
[33 44]
[34 43]
[35 42]
[36 41]
[46 71]
[47 70]
[48 69]
[50 67]
[51 66]
[52 65]
[53 64]
[55 62]
[56 61]
[73 135]
[74 134]
[75 133]
[76 132]
[77 131]
[80 128]
[82 127]
[83 126]
[84 125]
[85 124]
[87 101]
[88 100]
[89 99]
[90 98]
[91 97]
[107 123]
[108 122]
[110 121]
[111 120]
[112 119]
[113 118]
[136 199]
[137 198]
[138 197]
[139 196]
[140 195]
[141 194]
[144 165]
[145 164]
[146 163]
[147 162]
[149 160]
[150 159]
[166 190]
[167 189]
[168 188]
[169 187]
[170 185]
[171 184]
[173 183]
[174 182]
[175 181]
[200 231]
[201 230]
[203 228]
[204 227]
[205 226]
[206 225]
[207 224]
[212 221]
[213 220]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
