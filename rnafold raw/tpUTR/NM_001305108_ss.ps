%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 00:52:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCCCCGCAGAGACUGUGCUUGGGAGCCUGUGGCCAGCAGCCCCCACUGCACCCCUGCCCCCAGGUGACACGCUUCUGAGCAGGGGCCCCUGGGGACUUCAACUGCCCAGCAACAUGGAGGAUGGUGUCCUGAGGCCUCCAAGGACGGUCCCCACCCCUCUACGUUUCCCCAAUAAAGCCUUUUAAAAACCUGCC\
) } def
/len { sequence length } bind def

/coor [
[233.87528992 89.31054688]
[219.01289368 91.33758545]
[204.15048218 93.36463165]
[189.28807068 95.39167023]
[174.42567444 97.41871643]
[159.56326294 99.44576263]
[147.99833679 108.83200073]
[133.27915955 103.03057861]
[118.41674805 105.05762482]
[109.56631470 116.53002930]
[95.20970917 118.48809052]
[83.61029053 109.80477905]
[68.74788666 111.83182526]
[53.88548279 113.85887146]
[39.05728912 116.12265778]
[24.28748703 118.74047089]
[9.53902721 121.47595978]
[-5.20943260 124.21145630]
[-19.93561363 127.06445312]
[-34.63857651 130.03479004]
[-49.34154129 133.00511169]
[-64.04450226 135.97544861]
[-78.74746704 138.94578552]
[-93.45043182 141.91610718]
[-108.15339661 144.88644409]
[-120.14813232 155.20326233]
[-134.15553284 150.13946533]
[-148.85848999 153.10978699]
[-157.61378479 165.99320984]
[-172.56700134 168.79609680]
[-184.79541016 160.36987305]
[-192.59815979 165.14179993]
[-199.75643921 163.26837158]
[-214.50489807 166.00386047]
[-220.14460754 175.32153320]
[-229.78576660 179.89709473]
[-240.13513184 178.43528748]
[-247.80235291 171.65917969]
[-262.63055420 173.92297363]
[-277.45874023 176.18676758]
[-292.28692627 178.45054626]
[-301.44454956 191.33128357]
[-317.04174805 193.88150024]
[-329.82492065 184.58821106]
[-332.21011353 168.96493530]
[-322.78216553 156.28071594]
[-307.13455200 154.06085205]
[-294.55072021 163.62236023]
[-279.72253418 161.35856628]
[-264.89434814 159.09478760]
[-250.06614685 156.83099365]
[-235.90913391 143.67013550]
[-217.24038696 151.25540161]
[-202.49192810 148.51991272]
[-187.76574707 145.66690063]
[-179.76742554 133.15440369]
[-164.89884949 129.93261719]
[-151.82882690 138.40682983]
[-137.12585449 135.43649292]
[-126.18277740 125.33213806]
[-111.12372589 130.18348694]
[-96.42076111 127.21315002]
[-81.71779633 124.24282074]
[-67.01483154 121.27248383]
[-52.31187057 118.30215454]
[-37.60890579 115.33182526]
[-22.90594482 112.36149597]
[-16.96522903 107.95030212]
[-7.94492579 109.46298981]
[6.80353451 106.72750092]
[21.55199432 103.99200439]
[27.56229591 99.67611694]
[36.55733109 101.33245087]
[40.01094055 98.01853180]
[45.58663940 96.84629059]
[51.85843658 98.99645996]
[66.72084045 96.96942139]
[81.58325195 94.94237518]
[90.43368530 83.46997070]
[104.79029083 81.51190948]
[116.38970947 90.19522095]
[131.25210571 88.16817474]
[143.88011169 78.63694763]
[157.53622437 84.58335876]
[172.39862061 82.55631256]
[187.26103210 80.52926636]
[202.12344360 78.50222778]
[216.98583984 76.47518158]
[231.84825134 74.44813538]
[236.80523682 69.70557404]
[242.79864502 67.99176788]
[248.28457642 69.16555023]
[261.54498291 62.15399933]
[274.80538940 55.14245224]
[288.06579590 48.13090515]
[301.32617188 41.11935806]
[314.58657837 34.10781097]
[299.59967041 33.48121262]
[285.82019043 27.55448723]
[275.05783081 17.10598946]
[268.72595215 3.50791955]
[267.65615845 -11.45388412]
[271.98895264 -25.81448746]
[281.15530396 -37.68790817]
[293.95138550 -45.51481628]
[308.69668579 -48.26729584]
[323.45471191 -45.58386612]
[336.28726196 -37.81694412]
[345.50909424 -25.98655701]
[349.90905762 -11.64639378]
[348.90933228 3.32025337]
[342.64117432 16.94781303]
[331.93032837 27.44488144]
[346.47442627 23.77480507]
[361.01852417 20.10472870]
[372.50613403 9.22608280]
[386.73968506 13.61421204]
[401.28378296 9.94413567]
[415.82785034 6.27405882]
[430.37194824 2.60398269]
[444.91604614 -1.06609380]
[459.46011353 -4.73617029]
[472.36129761 -17.86799240]
[489.04379272 -12.43767452]
[503.52752686 -16.33921242]
[518.01123047 -20.24074936]
[532.36315918 -24.60217094]
[546.56872559 -29.41904449]
[560.77429199 -34.23591614]
[574.97979736 -39.05278778]
[589.18536377 -43.86966324]
[603.39093018 -48.68653488]
[609.79394531 -59.89184952]
[621.73388672 -63.60755157]
[632.64147949 -58.36096191]
[646.92205811 -62.95069122]
[660.15142822 -73.55352020]
[674.00213623 -63.77631378]
[668.44128418 -47.76028442]
[651.51177979 -48.67013168]
[637.23120117 -44.08040237]
[626.17230225 -30.46075821]
[608.20782471 -34.48098373]
[594.00225830 -29.66410828]
[579.79669189 -24.84723663]
[565.59112549 -20.03036308]
[551.38562012 -15.21349144]
[537.18005371 -10.39661884]
[535.82025146 -7.93273306]
[533.39691162 -5.86229467]
[530.05615234 -4.59519720]
[526.09039307 -4.48046064]
[521.91278076 -5.75703335]
[507.42904663 -1.85549617]
[492.94534302 2.04604077]
[486.63574219 12.37517071]
[474.59207153 15.73948002]
[463.13018799 9.80791950]
[448.58612061 13.47799587]
[434.04202271 17.14807129]
[419.49792480 20.81814766]
[404.95385742 24.48822403]
[390.40975952 28.15830040]
[379.96240234 38.77443695]
[364.68859863 34.64881897]
[350.14450073 38.31889343]
[335.60040283 41.98897171]
[321.59814453 47.36820984]
[308.33773804 54.37975693]
[295.07733154 61.39130402]
[281.81692505 68.40285492]
[268.55651855 75.41439819]
[255.29612732 82.42594910]
[270.29464722 82.21423340]
[284.92337036 85.53081512]
[298.36410522 92.19017029]
[309.86499023 101.81980896]
[318.78271484 113.88108063]
[324.61843872 127.69933319]
[327.04577637 142.50163269]
[325.92895508 157.45999146]
[321.33038330 171.73771667]
[313.50735474 184.53616333]
[302.89743042 195.13943481]
[290.09408569 202.95445251]
[275.81350708 207.54403687]
[260.85443115 208.65150452]
[246.05366516 206.21488953]
[232.23905945 200.37048340]
[220.18338013 191.44520569]
[210.56095886 179.93829346]
[203.91003418 166.49340820]
[200.60263062 151.86257935]
[200.82373047 136.86421204]
[204.56100464 122.33723450]
[211.60537720 109.09424591]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 89]
[2 88]
[3 87]
[4 86]
[5 85]
[6 84]
[8 82]
[9 81]
[12 78]
[13 77]
[14 76]
[15 73]
[16 71]
[17 70]
[18 69]
[19 67]
[20 66]
[21 65]
[22 64]
[23 63]
[24 62]
[25 61]
[27 59]
[28 58]
[31 55]
[33 54]
[34 53]
[38 51]
[39 50]
[40 49]
[41 48]
[92 173]
[93 172]
[94 171]
[95 170]
[96 169]
[97 168]
[113 167]
[114 166]
[115 165]
[117 163]
[118 162]
[119 161]
[120 160]
[121 159]
[122 158]
[124 155]
[125 154]
[126 153]
[127 148]
[128 147]
[129 146]
[130 145]
[131 144]
[132 143]
[135 141]
[136 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
