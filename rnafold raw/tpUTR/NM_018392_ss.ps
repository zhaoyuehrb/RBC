%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 09:13:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGACAUGGUGUAAAUAUUUUGUAUUUAUGUAAAUUCAGACUCAUUUUACAUGAUAUAUUUUUUAUAUUUUUAUUACUCUAAACCCUCUUAUUAAAAAUAUGAUAUUUAAAUAACAUAGUAAACACAUGUAAAAAUUUUGUUCUUCAAAAAAGUGUACAAAAGGUAGUAUAAAAUCCUACUAAUAAAAAUAAGCUUUUUUCUAAGAAGAAUGA\
) } def
/len { sequence length } bind def

/coor [
[384.43646240 271.61553955]
[367.76571655 268.24105835]
[354.20391846 257.88418579]
[346.50994873 242.59094238]
[346.27563477 225.41758728]
[332.55761719 219.34992981]
[318.83963013 213.28225708]
[305.12164307 207.21459961]
[291.40362549 201.14694214]
[284.01718140 201.31596375]
[277.53054810 194.88909912]
[263.90264893 188.62164307]
[250.27478027 182.35418701]
[241.05264282 186.74618530]
[230.71806335 185.30842590]
[222.71492004 178.27639771]
[219.84339905 167.78924561]
[206.40447998 161.12626648]
[192.96556091 154.46328735]
[179.52664185 147.80030823]
[164.68701172 149.07893372]
[155.75994873 136.01684570]
[142.32102966 129.35386658]
[128.88209534 122.69087982]
[108.14196014 138.86456299]
[79.84049225 137.62686157]
[57.60145569 116.96281433]
[43.63073349 122.42349243]
[29.66001511 127.88417053]
[15.68929672 133.34484863]
[1.71857798 138.80552673]
[-12.25214100 144.26620483]
[-26.22286034 149.72688293]
[-40.19358063 155.18756104]
[-54.16429901 160.64823914]
[-55.79197311 175.86695862]
[-64.31533051 188.57958984]
[-77.77577209 195.86486816]
[-93.08016968 196.04867554]
[-106.71170807 189.08880615]
[-115.53794098 176.58454895]
[-117.53067017 161.40933228]
[-112.23198700 147.05026245]
[-100.85948181 136.80699158]
[-86.02647400 133.03332520]
[-71.14148712 136.59642029]
[-59.62497711 146.67752075]
[-45.65425873 141.21684265]
[-31.68353844 135.75616455]
[-17.71282005 130.29548645]
[-3.74210072 124.83480835]
[10.22861862 119.37413025]
[24.19933701 113.91345215]
[38.17005539 108.45277405]
[52.14077377 102.99209595]
[54.03777695 95.73596954]
[39.15932846 93.83024597]
[24.37714958 96.37725067]
[14.23125076 85.32913971]
[18.02529335 70.81689453]
[32.28018570 66.14806366]
[43.92433929 75.60382080]
[57.83177567 81.22371674]
[59.72877502 73.96758270]
[50.21817398 62.36808395]
[40.70756912 50.76858521]
[31.19696617 39.16908264]
[21.68636131 27.56958199]
[12.17575836 15.97008133]
[2.66515493 4.37058067]
[-6.84544849 -7.22892046]
[-16.35605240 -18.82842064]
[-25.86665535 -30.42792130]
[-35.37725830 -42.02742386]
[-49.36607742 -36.29990768]
[-64.42176819 -34.95178604]
[-79.20560455 -38.10292816]
[-92.40300751 -45.47313690]
[-102.84046936 -56.40706253]
[-109.58991241 -69.93246460]
[-112.05116272 -84.84667206]
[-110.00538635 -99.82352448]
[-103.63447571 -113.53129578]
[-93.50493622 -124.75109863]
[-80.51747894 -132.48526001]
[-65.82694244 -136.04609680]
[-50.73959351 -135.11694336]
[-36.59699249 -129.78044128]
[-24.65668869 -120.51110840]
[-15.98040485 -108.13316345]
[-11.33963203 -93.74724579]
[-11.14702415 -78.63254547]
[-15.41970825 -64.13304138]
[-23.77775955 -51.53802490]
[-14.26715469 -39.93852615]
[-4.75655127 -28.33902550]
[4.75405216 -16.73952293]
[14.26465607 -5.14002323]
[23.77525902 6.45947790]
[33.28586197 18.05897903]
[42.79646683 29.65847969]
[52.30707169 41.25798035]
[61.81767273 52.85747910]
[71.32827759 64.45698547]
[80.44419861 59.63409805]
[90.23925781 57.05416107]
[100.18042755 56.77169800]
[109.74557495 58.71847534]
[118.45089722 62.71131134]
[125.87540436 68.46577454]
[131.68112183 75.61492920]
[135.62828064 83.73186493]
[137.58454895 92.35472870]
[137.52818298 101.01276398]
[135.54508972 109.25195312]
[148.98400879 115.91493988]
[162.42292786 122.57791901]
[178.22380066 121.77587128]
[186.18962097 134.36137390]
[199.62854004 141.02436829]
[213.06745911 147.68734741]
[226.50639343 154.35032654]
[246.54864502 152.17088318]
[256.54223633 168.72631836]
[270.17010498 174.99377441]
[283.79797363 181.26123047]
[297.47128296 187.42893982]
[311.18930054 193.49659729]
[324.90728760 199.56427002]
[338.62527466 205.63192749]
[352.34329224 211.69958496]
[361.76010132 202.43463135]
[373.73556519 196.93363953]
[386.83584595 195.83135986]
[399.50048828 199.23735046]
[410.22830200 206.72541809]
[417.75537109 217.38685608]
[421.20385742 229.94067383]
[420.18441772 242.88752747]
[433.71923828 249.35343933]
[447.25408936 255.81933594]
[460.78894043 262.28524780]
[474.32379150 268.75115967]
[487.85864258 275.21707153]
[501.39346313 281.68298340]
[514.92834473 288.14889526]
[528.46319580 294.61477661]
[542.18115234 300.68243408]
[556.07061768 306.34667969]
[569.96002197 312.01089478]
[583.84948730 317.67514038]
[597.73889160 323.33935547]
[611.62835693 329.00360107]
[625.51782227 334.66781616]
[639.40722656 340.33206177]
[648.54864502 328.33746338]
[660.47412109 319.12506104]
[674.36706543 313.31805420]
[689.27819824 311.30676270]
[704.19018555 313.22235107]
[718.08740234 318.92825317]
[730.02471924 328.02996826]
[739.19201660 339.90231323]
[744.96923828 353.73229980]
[746.96807861 368.57485962]
[745.05822754 383.41741943]
[758.94769287 389.08163452]
[772.83709717 394.74588013]
[786.72656250 400.41009521]
[800.61596680 406.07434082]
[813.73034668 397.78018188]
[829.21307373 398.81210327]
[841.11071777 408.77328491]
[844.84844971 423.83349609]
[838.98895264 438.20172119]
[825.78540039 446.35311890]
[810.31475830 445.15328979]
[798.52587891 435.06362915]
[794.95178223 419.96377563]
[781.06231689 414.29953003]
[767.17291260 408.63531494]
[753.28344727 402.97109985]
[739.39398193 397.30685425]
[730.37957764 409.25210571]
[718.57110596 418.46395874]
[704.76995850 424.30969238]
[689.91455078 426.38534546]
[675.01660156 424.54345703]
[661.09252930 418.90359497]
[649.09362793 409.84466553]
[639.84149170 397.97940063]
[633.97149658 384.11291504]
[631.88940430 369.18811035]
[633.74298096 354.22149658]
[619.85357666 348.55725098]
[605.96411133 342.89303589]
[592.07470703 337.22879028]
[578.18524170 331.56457520]
[564.29583740 325.90036011]
[550.40637207 320.23611450]
[536.51690674 314.57189941]
[533.88580322 315.53067017]
[530.71691895 315.50659180]
[527.38214111 314.28985596]
[524.32226562 311.80874634]
[521.99725342 308.14962769]
[508.46240234 301.68371582]
[494.92758179 295.21780396]
[481.39273071 288.75192261]
[467.85787964 282.28601074]
[454.32302856 275.82009888]
[440.78817749 269.35418701]
[427.25332642 262.88827515]
[413.71850586 256.42236328]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 131]
[6 130]
[7 129]
[8 128]
[9 127]
[11 126]
[12 125]
[13 124]
[17 122]
[18 121]
[19 120]
[20 119]
[22 117]
[23 116]
[24 115]
[27 55]
[28 54]
[29 53]
[30 52]
[31 51]
[32 50]
[33 49]
[34 48]
[35 47]
[64 104]
[65 103]
[66 102]
[67 101]
[68 100]
[69 99]
[70 98]
[71 97]
[72 96]
[73 95]
[74 94]
[139 214]
[140 213]
[141 212]
[142 211]
[143 210]
[144 209]
[145 208]
[146 207]
[147 206]
[148 201]
[149 200]
[150 199]
[151 198]
[152 197]
[153 196]
[154 195]
[155 194]
[166 183]
[167 182]
[168 181]
[169 180]
[170 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
