%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 16:38:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUACAGGAAGCAAACUAAGCCCCCGCUGUAAUGAAACACCUUCUCUGGAGCCAAGUCCAGAUUUACACUGGGAGAGGUGCCAGCAACUGAAUAAAUACCUCUUAGCUGAGUGGAAA\
) } def
/len { sequence length } bind def

/coor [
[75.72336578 152.99987793]
[61.11481476 143.43138123]
[49.75462723 153.22657776]
[38.39443970 163.02178955]
[27.03425026 172.81700134]
[15.67406273 182.61221313]
[17.76841354 200.51243591]
[8.86401844 216.00222778]
[-7.37317324 223.07621765]
[-24.47718239 219.11955261]
[-35.29521942 229.51042175]
[-34.06583405 245.09959412]
[-43.18664551 257.80175781]
[-58.35108185 261.61932373]
[-72.39896393 254.74975586]
[-78.69731140 240.43664551]
[-74.27223969 225.43823242]
[-61.21312332 216.83627319]
[-45.68608475 218.69238281]
[-34.86804581 208.30151367]
[-38.31254959 196.50808716]
[-36.35330200 184.30555725]
[-29.30761909 174.06344604]
[-18.48658943 167.79768372]
[-5.95147276 166.77383423]
[5.87885284 171.25202942]
[17.23904037 161.45681763]
[28.59922791 151.66160583]
[39.95941544 141.86639404]
[51.31960297 132.07118225]
[47.78934860 125.93048096]
[45.02989578 119.40694427]
[43.08198929 112.59690857]
[41.97438431 105.60089111]
[41.72343445 98.52218628]
[42.33284378 91.46530151]
[43.79361343 84.53441620]
[46.08418274 77.83185577]
[49.17073059 71.45657349]
[53.00768661 65.50268555]
[57.53841019 60.05809784]
[62.69601059 55.20318604]
[68.40434265 51.00962830]
[74.57913971 47.53933334]
[69.82911682 33.31128693]
[65.07909393 19.08323860]
[60.32907867 4.85519171]
[55.57905960 -9.37285519]
[50.82903671 -23.60090065]
[36.57976913 -30.43712044]
[31.41684341 -45.37431335]
[38.40333176 -59.55051041]
[53.39427567 -64.55522156]
[67.49581146 -57.41924286]
[72.34175110 -42.37622452]
[65.05708313 -28.35092163]
[69.80710602 -14.12287426]
[74.55712128 0.10517193]
[79.30714417 14.33321857]
[84.05716705 28.56126595]
[88.80718231 42.78931046]
[108.55131531 42.33530426]
[127.31399536 48.49963379]
[142.94177246 60.57479858]
[153.64100647 77.17490387]
[158.18370056 96.39470673]
[173.14991760 97.40087128]
[188.11613464 98.40703583]
[203.08235168 99.41320038]
[217.37045288 92.61901093]
[229.55004883 101.19259644]
[244.51626587 102.19876099]
[259.51086426 102.60148621]
[274.50952148 102.40010834]
[289.50814819 102.19873047]
[304.50680542 101.99735260]
[319.50546265 101.79596710]
[334.50411987 101.59458923]
[349.50274658 101.39321136]
[354.47207642 87.07254028]
[364.04205322 75.31707001]
[377.05709839 67.54634094]
[391.94558716 64.69869995]
[406.90963745 67.11801147]
[420.14227295 74.51214600]
[430.04559326 85.98820496]
[435.42370605 100.16041565]
[435.62722778 115.31740570]
[430.63153076 129.62890625]
[421.03988647 141.36671448]
[408.01052856 149.11344910]
[393.11685181 151.93363953]
[378.15728760 149.48675537]
[364.93829346 142.06825256]
[355.05612183 130.57395935]
[349.70413208 116.39186096]
[334.70547485 116.59323883]
[319.70684814 116.79461670]
[304.70819092 116.99599457]
[289.70953369 117.19737244]
[274.71087646 117.39875031]
[259.71224976 117.60012817]
[256.94647217 119.98245239]
[252.84266663 121.07192993]
[248.05619812 120.23330688]
[243.51010132 117.16497803]
[228.54388428 116.15881348]
[215.32627869 123.02497101]
[202.07618713 114.37941742]
[187.10997009 113.37325287]
[172.14375305 112.36708832]
[157.17753601 111.36092377]
[151.24703979 127.78636932]
[140.71765137 141.71827698]
[126.53427887 151.90640259]
[109.96972656 157.43646240]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 30]
[3 29]
[4 28]
[5 27]
[6 26]
[10 20]
[11 19]
[44 61]
[45 60]
[46 59]
[47 58]
[48 57]
[49 56]
[66 112]
[67 111]
[68 110]
[69 109]
[71 107]
[72 106]
[73 102]
[74 101]
[75 100]
[76 99]
[77 98]
[78 97]
[79 96]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
