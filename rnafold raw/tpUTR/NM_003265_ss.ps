%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 06:29:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUUAUUUAAAUAUUCAAUUAGCAAAGGAGAAACUUUCUCAAUUUAAAAAGUUCUAUGGCAAAUUUAAGUUUUCCAUAAAGGUGUUAUAAUUUGUUUAUUCAUAUUUGUAAAUGAUUAUAUUCUAUCACAAUUACAUCUCUUCUAGGAAAAUGUGUCUCCUUAUUUCAGGCCUAUUUUUGACAAUUGACUUAAUUUUACCCAAAAUAAAACAUAUAAGCACGUAA\
) } def
/len { sequence length } bind def

/coor [
[61.67340851 489.30197144]
[56.13300323 475.34414673]
[52.25050354 460.83749390]
[50.07840729 445.97821045]
[49.64609146 430.96722412]
[50.95940781 416.00756836]
[54.00059128 401.30151367]
[58.72851562 387.04797363]
[65.07923889 373.43972778]
[72.96687317 360.66076660]
[82.28475189 348.88394165]
[92.90685272 338.26849365]
[104.68953705 328.95803833]
[117.47344971 321.07843018]
[131.08570862 314.73626709]
[126.37120056 300.49639893]
[121.65669250 286.25656128]
[116.94218445 272.01669312]
[112.22767639 257.77685547]
[107.51317596 243.53698730]
[94.13072205 237.09918213]
[89.14669037 222.72509766]
[95.98999786 208.73199463]
[91.27548981 194.49214172]
[86.56098938 180.25228882]
[81.84648132 166.01243591]
[77.13197327 151.77258301]
[62.85969543 147.15716553]
[50.69997787 155.94017029]
[38.54025650 164.72317505]
[26.38053703 173.50617981]
[14.22081661 182.28918457]
[4.92119122 196.46499634]
[-11.27500534 191.45304871]
[-10.94248772 174.50236511]
[5.43780947 170.12947083]
[17.59753036 161.34646606]
[29.75724983 152.56346130]
[41.91696930 143.78045654]
[54.07669067 134.99743652]
[52.78003311 127.61038208]
[38.00590897 130.20368958]
[23.23178673 132.79701233]
[8.45766258 135.39031982]
[-6.31646061 137.98364258]
[-21.09058380 140.57695007]
[-35.86474609 143.17004395]
[-38.45760345 128.39582825]
[-23.68389702 125.80282593]
[-8.90977478 123.20951080]
[5.86434889 120.61620331]
[20.63847160 118.02288818]
[35.41259766 115.42957306]
[50.18671799 112.83625793]
[48.89006424 105.44919586]
[34.46603775 101.33245850]
[20.04201698 97.21571350]
[5.61799288 93.09897614]
[-8.80603027 88.98223114]
[-24.19979477 92.63498688]
[-34.31486130 81.70178986]
[-48.73888397 77.58505249]
[-63.16290665 73.46831512]
[-77.58692932 69.35157013]
[-93.35382843 73.86122131]
[-104.95305634 62.26855087]
[-100.45231628 46.49910736]
[-84.48159027 42.77513885]
[-73.47019196 54.92754745]
[-59.04616928 59.04428864]
[-44.62214279 63.16102982]
[-30.19812202 67.27777100]
[-15.83605957 63.33056259]
[-4.68928957 74.55821228]
[9.73473358 78.67494965]
[24.15875626 82.79169464]
[38.58277893 86.90843201]
[53.00680161 91.02517700]
[69.31655884 73.14817047]
[89.34306335 68.02426910]
[87.88578033 53.09522629]
[86.42848969 38.16618347]
[84.97120667 23.23714066]
[83.51391602 8.30809784]
[82.05663300 -6.62094498]
[79.25820160 -21.35759354]
[75.14145660 -35.78161621]
[71.02471924 -50.20563889]
[66.90797424 -64.62966156]
[62.79123688 -79.05368805]
[58.67449570 -93.47770691]
[54.55775452 -107.90173340]
[49.19885254 -115.28538513]
[50.48553467 -122.55491638]
[46.56969452 -137.03477478]
[42.65385056 -151.51463318]
[38.73800659 -165.99447632]
[34.82216263 -180.47433472]
[30.90632057 -194.95419312]
[16.35961533 -200.35539246]
[7.79388475 -213.29400635]
[8.50282669 -228.79489136]
[18.21383858 -240.89761353]
[33.19283676 -244.94844055]
[47.68009186 -239.38973999]
[56.10496140 -226.35896301]
[55.22790527 -210.86669922]
[45.38617325 -198.87002563]
[49.30201721 -184.39018250]
[53.21786118 -169.91032410]
[57.13370514 -155.43046570]
[61.04954529 -140.95060730]
[64.96539307 -126.47076416]
[68.98178101 -112.01847076]
[73.09851837 -97.59445190]
[77.21526337 -83.17042542]
[81.33200073 -68.74640656]
[85.44873810 -54.32238007]
[89.56548309 -39.89835739]
[93.68222046 -25.47433281]
[97.59916687 -39.95388794]
[107.00775909 -51.63628769]
[120.31973267 -58.54941559]
[135.28788757 -59.52627182]
[149.38545227 -54.40195084]
[160.23262024 -44.04148865]
[165.99826050 -30.19384193]
[165.70909119 -15.19662952]
[159.41390991 -1.58153498]
[148.17543030 8.35307503]
[133.89080811 12.93013763]
[118.97143555 11.37699795]
[105.93584442 3.95584202]
[96.98567200 -8.07823277]
[98.44296265 6.85081005]
[99.90024567 21.77985382]
[101.35753632 36.70889664]
[102.81481934 51.63793945]
[104.27210999 66.56697845]
[110.36441803 67.92826080]
[116.10118866 70.38970947]
[121.28562927 73.86688995]
[125.73990631 78.24052429]
[129.31121826 83.36058807]
[143.67662048 79.04374695]
[158.04202271 74.72689819]
[172.40744019 70.41005707]
[174.82246399 54.31451035]
[183.98428345 40.93285751]
[198.01545715 32.91732788]
[214.07975769 31.82967949]
[228.95536804 37.83714294]
[239.68107605 49.68907166]
[253.98509216 45.17296219]
[268.28909302 40.65685272]
[275.35800171 26.52157974]
[290.37783813 21.60424423]
[304.43759155 28.82221603]
[309.19586182 43.89319611]
[301.82965088 57.87584305]
[286.70919800 62.47449875]
[272.80520630 54.96086502]
[258.50119019 59.47697449]
[244.19718933 63.99308395]
[242.89958191 77.79991913]
[236.41894531 90.10912323]
[225.70382690 99.04824829]
[212.34967041 103.24331665]
[198.36131287 102.02993011]
[185.85205078 95.55829620]
[176.72427368 84.77546692]
[162.35887146 89.09230804]
[147.99346924 93.40914917]
[133.62806702 97.72599030]
[127.14480591 130.42456055]
[91.37182617 147.05807495]
[96.08633423 161.29792786]
[100.80084229 175.53778076]
[105.51534271 189.77763367]
[110.22985077 204.01748657]
[124.07144928 211.16226196]
[128.64978027 225.67066956]
[121.75302887 238.82247925]
[126.46753693 253.06233215]
[131.18203735 267.30218506]
[135.89654541 281.54205322]
[140.61105347 295.78189087]
[145.32556152 310.02175903]
[160.03311157 306.98785400]
[174.99342346 305.68194580]
[190.00419617 306.12167358]
[204.86239624 308.30114746]
[219.36712646 312.19082642]
[233.32218933 317.73812866]
[246.53887939 324.86807251]
[258.83843994 333.48416138]
[270.05453491 343.46994019]
[280.03549194 354.69030762]
[288.64633179 366.99356079]
[295.77059937 380.21328735]
[301.31192017 394.17074585]
[305.19540405 408.67712402]
[307.36849976 423.53625488]
[307.80181885 438.54721069]
[306.48950195 453.50698853]
[303.44927979 468.21322632]
[298.72232056 482.46707153]
[292.37249756 496.07577515]
[284.48571777 508.85525513]
[275.16864014 520.63269043]
[264.54724121 531.24884033]
[252.76516724 540.56011963]
[239.98178101 548.44055176]
[226.36994934 554.78363037]
[212.11376953 559.50354004]
[197.40602112 562.53643799]
[182.44560242 563.84136963]
[167.43487549 563.40063477]
[152.57679749 561.22021484]
[138.07234192 557.32952881]
[124.11764526 551.78131104]
[110.90143585 544.65051270]
[98.60244751 536.03356934]
[87.38701630 526.04705811]
[77.40679932 514.82598877]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 188]
[16 187]
[17 186]
[18 185]
[19 184]
[20 183]
[23 180]
[24 179]
[25 178]
[26 177]
[27 176]
[28 40]
[29 39]
[30 38]
[31 37]
[32 36]
[55 78]
[56 77]
[57 76]
[58 75]
[59 74]
[61 72]
[62 71]
[63 70]
[64 69]
[80 139]
[81 138]
[82 137]
[83 136]
[84 135]
[85 134]
[86 120]
[87 119]
[88 118]
[89 117]
[90 116]
[91 115]
[92 114]
[94 113]
[95 112]
[96 111]
[97 110]
[98 109]
[99 108]
[144 174]
[145 173]
[146 172]
[147 171]
[153 164]
[154 163]
[155 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
