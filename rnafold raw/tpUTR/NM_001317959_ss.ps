%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 20:08:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGGUUCAGAGCCAGGAGCGCUGCCCCAGGGAAAGAGUUAAUCCCCUGCCCCCAGCCCCCCAGCCUCGGCACAGCUCCCCUAAAAAGCCAAUAAAGCCUGCUGGAUACAG\
) } def
/len { sequence length } bind def

/coor [
[101.62813568 114.60639954]
[95.44961548 128.27482605]
[89.27110291 141.94325256]
[97.07015991 155.35795593]
[95.46128082 170.79139709]
[85.06310272 182.30911255]
[69.87393951 185.48228455]
[55.73434067 179.09078979]
[48.08126450 165.59226990]
[49.85747528 150.17718506]
[60.37998199 138.77294922]
[75.60266876 135.76473999]
[81.78118896 122.09631348]
[87.95970917 108.42788696]
[83.36485291 94.14897156]
[70.37446594 86.64897156]
[61.23249435 85.02690887]
[57.12691116 78.74845886]
[48.03450012 76.86833191]
[44.10823441 70.47621155]
[31.56297112 62.25329208]
[19.01770782 54.03037262]
[6.47244644 45.80745316]
[-9.18469334 52.01856613]
[-25.31289864 47.76828003]
[-35.66817093 34.90488434]
[-36.36211777 18.57128906]
[-49.13505554 10.70667934]
[-61.90799332 2.84206986]
[-74.68093109 -5.02253914]
[-87.45386505 -12.88714886]
[-100.27523041 -4.60612345]
[-115.42095184 -2.71667957]
[-129.88381958 -7.59396696]
[-140.79225159 -18.26959610]
[-145.98034668 -32.62391663]
[-144.41799927 -47.80686188]
[-136.41543579 -60.80385208]
[-123.56156158 -69.03432465]
[-108.40852356 -70.86410522]
[-93.96496582 -65.92990112]
[-83.09867096 -55.21139908]
[-77.96714020 -40.83676147]
[-79.58925629 -25.66008568]
[-66.81632233 -17.79547691]
[-54.04338455 -9.93086720]
[-41.27044678 -2.06625795]
[-28.49750900 5.79835129]
[-16.59781075 -0.43077123]
[-3.06703520 0.07471197]
[8.51933861 7.28925323]
[15.04604912 19.40022469]
[14.69536591 33.26219177]
[27.24062729 41.48511124]
[39.78588867 49.70803070]
[52.33115005 57.93095016]
[64.99151611 65.97551727]
[77.87446594 73.65859222]
[90.86485291 81.15859222]
[119.02898407 86.78197479]
[133.99145508 85.72150421]
[148.95391846 84.66104126]
[163.91638184 83.60057831]
[178.87884521 82.54011536]
[185.64509583 73.78961182]
[195.92745972 70.35787201]
[206.16587830 73.17341614]
[212.95812988 81.04517365]
[227.95661926 80.83290863]
[242.95512390 80.62064362]
[253.36007690 63.76144028]
[271.61657715 56.43653488]
[290.51708984 61.35800552]
[302.70623779 76.43822479]
[317.58474731 74.53295898]
[332.46325684 72.62769318]
[338.99487305 58.65122986]
[352.05801392 50.44407654]
[367.48431396 50.62511063]
[380.35128784 59.13656235]
[386.55313110 73.26245880]
[384.11080933 88.49527740]
[373.80374146 99.97428131]
[358.92080688 104.03656006]
[344.21115112 99.38585663]
[334.36853027 87.50619507]
[319.49002075 89.41146851]
[304.61151123 91.31673431]
[301.65621948 101.56407166]
[295.37426758 110.23039246]
[286.49084473 116.27046967]
[276.04684448 118.94483948]
[265.27673340 117.91027832]
[255.46289062 113.26358032]
[247.78268433 105.53317261]
[243.16738892 95.61914825]
[228.16888428 95.83140564]
[213.17037964 96.04367065]
[197.49305725 107.21309662]
[179.93931580 97.50258636]
[164.97685242 98.56304932]
[150.01437378 99.62351227]
[135.05191040 100.68397522]
[120.08944702 101.74443817]
[134.70317078 105.12661743]
[144.18875122 116.74658203]
[144.57664490 131.74156189]
[135.70451355 143.83641052]
[121.28520203 147.96961975]
[107.35295868 142.41151428]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 14]
[2 13]
[3 12]
[15 59]
[16 58]
[18 57]
[20 56]
[21 55]
[22 54]
[23 53]
[27 48]
[28 47]
[29 46]
[30 45]
[31 44]
[60 104]
[61 103]
[62 102]
[63 101]
[64 100]
[68 98]
[69 97]
[70 96]
[74 88]
[75 87]
[76 86]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
