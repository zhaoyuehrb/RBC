%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 14:28:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUACUUGAAAUAUAGUCUUCUGUGAGAUUCCCAAUUCUUCCAAGAAACUUUAUUCCAUAACCAUAUGGAAUUCCAUAUUCCAUAACAAAACAGCUGCUUGGAUCACCUGCCUUUUGACAAUAGUGUGAAGAAAACUUGAUCAACUAGAUAUUGGCAUUUGAUUAGUGAUGUUCUCCAGAUAUUCACUUUUUUAUUGGCUGGAGAGCCAUUAUACUCUAA\
) } def
/len { sequence length } bind def

/coor [
[89.81033325 222.59353638]
[75.22856903 219.07611084]
[62.83102036 210.63214111]
[54.21789169 198.35150146]
[50.50091934 183.81933594]
[52.15987015 168.91134644]
[58.98062134 155.55180359]
[70.08396912 145.46434021]
[77.21963501 132.27032471]
[84.35530853 119.07630157]
[71.76761627 127.23411560]
[64.39476776 141.23239136]
[49.50633240 141.66119385]
[36.91864014 149.81901550]
[24.33094978 157.97683716]
[11.74325848 166.13464355]
[4.37040424 180.13291931]
[-10.51802731 180.56172180]
[-23.10571861 188.71954346]
[-35.69340897 196.87736511]
[-41.18639755 204.16354370]
[-48.51533890 205.05989075]
[-61.21620178 213.04035950]
[-73.91706085 221.02084351]
[-86.61792755 229.00132751]
[-99.26251221 237.07067871]
[-106.63536835 251.06893921]
[-121.52380371 251.49775696]
[-134.11149597 259.65557861]
[-146.69918823 267.81338501]
[-159.28688049 275.97122192]
[-159.97895813 291.47283936]
[-169.67680359 303.58612061]
[-184.65138245 307.65322876]
[-199.14468384 302.11029053]
[-207.58370972 289.08868408]
[-206.72351074 273.59548950]
[-196.89482117 261.58810425]
[-181.87699890 257.68368530]
[-167.44468689 263.38351440]
[-154.85700989 255.22569275]
[-142.26931763 247.06787109]
[-129.68162537 238.91006470]
[-123.20912170 225.49528503]
[-107.42033386 224.48298645]
[-103.52040100 218.21342468]
[-94.59840393 216.30046082]
[-81.89754486 208.31997681]
[-69.19667816 200.33950806]
[-56.49581909 192.35902405]
[-43.85123062 184.28967285]
[-31.26353836 176.13185120]
[-18.67584610 167.97402954]
[-12.20334911 154.55926514]
[3.58543873 153.54695129]
[16.17313004 145.38914490]
[28.76082230 137.23132324]
[41.34851456 129.07350159]
[47.82101059 115.65872955]
[63.60979843 114.64642334]
[76.19749451 106.48860931]
[76.35526276 98.99026489]
[63.20993042 106.21524811]
[50.38030624 98.44345856]
[50.69617081 83.44678497]
[63.84165955 76.22208405]
[76.67079926 83.99358368]
[76.82856750 76.49524689]
[64.59515381 67.81517792]
[52.36174011 59.13510513]
[40.12833023 50.45503616]
[27.89491463 41.77496719]
[15.66150284 33.09489822]
[3.42808938 24.41482735]
[-8.80532360 15.73475838]
[-24.79890442 16.99370003]
[-35.64932251 5.17642450]
[-33.03306580 -10.65186501]
[-18.95709991 -18.34906006]
[-4.21930552 -12.01053047]
[-0.12525412 3.50134587]
[12.10815907 12.18141556]
[24.34157181 20.86148453]
[36.57498550 29.54155350]
[48.80839920 38.22162247]
[61.04181290 46.90169144]
[73.27522278 55.58176422]
[85.50863647 64.26183319]
[78.93425751 50.77934265]
[72.35987091 37.29685593]
[60.19899368 28.51545334]
[52.36634827 15.72288990]
[50.07418823 0.89905751]
[53.67726898 -13.66177368]
[62.61794281 -25.70603943]
[75.51247406 -33.36965942]
[90.36518860 -35.46654129]
[104.87734222 -31.67215729]
[116.80290985 -22.57375526]
[124.29617310 -9.57948971]
[126.19741821 5.29953146]
[122.21238708 19.76049614]
[112.95772552 31.56539154]
[110.37271881 46.34096909]
[107.78771210 61.11655045]
[117.14006042 49.38907623]
[126.49240875 37.66160583]
[135.84475708 25.93413162]
[145.19709778 14.20666027]
[143.62078857 -1.29020989]
[153.27246094 -13.05030632]
[168.05607605 -14.45757961]
[177.40841675 -26.18505287]
[186.76075745 -37.91252518]
[196.11311340 -49.63999557]
[189.10864258 -60.26967621]
[185.37547302 -72.42126465]
[185.20431519 -85.11432648]
[188.59886169 -97.32769775]
[195.27641296 -108.08161926]
[204.69126892 -116.51632690]
[216.07940674 -121.96082306]
[228.52041626 -123.98619843]
[241.01193237 -122.43943787]
[252.55035400 -117.45494843]
[262.38769531 -128.77865601]
[272.22506714 -140.10237122]
[282.06240845 -151.42607117]
[291.73999023 -162.88664246]
[301.25588989 -174.48179626]
[304.02963257 -190.05796814]
[318.08474731 -194.98777771]
[327.60064697 -206.58294678]
[337.11654663 -218.17810059]
[339.25256348 -234.43754578]
[354.50323486 -240.46658325]
[367.17993164 -230.06307983]
[364.24200439 -213.92924500]
[348.71170044 -208.66220093]
[339.19580078 -197.06704712]
[329.67990112 -185.47189331]
[327.58682251 -170.72508240]
[312.85104370 -164.96589661]
[303.33514404 -153.37074280]
[302.90188599 -148.62315369]
[299.48779297 -144.09478760]
[293.38613892 -141.58871460]
[283.54876709 -130.26501465]
[273.71142578 -118.94129944]
[263.87405396 -107.61759186]
[272.10025024 -92.31232452]
[273.81512451 -74.98580170]
[268.72827148 -58.29737091]
[257.59521484 -44.81892776]
[242.10549927 -36.63857269]
[224.62629700 -35.03712082]
[207.84057617 -40.28765106]
[198.48823547 -28.56017685]
[189.13589478 -16.83270454]
[179.78353882 -5.10523319]
[181.70121765 9.62087059]
[172.38366699 21.64742279]
[156.92457581 23.55900764]
[147.57221985 35.28647995]
[138.21987915 47.01395035]
[128.86753845 58.74142456]
[119.51518250 70.46889496]
[126.13939667 93.38893127]
[116.33581543 108.74272919]
[127.93096924 118.25862885]
[139.52612305 127.77452850]
[151.12127686 137.29042053]
[162.71644592 146.80632019]
[174.31159973 156.32221985]
[185.97320557 165.75657654]
[197.70066833 175.10891724]
[209.42814636 184.46127319]
[221.15560913 193.81361389]
[232.88308716 203.16596985]
[244.61056519 212.51831055]
[256.33804321 221.87066650]
[268.06549072 231.22300720]
[280.54595947 222.69483948]
[294.98614502 218.22581482]
[310.10208130 218.21333313]
[324.54965210 222.65849304]
[337.04415894 231.16603088]
[346.47463989 242.97947693]
[352.00253296 257.04837036]
[353.13632202 272.12173462]
[349.77514648 286.85922241]
[342.21789551 299.95040894]
[331.13656616 310.23126221]
[317.51647949 316.78756714]
[302.56878662 319.03634644]
[287.62252808 316.77767944]
[274.00680542 310.21237183]
[262.93228149 299.92422485]
[255.38368225 286.82803345]
[252.03224182 272.08831787]
[253.17596436 257.01571655]
[258.71316528 242.95048523]
[246.98568726 233.59812927]
[235.25820923 224.24578857]
[223.53074646 214.89343262]
[211.80326843 205.54109192]
[200.07579041 196.18875122]
[188.34832764 186.83639526]
[176.62084961 177.48405457]
[169.43835449 175.77276611]
[164.79570007 167.91737366]
[153.20054626 158.40147400]
[141.60537720 148.88557434]
[130.01022339 139.36967468]
[118.41506958 129.85377502]
[106.81991577 120.33788300]
[112.43345642 134.24787903]
[118.04699707 148.15788269]
[127.95037079 159.42390442]
[133.23291016 173.46295166]
[133.21276855 188.46293640]
[127.89254761 202.48774719]
[117.95896149 213.72712708]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 61]
[11 60]
[13 58]
[14 57]
[15 56]
[16 55]
[18 53]
[19 52]
[20 51]
[22 50]
[23 49]
[24 48]
[25 47]
[26 45]
[28 43]
[29 42]
[30 41]
[31 40]
[68 88]
[69 87]
[70 86]
[71 85]
[72 84]
[73 83]
[74 82]
[75 81]
[105 167]
[106 166]
[107 165]
[108 164]
[109 163]
[112 160]
[113 159]
[114 158]
[115 157]
[125 150]
[126 149]
[127 148]
[128 147]
[129 144]
[130 143]
[132 141]
[133 140]
[134 139]
[169 216]
[170 215]
[171 214]
[172 213]
[173 212]
[174 211]
[175 209]
[176 208]
[177 207]
[178 206]
[179 205]
[180 204]
[181 203]
[182 202]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
