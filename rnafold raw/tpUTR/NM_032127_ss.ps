%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 18:34:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUCUUCCAUGGACAAUCAGGGCCAUGGGUGGCCCGGGCUGGGGCUAGGGCACAGGCUCCUUUUUAUGUUUGGAGGCAGUGGCAAAAGGACUUUUUAAUUUAUUUCAGAUGAAUGUUUUAUGGAGAACUUGUUGCAAUAUGUAUAAAAGGGAAAUCUCUAUUCUGUGCUCA\
) } def
/len { sequence length } bind def

/coor [
[39.51695633 192.97296143]
[46.51799393 206.23892212]
[45.43920135 221.20007324]
[36.60736465 233.32437134]
[22.69783974 238.93910217]
[7.92412996 236.34342957]
[-3.23864150 226.32341003]
[-12.57576847 238.06300354]
[-21.91289711 249.80259705]
[-31.25002289 261.54220581]
[-40.58715057 273.28179932]
[-49.92427826 285.02139282]
[-59.26140594 296.76098633]
[-61.79615402 312.37780762]
[-75.77407837 317.52239990]
[-73.73539734 333.19464111]
[-83.44184875 345.66702271]
[-99.13477325 347.53988647]
[-111.50383759 337.70211792]
[-113.21069336 321.99026489]
[-103.24269104 309.72592163]
[-87.51367188 308.18527222]
[-85.64678192 293.40814209]
[-71.00099945 287.42385864]
[-61.66387177 275.68426514]
[-52.32674408 263.94467163]
[-42.98961639 252.20506287]
[-33.65248871 240.46546936]
[-24.31536293 228.72587585]
[-14.97823429 216.98628235]
[-22.39946556 203.95074463]
[-37.26055908 205.98738098]
[-52.12165451 208.02400208]
[-66.98274994 210.06063843]
[-81.84384155 212.09727478]
[-96.70493317 214.13391113]
[-106.05858612 226.87301636]
[-121.69296265 229.18428040]
[-134.33245850 219.69645691]
[-136.47830200 204.03852844]
[-126.85738373 191.50004578]
[-111.17763519 189.51986694]
[-98.74156952 199.27281189]
[-83.88047791 197.23617554]
[-69.01937866 195.19955444]
[-54.15828705 193.16291809]
[-39.29719162 191.12628174]
[-24.43609810 189.08964539]
[-10.78135014 182.88095093]
[0.52239949 173.02067566]
[11.82614899 163.16038513]
[23.12989807 153.30009460]
[34.43364716 143.43980408]
[45.73739624 133.57952881]
[57.04114532 123.71923828]
[68.34489441 113.85894775]
[79.64864349 103.99866486]
[80.73725891 89.03821564]
[70.98001099 77.64540863]
[61.22276306 66.25259399]
[51.46551895 54.85978699]
[36.55980301 58.33517075]
[21.74928093 54.47422028]
[10.43729401 44.16415024]
[5.22325850 29.77413750]
[7.30532026 14.61090565]
[16.20503616 2.15885234]
[29.87731934 -4.72063160]
[45.18037415 -4.44669104]
[58.59767532 2.91772461]
[67.04602814 15.68032646]
[68.58405304 30.90836143]
[62.85832977 45.10253906]
[72.61557770 56.49534988]
[82.37281799 67.88816071]
[92.13006592 79.28097534]
[107.09051514 80.36958313]
[118.39426422 70.50930023]
[129.69801331 60.64900970]
[127.96031952 43.84127808]
[136.48715210 29.44574738]
[151.75607300 23.02144241]
[167.68730164 26.91201973]
[178.81013489 16.84810066]
[189.93296814 6.78418016]
[201.05580139 -3.27973986]
[212.08680725 -13.44423580]
[223.02507019 -23.70847130]
[233.96331787 -33.97270584]
[234.62684631 -49.53540039]
[245.86601257 -59.78897476]
[260.69857788 -59.06050491]
[271.63684082 -69.32473755]
[282.57507324 -79.58897400]
[293.51333618 -89.85321045]
[298.28216553 -104.93859863]
[312.85760498 -108.00547028]
[323.79586792 -118.26970673]
[334.73413086 -128.53393555]
[335.39764404 -144.09663391]
[346.63681030 -154.35020447]
[361.46939087 -153.62173462]
[372.40762329 -163.88597107]
[383.34588623 -174.15020752]
[394.28414917 -184.41444397]
[405.22241211 -194.67868042]
[407.16723633 -210.60340881]
[420.90527344 -218.88873291]
[435.89782715 -213.17884827]
[440.64392090 -197.85389709]
[431.50274658 -184.66987610]
[415.48663330 -183.74041748]
[404.54837036 -173.47618103]
[393.61013794 -163.21194458]
[382.67187500 -152.94772339]
[371.73361206 -142.68348694]
[371.51852417 -127.83460236]
[360.57177734 -117.26938629]
[344.99835205 -117.59568024]
[334.06011963 -107.33144379]
[323.12185669 -97.06721497]
[319.13540649 -82.71599579]
[303.77758789 -78.91495514]
[292.83932495 -68.65071869]
[281.90106201 -58.38648224]
[270.96279907 -48.12224960]
[270.74771118 -33.27336502]
[259.80096436 -22.70815277]
[244.22755432 -23.03444672]
[233.28930664 -12.77021313]
[222.35104370 -2.50597811]
[219.61529541 4.38870096]
[211.11972046 7.84309769]
[199.99688721 17.90701675]
[188.87405396 27.97093773]
[177.75122070 38.03485870]
[180.40437317 51.13944244]
[176.19343567 63.94361496]
[166.11929321 73.06083679]
[152.74815369 76.02409363]
[139.55830383 71.95275879]
[128.25454712 81.81304932]
[116.95079803 91.67333221]
[130.67900085 85.62878418]
[144.40098572 91.68743134]
[149.18298340 105.90476227]
[141.91166687 119.02451324]
[127.32105255 122.50502014]
[114.91065979 114.08065033]
[124.24778748 125.82024384]
[133.58491516 137.55982971]
[142.92204285 149.29942322]
[158.36982727 154.80380249]
[161.06022644 170.98075867]
[148.22561646 181.18882751]
[133.06912231 174.92681885]
[131.18244934 158.63655090]
[121.84532166 146.89695740]
[112.50819397 135.15736389]
[103.17106628 123.41777802]
[97.57854462 121.80474091]
[92.94763947 118.97807312]
[89.50893402 115.30241394]
[78.20518494 125.16269684]
[66.90143585 135.02297974]
[55.59768295 144.88327026]
[44.29393387 154.74356079]
[32.99018478 164.60385132]
[21.68643570 174.46412659]
[10.38268566 184.32441711]
[-0.92106324 194.18470764]
[11.56358433 185.87004089]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 30]
[8 29]
[9 28]
[10 27]
[11 26]
[12 25]
[13 24]
[15 22]
[31 48]
[32 47]
[33 46]
[34 45]
[35 44]
[36 43]
[49 171]
[50 170]
[51 169]
[52 168]
[53 167]
[54 166]
[55 165]
[56 164]
[57 163]
[58 76]
[59 75]
[60 74]
[61 73]
[77 143]
[78 142]
[79 141]
[83 136]
[84 135]
[85 134]
[86 133]
[87 131]
[88 130]
[89 129]
[92 126]
[93 125]
[94 124]
[95 123]
[97 121]
[98 120]
[99 119]
[102 116]
[103 115]
[104 114]
[105 113]
[106 112]
[149 160]
[150 159]
[151 158]
[152 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
