%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 11:50:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAAUUAGAGAUUGCUGAUCUGUUUAGGCCAUUCUCUUAUGAGCUAUGUUUUCUUCCCGUGUUUUUUUCUGUUCAAAGAGUGACAACUAAAAUUUAGCCCACAUUGCCAAGUCAG\
) } def
/len { sequence length } bind def

/coor [
[88.51142120 450.35998535]
[75.74829865 442.39135742]
[64.72407532 432.15109253]
[55.83726883 420.00936890]
[49.40914154 406.40512085]
[45.67205811 391.83013916]
[44.76111603 376.81124878]
[46.70924377 361.89141846]
[51.44601822 347.60998535]
[58.80020905 334.48321533]
[68.50595856 322.98559570]
[80.21242523 313.53280640]
[93.49641418 306.46655273]
[107.87772369 302.04223633]
[106.25594330 287.13018799]
[104.63415527 272.21810913]
[103.01236725 257.30603027]
[101.39058685 242.39396667]
[91.03085327 237.25549316]
[84.42049408 227.62025452]
[83.33267975 215.86495972]
[88.16038513 204.95950317]
[97.78703308 197.71675110]
[96.97495270 182.73875427]
[96.16286469 167.76075745]
[95.35078430 152.78274536]
[94.53869629 137.80474854]
[80.49921417 132.84423828]
[69.42307281 122.89271545]
[62.99340820 109.46240234]
[62.18727493 94.59418488]
[67.12717438 80.54743195]
[77.06243896 69.45669556]
[90.48329926 63.00733185]
[89.67121887 48.02933121]
[88.85913086 33.05133057]
[88.04705048 18.07332802]
[87.23496246 3.09532738]
[83.60490417 -5.43550634]
[86.60927582 -12.29819012]
[86.20308685 -27.29268837]
[85.79689026 -42.28718948]
[85.39070129 -57.28168869]
[84.98451233 -72.27618408]
[70.21071625 -75.22282410]
[56.46323013 -81.38353729]
[44.43162155 -90.44930267]
[34.71939468 -101.96540070]
[27.81371117 -115.35417175]
[24.06095314 -129.94404602]
[23.64935875 -145.00320435]
[26.59957504 -159.77629089]
[32.76361847 -173.52229309]
[41.83230209 -185.55169678]
[53.35074997 -195.26112366]
[66.74119568 -202.16357422]
[81.33198547 -205.91279602]
[96.39124298 -206.32073975]
[111.16361237 -203.36694336]
[124.90811157 -197.19956970]
[136.93531799 -188.12797546]
[146.64196777 -176.60717773]
[153.54116821 -163.21505737]
[157.28684998 -148.62336731]
[157.69114685 -133.56399536]
[154.73376465 -118.79235077]
[148.56306458 -105.04934692]
[139.48855591 -93.02433014]
[127.96540070 -83.32048035]
[114.57160950 -76.42453003]
[99.97901154 -72.68238068]
[100.38520050 -57.68787766]
[100.79138947 -42.69337845]
[101.19758606 -27.69887924]
[101.60377502 -12.70438099]
[102.21296692 2.28324366]
[103.02504730 17.26124573]
[103.83713531 32.23924637]
[104.64921570 47.21724701]
[105.46130371 62.19524765]
[119.50078583 67.15575409]
[130.57693481 77.10728455]
[137.00659180 90.53759766]
[137.81272888 105.40581512]
[132.87281799 119.45256805]
[122.93756104 130.54330444]
[109.51670074 136.99266052]
[110.32878113 151.97067261]
[111.14086914 166.94866943]
[111.95294952 181.92666626]
[112.76503754 196.90467834]
[127.31359863 208.87457275]
[128.61030579 227.35325623]
[116.30265045 240.77218628]
[117.92443848 255.68424988]
[119.54622650 270.59631348]
[121.16800690 285.50839233]
[122.78979492 300.42047119]
[137.78596497 301.64978027]
[152.27842712 305.69515991]
[165.74327087 312.41040039]
[177.69375610 321.55276489]
[187.69787598 332.79168701]
[195.39399719 345.72097778]
[200.50389099 359.87319946]
[202.84286499 374.73678589]
[202.32635498 389.77438354]
[198.97302246 404.44244385]
[192.90409851 418.21069336]
[184.33895874 430.58142090]
[173.58724976 441.10745239]
[161.03762817 449.40823364]
[147.14375305 455.18377686]
[132.40786743 458.22521973]
[117.36268616 458.42263794]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 98]
[15 97]
[16 96]
[17 95]
[18 94]
[23 91]
[24 90]
[25 89]
[26 88]
[27 87]
[34 80]
[35 79]
[36 78]
[37 77]
[38 76]
[40 75]
[41 74]
[42 73]
[43 72]
[44 71]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
