%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 16:46:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGUGAGAUGGGGCUGCCUCGAGCACCAACAAAGUAAUUUGGGAGCGACUAGGAGCUGAGCCUUCUACCUCGACGGUGCACUGCAGAGAGCCAAUCAGACGUCGCAGAGCCCCGACGACACUAUGCUUGCGCCCACGCCGAGCAGGCGUGCGGAACUUUUAGCAAAAGGCGGCAAGCGGGACUUCUGGUCCCAACAUUUCCUCCUUUGGCCUGUGGCUUAUUCCCCGCCAGUGAUCUGUUUCCCCCAAUAAAGUC\
UCAAAUCUUUGGGAA\
) } def
/len { sequence length } bind def

/coor [
[-105.05896759 520.00793457]
[-97.19565582 507.23495483]
[-104.48486328 505.46929932]
[-115.48345947 515.66888428]
[-119.62779999 523.76770020]
[-126.66917419 525.92199707]
[-137.78526306 535.99334717]
[-148.90135193 546.06475830]
[-153.93327332 561.06439209]
[-168.56011963 563.87591553]
[-179.67620850 573.94726562]
[-190.61549377 584.21044922]
[-201.37467957 594.66223145]
[-212.13386536 605.11401367]
[-222.89303589 615.56579590]
[-226.84851074 623.75854492]
[-233.83804321 626.07550049]
[-244.71766663 636.40185547]
[-255.59729004 646.72827148]
[-260.28012085 661.84057617]
[-274.83786011 664.99041748]
[-279.67416382 682.77532959]
[-296.90768433 686.16772461]
[-307.66687012 696.61950684]
[-312.29666138 714.45928955]
[-329.48971558 718.05126953]
[-340.12701416 728.62707520]
[-350.76431274 739.20288086]
[-361.40161133 749.77868652]
[-358.06552124 764.84106445]
[-363.42376709 779.30798340]
[-375.76657104 788.56323242]
[-391.15536499 789.65338135]
[-404.67965698 782.23065186]
[-412.02386475 768.66351318]
[-410.84454346 753.28131104]
[-401.51794434 740.99237061]
[-387.02017212 735.71807861]
[-371.97741699 739.14141846]
[-361.34011841 728.56561279]
[-350.70281982 717.98974609]
[-340.06552124 707.41394043]
[-339.72387695 695.34484863]
[-330.97982788 686.44824219]
[-318.11865234 685.86035156]
[-307.35946655 675.40850830]
[-306.87792969 663.34417725]
[-298.03134155 654.54956055]
[-285.16421509 654.11077881]
[-281.25958252 639.73706055]
[-265.92364502 635.84863281]
[-255.04403687 625.52227783]
[-244.16441345 615.19592285]
[-233.34483337 604.80664062]
[-222.58566284 594.35485840]
[-211.82647705 583.90307617]
[-201.06729126 573.45123291]
[-200.63995361 569.98535156]
[-198.53430176 566.54901123]
[-194.77980042 563.91900635]
[-189.74758911 562.83117676]
[-178.63148499 552.75982666]
[-174.39466858 538.48052979]
[-158.97271729 534.94866943]
[-147.85662842 524.87725830]
[-136.74053955 514.80590820]
[-125.68301392 504.67028809]
[-114.68441772 494.47073364]
[-119.54061890 471.12286377]
[-110.73789215 450.49377441]
[-92.91696167 439.36416626]
[-73.34933472 440.38192749]
[-66.48530579 427.04455566]
[-59.62128067 413.70721436]
[-52.75725174 400.36984253]
[-45.89322281 387.03250122]
[-50.66880417 372.97085571]
[-43.89769745 359.34710693]
[-29.11618996 354.43338013]
[-22.25216103 341.09600830]
[-15.38813114 327.75866699]
[-8.52410221 314.42129517]
[-1.66007364 301.08395386]
[5.12653303 287.70703125]
[2.59571934 268.51641846]
[19.65904808 257.73931885]
[26.05517578 244.17135620]
[32.29359055 230.53015137]
[38.37345123 216.81756592]
[44.45331192 203.10496521]
[50.53317261 189.39236450]
[56.61303711 175.67977905]
[62.69289780 161.96717834]
[61.85538864 157.29844666]
[63.91680908 152.05094910]
[69.07595062 148.00971985]
[75.47207642 134.44175720]
[81.86820221 120.87380219]
[58.27413177 93.43421173]
[77.70927429 47.72473145]
[68.92065430 35.56906891]
[60.13203812 23.41340256]
[51.34341812 11.25773907]
[42.55479813 -0.89792508]
[27.03803825 -0.79923528]
[14.44635010 -9.86725807]
[9.62149811 -24.61515427]
[14.41873455 -39.37205505]
[26.99342537 -48.46363449]
[42.51034546 -48.39398956]
[55.00291824 -39.18990326]
[59.66750336 -24.39053726]
[54.71046448 -9.68654442]
[63.49908066 2.46911979]
[72.28770447 14.62478352]
[81.07632446 26.78044891]
[89.86493683 38.93611145]
[97.29839325 37.93920898]
[95.30458832 23.07230949]
[88.81440735 9.54908466]
[99.67031860 -0.80221123]
[112.86955261 6.32380676]
[110.17148590 21.07850456]
[112.16529083 35.94540787]
[119.59873962 34.94850540]
[124.87401581 20.90672684]
[130.14929199 6.86495113]
[135.42456055 -7.17682552]
[140.69982910 -21.21860313]
[145.97511292 -35.26037979]
[151.16889954 -49.33249664]
[156.28105164 -63.43448257]
[161.39318848 -77.53646851]
[165.09321594 -92.07296753]
[167.34521484 -106.90295410]
[169.59722900 -121.73294067]
[171.84924316 -136.56292725]
[174.10124207 -151.39291382]
[176.35325623 -166.22290039]
[168.03695679 -179.94216919]
[173.71299744 -194.94758606]
[189.02719116 -199.72824097]
[202.23181152 -190.61685181]
[203.19740295 -174.60289001]
[191.18324280 -163.97088623]
[188.93122864 -149.14089966]
[186.67922974 -134.31091309]
[184.42721558 -119.48092651]
[182.17520142 -104.65094757]
[179.92320251 -89.82096100]
[188.50492859 -102.12355042]
[200.58589172 -111.01457977]
[214.88371277 -115.55025482]
[229.88069153 -115.24913788]
[243.98492432 -110.14318848]
[255.69924927 -100.77439117]
[263.78024292 -88.13722992]
[267.37008667 -73.57313538]
[266.08770752 -58.62804794]
[260.06930542 -44.88837814]
[249.95362854 -33.81257248]
[236.81451416 -26.57631111]
[222.04663086 -23.94771385]
[207.21755981 -26.20580292]
[193.90141296 -33.11088181]
[183.51167297 -43.92999268]
[177.15118408 -57.51469803]
[175.49517822 -72.42432404]
[170.38302612 -58.32234192]
[165.27088928 -44.22035599]
[165.94329834 -36.88756180]
[160.01689148 -29.98510551]
[154.74160767 -15.94332886]
[149.46633911 -1.90155208]
[144.19107056 12.14022446]
[138.91578674 26.18200111]
[133.64051819 40.22377777]
[144.57980347 50.48691177]
[158.25692749 44.32767105]
[171.93405151 38.16843033]
[185.61117554 32.00918961]
[199.28831482 25.84994698]
[212.96543884 19.69070625]
[224.92495728 7.67380047]
[239.78297424 15.83933544]
[236.04965210 32.37713242]
[219.12467957 33.36783218]
[205.44755554 39.52707291]
[191.77043152 45.68631363]
[178.09329224 51.84555435]
[164.41616821 58.00479507]
[150.73904419 64.16403961]
[152.20755005 71.51886749]
[166.91720581 68.58184814]
[181.62686157 65.64483643]
[195.83432007 70.45610809]
[184.56387329 80.35449219]
[169.85421753 83.29150391]
[155.14457703 86.22852325]
[156.61308289 93.58335114]
[171.60678101 94.01801300]
[182.92778015 82.99029541]
[198.72938538 83.28121185]
[209.63679504 94.71817017]
[209.17883301 110.51582336]
[197.62718201 121.30170441]
[181.83526611 120.67673492]
[171.17211914 109.01171112]
[156.17842102 108.57704926]
[124.77349091 134.21157837]
[95.43616486 127.26992798]
[89.04003906 140.83789062]
[82.64390564 154.40585327]
[76.40549469 168.04704285]
[70.32563019 181.75964355]
[64.24577332 195.47222900]
[58.16590881 209.18482971]
[52.08604813 222.89743042]
[46.00618362 236.61001587]
[46.32364273 243.15582275]
[43.70252991 248.14735413]
[39.62313461 250.56747437]
[33.22700882 264.13543701]
[37.47534943 274.09915161]
[35.59769440 284.54421997]
[28.44651604 292.08627319]
[18.54256439 294.41598511]
[17.51119614 303.45492554]
[11.67728424 307.94796753]
[4.81325483 321.28533936]
[-2.05077386 334.62268066]
[-8.91480255 347.96005249]
[-15.77883148 361.29739380]
[-11.18640137 376.18188477]
[-18.33749771 389.61007690]
[-32.55586243 393.89651489]
[-39.41989136 407.23388672]
[-46.28392029 420.57122803]
[-53.14794922 433.90859985]
[-60.01197815 447.24594116]
[-49.05456543 458.73577881]
[-44.54377747 475.14318848]
[-48.57421494 492.84695435]
[-61.22604752 507.41970825]
[-56.11390686 521.52166748]
[-51.00176239 535.62365723]
[-45.88962173 549.72564697]
[-40.77748108 563.82763672]
[-25.60272026 564.12945557]
[-11.56320286 569.89630127]
[-0.55765730 580.34820557]
[5.92550707 594.07165527]
[7.00949574 609.21069336]
[2.54770780 623.71783447]
[-6.85643625 635.63110352]
[-19.93110466 643.33935547]
[-34.90805435 645.80017090]
[-49.76177597 642.68066406]
[-62.48342514 634.40270996]
[-71.35250092 622.08587646]
[-75.16954041 607.39593506]
[-73.41831970 592.31958008]
[-66.33567047 578.89569092]
[-54.87946701 568.93975830]
[-59.99160767 554.83776855]
[-65.10375214 540.73583984]
[-70.21588898 526.63385010]
[-75.32803345 512.53186035]
[-82.61724091 510.76620483]
[-81.47087860 525.72235107]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 68]
[4 67]
[6 66]
[7 65]
[8 64]
[10 62]
[11 61]
[12 57]
[13 56]
[14 55]
[15 54]
[17 53]
[18 52]
[19 51]
[21 49]
[23 46]
[24 45]
[26 42]
[27 41]
[28 40]
[29 39]
[72 240]
[73 239]
[74 238]
[75 237]
[76 236]
[79 233]
[80 232]
[81 231]
[82 230]
[83 229]
[84 227]
[86 223]
[87 222]
[88 219]
[89 218]
[90 217]
[91 216]
[92 215]
[93 214]
[96 213]
[97 212]
[98 211]
[100 117]
[101 116]
[102 115]
[103 114]
[104 113]
[125 177]
[126 176]
[127 175]
[128 174]
[129 173]
[130 172]
[131 170]
[132 169]
[133 168]
[134 150]
[135 149]
[136 148]
[137 147]
[138 146]
[139 145]
[178 192]
[179 191]
[180 190]
[181 189]
[182 188]
[183 187]
[200 209]
[201 208]
[244 268]
[245 267]
[246 266]
[247 265]
[248 264]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
