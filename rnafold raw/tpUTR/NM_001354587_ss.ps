%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 13:24:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAAGAUAUGGACAUUUCUGGAAUUAAGAGCCCCCUCUACAUUGAGCACAAGACAGUGACGAAUCCACAUUCUUCAGCCAGAAAGUCACCUCUGAGAGCCAAAUGUCUGACUAUAGAAAGGAGAGUCAAAGAAUGAUAACGACAUCUCAGGAAAAUUGUGAAAAUAAUCAGCAGCCGGAUGUGGAUAACCCUUUCAA\
) } def
/len { sequence length } bind def

/coor [
[-41.48607635 113.66129303]
[-52.63914871 116.50633240]
[-64.13314056 116.94718933]
[-75.45602417 114.96749115]
[-86.10411835 110.65863037]
[-95.60441589 104.21553040]
[-103.53566742 95.92783356]
[-109.54701233 86.16690063]
[-113.37351227 75.36914825]
[-114.84783173 64.01654053]
[-113.90755463 52.61510086]
[-128.12886047 47.84492493]
[-142.35015869 43.07475281]
[-156.57147217 38.30458069]
[-170.79277039 33.53440857]
[-185.01406860 28.76423454]
[-199.23536682 23.99406052]
[-205.79579163 24.93324471]
[-211.05239868 22.74107933]
[-213.82617188 18.84230614]
[-227.88980103 13.62556458]
[-241.95343018 8.40882301]
[-252.97306824 18.91257286]
[-267.40164185 23.57122612]
[-282.36090088 21.51173973]
[-294.89099121 13.19566059]
[-302.53634644 0.31706527]
[-303.82653809 -14.54230404]
[-317.89016724 -19.75904465]
[-331.95379639 -24.97578621]
[-346.01742554 -30.19252777]
[-355.14175415 -21.03795815]
[-367.00891113 -16.03558922]
[-379.83984375 -15.89696598]
[-391.72540283 -20.60733795]
[-400.91055298 -29.43310547]
[-406.05343628 -41.03584290]
[-406.42132568 -53.67518616]
[-420.31326294 -59.33329391]
[-432.04760742 -52.70928955]
[-445.26135254 -54.03683090]
[-455.14923096 -62.60783386]
[-458.24554443 -75.12139130]
[-472.04641724 -80.99810028]
[-485.84729004 -86.87480164]
[-494.97894287 -87.35924530]
[-499.81851196 -92.95475769]
[-513.52490234 -99.04859161]
[-528.12384033 -93.61648560]
[-541.93725586 -99.99176025]
[-547.02600098 -113.94312286]
[-560.73236084 -120.03696442]
[-574.43878174 -126.13079834]
[-588.14514160 -132.22463989]
[-602.74414062 -126.79253387]
[-616.55755615 -133.16780090]
[-621.64624023 -147.11917114]
[-635.35266113 -153.21301270]
[-649.05902100 -159.30685425]
[-663.03009033 -152.28227234]
[-678.23583984 -155.93180847]
[-687.49658203 -168.53227234]
[-686.43975830 -184.13410950]
[-675.56433105 -195.37060547]
[-660.00531006 -196.93621826]
[-647.10925293 -188.09173584]
[-642.96520996 -173.01324463]
[-629.25885010 -166.91940308]
[-615.55242920 -160.82556152]
[-601.78540039 -166.39369202]
[-587.79833984 -160.40892029]
[-582.05133057 -145.93103027]
[-568.34490967 -139.83718872]
[-554.63854980 -133.74334717]
[-540.93212891 -127.64951324]
[-527.16510010 -133.21765137]
[-513.17810059 -127.23287964]
[-507.43106079 -112.75498199]
[-493.72467041 -106.66114807]
[-479.97058105 -100.67568970]
[-466.16970825 -94.79898071]
[-452.36883545 -88.92227173]
[-437.05636597 -95.86624146]
[-421.14447021 -89.46542358]
[-414.65515137 -73.22522736]
[-400.76321411 -67.56711578]
[-387.56698608 -78.61343384]
[-370.50701904 -81.47518158]
[-354.26229858 -75.27614594]
[-343.33453369 -61.63775635]
[-340.80068970 -44.25615692]
[-326.73706055 -39.03941345]
[-312.67343140 -33.82267380]
[-298.60980225 -28.60593033]
[-287.94125366 -39.02933121]
[-273.74664307 -43.80665207]
[-258.82434082 -41.93957138]
[-246.14074707 -33.74526978]
[-238.24064636 -20.80404472]
[-236.73667908 -5.65480423]
[-222.67304993 -0.43806276]
[-208.60943604 4.77867889]
[-194.46519470 9.77275848]
[-180.24389648 14.54293156]
[-166.02259827 19.31310463]
[-151.80130005 24.08327675]
[-137.57998657 28.85345078]
[-123.35868835 33.62362289]
[-109.13738251 38.39379501]
[-98.09563446 23.32037163]
[-82.57452393 12.87741375]
[-64.40862274 8.31747150]
[-45.75129318 10.19664764]
[-28.81946564 18.30683327]
[-15.63017082 31.69863510]
[-7.76028872 48.79248428]
[-6.15802240 67.56494141]
[8.45069218 70.96868896]
[23.05940628 74.37242889]
[37.66812134 77.77616882]
[52.27683640 81.17990875]
[66.88555145 84.58364868]
[77.99681091 70.84368896]
[94.25742340 63.92710876]
[111.86195374 65.45257568]
[126.69046783 75.06308746]
[139.52011108 67.29132843]
[152.34976196 59.51957703]
[165.17939758 51.74782181]
[170.38557434 36.57299423]
[185.54353333 31.31792259]
[199.02539062 40.01384354]
[200.48902893 55.98999405]
[188.81164551 66.99083710]
[172.95115662 64.57746887]
[160.12150574 72.34922028]
[147.29187012 80.12097931]
[134.46221924 87.89273071]
[136.11994934 94.56121826]
[136.49942017 101.42217255]
[135.58723450 108.23280334]
[151.36174011 107.01803589]
[159.65379333 119.39103699]
[173.26226807 125.70049286]
[186.87075806 132.00994873]
[200.47924805 138.31939697]
[214.08772278 144.62884521]
[227.69621277 150.93829346]
[234.32019043 150.72834778]
[239.30296326 153.48686218]
[241.62985229 157.66775513]
[255.03237915 164.40365601]
[259.37747192 163.99443054]
[263.23593140 164.90328979]
[266.25189209 166.81385803]
[268.20950317 169.32641602]
[269.04791260 172.01109314]
[281.99865723 179.57934570]
[294.94940186 187.14759827]
[307.95944214 194.61338806]
[321.02804565 201.97625732]
[334.09664917 209.33912659]
[349.24920654 204.84738159]
[363.09976196 212.45903015]
[367.43106079 227.65821838]
[359.67340088 241.42755127]
[344.42926025 245.59790039]
[330.74273682 237.69509888]
[326.73376465 222.40773010]
[313.66519165 215.04486084]
[300.59658813 207.68199158]
[293.21862793 207.13714600]
[287.38113403 200.09832764]
[274.43038940 192.53007507]
[261.47967529 184.96182251]
[248.29646301 177.80618286]
[234.89395142 171.07026672]
[221.38676453 164.54678345]
[207.77827454 158.23733521]
[194.16978455 151.92787170]
[180.56130981 145.61842346]
[166.95281982 139.30897522]
[153.34434509 132.99952698]
[138.54321289 134.66557312]
[129.27778625 121.84128571]
[117.81250763 131.88957214]
[103.24430847 136.38275146]
[88.11096191 134.53811646]
[75.04866791 126.67698669]
[66.33285522 114.16876221]
[63.48180771 99.19236755]
[48.87309265 95.78862762]
[34.26438141 92.38488007]
[19.65566444 88.98114014]
[5.04695034 85.57740021]
[-9.56176376 82.17366028]
[-14.84340763 92.43560028]
[-22.15602875 101.35462952]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 109]
[12 108]
[13 107]
[14 106]
[15 105]
[16 104]
[17 103]
[20 102]
[21 101]
[22 100]
[28 94]
[29 93]
[30 92]
[31 91]
[38 86]
[39 85]
[43 82]
[44 81]
[45 80]
[47 79]
[48 78]
[51 75]
[52 74]
[53 73]
[54 72]
[57 69]
[58 68]
[59 67]
[117 196]
[118 195]
[119 194]
[120 193]
[121 192]
[122 191]
[126 138]
[127 137]
[128 136]
[129 135]
[141 185]
[143 183]
[144 182]
[145 181]
[146 180]
[147 179]
[148 178]
[151 177]
[152 176]
[157 175]
[158 174]
[159 173]
[160 171]
[161 170]
[162 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
