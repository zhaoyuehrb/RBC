%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 05:23:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACCUCCUCCUCUUCUCCGCUUGAGAGAGAGGGUCAGGGACUCCAGGAGCUAAGACAGAUGUUGCACCUAGGACUGAGGCCGGACCUCACUCAGACUUUGACCUUGGCCGAAUUUGUGUGAUGUGGCCCUGGAGAUACCUAGUUGUGUUAGCCAUAAAAGUGAAAGAGUUGUAUUGGAGCUCAGUGCUGUAAAACACCCGCGACAACAAGC\
) } def
/len { sequence length } bind def

/coor [
[98.59724426 117.12350464]
[90.96927643 130.03915405]
[83.34130859 142.95481873]
[75.71334076 155.87046814]
[68.08537292 168.78611755]
[67.72971344 184.60333252]
[54.59534454 191.62741089]
[46.96738052 204.54306030]
[39.33941269 217.45870972]
[31.80735207 230.43052673]
[24.37161064 243.45780945]
[16.93586922 256.48507690]
[24.75010681 269.70751953]
[24.89016151 285.06576538]
[17.31836128 298.42852783]
[4.07147884 306.20129395]
[-11.28713894 306.29321289]
[-24.62610054 298.67956543]
[-32.35729218 285.40838623]
[-32.40106583 270.04956055]
[-24.74564171 256.73452759]
[-11.45029259 249.04495239]
[3.90859914 249.04933167]
[11.34434032 236.02206421]
[18.78008080 222.99479675]
[19.36572266 215.62796021]
[26.42375755 209.83074951]
[34.05172348 196.91510010]
[41.67969131 183.99943542]
[41.48975372 169.10604858]
[55.16972351 161.15815735]
[62.79768753 148.24249268]
[70.42565918 135.32684326]
[78.05361938 122.41119385]
[85.68158722 109.49553680]
[85.68158722 94.49553680]
[78.05361938 81.57987976]
[70.42565918 68.66423035]
[53.40710449 64.61441803]
[44.75370026 49.80071640]
[49.39873505 33.63674164]
[41.58021927 20.83553886]
[33.76169968 8.03433609]
[25.94318390 -4.76686621]
[18.12466621 -17.56806946]
[10.30614948 -30.36927223]
[2.48763204 -43.17047501]
[-4.65553284 -48.86245728]
[-5.35027361 -56.21980667]
[-12.97824001 -69.13545990]
[-20.60620689 -82.05111694]
[-24.25475502 -67.50160980]
[-36.32822037 -58.60040283]
[-51.30594254 -59.41762543]
[-62.33927536 -69.57958984]
[-64.38316345 -84.43968964]
[-56.50303268 -97.20305634]
[-42.30210876 -102.03356934]
[-28.27475357 -96.72322083]
[-34.52435303 -110.35929108]
[-40.77395630 -123.99536896]
[-47.02355576 -137.63143921]
[-53.27315521 -151.26751709]
[-59.52275848 -164.90357971]
[-65.77236176 -178.53965759]
[-72.02195740 -192.17573547]
[-78.27156067 -205.81179810]
[-97.17950439 -208.78776550]
[-110.36862946 -222.45109558]
[-112.63890076 -241.15414429]
[-103.25250244 -257.31634521]
[-110.10193634 -270.66119385]
[-116.80414581 -276.86636353]
[-116.95234680 -284.25494385]
[-123.60327911 -297.69982910]
[-130.25422668 -311.14471436]
[-136.90516663 -324.58959961]
[-143.55609131 -338.03448486]
[-150.20703125 -351.47940063]
[-163.26112366 -360.41815186]
[-161.96919250 -375.25662231]
[-168.62013245 -388.70150757]
[-175.27107239 -402.14639282]
[-181.92201233 -415.59127808]
[-193.86802673 -420.45364380]
[-199.13099670 -431.78823853]
[-195.38435364 -443.28942871]
[-201.83532715 -456.83139038]
[-216.41404724 -463.52774048]
[-220.12829590 -479.13488770]
[-210.12882996 -491.68041992]
[-194.08639526 -491.54046631]
[-184.30735779 -478.82235718]
[-188.29336548 -463.28237915]
[-181.84239197 -449.74041748]
[-166.86962891 -440.58645630]
[-168.47712708 -422.24221802]
[-161.82618713 -408.79733276]
[-155.17524719 -395.35244751]
[-148.52430725 -381.90756226]
[-135.94595337 -373.93045044]
[-136.76214600 -358.13034058]
[-130.11120605 -344.68542480]
[-123.46027374 -331.24053955]
[-116.80933380 -317.79565430]
[-110.15839386 -304.35076904]
[-103.50745392 -290.90588379]
[-96.75708008 -277.51065063]
[-89.90764618 -264.16580200]
[-78.76038361 -264.56637573]
[-68.22047424 -260.76116943]
[-59.82337570 -253.26380920]
[-54.80750275 -243.12869263]
[-53.93169022 -231.80282593]
[-57.36060715 -220.91920471]
[-64.63549042 -212.06140137]
[-58.38588715 -198.42533875]
[-52.13628387 -184.78926086]
[-45.88668442 -171.15318298]
[-39.63708496 -157.51712036]
[-33.38748169 -143.88104248]
[-27.13788223 -130.24496460]
[-20.88828087 -116.60889435]
[-14.63868046 -102.97282410]
[-7.69055319 -89.67908478]
[-0.06258617 -76.76342773]
[7.56538057 -63.84777451]
[15.28883457 -50.98899078]
[23.10735130 -38.18778992]
[30.92586899 -25.38658524]
[38.74438477 -12.58538342]
[46.56290436 0.21581919]
[54.38142014 13.01702213]
[62.19993591 25.81822395]
[75.02451324 27.06249619]
[84.93898010 35.59324646]
[88.17778015 48.46603012]
[83.34130859 61.03626251]
[90.96927643 73.95191956]
[98.59724426 86.86756897]
[112.19697571 84.46402740]
[126.06337738 96.50688934]
[139.79055786 102.55374146]
[153.51774597 108.60059357]
[167.24493408 114.64744568]
[180.97212219 120.69429779]
[194.69929504 126.74114227]
[201.14146423 118.49124146]
[210.51591492 112.59384918]
[221.92784119 110.08678436]
[234.12075806 111.65820312]
[245.61476135 117.52370453]
[254.88516235 127.35815430]
[269.87036133 126.69152832]
[284.85552979 126.02490234]
[298.38055420 116.75096130]
[313.05575562 124.07012177]
[313.78457642 140.45306396]
[299.81723022 149.04641724]
[285.52215576 141.01008606]
[270.53698730 141.67671204]
[255.55180359 142.34333801]
[253.09719849 149.43029785]
[267.27111816 154.33949280]
[282.26831055 154.62846375]
[286.62786865 168.98097229]
[274.32498169 177.56228638]
[262.36190796 168.51339722]
[248.18798828 163.60420227]
[245.73339844 170.69116211]
[257.09606934 180.48348999]
[268.45874023 190.27581787]
[283.96359253 193.42378235]
[288.55355835 207.59352112]
[299.91622925 217.38584900]
[311.27890015 227.17819214]
[326.78378296 230.32615662]
[331.37374878 244.49589539]
[342.73641968 254.28822327]
[354.09909058 264.08056641]
[370.14016724 264.33163452]
[379.83087158 277.11718750]
[375.73730469 292.62918091]
[360.99969482 298.96817017]
[346.92349243 291.27142334]
[344.30673218 275.44320679]
[332.94409180 265.65087891]
[321.58142090 255.85855103]
[306.88928223 253.41101074]
[301.48657227 238.54084778]
[290.12390137 228.74851990]
[278.76123047 218.95619202]
[264.06909180 216.50863647]
[258.66641235 201.63848877]
[247.30372620 191.84616089]
[235.94105530 182.05383301]
[207.95516968 181.04853821]
[189.82583618 163.25042725]
[188.65245056 140.46832275]
[174.92526245 134.42147827]
[161.19807434 128.37463379]
[147.47090149 122.32777405]
[133.74371338 116.28092194]
[120.01652527 110.23406982]
[133.56388855 116.67371368]
[141.15209961 129.61276245]
[140.15888977 144.57984924]
[130.92747498 156.40274048]
[116.64798737 160.99580383]
[102.25501251 156.77177429]
[92.72238159 145.19036865]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 35]
[2 34]
[3 33]
[4 32]
[5 31]
[7 29]
[8 28]
[9 27]
[10 25]
[11 24]
[12 23]
[36 140]
[37 139]
[38 138]
[41 134]
[42 133]
[43 132]
[44 131]
[45 130]
[46 129]
[47 128]
[49 127]
[50 126]
[51 125]
[59 124]
[60 123]
[61 122]
[62 121]
[63 120]
[64 119]
[65 118]
[66 117]
[67 116]
[71 109]
[72 108]
[74 107]
[75 106]
[76 105]
[77 104]
[78 103]
[79 102]
[81 100]
[82 99]
[83 98]
[84 97]
[87 95]
[88 94]
[142 204]
[143 203]
[144 202]
[145 201]
[146 200]
[147 199]
[153 162]
[154 161]
[155 160]
[170 196]
[171 195]
[172 194]
[174 192]
[175 191]
[176 190]
[178 188]
[179 187]
[180 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
