%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 11:29:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUCUGAUACCAGCUGGAGGUUGAGCUCUUCUUAAAGUAUUCUUCUCUUCCUUUUAUCAGUAGGUGCCCAGAAUAAGUUAUUGCAGUUUAUCAUUCAAGUGUAAAAUAUUUUGAAUCAAUAAUAUAUUUUCUGUUUUCUUUUGGUAAAGACUGGCUUUUAUUAAUGCACUUUCUAUCCUCUGUAAACUUUUUGUGCUGAAUGUUGGGACUGCUAAAUAAAAUUUGUUGCAUAA\
) } def
/len { sequence length } bind def

/coor [
[-222.00114441 475.05010986]
[-236.94702148 473.77706909]
[-246.70918274 462.38845825]
[-245.68244934 447.42419434]
[-257.60299683 456.52917480]
[-269.46264648 465.71331787]
[-281.26092529 474.97619629]
[-293.05920410 484.23907471]
[-304.85748291 493.50192261]
[-316.65573120 502.76480103]
[-328.45401001 512.02764893]
[-330.48312378 527.47180176]
[-342.58023071 536.69757080]
[-357.29132080 534.66790771]
[-369.08956909 543.93078613]
[-371.11871338 559.37493896]
[-383.21578979 568.60070801]
[-397.92687988 566.57104492]
[-409.72515869 575.83392334]
[-421.52340698 585.09680176]
[-433.32168579 594.35968018]
[-445.11996460 603.62255859]
[-447.42929077 616.30084229]
[-457.43231201 623.77398682]
[-469.44836426 622.47790527]
[-481.36889648 631.58288574]
[-493.28942871 640.68792725]
[-495.52395630 656.10363770]
[-507.74276733 665.16760254]
[-522.42553711 662.94232178]
[-534.34606934 672.04730225]
[-546.26660156 681.15228271]
[-552.07299805 696.48913574]
[-568.29962158 698.86163330]
[-578.25390625 685.82916260]
[-571.69573975 670.79846191]
[-555.37158203 669.23175049]
[-543.45104980 660.12677002]
[-531.53051758 651.02178955]
[-529.81433105 636.27081299]
[-517.85491943 626.86724854]
[-502.39440918 628.76739502]
[-490.47387695 619.66241455]
[-478.55334473 610.55737305]
[-472.67425537 594.01470947]
[-454.38284302 591.82427979]
[-442.58456421 582.56140137]
[-430.78628540 573.29852295]
[-418.98800659 564.03564453]
[-407.18972778 554.77282715]
[-405.67004395 540.00030518]
[-393.83688354 530.43835449]
[-378.35244751 532.13250732]
[-366.55416870 522.86968994]
[-365.03448486 508.09716797]
[-353.20132446 498.53524780]
[-337.71688843 500.22940063]
[-325.91860962 490.96652222]
[-314.12033081 481.70364380]
[-302.32205200 472.44079590]
[-290.52380371 463.17791748]
[-278.72552490 453.91503906]
[-275.41110229 447.32379150]
[-266.70797729 444.60864258]
[-254.78744507 435.50366211]
[-243.23994446 425.92999268]
[-232.08386230 415.90292358]
[-220.92779541 405.87588501]
[-209.77171326 395.84881592]
[-211.49679565 381.07849121]
[-204.10632324 367.96954346]
[-190.25193787 361.65213013]
[-175.15977478 364.73965454]
[-164.00370789 354.71258545]
[-152.84762573 344.68551636]
[-141.69154358 334.65847778]
[-142.06985474 324.46826172]
[-136.67111206 315.55993652]
[-127.06658936 310.99090576]
[-116.31430817 312.48266602]
[-104.89525604 302.75613403]
[-93.47621155 293.02960205]
[-82.05716705 283.30310059]
[-70.63811493 273.57656860]
[-59.34955597 263.69888306]
[-48.19348145 253.67182922]
[-37.03740692 243.64476013]
[-25.88133049 233.61770630]
[-14.72525501 223.59063721]
[-3.56917930 213.56356812]
[7.58689594 203.53651428]
[7.76880121 186.71192932]
[20.31553078 175.00004578]
[37.78775787 176.01406860]
[48.80937195 165.83938599]
[59.83098221 155.66471863]
[70.85259247 145.49003601]
[81.87420654 135.31535339]
[92.89582062 125.14067841]
[82.47520447 121.51421356]
[73.93470764 113.53911591]
[69.08264160 102.19593811]
[69.21894073 89.20649719]
[74.83892822 76.77429962]
[85.46693420 67.21109009]
[85.66661072 52.21241760]
[85.86627960 37.21374893]
[86.06594849 22.21507645]
[86.26562500 7.21640635]
[86.46529388 -7.78226471]
[86.66497040 -22.78093529]
[79.11205292 -36.68288040]
[87.01808167 -49.30603027]
[87.21775818 -64.30470276]
[87.41742706 -79.30337524]
[76.21367645 -90.45018768]
[76.25696564 -106.25441742]
[87.52161407 -117.33969116]
[103.32450104 -117.12931061]
[114.29005432 -105.74810028]
[113.91261292 -89.94831848]
[102.41609955 -79.10369873]
[102.21643066 -64.10502625]
[102.01675415 -49.10635757]
[109.58395386 -36.27721786]
[101.66363525 -22.58126450]
[101.46396637 -7.58259296]
[101.26429749 7.41607809]
[101.06462097 22.41474915]
[100.86495209 37.41342163]
[100.66528320 52.41209030]
[100.46560669 67.41075897]
[107.07412720 70.95723724]
[114.16707611 57.74020386]
[121.26003265 44.52317047]
[128.35298157 31.30613518]
[135.44615173 18.08920860]
[148.66296387 25.18257141]
[141.57002258 38.39908981]
[134.47706604 51.61612320]
[127.38411713 64.83316040]
[120.29116058 78.05019379]
[126.89968109 81.59667206]
[139.28790283 73.13901520]
[151.67611694 64.68135834]
[164.06434631 56.22370148]
[176.45257568 47.76604843]
[188.84078979 39.30839157]
[201.22901917 30.85073662]
[213.61723328 22.39308167]
[226.00546265 13.93542576]
[228.68714905 -1.63968420]
[241.64468384 -10.68833351]
[257.19058228 -7.84211874]
[266.10171509 5.21035147]
[263.09130859 20.72527885]
[249.94534302 29.49793053]
[234.46311951 26.32364845]
[222.07489014 34.78130341]
[209.68667603 43.23896027]
[197.29844666 51.69661331]
[184.91021729 60.15427017]
[172.52200317 68.61192322]
[160.13377380 77.06958008]
[147.74555969 85.52723694]
[135.35733032 93.98489380]
[129.86747742 108.28485870]
[119.81777954 117.02288818]
[134.62680054 119.40883636]
[149.43583679 121.79479218]
[164.24485779 124.18074799]
[170.26257324 110.35186768]
[179.53099060 98.45449829]
[191.46748352 89.23652649]
[205.32170105 83.27738953]
[220.22277832 80.95169067]
[235.23400879 82.40562439]
[249.41175842 87.54779816]
[261.86483765 96.05496216]
[271.81039429 107.39234924]
[278.62329102 120.84729767]
[281.87521362 135.57398987]
[281.36178589 150.64672852]
[277.11523438 165.11799622]
[269.40255737 178.07814026]
[258.70852661 188.71246338]
[245.70542908 196.35247803]
[231.21060181 200.51794434]
[216.13523865 200.94700623]
[201.42697144 197.61268616]
[188.01037598 190.72459412]
[176.72883606 180.71571350]
[168.29150391 168.21522522]
[163.22879028 154.00889587]
[161.85890198 138.98977661]
[147.04988098 136.60382080]
[132.24085999 134.21786499]
[117.43183136 131.83190918]
[103.07049561 136.16229248]
[92.04888916 146.33697510]
[81.02727509 156.51164246]
[70.00566101 166.68632507]
[58.98405075 176.86100769]
[47.96243668 187.03567505]
[48.97869873 200.45596313]
[42.18410492 211.84774780]
[30.24815178 217.17228699]
[17.61395836 214.69258118]
[6.45788336 224.71965027]
[-4.69819212 234.74671936]
[-15.85426712 244.77377319]
[-27.01034355 254.80084229]
[-38.16641998 264.82791138]
[-49.32249451 274.85494995]
[-51.72068405 280.98632812]
[-56.17995834 284.47436523]
[-60.91159058 284.99560547]
[-72.33063507 294.72213745]
[-83.74968719 304.44866943]
[-95.16873169 314.17520142]
[-106.58777618 323.90173340]
[-112.49782562 343.18603516]
[-131.66448975 345.81454468]
[-142.82055664 355.84161377]
[-153.97663879 365.86865234]
[-165.13272095 375.89572144]
[-163.66688538 391.23059082]
[-171.42112732 404.33496094]
[-185.24137878 410.29019165]
[-199.74464417 407.00488281]
[-210.90072632 417.03195190]
[-222.05680847 427.05902100]
[-233.21287537 437.08605957]
[-218.31697083 438.85009766]
[-208.93473816 450.55368042]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 65]
[5 64]
[6 62]
[7 61]
[8 60]
[9 59]
[10 58]
[11 57]
[14 54]
[15 53]
[18 50]
[19 49]
[20 48]
[21 47]
[22 46]
[25 44]
[26 43]
[27 42]
[30 39]
[31 38]
[32 37]
[66 233]
[67 232]
[68 231]
[69 230]
[73 226]
[74 225]
[75 224]
[76 223]
[80 221]
[81 220]
[82 219]
[83 218]
[84 217]
[85 214]
[86 213]
[87 212]
[88 211]
[89 210]
[90 209]
[91 208]
[94 204]
[95 203]
[96 202]
[97 201]
[98 200]
[99 199]
[105 132]
[106 131]
[107 130]
[108 129]
[109 128]
[110 127]
[111 126]
[113 124]
[114 123]
[115 122]
[143 166]
[144 165]
[145 164]
[146 163]
[147 162]
[148 161]
[149 160]
[150 159]
[151 158]
[168 198]
[169 197]
[170 196]
[171 195]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
