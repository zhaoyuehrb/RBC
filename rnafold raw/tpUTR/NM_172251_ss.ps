%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 11:38:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUGGAGGGCCCGGCAUCGCUGACCCCCACGCCGAGGGCUUGCCGUUUUCCCGGAGGACGUGGACUUUUGUGAGACAAGAGGCGGCUCCCCAGCCUGGGUUUCCAUGUGACCCCACAGUGGGGCUGGACCAGGGCCCUGGAGGCCAAUAAAGAGCUUUCUGGGUAGACCCUA\
) } def
/len { sequence length } bind def

/coor [
[33.12513733 115.37258911]
[37.39765549 100.99393463]
[47.97694397 90.36009216]
[62.33343124 86.01367188]
[77.03238678 88.99298096]
[89.86573792 96.75862122]
[82.32646179 83.79100037]
[74.78717804 70.82337189]
[67.24789429 57.85575104]
[59.70861435 44.88813019]
[52.16933060 31.92050743]
[44.63005066 18.95288658]
[36.97333527 6.05425215]
[29.19982529 -6.77432966]
[10.00878048 -13.03480053]
[4.88298130 -32.68547440]
[18.73608398 -47.70136261]
[7.61324644 -57.76528168]
[-3.50959110 -67.82920074]
[-14.63242817 -77.89311981]
[-34.49421310 -81.19895172]
[-39.69968414 -99.79972076]
[-51.18061447 -109.45312500]
[-66.71315765 -108.27931976]
[-78.21894073 -118.23278809]
[-79.24227142 -133.04792786]
[-90.72319794 -142.70133972]
[-102.20413208 -152.35473633]
[-113.68506622 -162.00813293]
[-129.22708130 -164.96728516]
[-133.98905945 -179.08013916]
[-145.46998596 -188.73353577]
[-161.01199341 -191.69268799]
[-165.77397156 -205.80554199]
[-174.38937378 -208.94918823]
[-177.37367249 -215.73997498]
[-188.67742920 -225.60026550]
[-199.98117065 -235.46055603]
[-210.81712341 -234.09245300]
[-220.41101074 -238.83468628]
[-225.68305969 -247.89427185]
[-225.09127808 -258.13909912]
[-236.02954102 -268.40332031]
[-246.96780396 -278.66757202]
[-257.90606689 -288.93179321]
[-268.84429932 -299.19601440]
[-275.15609741 -292.47418213]
[-285.63943481 -289.06356812]
[-298.43667603 -291.02697754]
[-311.73309326 -297.97000122]
[-325.02951050 -304.91299438]
[-338.38839722 -311.73498535]
[-351.80871582 -318.43539429]
[-367.41976929 -314.73757935]
[-379.95477295 -324.75024414]
[-379.79791260 -340.79251099]
[-367.06954956 -350.55816650]
[-351.53375244 -346.55578613]
[-345.10830688 -331.85568237]
[-331.68798828 -325.15527344]
[-324.27246094 -324.98004150]
[-318.08648682 -318.20941162]
[-304.79006958 -311.26641846]
[-291.49365234 -304.32339478]
[-280.93533325 -314.97805786]
[-287.99877930 -328.21087646]
[-295.06219482 -341.44369507]
[-302.12564087 -354.67654419]
[-309.18908691 -367.90936279]
[-316.25253296 -381.14221191]
[-323.31597900 -394.37503052]
[-336.10858154 -405.50094604]
[-328.95883179 -420.87353516]
[-312.20773315 -418.25875854]
[-310.08316040 -401.43847656]
[-303.01971436 -388.20562744]
[-295.95626831 -374.97280884]
[-288.89282227 -361.73999023]
[-281.82937622 -348.50714111]
[-274.76593018 -335.27432251]
[-267.70248413 -322.04150391]
[-258.58007812 -310.13427734]
[-247.64181519 -299.87005615]
[-236.70356750 -289.60580444]
[-225.76530457 -279.34158325]
[-214.82704163 -269.07736206]
[-195.74269104 -266.09857178]
[-190.12088013 -246.76429749]
[-178.81713867 -236.90402222]
[-167.51338196 -227.04373169]
[-156.12057495 -217.28648376]
[-141.39976501 -215.01780701]
[-135.81658936 -200.21447754]
[-124.33565521 -190.56108093]
[-109.61483765 -188.29240417]
[-104.03166962 -173.48907471]
[-92.55073547 -163.83566284]
[-81.06980133 -154.18226624]
[-69.58886719 -144.52886963]
[-54.81797409 -146.06390381]
[-43.03715897 -136.43753052]
[-41.52721405 -120.93405914]
[-30.04628181 -111.28065491]
[-19.94243622 -113.07476807]
[-10.32503796 -108.90629578]
[-4.48600054 -99.93761444]
[-4.56850863 -89.01596069]
[6.55432892 -78.95204163]
[17.67716599 -68.88812256]
[28.80000496 -58.82419968]
[43.66109848 -56.78756714]
[57.08139801 -63.48798370]
[70.50170135 -70.18840027]
[83.92199707 -76.88880920]
[97.34230042 -83.58922577]
[108.81249237 -96.07405853]
[123.98467255 -88.50826263]
[120.91463470 -71.83459473]
[104.04270935 -70.16893005]
[90.62241364 -63.46851349]
[77.20211029 -56.76809692]
[63.78181458 -50.06768417]
[50.36151505 -43.36726761]
[48.27823639 -36.16241074]
[63.27022552 -36.65260696]
[68.36918640 -22.54584885]
[56.52851105 -13.33724117]
[44.11168289 -21.75269890]
[42.02840805 -14.54784107]
[49.80191803 -1.71925926]
[55.97962570 2.38645387]
[57.59767151 11.41360378]
[65.13695526 24.38122559]
[72.67623901 37.34885025]
[80.21551514 50.31647110]
[87.75479889 63.28409195]
[95.29408264 76.25171661]
[102.83336639 89.21933746]
[112.48676300 100.70027161]
[123.96769714 110.35367584]
[135.44863892 120.00707245]
[146.92956543 129.66047668]
[158.41050720 139.31387329]
[169.89143372 148.96728516]
[181.45954895 158.51603699]
[197.14965820 156.61973572]
[209.53338623 166.43904114]
[211.26370239 182.14831543]
[201.31402588 194.42755127]
[185.58732605 195.99166870]
[173.41397095 185.91273499]
[172.01620483 170.17037964]
[164.81393433 168.39608765]
[160.23803711 160.44821167]
[148.75709534 150.79481506]
[137.27616882 141.14140320]
[125.79523468 131.48800659]
[114.31430054 121.83460999]
[102.83336639 112.18120575]
[96.52731323 116.24121857]
[77.60915375 128.42124939]
[81.64469910 142.86820984]
[85.68024445 157.31515503]
[97.77053070 168.39472961]
[93.95679474 184.34426880]
[78.16227722 188.75622559]
[66.63503265 177.09197998]
[71.23329926 161.35070801]
[67.19775391 146.90374756]
[63.16220474 132.45680237]
[59.77749252 147.06993103]
[45.83449936 141.53884888]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 138]
[7 137]
[8 136]
[9 135]
[10 134]
[11 133]
[12 132]
[13 130]
[14 129]
[17 110]
[18 109]
[19 108]
[20 107]
[22 103]
[23 102]
[26 99]
[27 98]
[28 97]
[29 96]
[31 94]
[32 93]
[34 91]
[36 90]
[37 89]
[38 88]
[42 86]
[43 85]
[44 84]
[45 83]
[46 82]
[49 64]
[50 63]
[51 62]
[52 60]
[53 59]
[65 81]
[66 80]
[67 79]
[68 78]
[69 77]
[70 76]
[71 75]
[111 123]
[112 122]
[113 121]
[114 120]
[115 119]
[139 159]
[140 158]
[141 157]
[142 156]
[143 155]
[144 154]
[145 152]
[161 170]
[162 169]
[163 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
