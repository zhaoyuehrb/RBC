%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 03:40:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCAACUCCGUUUUCACAUGCUUGUCCUAUUUGCUCGUUGGGUUCCAGGAGGCUCUCUCCGUCCCCUGGCUCUGUGUAUGGCCCAUCGUCCUUACCACACUGUCCUGCAAGUGCUCGUUAACUCACCUGGCUUCUCCACUGCCCUCUCUGUUCCCUCAAUGAAGGAACCCUGGGAUCUUGCUCGCCCCUAGUAUCUGGCACAUAGUAUACCCCCAGGAAGUAUUUAUUGUGAAAAUCAAUAAAUUACUUGAAUUG\
A\
) } def
/len { sequence length } bind def

/coor [
[110.08042145 439.48120117]
[105.19416809 425.24707031]
[103.17904663 410.33312988]
[104.11251068 395.31265259]
[107.95869446 380.76296997]
[114.56974030 367.24334717]
[123.69155121 355.27340698]
[134.97351074 345.31332397]
[147.98194885 337.74584961]
[162.21688843 332.86190796]
[160.20597839 317.99731445]
[158.19506836 303.13269043]
[156.18417358 288.26809692]
[154.17326355 273.40350342]
[152.16236877 258.53890991]
[150.15145874 243.67431641]
[148.14056396 228.80970764]
[146.12965393 213.94511414]
[143.66549683 199.14889526]
[140.75038147 184.43489075]
[137.83526611 169.72088623]
[134.92015076 155.00686646]
[132.00503540 140.29286194]
[128.49873352 154.87728882]
[120.43105316 167.52294922]
[108.68282318 176.84921265]
[94.53667450 181.83784485]
[79.53704834 181.94421387]
[65.32157898 177.15670776]
[53.44225693 167.99800110]
[45.19604874 155.46803284]
[41.48324966 140.93479919]
[42.70952988 125.98374939]
[32.19223404 137.47393799]
[16.99136162 138.09695435]
[6.10204458 127.99950409]
[-8.87526703 128.82421875]
[-22.22916412 137.30856323]
[-35.36258698 130.28271484]
[-50.33989716 131.10742188]
[-65.31720734 131.93212891]
[-80.29451752 132.75685120]
[-95.27182770 133.58155823]
[-110.24914551 134.40626526]
[-125.14810944 136.14428711]
[-139.91310120 138.78912354]
[-154.67808533 141.43397522]
[-169.44306946 144.07881165]
[-184.20805359 146.72364807]
[-196.42774963 156.77301025]
[-210.31988525 151.40104675]
[-225.08486938 154.04588318]
[-239.84985352 156.69071960]
[-247.47436523 170.34358215]
[-262.10928345 175.85299683]
[-276.84442139 170.61756897]
[-284.72229004 157.10931396]
[-282.02325439 141.70642090]
[-270.02166748 131.68167114]
[-254.38430786 131.76841736]
[-242.49468994 141.92573547]
[-227.72970581 139.28089905]
[-212.96472168 136.63606262]
[-201.80111694 126.77587128]
[-186.85289001 131.95866394]
[-172.08790588 129.31382751]
[-157.32292175 126.66898346]
[-142.55793762 124.02413940]
[-127.79295349 121.37930298]
[-141.39872742 115.06400299]
[-150.09046936 102.83888245]
[-151.58618164 87.91364288]
[-145.49314880 74.20688629]
[-133.41111755 65.31732178]
[-118.51219177 63.57889938]
[-104.70809174 69.44803619]
[-95.62306976 81.38379669]
[-93.64238739 96.25244904]
[-99.28607941 110.15024567]
[-111.07385254 119.42895508]
[-96.09654236 118.60424042]
[-81.11923218 117.77953339]
[-66.14192200 116.95482635]
[-51.16460800 116.13011169]
[-36.18729782 115.30540466]
[-23.90467834 106.88005066]
[-9.69997692 113.84690857]
[5.27733374 113.02219391]
[14.99216747 101.79020691]
[30.16954231 100.74047089]
[41.88481903 111.00643921]
[45.32645416 104.34272003]
[30.34291458 105.04524231]
[22.24283600 92.42031860]
[29.12639999 79.09303284]
[44.10995483 78.39083862]
[52.20972824 91.01528931]
[55.65136337 84.35157013]
[47.65425491 71.66117096]
[39.65714645 58.97076797]
[31.66003799 46.28036880]
[16.16845703 45.39123917]
[4.17946768 35.54016113]
[0.30308023 20.51507378]
[6.02984524 6.09343052]
[19.15770531 -2.17935228]
[34.63872910 -1.12222087]
[46.52014542 8.85833549]
[50.23331451 23.92459106]
[44.35043716 38.28326035]
[52.34754562 50.97365952]
[60.34465408 63.66405869]
[68.34176636 76.35446167]
[75.70754242 74.94189453]
[72.88241577 60.21034241]
[70.05728912 45.47879028]
[67.23215485 30.74723625]
[64.40702820 16.01568413]
[61.58190536 1.28413105]
[54.34276962 -11.85340786]
[64.60031128 -22.79793930]
[78.17892456 -16.42446136]
[76.31345367 -1.54099643]
[79.13858032 13.19055653]
[81.96371460 27.92210960]
[84.78884125 42.65366364]
[87.61396790 57.38521576]
[90.43909454 72.11676788]
[97.80487061 70.70420837]
[100.53990936 55.95566177]
[103.27494049 41.20711517]
[91.96479797 30.71501350]
[88.14469147 15.76809597]
[93.03360748 1.13586938]
[105.07151031 -8.51257610]
[120.41714478 -10.09845638]
[134.17378235 -3.11572266]
[141.95172119 10.20745945]
[141.26905823 25.61971092]
[132.34361267 38.20304108]
[118.02348328 43.94215012]
[115.28845215 58.69069672]
[112.55341339 73.43923950]
[119.25870514 76.79916382]
[125.97855377 63.38858414]
[132.69862366 49.97811508]
[146.10897827 56.69841003]
[139.38912964 70.10842896]
[132.66928101 83.51901245]
[139.37457275 86.87893677]
[149.55152893 75.85942841]
[159.72850037 64.83992767]
[169.90545654 53.82042313]
[180.08241272 42.80091858]
[183.76126099 27.41336823]
[198.08033752 23.31296730]
[208.25729370 12.29346371]
[214.56173706 -3.44471955]
[231.43009949 -1.74342418]
[234.46492004 14.93668938]
[219.27679443 22.47042465]
[209.09983826 33.48992920]
[206.14892578 48.08929062]
[191.10192871 52.97787857]
[180.92495728 63.99738312]
[170.74800110 75.01689148]
[160.57104492 86.03639221]
[150.39407349 97.05589294]
[156.36643982 110.81565094]
[171.36616516 110.90733337]
[186.36587524 110.99901581]
[201.36560059 111.09069061]
[216.36532593 111.18237305]
[231.36503601 111.27405548]
[239.18196106 98.12707520]
[252.44236755 90.70693970]
[267.53610229 90.91903687]
[280.41098022 98.60626221]
[287.66058350 111.61814117]
[302.66030884 111.70981598]
[317.66003418 111.80149841]
[332.65975952 111.89318085]
[339.42196655 98.25376129]
[351.38677979 88.94086456]
[366.14816284 85.75938416]
[380.76699829 89.28799438]
[392.35626221 98.77473450]
[398.65124512 112.29652405]
[413.65093994 112.38820648]
[428.65066528 112.47988892]
[443.65039062 112.57157135]
[459.52618408 106.62214661]
[469.63793945 120.23054504]
[459.36059570 133.71432495]
[443.55871582 127.57128906]
[428.55899048 127.47960663]
[413.55926514 127.38792419]
[398.55953979 127.29624939]
[392.09976196 140.74008179]
[380.39538574 150.08445740]
[365.73452759 153.43409729]
[351.01315308 150.07241821]
[339.16305542 140.61396790]
[332.56808472 126.89289856]
[317.56835938 126.80121613]
[302.56863403 126.70954132]
[287.56890869 126.61785889]
[280.16079712 139.54014587]
[267.19293213 147.06942749]
[252.09770203 147.09700012]
[238.92898560 139.51531982]
[231.27336121 126.27377319]
[216.27363586 126.18209076]
[201.27392578 126.09041595]
[186.27420044 125.99873352]
[171.27447510 125.90705109]
[156.27476501 125.81537628]
[146.71905518 137.37774658]
[149.63417053 152.09175110]
[152.54928589 166.80577087]
[155.46440125 181.51977539]
[158.37950134 196.23379517]
[168.64260864 185.29446411]
[183.60380554 186.37257385]
[192.19244385 198.67034912]
[188.05326843 213.08795166]
[174.24909973 218.95693970]
[160.99424744 211.93421936]
[163.00515747 226.79881287]
[165.01606750 241.66340637]
[167.02696228 256.52801514]
[169.03787231 271.39260864]
[171.04876709 286.25720215]
[173.05967712 301.12179565]
[175.07057190 315.98638916]
[177.08148193 330.85098267]
[192.10241699 331.77716064]
[206.65396118 335.61627197]
[220.17678833 342.22076416]
[232.15113831 351.33676147]
[242.11671448 362.61389160]
[249.69050598 375.61865234]
[254.58135986 389.85119629]
[256.60131836 404.76449585]
[255.67269897 419.78527832]
[251.83123779 434.33618164]
[245.22456360 447.85797119]
[236.10662842 459.83081055]
[224.82789612 469.79458618]
[211.82189941 477.36627197]
[197.58854675 482.25482178]
[182.67494202 484.27233887]
[167.65431213 483.34130859]
[153.10400391 479.49749756]
[139.58331299 472.88864136]
[127.61192322 463.76876831]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 236]
[11 235]
[12 234]
[13 233]
[14 232]
[15 231]
[16 230]
[17 229]
[18 228]
[19 222]
[20 221]
[21 220]
[22 219]
[23 218]
[33 91]
[36 88]
[37 87]
[39 85]
[40 84]
[41 83]
[42 82]
[43 81]
[44 80]
[45 69]
[46 68]
[47 67]
[48 66]
[49 65]
[51 63]
[52 62]
[53 61]
[98 113]
[99 112]
[100 111]
[101 110]
[129 143]
[130 142]
[131 141]
[150 168]
[151 167]
[152 166]
[153 165]
[154 164]
[156 162]
[157 161]
[169 217]
[170 216]
[171 215]
[172 214]
[173 213]
[174 212]
[179 207]
[180 206]
[181 205]
[182 204]
[188 198]
[189 197]
[190 196]
[191 195]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
