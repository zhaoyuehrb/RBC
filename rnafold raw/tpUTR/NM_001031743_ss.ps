%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 23:58:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUACAGACAACGUUUUAAAAUAGAUGCUACUCAAUUAUGAACAAUAGCAAGUACUUAAAGGUAUAUUAACAUCUAUACAAAUUAAUUUUGUAGGGGUGGCACAUUCAUUGGUUGUGUGACUGUUUAUUGGGUUCCCAUAUUUUAUCAAACUGUUUUCUGUAACACAUUUUUCAUUCUGUUGAAAUUGAAAAAUAAAACUGUCCAUUUAUCUUUUAUUUGUUAG\
) } def
/len { sequence length } bind def

/coor [
[544.46417236 486.30596924]
[533.14044189 476.46862793]
[521.81671143 466.63125610]
[510.49301147 456.79391479]
[499.16931152 446.95654297]
[487.84558105 437.11920166]
[476.52188110 427.28182983]
[461.83956909 424.77600098]
[456.49594116 409.88452148]
[445.17224121 400.04714966]
[433.84851074 390.20980835]
[422.45611572 380.45208740]
[410.99554443 370.77450562]
[399.53500366 361.09692383]
[388.07443237 351.41934204]
[376.47927856 341.90344238]
[364.75180054 332.55111694]
[353.02432251 323.19876099]
[341.29684448 313.84640503]
[329.56939697 304.49404907]
[317.84191895 295.14172363]
[306.11444092 285.78936768]
[293.93093872 292.41464233]
[280.09902954 293.90231323]
[266.70217896 289.99508667]
[255.77102661 281.25085449]
[248.97547913 268.96319580]
[247.36975098 254.97012329]
[251.22891235 241.37922668]
[239.63375854 231.86332703]
[228.03860474 222.34742737]
[216.44345093 212.83152771]
[204.84828186 203.31562805]
[201.33129883 203.29158020]
[197.65048218 201.56869507]
[194.60153198 198.08811951]
[192.97657776 193.14738464]
[181.79194641 183.15219116]
[170.60731506 173.15699768]
[159.42268372 163.16178894]
[148.23803711 153.16659546]
[137.05340576 143.17140198]
[125.86878204 133.17619324]
[116.78220367 140.75418091]
[105.47023773 145.75317383]
[92.68898010 147.52465820]
[79.38063049 145.64746094]
[66.60398102 139.97996521]
[55.45075226 130.69099426]
[46.95415115 118.26548767]
[41.99731064 103.48339081]
[27.01058769 102.85245514]
[12.02386284 102.22151947]
[-2.96286201 101.59057617]
[-17.94958687 100.95964050]
[-32.22548294 109.03000641]
[-46.21324158 100.46994019]
[-45.52345276 84.08531189]
[-30.86571312 76.73120880]
[-17.31864929 85.97291565]
[-2.33192468 86.60385132]
[12.65480042 87.23479462]
[27.64152527 87.86573029]
[42.62825012 88.49666595]
[45.64350128 81.62947845]
[30.71780777 80.13825989]
[27.52376938 65.48226929]
[40.47544861 57.91563034]
[51.67399979 67.89510345]
[54.68925095 61.02791595]
[44.08264923 50.42131424]
[33.47604752 39.81471252]
[22.86944580 29.20811081]
[12.26284409 18.60150909]
[-2.96644878 14.31441116]
[-6.49489164 -0.15622677]
[-17.10149384 -10.76282883]
[-27.70809555 -21.36943054]
[-38.31469727 -31.97603226]
[-48.92129898 -42.58263397]
[-59.52790070 -53.18923569]
[-75.50638580 -54.62710571]
[-84.22402954 -68.09492493]
[-78.99340057 -83.26133728]
[-63.82699203 -88.49196625]
[-50.35916901 -79.77432251]
[-48.92129898 -63.79583740]
[-38.31469727 -53.18923569]
[-27.70809555 -42.58263397]
[-17.10149384 -31.97603226]
[-6.49489164 -21.36943054]
[4.11171007 -10.76282883]
[18.58234787 -7.23438549]
[22.86944580 7.99490738]
[33.47604752 18.60150909]
[44.08264923 29.20811081]
[54.68925095 39.81471252]
[65.29585266 50.42131424]
[78.81038666 43.91305923]
[77.13092041 29.00737572]
[75.45145416 14.10169125]
[73.77198792 -0.80399144]
[72.09251404 -15.70967484]
[62.85873795 -28.55677223]
[69.12238312 -42.07032013]
[67.44291687 -56.97600174]
[59.66117859 -72.03856659]
[71.98088837 -83.68592834]
[86.58350372 -75.07198334]
[82.34860229 -58.65547180]
[84.02806854 -43.74978638]
[93.14172363 -31.96884346]
[86.99819946 -17.38914108]
[88.67766571 -2.48345852]
[90.35713196 12.42222500]
[92.03659821 27.32790756]
[93.71607208 42.23358917]
[123.47943878 51.26307297]
[142.31632996 73.20117188]
[146.07781982 99.66640472]
[135.86398315 121.99156952]
[147.04861450 131.98677063]
[158.23324585 141.98196411]
[169.41787720 151.97715759]
[180.60250854 161.97236633]
[191.78713989 171.96755981]
[202.97177124 181.96275330]
[214.36418152 191.72045898]
[225.95935059 201.23635864]
[237.55450439 210.75225830]
[249.14965820 220.26815796]
[260.74481201 229.78405762]
[275.45071411 222.81164551]
[291.66699219 222.95217896]
[306.14550781 230.12673950]
[316.00842285 242.85258484]
[319.32009888 258.54928589]
[315.46679688 274.06188965]
[327.19424438 283.41424561]
[338.92172241 292.76660156]
[350.64920044 302.11892700]
[362.37667847 311.47128296]
[374.10415649 320.82363892]
[385.83160400 330.17596436]
[392.28652954 331.53417969]
[396.46511841 335.36843872]
[397.75201416 339.95880127]
[409.21255493 349.63638306]
[420.67312622 359.31393433]
[432.13369751 368.99151611]
[440.70065308 372.13293457]
[443.68588257 378.88607788]
[455.00958252 388.72344971]
[466.33331299 398.56079102]
[481.82556152 401.77029419]
[486.35925293 415.95812988]
[497.68295288 425.79547119]
[509.00665283 435.63284302]
[520.33038330 445.47018433]
[531.65405273 455.30755615]
[542.97778320 465.14489746]
[554.30151367 474.98226929]
[559.33038330 475.15377808]
[563.66967773 476.88339233]
[566.89044189 479.75094604]
[568.75726318 483.23843384]
[582.98358154 487.99356079]
[597.20989990 492.74868774]
[611.43621826 497.50384521]
[625.66259766 502.25897217]
[639.88891602 507.01409912]
[654.11523438 511.76922607]
[668.34161377 516.52435303]
[682.63323975 521.07952881]
[696.98730469 525.43377686]
[711.34143066 529.78808594]
[727.18060303 525.53930664]
[738.58691406 537.32183838]
[733.82647705 553.01483154]
[717.79644775 556.47467041]
[706.98718262 544.14215088]
[692.63305664 539.78790283]
[678.27893066 535.43365479]
[673.72692871 536.85015869]
[668.23675537 535.42889404]
[663.58648682 530.75073242]
[649.36010742 525.99560547]
[635.13378906 521.24041748]
[620.90747070 516.48529053]
[606.68109131 511.73016357]
[592.45477295 506.97503662]
[578.22845459 502.21990967]
[564.00207520 497.46475220]
[574.94036865 507.72894287]
[583.77313232 519.85260010]
[590.19061279 533.41046143]
[593.96771240 547.92712402]
[594.97198486 562.89349365]
[593.16821289 577.78460693]
[588.61962891 592.07836914]
[581.48577881 605.27337646]
[572.01684570 616.90692139]
[560.54492188 626.57098389]
[547.47229004 633.92669678]
[533.25744629 638.71606445]
[518.39886475 640.77117920]
[503.41772461 640.01983643]
[488.83932495 636.48852539]
[475.17495728 630.30096436]
[462.90386963 621.67431641]
[452.45635986 610.91094971]
[444.19888306 598.38842773]
[438.42095947 584.54589844]
[435.32528687 569.86877441]
[435.02038574 554.87188721]
[437.51696777 540.08111572]
[442.72747803 526.01519775]
[450.46917725 513.16735840]
[460.47058105 501.98828125]
[472.38092041 492.86996460]
[485.78250122 486.13217163]
[500.20532227 482.01123047]
[515.14355469 480.65164185]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 162]
[2 161]
[3 160]
[4 159]
[5 158]
[6 157]
[7 156]
[9 154]
[10 153]
[11 152]
[12 150]
[13 149]
[14 148]
[15 147]
[16 144]
[17 143]
[18 142]
[19 141]
[20 140]
[21 139]
[22 138]
[29 132]
[30 131]
[31 130]
[32 129]
[33 128]
[37 127]
[38 126]
[39 125]
[40 124]
[41 123]
[42 122]
[43 121]
[51 64]
[52 63]
[53 62]
[54 61]
[55 60]
[70 98]
[71 97]
[72 96]
[73 95]
[74 94]
[76 92]
[77 91]
[78 90]
[79 89]
[80 88]
[81 87]
[99 117]
[100 116]
[101 115]
[102 114]
[103 113]
[105 111]
[106 110]
[166 193]
[167 192]
[168 191]
[169 190]
[170 189]
[171 188]
[172 187]
[173 186]
[174 183]
[175 182]
[176 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
