%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 19:24:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGCUGCCCACCUCUCUCGCACCCCAGUAUGACUGCCGAGCACUGAGGGGUCGCCCCGAGAGAAGAGCCAGGGUCCUUCACCACCCAGCCGCUGGAGGAAGCCUUCUCUGCCAGCGAUCUCGCAGCACUGUGUUUACAGGGGGGAGGGGAGGGGUUCGUACGGGAGCAAUAAAGGAGAAACUGAGGUACCCGG\
) } def
/len { sequence length } bind def

/coor [
[262.89450073 418.58087158]
[261.85293579 414.74902344]
[262.11657715 410.38461304]
[254.93267822 397.21679688]
[247.74876404 384.04898071]
[232.29866028 375.73858643]
[232.87980652 357.33978271]
[225.48468018 344.28939819]
[218.08956909 331.23901367]
[210.69445801 318.18865967]
[195.11248779 310.12826538]
[195.39714050 291.72244263]
[187.79273987 278.79290771]
[180.18833923 265.86337280]
[172.58395386 252.93382263]
[164.97955322 240.00427246]
[157.37515259 227.07472229]
[149.77075195 214.14518738]
[147.07995605 213.31518555]
[144.55816650 211.36218262]
[142.63743591 208.34600830]
[141.71986389 204.48260498]
[142.12396240 200.12893677]
[135.36799622 186.73652649]
[128.61203003 173.34410095]
[121.85604858 159.95169067]
[109.21563721 152.07328796]
[109.90814209 136.26724243]
[103.15216827 122.87483215]
[96.39619446 109.48241425]
[90.23445892 104.26773071]
[89.64122009 95.81938171]
[83.10188293 82.31986237]
[76.56253815 68.82034302]
[65.90670013 67.94048309]
[56.65148926 62.75011063]
[50.43924332 54.24728394]
[48.34015656 44.01068497]
[50.66835785 33.90668106]
[56.93695831 25.74908638]
[51.05745697 11.94939423]
[36.67087936 5.97744894]
[30.90481377 -8.10115623]
[36.68680954 -21.77975655]
[30.80731201 -35.57944870]
[24.92781258 -49.37913895]
[12.40044785 -59.04225159]
[14.52993965 -73.78384399]
[8.65044022 -87.58353424]
[2.77094150 -101.38322449]
[-3.10855770 -115.18291473]
[-8.98805714 -128.98260498]
[-14.86755562 -142.78230286]
[-20.74705505 -156.58200073]
[-26.62655449 -170.38168335]
[-41.79764938 -172.32722473]
[-53.87821960 -181.54441833]
[-59.68461609 -195.47825623]
[-57.74989319 -210.34812927]
[-48.69294357 -222.17340088]
[-54.57244492 -235.97309875]
[-60.45194244 -249.77279663]
[-66.33144379 -263.57247925]
[-72.21093750 -277.37216187]
[-78.09043884 -291.17187500]
[-83.96994019 -304.97155762]
[-90.22096252 -311.65078735]
[-89.83101654 -319.04122925]
[-95.48743439 -332.93386841]
[-103.67687225 -334.69857788]
[-110.42088318 -339.50817871]
[-114.65945435 -346.51531982]
[-115.76285553 -354.53506470]
[-113.62432098 -362.24523926]
[-108.66546631 -368.40429688]
[-113.41548920 -382.63235474]
[-118.16550446 -396.86038208]
[-122.91552734 -411.08843994]
[-127.66554260 -425.31649780]
[-132.41557312 -439.54452515]
[-137.16558838 -453.77258301]
[-148.87477112 -464.41238403]
[-145.56597900 -478.93481445]
[-160.40176392 -483.48226929]
[-169.70433044 -495.90167236]
[-169.89665222 -511.41754150]
[-160.90478516 -524.06372070]
[-146.18627930 -528.97747803]
[-131.40069580 -524.26940918]
[-122.23339844 -511.74978638]
[-122.20940399 -496.23272705]
[-131.33793640 -483.68484497]
[-119.96849823 -474.06271362]
[-122.93753815 -458.52261353]
[-118.18751526 -444.29455566]
[-113.43750000 -430.06649780]
[-108.68747711 -415.83847046]
[-103.93746185 -401.61041260]
[-99.18743896 -387.38235474]
[-94.43741608 -373.15432739]
[-76.88963318 -360.49255371]
[-81.59481812 -338.59027100]
[-75.93839264 -324.69766235]
[-70.17024994 -310.85104370]
[-64.29074860 -297.05136108]
[-58.41125107 -283.25167847]
[-52.53174973 -269.45199585]
[-46.65225220 -255.65228271]
[-40.77275085 -241.85260010]
[-34.89325333 -228.05290222]
[-20.09086227 -226.39314270]
[-8.02645111 -217.48774719]
[-1.99955964 -203.64784241]
[-3.72060156 -188.55033875]
[-12.82686234 -176.26118469]
[-6.94736338 -162.46148682]
[-1.06786430 -148.66180420]
[4.81163502 -134.86210632]
[10.69113445 -121.06241608]
[16.57063293 -107.26272583]
[22.45013237 -93.46303558]
[28.32963181 -79.66334534]
[40.43645477 -70.98727417]
[38.72750473 -55.25864029]
[44.60700226 -41.45894623]
[50.48650360 -27.65925598]
[64.35687256 -22.35374641]
[70.51610565 -8.44265175]
[64.85714722 6.06989479]
[70.73664856 19.86958694]
[89.28791046 25.77956772]
[97.65988922 43.69456482]
[90.06205750 62.28099823]
[96.60139465 75.78051758]
[103.14073944 89.28003693]
[109.78861237 102.72644043]
[116.54458618 116.11885834]
[123.30056000 129.51127625]
[136.42420959 138.34757996]
[135.24847412 153.19570923]
[142.00444031 166.58813477]
[148.76040649 179.98054504]
[155.51638794 193.37297058]
[162.70030212 206.54078674]
[170.30470276 219.47032166]
[177.90908813 232.39987183]
[185.51348877 245.32942200]
[193.11788940 258.25897217]
[200.72229004 271.18850708]
[208.32669067 284.11804199]
[220.60079956 288.10980225]
[226.66610718 299.04641724]
[223.74482727 310.79354858]
[231.13993835 323.84390259]
[238.53506470 336.89428711]
[245.93017578 349.94467163]
[258.13839722 354.13360596]
[264.02673340 365.16650391]
[260.91656494 376.86505127]
[268.10049438 390.03286743]
[275.28439331 403.20068359]
[282.88879395 416.13024902]
[290.90579224 428.80810547]
[298.92279053 441.48593140]
[306.93975830 454.16378784]
[320.85498047 461.69223022]
[321.11776733 476.58453369]
[329.13476562 489.26239014]
[341.62210083 488.41644287]
[353.21496582 492.93875122]
[361.73150635 501.91220093]
[365.59689331 513.58825684]
[364.13458252 525.72753906]
[357.68359375 536.02923584]
[365.28799438 548.95874023]
[380.64721680 552.68298340]
[388.80291748 566.22033691]
[384.91650391 581.53936768]
[371.29370117 589.55145264]
[356.01666260 585.50329590]
[348.14898682 571.79656982]
[352.35842896 556.56317139]
[344.75405884 543.63360596]
[327.12652588 542.75531006]
[313.42797852 531.37902832]
[309.25424194 513.90704346]
[316.45690918 497.27935791]
[308.43991089 484.60150146]
[295.09814453 477.97985840]
[294.26190186 462.18078613]
[286.24493408 449.50292969]
[278.22793579 436.82507324]
[270.21093750 424.14721680]
[267.49481201 423.40435791]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 161]
[4 160]
[5 159]
[7 156]
[8 155]
[9 154]
[10 153]
[12 150]
[13 149]
[14 148]
[15 147]
[16 146]
[17 145]
[18 144]
[23 143]
[24 142]
[25 141]
[26 140]
[28 138]
[29 137]
[30 136]
[32 135]
[33 134]
[34 133]
[40 130]
[41 129]
[44 126]
[45 125]
[46 124]
[48 122]
[49 121]
[50 120]
[51 119]
[52 118]
[53 117]
[54 116]
[55 115]
[60 110]
[61 109]
[62 108]
[63 107]
[64 106]
[65 105]
[66 104]
[68 103]
[69 102]
[75 100]
[76 99]
[77 98]
[78 97]
[79 96]
[80 95]
[81 94]
[83 92]
[162 193]
[163 192]
[164 191]
[165 190]
[167 188]
[168 187]
[174 183]
[175 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
