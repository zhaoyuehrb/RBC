%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 01:51:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGCUGCUGUUGGGCUUUCGUUUCUGCAAUUCAGCUUUGUUUAAAGUGAUUUGAAAAAUACUCAUUCUGAACAUAUCCAUGCGCAAUCAUGAUAACUGUUGUGAGUAGUGCUUUUCAUUCUUCUCACUUGCCUUUGUUACUUAAUGUGCUUUCAGUACAGCAGAUAUGCAAUAUUCACCAAAUAAAUGUAGACUGUGUUAA\
) } def
/len { sequence length } bind def

/coor [
[126.88957214 492.70080566]
[131.17037964 478.11508179]
[140.71092224 466.28097534]
[154.05636597 459.00308228]
[152.42657471 444.09188843]
[150.79679871 429.18069458]
[149.16702271 414.26950073]
[132.20851135 402.86972046]
[129.11953735 382.37371826]
[142.33386230 366.02548218]
[139.78021240 351.24447632]
[137.22656250 336.46343994]
[134.67291260 321.68240356]
[117.45836639 314.42413330]
[108.01392365 298.13137817]
[110.30705261 279.28820801]
[123.59179688 265.52020264]
[120.35152435 250.87435913]
[116.99746704 236.25416565]
[113.52982330 221.66049194]
[110.06217957 207.06680298]
[99.59222412 196.47297668]
[103.92966461 181.25793457]
[100.46202087 166.66426086]
[96.99437714 152.07058716]
[93.52672577 137.47691345]
[90.05908203 122.88323212]
[85.10048676 137.03993225]
[75.91426849 148.89799500]
[63.44586563 157.23698425]
[48.97848892 161.19868469]
[34.00110245 160.37536621]
[20.05514336 154.85176086]
[8.57590103 145.19635010]
[0.74479795 132.40284729]
[-2.63220525 117.78792572]
[-1.20755410 102.85573578]
[4.87212896 89.14305878]
[14.98113537 78.06118011]
[28.07906723 70.75062561]
[42.81790924 67.96378326]
[57.68077469 69.98746490]
[71.13800049 76.61340332]
[81.80629730 87.16198730]
[75.26802826 73.66194916]
[68.72975922 60.16190720]
[62.19149780 46.66186905]
[55.65322876 33.16182709]
[49.11496353 19.66178894]
[28.84946060 14.07681561]
[19.41588402 -4.37949800]
[26.55422401 -23.52602959]
[19.18931389 -36.59347153]
[11.82440281 -49.66091537]
[4.45949125 -62.72835922]
[-2.90542006 -75.79580688]
[-10.27033138 -88.86325073]
[-23.78658295 -97.08647919]
[-23.29514885 -111.97296906]
[-30.66006088 -125.04041290]
[-38.02497101 -138.10786438]
[-45.38988113 -151.17530823]
[-52.33478546 -157.12019348]
[-52.76591492 -164.50373840]
[-59.92671204 -177.68414307]
[-67.08750916 -190.86453247]
[-74.24830627 -204.04493713]
[-89.13608551 -208.62663269]
[-96.21039581 -222.09544373]
[-91.75070190 -236.26042175]
[-98.91149902 -249.44082642]
[-106.07229614 -262.62121582]
[-113.23309326 -275.80163574]
[-120.59800720 -288.86907959]
[-128.16525269 -301.82040405]
[-135.73249817 -314.77172852]
[-143.29974365 -327.72305298]
[-150.33625793 -333.55920410]
[-150.88215637 -340.93515015]
[-158.24707031 -354.00259399]
[-165.61198425 -367.07003784]
[-180.89997864 -371.07659912]
[-188.80493164 -384.76190186]
[-184.63694763 -400.00668335]
[-170.86883545 -407.76651001]
[-155.66897583 -403.43759155]
[-148.05516052 -389.58819580]
[-152.54454041 -374.43496704]
[-145.17962646 -361.36752319]
[-137.81471252 -348.30007935]
[-130.34840393 -335.29028320]
[-122.78116608 -322.33895874]
[-115.21392822 -309.38763428]
[-107.64668274 -296.43630981]
[-103.32981873 -294.37799072]
[-100.26364136 -289.58224487]
[-100.05269623 -282.96243286]
[-92.89189911 -269.78201294]
[-85.73110199 -256.60162354]
[-78.57030487 -243.42121887]
[-64.25956726 -239.45404053]
[-56.80973816 -226.18925476]
[-61.06790924 -211.20573425]
[-53.90710831 -198.02532959]
[-46.74631119 -184.84494019]
[-39.58551407 -171.66453552]
[-32.32244110 -158.54022217]
[-24.95752907 -145.47277832]
[-17.59261703 -132.40533447]
[-10.22770596 -119.33788300]
[2.76175857 -112.04932404]
[2.79711246 -96.22815704]
[10.16202354 -83.16071320]
[17.52693558 -70.09326935]
[24.89184570 -57.02582932]
[32.25675583 -43.95838547]
[39.62166977 -30.89093971]
[48.98474121 -31.27123642]
[57.89665222 -28.19249153]
[65.11656952 -22.03868294]
[69.62303162 -13.62495232]
[70.75833130 -4.08979321]
[68.32424164 5.25896311]
[62.61500549 13.12352276]
[69.15326691 26.62356186]
[75.69153595 40.12360382]
[82.22980499 53.62364197]
[88.76806641 67.12368011]
[95.30633545 80.62371826]
[96.04073334 65.64170837]
[91.24958038 51.42745972]
[92.05767059 36.44924545]
[98.35031891 22.83298111]
[109.23437500 12.51128864]
[123.16501617 6.94916630]
[138.16500854 6.93607092]
[152.10534668 12.47386169]
[163.00740051 22.77653694]
[169.32380676 36.38179016]
[170.15805054 51.35857391]
[165.39172363 65.58116913]
[155.70133972 77.03089142]
[142.46228027 84.08264923]
[127.55140686 85.73536682]
[114.27742004 92.72116089]
[129.27560425 92.95443726]
[144.27378845 93.18771362]
[159.27197266 93.42098999]
[174.27015686 93.65426636]
[189.26834106 93.88754272]
[205.19960022 88.08826447]
[215.18244934 101.79151154]
[204.77825928 115.17766571]
[189.03506470 108.88573456]
[174.03688049 108.65245056]
[159.03869629 108.41917419]
[144.04051208 108.18589783]
[129.04232788 107.95262146]
[114.04414368 107.71934509]
[104.65276337 119.41558075]
[108.12040710 134.00926208]
[111.58805084 148.60293579]
[115.05569458 163.19662476]
[118.52333832 177.79029846]
[129.24133301 189.42796326]
[124.65586090 203.59916687]
[128.12350464 218.19284058]
[131.59115601 232.78651428]
[136.62310791 240.41886902]
[134.99737549 247.63409424]
[138.23764038 262.27993774]
[149.39601135 264.96090698]
[158.70407104 271.58517456]
[164.83720398 281.16305542]
[166.94024658 292.28793335]
[164.74655151 303.34298706]
[158.61116028 312.73596191]
[149.45393372 319.12875366]
[152.00758362 333.90979004]
[154.56124878 348.69082642]
[157.11489868 363.47183228]
[166.33755493 366.53604126]
[173.76354980 372.71493530]
[178.39746094 381.12533569]
[179.63827515 390.58892822]
[177.35702515 399.79721069]
[171.90879822 407.49249268]
[164.07821655 412.63970947]
[165.70799255 427.55090332]
[167.33778381 442.46209717]
[168.96755981 457.37329102]
[183.57005310 461.59649658]
[195.44172668 471.09027100]
[202.77223206 484.40689087]
[204.44372559 499.51565552]
[200.20130920 514.11260986]
[190.69192505 525.97174072]
[177.36569214 533.28472900]
[162.25474548 534.93634033]
[147.66340637 530.67474365]
[135.81675720 521.14978027]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 191]
[5 190]
[6 189]
[7 188]
[10 181]
[11 180]
[12 179]
[13 178]
[17 171]
[18 170]
[19 168]
[20 167]
[21 166]
[23 164]
[24 163]
[25 162]
[26 161]
[27 160]
[44 129]
[45 128]
[46 127]
[47 126]
[48 125]
[49 124]
[52 117]
[53 116]
[54 115]
[55 114]
[56 113]
[57 112]
[59 110]
[60 109]
[61 108]
[62 107]
[64 106]
[65 105]
[66 104]
[67 103]
[70 100]
[71 99]
[72 98]
[73 97]
[74 94]
[75 93]
[76 92]
[77 91]
[79 90]
[80 89]
[81 88]
[145 159]
[146 158]
[147 157]
[148 156]
[149 155]
[150 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
