%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 21:15:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCCGCCUCUUCAGCAAGACCACAGCCAUGACAAACACCAGGAUGCAUGCUCCUUGUCCCCUCCCACCCGCCUCAUGACCCAGCCUCACAGACCCUCUCAGGCCUCUGACGAGUGAGCGGGUGAAGUGCCACUGGGUCACCGCAGGGCAGCUGGAAUGGCAGCAUGGUAGCACCUCCUAACAGAUUAAAUAGAUCACAUUUGCUUCUAAAAUUAA\
) } def
/len { sequence length } bind def

/coor [
[138.61512756 247.39219666]
[147.35473633 235.20124817]
[159.54197693 226.45645142]
[173.88973999 222.08134460]
[188.88278198 222.53797913]
[202.93783569 227.77818298]
[193.00350952 216.53945923]
[183.06918335 205.30072021]
[168.23326111 204.64404297]
[157.99833679 193.38787842]
[158.78771973 177.83106995]
[148.85339355 166.59233093]
[138.91906738 155.35360718]
[128.98474121 144.11486816]
[119.05040741 132.87614441]
[109.11607361 121.63740540]
[94.52993011 125.21191406]
[79.32630920 119.05779266]
[69.82944489 104.01673126]
[56.26815796 110.42699432]
[42.70686722 116.83724976]
[39.79142761 133.50064087]
[27.63779640 145.02720642]
[11.17350864 147.01670837]
[-3.08709526 138.88159180]
[-16.55416298 145.48750305]
[-30.02123070 152.09341431]
[-36.34416962 158.67932129]
[-43.73141861 158.69589233]
[-57.29270935 165.10615540]
[-70.85399628 171.51640320]
[-77.27161407 178.01010132]
[-84.65833282 177.91970825]
[-98.31099701 184.13298035]
[-103.93141174 198.66049194]
[-117.86566925 204.76713562]
[-131.68080139 199.31941223]
[-140.76527405 212.97239685]
[-157.11195374 211.66162109]
[-163.90476990 196.73547363]
[-154.15585327 183.54870605]
[-137.89405823 185.66673279]
[-132.92733765 171.67147827]
[-119.17009735 165.17585754]
[-104.52426147 170.48030090]
[-90.87158966 164.26704407]
[-77.26425934 157.95512390]
[-63.70296478 151.54486084]
[-50.14167786 145.13459778]
[-36.62714386 138.62634277]
[-23.16007614 132.02043152]
[-9.69300747 125.41452026]
[-8.63535690 112.10823822]
[-1.08121991 100.97218323]
[11.08535576 94.97419739]
[24.73474312 95.77636719]
[36.29661179 103.27596283]
[49.85789871 96.86569977]
[63.41918945 90.45544434]
[48.91754913 94.28981018]
[34.76710510 89.31336212]
[25.85787010 77.24582672]
[25.26862526 62.25740051]
[33.20299911 49.52768326]
[46.91908646 43.45570755]
[61.67699051 46.13978195]
[72.37678528 56.65236664]
[75.32087708 71.36094666]
[75.10372925 56.36252213]
[74.88657379 41.36409378]
[74.56085968 26.36763000]
[74.12659454 11.37391663]
[64.06172943 5.05667448]
[58.35264206 -5.22834826]
[58.31555176 -16.87175751]
[63.84405136 -26.98262978]
[73.46420288 -33.10629654]
[73.46420288 -48.10629654]
[73.46420288 -63.10629654]
[73.46420288 -78.10629272]
[73.46420288 -93.10629272]
[73.46420288 -108.10629272]
[73.46420288 -123.10629272]
[73.46420288 -138.10629272]
[61.07922363 -147.26699829]
[56.51647186 -161.79403687]
[61.32578278 -176.05357361]
[73.46420288 -184.64408875]
[73.46420288 -199.64408875]
[73.46420288 -214.64408875]
[60.86938477 -226.78759766]
[60.95454025 -243.94508362]
[73.17839813 -255.49861145]
[72.96125031 -270.49703979]
[72.74409485 -285.49548340]
[72.52693939 -300.49389648]
[64.59066772 -314.18060303]
[72.14290619 -327.01855469]
[71.92575073 -342.01699829]
[71.70860291 -357.01541138]
[71.49144745 -372.01385498]
[68.81981659 -376.48779297]
[68.19122314 -381.08016968]
[69.30934143 -384.99398804]
[71.60474396 -387.66485596]
[72.03900146 -402.65856934]
[72.47326660 -417.65228271]
[64.21629333 -431.82107544]
[72.59210968 -445.91995239]
[88.98438263 -445.44515991]
[96.53015137 -430.88519287]
[87.46697998 -417.21804810]
[87.03271484 -402.22433472]
[86.59845734 -387.23062134]
[86.48987579 -372.23098755]
[86.70703125 -357.23257446]
[86.92417908 -342.23413086]
[87.14133453 -327.23571777]
[95.06207275 -314.62179565]
[87.52536774 -300.71105957]
[87.74252319 -285.71261597]
[87.95967865 -270.71420288]
[88.17682648 -255.71577454]
[98.58255768 -248.12083435]
[102.77787018 -235.73486328]
[99.01948547 -223.00637817]
[88.46420288 -214.64408875]
[88.46420288 -199.64408875]
[88.46420288 -184.64408875]
[100.60261536 -176.05357361]
[105.41192627 -161.79403687]
[100.84917450 -147.26699829]
[88.46420288 -138.10629272]
[88.46420288 -123.10629272]
[88.46420288 -108.10629272]
[88.46420288 -93.10629272]
[88.46420288 -78.10629272]
[88.46420288 -63.10629654]
[88.46420288 -48.10629654]
[88.46420288 -33.10629654]
[102.16468811 -20.96006393]
[102.63966370 -2.33715653]
[89.12030792 10.93965626]
[89.55457306 25.93336868]
[92.88877869 32.52539062]
[89.88500214 41.14693832]
[90.10215759 56.14536667]
[90.31930542 71.14379883]
[113.02761078 75.08249664]
[124.76776123 92.78057861]
[120.35480499 111.70307922]
[130.28913879 122.94181061]
[140.22346497 134.18054199]
[150.15779114 145.41926575]
[160.09213257 156.65800476]
[170.02645874 167.89672852]
[185.56253052 169.02287292]
[195.47724915 180.56207275]
[194.30790710 195.36639404]
[204.24223328 206.60513306]
[214.17657471 217.84385681]
[225.41529846 227.77818298]
[237.78845215 236.25787354]
[250.16162109 244.73754883]
[262.53475952 253.21722412]
[285.39028931 242.65171814]
[312.02545166 258.24099731]
[326.59951782 261.79016113]
[341.17358398 265.33935547]
[357.99359131 263.21240234]
[364.69363403 278.78628540]
[351.58316040 289.53576660]
[337.62442017 279.91339111]
[323.05035400 276.36422729]
[308.47628784 272.81506348]
[304.78915405 279.34613037]
[317.85131836 286.72042847]
[330.91348267 294.09469604]
[343.97552490 301.46917725]
[336.60079956 314.53109741]
[323.53918457 307.15686035]
[310.47705078 299.78256226]
[297.41488647 292.40829468]
[293.72772217 298.93939209]
[304.29586792 309.58428955]
[314.86401367 320.22921753]
[325.43215942 330.87414551]
[341.40533447 332.36984253]
[350.07418823 345.86911011]
[344.78869629 361.01651001]
[329.60345459 366.19219971]
[316.16726685 357.42587280]
[314.78723145 341.44229126]
[304.21911621 330.79736328]
[293.65097046 320.15243530]
[283.08282471 309.50753784]
[270.98861694 307.17037964]
[261.02078247 301.23550415]
[254.12399292 292.81384277]
[250.76210022 283.21374512]
[250.90043640 273.75427246]
[254.05508423 265.59039307]
[241.68193054 257.11071777]
[229.30877686 248.63102722]
[216.93562317 240.15135193]
[223.86137390 253.45675659]
[226.15495300 268.28036499]
[223.57412720 283.05667114]
[216.39146423 296.22515869]
[205.36550903 306.39514160]
[191.66069031 312.49252319]
[176.72439575 313.87341309]
[162.13400269 310.39193726]
[149.43040466 302.41583252]
[139.95521545 290.78738403]
[134.70910645 276.73468018]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 161]
[7 160]
[8 159]
[11 156]
[12 155]
[13 154]
[14 153]
[15 152]
[16 151]
[19 59]
[20 58]
[21 57]
[25 52]
[26 51]
[27 50]
[29 49]
[30 48]
[31 47]
[33 46]
[34 45]
[37 42]
[68 148]
[69 147]
[70 146]
[71 144]
[72 143]
[77 140]
[78 139]
[79 138]
[80 137]
[81 136]
[82 135]
[83 134]
[84 133]
[88 129]
[89 128]
[90 127]
[93 123]
[94 122]
[95 121]
[96 120]
[98 118]
[99 117]
[100 116]
[101 115]
[105 114]
[106 113]
[107 112]
[162 205]
[163 204]
[164 203]
[165 202]
[167 175]
[168 174]
[169 173]
[184 196]
[185 195]
[186 194]
[187 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
