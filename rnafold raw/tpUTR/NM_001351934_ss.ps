%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 06:39:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCAGUCUCAGAGGCUAGUAUGGGGCUAGAUGAAGCCCAGAGUAACACCCACAAUAUAAAUGGGUUCCAAAAUGGCCCAAGUGAAUCCUUGUCGCUGUGUUUUUUCUUUUAAACUUUCUGGUGUGAGAGGAGAUGCCAAGGCAUACAGUGAAUAAAAGCCUUGUCUCUGAA\
) } def
/len { sequence length } bind def

/coor [
[109.37462616 286.89605713]
[98.08059692 297.40548706]
[82.89358521 300.11810303]
[68.65971375 294.16827393]
[59.92095184 281.45458984]
[59.46581268 266.03396606]
[67.43952942 252.82701111]
[81.29771423 246.04806519]
[82.93828583 231.13804626]
[84.57885742 216.22802734]
[86.21942139 201.31800842]
[87.85999298 186.40800476]
[89.50055695 171.49798584]
[91.14112854 156.58796692]
[92.78169250 141.67796326]
[85.54091644 139.00996399]
[79.02321625 135.12080383]
[73.42729187 130.18287659]
[68.91358185 124.39947510]
[65.59981537 117.99662018]
[63.55819702 111.21443176]
[62.81428909 104.29821014]
[63.34758759 97.48964691]
[48.90704727 93.43122101]
[34.46650314 89.37280273]
[20.02596283 85.31438446]
[5.58542252 81.25595856]
[-8.85511875 77.19754028]
[-23.93044281 86.03705597]
[-40.41522217 81.34886169]
[-48.26725769 66.49540710]
[-62.77951431 62.70140457]
[-78.08797455 66.69659424]
[-88.44438171 55.99172592]
[-102.95664215 52.19772720]
[-117.46889496 48.40372467]
[-131.98115540 44.60972595]
[-146.49340820 40.81572342]
[-161.00566101 37.02172470]
[-168.61253357 50.06158447]
[-179.45625305 60.56475449]
[-192.73211670 67.75182343]
[-207.45497131 71.08946991]
[-222.53230286 70.33001709]
[-236.84526062 65.52981567]
[-249.33172607 57.04507828]
[-259.06512451 45.50542831]
[-265.32315063 31.76717949]
[-267.64147949 16.84980583]
[-265.84799194 1.86027479]
[-260.07583618 -12.08909225]
[-250.75334167 -23.96315765]
[-238.57228088 -32.88079071]
[-224.43655396 -38.18023682]
[-209.39515686 -39.46825027]
[-194.56425476 -36.64924622]
[-181.04438782 -29.93241501]
[-169.83883667 -19.81619072]
[-161.77909851 -7.05126476]
[-157.46328735 7.41512251]
[-157.21165466 22.50946808]
[-142.69940186 26.30346870]
[-128.18714905 30.09746933]
[-113.67489624 33.89146805]
[-99.16263580 37.68547058]
[-84.65038300 41.47947311]
[-70.37993622 37.21290970]
[-58.98551178 48.18914795]
[-44.47325897 51.98314667]
[-34.35407639 43.97167969]
[-21.27239799 43.25201416]
[-10.00522137 50.31187820]
[-4.79669762 62.75699997]
[9.64384365 66.81542206]
[24.08438492 70.87384033]
[38.52492523 74.93225861]
[52.96546555 78.99068451]
[67.40600586 83.04910278]
[80.98855591 65.48138428]
[103.54611969 58.07249451]
[104.64105225 43.11251068]
[105.73597717 28.15252495]
[106.83090973 13.19254112]
[107.92584229 -1.76744294]
[96.58708191 -12.53621769]
[94.87449646 -28.07974052]
[103.59671783 -41.05883408]
[118.63538361 -45.34516525]
[132.88967896 -38.91486359]
[139.62918091 -24.80411911]
[135.67169189 -9.67559242]
[122.88582611 -0.67251319]
[121.79089355 14.28747082]
[120.69596863 29.24745560]
[119.60103607 44.20743942]
[118.50610352 59.16742325]
[130.93997192 67.55783844]
[144.40313721 60.94399643]
[157.86631775 54.33015060]
[171.32948303 47.71630478]
[184.79266357 41.10245895]
[198.25582886 34.48861313]
[211.71900940 27.87476540]
[225.18217468 21.26091957]
[238.64535522 14.64707375]
[252.10853577 8.03322792]
[265.57171631 1.41938233]
[279.03488159 -5.19446373]
[280.62011719 -17.02115059]
[287.65963745 -26.50675774]
[298.30133057 -31.35061264]
[309.83825684 -30.44825745]
[319.39691162 -24.14100647]
[333.09265137 -30.25873756]
[346.78839111 -36.37646866]
[355.96804810 -49.96566391]
[372.30514526 -48.54071045]
[378.99353027 -33.56747437]
[369.15274048 -20.44914246]
[352.90612793 -22.68072701]
[339.21038818 -16.56299591]
[325.51464844 -10.44526386]
[320.04803467 6.99762869]
[303.29705811 15.07757187]
[285.64871216 8.26871014]
[272.18554688 14.88255596]
[258.72238159 21.49640083]
[245.25920105 28.11024666]
[231.79602051 34.72409439]
[218.33285522 41.33794022]
[204.86967468 47.95178604]
[191.40650940 54.56563187]
[177.94332886 61.17947769]
[164.48016357 67.79331970]
[151.01698303 74.40716553]
[137.55381775 81.02101135]
[141.89122009 104.99362183]
[132.20858765 127.41828918]
[143.00714111 137.82940674]
[153.80569458 148.24050903]
[164.60424805 158.65162659]
[175.40280151 169.06274414]
[189.16067505 162.65295410]
[204.30525208 161.64982605]
[218.78834534 166.18902588]
[230.65124512 175.65666199]
[238.28959656 188.77230835]
[240.67034912 203.76217651]
[237.47155762 218.59902954]
[229.12580872 231.27629089]
[216.76181030 240.07946777]
[202.05168152 243.81800842]
[186.98486328 241.98629761]
[173.59899902 234.83206177]
[163.70442200 223.32284546]
[158.63929749 209.01519775]
[159.08865356 193.84408569]
[164.99168396 179.86129761]
[154.19313049 169.45018005]
[143.39459229 159.03906250]
[132.59603882 148.62794495]
[121.79747772 138.21684265]
[107.69171143 143.31852722]
[106.05113983 158.22854614]
[104.41057587 173.13854980]
[102.77000427 188.04856873]
[101.12944031 202.95858765]
[99.48886871 217.86859131]
[97.84829712 232.77861023]
[96.20773315 247.68862915]
[108.26042175 257.31857300]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 170]
[9 169]
[10 168]
[11 167]
[12 166]
[13 165]
[14 164]
[15 163]
[23 78]
[24 77]
[25 76]
[26 75]
[27 74]
[28 73]
[31 69]
[32 68]
[34 66]
[35 65]
[36 64]
[37 63]
[38 62]
[39 61]
[80 96]
[81 95]
[82 94]
[83 93]
[84 92]
[97 136]
[98 135]
[99 134]
[100 133]
[101 132]
[102 131]
[103 130]
[104 129]
[105 128]
[106 127]
[107 126]
[108 125]
[113 122]
[114 121]
[115 120]
[138 162]
[139 161]
[140 160]
[141 159]
[142 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
