%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 20:22:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAUUAUACUUAGAACUUACCAAACUAAGAAUUAUUUCAGAUUUAGUCUGUUAUUUAUUAAACAACUAAAUGCUACUUAACUGAUGUACCUAAAUAAUAAUCUAUUCAAUUUAUAUGCAUUUUCAUUUUAUGUCCAUGGUAUGUACUUUAUUAUUAAAAUAUAAAUAAUGCUUUCA\
) } def
/len { sequence length } bind def

/coor [
[89.86740112 382.96545410]
[78.14421082 373.60772705]
[69.61284637 361.27014160]
[64.99627686 346.99822998]
[64.68572998 332.00146484]
[68.70751953 317.55065918]
[76.72083282 304.87048340]
[88.04658508 295.03549194]
[101.72500610 288.87911987]
[116.59691620 286.92306519]
[131.40203857 289.33312988]
[144.88572693 295.90505981]
[155.90779114 306.08496094]
[151.47441101 291.75506592]
[140.32113647 281.88320923]
[143.63401794 266.41275024]
[139.20063782 252.08288574]
[128.04734802 242.21102905]
[131.36022949 226.74055481]
[126.92686462 212.41069031]
[122.49349213 198.08081055]
[118.06011963 183.75094604]
[113.62674713 169.42106628]
[98.28558350 171.17254639]
[82.83214569 169.55308533]
[68.00290680 164.59759521]
[54.51372147 156.50097656]
[43.02524185 145.61070251]
[34.11063766 132.41217041]
[28.22704315 117.50705719]
[14.15188408 122.69260406]
[0.07672434 127.87815094]
[-9.99352360 140.82118225]
[-26.19831657 138.30389404]
[-31.86755180 122.91585541]
[-21.16920662 110.48696136]
[-5.10882139 113.80299377]
[8.96633816 108.61744690]
[23.04149818 103.43190002]
[23.83535004 88.45291901]
[10.38714027 81.80870056]
[-3.11917710 75.28340912]
[-16.68255234 68.87756348]
[-30.24592590 62.47171783]
[-43.80929947 56.06587219]
[-57.37267685 49.66002655]
[-70.93605042 43.25417709]
[-84.49942780 36.84833145]
[-93.62605286 36.00718689]
[-98.24411774 30.20787811]
[-111.69232941 23.56365585]
[-125.14053345 16.91943359]
[-138.58874512 10.27521229]
[-152.26333618 17.60903740]
[-167.63243103 15.47115135]
[-178.78630066 4.68361187]
[-181.43603516 -10.60555077]
[-174.56277466 -24.51734161]
[-160.80943298 -31.70239449]
[-145.46443176 -29.39790726]
[-134.42825317 -18.49000549]
[-131.94451904 -3.17299676]
[-118.49631500 3.47122502]
[-105.04810333 10.11544704]
[-91.59989166 16.75966835]
[-78.09357452 23.28495789]
[-64.53020477 29.69080353]
[-50.96682739 36.09664917]
[-37.40345383 42.50249863]
[-23.84008026 48.90834427]
[-10.27670479 55.31418991]
[3.28666949 61.72003555]
[10.70005798 61.73346710]
[17.03136253 68.36048889]
[30.47957039 75.00471497]
[36.35259628 63.18188095]
[44.20397186 52.64683151]
[53.76382446 43.72450638]
[64.71009064 36.68510818]
[76.67932892 31.73596001]
[89.27877808 29.01542282]
[102.09923553 28.58913231]
[114.72834778 30.44857407]
[126.76387787 34.51207352]
[133.87857056 21.30672646]
[140.99325562 8.10138035]
[148.10794067 -5.10396719]
[155.22264099 -18.30931473]
[162.33732605 -31.51466179]
[158.02682495 -46.48320389]
[165.43023682 -59.77395248]
[179.72702026 -63.79111481]
[186.84170532 -76.99645996]
[193.95640564 -90.20181274]
[201.07109070 -103.40715790]
[208.18577576 -116.61250305]
[198.84260559 -128.63850403]
[195.20489502 -143.42657471]
[197.90293884 -158.41459656]
[206.46925354 -171.00578308]
[219.41969299 -179.01864624]
[234.51051331 -181.06491089]
[249.12712097 -176.79005432]
[260.73712158 -166.93470764]
[267.32901001 -153.20639038]
[267.76068115 -137.98358154]
[261.95736694 -123.90376282]
[250.92453003 -113.40632629]
[236.57365417 -108.31002045]
[221.39112854 -109.49781799]
[214.27644348 -96.29246521]
[207.16174316 -83.08712006]
[200.04705811 -69.88177490]
[192.93237305 -56.67642593]
[197.44154358 -42.52711487]
[190.41435242 -29.03366470]
[175.54267883 -24.39997101]
[168.42797852 -11.19462395]
[161.31329346 2.01072288]
[154.19860840 15.21607018]
[147.08390808 28.42141724]
[139.96922302 41.62676239]
[147.37982178 47.46309280]
[153.94807434 54.23343277]
[159.55723572 61.81742096]
[164.10757446 70.08023071]
[167.51818848 78.87496185]
[169.72845459 88.04525757]
[170.69906616 97.42808533]
[170.41278076 106.85663605]
[168.87467957 116.16329193]
[166.11210632 125.18259430]
[162.17417908 133.75419617]
[157.13090515 141.72569275]
[151.07194519 148.95539856]
[144.10501099 155.31475830]
[136.35395813 160.69071960]
[127.95661926 164.98770142]
[132.38998413 179.31756592]
[136.82336426 193.64744568]
[141.25672913 207.97731018]
[145.69010925 222.30718994]
[157.16049194 233.20401001]
[153.53050232 247.64950562]
[157.96388245 261.97937012]
[169.43426514 272.87619019]
[165.80429077 287.32171631]
[170.23765564 301.65158081]
[177.60464478 308.59176636]
[178.10206604 317.56948853]
[186.78984070 329.79742432]
[195.47761536 342.02536011]
[204.16539001 354.25329590]
[212.85317993 366.48123169]
[221.54095459 378.70916748]
[230.22872925 390.93710327]
[245.74577332 390.96676636]
[258.26202393 400.13864136]
[262.96475220 414.92593384]
[258.04562378 429.64263916]
[245.39616394 438.62991333]
[229.88034058 438.43191528]
[217.46432495 429.12481689]
[212.92230225 414.28738403]
[218.00079346 399.62490845]
[209.31301880 387.39694214]
[200.62522888 375.16900635]
[191.93745422 362.94107056]
[183.24967957 350.71313477]
[174.56190491 338.48519897]
[165.87411499 326.25726318]
[167.26275635 341.19284058]
[164.29100037 355.89550781]
[157.21067810 369.11932373]
[146.62181091 379.74365234]
[133.42175293 386.86810303]
[118.72908783 389.88900757]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 148]
[14 147]
[16 145]
[17 144]
[19 142]
[20 141]
[21 140]
[22 139]
[23 138]
[30 39]
[31 38]
[32 37]
[40 75]
[41 74]
[42 72]
[43 71]
[44 70]
[45 69]
[46 68]
[47 67]
[48 66]
[50 65]
[51 64]
[52 63]
[53 62]
[84 122]
[85 121]
[86 120]
[87 119]
[88 118]
[89 117]
[92 114]
[93 113]
[94 112]
[95 111]
[96 110]
[150 171]
[151 170]
[152 169]
[153 168]
[154 167]
[155 166]
[156 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
