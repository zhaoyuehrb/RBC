%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 10:03:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAGUCCCGCCUGCAUGUGCCUGCAGCCACCGUGGACUGUCUGUUUUUGUAACACUUAAGUUAUUUUAUCAGCACUUUAUGCACGUAUUAUUGACAUUAAUACCUAAUCGGCGAGUGCCCAUCUGCCCCACCUGCUCCAGUGCGUGCUGUCUGUGGAGUGUGUCUCAUGCUUUCAGAUGUGCAUAUGAGCAGAAUUAAUUAAACAUUUGCCUAUGACUCCAACAG\
) } def
/len { sequence length } bind def

/coor [
[35.06761932 236.04203796]
[26.97747231 242.61491394]
[16.82422447 243.63400269]
[8.41530800 256.05535889]
[0.00639136 268.47671509]
[-8.40252495 280.89807129]
[-16.81144142 293.31942749]
[-25.22035789 305.74078369]
[-33.54312134 318.22003174]
[-41.77933121 330.75656128]
[-41.72999954 352.19308472]
[-60.57054520 360.63378906]
[-68.27930450 373.50137329]
[-75.98806763 386.36898804]
[-83.69682312 399.23657227]
[-91.40557861 412.10418701]
[-87.31951141 427.37112427]
[-95.29781342 441.01379395]
[-110.60710907 444.93820190]
[-124.16465759 436.81610107]
[-127.92700958 421.46618652]
[-119.66202545 407.99526978]
[-104.27317810 404.39541626]
[-96.56442261 391.52783203]
[-88.85565948 378.66021729]
[-81.14690399 365.79263306]
[-73.43814087 352.92501831]
[-76.96454620 344.79827881]
[-76.35314178 335.82275391]
[-71.61476898 328.01419067]
[-63.70109177 323.18417358]
[-54.31587219 322.52035522]
[-46.07966232 309.98382568]
[-45.03517151 302.67605591]
[-37.64171600 297.33187866]
[-29.23279953 284.91052246]
[-20.82388306 272.48916626]
[-12.41496658 260.06781006]
[-4.00604963 247.64643860]
[4.40286636 235.22508240]
[4.38203859 215.88233948]
[22.66821098 207.38063049]
[30.73013687 194.73130798]
[38.79206467 182.08198547]
[46.85398865 169.43266296]
[54.91591263 156.78334045]
[43.21150208 147.34892273]
[33.50609970 135.48880005]
[26.30396843 121.63188934]
[22.01626778 106.31198883]
[7.01950073 106.00062561]
[-7.97726727 105.68925476]
[-22.97403526 105.37788391]
[-37.97080231 105.06651306]
[-49.20074844 116.18694305]
[-65.00421906 116.02594757]
[-76.00529480 104.67906189]
[-75.67723083 88.87817383]
[-64.21466064 77.99768066]
[-48.41812897 78.49279022]
[-37.65943527 90.06974792]
[-22.66266632 90.38111877]
[-7.66589832 90.69248962]
[7.33086967 91.00385284]
[22.32763672 91.31522369]
[24.57605553 84.16017914]
[10.26597309 79.66334534]
[-4.04410982 75.16651154]
[-14.18881607 64.11730194]
[0.45272601 60.85642624]
[14.76280880 65.35326385]
[29.07289124 69.85009766]
[31.32131004 62.69505692]
[18.84206200 54.37229538]
[6.36281347 46.04953384]
[-9.58768463 47.77033615]
[-20.77521324 36.27169800]
[-18.61766052 20.37438393]
[-4.77011299 12.27345943]
[10.14477444 18.18325615]
[14.68557644 33.57028580]
[27.16482353 41.89304733]
[39.64407349 50.21580887]
[45.63981247 46.41977692]
[51.82362366 43.28333282]
[58.12681198 40.80912781]
[50.77712631 27.73311424]
[43.42744064 14.65710163]
[36.07775116 1.58108854]
[28.72806549 -11.49492455]
[21.37837982 -24.57093620]
[5.97826481 -27.28579712]
[-4.03417492 -39.29766846]
[-3.93137074 -54.93491364]
[6.23813581 -66.81410217]
[21.67261505 -69.32624817]
[35.08437729 -61.28518677]
[40.14080048 -46.48766708]
[34.45439148 -31.92062378]
[41.80408096 -18.84461021]
[49.15376663 -5.76859760]
[56.50345230 7.30741501]
[63.85313797 20.38342857]
[71.20282745 33.45944214]
[87.36965942 28.60393715]
[104.22109222 27.61833382]
[120.84373474 30.55605125]
[136.33657837 37.25785828]
[149.85986328 47.36049271]
[160.68057251 60.31636047]
[168.21220398 75.42321014]
[182.77441406 71.82572174]
[197.33663940 68.22823334]
[211.89884949 64.63074493]
[226.46105957 61.03326035]
[241.02326965 57.43577576]
[255.58549500 53.83828735]
[270.14770508 50.24080276]
[269.70501709 36.62961578]
[271.94284058 23.20180321]
[276.77194214 10.47987270]
[284.00228882 -1.04155457]
[293.35058594 -10.91497803]
[304.45129395 -18.75739479]
[316.87091064 -24.26516151]
[330.12506104 -27.22574234]
[343.69711304 -27.52592087]
[357.05856323 -25.15612030]
[369.68957520 -20.21069145]
[381.09899902 -12.88416862]
[390.84378052 -3.46360970]
[398.54589844 7.68264723]
[403.90719604 20.11938667]
[418.60620117 17.12943268]
[433.30517578 14.13947868]
[448.00415039 11.14952469]
[462.70315552 8.15957069]
[477.40213013 5.16961670]
[486.14022827 -7.72547722]
[501.08969116 -10.54832363]
[513.32934570 -2.13841677]
[528.02832031 -5.12837076]
[542.72729492 -8.11832428]
[557.42626953 -11.10827827]
[572.12524414 -14.09823227]
[576.01739502 -17.54220200]
[580.40209961 -19.00991058]
[584.44702148 -18.64348602]
[587.49584961 -16.89385796]
[602.30627441 -19.27112579]
[617.11669922 -21.64839363]
[631.92712402 -24.02566147]
[646.73754883 -26.40292931]
[661.54797363 -28.78019714]
[669.51434326 -33.22544861]
[676.57965088 -31.08640289]
[691.42156982 -33.25848007]
[706.26348877 -35.43055725]
[721.10534668 -37.60263062]
[735.94726562 -39.77470779]
[750.78918457 -41.94678497]
[765.63110352 -44.11885834]
[780.47296143 -46.29093552]
[795.26965332 -54.56713486]
[807.31854248 -42.63982391]
[799.19281006 -27.76000786]
[782.64508057 -31.44903183]
[767.80316162 -29.27695656]
[752.96124268 -27.10488129]
[738.11932373 -24.93280411]
[723.27746582 -22.76072884]
[708.43554688 -20.58865356]
[693.59362793 -18.41657639]
[678.75170898 -16.24450111]
[663.92523193 -13.96977425]
[649.11480713 -11.59250641]
[634.30438232 -9.21523952]
[619.49395752 -6.83797169]
[604.68353271 -4.46070385]
[589.87310791 -2.08343625]
[575.11523438 0.60075301]
[560.41625977 3.59070683]
[545.71728516 6.58066082]
[531.01824951 9.57061481]
[516.31927490 12.56056881]
[508.33767700 25.08372688]
[493.47341919 28.32535934]
[480.39208984 19.86860275]
[465.69308472 22.85855675]
[450.99411011 25.84851074]
[436.29513550 28.83846474]
[421.59613037 31.82841873]
[406.89715576 34.81837082]
[406.45559692 51.25524521]
[402.11520386 67.12329865]
[394.12133789 81.51082611]
[382.92938232 93.59020233]
[369.17880249 102.66555023]
[353.65664673 108.21277618]
[337.25247192 109.90987396]
[320.90725708 107.65557098]
[305.55969238 101.57540894]
[292.09197998 92.01472473]
[281.27932739 79.51905823]
[273.74517822 64.80301666]
[259.18298340 68.40050507]
[244.62075806 71.99798584]
[230.05854797 75.59547424]
[215.49633789 79.19296265]
[200.93411255 82.79045105]
[186.37190247 86.38793945]
[171.80969238 89.98542023]
[172.27993774 105.70381927]
[169.35009766 121.15390778]
[163.15797424 135.60890198]
[153.99485779 148.38882446]
[142.29179382 158.89251709]
[128.59928894 166.62585449]
[113.56145477 171.22506714]
[97.88568115 172.47381592]
[82.30937195 170.31333923]
[67.56523895 164.84527588]
[59.50331116 177.49459839]
[51.44138336 190.14392090]
[43.37945938 202.79324341]
[35.31753540 215.44256592]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 40]
[4 39]
[5 38]
[6 37]
[7 36]
[8 35]
[9 33]
[10 32]
[12 27]
[13 26]
[14 25]
[15 24]
[16 23]
[42 226]
[43 225]
[44 224]
[45 223]
[46 222]
[50 65]
[51 64]
[52 63]
[53 62]
[54 61]
[73 83]
[74 82]
[75 81]
[86 104]
[87 103]
[88 102]
[89 101]
[90 100]
[91 99]
[111 212]
[112 211]
[113 210]
[114 209]
[115 208]
[116 207]
[117 206]
[118 205]
[133 193]
[134 192]
[135 191]
[136 190]
[137 189]
[138 188]
[141 185]
[142 184]
[143 183]
[144 182]
[145 181]
[149 180]
[150 179]
[151 178]
[152 177]
[153 176]
[154 175]
[156 174]
[157 173]
[158 172]
[159 171]
[160 170]
[161 169]
[162 168]
[163 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
