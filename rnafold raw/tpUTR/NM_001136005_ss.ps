%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 11:35:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCUUUUAAUUCAGAAAUGGGGCCAGUUUAGAAAGAAUUAUUUGCUGUUUGCAUGGUGGUUUUUUAUCAUGGACUUGGCCCAAAAGAAAAACUGCUAAAAGACAAAAAAGACCUCACCCUUACUUCAUCUAUUUUUUUAAUAAAUAGAGACUCACUAAAAACAAGACUAGUUAGUGCAGCAUAUCUGAGACA\
) } def
/len { sequence length } bind def

/coor [
[39.46331787 357.70538330]
[26.82715797 366.07815552]
[12.08867073 369.62115479]
[-2.97240090 367.90652466]
[-16.53735924 361.14132690]
[-26.96817017 350.14251709]
[-33.00526047 336.23822021]
[-33.91962433 321.10748291]
[-29.60084915 306.57736206]
[-20.57044411 294.40249634]
[-7.91887617 286.05303955]
[6.82611561 282.53720093]
[8.52282238 267.63348389]
[10.21953011 252.72973633]
[11.91623783 237.82600403]
[13.61294460 222.92227173]
[7.36493301 209.40148926]
[16.61356544 196.56507874]
[18.31027222 181.66136169]
[20.00698090 166.75762939]
[10.57346821 155.09533691]
[-4.35578299 153.64019775]
[-19.28503418 152.18504333]
[-34.21428680 150.72990417]
[-49.14353561 149.27474976]
[-64.07278442 147.81959534]
[-79.01332855 146.48538208]
[-93.96418762 145.27217102]
[-108.91504669 144.05897522]
[-123.86590576 142.84576416]
[-138.81675720 141.63255310]
[-153.77694702 140.54043579]
[-168.74549866 139.56948853]
[-183.72779846 138.84106445]
[-198.71992493 138.35533142]
[-213.71206665 137.86959839]
[-228.70419312 137.38388062]
[-243.69633484 136.89814758]
[-258.68847656 136.41241455]
[-273.68060303 135.92669678]
[-288.67272949 135.44096375]
[-303.66485596 134.95523071]
[-318.65698242 134.46951294]
[-333.65255737 134.10517883]
[-348.65060425 133.86228943]
[-363.64865112 133.61938477]
[-376.12875366 143.70039368]
[-391.75979614 140.08792114]
[-398.55096436 125.55315399]
[-391.29269409 111.24592590]
[-375.55285645 108.14151764]
[-363.40573120 118.62135315]
[-348.40771484 118.86425018]
[-333.40966797 119.10714722]
[-326.66116333 116.06766510]
[-318.17126465 119.47737122]
[-303.17913818 119.96310425]
[-288.18701172 120.44882965]
[-273.19485474 120.93455505]
[-258.20272827 121.42028809]
[-243.21060181 121.90601349]
[-228.21847534 122.39173889]
[-213.22633362 122.87747192]
[-198.23420715 123.36319733]
[-183.24206543 123.84893036]
[-179.19764709 121.28462982]
[-173.49681091 121.24354553]
[-167.77455139 124.60095215]
[-152.80599976 125.57189941]
[-145.91786194 122.86372375]
[-137.60356140 126.68169403]
[-122.65269470 127.89490509]
[-107.70184326 129.10810852]
[-92.75098419 130.32131958]
[-77.80012512 131.53453064]
[-70.86903381 128.93824768]
[-62.61764145 132.89035034]
[-47.68838882 134.34550476]
[-32.75913620 135.80064392]
[-17.82988548 137.25579834]
[-2.90063500 138.71093750]
[12.02861595 140.16609192]
[1.56646395 129.41697693]
[-2.66891861 115.02734375]
[0.30180311 100.32446289]
[9.79171848 88.70803070]
[23.60650253 82.86408234]
[38.55180740 84.14389801]
[51.17187119 92.25154114]
[58.54859543 105.31232452]
[58.97628784 120.30622101]
[52.35604858 133.76625061]
[40.22116852 142.57907104]
[54.58842850 138.26840210]
[68.95568848 133.95774841]
[83.32294464 129.64707947]
[68.64785004 126.54200745]
[53.71554947 125.11847687]
[40.07651520 118.87533569]
[29.24020004 108.50353241]
[22.40587425 95.15093231]
[20.32990456 80.29528046]
[23.24203873 65.58068085]
[30.81998634 52.63561630]
[42.22509003 42.89273834]
[56.19512177 37.43030548]
[71.18400574 36.85285568]
[85.53282928 41.22426224]
[84.04772186 56.15056229]
[92.50708008 43.76350021]
[100.96643066 31.37644005]
[95.61671448 16.81072235]
[99.88259125 1.89154363]
[112.12375641 -7.64436769]
[127.63322449 -8.13025951]
[140.44728088 0.62070459]
[145.63868713 15.24359894]
[141.21121216 30.11562347]
[128.86732483 39.51818085]
[113.35349274 39.83579636]
[104.89414215 52.22285843]
[96.43478394 64.60991669]
[100.61417389 70.83749390]
[113.06932831 62.47871017]
[125.52460480 54.12012100]
[133.88299561 66.57553101]
[121.42810822 74.93386078]
[108.97296143 83.29264069]
[113.15235138 89.52021790]
[127.82118988 86.38570404]
[142.49002075 83.25119019]
[157.15885925 80.11667633]
[171.82769775 76.98216248]
[186.49653625 73.84764862]
[201.16537476 70.71313477]
[208.33154297 56.81420898]
[222.77508545 50.82104492]
[237.67620850 55.56343079]
[245.99908447 68.80216217]
[243.81387329 84.28630829]
[232.15237427 94.70473480]
[216.52079773 95.13817596]
[204.29989624 85.38197327]
[189.63105774 88.51648712]
[174.96221924 91.65100098]
[160.29338074 94.78551483]
[145.62454224 97.92002869]
[130.95570374 101.05454254]
[116.28686523 104.18905640]
[113.50943756 118.93035889]
[110.73224640 133.67034912]
[123.25466919 141.92800903]
[135.77708435 150.18566895]
[151.55732727 151.32350159]
[157.92294312 164.78930664]
[170.44535828 173.04696655]
[182.96778870 181.30464172]
[195.49020386 189.56230164]
[209.18756104 182.61405945]
[224.52305603 183.46139526]
[237.37153625 191.87640381]
[244.27680969 205.59547424]
[243.38139343 220.92823792]
[234.92616272 233.75027466]
[221.18551636 240.61251831]
[205.85563660 239.66903687]
[193.06016541 231.17366028]
[186.24102783 217.41157532]
[187.23254395 202.08471680]
[174.71012878 193.82705688]
[162.18769836 185.56939697]
[149.66528320 177.31173706]
[134.78073120 176.76454163]
[127.51942444 162.70808411]
[114.99700928 154.45042419]
[102.47458649 146.19276428]
[87.63361359 144.01434326]
[73.26635742 148.32499695]
[58.89909363 152.63566589]
[44.53183365 156.94633484]
[34.91070938 168.45433044]
[33.21400452 183.35806274]
[31.51729584 198.26179504]
[37.64394760 212.84858704]
[28.51667595 224.61898804]
[26.81996727 239.52272034]
[25.12326050 254.42645264]
[23.42655373 269.33016968]
[21.72984505 284.23391724]
[35.30724716 290.97409058]
[45.75831223 301.95364380]
[51.82101440 315.84680176]
[52.76326370 330.97583008]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 189]
[13 188]
[14 187]
[15 186]
[16 185]
[18 183]
[19 182]
[20 181]
[21 82]
[22 81]
[23 80]
[24 79]
[25 78]
[26 77]
[27 75]
[28 74]
[29 73]
[30 72]
[31 71]
[32 69]
[33 68]
[34 65]
[35 64]
[36 63]
[37 62]
[38 61]
[39 60]
[40 59]
[41 58]
[42 57]
[43 56]
[44 54]
[45 53]
[46 52]
[93 180]
[94 179]
[95 178]
[96 177]
[109 122]
[110 121]
[111 120]
[129 149]
[130 148]
[131 147]
[132 146]
[133 145]
[134 144]
[135 143]
[151 176]
[152 175]
[153 174]
[155 172]
[156 171]
[157 170]
[158 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
