%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 17:07:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGACUCGCCCAUUUUGGAAUGUGACCGUCUGUCCUUCAGGAGAGGACACCAGGGUGGGGGUGAAGGAGACACUACUGCCCCCACCCCUGACAGCCCCCACCCCAUGGCUUCCAUCUUUUGCAUCACCACCACUCCUGAACCCCCAUUUCUGAUUUGUCAGAAUUUUUUUUUAACAAAACUAAAAAUGAAACACAUGUGUCUGUGGUAUCUAUAA\
) } def
/len { sequence length } bind def

/coor [
[90.41798401 150.82066345]
[83.02519226 148.85090637]
[76.09896088 162.15606689]
[69.17272949 175.46122742]
[62.24650574 188.76638794]
[55.51451492 202.17088318]
[48.97819519 215.67185974]
[42.44187164 229.17285156]
[35.90554810 242.67382812]
[29.66530609 256.31417847]
[23.72410965 270.08743286]
[17.78291321 283.86065674]
[17.06119919 300.79925537]
[0.58479577 304.79479980]
[-7.81573534 290.06838989]
[4.00967073 277.91946411]
[9.95086765 264.14624023]
[15.89206409 250.37298584]
[14.93954659 246.98181152]
[15.57992458 242.96115112]
[18.09103775 239.06364441]
[22.40456772 236.13751221]
[28.94089127 222.63652039]
[35.47721100 209.13554382]
[42.01353455 195.63456726]
[41.32094574 190.91262817]
[43.58467102 185.70504761]
[48.94134140 181.84016418]
[55.86756897 168.53500366]
[62.79380035 155.22984314]
[69.72003174 141.92468262]
[61.29317856 134.29777527]
[54.73587418 125.01427460]
[50.36483383 114.52259064]
[48.39118195 103.32946014]
[48.91024780 91.97550964]
[51.89695358 81.00914764]
[57.20705032 70.96005249]
[46.14788818 60.82619476]
[35.08872986 50.69234085]
[24.02956963 40.55849075]
[12.97040939 30.42463684]
[1.91124976 20.29078293]
[-9.14791012 10.15692997]
[-20.28047180 0.10376862]
[-31.48584938 -9.86816978]
[-42.69122314 -19.84010696]
[-58.25060272 -19.10285759]
[-69.47238922 -29.37544632]
[-70.07936096 -44.21347809]
[-81.28473663 -54.18541718]
[-92.49011230 -64.15735626]
[-103.83933258 -73.96527100]
[-115.33000183 -83.60707855]
[-126.82066345 -93.24889374]
[-138.31134033 -102.89070892]
[-149.80200195 -112.53252411]
[-161.29266357 -122.17433929]
[-172.78334045 -131.81614685]
[-184.27400208 -141.45796204]
[-195.76466370 -151.09977722]
[-207.25534058 -160.74159241]
[-226.05474854 -158.37367249]
[-240.36701965 -170.29745483]
[-241.39666748 -188.57736206]
[-253.16290283 -197.88088989]
[-264.92913818 -207.18441772]
[-277.37402344 -198.60446167]
[-291.79553223 -194.07546997]
[-306.91128540 -194.00018311]
[-321.37719727 -198.38525391]
[-333.90695190 -206.84080505]
[-343.38644409 -218.61495972]
[-348.97277832 -232.66075134]
[-350.16915894 -247.72926331]
[-346.86926270 -262.48062134]
[-339.36648560 -275.60308838]
[-328.32797241 -285.92990112]
[-314.73526001 -292.54275513]
[-299.79702759 -294.85363770]
[-284.84152222 -292.65710449]
[-271.19863892 -286.14843750]
[-260.08145142 -275.90637207]
[-252.47848511 -262.84167480]
[-249.06582642 -248.11601257]
[-250.14691162 -233.03878784]
[-255.62559509 -218.95065308]
[-243.85935974 -209.64712524]
[-232.09312439 -200.34359741]
[-221.32202148 -204.09184265]
[-209.96115112 -202.15676880]
[-200.85070801 -194.90486145]
[-196.32467651 -184.04618835]
[-197.61352539 -172.23225403]
[-186.12284851 -162.59045410]
[-174.63218689 -152.94863892]
[-163.14152527 -143.30682373]
[-151.65084839 -133.66500854]
[-140.16018677 -124.02319336]
[-128.66952515 -114.38137817]
[-117.17885590 -104.73956299]
[-105.68818665 -95.09774780]
[-94.19751740 -85.45593262]
[-89.44967651 -84.97180176]
[-84.95451355 -81.50239563]
[-82.51817322 -75.36273193]
[-71.31279755 -65.39079285]
[-60.10742188 -55.41885376]
[-45.29925537 -56.53858185]
[-33.79335785 -46.58524323]
[-32.71928787 -31.04548264]
[-21.51391029 -21.07354546]
[-10.30853462 -11.10160732]
[-3.22478271 -9.00391102]
[0.98594278 -0.90223008]
[12.04510307 9.23162270]
[23.10426331 19.36547661]
[34.16342163 29.49932861]
[45.22258377 39.63318253]
[56.28174210 49.76703644]
[67.34090424 59.90089035]
[87.92987823 49.71215439]
[110.90041351 49.44570923]
[131.72018433 59.15412903]
[146.28125000 76.92184448]
[151.71057129 99.24311066]
[166.58222961 101.20100403]
[181.45390320 103.15888977]
[196.32557678 105.11678314]
[211.19725037 107.07467651]
[226.10810852 108.70767975]
[241.05102539 110.01502228]
[255.99394226 111.32235718]
[258.78140259 101.89141846]
[263.21136475 93.06307220]
[269.15792847 85.12216949]
[276.44607544 78.32792664]
[284.85671997 72.90547180]
[294.13330078 69.03839874]
[303.98950195 66.86255646]
[314.11828613 66.46138000]
[324.20132446 67.86276245]
[333.91897583 71.03768921]
[342.96051025 75.90069580]
[351.03402710 82.31211090]
[357.87576294 90.08199310]
[363.25881958 98.97578430]
[367.00070190 108.72133636]
[381.73336792 105.90204620]
[396.46603394 103.08275604]
[411.19869995 100.26346588]
[425.93139648 97.44417572]
[440.66406250 94.62488556]
[452.71133423 83.49856567]
[468.28817749 88.62637329]
[471.37042236 104.73326111]
[458.78735352 115.24983215]
[443.48333740 109.35755157]
[428.75067139 112.17684174]
[414.01800537 114.99613953]
[399.28533936 117.81542969]
[384.55267334 120.63471985]
[369.81997681 123.45401001]
[367.97030640 138.33952332]
[381.56491089 144.67880249]
[395.15954590 151.01808167]
[410.93664551 149.83790588]
[419.20156860 162.22906494]
[432.79617310 168.56832886]
[446.39080811 174.90760803]
[459.98541260 181.24687195]
[473.58001709 187.58615112]
[487.17465210 193.92543030]
[501.26968384 187.15316772]
[516.40734863 191.07550049]
[525.44012451 203.84042358]
[524.10296631 219.42073059]
[513.02728271 230.45986938]
[497.44262695 231.74551392]
[484.70764160 222.67060852]
[480.83535767 207.52005005]
[467.24075317 201.18077087]
[453.64614868 194.84149170]
[440.05151367 188.50222778]
[426.45690918 182.16294861]
[412.86227417 175.82366943]
[398.05752563 177.45727539]
[388.82025146 164.61268616]
[375.22564697 158.27342224]
[361.63101196 151.93414307]
[347.53286743 168.31529236]
[328.63101196 178.39248657]
[307.55404663 180.92184448]
[287.17687988 175.69839478]
[270.22836304 163.56518555]
[258.92614746 146.28074646]
[254.68659973 126.26527405]
[239.74368286 124.95793915]
[224.80076599 123.65060425]
[221.88133240 125.62145233]
[217.86332703 126.27825165]
[213.37377930 125.12053680]
[209.23936462 121.94635010]
[194.36769104 119.98845673]
[179.49601746 118.03056335]
[164.62434387 116.07266998]
[149.75267029 114.11478424]
[147.12586975 121.30040741]
[143.46771240 128.01986694]
[138.85824585 134.12611389]
[133.39836121 139.48548889]
[127.20755005 143.98072815]
[120.42129517 147.51342773]
[113.18811035 150.00628662]
[105.66629791 151.40475464]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 31]
[3 30]
[4 29]
[5 28]
[6 25]
[7 24]
[8 23]
[9 22]
[10 18]
[11 17]
[12 16]
[38 121]
[39 120]
[40 119]
[41 118]
[42 117]
[43 116]
[44 115]
[45 113]
[46 112]
[47 111]
[50 108]
[51 107]
[52 106]
[53 103]
[54 102]
[55 101]
[56 100]
[57 99]
[58 98]
[59 97]
[60 96]
[61 95]
[62 94]
[65 89]
[66 88]
[67 87]
[126 207]
[127 206]
[128 205]
[129 204]
[130 203]
[131 199]
[132 198]
[133 197]
[148 163]
[149 162]
[150 161]
[151 160]
[152 159]
[153 158]
[164 190]
[165 189]
[166 188]
[168 186]
[169 185]
[170 184]
[171 183]
[172 182]
[173 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
