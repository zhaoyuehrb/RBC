%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 19:41:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUUGCAGACACAUAUAUUUUUGAGGCUGGGUGACGAGAAAAUCUAGAGACAUGAGGGACAUAAAUGGGCCUGGCAGCCUCGGCUCUUUGCGGCUGCUGGCAGGACUGAGCUGUCCGGGUUCUCCCCACACUUCCAGCACAGCUGUGCUCUGUGUCCUGCCUCGGCGCUCUCGCAAAUGAAGCUGCAGGCCAAGAA\
) } def
/len { sequence length } bind def

/coor [
[106.56845093 494.32098389]
[105.37970734 479.36816406]
[96.65810394 467.29412842]
[103.27740479 452.92416382]
[102.08865356 437.97134399]
[100.89990997 423.01852417]
[99.71115875 408.06570435]
[98.52240753 393.11288452]
[97.33365631 378.16006470]
[84.55261993 370.55853271]
[78.62837219 356.72497559]
[82.02550507 341.88204956]
[93.64553833 331.76864624]
[92.45679474 316.81582642]
[91.26804352 301.86300659]
[77.18397522 296.70169067]
[67.73693085 285.05035400]
[65.59820557 270.20361328]
[71.37255859 256.35958862]
[83.42719269 247.43292236]
[98.35348511 245.94772339]
[111.93079376 252.32398987]
[120.31945038 264.75732422]
[117.94943237 249.94575500]
[115.57940674 235.13417053]
[113.20938873 220.32258606]
[110.83936310 205.51100159]
[108.46934509 190.69941711]
[98.81830597 179.35452271]
[104.27796936 164.50518799]
[101.90795135 149.69360352]
[89.41940308 141.38481140]
[74.84223175 144.92118835]
[66.59141541 158.13337708]
[51.75771332 161.51211548]
[39.21276093 153.56480408]
[27.62573242 164.33752441]
[13.43308449 159.81889343]
[-1.14408910 163.35527039]
[-15.72126293 166.89166260]
[-29.68843651 176.50177002]
[-42.78948593 165.74078369]
[-36.07577896 150.17279053]
[-19.25764656 152.31448364]
[-4.68047333 148.77809143]
[9.89669991 145.24171448]
[20.44107246 134.72195435]
[35.67637634 138.98762512]
[43.18510818 126.17535400]
[57.91806030 122.38129425]
[71.30584717 130.34402466]
[85.88301849 126.80763245]
[77.12375641 117.86127472]
[73.04458618 106.58863068]
[73.96959686 95.17023468]
[79.29615784 85.63298798]
[87.67876434 79.49032593]
[84.37410736 64.85887909]
[81.06945038 50.22743225]
[77.76479340 35.59598541]
[69.76206970 48.28284836]
[55.51807404 52.98481369]
[41.53515625 47.55544662]
[34.19649887 34.47323990]
[36.85218048 19.71020126]
[48.28989410 10.00562763]
[63.28833771 9.78964043]
[75.00121307 19.16158485]
[73.33863831 4.25400829]
[71.67606354 -10.65356827]
[70.01349640 -25.56114578]
[68.35092163 -40.46872330]
[66.68834686 -55.37630081]
[65.02577209 -70.28387451]
[63.36320114 -85.19145203]
[61.58241653 -100.08537292]
[59.68352890 -114.96469116]
[57.78464127 -129.84400940]
[55.88575745 -144.72334290]
[51.69113541 -152.85000610]
[54.07671356 -159.85357666]
[52.41414261 -174.76115417]
[50.75156784 -189.66873169]
[49.08899689 -204.57629395]
[45.02384186 -212.76850891]
[47.52024078 -219.73333740]
[46.09439850 -234.66540527]
[44.66855621 -249.59748840]
[43.24271774 -264.52957153]
[39.30805206 -272.78524780]
[41.91463852 -279.70956421]
[40.72588730 -294.66241455]
[27.41920662 -302.64437866]
[21.37655258 -316.93652344]
[24.92145157 -332.04327393]
[36.69081497 -342.15573120]
[52.15908813 -343.38543701]
[65.37839508 -335.25958252]
[71.26565552 -320.90270996]
[67.55708313 -305.83532715]
[55.67871094 -295.85113525]
[56.86745834 -280.89831543]
[58.17479706 -265.95541382]
[59.60063553 -251.02333069]
[61.02647781 -236.09124756]
[62.45231628 -221.15916443]
[63.99657440 -206.23887634]
[65.65914917 -191.33129883]
[67.32171631 -176.42372131]
[68.98429108 -161.51614380]
[70.76507568 -146.62222290]
[72.66396332 -131.74290466]
[74.56285095 -116.86357880]
[76.46173859 -101.98426056]
[80.43122101 -95.74053955]
[78.27078247 -86.85402679]
[79.93334961 -71.94644928]
[81.59592438 -57.03887177]
[83.25849915 -42.13129425]
[84.92107391 -27.22371864]
[86.58364105 -12.31614113]
[88.24621582 2.59143543]
[89.90879059 17.49901199]
[92.39624023 32.29132843]
[95.70089722 46.92277527]
[99.00555420 61.55422211]
[102.31021118 76.18566895]
[125.27941895 90.20198059]
[122.48441315 120.30737305]
[137.21334839 117.46860504]
[151.94227600 114.62983704]
[166.67120361 111.79106903]
[171.29711914 100.82564545]
[180.55032349 93.53337860]
[192.05661011 91.63786316]
[202.93389893 95.49649811]
[210.51419067 104.03990936]
[225.32577515 101.66988373]
[240.13735962 99.29986572]
[254.94894409 96.92984772]
[269.76052856 94.55982208]
[282.14056396 83.80496216]
[297.55426025 89.40403748]
[300.14535522 105.59719086]
[287.24832153 115.72630310]
[272.13055420 109.37140656]
[257.31896973 111.74142456]
[242.50738525 114.11145020]
[227.69580078 116.48146820]
[212.88421631 118.85149384]
[203.06982422 134.29530334]
[184.77188110 137.73043823]
[169.50997925 126.51999664]
[154.78103638 129.35876465]
[140.05210876 132.19754028]
[125.32318115 135.03630066]
[116.71953583 147.32359314]
[119.08955383 162.13516235]
[128.91011047 174.53948975]
[123.28092957 188.32940674]
[125.65094757 203.14097595]
[128.02096558 217.95256042]
[130.39099121 232.76414490]
[132.76101685 247.57572937]
[135.13102722 262.38732910]
[142.52774048 275.43679810]
[154.01840210 285.07861328]
[165.50907898 294.72042847]
[181.74424744 297.03369141]
[187.60658264 312.34921265]
[177.06541443 324.91168213]
[160.96459961 321.79791260]
[155.86726379 306.21109009]
[144.37660217 296.56927490]
[132.88592529 286.92745972]
[126.21966553 290.36416626]
[112.88713074 297.23754883]
[106.22086334 300.67425537]
[107.40961456 315.62707520]
[108.59836578 330.57989502]
[121.67037201 338.73028564]
[127.37004089 352.85003662]
[123.70592499 367.44586182]
[112.28648376 376.97131348]
[113.47522736 391.92413330]
[114.66397858 406.87695312]
[115.85272980 421.82977295]
[117.04148102 436.78259277]
[118.23022461 451.73541260]
[127.03685760 464.87899780]
[120.33252716 478.17941284]
[121.52127838 493.13226318]
[133.70820618 503.19476318]
[135.12718201 518.93524170]
[124.93637848 531.01507568]
[109.18179321 532.26757812]
[97.21035767 521.94964600]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 192]
[2 191]
[4 189]
[5 188]
[6 187]
[7 186]
[8 185]
[9 184]
[13 180]
[14 179]
[15 178]
[23 165]
[24 164]
[25 163]
[26 162]
[27 161]
[28 160]
[30 158]
[31 157]
[32 52]
[33 51]
[36 48]
[38 46]
[39 45]
[40 44]
[57 127]
[58 126]
[59 125]
[60 124]
[68 123]
[69 122]
[70 121]
[71 120]
[72 119]
[73 118]
[74 117]
[75 116]
[76 114]
[77 113]
[78 112]
[79 111]
[81 110]
[82 109]
[83 108]
[84 107]
[86 106]
[87 105]
[88 104]
[89 103]
[91 102]
[92 101]
[129 156]
[130 155]
[131 154]
[132 153]
[137 150]
[138 149]
[139 148]
[140 147]
[141 146]
[166 175]
[167 174]
[168 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
