%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 19:44:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUACAAAAGACACUGGACAACCAUAUUGCAAUCAGAUCUACAGCUCCUGGAUAAUUGCUUGAUUCUCGCCAGAGACUGUCAAUGUUUCAUUCAUUGCCAUUACCAAUAAAUCAUUGCUUUUGUUCAGAUGGUAUCACUAGUGUUUCCAUUGUAAUCUUGACACAUGCAAUUGUAAAUAAAAGUCACCACUUUUGCCAAGCUUAA\
) } def
/len { sequence length } bind def

/coor [
[341.41818237 346.36694336]
[342.17498779 338.15222168]
[345.32168579 330.48989868]
[335.12707520 319.48672485]
[324.93249512 308.48355103]
[314.73788452 297.48034668]
[304.54327393 286.47717285]
[285.70318604 282.13552856]
[281.52459717 262.41754150]
[270.99917603 251.73037720]
[260.47378540 241.04321289]
[249.94836426 230.35604858]
[239.42294312 219.66886902]
[228.89752197 208.98170471]
[218.37211609 198.29452515]
[207.84669495 187.60736084]
[197.32127380 176.92019653]
[181.17704773 179.88366699]
[166.29794312 172.56838989]
[158.63368225 157.67886353]
[161.38002014 140.99084473]
[150.69285583 130.46542358]
[140.00567627 119.94001007]
[129.31851196 109.41459656]
[118.63134003 98.88917542]
[115.68844604 108.69627380]
[108.23532867 115.11227417]
[98.90062714 116.44683838]
[90.68602753 112.70904541]
[77.12924957 119.12882996]
[77.52751160 134.35253906]
[71.69331360 148.41958618]
[60.63745117 158.89279175]
[46.27542877 163.95758057]
[31.09554672 162.73646545]
[17.72781563 155.44102478]
[8.48827553 143.33520508]
[4.97773027 128.51643372]
[7.80440426 113.55214691]
[16.47855949 101.03500366]
[29.49734497 93.13366699]
[44.60517883 91.21709442]
[59.18453598 95.61734772]
[70.70945740 105.57205200]
[84.26624298 99.15225983]
[87.05869293 89.40391541]
[95.58016968 82.86573029]
[106.91972351 82.66569519]
[100.29394531 69.20838928]
[93.66816711 55.75108719]
[87.04238129 42.29378510]
[80.41660309 28.83648109]
[73.79082489 15.37917614]
[67.16504669 1.92187226]
[60.53926086 -11.53543186]
[45.84746552 -16.71122742]
[39.31968689 -30.45323372]
[44.34455872 -44.42771912]
[37.71877670 -57.88502502]
[22.18157196 -67.76478577]
[24.01808548 -85.21572113]
[17.18785286 -98.57041931]
[10.35762215 -111.92511749]
[3.52738976 -125.27981567]
[-6.49823093 -136.43717957]
[-19.04913902 -144.65148926]
[-31.60004616 -152.86578369]
[-44.15095520 -161.08007812]
[-60.54579544 -161.45588684]
[-68.17932892 -175.97004700]
[-59.19882965 -189.69166565]
[-42.84266281 -188.50509644]
[-35.93665695 -173.63099670]
[-23.38574791 -165.41668701]
[-10.83483982 -157.20239258]
[1.71606827 -148.98809814]
[7.40795565 -153.87199402]
[24.48361778 -168.52366638]
[18.27131462 -182.17677307]
[5.51338053 -191.53335571]
[7.28488159 -206.32223511]
[1.07257926 -219.97534180]
[-5.13972330 -233.62844849]
[-11.35202599 -247.28155518]
[-17.56432724 -260.93466187]
[-32.67814636 -264.94796753]
[-41.63397598 -277.76696777]
[-40.20314789 -293.33895874]
[-29.06125832 -304.31130981]
[-13.46916389 -305.50320435]
[-0.78897560 -296.35186768]
[2.99210906 -281.17828369]
[-3.91122222 -267.14697266]
[2.30108023 -253.49386597]
[8.51338291 -239.84075928]
[14.72568512 -226.18765259]
[20.93798828 -212.53454590]
[33.25157547 -204.15452576]
[31.92442131 -188.38908386]
[38.13672256 -174.73597717]
[52.99444199 -176.79708862]
[67.34038544 -172.41600037]
[78.51170349 -162.40592957]
[84.43479919 -148.62489319]
[84.01025391 -133.63090515]
[77.31687164 -120.20709229]
[65.59704590 -110.84516144]
[51.02619171 -107.28283691]
[36.30890274 -110.18135071]
[24.17695999 -119.00268555]
[16.88208771 -132.11004639]
[23.71231842 -118.75534821]
[30.54255104 -105.40065002]
[37.37278366 -92.04595184]
[48.78476715 -88.02687836]
[54.58352661 -76.95342255]
[51.17607880 -64.51080322]
[57.80186081 -51.05350113]
[71.94175720 -46.51489639]
[78.85294342 -32.96166229]
[73.99656677 -18.16121292]
[80.62234497 -4.70390844]
[87.24813080 8.75339603]
[93.87390900 22.21069908]
[100.49968719 35.66800308]
[107.12546539 49.12530899]
[113.75125122 62.58261108]
[120.37702942 76.03991699]
[129.15675354 88.20200348]
[139.84391785 98.72742462]
[150.53109741 109.25283813]
[161.21826172 119.77825928]
[171.90544128 130.30366516]
[185.29902649 127.03808594]
[198.45259094 130.78816223]
[207.95877075 140.47125244]
[211.41018677 153.48243713]
[208.00845337 166.39477539]
[218.53385925 177.08193970]
[229.05928040 187.76911926]
[239.58470154 198.45628357]
[250.11010742 209.14346313]
[260.63552856 219.83062744]
[271.16094971 230.51779175]
[281.68637085 241.20497131]
[292.21179199 251.89213562]
[303.08004761 251.34646606]
[312.26425171 256.76269531]
[316.85278320 266.14328003]
[315.54647827 276.28256226]
[325.74105835 287.28576660]
[335.93566895 298.28894043]
[346.13027954 309.29211426]
[356.32489014 320.29531860]
[378.78298950 319.26440430]
[394.46694946 334.98422241]
[393.41125488 356.88870239]
[404.56863403 366.91430664]
[415.72598267 376.93994141]
[426.88336182 386.96554565]
[439.01272583 380.10369873]
[455.47268677 382.11737061]
[469.66467285 395.14868164]
[483.31777954 401.36099243]
[496.97085571 407.57327271]
[511.68124390 401.79571533]
[526.13482666 408.18865967]
[531.75653076 422.95928955]
[525.21112061 437.34448242]
[510.38189697 442.80972290]
[496.06671143 436.11257935]
[490.75857544 421.22637939]
[477.10546875 415.01409912]
[463.45236206 408.80178833]
[458.61199951 414.53073120]
[463.69454956 428.64343262]
[448.93130493 425.98867798]
[444.09094238 431.71762085]
[452.49569702 444.14181519]
[460.90045166 456.56600952]
[469.30517578 468.99017334]
[477.70993042 481.41436768]
[486.11468506 493.83853149]
[494.51940918 506.26272583]
[509.49710083 512.94110107]
[510.93295288 529.27728271]
[497.34991455 538.46600342]
[482.72100830 531.05468750]
[482.09524536 514.66748047]
[473.69049072 502.24328613]
[465.28573608 489.81909180]
[456.88101196 477.39492798]
[448.47625732 464.97073364]
[440.07150269 452.54656982]
[431.66677856 440.12237549]
[412.27816772 419.68786621]
[416.85772705 398.12292480]
[405.70037842 388.09732056]
[394.54299927 378.07168579]
[383.38562012 368.04608154]
[376.07522583 371.32791138]
[368.09011841 372.32443237]
[360.13085938 370.92825317]
[352.90158081 367.24279785]
[347.04760742 361.57482910]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 154]
[4 153]
[5 152]
[6 151]
[7 150]
[9 146]
[10 145]
[11 144]
[12 143]
[13 142]
[14 141]
[15 140]
[16 139]
[17 138]
[21 133]
[22 132]
[23 131]
[24 130]
[25 129]
[29 45]
[30 44]
[48 128]
[49 127]
[50 126]
[51 125]
[52 124]
[53 123]
[54 122]
[55 121]
[58 118]
[59 117]
[61 114]
[62 113]
[63 112]
[64 111]
[65 76]
[66 75]
[67 74]
[68 73]
[78 100]
[79 99]
[81 97]
[82 96]
[83 95]
[84 94]
[85 93]
[157 200]
[158 199]
[159 198]
[160 197]
[163 174]
[164 173]
[165 172]
[178 195]
[179 194]
[180 193]
[181 192]
[182 191]
[183 190]
[184 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
