%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 16:35:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAGAUUUUUAAACUUUUUGGAAAGUUUAAAAUAAUCCAUAAUAAGGAUUCCAUUAAUAAUCCCCAUCAGUUUGUUUUUUCCUCAAUAAACAAAAUAAAUGCUCUUGUUACCCCACA\
) } def
/len { sequence length } bind def

/coor [
[108.22412109 150.07373047]
[99.35685730 150.74053955]
[90.50934601 149.84919739]
[81.95327759 147.42710876]
[73.95137787 143.54864502]
[66.74937439 138.33290100]
[60.56841660 131.94003296]
[47.64510727 139.55502319]
[34.72179413 147.17001343]
[21.79848480 154.78498840]
[8.87517357 162.39997864]
[-4.04813814 170.01496887]
[-16.97144890 177.62995911]
[-29.89476013 185.24494934]
[-42.81807327 192.85992432]
[-55.74138260 200.47491455]
[-68.66469574 208.08990479]
[-76.26253510 222.62278748]
[-92.65640259 223.03887939]
[-100.98168945 208.91012573]
[-92.67405701 194.77098083]
[-76.27967834 195.16659546]
[-63.35636902 187.55160522]
[-50.43305969 179.93661499]
[-37.50974655 172.32162476]
[-24.58643532 164.70664978]
[-11.66312504 157.09165955]
[1.26018631 149.47666931]
[14.18349743 141.86167908]
[27.10680962 134.24668884]
[40.03012085 126.63170624]
[52.95343018 119.01672363]
[49.36775208 96.62497711]
[55.89366531 74.90724182]
[44.09539032 65.64437103]
[32.29711914 56.38150406]
[20.49884415 47.11863327]
[8.70057106 37.85576630]
[-6.56472158 41.24764633]
[-20.41494751 33.98780823]
[-26.31045532 19.50412750]
[-21.46756554 4.63535357]
[-8.17294121 -3.59793234]
[7.29610062 -1.30822468]
[17.63555145 10.42334652]
[17.96343994 26.05749130]
[29.76171303 35.32036209]
[41.55998611 44.58322906]
[53.35826111 53.84609985]
[65.15653229 63.10896683]
[80.94729614 52.96799088]
[99.34392548 49.25963211]
[117.83027649 52.49108887]
[133.87796021 62.22039413]
[145.29212952 77.11685181]
[159.53309631 72.40570068]
[173.77406311 67.69455719]
[188.01501465 62.98340225]
[202.25598145 58.27225113]
[216.49694824 53.56110001]
[219.72718811 40.08681107]
[229.14340210 30.07051086]
[242.18489075 26.07866096]
[255.38230896 29.06042671]
[265.28051758 38.12462616]
[279.64184570 33.79424667]
[294.00317383 29.46386528]
[299.30932617 13.46803951]
[312.94158936 3.84321856]
[329.46014404 4.18968964]
[342.41482544 14.17576790]
[356.65579224 9.46461773]
[370.89675903 4.75346661]
[385.13769531 0.04231603]
[399.37866211 -4.66883469]
[413.61962891 -9.37998486]
[427.86059570 -14.09113598]
[430.89523315 -29.14724922]
[441.06341553 -40.65828705]
[455.62991333 -45.52783966]
[470.67642212 -42.44602203]
[482.15554810 -32.24182892]
[486.97940063 -17.66013145]
[483.85046387 -2.62333941]
[473.61032104 8.82372952]
[459.01358032 13.60186958]
[443.98666382 10.42578506]
[432.57174683 0.14982812]
[418.33078003 4.86097860]
[404.08981323 9.57212925]
[389.84884644 14.28328037]
[375.60791016 18.99443054]
[361.36694336 23.70558167]
[347.12597656 28.41673279]
[344.23623657 41.52335358]
[335.15063477 51.54905319]
[322.18426514 55.77859116]
[308.72171021 52.99454498]
[298.33355713 43.82519531]
[283.97222900 48.15557480]
[269.61090088 52.48595428]
[264.74990845 68.10377502]
[251.43186951 77.88195801]
[234.74435425 77.84157562]
[221.20809937 67.80206299]
[206.96713257 72.51321411]
[192.72616577 77.22436523]
[178.48521423 81.93551636]
[164.24424744 86.64666748]
[150.00328064 91.35781860]
[150.74414062 100.21920013]
[149.92675781 109.07384491]
[147.57623291 117.64985657]
[143.76475525 125.68387604]
[138.60935974 132.92921448]
[132.26835632 139.16336060]
[124.93646240 144.19488525]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 32]
[8 31]
[9 30]
[10 29]
[11 28]
[12 27]
[13 26]
[14 25]
[15 24]
[16 23]
[17 22]
[34 50]
[35 49]
[36 48]
[37 47]
[38 46]
[55 110]
[56 109]
[57 108]
[58 107]
[59 106]
[60 105]
[65 101]
[66 100]
[67 99]
[71 94]
[72 93]
[73 92]
[74 91]
[75 90]
[76 89]
[77 88]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
