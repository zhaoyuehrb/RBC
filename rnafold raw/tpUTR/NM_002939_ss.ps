%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 17:11:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCUCUUCCUGCUGCUGCUCUCCCUGGACGACCGGCCUCGAGGCAACCCUGGGGCCCACCAGCCCCUGCCAUGCUCUCACCCUGCAUAUCCUAGGUUUGAAGAGAAACGCUCAGAUCCGCUUAUUUCUGCCAGUAUAUUUUGGACACUUUAUAAUCAUUAAAGCACUUUCUUGGCAGGA\
) } def
/len { sequence length } bind def

/coor [
[111.63815308 278.12564087]
[102.50946045 290.82214355]
[87.34265137 294.63027954]
[73.29903412 287.75201416]
[67.00957489 273.43499756]
[71.44396210 258.43933105]
[84.50841522 249.84547424]
[86.07633972 234.92765808]
[87.64426422 220.00982666]
[89.21219635 205.09199524]
[90.78012085 190.17416382]
[92.34804535 175.25633240]
[93.91597748 160.33851624]
[78.63200378 154.26255798]
[66.12379456 144.58146667]
[57.15955353 132.32200623]
[44.04026031 139.59414673]
[30.92096329 146.86628723]
[24.91142273 153.78352356]
[17.50863457 154.14859009]
[4.26442146 161.19065857]
[-8.97979259 168.23274231]
[-19.15945053 187.06916809]
[-39.72984314 185.58290100]
[-52.58735275 193.30847168]
[-65.44486237 201.03404236]
[-78.30237579 208.75961304]
[-85.77526093 223.35714722]
[-102.16496277 223.91384888]
[-110.61114502 209.85704041]
[-102.42510986 195.64715576]
[-86.02794647 195.90211487]
[-73.17043304 188.17654419]
[-60.31292343 180.45097351]
[-47.45541382 172.72540283]
[-46.73218155 163.82725525]
[-41.90854263 156.15177917]
[-33.96685028 151.50115967]
[-24.63739204 151.03602600]
[-16.02186584 154.98852539]
[-2.77765179 147.94645691]
[10.46656227 140.90437317]
[23.64881897 133.74699402]
[36.76811600 126.47485352]
[49.88740921 119.20270538]
[47.99954605 113.26531219]
[46.81254196 107.14913177]
[46.34239578 100.93659973]
[46.59544373 94.71143341]
[47.56827164 88.55755615]
[49.24777222 82.55789185]
[35.88267517 75.74803925]
[22.51757622 68.93817902]
[9.15247917 62.12832260]
[-4.21261883 55.31846619]
[-19.16405106 60.44001007]
[-33.32084656 53.41429520]
[-38.28403091 38.40954971]
[-31.10903358 24.32782745]
[-16.05265427 19.52355957]
[-2.04757524 26.84703636]
[2.59723854 41.95336914]
[15.96233654 48.76322556]
[29.32743454 55.57308197]
[42.69253159 62.38293839]
[56.05762863 69.19279480]
[71.16539764 54.73874283]
[90.65003967 47.15500259]
[90.12654877 32.16413879]
[76.67008209 24.89291573]
[68.71241760 11.94794083]
[68.30537415 -3.14181376]
[75.45818329 -16.32109261]
[88.16182709 -24.09817314]
[87.63832855 -39.08903503]
[87.11483765 -54.07989883]
[86.59134674 -69.07076263]
[85.93705750 -84.05648804]
[85.15201569 -99.03592682]
[74.76464844 -114.22498322]
[83.30210876 -129.54360962]
[82.25576019 -144.50706482]
[81.20941162 -159.47053528]
[80.16307068 -174.43399048]
[67.40649414 -183.47854614]
[63.49814987 -198.61984253]
[70.28343964 -212.70861816]
[84.55854797 -219.09260559]
[99.58321381 -214.75746155]
[108.26324463 -201.75012207]
[106.50019836 -186.21223450]
[95.12652588 -175.48033142]
[96.17287445 -160.51687622]
[97.21922302 -145.55342102]
[98.26557159 -130.58995056]
[107.19578552 -122.40443420]
[108.17469025 -109.92749786]
[100.13146210 -99.82096863]
[100.91649628 -84.84152222]
[104.41629028 -78.30806732]
[101.58220673 -69.59425354]
[102.10570526 -54.60338974]
[102.62919617 -39.61252975]
[103.15268707 -24.62166595]
[116.36788940 -17.74969101]
[124.42260742 -5.10147047]
[125.06916809 9.97991943]
[118.03388214 23.44845963]
[105.11740875 31.64064598]
[105.64089966 46.63150787]
[128.25267029 51.86070251]
[147.35963440 66.57067871]
[160.47894287 59.29853821]
[173.59823608 52.02639389]
[186.71752930 44.75424957]
[186.90534973 29.39650536]
[194.76066589 16.19841957]
[208.17045593 8.71021080]
[223.52754211 8.94616985]
[236.70092773 16.84282494]
[244.14707947 30.27601433]
[243.86297607 45.63227844]
[235.92506409 58.78086090]
[222.46861267 66.18485260]
[207.11331177 65.85263062]
[193.98966980 57.87354660]
[180.87037659 65.14569092]
[167.75108337 72.41783142]
[154.63179016 79.68997955]
[158.00605774 94.30552673]
[172.98548889 95.09056854]
[187.96493530 95.87561035]
[202.94438171 96.66064453]
[214.52006531 85.90058899]
[230.31056213 86.56080627]
[240.94763184 98.24961853]
[240.12049866 114.03224945]
[228.31988525 124.54514313]
[212.54689026 123.55119324]
[202.15934753 111.64009094]
[187.17990112 110.85504913]
[172.20045471 110.07000732]
[157.22100830 109.28497314]
[156.08401489 117.11785889]
[153.86807251 124.81016541]
[150.59094238 132.21244812]
[146.29113770 139.17756653]
[157.78179932 148.81938171]
[169.27246094 158.46119690]
[180.76313782 168.10301208]
[192.25379944 177.74482727]
[207.62136841 174.85139465]
[221.22805786 182.55799866]
[226.64923096 197.22581482]
[221.32516479 211.92915344]
[207.76971436 219.72555542]
[192.38334656 216.93377686]
[182.43106079 204.87203979]
[182.61198425 189.23548889]
[171.12132263 179.59368896]
[159.63064575 169.95187378]
[148.13998413 160.31005859]
[136.64932251 150.66824341]
[129.69543457 153.47778320]
[135.31454468 167.38554382]
[140.93363953 181.29330444]
[150.57530212 192.78408813]
[142.62620544 205.50460815]
[128.07189941 201.87524414]
[127.02587891 186.91239929]
[121.40678406 173.00463867]
[115.78768158 159.09689331]
[108.83380127 161.90643311]
[107.26587677 176.82426453]
[105.69795227 191.74209595]
[104.13002014 206.65992737]
[102.56209564 221.57775879]
[100.99417114 236.49557495]
[99.42623901 251.41340637]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 179]
[8 178]
[9 177]
[10 176]
[11 175]
[12 174]
[13 173]
[16 45]
[17 44]
[18 43]
[20 42]
[21 41]
[22 40]
[24 35]
[25 34]
[26 33]
[27 32]
[51 66]
[52 65]
[53 64]
[54 63]
[55 62]
[68 110]
[69 109]
[74 104]
[75 103]
[76 102]
[77 101]
[78 99]
[79 98]
[81 95]
[82 94]
[83 93]
[84 92]
[112 129]
[113 128]
[114 127]
[115 126]
[130 143]
[131 142]
[132 141]
[133 140]
[147 163]
[148 162]
[149 161]
[150 160]
[151 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
