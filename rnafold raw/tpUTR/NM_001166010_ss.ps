%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 15:13:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACCACUACAGCAGAGUAAAGCAUGUCCAAGGAAGGAUGUGCUGUUACCUCUGAUUUCCAGUACUGGAACUAAAUAAGCUUCAUUGUGCCUUUUGUAGUGCUAGAAUAUCAAUUACAAUGAUGAUAUUUCACUACAGCUCUGAUGAAUAAAAAGUUUUGUAAAACAAGCUUAAGAAUUCA\
) } def
/len { sequence length } bind def

/coor [
[135.96983337 159.03942871]
[127.82823944 163.28564453]
[119.19573212 166.41542053]
[110.22458649 168.37355042]
[101.07306671 169.12548828]
[91.90261841 168.65795898]
[82.87501526 166.97923279]
[74.14951324 164.11892700]
[65.88005066 160.12747192]
[58.21250153 155.07530212]
[51.28213501 149.05154419]
[45.21120834 142.16244507]
[40.10681915 134.52955627]
[26.37570000 140.56747437]
[12.64457989 146.60537720]
[-1.08654070 152.64328003]
[-14.81766129 158.68119812]
[-28.49615860 164.83738708]
[-42.12101364 171.11140442]
[-55.74587250 177.38542175]
[-69.31607056 183.77679443]
[-82.83060455 190.28504944]
[-96.34513855 196.79330444]
[-109.85967255 203.30155945]
[-123.37420654 209.80981445]
[-136.88873291 216.31806946]
[-150.40327454 222.82633972]
[-163.91780090 229.33459473]
[-177.43234253 235.84284973]
[-182.41493225 250.84115601]
[-196.58081055 257.84854126]
[-211.52560425 252.70764160]
[-218.38282776 238.46847534]
[-213.08421326 223.57887268]
[-198.77334595 216.87257385]
[-183.94059753 222.32830811]
[-170.42605591 215.82005310]
[-156.91152954 209.31179810]
[-143.39698792 202.80354309]
[-129.88246155 196.29528809]
[-116.36792755 189.78703308]
[-102.85339355 183.27877808]
[-89.33885956 176.77052307]
[-75.82432556 170.26226807]
[-71.14995575 164.51235962]
[-62.01988983 163.76055908]
[-48.39503098 157.48654175]
[-34.77017593 151.21252441]
[-29.99724960 145.54417419]
[-20.85556984 144.95007324]
[-7.12444925 138.91217041]
[6.60667086 132.87425232]
[20.33779144 126.83634949]
[34.06891251 120.79843903]
[30.90340424 102.26807404]
[32.84689713 83.57000732]
[39.75569153 66.08677673]
[27.55984879 57.35399628]
[15.36400795 48.62121582]
[3.16816616 39.88843536]
[-9.02767563 31.15565491]
[-25.39238930 30.09349632]
[-32.41130066 15.27233315]
[-22.86395836 1.93890607]
[-6.57184744 3.80950260]
[-0.29489511 18.95981216]
[11.90094662 27.69259262]
[24.09678841 36.42537308]
[36.29262924 45.15815353]
[48.48847198 53.89093399]
[65.29346466 40.20919800]
[85.50847626 32.40207672]
[107.14732361 31.23664284]
[128.08392334 36.82740402]
[146.26119995 48.62505341]
[159.89317322 65.47043610]
[173.62429810 59.43252945]
[187.35542297 53.39462280]
[201.08654785 47.35671234]
[214.81765747 41.31880569]
[228.54878235 35.28089523]
[241.03877258 26.97427368]
[251.91642761 16.64582443]
[262.79406738 6.31737614]
[273.67172241 -4.01107264]
[284.54934692 -14.33952141]
[295.33746338 -24.76146507]
[299.75582886 -39.95318985]
[314.25637817 -43.35661316]
[324.95413208 -53.87127686]
[325.97348022 -58.15262222]
[328.09991455 -61.53489304]
[330.90985107 -63.77867889]
[333.94537354 -64.80865479]
[336.77154541 -64.71035767]
[348.16921997 -74.46192169]
[359.56689453 -84.21348572]
[370.96456909 -93.96504211]
[382.36224365 -103.71660614]
[393.75991821 -113.46817017]
[405.15759277 -123.21972656]
[406.90881348 -128.19204712]
[410.08486938 -131.63615417]
[413.85800171 -133.26438904]
[417.40695190 -133.16241455]
[429.29409790 -142.31094360]
[441.18124390 -151.45947266]
[453.06842041 -160.60800171]
[464.95556641 -169.75653076]
[476.84271240 -178.90507507]
[488.72985840 -188.05360413]
[500.61700439 -197.20213318]
[498.51086426 -212.41592407]
[504.30865479 -226.63848877]
[516.45080566 -236.04402161]
[531.67114258 -238.10246277]
[545.87542725 -232.26013184]
[555.24285889 -220.08856201]
[557.25360107 -204.86186218]
[551.36676025 -190.67591858]
[539.16589355 -181.34669495]
[523.93298340 -179.38371277]
[509.76553345 -185.31497192]
[497.87838745 -176.16644287]
[485.99124146 -167.01791382]
[474.10409546 -157.86938477]
[462.21694946 -148.72085571]
[450.32977295 -139.57232666]
[438.44262695 -130.42379761]
[426.55548096 -121.27526855]
[414.90914917 -111.82205200]
[403.51147461 -102.07048798]
[392.11380005 -92.31893158]
[380.71612549 -82.56736755]
[369.31845093 -72.81580353]
[357.92077637 -63.06424332]
[346.52310181 -53.31268311]
[335.46881104 -43.17352676]
[324.77105713 -32.65886307]
[321.11785889 -18.21921730]
[305.85211182 -14.06371689]
[303.27905273 -7.11458635]
[294.87780762 -3.46187639]
[284.00015259 6.86657190]
[273.12252808 17.19502068]
[262.24487305 27.52346992]
[251.36723328 37.85191727]
[262.83663940 28.18483925]
[277.82366943 27.56128120]
[290.05648804 36.24219131]
[294.41586304 50.59474945]
[289.07745361 64.61264801]
[276.27529907 72.42961121]
[261.36691284 70.77438354]
[250.59060669 60.33851242]
[260.72976685 71.39280701]
[270.86892700 82.44711304]
[281.00808716 93.50141144]
[296.80453491 97.90642548]
[300.62527466 113.85427856]
[288.53988647 124.93917847]
[272.98074341 119.75793457]
[269.95376587 103.64056396]
[259.81463623 92.58626556]
[249.67546082 81.53196716]
[239.53631592 70.47766876]
[234.54583740 59.57964325]
[234.58668518 49.01201630]
[220.85557556 55.04992676]
[207.12445068 61.08783340]
[193.39332581 67.12574005]
[179.66221619 73.16365051]
[165.93109131 79.20156097]
[168.10589600 88.12265778]
[169.07922363 97.25328064]
[168.83392334 106.43236542]
[167.37429810 115.49797058]
[164.72612000 124.29017639]
[160.93609619 132.65386963]
[156.07109070 140.44151306]
[150.21691895 147.51573181]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 54]
[14 53]
[15 52]
[16 51]
[17 50]
[18 48]
[19 47]
[20 46]
[21 44]
[22 43]
[23 42]
[24 41]
[25 40]
[26 39]
[27 38]
[28 37]
[29 36]
[57 70]
[58 69]
[59 68]
[60 67]
[61 66]
[76 173]
[77 172]
[78 171]
[79 170]
[80 169]
[81 168]
[82 147]
[83 146]
[84 145]
[85 144]
[86 143]
[87 141]
[89 139]
[90 138]
[95 137]
[96 136]
[97 135]
[98 134]
[99 133]
[100 132]
[101 131]
[105 130]
[106 129]
[107 128]
[108 127]
[109 126]
[110 125]
[111 124]
[112 123]
[155 166]
[156 165]
[157 164]
[158 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
