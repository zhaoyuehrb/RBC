%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 13:05:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCCAGCCAAGCCCAGGCAUCAGGAGGCUGUUAUGAUGUGGAGUUUCUUGGCCUGUCCUCUGCAUGGCCCAGUGUAGGAAGCCCAGUUUGCUCUCUGGUGUUUGUUAAUGUAAACAUUCAGUGAAGGGAUGGGGCAAUAAACGUAACUCAUCCUUUCCCGUU\
) } def
/len { sequence length } bind def

/coor [
[79.21686554 129.29862976]
[74.20775604 125.00218201]
[70.06916809 119.86186981]
[66.94077301 114.05120087]
[52.21514893 116.90706635]
[37.48952484 119.76293945]
[22.79192924 122.75971222]
[8.12370968 125.89712524]
[-0.48445237 138.87931824]
[-15.40480614 141.85214233]
[-27.72829247 133.56556702]
[-42.39651108 136.70297241]
[-51.00467300 149.68516541]
[-65.92502594 152.65798950]
[-78.24851227 144.37142944]
[-92.91673279 147.50883484]
[-107.58495331 150.64624023]
[-122.25317383 153.78366089]
[-136.92138672 156.92106628]
[-142.13536072 161.10789490]
[-147.82495117 161.88073730]
[-152.21115112 159.88633728]
[-166.98878479 162.45960999]
[-181.76640320 165.03288269]
[-196.54403687 167.60617065]
[-211.32165527 170.17944336]
[-226.09928894 172.75271606]
[-240.87690735 175.32598877]
[-255.65454102 177.89926147]
[-270.43215942 180.47253418]
[-282.70040894 190.46257019]
[-296.56634521 185.02336121]
[-303.27706909 199.01428223]
[-316.94580078 206.35905457]
[-332.31661987 204.23347473]
[-343.47909546 193.45486450]
[-346.14108276 178.16783142]
[-339.27896118 164.25053406]
[-325.53137207 157.05447388]
[-310.18453979 159.34667969]
[-299.13961792 170.24574280]
[-287.92837524 160.43975830]
[-273.00543213 165.69491577]
[-258.22781372 163.12164307]
[-243.45018005 160.54835510]
[-228.67256165 157.97508240]
[-213.89492798 155.40180969]
[-199.11730957 152.82853699]
[-184.33967590 150.25526428]
[-169.56205750 147.68199158]
[-154.78442383 145.10871887]
[-140.05880737 142.25283813]
[-125.39057922 139.11543274]
[-110.72236633 135.97802734]
[-96.05414581 132.84062195]
[-81.38592529 129.70320129]
[-73.53047180 117.10052490]
[-58.69950867 113.70979309]
[-45.53392029 122.03475952]
[-30.86570358 118.89734650]
[-23.01025391 106.29467010]
[-8.17928696 102.90393829]
[4.98629951 111.22890472]
[19.65451813 108.09149170]
[25.56525612 103.59635925]
[34.63365936 105.03730774]
[49.35928345 102.18144226]
[64.08490753 99.32557678]
[73.90837860 71.43910980]
[102.96202850 58.65823364]
[104.39653778 43.72698593]
[105.83104706 28.79573631]
[107.26554871 13.86448765]
[100.88347626 -0.61238080]
[109.80247498 -12.54137039]
[107.50087738 -21.43040466]
[111.41014099 -27.74393654]
[113.13039398 -42.64496994]
[107.02679443 -57.24142838]
[116.17265320 -68.99739075]
[117.89290619 -83.89842224]
[119.61315918 -98.79945374]
[121.33340454 -113.70048523]
[117.14344788 -130.12852478]
[131.76957703 -138.70246887]
[144.05737305 -127.02143860]
[136.23443604 -111.98023224]
[134.51419067 -97.07920074]
[132.79393005 -82.17816925]
[131.07368469 -67.27713776]
[137.30032349 -53.74649811]
[128.03143311 -40.92471695]
[126.31117249 -26.02368546]
[124.73372650 -11.10686207]
[131.21839905 2.30202365]
[122.19680023 15.29899597]
[120.76229095 30.23024368]
[119.32778168 45.16149139]
[117.89327240 60.09274292]
[130.32527161 68.48593140]
[143.63778687 61.57386398]
[148.49819946 46.77473450]
[162.09745789 39.95455933]
[176.17622375 44.67942047]
[189.48873901 37.76735306]
[202.80126953 30.85528946]
[216.11380005 23.94322395]
[220.64271545 8.80174446]
[234.59127808 1.37117159]
[249.68402100 6.05993080]
[256.96670532 20.08626366]
[252.11863708 35.12859726]
[238.01609802 42.26258087]
[223.02586365 37.25574875]
[209.71333313 44.16781616]
[196.40080261 51.07987976]
[183.08828735 57.99194717]
[178.85311890 72.22566986]
[165.45079041 79.42513275]
[150.54986572 74.88639069]
[137.23733521 81.79845428]
[139.19947815 94.34246826]
[137.23204041 106.31343842]
[131.87403870 116.56486511]
[143.44636536 126.10849762]
[155.01870728 135.65213013]
[166.59104919 145.19577026]
[178.16339111 154.73941040]
[189.73571777 164.28305054]
[201.30805969 173.82667542]
[212.88040161 183.37031555]
[224.45272827 192.91395569]
[236.02507019 202.45759583]
[247.59741211 212.00123596]
[261.20886230 205.17127991]
[276.42184448 204.47456360]
[290.60058594 210.03181458]
[301.28854370 220.88017273]
[306.63400269 235.14012146]
[305.71078491 250.34103394]
[298.67886353 263.84924316]
[286.75653076 273.32440186]
[272.00946045 277.12484741]
[256.99261475 274.59213257]
[244.30780029 266.16510010]
[236.15269470 253.30375671]
[233.94024658 238.23640442]
[238.05377197 223.57356262]
[226.48143005 214.02993774]
[214.90910339 204.48629761]
[203.33676147 194.94265747]
[191.76441956 185.39901733]
[180.19207764 175.85537720]
[168.61975098 166.31175232]
[157.04740906 156.76811218]
[145.47506714 147.22447205]
[133.90274048 137.68083191]
[122.33039856 128.13720703]
[116.80619049 131.74745178]
[110.71475983 134.28617859]
[104.26169586 135.66772461]
[97.66479492 135.84544373]
[91.14670563 134.81332397]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 68]
[5 67]
[6 66]
[7 64]
[8 63]
[11 60]
[12 59]
[15 56]
[16 55]
[17 54]
[18 53]
[19 52]
[22 51]
[23 50]
[24 49]
[25 48]
[26 47]
[27 46]
[28 45]
[29 44]
[30 43]
[32 41]
[70 99]
[71 98]
[72 97]
[73 96]
[75 94]
[77 93]
[78 92]
[80 90]
[81 89]
[82 88]
[83 87]
[100 121]
[101 120]
[104 117]
[105 116]
[106 115]
[107 114]
[124 158]
[125 157]
[126 156]
[127 155]
[128 154]
[129 153]
[130 152]
[131 151]
[132 150]
[133 149]
[134 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
