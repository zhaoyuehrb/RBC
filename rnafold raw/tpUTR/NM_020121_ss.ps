%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 19:01:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUGGUGUAUAUGAGAAGGAAGGCGAAAGCAUGACAGGAAACCUGCCGCCUGCUGGGGAAGUCUGGAGCCCCUGCUGAGACGAUUUGGAAGUCUCGUUAAGAUCAGUGACAUAUUCUUUAAUUUUAAAAAAUUGUAAUUAUUUAAAACAGUUAUUUAAUGUAUUGAAUGAGUUUAAGUUAUAUAAUAAAUGACCAUUGAGUAUUUAA\
) } def
/len { sequence length } bind def

/coor [
[259.64779663 120.75449371]
[244.69902039 119.51580811]
[229.75024414 118.27711487]
[214.80148315 117.03842926]
[199.85272217 115.79973602]
[184.90394592 114.56104279]
[169.95518494 113.32235718]
[156.63243103 119.98221588]
[143.51834106 111.13173676]
[141.17481995 119.88385010]
[137.05989075 128.13479614]
[131.28251648 135.52423096]
[124.02529907 141.71585083]
[115.53895569 146.41255188]
[106.13394165 149.37014771]
[96.16910553 150.40943909]
[86.03807068 149.42567444]
[76.15365601 146.39532471]
[66.93107605 141.37944031]
[58.77054977 134.52359009]
[52.04006958 126.05419159]
[47.05903625 116.27134705]
[33.60802460 122.90988922]
[20.15701294 129.54843140]
[6.70599937 136.18696594]
[-6.74501371 142.82551575]
[7.48467827 147.57060242]
[15.44299030 160.28536987]
[13.49223423 175.15797424]
[2.52408624 185.39027405]
[-12.44798851 186.30513000]
[-24.58036041 177.48437500]
[-28.32740402 162.95993042]
[-21.97594261 149.37037659]
[-28.94645500 155.27619934]
[-36.30051804 154.52996826]
[-50.45077133 159.50694275]
[-64.60102844 164.48393250]
[-78.75128174 169.46090698]
[-91.68695831 180.42013550]
[-105.79884338 171.02380371]
[-100.67627716 154.86224365]
[-83.72825623 155.31065369]
[-69.57801056 150.33367920]
[-55.42775345 145.35668945]
[-41.27750015 140.37971497]
[-27.16505432 135.29652405]
[-13.38355637 129.37449646]
[0.06745632 122.73596191]
[13.51846886 116.09741974]
[26.96948242 109.45887756]
[40.42049408 102.82032776]
[39.74430466 87.83557892]
[25.75004768 82.43550873]
[10.08970547 84.68590546]
[1.00125360 72.88550568]
[-12.99300385 67.48544312]
[-26.98726273 62.08536911]
[-40.98152161 56.68530273]
[-52.88400269 66.39233398]
[-68.04792786 68.83177948]
[-82.39427948 63.34745407]
[-92.06394958 51.41460037]
[-94.45585632 36.24310303]
[-88.92658997 21.91401482]
[-76.96348572 12.28179169]
[-61.78456116 9.93745232]
[-47.47287750 15.51161194]
[-37.87820053 27.50484848]
[-35.58145142 42.69104385]
[-21.58719254 48.09111404]
[-7.59293509 53.49118042]
[6.40132284 58.89125061]
[21.06070137 56.25460815]
[31.15011597 68.44125366]
[45.14437485 73.84132385]
[54.88180923 62.43157196]
[47.34928513 49.46002197]
[39.81676483 36.48847198]
[32.28424454 23.51692009]
[24.75172424 10.54536915]
[17.21920395 -2.42618203]
[1.80323076 -3.01889849]
[-10.83196735 -11.87075233]
[-16.65454292 -26.15715027]
[-13.80653667 -41.31935120]
[-3.19673371 -52.51915741]
[11.78931522 -56.18274689]
[26.36961555 -51.14108276]
[35.89164734 -39.00294495]
[37.31696701 -23.64156342]
[30.19075584 -9.95870304]
[37.72327423 3.01284838]
[45.25579453 15.98439884]
[52.78831863 28.95594978]
[60.32083893 41.92750168]
[67.85335541 54.89905167]
[95.09934998 47.45940399]
[121.05445099 54.48121262]
[138.92675781 72.71688080]
[144.75703430 96.18296814]
[159.14901733 89.61170197]
[171.19387817 98.37358856]
[186.14263916 99.61228180]
[201.09140015 100.85096741]
[216.04017639 102.08966064]
[230.98893738 103.32834625]
[245.93771362 104.56703949]
[260.88647461 105.80573273]
[263.15341187 98.58276367]
[266.44036865 91.76869202]
[270.67678833 85.50657654]
[275.77212524 79.92765045]
[281.61791992 75.14859009]
[288.08999634 71.26905823]
[295.05111694 68.36964417]
[302.35403442 66.51016235]
[309.84432983 65.72844696]
[317.36398315 66.03955078]
[324.75445557 67.43549347]
[331.86016846 69.88545227]
[338.53182983 73.33641052]
[344.62933350 77.71434021]
[350.02499390 82.92576599]
[354.60598755 88.85978699]
[368.15527344 82.42417908]
[381.70455933 75.98856354]
[395.25384521 69.55295563]
[408.80310059 63.11734390]
[417.94897461 50.20751953]
[432.76495361 51.73599243]
[446.31423950 45.30038071]
[459.86349487 38.86476898]
[473.41278076 32.42915726]
[486.96206665 25.99354553]
[500.51135254 19.55793571]
[501.05801392 4.26219225]
[508.66040039 -9.02171326]
[521.57153320 -17.24123764]
[536.82458496 -18.50759315]
[550.91442871 -12.52978230]
[560.60339355 -0.68146122]
[563.66497803 14.31471252]
[559.39569092 29.01272774]
[548.77655029 40.03508759]
[534.24780273 44.84893799]
[519.14794922 42.34808731]
[506.94696045 33.10721207]
[493.39767456 39.54282379]
[479.84838867 45.97843552]
[466.29913330 52.41404724]
[452.74984741 58.84965515]
[439.20056152 65.28527069]
[431.02383423 77.73477173]
[415.23870850 76.66661835]
[401.68945312 83.10223389]
[388.14016724 89.53784180]
[374.59088135 95.97345734]
[361.04159546 102.40906525]
[362.60620117 126.03666687]
[353.45452881 147.87603760]
[364.18002319 158.36238098]
[374.90551758 168.84873962]
[385.63101196 179.33509827]
[396.35650635 189.82145691]
[411.63317871 193.93658447]
[415.32452393 208.36653137]
[426.05001831 218.85289001]
[436.77551270 229.33924866]
[447.50103760 239.82559204]
[455.82632446 243.58811951]
[458.30743408 250.55110168]
[468.87411499 261.19747925]
[479.44076538 271.84387207]
[491.11236572 269.57351685]
[502.31579590 273.18292236]
[510.30261230 281.66510010]
[513.17242432 292.83300781]
[510.32418823 303.88265991]
[520.56604004 314.84185791]
[530.80792236 325.80105591]
[541.04980469 336.76025391]
[556.28216553 344.20413208]
[553.34594727 360.90188599]
[536.48791504 362.70278931]
[530.09063721 347.00213623]
[519.84875488 336.04293823]
[509.60687256 325.08374023]
[499.36499023 314.12454224]
[481.06634521 314.60894775]
[467.99948120 301.33767700]
[468.79440308 282.41052246]
[458.22772217 271.76416016]
[447.66104126 261.11776733]
[437.01467896 250.55110168]
[426.28918457 240.06474304]
[415.56365967 229.57838440]
[404.83816528 219.09202576]
[390.32867432 215.72694397]
[385.87014771 200.54695129]
[375.14465332 190.06059265]
[364.41915894 179.57424927]
[353.69366455 169.08789062]
[342.96817017 158.60153198]
[326.52557373 167.07081604]
[308.12133789 169.20849609]
[290.11245728 164.71786499]
[274.81338501 154.15252686]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 109]
[2 108]
[3 107]
[4 106]
[5 105]
[6 104]
[7 103]
[9 101]
[22 52]
[23 51]
[24 50]
[25 49]
[26 48]
[34 47]
[36 46]
[37 45]
[38 44]
[39 43]
[53 76]
[54 75]
[56 73]
[57 72]
[58 71]
[59 70]
[77 97]
[78 96]
[79 95]
[80 94]
[81 93]
[82 92]
[125 159]
[126 158]
[127 157]
[128 156]
[129 155]
[131 153]
[132 152]
[133 151]
[134 150]
[135 149]
[136 148]
[161 204]
[162 203]
[163 202]
[164 201]
[165 200]
[167 198]
[168 197]
[169 196]
[170 195]
[172 194]
[173 193]
[174 192]
[179 189]
[180 188]
[181 187]
[182 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
