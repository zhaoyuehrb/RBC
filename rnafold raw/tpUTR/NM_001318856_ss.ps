%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 02:20:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGUGGCCUCAGCUCCCACAAGCCUCUGCCCAGGCACUGCUAGGCUCUGUCUGGAAGAUGGGGACCAGCAGCCCCACACCAGGGCCAGCCUCUAGAGCAGACUACAGCUGGGGUGCAGGGAUGUGGGUUCCACAGACGGAAGGGUAAACAAUAUAGUCUUUUUCAGUUCCUGCA\
) } def
/len { sequence length } bind def

/coor [
[229.83522034 238.13574219]
[215.06849670 235.50065613]
[205.33476257 224.08773804]
[205.06315613 209.09019470]
[214.37725830 197.33233643]
[229.03858948 194.16424561]
[216.51998901 185.90080261]
[204.00138855 177.63734436]
[191.48278809 169.37388611]
[178.96418762 161.11042786]
[166.44558716 152.84698486]
[153.92698669 144.58352661]
[141.40838623 136.32006836]
[128.88978577 128.05661011]
[122.59030151 133.33874512]
[115.34941101 137.23156738]
[107.46887207 139.57284546]
[99.27708435 140.26501465]
[91.11542511 139.27923584]
[83.32400513 136.65658569]
[76.22752380 132.50634766]
[70.12169647 127.00149536]
[57.31454086 134.81025696]
[44.50738525 142.61901855]
[31.70022774 150.42778015]
[28.22035789 165.84419250]
[14.81422997 174.21386719]
[-0.56453884 170.57119751]
[-8.79199791 157.07733154]
[-4.98694134 141.73793030]
[8.59315777 133.65359497]
[23.89146805 137.62062073]
[36.69862747 129.81185913]
[49.50578308 122.00309753]
[62.31294250 114.19434357]
[60.31273270 93.16519928]
[69.23220825 74.01660156]
[59.77497482 62.37355042]
[50.31774139 50.73049545]
[40.86050797 39.08744049]
[31.40327263 27.44438744]
[21.53419113 16.14831543]
[11.26598454 5.21378565]
[0.99777782 -5.72074413]
[-9.27042866 -16.65527344]
[-19.53863525 -27.58980370]
[-34.83782959 -25.78956985]
[-48.10837173 -33.25590134]
[-54.36386108 -46.94285965]
[-51.39594269 -61.51438904]
[-61.66415024 -72.44892120]
[-71.93235779 -83.38344574]
[-82.20056152 -94.31797791]
[-92.46877289 -105.25251007]
[-104.23681641 -103.30331421]
[-115.36553192 -107.25144196]
[-123.11476135 -116.00151825]
[-125.63636017 -127.29148102]
[-122.41400146 -138.27667236]
[-132.28308105 -149.57273865]
[-142.15216064 -160.86882019]
[-152.02124023 -172.16488647]
[-161.89031982 -183.46096802]
[-177.33227539 -181.93595886]
[-190.70442200 -189.80776978]
[-196.86486816 -204.04956055]
[-193.44482422 -219.18504333]
[-181.75936890 -229.39433289]
[-166.30177307 -230.75173950]
[-153.01582336 -222.73530579]
[-147.01022339 -208.42753601]
[-150.59425354 -193.33004761]
[-140.72517395 -182.03396606]
[-130.85609436 -170.73789978]
[-120.98701477 -159.44183350]
[-111.11793518 -148.14575195]
[-92.83630371 -148.03880310]
[-80.19706726 -134.39233398]
[-81.53424072 -115.52071381]
[-71.26603699 -104.58618164]
[-60.99782562 -93.65165710]
[-50.72962189 -82.71712494]
[-40.46141434 -71.78260040]
[-25.73228073 -73.82970428]
[-12.46511745 -66.72714233]
[-5.84678078 -53.01397705]
[-8.60410595 -37.85800934]
[1.66410065 -26.92347908]
[11.93230724 -15.98895073]
[22.20051384 -5.05442095]
[32.46871948 5.88010836]
[35.29625702 6.08629990]
[38.21064758 7.44391870]
[40.76583099 9.99111843]
[42.51052856 13.60147858]
[43.04632568 17.98715210]
[52.50355911 29.63020706]
[61.96079636 41.27326202]
[71.41802979 52.91631699]
[80.87526703 64.55937195]
[96.59897614 59.87236786]
[112.88722992 61.84619141]
[127.03631592 70.15319824]
[136.69761658 83.41451263]
[140.26745605 99.42886353]
[137.15324402 115.53801727]
[149.67184448 123.80146790]
[162.19044495 132.06492615]
[174.70904541 140.32838440]
[187.22764587 148.59182739]
[199.74624634 156.85528564]
[212.26484680 165.11874390]
[224.78343201 173.38220215]
[237.30203247 181.64566040]
[250.31480408 189.10675049]
[263.77038574 195.73605347]
[277.22595215 202.36535645]
[290.68151855 208.99464417]
[304.13708496 215.62394714]
[317.59265137 222.25325012]
[331.04821777 228.88253784]
[344.50381470 235.51184082]
[359.28619385 238.05761719]
[374.18417358 236.31126404]
[389.08218384 234.56492615]
[403.98016357 232.81857300]
[419.00765991 224.96931458]
[430.71020508 237.23661804]
[422.16186523 251.87774658]
[405.72653198 247.71656799]
[390.82852173 249.46292114]
[375.93054199 251.20925903]
[361.03253174 252.95561218]
[359.03726196 260.18533325]
[353.05142212 281.87448120]
[364.94488525 291.01480103]
[373.68780518 293.77645874]
[376.96786499 300.42752075]
[388.69534302 309.77987671]
[400.42282104 319.13220215]
[412.15029907 328.48455811]
[423.87774658 337.83691406]
[435.60522461 347.18923950]
[451.21878052 349.74426270]
[456.34521484 363.72885132]
[468.07269287 373.08117676]
[483.36334229 369.80551147]
[497.15795898 377.17050171]
[502.94311523 391.69860840]
[497.98727417 406.53012085]
[484.63040161 414.66204834]
[469.17922974 412.25473022]
[458.92929077 400.44485474]
[458.72033691 384.80865479]
[446.99288940 375.45629883]
[432.21817017 373.57025146]
[426.25289917 358.91671753]
[414.52542114 349.56436157]
[402.79794312 340.21203613]
[391.07046509 330.85968018]
[379.34298706 321.50732422]
[367.61550903 312.15499878]
[355.80456543 302.90829468]
[343.91110229 293.76797485]
[329.89001465 268.39636230]
[337.87451172 248.96740723]
[324.41894531 242.33811951]
[310.96334839 235.70881653]
[297.50778198 229.07951355]
[284.05221558 222.45022583]
[270.59664917 215.82092285]
[257.14108276 209.19161987]
[243.68550110 202.56231689]
[248.35789490 216.81605530]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 114]
[7 113]
[8 112]
[9 111]
[10 110]
[11 109]
[12 108]
[13 107]
[14 106]
[22 35]
[23 34]
[24 33]
[25 32]
[37 100]
[38 99]
[39 98]
[40 97]
[41 96]
[42 91]
[43 90]
[44 89]
[45 88]
[46 87]
[50 83]
[51 82]
[52 81]
[53 80]
[54 79]
[59 76]
[60 75]
[61 74]
[62 73]
[63 72]
[115 173]
[116 172]
[117 171]
[118 170]
[119 169]
[120 168]
[121 167]
[122 166]
[123 133]
[124 132]
[125 131]
[126 130]
[135 164]
[136 163]
[138 162]
[139 161]
[140 160]
[141 159]
[142 158]
[143 157]
[145 155]
[146 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
