%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 07:20:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAACAUUUCAACGUAUCCACAGUCCAGUGAGAAUACUAUGGUACCAUACAGUAUAAACAACUGCUCAGUGAUAUUUCCAUUUAUUUUACUUUGAGUAAUAAAAAUUUUUCUAUCUCAU\
) } def
/len { sequence length } bind def

/coor [
[63.48240280 202.76242065]
[67.00184631 217.40165710]
[67.40031433 232.45274353]
[64.66040039 247.25769043]
[58.90186310 261.16931152]
[50.37645721 273.57943726]
[39.45687103 283.94552612]
[26.62045860 291.81448364]
[12.42837715 296.84225464]
[-2.49895763 298.80905151]
[-17.50898743 297.62893677]
[-31.94553757 293.35345459]
[-45.17750549 286.16952515]
[-56.62644196 276.39123535]
[-65.79185486 264.44598389]
[-72.27307129 250.85600281]
[-75.78675079 236.21537781]
[-76.17929840 221.16413879]
[-73.43355560 206.36027527]
[-67.66955566 192.45092773]
[-59.13926315 180.04415894]
[-48.21559906 169.68234253]
[-35.37609482 161.81845093]
[-21.18203545 156.79626465]
[-6.25392818 154.83532715]
[8.75563622 156.02134705]
[23.19050217 160.30250549]
[36.41964340 167.49163818]
[46.16136169 156.08554077]
[55.90308380 144.67945862]
[65.64480591 133.27336121]
[75.38652802 121.86727905]
[85.12824249 110.46118927]
[84.34320831 95.48174286]
[73.46259308 85.15642548]
[62.58197403 74.83110809]
[51.70135880 64.50579071]
[40.82074356 54.18047333]
[29.67357254 44.14351273]
[18.26748276 34.40179062]
[6.86139297 24.66007042]
[-9.35297489 22.20521545]
[-15.08143711 6.83912468]
[-4.43104219 -5.63088512]
[11.64199543 -2.37673616]
[16.60311317 13.25398159]
[28.00920296 22.99570274]
[39.41529465 32.73742294]
[44.27788162 33.24318695]
[48.83803177 36.89063263]
[51.14606476 43.29985809]
[62.02667999 53.62517548]
[72.90729523 63.95049286]
[83.78791046 74.27581024]
[94.66852570 84.60112762]
[86.14998627 72.25469971]
[86.97148132 57.27721024]
[96.78924561 45.93650436]
[111.49468994 42.97848129]
[124.93383026 49.64102936]
[131.48260498 63.13597488]
[128.40045166 77.81590271]
[116.97603607 87.53797150]
[130.15829468 80.38059235]
[143.34054565 73.22320557]
[156.52281189 66.06582642]
[169.70506287 58.90844345]
[182.88731384 51.75106430]
[195.87770081 44.25106430]
[208.66729736 36.41358566]
[221.45690918 28.57610703]
[234.24650574 20.73862839]
[241.97035217 6.93092442]
[256.86486816 6.87807608]
[269.65447998 -0.95940226]
[270.73764038 -16.43862724]
[280.73815918 -28.30324745]
[295.81063843 -31.99107552]
[310.15939331 -26.08406639]
[318.26702881 -12.85358429]
[317.01602173 2.61297917]
[306.88739014 14.36841488]
[291.77578735 17.89251900]
[277.49194336 11.83020020]
[264.70236206 19.66767883]
[257.89328003 32.91479492]
[242.08398438 33.52822876]
[229.29438782 41.36570740]
[216.50477600 49.20318604]
[203.71517944 57.04066467]
[201.73155212 61.50897598]
[196.85345459 64.71881104]
[190.04469299 64.93331909]
[176.86244202 72.09069824]
[163.68019104 79.24808502]
[150.49792480 86.40546417]
[137.31567383 93.56284332]
[124.13341522 100.72023010]
[139.11607361 99.99899292]
[153.46707153 104.36345673]
[165.51130676 113.30416870]
[173.84291077 125.77752686]
[177.48933411 140.32756042]
[176.02497864 155.25590515]
[169.62077332 168.82005310]
[159.02423096 179.43670654]
[145.47224426 185.86663818]
[130.54670715 187.35929871]
[115.98977661 183.74044800]
[103.50064850 175.43252563]
[94.53710938 163.40527344]
[90.14544678 149.06256104]
[90.83826447 134.07856750]
[96.53433228 120.20291138]
[86.79261780 131.60899353]
[77.05089569 143.01509094]
[67.30917358 154.42117310]
[57.56745148 165.82727051]
[47.82573318 177.23335266]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 119]
[29 118]
[30 117]
[31 116]
[32 115]
[33 114]
[34 55]
[35 54]
[36 53]
[37 52]
[38 51]
[39 48]
[40 47]
[41 46]
[63 98]
[64 97]
[65 96]
[66 95]
[67 94]
[68 93]
[69 90]
[70 89]
[71 88]
[72 87]
[74 85]
[75 84]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
