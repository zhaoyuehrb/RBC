%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 16:52:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGUUCUGCUGUCCAAGAGAAUGUCAUGCUGGGAACGCCAUCAUCGGUGGUGUUAGCUUCACAUGCUUCUGCAGCUGAGCUUGCAGAAUAGAGAAAAAUGAGCUCAUAAUUUGCUUUGAGAGCUACAGGAAAUGGUUGUUUCUCCUAUACUUUGUCCUUAACAUCUUUCUUGAUCCUAAAUAUAUAUCUCGUAACAAGAUG\
) } def
/len { sequence length } bind def

/coor [
[83.03341675 127.52619171]
[72.24699402 116.59297943]
[57.93830872 121.09424591]
[43.62961960 125.59551239]
[29.32093239 130.09678650]
[18.47861862 141.61871338]
[4.01606846 138.05726624]
[-10.29261971 142.55853271]
[-24.60130882 147.05979919]
[-38.90999603 151.56106567]
[-53.21868515 156.06234741]
[-56.75667953 159.92219543]
[-60.99842453 161.84155273]
[-65.08479309 161.87789917]
[-68.30458832 160.42219543]
[-82.80854034 164.24784851]
[-97.31248474 168.07348633]
[-111.81642914 171.89912415]
[-124.57839203 185.16850281]
[-141.31832886 179.91297913]
[-155.76072693 183.96482849]
[-170.20310974 188.01669312]
[-184.64549255 192.06855774]
[-190.12016296 206.46765137]
[-202.87466431 214.78488159]
[-217.90321350 214.00619507]
[-229.45326233 204.63952637]
[-243.89564514 208.69137573]
[-258.33801270 212.74324036]
[-272.78039551 216.79510498]
[-276.43731689 220.54248047]
[-280.73696899 222.32832336]
[-284.82247925 222.23695374]
[-287.99520874 220.68132019]
[-302.61163330 224.05178833]
[-317.22805786 227.42224121]
[-331.84448242 230.79269409]
[-346.46093750 234.16316223]
[-361.07736206 237.53361511]
[-375.69378662 240.90406799]
[-390.31021118 244.27453613]
[-404.38571167 253.72526550]
[-417.36361694 242.81605530]
[-410.47338867 227.32539368]
[-393.68066406 229.65811157]
[-379.06423950 226.28764343]
[-364.44781494 222.91719055]
[-349.83139038 219.54672241]
[-335.21496582 216.17626953]
[-320.59854126 212.80581665]
[-305.98208618 209.43534851]
[-291.36566162 206.06489563]
[-276.83227539 202.35272217]
[-262.38989258 198.30085754]
[-247.94749451 194.24899292]
[-233.50511169 190.19714355]
[-228.51283264 176.18945312]
[-216.08248901 167.70709229]
[-200.86299133 168.17611694]
[-188.69734192 177.62617493]
[-174.25495911 173.57431030]
[-159.81257629 169.52244568]
[-145.37019348 165.47059631]
[-139.16993713 155.07800293]
[-127.16458130 151.58732605]
[-115.64207458 157.39517212]
[-101.13813019 153.56953430]
[-86.63417816 149.74389648]
[-72.13023376 145.91825867]
[-57.71995544 141.75364685]
[-43.41126633 137.25238037]
[-29.10257912 132.75111389]
[-14.79389000 128.24984741]
[-0.48520088 123.74857330]
[9.33365917 112.54860687]
[24.81966209 115.78809357]
[39.12834930 111.28682709]
[53.43703842 106.78556061]
[67.74572754 102.28428650]
[72.96685028 82.25838470]
[89.26171112 69.50007629]
[109.95536041 69.23562622]
[117.75782776 56.42463303]
[125.56029510 43.61363983]
[133.36276245 30.80264854]
[141.16522217 17.99165726]
[148.76651001 5.06028318]
[156.16476440 -7.98831224]
[163.56301880 -21.03690720]
[170.96127319 -34.08550262]
[178.25732422 -47.19151688]
[185.45074463 -60.35414886]
[192.64414978 -73.51677704]
[199.83757019 -86.67940521]
[207.03097534 -99.84204102]
[197.85116577 -122.08016968]
[207.94212341 -143.63804626]
[230.41148376 -150.68032837]
[235.68838501 -164.72149658]
[240.85539246 -178.80348206]
[245.91218567 -192.92539978]
[250.96897888 -207.04733276]
[256.02578735 -221.16925049]
[261.08258057 -235.29118347]
[258.45050049 -250.89192200]
[270.02551270 -260.26574707]
[275.08230591 -274.38769531]
[280.13909912 -288.50961304]
[273.15963745 -302.68927002]
[278.32995605 -317.62390137]
[292.58261108 -324.45306396]
[307.46176147 -319.12512207]
[314.13983154 -304.80105591]
[308.65487671 -289.97909546]
[294.26101685 -283.45281982]
[289.20422363 -269.33090210]
[284.14743042 -255.20895386]
[287.14117432 -240.61831665]
[275.20449829 -230.23439026]
[270.14770508 -216.11245728]
[265.09091187 -201.99053955]
[260.03411865 -187.86860657]
[254.97731018 -173.74667358]
[255.68263245 -166.38363647]
[249.72955322 -159.44461060]
[244.45265198 -145.40344238]
[249.47308350 -140.96401978]
[253.35557556 -135.47908020]
[255.88749695 -129.23461914]
[256.92684937 -122.55852509]
[256.41030884 -115.80347443]
[254.35693359 -109.32821655]
[250.86758423 -103.47857666]
[246.12011719 -98.56896210]
[240.36019897 -94.86544800]
[233.88867188 -92.57142639]
[227.04585266 -91.81637573]
[220.19360352 -92.64862823]
[213.00019836 -79.48600006]
[205.80677795 -66.32336426]
[198.61337280 -53.16073608]
[191.41996765 -39.99810410]
[190.97053528 -32.61501694]
[184.00987244 -26.68725014]
[176.61161804 -13.63865471]
[169.21336365 -0.59005892]
[161.81510925 12.45853710]
[162.20379639 17.22595215]
[159.59616089 22.28688812]
[153.97621155 25.79412270]
[146.17375183 38.60511398]
[138.37129211 51.41610718]
[130.56881714 64.22709656]
[122.76634979 77.03809357]
[127.09216309 82.34863281]
[130.20233154 88.45119476]
[131.95732117 95.07196045]
[132.27836609 101.91384888]
[131.15107727 108.66986084]
[128.62602234 115.03685760]
[124.81650543 120.72914124]
[133.78433228 132.75320435]
[142.75215149 144.77726746]
[151.71997070 156.80133057]
[160.68778992 168.82539368]
[169.65562439 180.84947205]
[186.56033325 180.40634155]
[200.26387024 190.02853394]
[205.48237610 205.76399231]
[200.34825134 221.35234070]
[209.50289917 233.23478699]
[218.65756226 245.11721802]
[233.20681763 240.79476929]
[248.33473206 242.02389526]
[261.99536133 248.63838196]
[272.34124756 259.74365234]
[277.97317505 273.83782959]
[278.12945557 289.01480103]
[272.78900146 303.22195435]
[262.67401123 314.53796387]
[249.15249634 321.43237305]
[234.05311584 322.97277832]
[219.41792297 318.95089722]
[207.22622681 309.91058350]
[199.12684631 297.07452393]
[196.21514893 282.17868042]
[198.88493347 267.23757935]
[206.77511597 254.27186584]
[197.62046814 242.38943481]
[188.46582031 230.50700378]
[175.20823669 232.11888123]
[162.78657532 226.92587280]
[154.48854065 216.18646240]
[152.56753540 202.64198303]
[157.63154602 189.81729126]
[148.66372681 177.79322815]
[139.69590759 165.76916504]
[130.72808838 153.74508667]
[121.76026154 141.72102356]
[112.79243469 129.69696045]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 79]
[3 78]
[4 77]
[5 76]
[7 74]
[8 73]
[9 72]
[10 71]
[11 70]
[15 69]
[16 68]
[17 67]
[18 66]
[20 63]
[21 62]
[22 61]
[23 60]
[27 56]
[28 55]
[29 54]
[30 53]
[34 52]
[35 51]
[36 50]
[37 49]
[38 48]
[39 47]
[40 46]
[41 45]
[82 154]
[83 153]
[84 152]
[85 151]
[86 150]
[87 147]
[88 146]
[89 145]
[90 144]
[91 142]
[92 141]
[93 140]
[94 139]
[95 138]
[98 126]
[99 125]
[100 123]
[101 122]
[102 121]
[103 120]
[104 119]
[106 117]
[107 116]
[108 115]
[161 200]
[162 199]
[163 198]
[164 197]
[165 196]
[166 195]
[170 190]
[171 189]
[172 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
