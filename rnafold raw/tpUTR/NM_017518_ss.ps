%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 02:20:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGUCUUCAGUGAUGGCCUACGCCAAAGCACAGGAUGGGGCGGGCAGGAAGCCCUCUCCCAAGAUCGAGUUGGCCGAGGAUGGAUGAUUGUGGCAGCAGAAGCCGUUGCAGCCCCACGUUGUGCUCUAGGCAGGGACCUUUGGCCCCUUUGGGGAGGGAGAGACAGACGGGCGGUUUGACUUGGACACAAAGAAAGCCUUGGUUUCUAAGCA\
) } def
/len { sequence length } bind def

/coor [
[481.22045898 493.66729736]
[476.60272217 484.31350708]
[475.11038208 473.95559692]
[476.91119385 463.61303711]
[481.84780884 454.31024170]
[472.30004883 442.74133301]
[462.75225830 431.17242432]
[453.20446777 419.60348511]
[443.65670776 408.03457642]
[427.75415039 413.65658569]
[410.86514282 413.04196167]
[395.35263062 406.25234985]
[383.39590454 394.21508789]
[376.68450928 378.59646606]
[376.17938232 361.57128906]
[381.97552490 345.51995850]
[370.54800415 335.80337524]
[359.04946899 326.17095947]
[347.48056030 316.62316895]
[335.91165161 307.07537842]
[323.84573364 307.91567993]
[314.12963867 300.05795288]
[312.31387329 287.28973389]
[300.88635254 277.57315063]
[289.45883179 267.85656738]
[272.76797485 269.92745972]
[259.48275757 259.07141113]
[258.13446045 241.62895203]
[246.56555176 232.08116150]
[234.99662781 222.53338623]
[223.42770386 212.98561096]
[211.85877991 203.43783569]
[200.28987122 193.89004517]
[188.72094727 184.34226990]
[173.96473694 186.01261902]
[162.09620667 176.49461365]
[160.44424438 161.00563049]
[148.87532043 151.45783997]
[137.30639648 141.91006470]
[125.73748016 132.36228943]
[114.16856384 122.81450653]
[102.59963989 113.26672363]
[88.17936707 109.13687134]
[73.31009674 111.11295319]
[58.44083405 113.08904266]
[43.57156754 115.06512451]
[32.71818542 126.87967682]
[16.72492218 125.61672211]
[7.86043787 112.24509430]
[12.92480850 97.02236176]
[28.03308105 91.62609863]
[41.59548187 100.19586182]
[56.46474838 98.21977234]
[71.33401489 96.24369049]
[86.20328522 94.26760101]
[89.26449585 79.58329773]
[76.42339325 71.83047485]
[61.26172638 75.40280914]
[48.34946823 67.35742188]
[45.03723526 52.88106918]
[32.19613647 45.12825012]
[19.35503769 37.37543488]
[5.11157227 43.24312973]
[-9.68291092 39.64081573]
[-19.40440941 28.15358353]
[-20.48471642 13.32216740]
[-33.32581329 5.56934929]
[-46.16691208 -2.18346882]
[-60.90376663 3.04712582]
[-75.53686523 -2.46707916]
[-83.15690613 -16.12244415]
[-80.16593933 -31.47132492]
[-67.97620392 -41.26644897]
[-52.34332657 -40.88285446]
[-40.64867020 -30.50166893]
[-38.41409683 -15.02456760]
[-25.57299614 -7.27174950]
[-12.73189831 0.48106858]
[0.89600128 -5.47026348]
[15.58892727 -2.21727633]
[25.66685295 9.19713593]
[27.10785675 24.53433609]
[39.94895554 32.28715134]
[52.79005432 40.03997040]
[67.14320374 36.22910309]
[80.27634430 43.90863800]
[84.17621613 58.98937607]
[97.01731110 66.74219513]
[103.16796112 62.45039749]
[121.61991119 49.57500839]
[118.77458954 34.84734344]
[115.92926788 20.11967850]
[113.08394623 5.39201164]
[110.23862457 -9.33565426]
[107.39330292 -24.06332016]
[97.17875671 -36.14526749]
[102.36136627 -50.10914230]
[99.51604462 -64.83680725]
[88.36846161 -76.86441803]
[93.46873474 -92.45028687]
[109.57014465 -95.56100464]
[120.10894012 -82.99653625]
[114.24371338 -67.68212891]
[117.08903503 -52.95446396]
[127.10006714 -41.92593765]
[122.12097168 -26.90864182]
[124.96629333 -12.18097496]
[127.81161499 2.54669094]
[130.65693665 17.27435684]
[133.50225830 32.00202179]
[136.34757996 46.72969055]
[112.14742279 101.69780731]
[123.71633911 111.24559021]
[135.28526306 120.79336548]
[146.85418701 130.34114075]
[158.42309570 139.88893127]
[169.99201965 149.43670654]
[185.51315308 148.12060547]
[197.10966492 157.96821594]
[198.26872253 172.77334595]
[209.83764648 182.32113647]
[221.40657043 191.86891174]
[232.97547913 201.41668701]
[244.54440308 210.96446228]
[256.11331177 220.51225281]
[267.68225098 230.06002808]
[280.85174561 227.24188232]
[293.06185913 232.44648743]
[299.94357300 243.56805420]
[299.17541504 256.42904663]
[310.60293579 266.14562988]
[322.03045654 275.86221313]
[340.21658325 278.75793457]
[345.45941162 295.50646973]
[357.02835083 305.05426025]
[368.59725952 314.60202026]
[377.20574951 317.64981079]
[380.26458740 324.37588501]
[391.69210815 334.09246826]
[403.33807373 327.04824829]
[416.51379395 323.76019287]
[430.04238892 324.50329590]
[442.72094727 329.19326782]
[453.42742920 337.39566040]
[461.22018433 348.36614990]
[475.51300049 343.81472778]
[489.80581665 339.26333618]
[504.09866333 334.71191406]
[517.35644531 324.14462280]
[531.18084717 333.95895386]
[525.57708740 349.96002197]
[508.65005493 349.00476074]
[494.35723877 353.55615234]
[480.06442261 358.10754395]
[465.77160645 362.65896606]
[465.75390625 375.45193481]
[462.14151001 387.72430420]
[455.22561646 398.48678589]
[464.77340698 410.05572510]
[474.32116699 421.62463379]
[483.86895752 433.19354248]
[493.41674805 444.76248169]
[516.67718506 442.51382446]
[535.56665039 455.93365479]
[541.00585938 478.25408936]
[555.15887451 483.22311401]
[569.31195068 488.19213867]
[583.46496582 493.16116333]
[597.61804199 498.13018799]
[612.64392090 492.50863647]
[626.33294678 500.87463379]
[628.18408203 516.81054688]
[616.77728271 528.09167480]
[600.86285400 526.06408691]
[592.64898682 512.28326416]
[578.49597168 507.31420898]
[564.34289551 502.34518433]
[550.18988037 497.37615967]
[536.03680420 492.40713501]
[533.70501709 495.60913086]
[531.00347900 498.50595093]
[538.56695557 511.45947266]
[546.13043213 524.41302490]
[553.69390869 537.36651611]
[561.25738525 550.32006836]
[568.82086182 563.27355957]
[582.46105957 571.28955078]
[582.19683838 586.18182373]
[589.76031494 599.13537598]
[603.40051270 607.15136719]
[603.13629150 622.04364014]
[610.69976807 634.99713135]
[618.26324463 647.95068359]
[633.35198975 653.40130615]
[638.36151123 668.64221191]
[629.44891357 681.98181152]
[613.45123291 683.18713379]
[602.64044189 671.33355713]
[605.30975342 655.51416016]
[597.74627686 642.56060791]
[590.18280029 629.60711670]
[577.08361816 622.51763916]
[576.80682373 606.69885254]
[569.24334717 593.74530029]
[556.14416504 586.65582275]
[555.86737061 570.83703613]
[548.30389404 557.88354492]
[540.74041748 544.92999268]
[533.17694092 531.97650146]
[525.61346436 519.02294922]
[518.04998779 506.06942749]
[507.86688232 507.60546875]
[497.67691040 505.90066528]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 162]
[6 161]
[7 160]
[8 159]
[9 158]
[16 139]
[17 138]
[18 136]
[19 135]
[20 134]
[23 132]
[24 131]
[25 130]
[28 126]
[29 125]
[30 124]
[31 123]
[32 122]
[33 121]
[34 120]
[37 117]
[38 116]
[39 115]
[40 114]
[41 113]
[42 112]
[43 55]
[44 54]
[45 53]
[46 52]
[56 88]
[57 87]
[60 84]
[61 83]
[62 82]
[66 78]
[67 77]
[68 76]
[90 111]
[91 110]
[92 109]
[93 108]
[94 107]
[95 106]
[97 104]
[98 103]
[145 155]
[146 154]
[147 153]
[148 152]
[165 179]
[166 178]
[167 177]
[168 176]
[169 175]
[181 211]
[182 210]
[183 209]
[184 208]
[185 207]
[186 206]
[188 204]
[189 203]
[191 201]
[192 200]
[193 199]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
