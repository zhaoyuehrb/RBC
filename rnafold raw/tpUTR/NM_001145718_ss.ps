%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 21:15:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGCAGCAGAGGUGAAGCCAAGAAAAUCCAGAUGCCUGUGGGAAUUGUAACACAUAUCAUUCCAAAGUUCGUUACAUCAAAAGUGAUAUCCAGUGACAUCUAACUUUCAUGGAUGUAUGUGACAGUGUUUGUUCAAGUUAAAAAUAAAAGUUUGUUUUCAAUGAAUAAACUGAA\
) } def
/len { sequence length } bind def

/coor [
[79.12618256 130.86904907]
[86.77976227 117.96633911]
[76.51155853 128.90086365]
[66.24335480 139.83540344]
[55.97514343 150.76992798]
[45.70693970 161.70445251]
[35.53729248 172.73071289]
[25.46702576 183.84780884]
[26.65837860 201.28456116]
[15.11005783 213.95018005]
[-1.68783426 214.35314941]
[-11.55691528 225.64921570]
[-4.48022270 239.07624817]
[-2.73568797 254.15341187]
[-6.55924511 268.84167480]
[-15.43378830 281.15454102]
[-28.15911102 289.42681885]
[-43.01421356 292.53976440]
[-57.99007034 290.07232666]
[-71.06131744 282.35824585]
[-80.46017456 270.44079590]
[-84.91552734 255.93167114]
[-83.82482147 240.79315186]
[-77.33556366 227.07258606]
[-66.32538605 216.62556458]
[-52.28330994 210.86495972]
[-37.10841751 210.56983948]
[-22.85298729 215.78013611]
[-12.98390675 204.48406982]
[-15.64037228 191.85578918]
[-10.45138073 179.82789612]
[0.88999701 172.89173889]
[14.34993362 173.77754211]
[24.42020035 162.66044617]
[26.58762741 155.56834412]
[34.77240753 151.43624878]
[45.04061508 140.50172424]
[55.30882263 129.56718445]
[65.57702637 118.63265991]
[75.84523773 107.69812775]
[78.67211914 99.26538086]
[83.89017487 93.61434174]
[89.99044037 91.21494293]
[95.47696686 91.86631012]
[94.13237762 76.92669678]
[92.78778839 61.98708344]
[91.44319916 47.04747009]
[90.09860992 32.10785675]
[86.58280945 26.44488716]
[86.49369812 20.72037125]
[88.98377991 16.60936928]
[88.17633057 1.63111794]
[87.36888123 -13.34713364]
[86.56143188 -28.32538605]
[85.75399017 -43.30363846]
[84.94654083 -58.28189087]
[81.34951019 -66.71553040]
[84.26148224 -73.53578949]
[83.72304535 -88.52612305]
[83.18460083 -103.51645660]
[82.64615631 -118.50679016]
[82.10771179 -133.49711609]
[70.63296509 -150.04431152]
[80.34569550 -166.74160767]
[79.26950073 -181.70294189]
[78.19331360 -196.66429138]
[77.11711884 -211.62562561]
[76.04093170 -226.58697510]
[74.96473694 -241.54832458]
[61.85842896 -258.47488403]
[71.52635956 -276.68917847]
[69.64636230 -291.57089233]
[67.76636505 -306.45260620]
[65.88636017 -321.33432007]
[64.00636292 -336.21603394]
[61.46059418 -350.99844360]
[58.25417709 -365.65173340]
[55.04776001 -380.30502319]
[51.84134293 -394.95831299]
[40.40152359 -406.70831299]
[45.11721039 -422.41482544]
[61.13730621 -425.92031860]
[71.98171234 -413.61865234]
[66.49462891 -398.16473389]
[69.70104980 -383.51144409]
[72.90746307 -368.85815430]
[76.11388397 -354.20486450]
[86.42333984 -365.10049438]
[101.38417053 -364.01718140]
[110.01639557 -351.74996948]
[105.98470306 -337.30194092]
[92.24800873 -331.27673340]
[78.88808441 -338.09603882]
[80.76808167 -323.21432495]
[82.64808655 -308.33261108]
[84.52808380 -293.45089722]
[86.40808105 -278.56915283]
[94.26570129 -274.31155396]
[99.34404755 -266.79067993]
[100.38835144 -257.63729858]
[97.03577423 -248.90827942]
[89.92607880 -242.62451172]
[91.00227356 -227.66316223]
[92.07846069 -212.70182800]
[93.15465546 -197.74047852]
[94.23085022 -182.77912903]
[95.30703735 -167.81779480]
[103.63237000 -161.82290649]
[107.34461975 -152.02336121]
[104.98406219 -141.58790588]
[97.09804535 -134.03556824]
[97.63648987 -119.04523468]
[98.17493439 -104.05490112]
[98.71337891 -89.06456757]
[99.25181580 -74.07423401]
[99.92478943 -59.08933640]
[100.73223877 -44.11108398]
[101.53968811 -29.13283348]
[102.34713745 -14.15458107]
[103.15457916 0.82367033]
[103.96202850 15.80192184]
[105.03822327 30.76326561]
[106.38281250 45.70288086]
[107.72740173 60.64249420]
[109.07199097 75.58210754]
[110.41658020 90.52172089]
[117.87767792 103.53448486]
[130.09158325 112.24198914]
[142.30548096 120.94948578]
[154.51939392 129.65698242]
[166.73329163 138.36448669]
[178.94720459 147.07197571]
[191.16110229 155.77947998]
[203.37501526 164.48698425]
[215.58891296 173.19447327]
[222.17613220 174.21363831]
[226.57875061 177.87353516]
[228.07736206 182.44026184]
[239.97082520 191.58058167]
[255.62771606 193.85490417]
[261.00439453 207.74520874]
[272.89785767 216.88552856]
[284.79132080 226.02584839]
[296.68478394 235.16616821]
[308.57824707 244.30648804]
[320.47171021 253.44680786]
[332.36517334 262.58712769]
[348.68460083 264.20223999]
[355.19815063 279.25234985]
[345.20526123 292.25518799]
[328.98574829 289.83456421]
[323.22485352 274.48059082]
[311.33139038 265.34027100]
[299.43792725 256.19995117]
[287.54446411 247.05963135]
[275.65100098 237.91931152]
[263.75753784 228.77899170]
[251.86405945 219.63867188]
[237.05787659 218.01814270]
[230.83050537 203.47406006]
[218.93704224 194.33374023]
[206.88140869 185.40838623]
[194.66751099 176.70088196]
[182.45359802 167.99339294]
[170.23970032 159.28588867]
[158.02580261 150.57838440]
[145.81188965 141.87089539]
[133.59799194 133.16339111]
[121.38408661 124.45588684]
[109.17018127 115.74839020]
[119.20568085 126.89687347]
[119.17469788 141.89685059]
[109.09323120 153.00378418]
[94.16635895 154.48313904]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 40]
[3 39]
[4 38]
[5 37]
[6 36]
[7 34]
[8 33]
[11 29]
[12 28]
[44 126]
[45 125]
[46 124]
[47 123]
[48 122]
[51 121]
[52 120]
[53 119]
[54 118]
[55 117]
[56 116]
[58 115]
[59 114]
[60 113]
[61 112]
[62 111]
[64 107]
[65 106]
[66 105]
[67 104]
[68 103]
[69 102]
[71 97]
[72 96]
[73 95]
[74 94]
[75 93]
[76 87]
[77 86]
[78 85]
[79 84]
[127 170]
[128 169]
[129 168]
[130 167]
[131 166]
[132 165]
[133 164]
[134 163]
[135 162]
[138 161]
[139 160]
[141 158]
[142 157]
[143 156]
[144 155]
[145 154]
[146 153]
[147 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
