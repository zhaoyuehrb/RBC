%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 01:59:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAUGAUGGAGCAUCAGAUUUUACCUAAUACAGCAGAACUCCUAAAAAGUUACAGCCAUAUGCAGGACAGCAGUACUCAGCAUGGUCUUAUGCACAGGAACUAAAGGAAAAAGAGAUCGAGUCACAAAAAUUCAGGAAGAGGGGGUAAAUGUGGAUUGUAUGGAAUGAAAAAUAAACAUUCUCAAGG\
) } def
/len { sequence length } bind def

/coor [
[79.90366364 145.61598206]
[78.40222168 130.69131470]
[76.90078735 115.76665497]
[69.43845367 116.51737213]
[64.51808167 130.68740845]
[59.59770966 144.85743713]
[54.67733765 159.02748108]
[49.75696564 173.19750977]
[50.27312469 190.14360046]
[34.13218307 195.33073425]
[24.67950821 181.25653076]
[35.58692932 168.27714539]
[40.50730133 154.10710144]
[45.42767334 139.93707275]
[50.34804535 125.76703644]
[55.26841736 111.59700012]
[44.15690994 121.67342377]
[30.52460480 115.41560364]
[20.67181778 104.10531616]
[16.34192848 89.74383545]
[18.30107880 74.87232971]
[26.20261192 62.12220001]
[38.64840698 53.74949646]
[53.43626785 51.23570633]
[67.94959259 55.02562714]
[79.62033844 64.44866180]
[86.38357544 77.83789062]
[93.35398865 91.11995697]
[93.60463715 76.12205505]
[93.85528564 61.12414551]
[94.10593414 46.12623978]
[94.35658264 31.12833595]
[94.10593414 16.13043022]
[93.35427094 1.14927435]
[92.60260773 -13.83188057]
[79.41938019 -25.31618309]
[78.62638855 -42.44420624]
[90.22645569 -54.60873032]
[89.22456360 -69.57523346]
[88.22267914 -84.54174042]
[87.22078705 -99.50823975]
[86.21889496 -114.47474670]
[85.21701050 -129.44125366]
[68.68709564 -135.71458435]
[57.20045090 -149.88209534]
[54.30615234 -168.45573425]
[61.34200668 -186.48832703]
[76.92386627 -198.89123535]
[68.02616882 -210.96728516]
[59.12847137 -223.04333496]
[50.23077774 -235.11938477]
[46.14958572 -236.72941589]
[43.10903168 -239.30303955]
[41.28506470 -242.39082336]
[40.68813705 -245.53251648]
[41.17423630 -248.31246948]
[33.10300064 -260.95584106]
[19.69218445 -262.32904053]
[9.67133522 -271.05294800]
[6.55703354 -283.76861572]
[11.27008152 -295.77337646]
[3.41124225 -308.54986572]
[-4.44759750 -321.32635498]
[-12.30643749 -334.10284424]
[-20.37767220 -346.74624634]
[-28.65904999 -359.25299072]
[-36.94042587 -371.75973511]
[-45.22180557 -384.26647949]
[-63.64757538 -392.41076660]
[-64.04141235 -411.73138428]
[-72.73607635 -423.95443726]
[-88.25313568 -423.97534180]
[-100.77455139 -433.14013672]
[-105.48558807 -447.92480469]
[-100.57475281 -462.64428711]
[-87.93035889 -471.63867188]
[-72.41443634 -471.44943237]
[-59.99317932 -462.14932251]
[-55.44280624 -447.31445312]
[-60.51303101 -432.64907837]
[-51.81836700 -420.42605591]
[-41.60643387 -419.63442993]
[-33.34933090 -413.20932007]
[-29.93164825 -403.08859253]
[-32.71505356 -392.54785156]
[-24.43367767 -380.04110718]
[-16.15229988 -367.53436279]
[-7.87092257 -355.02761841]
[-3.43360877 -353.21310425]
[-0.09806724 -348.58096313]
[0.47005048 -341.96170044]
[8.32888985 -329.18521118]
[16.18773079 -316.40872192]
[24.04656982 -303.63223267]
[40.55020905 -300.44363403]
[49.83218765 -286.02688599]
[45.74638748 -269.02709961]
[53.81762314 -256.38369751]
[62.30682755 -244.01707458]
[71.20452118 -231.94102478]
[80.10221863 -219.86497498]
[88.99991608 -207.78892517]
[86.98101807 -222.65243530]
[84.96212769 -237.51596069]
[76.96120453 -250.20394897]
[74.41117096 -264.98559570]
[77.69844818 -279.62097168]
[86.32489777 -291.89224243]
[98.98330688 -299.93991089]
[113.75545502 -302.54443359]
[128.40283203 -299.31115723]
[140.70585632 -290.73001099]
[148.80014038 -278.10137939]
[151.45912170 -263.33892822]
[148.27987671 -248.67971802]
[139.74417114 -236.34515381]
[127.14687347 -228.20489502]
[119.05898285 -215.57217407]
[110.97108459 -202.93943787]
[124.12533569 -210.14816284]
[137.27958679 -217.35688782]
[150.43383789 -224.56561279]
[153.31405640 -239.93565369]
[165.43284607 -249.81842041]
[181.06806946 -249.54756165]
[192.83728027 -239.25096130]
[195.18339539 -223.79037476]
[186.99865723 -210.46582031]
[172.14764404 -205.56872559]
[157.64256287 -211.41136169]
[144.48831177 -204.20263672]
[131.33406067 -196.99391174]
[118.17981720 -189.78518677]
[123.62767029 -181.51921082]
[126.72842407 -172.29930115]
[127.35941315 -162.76518250]
[125.56622314 -153.55554199]
[121.55396271 -145.26515198]
[115.66807556 -138.40658569]
[108.36620331 -133.37854004]
[100.18350983 -130.44313049]
[101.18540192 -115.47663116]
[102.18729401 -100.51013184]
[103.18917847 -85.54362488]
[104.19107056 -70.57712555]
[105.19296265 -55.61062241]
[115.99197388 -48.56019211]
[120.82479858 -36.39337921]
[117.71586609 -23.47601891]
[107.58376312 -14.58354282]
[108.33542633 0.39761236]
[109.08708954 15.37876701]
[111.09458160 17.36230087]
[112.42922974 20.26837921]
[112.73274994 23.84177208]
[111.74687958 27.70138168]
[109.35448456 31.37898254]
[109.10383606 46.37688828]
[108.85318756 61.37479401]
[108.60254669 76.37269592]
[108.35189819 91.37060547]
[112.19381714 105.87024689]
[119.83806610 118.77627563]
[127.48231506 131.68229675]
[135.12655640 144.58831787]
[142.77081299 157.49433899]
[150.41505432 170.40036011]
[165.83557129 170.85993958]
[178.54673767 179.60235596]
[184.49246216 193.83795166]
[181.77548218 209.02418518]
[171.26278687 220.31518555]
[156.30894470 224.10804749]
[141.68563843 219.19247437]
[132.05915833 207.13700867]
[130.50125122 191.78849792]
[137.50903320 178.04461670]
[129.86479187 165.13859558]
[122.22053528 152.23257446]
[114.57628632 139.32655334]
[106.93203735 126.42052460]
[99.28778839 113.51449585]
[91.82545471 114.26521301]
[93.32688904 129.18988037]
[94.82832336 144.11454773]
[100.86808014 157.84486389]
[89.67604828 167.83177185]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 16]
[5 15]
[6 14]
[7 13]
[8 12]
[28 161]
[29 160]
[30 159]
[31 158]
[32 157]
[33 152]
[34 151]
[35 150]
[38 146]
[39 145]
[40 144]
[41 143]
[42 142]
[43 141]
[48 102]
[49 101]
[50 100]
[51 99]
[56 98]
[57 97]
[61 94]
[62 93]
[63 92]
[64 91]
[65 88]
[66 87]
[67 86]
[68 85]
[70 81]
[71 80]
[119 133]
[120 132]
[121 131]
[122 130]
[162 182]
[163 181]
[164 180]
[165 179]
[166 178]
[167 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
