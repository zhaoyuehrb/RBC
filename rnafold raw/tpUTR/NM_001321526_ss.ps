%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 19:57:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACUGUGAGGAGGAGCCUGUGCUGAGACUUCUCAGCCCCAGAACACAGCUGUGUCCUAGAGCCAGAAGAUGGAGAGGAGGCUGCAAACCCUUAGCUGCUCUAUAAAUAUAAUCAUUGAGGCUUGAUUGUCCCUUGCCAUCUCUUGCUUUUUCCCUUCUUUGAUGUGAUAAACAAGGGGACGAGACGAGUUGUCUUUUCCCCAGCCCAGCAGCA\
) } def
/len { sequence length } bind def

/coor [
[56.79745483 201.88243103]
[53.43857193 186.19494629]
[63.72034073 173.87971497]
[63.72034073 158.87971497]
[63.72034073 143.87971497]
[63.72034073 128.87971497]
[58.54408264 114.80113983]
[48.82750320 103.37362671]
[39.11092377 91.94611359]
[29.39434242 80.51860046]
[19.67776299 69.09108734]
[9.96118164 57.66357422]
[0.24460161 46.23606110]
[-10.80343056 50.33390808]
[-22.51366997 51.04510117]
[-33.87582016 48.33834457]
[-43.91833115 42.47593689]
[-55.20197678 52.35922623]
[-66.48561859 62.24251175]
[-72.01040649 79.80944061]
[-89.34569550 82.54598236]
[-100.48303986 92.59384918]
[-111.62038422 102.64171600]
[-122.75772858 112.68957520]
[-133.89506531 122.73744202]
[-145.03240967 132.78530884]
[-149.56724548 148.54498291]
[-165.54598999 152.23439026]
[-176.53108215 140.05819702]
[-171.22200012 124.54221344]
[-155.08027649 121.64795685]
[-143.94293213 111.60009766]
[-132.80558777 101.55223083]
[-121.66824341 91.50437164]
[-110.53089905 81.45650482]
[-99.39355469 71.40863800]
[-98.45986176 59.34960938]
[-89.26538849 50.88740540]
[-76.36891174 50.95886612]
[-65.08526611 41.07558060]
[-53.80162048 31.19229317]
[-55.54616928 27.84775925]
[-56.96408081 24.35220528]
[-71.80273438 26.54635620]
[-86.64138794 28.74050522]
[-101.48004913 30.93465614]
[-113.98678589 41.54189682]
[-129.33299255 35.76037216]
[-131.73179626 19.53761864]
[-118.71553040 9.56221390]
[-103.67419434 16.09600067]
[-88.83554077 13.90184975]
[-73.99688721 11.70769978]
[-59.15822983 9.51354980]
[-56.76769257 -2.39088011]
[-50.87766266 -13.00868130]
[-42.04354095 -21.33865356]
[-31.09833717 -26.59532547]
[-32.63706207 -41.51619339]
[-34.17578506 -56.43706512]
[-35.71450806 -71.35793304]
[-37.25323486 -86.27880096]
[-46.36536026 -99.21247101]
[-39.97446060 -112.66630554]
[-41.51318359 -127.58717346]
[-43.05191040 -142.50804138]
[-47.04432297 -150.72119141]
[-44.50205231 -157.65899658]
[-45.82157516 -172.60084534]
[-47.14109802 -187.54269409]
[-48.46062088 -202.48455811]
[-49.78014374 -217.42640686]
[-58.70142365 -230.49243164]
[-52.11371231 -243.85099792]
[-53.43323517 -258.79284668]
[-54.75275803 -273.73471069]
[-56.07228088 -288.67654419]
[-59.94369888 -296.94741821]
[-57.29985428 -303.84716797]
[-58.39989090 -318.80679321]
[-59.49992752 -333.76638794]
[-73.22626495 -340.51434326]
[-81.67623138 -353.14346313]
[-82.66370392 -368.20639038]
[-76.02341461 -381.65118408]
[-63.62848663 -389.91140747]
[-64.72852325 -404.87100220]
[-73.45703888 -418.06661987]
[-66.67393494 -431.32702637]
[-67.77397156 -446.28665161]
[-68.87400818 -461.24624634]
[-69.97404480 -476.20587158]
[-71.07408142 -491.16546631]
[-72.17411804 -506.12509155]
[-75.92370605 -514.45190430]
[-73.17885590 -521.31207275]
[-74.05917358 -536.28625488]
[-85.08796692 -544.01562500]
[-89.58641815 -556.50317383]
[-86.12331390 -569.11480713]
[-76.17878723 -577.30639648]
[-76.83918762 -592.29180908]
[-77.49958801 -607.27728271]
[-86.76791382 -620.80615234]
[-79.44264984 -635.47833252]
[-63.05940247 -636.20031738]
[-54.47185135 -622.22943115]
[-62.51413345 -607.93768311]
[-61.85373306 -592.95220947]
[-61.19332886 -577.96679688]
[-48.31502151 -567.14910889]
[-47.22485352 -550.02709961]
[-59.08502579 -537.16656494]
[-58.20471191 -522.19238281]
[-57.21451187 -507.22512817]
[-56.11447144 -492.26550293]
[-55.01443481 -477.30590820]
[-53.91439819 -462.34628296]
[-52.81436157 -447.38668823]
[-51.71432495 -432.42706299]
[-43.06449509 -420.30148315]
[-49.76891327 -405.97106934]
[-48.66887665 -391.01144409]
[-35.19899368 -384.65316772]
[-26.66346741 -372.32431030]
[-25.43696785 -357.27896118]
[-31.94869423 -343.54965210]
[-44.54032135 -334.86642456]
[-43.44028091 -319.90682983]
[-42.34024429 -304.94720459]
[-41.13043213 -289.99606323]
[-39.81090927 -275.05422974]
[-38.49138641 -260.11236572]
[-37.17186356 -245.17053223]
[-28.34496498 -233.17323303]
[-34.83829498 -218.74592590]
[-33.51877213 -203.80407715]
[-32.19924927 -188.86222839]
[-30.87972450 -173.92037964]
[-29.56020164 -158.97853088]
[-28.13104057 -144.04676819]
[-26.59231567 -129.12590027]
[-25.05359268 -114.20502472]
[-16.05152512 -102.33860016]
[-22.33236504 -87.81752777]
[-20.79364014 -72.89665985]
[-19.25491524 -57.97578812]
[-17.71619225 -43.05492020]
[-16.17746735 -28.13405037]
[3.69338989 -20.87572479]
[17.05778694 -4.35553980]
[20.03182983 16.77940178]
[11.67211533 36.51947784]
[21.38869476 47.94699097]
[31.10527611 59.37450790]
[40.82185745 70.80201721]
[50.53843689 82.22953033]
[60.25501633 93.65704346]
[69.97159576 105.08456421]
[68.78656769 84.12596893]
[82.35357666 64.57120514]
[107.73328400 56.54021835]
[135.42048645 66.57047272]
[150.05827332 69.84692383]
[164.69606018 73.12336731]
[178.95974731 65.77988434]
[193.53475952 72.48427582]
[197.24037170 88.09350586]
[187.23397827 100.63349915]
[171.19161987 100.48466492]
[161.41961670 87.76115417]
[146.78182983 84.48471069]
[132.14404297 81.20826721]
[128.45777893 87.73984528]
[117.39902496 107.33458710]
[127.76950836 118.17215729]
[138.13999939 129.00973511]
[148.51048279 139.84730530]
[158.88096619 150.68487549]
[174.01217651 155.30627441]
[177.22113037 169.85108948]
[187.59161377 180.68865967]
[197.96211243 191.52624512]
[208.33259583 202.36381531]
[218.70307922 213.20138550]
[234.64602661 214.99073792]
[243.06501770 228.64724731]
[237.50170898 243.69480896]
[222.22380066 248.59022522]
[208.95120239 239.57814026]
[207.86550903 223.57186890]
[197.49502563 212.73429871]
[187.12452698 201.89672852]
[176.75404358 191.05914307]
[166.38356018 180.22157288]
[151.99412537 176.37536621]
[148.04339600 161.05535889]
[137.67291260 150.21778870]
[127.30242157 139.38021851]
[116.93193817 128.54264832]
[106.56144714 117.70507050]
[99.60117340 120.49873352]
[105.18849945 134.41928101]
[110.77560425 148.33992004]
[96.85488129 153.92681885]
[91.26794434 140.00660706]
[85.68061829 126.08605957]
[78.72034454 128.87971497]
[78.72034454 143.87971497]
[78.72034454 158.87971497]
[78.72034454 173.87971497]
[89.00211334 186.19494629]
[85.64322662 201.88243103]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 211]
[4 210]
[5 209]
[6 208]
[7 159]
[8 158]
[9 157]
[10 156]
[11 155]
[12 154]
[13 153]
[17 41]
[18 40]
[19 39]
[21 36]
[22 35]
[23 34]
[24 33]
[25 32]
[26 31]
[43 54]
[44 53]
[45 52]
[46 51]
[58 149]
[59 148]
[60 147]
[61 146]
[62 145]
[64 143]
[65 142]
[66 141]
[68 140]
[69 139]
[70 138]
[71 137]
[72 136]
[74 134]
[75 133]
[76 132]
[77 131]
[79 130]
[80 129]
[81 128]
[86 123]
[87 122]
[89 120]
[90 119]
[91 118]
[92 117]
[93 116]
[94 115]
[96 114]
[97 113]
[101 110]
[102 109]
[103 108]
[163 173]
[164 172]
[165 171]
[175 201]
[176 200]
[177 199]
[178 198]
[179 197]
[181 195]
[182 194]
[183 193]
[184 192]
[185 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
