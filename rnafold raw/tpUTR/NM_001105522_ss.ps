%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 21:42:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAGAGACAAAUCAGAUAUGUGUUCAUCUGCUGUGGGAACCCCUUUAUCCCAGAAAGCCCUCUUCCUUGUGCCUUAUCAAACAGGACAAAUACGUUCUGUUUUAUGUCUUGAAUUGCAUUCUAAUGUUAUUAAAACUCAUUUAUUGUGUUACUAUUAAAUGUGGUAAAAACACUAA\
) } def
/len { sequence length } bind def

/coor [
[204.00170898 183.91174316]
[200.29470825 175.17710876]
[199.31408691 166.08219910]
[200.95062256 157.42883301]
[187.46093750 150.86921692]
[173.97125244 144.30961609]
[160.48158264 137.75000000]
[146.99189758 131.19039917]
[133.50221252 124.63078308]
[121.98783112 135.29318237]
[107.34176636 140.92886353]
[91.65003967 140.73513794]
[77.14757538 134.73960876]
[66.77888489 145.57890320]
[56.41019440 156.41819763]
[46.04150772 167.25749207]
[35.67281723 178.09678650]
[38.57203293 193.34060669]
[31.92700958 207.36285400]
[18.29289818 214.77168274]
[2.91229391 212.71823120]
[-8.30064869 201.99212646]
[-11.03432465 186.71774292]
[-4.23757887 172.76841736]
[9.47610092 165.50793457]
[24.83352470 167.72810364]
[35.20221329 156.88880920]
[45.57089996 146.04951477]
[55.93959045 135.21022034]
[66.30828094 124.37091827]
[62.13386154 117.18224335]
[59.47277451 109.30687714]
[46.02939987 117.64871216]
[32.97144318 110.48358917]
[17.98620796 111.14895630]
[3.00097179 111.81433105]
[-11.98426342 112.47970581]
[-26.96949959 113.14508057]
[-34.63719940 126.53201294]
[-48.33572388 133.62806702]
[-63.69392776 132.16889954]
[-75.81105804 122.62015533]
[-80.82059479 108.02878571]
[-77.12399292 93.05084229]
[-65.90084076 82.46573639]
[-50.73240280 79.65113831]
[-36.45886993 85.50517273]
[-27.63487244 98.15984344]
[-12.64963722 97.49446869]
[2.33559847 96.82909393]
[17.32083321 96.16372681]
[32.30606842 95.49835205]
[44.67760086 87.20410919]
[58.80740356 94.32164001]
[57.28146744 87.49124146]
[56.93051910 80.10524750]
[57.88164139 72.36965179]
[46.59308243 62.49198151]
[31.11237526 59.22727585]
[26.62930107 45.02335739]
[11.52908611 48.59590530]
[-2.77411652 42.57942581]
[-10.78043175 29.28737831]
[-9.41126823 13.83082581]
[0.80690199 2.15312862]
[15.94498444 -1.25540054]
[30.18207741 4.91588736]
[38.04372787 18.29400635]
[36.50697327 33.73479843]
[51.18024445 36.29298401]
[56.47075272 51.20342255]
[67.75931549 61.08109283]
[74.69476318 58.22634506]
[68.98526764 44.35544968]
[63.27600861 30.48446274]
[77.14709473 24.77543068]
[82.85616302 38.64596176]
[88.56565857 52.51685333]
[95.50109863 49.66210938]
[96.56515503 34.69989777]
[97.62920380 19.73768425]
[98.69326019 4.77547264]
[99.75730896 -10.18673897]
[100.82136536 -25.14895248]
[101.88541412 -40.11116409]
[102.94947052 -55.07337570]
[104.01351929 -70.03559113]
[93.47104645 -81.80979156]
[94.42542267 -97.58523560]
[106.31042480 -108.00263214]
[122.07489777 -106.88153076]
[132.36605835 -94.88704681]
[131.07833862 -79.13530731]
[118.97573090 -68.97153473]
[117.91168213 -54.00932312]
[116.84762573 -39.04711151]
[115.78357697 -24.08489990]
[114.71952057 -9.12268734]
[113.65547180 5.83952522]
[112.59141541 20.80173683]
[111.52736664 35.76395035]
[110.46331787 50.72616196]
[132.46015930 65.40058899]
[142.86355591 87.99758148]
[140.06182861 111.14110565]
[153.55149841 117.70071411]
[167.04118347 124.26032257]
[180.53086853 130.81993103]
[194.02055359 137.37954712]
[207.51023865 143.93914795]
[234.07255554 129.02706909]
[264.94601440 145.33056641]
[278.76568604 139.49819946]
[292.58535767 133.66584778]
[302.29116821 121.17153168]
[317.02542114 123.35133362]
[330.84509277 117.51896667]
[344.66476440 111.68660736]
[358.48446655 105.85424042]
[367.94396973 92.45835876]
[384.24801636 94.22183990]
[390.62438965 109.33057404]
[380.51364136 122.24198151]
[364.31680298 119.67391968]
[350.49713135 125.50628662]
[336.67745972 131.33865356]
[322.85778809 137.17100525]
[314.14044189 149.24815369]
[298.41772461 147.48551941]
[284.59805298 153.31788635]
[270.77838135 159.15025330]
[268.74096680 166.36820984]
[283.66506958 167.87533569]
[298.58914185 169.38246155]
[313.51324463 170.88958740]
[328.20819092 167.87983704]
[341.50881958 174.81472778]
[347.45410156 188.58621216]
[343.37945557 203.02218628]
[331.11105347 211.65274048]
[316.14736938 210.60984802]
[305.19454956 200.36045837]
[291.68508911 193.84169006]
[278.17562866 187.32290649]
[264.66613770 180.80413818]
[262.62875366 188.02209473]
[271.35916138 200.21963501]
[280.08953857 212.41719055]
[288.81994629 224.61473083]
[297.87194824 236.57554626]
[307.23916626 248.29115295]
[316.60638428 260.00674438]
[325.97357178 271.72235107]
[335.34078979 283.43795776]
[344.70800781 295.15356445]
[360.42910767 298.35150146]
[367.60220337 312.70162964]
[360.72473145 327.19577026]
[345.07247925 330.71524048]
[332.65252686 320.56024170]
[332.99240112 304.52078247]
[323.62518311 292.80517578]
[314.25796509 281.08956909]
[304.89077759 269.37396240]
[295.52355957 257.65835571]
[286.15637207 245.94274902]
[282.67977905 245.19804382]
[279.39767456 242.71372986]
[277.13223267 238.60284424]
[276.62240601 233.34513855]
[267.89199829 221.14758301]
[259.16159058 208.95004272]
[250.43119812 196.75250244]
[239.72167969 200.01934814]
[228.86691284 200.05686951]
[218.79096985 197.05683899]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 110]
[5 109]
[6 108]
[7 107]
[8 106]
[9 105]
[13 30]
[14 29]
[15 28]
[16 27]
[17 26]
[32 54]
[34 52]
[35 51]
[36 50]
[37 49]
[38 48]
[57 72]
[58 71]
[60 69]
[79 102]
[80 101]
[81 100]
[82 99]
[83 98]
[84 97]
[85 96]
[86 95]
[87 94]
[112 131]
[113 130]
[114 129]
[116 127]
[117 126]
[118 125]
[119 124]
[146 173]
[147 172]
[148 171]
[149 170]
[150 166]
[151 165]
[152 164]
[153 163]
[154 162]
[155 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
