%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 08:31:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCCACUCUGAGCUGGAGGCGGGUCAAGGCAAAAGGAGUAAUGCAACGCCUGUGAAGCCAGCCCCACGCGCGCACCAGUCGCGUAAGACAACAGCAGUGUCUCCACCUCGGGGACCAAGGACGCCUCCGUGCCUCCAGACCCCGCCUCCUCCAGCCCCUGCACCUGUCAUUUAUUCUUCCACUGCCCAAUAAAUAUUCAUGGCAGACUUUA\
) } def
/len { sequence length } bind def

/coor [
[553.11456299 680.40850830]
[543.52935791 668.87060547]
[533.85931396 657.40362549]
[524.10498047 646.00836182]
[508.29626465 649.35797119]
[492.86676025 644.24829102]
[482.05792236 631.98413086]
[478.89123535 615.85058594]
[484.32403564 600.23327637]
[474.40270996 588.98309326]
[464.48135376 577.73291016]
[457.70062256 574.79577637]
[454.49813843 566.24279785]
[442.46707153 564.99511719]
[434.24728394 555.58270264]
[434.65545654 542.69195557]
[425.07025146 531.15405273]
[415.48504639 519.61608887]
[405.89984131 508.07818604]
[396.31463623 496.54025269]
[386.72943115 485.00231934]
[377.14422607 473.46438599]
[367.55902100 461.92645264]
[357.97381592 450.38851929]
[348.30380249 438.92160034]
[338.54946899 427.52627563]
[319.89303589 422.44116211]
[316.50643921 402.56820679]
[306.42025757 391.46557617]
[296.33407593 380.36291504]
[286.24786377 369.26025391]
[276.16168213 358.15762329]
[265.95437622 358.58819580]
[257.00665283 353.21722412]
[252.39648438 343.61065674]
[253.86312866 332.83496094]
[244.10879517 321.43963623]
[234.35446167 310.04434204]
[224.60012817 298.64904785]
[221.82051086 298.29730225]
[219.01258850 296.82418823]
[216.60391235 294.21337891]
[215.01998901 290.60330200]
[214.63081360 286.28213501]
[205.56535339 274.33151245]
[194.19648743 275.26660156]
[183.67881775 270.54931641]
[176.67198181 261.24575806]
[175.00866699 249.59709167]
[179.21649170 238.48008728]
[170.50744629 226.26728821]
[161.79840088 214.05448914]
[152.36286926 216.97399902]
[142.47764587 217.38830566]
[132.79766846 215.26127625]
[123.96649933 210.72543335]
[116.57350922 204.07369995]
[111.11459351 195.74060059]
[107.95890045 186.27375793]
[107.32385254 176.29797363]
[109.26022339 166.47399902]
[113.64817047 157.45475769]
[120.20463562 149.84193420]
[112.60903931 136.90721130]
[105.01344299 123.97248840]
[97.41784668 111.03777313]
[87.57975006 99.71470642]
[75.83259583 90.38709259]
[64.08544159 81.05947876]
[52.33829117 71.73186493]
[40.59114075 62.40424728]
[28.77552032 53.16351318]
[13.13688946 55.44578934]
[0.51499957 45.93456268]
[-1.60180640 30.27267456]
[8.04233551 17.75204849]
[23.72572708 15.80094814]
[36.14368820 25.57692528]
[37.92886734 41.28006744]
[45.14504623 42.87114716]
[49.91875458 50.65709305]
[61.66590881 59.98471069]
[73.41306305 69.31232452]
[85.16020966 78.63993835]
[96.90736389 87.96755981]
[103.01376343 83.61303711]
[121.33296967 70.54946899]
[116.34151459 56.40431976]
[111.35005188 42.25916672]
[106.35859680 28.11401367]
[101.36713409 13.96886158]
[86.66334534 8.64603519]
[78.86579895 -4.90875340]
[81.65626526 -20.29534912]
[93.71716309 -30.24867058]
[109.35372162 -30.06906509]
[121.18281555 -19.84133530]
[123.61912537 -4.39470434]
[115.51229095 8.97740269]
[120.50374603 23.12255478]
[125.49520874 37.26770782]
[130.48666382 51.41286087]
[135.47811890 65.55801392]
[150.03099060 69.19312286]
[160.57835388 79.85863495]
[164.05111694 94.45109558]
[159.43878174 108.72437286]
[148.08343506 118.52520752]
[133.28929138 121.00173950]
[119.36115265 115.43334961]
[110.35256958 103.44217682]
[117.94816589 116.37689972]
[125.54375458 129.31161499]
[133.13935852 142.24633789]
[153.61450195 140.92150879]
[171.85795593 150.14260864]
[182.85079956 167.28578186]
[183.61305237 187.55989075]
[174.01119995 205.34544373]
[182.72024536 217.55824280]
[191.42929077 229.77104187]
[210.22094727 232.18617249]
[221.09208679 247.31144714]
[217.51597595 265.26605225]
[226.58143616 277.21667480]
[235.99543762 288.89471436]
[245.74977112 300.29000854]
[255.50410461 311.68533325]
[265.25842285 323.08062744]
[284.55194092 328.92556763]
[287.26434326 348.07144165]
[297.35052490 359.17407227]
[307.43670654 370.27673340]
[317.52288818 381.37939453]
[327.60906982 392.48202515]
[338.48361206 392.37429810]
[347.43829346 398.14950562]
[351.64831543 407.69857788]
[349.94476318 417.77194214]
[359.69909668 429.16726685]
[367.65573120 433.65069580]
[369.51174927 440.80331421]
[379.09695435 452.34124756]
[388.68215942 463.87918091]
[398.26736450 475.41711426]
[407.85256958 486.95504761]
[417.43777466 498.49298096]
[427.02297974 510.03091431]
[436.60818481 521.56884766]
[446.19338989 533.10675049]
[463.60980225 539.08807373]
[465.89346313 556.48846436]
[475.73156738 567.81152344]
[485.65289307 579.06176758]
[495.57424927 590.31195068]
[509.12292480 586.83734131]
[522.78173828 589.52612305]
[533.89648438 597.79766846]
[540.33227539 609.99218750]
[540.88378906 623.70361328]
[535.50024414 636.25402832]
[545.25457764 647.64929199]
[553.21124268 652.13275146]
[555.06726074 659.28540039]
[564.65246582 670.82330322]
[573.62646484 666.13903809]
[583.25555420 663.02996826]
[593.26574707 661.58306885]
[603.37231445 661.83789062]
[613.28820801 663.78582764]
[622.73187256 667.37005615]
[631.43560791 672.48730469]
[639.15283203 678.99090576]
[645.66516113 686.69494629]
[650.78875732 695.37963867]
[654.37927246 704.79736328]
[656.33612061 714.68011475]
[656.60510254 724.74670410]
[655.18005371 734.71105957]
[652.10296631 744.29034424]
[647.46264648 753.21276855]
[641.39221191 761.22558594]
[634.06542969 768.10186768]
[641.85095215 780.92315674]
[649.63653564 793.74444580]
[657.42205811 806.56573486]
[665.20758057 819.38702393]
[680.22552490 817.03540039]
[694.99902344 820.61480713]
[707.27526855 829.57928467]
[715.18218994 842.56195068]
[717.51403809 857.58294678]
[713.91522217 872.35174561]
[704.93457031 884.61614990]
[691.94152832 892.50598145]
[676.91748047 894.81811523]
[662.15344238 891.19989014]
[649.90081787 882.20306396]
[642.02807617 869.19970703]
[639.73577881 854.17260742]
[643.37341309 839.41333008]
[652.38629150 827.17254639]
[644.60076904 814.35125732]
[636.81524658 801.52996826]
[629.02966309 788.70867920]
[621.24414062 775.88739014]
[601.53863525 780.93939209]
[581.26165771 779.07122803]
[562.77459717 770.48681641]
[548.23498535 756.17321777]
[539.34454346 737.78680420]
[537.15032959 717.46185303]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 165]
[2 164]
[3 162]
[4 161]
[9 155]
[10 154]
[11 153]
[13 152]
[16 150]
[17 149]
[18 148]
[19 147]
[20 146]
[21 145]
[22 144]
[23 143]
[24 142]
[25 140]
[26 139]
[28 135]
[29 134]
[30 133]
[31 132]
[32 131]
[36 129]
[37 128]
[38 127]
[39 126]
[44 125]
[45 124]
[50 121]
[51 120]
[52 119]
[63 114]
[64 113]
[65 112]
[66 111]
[67 85]
[68 84]
[69 83]
[70 82]
[71 81]
[72 79]
[87 103]
[88 102]
[89 101]
[90 100]
[91 99]
[183 206]
[184 205]
[185 204]
[186 203]
[187 202]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
