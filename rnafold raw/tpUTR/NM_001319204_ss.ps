%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 19:01:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCACAGCGGGGCCCCAGGGCUACCCUCCCCCAGGAGGUCGACCCCAAAGCCCCUUGCUCUCCCCUGCCCUGCUGCCGCCUCCCAGCCUGGGGGGUCGUGGCAGAUAAUCAGCCUCUUAAAGCUGCCUGUAGUUAGGAAAUAAAACCUUUCAAAUUUCACAUCCACCUCUGACUUUGAAUGUAAACUGUGUGAAUAAAGUAAAAAUACGUAGCCGUCAAAUAACAGC\
) } def
/len { sequence length } bind def

/coor [
[103.37604523 234.21844482]
[116.45391083 226.51559448]
[113.99567413 211.71839905]
[111.53743744 196.92120361]
[108.97776031 182.14122009]
[106.31676483 167.37913513]
[91.78038788 166.24375916]
[78.02349854 162.05227661]
[65.67115021 155.08482361]
[55.26502609 145.74548340]
[43.59274292 155.16662598]
[31.92046165 164.58775330]
[20.24817848 174.00889587]
[8.57589436 183.43003845]
[10.84293652 198.55642700]
[5.27102757 212.69328308]
[-6.55026484 222.08068848]
[-21.38390160 224.27595520]
[-35.23143387 218.78855896]
[-46.90371704 228.20970154]
[-58.57600021 237.63084412]
[-56.30895996 252.75723267]
[-61.88086700 266.89407349]
[-73.70216370 276.28149414]
[-88.53579712 278.47674561]
[-102.38333130 272.98937988]
[-114.05561066 282.41052246]
[-125.72789764 291.83163452]
[-137.40017700 301.25277710]
[-149.07246399 310.67391968]
[-154.46583557 326.16079712]
[-170.62306213 328.96722412]
[-180.92297363 316.20620728]
[-174.76989746 301.00515747]
[-158.49359131 299.00164795]
[-146.82131958 289.58050537]
[-135.14903259 280.15936279]
[-123.47674561 270.73822021]
[-111.80446625 261.31707764]
[-114.24585724 246.62338257]
[-108.96951294 232.58712769]
[-97.29875183 223.01321411]
[-82.30439758 220.55027771]
[-67.99713898 225.95855713]
[-56.32485199 216.53741455]
[-44.65256882 207.11628723]
[-47.09395981 192.42256165]
[-41.81761932 178.38632202]
[-30.14685822 168.81240845]
[-15.15250301 166.34947205]
[-0.84524143 171.75775146]
[10.82704163 162.33660889]
[22.49932480 152.91548157]
[34.17160797 143.49433899]
[45.84389114 134.07319641]
[40.03731918 122.32363129]
[36.74663925 109.63740540]
[36.10991669 96.54682159]
[21.32992744 93.98714447]
[10.29505062 104.89636993]
[-5.04967213 107.20269012]
[-18.80388260 100.01927948]
[-25.67880440 86.10831451]
[-23.03089142 70.81883240]
[-11.87832069 60.02996063]
[3.49051833 57.89023590]
[17.16599274 65.22242737]
[23.88960266 79.20716095]
[38.66959000 81.76683044]
[44.08388901 68.89926147]
[52.16008377 57.51223755]
[42.18957138 46.30559540]
[32.21905518 35.09895325]
[22.24854088 23.89231110]
[12.27802658 12.68566799]
[2.30751181 1.47902560]
[-7.66300297 -9.72761726]
[-22.61660194 -14.89486599]
[-25.29582024 -29.54652214]
[-35.26633453 -40.75316620]
[-45.23685074 -51.95980835]
[-55.20736313 -63.16645050]
[-65.17787933 -74.37309265]
[-75.14839172 -85.57973480]
[-85.11891174 -96.78637695]
[-95.08942413 -107.99301910]
[-110.13498688 -115.80757904]
[-106.79084778 -132.42843628]
[-89.89379120 -133.81611633]
[-83.88278198 -117.96353912]
[-73.91226196 -106.75689697]
[-63.94174957 -95.55024719]
[-53.97123718 -84.34360504]
[-44.00072098 -73.13696289]
[-34.03020859 -61.93032455]
[-24.05969238 -50.72367859]
[-14.08917809 -39.51703644]
[0.15126255 -35.15136337]
[3.54363990 -19.69813156]
[13.51415443 -8.49148941]
[23.48466873 2.71515369]
[33.45518494 13.92179680]
[43.42569733 25.12843895]
[53.39621353 36.33508301]
[63.36672592 47.54172516]
[70.36421967 41.27811432]
[78.41392517 35.97122955]
[87.38119507 31.79486275]
[97.10309601 28.90325928]
[107.39138794 27.42659187]
[118.03613281 27.46687317]
[119.67907715 12.55712032]
[121.32202148 -2.35263276]
[122.96496582 -17.26238632]
[111.39572906 -27.60319519]
[108.14710999 -42.77639771]
[114.46826172 -56.94758606]
[127.92858124 -64.66765594]
[143.35229492 -62.96807098]
[154.80868530 -52.50236511]
[157.89251709 -37.29481506]
[151.41799927 -23.19303131]
[137.87472534 -15.61943913]
[136.23178101 -0.70968610]
[134.58882141 14.20006657]
[132.94587708 29.10981941]
[147.26786804 33.56858826]
[154.37849426 20.36104774]
[161.48910522 7.15350771]
[168.59973145 -6.05403233]
[167.57177734 -22.42093086]
[181.37979126 -31.26799202]
[195.81929016 -23.49411964]
[196.03613281 -7.09640694]
[181.80726624 1.05658638]
[174.69665527 14.26412582]
[167.58602905 27.47166634]
[160.47541809 40.67920685]
[163.93978882 47.33112717]
[176.51197815 39.14943314]
[189.08416748 30.96773720]
[201.65635681 22.78604317]
[214.22854614 14.60434914]
[226.80072021 6.42265463]
[235.17056274 -6.02507019]
[249.54846191 -10.30011272]
[263.35958862 -4.44755030]
[270.28833008 8.85631561]
[267.16619873 23.52779770]
[255.42097473 32.85782242]
[240.42367554 32.57993317]
[226.51264954 38.19094086]
[212.60163879 43.80194855]
[198.69061279 49.41295624]
[184.77958679 55.02396393]
[170.86856079 60.63496780]
[174.33294678 67.28688812]
[189.23107910 69.03206635]
[204.12921143 70.77724457]
[219.02734375 72.52242279]
[233.92547607 74.26760864]
[248.82360840 76.01278687]
[263.72174072 77.75796509]
[271.17816162 64.54141235]
[283.09451294 55.21167374]
[297.63568115 51.16593170]
[312.57748413 52.99069595]
[325.64682007 60.37698746]
[334.86746216 72.17213440]
[338.85879517 86.55957794]
[347.44735718 73.89089966]
[360.94503784 66.67487335]
[376.25018311 66.56967926]
[389.84579468 73.59948730]
[398.60766602 86.14891052]
[400.52239990 101.33418274]
[395.15002441 115.66582489]
[383.72506714 125.85054779]
[368.87286377 129.54795837]
[354.00637817 125.90843964]
[342.54180908 115.76831818]
[337.11361694 101.45771027]
[329.90524292 114.53320312]
[318.20828247 123.87805176]
[303.78570557 128.04391479]
[288.82669067 126.36607361]
[275.61419678 119.06924438]
[266.17666626 107.23809814]
[261.97656250 92.65609741]
[247.07843018 90.91091919]
[232.18029785 89.16574097]
[217.28216553 87.42055511]
[202.38403320 85.67537689]
[187.48590088 83.93019867]
[172.58776855 82.18502045]
[173.29591370 97.81559753]
[170.73913574 112.95147705]
[165.15487671 126.93151093]
[156.91003418 139.17150879]
[146.47932434 149.18862915]
[155.82017517 160.92526245]
[165.16102600 172.66189575]
[180.61054993 178.16137695]
[183.30609131 194.33746338]
[170.47470093 204.54960632]
[155.31622314 198.29240417]
[153.42439270 182.00274658]
[144.08354187 170.26611328]
[134.74269104 158.52947998]
[121.07884979 164.71813965]
[123.73984528 179.48020935]
[128.33656311 187.35861206]
[126.33464050 194.46296692]
[128.79287720 209.26016235]
[131.25111389 224.05735779]
[146.11708069 227.11795044]
[158.87145996 235.34535217]
[167.78932190 247.62689209]
[171.66459656 262.30157471]
[169.97317505 277.38479614]
[162.94381714 290.83666992]
[151.52719116 300.83792114]
[137.26730347 306.03598022]
[122.09266663 305.72784424]
[108.05554199 299.95516968]
[97.05432892 289.49871826]
[90.57685852 275.77255249]
[89.49915314 260.63311768]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 215]
[3 214]
[4 213]
[5 211]
[6 210]
[10 55]
[11 54]
[12 53]
[13 52]
[14 51]
[19 46]
[20 45]
[21 44]
[26 39]
[27 38]
[28 37]
[29 36]
[30 35]
[58 69]
[59 68]
[71 105]
[72 104]
[73 103]
[74 102]
[75 101]
[76 100]
[77 99]
[79 97]
[80 96]
[81 95]
[82 94]
[83 93]
[84 92]
[85 91]
[86 90]
[111 126]
[112 125]
[113 124]
[114 123]
[127 138]
[128 137]
[129 136]
[130 135]
[157 195]
[158 194]
[159 193]
[160 192]
[161 191]
[162 190]
[163 189]
[170 182]
[200 209]
[201 208]
[202 207]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
