%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 00:14:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUUUGACUUGUGUUUUAUUUUCACCACCAGACCCAUUCCUUCUGUAGCUCAGGAGAGCACCCCUCCACCACAUUUGCUUGCAAUAUCCUAGAAUCUUUGUGCUCUUGCUGCAGUUCCCUUUGGGUUCCAUGUUUUCCUUGUUCCCUUCCAUGCCUAGCUGGAUUGCAGAGUUAAGUUUAUGAUUAUGAAAUAAAAACUAAGUAACAA\
) } def
/len { sequence length } bind def

/coor [
[74.61445618 468.66336060]
[63.66685867 457.26486206]
[64.06922150 441.46569824]
[75.58283234 430.63922119]
[75.80615997 415.64086914]
[76.02948761 400.64254761]
[73.40491486 396.65246582]
[73.25902557 390.97128296]
[76.48938751 385.20272827]
[77.15917206 370.21771240]
[77.82895660 355.23266602]
[78.49874115 340.24761963]
[79.16852570 325.26257324]
[76.32683563 318.44006348]
[79.96148682 310.05990601]
[80.85430145 295.08651733]
[81.74711609 280.11309814]
[82.63993073 265.13970947]
[83.53274536 250.16629028]
[73.48493195 239.23117065]
[74.17707062 224.03327942]
[85.71496582 213.56835938]
[86.60778046 198.59495544]
[87.50059509 183.62153625]
[88.39340973 168.64813232]
[89.28623199 153.67472839]
[74.05718994 148.19473267]
[61.09663773 138.50051880]
[51.53784561 125.43975830]
[46.21665955 110.15451050]
[45.59836960 93.98133087]
[49.73704147 78.33444214]
[58.27077866 64.58201599]
[48.27260590 53.40003967]
[38.27443314 42.21806717]
[28.27626228 31.03609085]
[18.27808952 19.85411644]
[8.27991772 8.67214203]
[-6.86010361 14.08398819]
[-22.87926674 13.27347660]
[-37.32613373 6.39425707]
[-48.00125122 -5.47358656]
[-53.29198074 -20.49301147]
[-52.41607666 -36.35433960]
[-45.53719711 -50.63044357]
[-55.70074463 -61.66231918]
[-65.86428833 -72.69419861]
[-76.02783966 -83.72607422]
[-86.19138336 -94.75794983]
[-96.35492706 -105.78982544]
[-106.51847839 -116.82170868]
[-110.70658875 -117.96787262]
[-113.98263550 -120.16606140]
[-116.12789917 -123.00035858]
[-117.08119202 -126.02655029]
[-116.93444061 -128.82594299]
[-126.42333984 -140.44320679]
[-135.91224670 -152.06047058]
[-145.40113831 -163.67773438]
[-154.89004517 -175.29499817]
[-164.37893677 -186.91226196]
[-173.86782837 -198.52952576]
[-183.35673523 -210.14678955]
[-197.45578003 -202.78900146]
[-212.76599121 -198.50608826]
[-228.62541199 -197.48088074]
[-244.34880066 -199.75543213]
[-259.25726318 -205.22923279]
[-272.70758057 -213.66369629]
[-284.11990356 -224.69258118]
[-293.00283813 -237.83782959]
[-298.97451782 -252.53031921]
[-301.77911377 -268.13452148]
[-301.29763794 -283.97598267]
[-297.55322266 -299.37045288]
[-290.70974731 -313.65344238]
[-281.06491089 -326.20895386]
[-290.89547729 -337.53854370]
[-300.72607422 -348.86813354]
[-316.39508057 -353.70693970]
[-319.77478027 -369.75402832]
[-307.38839722 -380.50158691]
[-291.97799683 -374.89340210]
[-289.39645386 -358.69873047]
[-279.56588745 -347.36914062]
[-269.73529053 -336.03952026]
[-257.49649048 -343.12371826]
[-244.15507507 -347.82498169]
[-230.17033386 -349.97985840]
[-216.02400208 -349.51245117]
[-202.20365906 -346.43731689]
[-189.18594360 -340.85891724]
[-177.42013550 -332.96804810]
[-167.31259155 -323.03530884]
[-159.21276855 -311.40194702]
[-153.40110779 -298.46792603]
[-150.07936096 -284.67840576]
[-149.36351013 -270.50823975]
[-151.27984619 -256.44567871]
[-155.76385498 -242.97561646]
[-162.66252136 -230.56275940]
[-171.73947144 -219.63569641]
[-162.25056458 -208.01843262]
[-152.76167297 -196.40116882]
[-143.27278137 -184.78390503]
[-133.78387451 -173.16664124]
[-124.29497528 -161.54937744]
[-114.80607605 -149.93211365]
[-105.31718445 -138.31484985]
[-95.48660278 -126.98525238]
[-85.32305145 -115.95337677]
[-75.15950775 -104.92150116]
[-64.99595642 -93.88961792]
[-54.83241272 -82.85774231]
[-44.66886520 -71.82586670]
[-34.50531769 -60.79398727]
[-21.52472687 -66.12723541]
[-7.47345591 -66.71060181]
[5.96148729 -62.45363235]
[17.16012764 -53.84824371]
[24.76485062 -41.91195679]
[27.84497643 -28.06760979]
[26.01061440 -13.97376919]
[19.46189117 -1.32602954]
[29.46006393 9.85594463]
[39.45823669 21.03792000]
[49.45640945 32.21989441]
[59.45457840 43.40186691]
[69.45275116 54.58384323]
[77.56248474 49.70207977]
[86.44550323 46.26552963]
[95.84473419 44.39531708]
[105.48441315 44.16693497]
[115.07815552 45.60738754]
[124.33747864 48.69380951]
[132.98046875 53.35353851]
[140.74032593 59.46572113]
[147.37368774 66.86437225]
[152.66809082 75.34285736]
[156.44888306 84.65961456]
[158.58483887 94.54505920]
[173.55117798 93.54080200]
[188.51751709 92.53653717]
[203.48387146 91.53227997]
[208.28120422 82.00289154]
[216.53829956 75.37509918]
[226.72328186 72.79254150]
[236.98191833 74.65624237]
[245.47509766 80.56397247]
[250.70857239 89.39469910]
[265.70483398 89.05972290]
[280.70108032 88.72474670]
[295.69735718 88.38977051]
[304.20697021 85.06949615]
[310.91900635 88.16311646]
[325.91857910 88.05145264]
[341.71224976 81.88736725]
[352.00756836 95.35743713]
[341.91394043 108.97929382]
[326.03024292 103.05103302]
[311.03067017 103.16270447]
[296.03231812 103.38603210]
[281.03607178 103.72100830]
[266.03979492 104.05598450]
[251.04354858 104.39096069]
[238.64892578 119.42052460]
[218.89227295 120.50576782]
[204.48812866 106.49862671]
[189.52177429 107.50288391]
[174.55543518 108.50714111]
[159.58909607 109.51140594]
[155.40208435 123.91518402]
[167.49783325 132.78608704]
[179.59358215 141.65698242]
[191.68933105 150.52787781]
[203.78509521 159.39877319]
[219.36561584 156.74876404]
[232.20803833 165.96005249]
[234.69317627 181.56773376]
[225.34663391 194.31204224]
[209.71354675 196.63201904]
[197.06875610 187.15126038]
[194.91419983 171.49452209]
[182.81843567 162.62362671]
[170.72268677 153.75273132]
[158.62693787 144.88183594]
[146.53118896 136.01094055]
[126.97688293 149.96885681]
[104.25963593 154.56755066]
[103.36682129 169.54095459]
[102.47399902 184.51435852]
[101.58118439 199.48776245]
[100.68836975 214.46116638]
[110.90095520 226.22300720]
[109.78221130 241.39546204]
[98.50615692 251.05911255]
[97.61333466 266.03250122]
[96.72052002 281.00592041]
[95.82770538 295.97933960]
[94.93489075 310.95272827]
[94.15356445 325.93237305]
[93.48377991 340.91741943]
[92.81399536 355.90243530]
[92.14421082 370.88748169]
[91.47442627 385.87252808]
[91.02782440 400.86587524]
[90.80449677 415.86419678]
[90.58116913 430.86254883]
[101.76731873 442.02700806]
[101.69910431 457.83117676]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 208]
[5 207]
[6 206]
[9 205]
[10 204]
[11 203]
[12 202]
[13 201]
[15 200]
[16 199]
[17 198]
[18 197]
[19 196]
[22 193]
[23 192]
[24 191]
[25 190]
[26 189]
[33 129]
[34 128]
[35 127]
[36 126]
[37 125]
[38 124]
[45 116]
[46 115]
[47 114]
[48 113]
[49 112]
[50 111]
[51 110]
[56 109]
[57 108]
[58 107]
[59 106]
[60 105]
[61 104]
[62 103]
[63 102]
[77 86]
[78 85]
[79 84]
[141 171]
[142 170]
[143 169]
[144 168]
[150 165]
[151 164]
[152 163]
[153 162]
[155 161]
[156 160]
[172 187]
[173 186]
[174 185]
[175 184]
[176 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
