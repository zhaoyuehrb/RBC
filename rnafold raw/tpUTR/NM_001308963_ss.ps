%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 11:49:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACUUUUCCAAUUAAAAUCCUCAGUUGUCACGCAGAAGAAGGUUAAGCUGUAUUUGAUUGCCAGUUUUACUGAAAAUGCUUAGUAUUUUACAGUAUCACCAAAUAUAUUUUGUUUAGCCAAGGUAUAGGAAAAAUAAAAUAAAUUGUAUAGGUUGACUUUUUUCUAAAAUGUCUUUAUUGGAUUGAAUGAAUGUUUAUACCUGAAAAAAAAAGGUUCAAAAA\
) } def
/len { sequence length } bind def

/coor [
[227.56571960 678.51037598]
[212.56652832 678.35504150]
[198.19087219 674.07244873]
[185.55195618 665.99420166]
[175.62850952 654.74591064]
[169.18893433 641.19848633]
[166.73191833 626.40112305]
[168.44770813 611.49957275]
[174.20344543 597.64776611]
[183.55343628 585.91839600]
[195.77362061 577.21972656]
[209.91773987 572.22534180]
[224.89051819 571.32196045]
[239.53250122 574.57958984]
[252.70988464 581.74597168]
[263.39929199 592.26220703]
[258.62359619 578.04278564]
[253.84788513 563.82330322]
[249.07217407 549.60388184]
[244.29646301 535.38439941]
[229.39546204 534.44140625]
[215.95433044 527.84735107]
[206.03500366 516.57916260]
[201.17242432 502.33334351]
[202.13702393 487.27072144]
[208.81289673 473.68853760]
[220.21069336 463.67025757]
[208.82391357 454.06866455]
[211.76487732 438.52322388]
[206.98916626 424.30377197]
[191.17472839 419.88650513]
[181.01008606 406.78012085]
[180.66014099 390.03149414]
[190.46102905 376.24093628]
[185.48547363 362.09017944]
[180.50993347 347.93942261]
[175.53437805 333.78866577]
[170.55882263 319.63790894]
[165.58326721 305.48715210]
[160.60772705 291.33639526]
[155.63217163 277.18563843]
[150.65661621 263.03488159]
[145.68107605 248.88414001]
[140.70552063 234.73338318]
[135.72996521 220.58262634]
[130.75440979 206.43186951]
[119.23349762 196.99165344]
[121.95517731 181.40631104]
[116.97962189 167.25555420]
[112.00407410 153.10479736]
[107.02851868 138.95404053]
[102.05297089 124.80328369]
[97.07742310 110.65252686]
[94.65964508 125.45639038]
[92.28813934 140.26774597]
[83.53847504 152.45146179]
[70.26110840 159.43083191]
[55.26408768 159.72978210]
[41.71913910 153.28506470]
[32.49089050 141.45968628]
[29.53103447 126.75461578]
[33.46554947 112.27982330]
[43.46374130 101.09560394]
[58.08389282 104.44987488]
[46.86162186 94.49694824]
[31.30351830 95.26058197]
[20.06432343 85.00704193]
[19.43219566 70.17005920]
[8.20992661 60.21713638]
[-3.01234365 50.26421356]
[-14.23461342 40.31129074]
[-25.45688438 30.35836983]
[-36.74898148 20.48474312]
[-48.11034775 10.69090176]
[-59.47171783 0.89706010]
[-70.83308411 -8.89678192]
[-82.19445038 -18.69062424]
[-93.55581665 -28.48446465]
[-104.91718292 -38.27830887]
[-120.86192322 -44.04039383]
[-119.73896790 -60.95710754]
[-103.17249298 -64.56105042]
[-95.12334442 -49.63967514]
[-83.76197815 -39.84583282]
[-72.40061188 -30.05199051]
[-61.03924179 -20.25814819]
[-49.67787552 -10.46430683]
[-38.31650925 -0.67046517]
[-26.95514107 9.12337685]
[-19.84281158 11.10810757]
[-15.50396156 19.13610077]
[-4.28169155 29.08902359]
[6.94057846 39.04194641]
[18.16284752 48.99486542]
[29.38511848 58.94778824]
[44.19136429 57.80295181]
[55.71412659 67.73676300]
[56.81454468 83.27468109]
[68.03681183 93.22760010]
[75.29696655 91.34606171]
[89.81726837 87.58296967]
[97.07742310 85.70143127]
[102.05297089 71.55067444]
[107.02851868 57.39991760]
[104.30683899 41.81456757]
[115.82776642 32.37435532]
[120.80331421 18.22360039]
[125.77886963 4.07284498]
[130.75440979 -10.07791138]
[135.72996521 -24.22866631]
[140.70552063 -38.37942123]
[145.68107605 -52.53017807]
[150.65661621 -66.68093109]
[155.63217163 -80.83168793]
[160.60772705 -94.98244476]
[154.02287292 -109.09901428]
[159.27037048 -123.37901306]
[172.76895142 -129.56967163]
[177.74449158 -143.72042847]
[168.81654358 -156.41180420]
[169.08715820 -171.92652893]
[178.45227051 -184.29884338]
[193.31080627 -188.77136230]
[207.94937134 -183.62428284]
[216.73912048 -170.83679199]
[216.30021667 -155.32592773]
[206.80143738 -143.05593872]
[191.89524841 -138.74487305]
[186.91969299 -124.59411621]
[193.57345581 -111.31770325]
[188.72911072 -96.89594269]
[174.75848389 -90.00689697]
[169.78292847 -75.85614014]
[164.80737305 -61.70538330]
[159.83183289 -47.55462646]
[154.85627747 -33.40387344]
[149.88072205 -19.25311661]
[144.90516663 -5.10236025]
[139.92962646 9.04839611]
[134.95407104 23.19915199]
[129.97851562 37.34990692]
[133.05609131 51.92309570]
[121.17927551 62.37546539]
[116.20372772 76.52622223]
[111.22817230 90.67697906]
[111.22817230 105.67697906]
[116.20372772 119.82773590]
[121.17927551 133.97848511]
[126.15483093 148.12924194]
[131.13038635 162.27999878]
[136.10592651 176.43075562]
[147.98274231 186.88313293]
[144.90516663 201.45631409]
[149.88072205 215.60707092]
[154.85627747 229.75782776]
[159.83183289 243.90858459]
[164.80737305 258.05932617]
[169.78292847 272.21008301]
[174.75848389 286.36083984]
[179.73402405 300.51159668]
[184.70957947 314.66235352]
[189.68513489 328.81311035]
[194.66067505 342.96386719]
[199.63623047 357.11462402]
[204.61178589 371.26538086]
[218.07133484 374.21408081]
[228.23715210 383.35412598]
[232.52706909 396.22009277]
[229.92263794 409.41970825]
[221.20860291 419.52804565]
[225.98431396 433.74749756]
[237.71270752 444.36614990]
[234.43014526 458.89453125]
[249.56452942 460.00177002]
[263.08554077 466.80068970]
[272.94680786 478.22738647]
[277.66915894 492.52026367]
[276.56259155 507.49157715]
[269.82675171 520.86224365]
[258.51589966 530.60870361]
[263.29162598 544.82818604]
[268.06732178 559.04760742]
[272.84304810 573.26702881]
[277.61874390 587.48651123]
[282.64938354 590.72692871]
[285.74118042 595.26251221]
[286.70477295 600.16595459]
[285.74032593 604.57043457]
[293.75271606 617.25122070]
[301.76513672 629.93194580]
[309.77752686 642.61267090]
[317.78994751 655.29345703]
[331.70242310 662.82690430]
[331.95983887 677.71929932]
[339.97225952 690.40002441]
[347.98468018 703.08081055]
[363.04843140 700.84405518]
[377.71786499 704.93395996]
[389.45144653 714.64184570]
[396.21618652 728.28582764]
[396.84011841 743.50195312]
[391.21511841 757.65399170]
[380.31573486 768.28991699]
[366.03039551 773.56707764]
[350.83407593 772.57116699]
[337.35964966 765.47473145]
[327.94165039 753.50720215]
[324.21179199 738.74212646]
[326.81628418 723.73754883]
[335.30392456 711.09320068]
[327.29150391 698.41247559]
[319.27911377 685.73168945]
[305.93972778 679.10522461]
[305.10919189 663.30584717]
[297.09680176 650.62512207]
[289.08438110 637.94433594]
[281.07196045 625.26361084]
[273.05957031 612.58288574]
[274.46640015 627.51672363]
[271.70346069 642.26007080]
[264.98474121 655.67120361]
[254.83045959 666.71166992]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 184]
[17 183]
[18 182]
[19 181]
[20 180]
[27 173]
[29 171]
[30 170]
[34 165]
[35 164]
[36 163]
[37 162]
[38 161]
[39 160]
[40 159]
[41 158]
[42 157]
[43 156]
[44 155]
[45 154]
[46 153]
[48 151]
[49 150]
[50 149]
[51 148]
[52 147]
[53 146]
[64 99]
[65 98]
[68 95]
[69 94]
[70 93]
[71 92]
[72 91]
[73 89]
[74 88]
[75 87]
[76 86]
[77 85]
[78 84]
[79 83]
[102 145]
[103 144]
[104 143]
[106 141]
[107 140]
[108 139]
[109 138]
[110 137]
[111 136]
[112 135]
[113 134]
[114 133]
[115 132]
[118 129]
[119 128]
[188 218]
[189 217]
[190 216]
[191 215]
[192 214]
[194 212]
[195 211]
[196 210]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
