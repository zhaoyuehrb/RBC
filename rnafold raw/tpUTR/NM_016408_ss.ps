%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 02:01:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGAGAGGAUGGCCUCAGAGCUGACUUGGGCAAUCCUCCCCAACAGGAAGGGGAGACAUUGCCUGCCACUGAGGAAACAGGUCAUGAAGGUGGAGAUAAGCUGCAAGGGGCGAAGCAACUUUAUGUCAGUGGAAAACGUGUCUCUUUAAAGCUGCUAUGUGAACAGCUUUUACAGUCAUUAAAUUUACCUAAACUAAGGUUAA\
) } def
/len { sequence length } bind def

/coor [
[57.21670151 132.53060913]
[46.98205566 143.49656677]
[36.74741364 154.46250916]
[26.51276779 165.42846680]
[23.08543587 187.57095337]
[2.16334796 193.10578918]
[-7.38028860 204.67813110]
[-16.92392540 216.25047302]
[-26.46756172 227.82279968]
[-36.01119995 239.39514160]
[-45.55483627 250.96748352]
[-48.36584854 266.53695679]
[-62.43272018 271.43310547]
[-71.97635651 283.00546265]
[-81.51999664 294.57778931]
[-91.06362915 306.15014648]
[-93.87464142 321.71960449]
[-107.94152069 326.61575317]
[-117.48515320 338.18811035]
[-115.72443390 353.89401245]
[-125.65032196 366.19247437]
[-141.37396240 367.78704834]
[-153.56680298 357.73168945]
[-154.99504089 341.99206543]
[-144.81134033 329.90621948]
[-129.05749512 328.64447021]
[-119.51385498 317.07214355]
[-117.38546753 302.33038330]
[-102.63597107 296.60650635]
[-93.09233093 285.03414917]
[-83.54869843 273.46182251]
[-74.00505829 261.88949585]
[-71.87667084 247.14773560]
[-57.12717438 241.42384338]
[-47.58353806 229.85150146]
[-38.03989792 218.27917480]
[-28.49626350 206.70683289]
[-18.95262718 195.13449097]
[-9.40898991 183.56216431]
[-11.81927776 176.05091858]
[-11.05288124 168.10533142]
[-7.16087151 161.02856445]
[-0.71296549 156.01062012]
[7.28481817 153.92855835]
[15.54681873 155.19381714]
[25.78146362 144.22787476]
[36.01610565 133.26191711]
[46.25075150 122.29597473]
[57.93219757 90.58593750]
[81.15863037 79.25189209]
[98.40020752 87.15464783]
[97.02291107 72.21800995]
[95.64562225 57.28137589]
[94.26832581 42.34474182]
[92.89102936 27.40810585]
[91.51374054 12.47147083]
[90.13644409 -2.46516395]
[88.75915527 -17.40179825]
[87.38185883 -32.33843231]
[86.00457001 -47.27507019]
[72.58062744 -51.70401382]
[61.89161301 -60.88768768]
[55.53033829 -73.41406250]
[54.42807770 -87.37634277]
[58.71837997 -100.66326141]
[67.72186279 -111.27826691]
[80.05355835 -117.63956451]
[78.90531921 -132.59555054]
[77.75708008 -147.55154419]
[76.60884094 -162.50752258]
[75.46060181 -177.46351624]
[74.31237030 -192.41949463]
[73.16413116 -207.37548828]
[65.22785950 -194.64694214]
[52.03868484 -187.50231934]
[37.04179764 -187.80789185]
[24.15459824 -195.48384094]
[16.74340248 -208.52508545]
[16.74412155 -223.52508545]
[24.15656662 -236.56562805]
[37.04450226 -244.24032593]
[52.04141998 -244.54446411]
[65.22991180 -237.39857483]
[73.16413116 -224.67196655]
[74.31237030 -239.62794495]
[75.46060181 -254.58393860]
[76.60884094 -269.53991699]
[77.75708008 -284.49591064]
[78.90531921 -299.45190430]
[80.05355835 -314.40789795]
[73.39535522 -328.75985718]
[82.08421326 -340.85748291]
[83.23245239 -355.81347656]
[72.51989746 -361.27966309]
[64.30313110 -370.01416016]
[59.52854919 -380.97686768]
[58.73453903 -392.87310791]
[61.99089432 -404.30651855]
[68.89335632 -413.94296265]
[78.61363220 -420.66616821]
[89.99875641 -423.70706177]
[91.83313751 -438.59448242]
[93.66751099 -453.48187256]
[83.74637604 -465.78417969]
[85.51316833 -481.48941040]
[97.91967773 -491.27993774]
[113.60533905 -489.34719849]
[123.26413727 -476.83786011]
[121.16567230 -461.17352295]
[108.55492401 -451.64752197]
[106.72055054 -436.76010132]
[104.88616943 -421.87268066]
[119.83710480 -411.64270020]
[127.56555939 -395.16415405]
[125.85565948 -376.95828247]
[115.09442139 -362.06900024]
[98.18844604 -354.66525269]
[97.04020691 -339.70925903]
[103.78054047 -326.42703247]
[95.00954437 -313.25964355]
[93.86130524 -298.30364990]
[92.71307373 -283.34768677]
[91.56483459 -268.39169312]
[90.41659546 -253.43569946]
[89.26835632 -238.47970581]
[88.12011719 -223.52372742]
[88.12011719 -208.52372742]
[89.26835632 -193.56773376]
[90.41659546 -178.61175537]
[91.56483459 -163.65576172]
[92.71307373 -148.69978333]
[93.86130524 -133.74378967]
[95.00954437 -118.78780365]
[110.00197601 -113.26442719]
[121.12609100 -101.71465302]
[126.11895752 -86.41485596]
[123.93307495 -70.41139984]
[114.95565796 -56.91408539]
[100.94120026 -48.65236282]
[102.31849670 -33.71572876]
[103.69578552 -18.77909279]
[105.07308197 -3.84245706]
[106.45037079 11.09417820]
[107.82766724 26.03081322]
[109.20496368 40.96744919]
[110.58225250 55.90408325]
[111.95954895 70.84072113]
[113.33683777 85.77735138]
[123.40223694 96.89884949]
[138.12786865 99.75472260]
[152.85348511 102.61058807]
[167.57911682 105.46645355]
[182.30473328 108.32231903]
[197.03036499 111.17818451]
[211.75598145 114.03404999]
[222.34046936 102.81031036]
[237.31820679 99.11288452]
[251.90985107 104.12160492]
[261.45928955 116.23821259]
[262.91928101 131.59632874]
[255.82398987 145.29525757]
[242.43748474 152.96369934]
[227.03135681 152.15469360]
[214.52162170 143.12638855]
[208.90011597 128.75967407]
[194.17449951 125.90380859]
[179.44886780 123.04794312]
[164.72325134 120.19207764]
[149.99761963 117.33621216]
[135.27200317 114.48034668]
[120.54637146 111.62448120]
[115.59947968 117.26169586]
[127.15325165 126.82779694]
[138.70703125 136.39389038]
[150.26080322 145.95999146]
[161.81457520 155.52609253]
[173.36836243 165.09219360]
[187.67337036 169.60511780]
[191.71005249 184.05174255]
[181.81632996 195.32624817]
[166.96772766 193.20050049]
[160.63475037 179.60275269]
[149.64894104 169.38941956]
[138.66311646 159.17610168]
[127.67731476 148.96278381]
[116.69149780 138.74946594]
[105.70568848 128.53613281]
[100.75879669 134.17335510]
[105.50322723 148.40327454]
[110.24765778 162.63317871]
[114.99208069 176.86309814]
[129.23866272 183.70491028]
[134.39572144 198.64413452]
[127.40366364 212.81758118]
[112.41075134 217.81640625]
[98.31201935 210.67488098]
[93.47199249 195.62995911]
[100.76216888 181.60751343]
[96.01773834 167.37760925]
[91.27331543 153.14768982]
[86.52888489 138.91778564]
[79.20083618 137.32099915]
[76.00701141 151.97703552]
[61.35102463 148.78295898]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 48]
[2 47]
[3 46]
[4 45]
[6 39]
[7 38]
[8 37]
[9 36]
[10 35]
[11 34]
[13 32]
[14 31]
[15 30]
[16 29]
[18 27]
[19 26]
[51 148]
[52 147]
[53 146]
[54 145]
[55 144]
[56 143]
[57 142]
[58 141]
[59 140]
[60 139]
[67 133]
[68 132]
[69 131]
[70 130]
[71 129]
[72 128]
[73 127]
[84 126]
[85 125]
[86 124]
[87 123]
[88 122]
[89 121]
[90 120]
[92 118]
[93 117]
[101 112]
[102 111]
[103 110]
[149 171]
[150 170]
[151 169]
[152 168]
[153 167]
[154 166]
[155 165]
[188 201]
[189 200]
[190 199]
[191 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
