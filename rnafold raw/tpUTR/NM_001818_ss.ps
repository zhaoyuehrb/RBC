%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 12:03:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAGAGGGUGUUGCACGACAUCUAGCAGAAGGCCCUGUGUGUGGAUGGUGAUGCAGAGGAUGUCUCUAUGCUGGUGACUGGACACACAGCCUCUGGUUAAAUCCCUCCCCUCCUGCUUGGCAACUUCAGCUAGCUAGAUAUAUCCAUGGUCCAGAAAGCAAACAUAAUAAAUUUUUAUCUUGAAGU\
) } def
/len { sequence length } bind def

/coor [
[43.99010468 285.82986450]
[34.11563110 297.12121582]
[24.24115753 308.41256714]
[14.36668491 319.70391846]
[11.10636520 335.18554688]
[-3.09628391 339.67263794]
[-12.97075653 350.96401978]
[-22.84523010 362.25537109]
[-32.71970367 373.54672241]
[-42.59417725 384.83807373]
[-45.85449600 400.31973267]
[-60.05714417 404.80682373]
[-69.74156189 416.26159668]
[-79.23322296 427.87661743]
[-88.72487640 439.49160767]
[-83.20973206 453.82614136]
[-85.61659241 468.99526978]
[-95.29802704 480.91857910]
[-109.64977264 486.38879395]
[-124.81128693 483.93438721]
[-136.70419312 474.21563721]
[-142.12936401 459.84680176]
[-139.62745667 444.69305420]
[-129.87147522 432.83065796]
[-115.48571777 427.45056152]
[-100.33988953 429.99996948]
[-90.84822845 418.38494873]
[-81.35656738 406.76992798]
[-80.93819427 401.99426270]
[-77.50228119 397.43609619]
[-71.34850311 394.93234253]
[-68.79447174 380.25833130]
[-53.88553619 374.96362305]
[-44.01106262 363.67224121]
[-34.13658905 352.38088989]
[-24.26211548 341.08953857]
[-14.38764286 329.79818726]
[-11.83361149 315.12417603]
[3.07532620 309.82946777]
[12.94979954 298.53808594]
[22.82427216 287.24673462]
[32.69874573 275.95538330]
[68.48487091 257.90914917]
[70.73230743 243.07847595]
[72.97974396 228.24778748]
[75.22718048 213.41711426]
[77.47461700 198.58642578]
[71.73157501 184.84355164]
[81.44920349 172.35842896]
[83.69663239 157.52775574]
[85.94406891 142.69708252]
[68.84822083 132.40641785]
[57.89089584 115.72999573]
[55.23127365 95.95394135]
[61.39344025 76.97516632]
[75.16311646 62.53349686]
[69.07733917 48.82352829]
[62.72269821 42.23346710]
[63.00654221 34.83324814]
[57.15070343 21.02350044]
[51.29486465 7.21375179]
[45.43902588 -6.59599686]
[30.27128792 -8.56753254]
[18.20653343 -17.80541801]
[12.42402554 -31.74919701]
[14.38423157 -46.61572266]
[23.46143532 -58.42546082]
[17.60559654 -72.23520660]
[11.74975681 -86.04496002]
[-4.87696600 -97.41994476]
[-1.73267722 -116.48707581]
[-8.04669857 -130.09342957]
[-14.36071968 -143.69979858]
[-20.67474174 -157.30616760]
[-27.10222626 -170.85929871]
[-33.64272690 -184.35826111]
[-40.18322754 -197.85720825]
[-55.19338608 -202.80400085]
[-62.23456955 -216.95310974]
[-57.12936783 -231.91012573]
[-42.90660477 -238.80131531]
[-28.00439453 -233.53826904]
[-21.26395607 -219.24343872]
[-26.68426895 -204.39772034]
[-20.14376831 -190.89875793]
[-13.60326862 -177.39979553]
[-7.84584618 -172.74191284]
[-7.06837797 -163.62017822]
[-0.75435632 -150.01382446]
[5.55966520 -136.40745544]
[11.87368679 -122.80109406]
[21.76888466 -120.15622711]
[28.71247864 -112.33011627]
[30.22268867 -101.75519562]
[25.55950546 -91.90079498]
[31.41534424 -78.09104919]
[37.27118301 -64.28130341]
[52.07070541 -62.59616852]
[64.11983490 -53.67011642]
[70.12300110 -39.81990051]
[68.37608337 -24.72536278]
[59.24877548 -12.45183563]
[65.10461426 1.35791242]
[70.96045685 15.16766071]
[76.81629181 28.97740936]
[82.78730774 42.73774719]
[88.87309265 56.44771957]
[98.96264648 55.06078339]
[109.10544586 55.98068237]
[118.78084564 59.16020203]
[127.49217987 64.43611908]
[134.79226685 71.53762054]
[147.82423401 64.11009216]
[152.10202026 49.13216782]
[165.42408752 41.78524780]
[179.67687988 45.95576859]
[192.70883179 38.52824402]
[205.74079895 31.10071754]
[211.66168213 24.11835480]
[219.05314636 23.66004372]
[232.20739746 16.45131874]
[245.36164856 9.24259186]
[248.24186707 -6.12745619]
[260.36065674 -16.01021957]
[275.99588013 -15.73935795]
[287.76510620 -5.44276619]
[290.11120605 10.01782036]
[281.92648315 23.34238625]
[267.07546997 28.23947906]
[252.57037354 22.39684105]
[239.41612244 29.60556602]
[226.26187134 36.81429291]
[213.16831970 44.13267517]
[200.13636780 51.56019974]
[187.10440063 58.98772430]
[183.42926025 73.37622070]
[170.31881714 81.09443665]
[155.25175476 77.14205170]
[142.21980286 84.56957245]
[144.81309509 96.47930145]
[144.11149597 108.64788055]
[140.16654968 120.18062592]
[133.26834106 130.22956848]
[123.92404938 138.05587769]
[112.82072449 143.08409119]
[100.77474976 144.94450378]
[98.52731323 159.77519226]
[96.27987671 174.60586548]
[101.86217499 189.40953064]
[92.30529785 200.83386230]
[90.05786133 215.66455078]
[87.81042480 230.49522400]
[85.56298828 245.32589722]
[83.31555176 260.15658569]
[90.78437042 247.14825439]
[103.91625977 239.89886475]
[118.90379333 240.51029968]
[131.40153503 248.80525208]
[137.78593445 262.37872314]
[136.20591736 277.29528809]
[127.11959076 289.23004150]
[113.16141510 294.72271729]
[98.37837219 292.18072510]
[87.05796051 282.34317017]
[94.04587555 295.61602783]
[108.87249756 300.39190674]
[115.77015686 313.95205688]
[111.12570953 328.05752563]
[118.11362457 341.33038330]
[125.10153961 354.60327148]
[132.08944702 367.87612915]
[146.24215698 376.16064453]
[145.87335205 392.55563354]
[131.36244202 400.19537354]
[117.63699341 391.22070312]
[118.81658173 374.86404419]
[111.82867432 361.59118652]
[104.84075928 348.31829834]
[97.85284424 335.04544067]
[83.59518433 330.89157104]
[76.31936646 317.53051758]
[80.77301025 302.60394287]
[73.78509521 289.33108521]
[66.33634949 288.45578003]
[69.27497101 303.16510010]
[56.19363403 310.50531006]
[45.17034149 300.33245850]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 42]
[2 41]
[3 40]
[4 39]
[6 37]
[7 36]
[8 35]
[9 34]
[10 33]
[12 31]
[13 28]
[14 27]
[15 26]
[43 154]
[44 153]
[45 152]
[46 151]
[47 150]
[49 148]
[50 147]
[51 146]
[56 107]
[57 106]
[59 105]
[60 104]
[61 103]
[62 102]
[67 97]
[68 96]
[69 95]
[71 91]
[72 90]
[73 89]
[74 88]
[75 86]
[76 85]
[77 84]
[112 139]
[113 138]
[116 135]
[117 134]
[118 133]
[120 132]
[121 131]
[122 130]
[164 183]
[165 182]
[168 179]
[169 178]
[170 177]
[171 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
