%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 01:27:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGAACAAGUGCUUCCUCACAACUUGAAGCUUCUAGCAGAAGAACUUAACAAGCUCAAAGCAGAGUUUUUGGAAGACCUAAAACAAGGAAACAAAAAAUAUCUGUGCUUUCAGCAAACCAUUGACAUACCAGAUGUCAUUUCUUUUUUUCAUUAUGAGAAAGAUAAUAUUGUACAGAAGUAUUUUUCAAAGCAGCAUUAAAAUUUCUGAACUGCCAAU\
) } def
/len { sequence length } bind def

/coor [
[221.56779480 454.86087036]
[224.86138916 446.63912964]
[230.67146301 439.89678955]
[224.83241272 426.07992554]
[218.99336243 412.26309204]
[213.15431213 398.44622803]
[207.65884399 393.51190186]
[207.33209229 384.39013672]
[201.69093323 370.49133301]
[196.04977417 356.59249878]
[190.40861511 342.69366455]
[184.76745605 328.79483032]
[179.12629700 314.89602661]
[173.48513794 300.99719238]
[167.84397888 287.09835815]
[162.20281982 273.19955444]
[147.72480774 269.80465698]
[137.90586853 258.40060425]
[136.67037964 243.22409058]
[144.70101929 230.07817078]
[139.05986023 216.17935181]
[133.41870117 202.28053284]
[127.77754211 188.38169861]
[113.33976746 191.67860413]
[98.56111908 192.63285828]
[83.81923676 191.22006226]
[69.49082184 187.47631836]
[55.94201279 181.49729919]
[43.51900864 173.43579102]
[32.53926468 163.49777222]
[23.28334427 151.93719482]
[10.22215271 159.31318665]
[-2.83903861 166.68917847]
[-15.90022945 174.06517029]
[-28.96142006 181.44116211]
[-39.78009796 194.49461365]
[-55.31832123 187.71229553]
[-53.10246277 170.90377808]
[-36.33741379 168.37997437]
[-23.27622414 161.00398254]
[-10.21503258 153.62799072]
[2.84615874 146.25199890]
[15.90734959 138.87600708]
[12.18935871 129.53317261]
[9.50582886 119.84243774]
[7.88837337 109.91793823]
[7.35604715 99.87660217]
[7.91512108 89.83671570]
[9.55900860 79.91656494]
[12.26834488 70.23300934]
[16.01121140 60.90011978]
[20.74351501 52.02785492]
[26.40950775 43.72072601]
[32.94243622 36.07660294]
[22.95865250 24.88178253]
[12.97486782 13.68696022]
[-1.98484278 8.53743172]
[-4.68141937 -6.11104012]
[-14.66520500 -17.30586243]
[-24.64899063 -28.50068283]
[-34.63277435 -39.69550705]
[-44.61656189 -50.89032745]
[-54.60034561 -62.08514786]
[-69.56005859 -67.23468018]
[-72.25662994 -81.88314819]
[-82.24041748 -93.07797241]
[-92.53981018 -103.98313141]
[-103.14641571 -114.58972931]
[-113.75301361 -125.19633484]
[-124.35961914 -135.80293274]
[-134.96621704 -146.40953064]
[-145.57281494 -157.01614380]
[-157.54656982 -153.45143127]
[-169.82882690 -155.30241394]
[-180.10015869 -162.15753174]
[-186.44726562 -172.66612244]
[-187.71925354 -184.80415344]
[-183.73597717 -196.26396179]
[-194.03536987 -207.16912842]
[-204.33476257 -218.07427979]
[-220.13777161 -218.27500916]
[-231.11029053 -229.64952087]
[-230.74249268 -245.44952393]
[-219.25260925 -256.30117798]
[-203.45738220 -255.76634216]
[-192.72781372 -244.16236877]
[-193.42959595 -228.37367249]
[-183.13020325 -217.46852112]
[-172.83081055 -206.56335449]
[-155.43504333 -209.63632202]
[-139.53927612 -201.57623291]
[-131.59918213 -185.44462585]
[-134.96621704 -167.62274170]
[-124.35961914 -157.01614380]
[-113.75301361 -146.40953064]
[-103.14641571 -135.80293274]
[-92.53981018 -125.19633484]
[-81.93321228 -114.58972931]
[-79.13969421 -114.45146179]
[-76.23237610 -113.20202637]
[-73.63339996 -110.79247284]
[-71.77484894 -107.32695007]
[-71.04559326 -103.06175995]
[-61.06180954 -91.86693573]
[-46.81620789 -87.51813507]
[-43.40552521 -72.06893158]
[-33.42173767 -60.87411118]
[-23.43795395 -49.67929077]
[-13.45416832 -38.48447037]
[-3.47038293 -27.28964806]
[6.51340199 -16.09482574]
[20.75900459 -11.74602604]
[24.16968918 3.70317531]
[34.15347290 14.89799690]
[44.13726044 26.09281921]
[55.46291733 18.76352119]
[67.73292542 13.15673256]
[80.68711090 9.39133835]
[94.05080414 7.54717779]
[107.54064178 7.66335535]
[120.87059021 9.73740673]
[133.75799561 13.72535324]
[145.92962646 19.54263878]
[154.39627075 7.16056013]
[162.86291504 -5.22151852]
[171.32955933 -17.60359764]
[179.79621887 -29.98567581]
[188.26286316 -42.36775208]
[186.72679138 -58.33710098]
[198.35415649 -69.39078522]
[214.22543335 -67.04936981]
[222.16554260 -53.10898590]
[216.08349609 -38.26350403]
[200.64494324 -33.90110397]
[192.17829895 -21.51902771]
[183.71163940 -9.13694859]
[175.24499512 3.24512982]
[166.77835083 15.62720776]
[158.31170654 28.00928688]
[168.75205994 37.90272141]
[177.53521729 49.29293442]
[184.44949341 61.90538025]
[198.57716370 56.86463928]
[212.70481873 51.82389832]
[226.83248901 46.78315735]
[240.96015930 41.74241638]
[255.08782959 36.70167542]
[269.21548462 31.66093636]
[283.34313965 26.62019539]
[288.61468506 11.89793491]
[302.14221191 4.05318260]
[317.53845215 6.78999090]
[327.53375244 18.81612206]
[327.40866089 34.45320511]
[317.22222900 46.31788635]
[301.78417969 48.80802917]
[288.38388062 40.74785995]
[274.25622559 45.78860092]
[260.12857056 50.82934189]
[246.00090027 55.87008286]
[231.87322998 60.91082382]
[217.74555969 65.95156860]
[203.61790466 70.99230957]
[189.49023438 76.03305054]
[192.59039307 96.84786987]
[190.91300964 117.82534027]
[184.54461670 137.88304138]
[173.81382751 155.98603821]
[159.27433777 171.20021057]
[141.67636108 182.74053955]
[147.31752014 196.63937378]
[152.95867920 210.53819275]
[158.59983826 224.43701172]
[173.52075195 228.26751709]
[183.21183777 240.01214600]
[184.11827087 255.03353882]
[176.10165405 267.55838013]
[181.74281311 281.45721436]
[187.38397217 295.35604858]
[193.02513123 309.25485229]
[198.66629028 323.15368652]
[204.30743408 337.05252075]
[209.94859314 350.95132446]
[215.58975220 364.85015869]
[221.23091125 378.74899292]
[226.97117615 392.60717773]
[232.81022644 406.42404175]
[238.64927673 420.24087524]
[244.48832703 434.05773926]
[265.25765991 440.74105835]
[274.16394043 460.34606934]
[265.75939941 479.86154175]
[272.56924438 493.22662354]
[279.37911987 506.59173584]
[286.18896484 519.95684814]
[301.23129272 518.08483887]
[316.00601196 521.47357178]
[328.72900391 529.71374512]
[337.86392212 541.81042480]
[342.30767822 556.30279541]
[341.52365112 571.44085693]
[335.60653687 585.39660645]
[325.27081299 596.48486328]
[311.76461792 603.36663818]
[296.71887207 605.21087646]
[281.95040894 601.79492188]
[269.24261475 593.53131104]
[260.13003540 581.41784668]
[255.71298218 566.91729736]
[256.52490234 551.78070068]
[262.46774292 537.83587646]
[272.82388306 526.76666260]
[266.01400757 513.40155029]
[259.20416260 500.03646851]
[252.39430237 486.67138672]
[243.80163574 486.92648315]
[235.54911804 484.36849976]
[228.53701782 479.24703979]
[223.53974915 472.09283447]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 189]
[4 188]
[5 187]
[6 186]
[8 185]
[9 184]
[10 183]
[11 182]
[12 181]
[13 180]
[14 179]
[15 178]
[16 177]
[20 173]
[21 172]
[22 171]
[23 170]
[31 43]
[32 42]
[33 41]
[34 40]
[35 39]
[54 115]
[55 114]
[56 113]
[58 111]
[59 110]
[60 109]
[61 108]
[62 107]
[63 106]
[65 104]
[66 103]
[67 98]
[68 97]
[69 96]
[70 95]
[71 94]
[72 93]
[78 89]
[79 88]
[80 87]
[123 139]
[124 138]
[125 137]
[126 136]
[127 135]
[128 134]
[142 164]
[143 163]
[144 162]
[145 161]
[146 160]
[147 159]
[148 158]
[149 157]
[192 215]
[193 214]
[194 213]
[195 212]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
