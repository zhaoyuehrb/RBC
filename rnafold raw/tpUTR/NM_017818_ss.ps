%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 02:16:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGUGCACUAACGUGUGCAGAAACAGGGCUACUCUGUGUUUCCAGUGUGGGAAAAAACACAGCUUCACCAGGAGGUUCUCCACUGUGGUGGUCUGGAUUCAGUGAUUGAUUCUAUUUUUCUAUAGCAAAGCAUUUUUGUAAAUAUGUAUGGUAUAAAACUGUAGUUUUAUUAUUUAAAAUAAAUACUUGCUGAUUUAUACAACUA\
) } def
/len { sequence length } bind def

/coor [
[102.64750671 219.18550110]
[99.73497772 204.47097778]
[96.82244110 189.75645447]
[93.90991211 175.04194641]
[90.99738312 160.32742310]
[88.08484650 145.61289978]
[73.19316864 143.81346130]
[66.85957336 157.41072083]
[60.52597809 171.00798035]
[54.19237900 184.60523987]
[47.85878372 198.20249939]
[53.50516891 212.96372986]
[46.98381042 227.35981750]
[32.16371155 232.84982300]
[17.83737183 226.17663574]
[12.50435925 211.29931641]
[19.32865334 197.04432678]
[34.26152039 191.86891174]
[40.59511948 178.27165222]
[46.92871475 164.67437744]
[53.26231384 151.07711792]
[59.59590912 137.47985840]
[48.40859222 127.48766327]
[35.61016464 135.31071472]
[22.81173325 143.13377380]
[10.01330376 150.95683289]
[-2.78512621 158.77987671]
[-15.58355618 166.60293579]
[-23.32297134 180.40191650]
[-38.21753311 180.43797302]
[-51.01596069 188.26103210]
[-56.16134262 203.45657349]
[-71.29814148 208.77229309]
[-84.81470490 200.13041687]
[-86.34228516 184.16024780]
[-74.70904541 173.11274719]
[-58.83901596 175.46260071]
[-46.04058838 167.63955688]
[-39.21660233 154.40011597]
[-23.40661049 153.80450439]
[-10.60818100 145.98144531]
[2.19024897 138.15840149]
[14.98867893 130.33534241]
[27.78710938 122.51228333]
[40.58554077 114.68923187]
[41.73109818 89.21605682]
[52.96988678 67.24333954]
[71.67347717 52.42609024]
[94.04649353 46.90924454]
[86.90728760 33.71713638]
[79.76807404 20.52503014]
[72.62886810 7.33292484]
[65.48965454 -5.85918140]
[58.35044098 -19.05128860]
[51.21123123 -32.24339294]
[44.07202148 -45.43550110]
[36.93281174 -58.62760544]
[29.79359818 -71.81970978]
[15.60322952 -70.68756866]
[1.97944140 -76.52738190]
[-7.72850609 -88.49500275]
[-10.86649704 -104.18170929]
[-6.18041134 -120.09101105]
[-16.08824539 -131.35310364]
[-25.99607849 -142.61520386]
[-38.79551315 -144.21629333]
[-46.81590652 -153.80180359]
[-46.17541885 -165.88237000]
[-55.91285324 -177.29211426]
[-65.65028381 -188.70187378]
[-75.38771820 -200.11161804]
[-85.12515259 -211.52136230]
[-94.86258698 -222.93112183]
[-104.93858337 -234.04301453]
[-115.34403229 -244.84703064]
[-125.74948120 -255.65103149]
[-136.15492249 -266.45504761]
[-151.49746704 -273.66912842]
[-148.81254578 -290.40911865]
[-131.98348999 -292.46322632]
[-125.35092163 -276.86050415]
[-114.94547272 -266.05648804]
[-104.54002380 -255.25247192]
[-94.13457489 -244.44847107]
[-91.33607483 -244.26179504]
[-88.44298553 -242.95448303]
[-85.88282013 -240.48495483]
[-84.09023285 -236.96717834]
[-83.45283508 -232.66854858]
[-73.71540070 -221.25880432]
[-63.97797012 -209.84904480]
[-54.24053574 -198.43930054]
[-44.50310135 -187.02955627]
[-34.76567078 -175.61979675]
[-17.93393135 -170.65631104]
[-14.73398113 -152.52304077]
[-4.82614708 -141.26094055]
[5.08168602 -129.99884033]
[19.30514908 -134.76257324]
[20.43145370 -149.72023010]
[13.75220966 -164.06240845]
[22.42331886 -176.17277527]
[23.54962349 -191.13043213]
[24.67593002 -206.08808899]
[15.34789848 -219.14057922]
[19.87522507 -234.53157043]
[34.78493118 -240.45443726]
[48.63956833 -232.36563110]
[50.81103897 -216.47021484]
[39.63358307 -204.96179199]
[38.50727844 -190.00413513]
[37.38097382 -175.04647827]
[44.14078140 -161.77416992]
[35.38911057 -148.59391785]
[34.26280212 -133.63626099]
[51.18624496 -117.80287933]
[53.93667984 -96.18404388]
[42.98570633 -78.95892334]
[50.12491608 -65.76681519]
[57.26412582 -52.57471085]
[64.40333557 -39.38260651]
[71.54254913 -26.19049835]
[78.68176270 -12.99839211]
[85.82096863 0.19371386]
[92.96018219 13.38582039]
[100.09939575 26.57792664]
[107.23860168 39.77003098]
[121.90768433 42.90340805]
[133.81370544 33.77944183]
[145.71971130 24.65547752]
[157.62573242 15.53151035]
[169.53175354 6.40754414]
[173.05273438 -9.24436378]
[187.54753113 -16.12044716]
[201.89697266 -8.94596386]
[205.09338379 6.77543688]
[194.68476868 18.98364258]
[178.65571594 18.31356049]
[166.74969482 27.43752670]
[154.84368896 36.56149292]
[142.93766785 45.68545914]
[131.03164673 54.80942535]
[133.30635071 61.95615768]
[147.59980774 57.40676117]
[159.78796387 48.66325760]
[171.86976624 57.55314255]
[167.14828491 71.79068756]
[152.14920044 71.70021820]
[137.85574341 76.24961853]
[140.13044739 83.39634705]
[155.11985779 83.95989990]
[170.10926819 84.52344513]
[185.09867859 85.08699799]
[200.08808899 85.65054321]
[215.07749939 86.21409607]
[227.77030945 76.40226746]
[243.32054138 80.34815979]
[249.79936218 95.02481842]
[242.23680115 109.17356873]
[226.43418884 111.94069672]
[214.51394653 101.20350647]
[199.52453613 100.63995361]
[184.53512573 100.07640839]
[169.54571533 99.51285553]
[154.55630493 98.94930267]
[139.56689453 98.38575745]
[135.23284912 112.74597931]
[148.03128052 120.56903839]
[160.82971191 128.39208984]
[173.62814331 136.21514893]
[186.42657471 144.03820801]
[199.22500610 151.86125183]
[215.09503174 149.51139832]
[226.72827148 160.55889893]
[225.20069885 176.52906799]
[211.68412781 185.17094421]
[196.54733276 179.85523987]
[191.40194702 164.65968323]
[178.60351562 156.83663940]
[165.80508423 149.01358032]
[153.00666809 141.19052124]
[140.20823669 133.36746216]
[127.40979767 125.54441071]
[121.25719452 129.83340454]
[129.83517456 142.13861084]
[138.41293335 154.44396973]
[126.10743713 163.02154541]
[117.52995300 150.71659851]
[108.95198059 138.41137695]
[102.79936981 142.70036316]
[105.71189880 157.41488647]
[108.62443542 172.12940979]
[111.53696442 186.84393311]
[114.44950104 201.55845642]
[117.36203003 216.27297974]
[132.27491760 219.21821594]
[144.92274475 227.65032959]
[153.37684631 240.28349304]
[156.34800720 255.19122314]
[153.38314819 270.10021973]
[144.93440247 282.73696899]
[132.29013062 291.17443848]
[117.37850189 294.12597656]
[102.47341919 291.14151001]
[89.84780884 282.67614746]
[81.42697906 270.02078247]
[78.49504852 255.10528564]
[81.49912262 240.20414734]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 195]
[2 194]
[3 193]
[4 192]
[5 191]
[6 190]
[7 22]
[8 21]
[9 20]
[10 19]
[11 18]
[23 45]
[24 44]
[25 43]
[26 42]
[27 41]
[28 40]
[30 38]
[31 37]
[49 127]
[50 126]
[51 125]
[52 124]
[53 123]
[54 122]
[55 121]
[56 120]
[57 119]
[58 118]
[63 98]
[64 97]
[65 96]
[68 94]
[69 93]
[70 92]
[71 91]
[72 90]
[73 89]
[74 84]
[75 83]
[76 82]
[77 81]
[99 115]
[100 114]
[102 112]
[103 111]
[104 110]
[128 142]
[129 141]
[130 140]
[131 139]
[132 138]
[150 166]
[151 165]
[152 164]
[153 163]
[154 162]
[155 161]
[167 183]
[168 182]
[169 181]
[170 180]
[171 179]
[172 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
