%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 22:31:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGAAAGUUGUAAAAGAAUAUUUUGUGUGUGUGUAUAGACAACUUAUCAUAAUAAGAACUCUUACUCUUGAGAAACCUUGUGAAUGUAAGGGUUGUGCAAAAGCCAUUCAUUUCUGUUUAUGGGCAAUUAUCUUGCUAUCCAGCAAUUCAUACUAGUGAGAAAUAUUUUGAAUAUAAUUAAUAUGAAAAGGCCUUUAGACUUCUGUACAGUCUUAUUGGAUAUCAAUUUAUACUGAUGUAAAAUCAUUUAAAUGU\
AA\
) } def
/len { sequence length } bind def

/coor [
[546.07281494 430.63998413]
[546.88421631 420.74377441]
[548.83294678 411.01904297]
[551.89038086 401.59582520]
[556.01281738 392.59997559]
[561.14257812 384.15118408]
[549.49694824 374.69717407]
[537.85125732 365.24319458]
[526.20556641 355.78918457]
[514.55987549 346.33520508]
[502.91418457 336.88119507]
[491.26849365 327.42721558]
[474.61572266 329.87115479]
[461.09036255 319.29519653]
[459.38012695 301.87139893]
[447.62017822 292.55990601]
[435.86026001 283.24841309]
[424.10031128 273.93695068]
[412.34036255 264.62545776]
[400.58044434 255.31394958]
[388.82049561 246.00247192]
[377.06054688 236.69097900]
[365.30062866 227.37948608]
[353.54067993 218.06799316]
[341.44851685 209.19221497]
[329.04025269 200.76399231]
[316.63198853 192.33575439]
[304.22372437 183.90753174]
[291.81546021 175.47929382]
[278.39282227 168.78361511]
[264.19619751 163.94039917]
[249.99961853 159.09719849]
[235.45579529 162.31069946]
[224.89299011 150.53199768]
[210.69639587 145.68879700]
[196.49978638 140.84559631]
[182.30319214 136.00238037]
[168.10659790 131.15917969]
[153.91000366 126.31597137]
[139.71340942 121.47277069]
[125.51680756 116.62956238]
[100.11323547 138.06990051]
[61.87653351 125.16981506]
[47.86629105 130.52827454]
[33.85604858 135.88674927]
[19.84580803 141.24520874]
[5.83556604 146.60366821]
[-4.07454777 159.66972351]
[-20.30910683 157.35215759]
[-26.16738892 142.03509521]
[-15.62289619 129.47540283]
[0.47710288 132.59342957]
[14.48734474 127.23496246]
[28.49758530 121.87650299]
[42.50782776 116.51803589]
[56.51807022 111.15957642]
[55.78775406 96.17736053]
[41.32277298 92.20693970]
[26.85778999 88.23651123]
[12.39280891 84.26608276]
[-2.07217383 80.29565430]
[-16.53715515 76.32523346]
[-31.00213814 72.35480499]
[-45.46712112 68.38437653]
[-59.93210220 64.41394806]
[-74.44435883 60.61994934]
[-89.00173187 57.00293732]
[-102.43338776 64.89143372]
[-117.14511108 61.01589584]
[-124.58281708 48.16225052]
[-139.14019775 44.54523849]
[-153.69757080 40.92822647]
[-169.29962158 45.97877502]
[-181.29162598 34.79288864]
[-177.33721924 18.87765121]
[-161.50437927 14.60529232]
[-150.08055115 26.37084961]
[-135.52317810 29.98786163]
[-120.96580505 33.60487366]
[-108.37705994 25.72711945]
[-93.56227875 29.18791008]
[-85.38471985 42.44556046]
[-70.82734680 46.06257248]
[-66.36890411 44.42687225]
[-60.83664703 45.55381012]
[-55.96167755 49.94896698]
[-41.49669266 53.91939545]
[-27.03171158 57.88982010]
[-12.56672955 61.86024857]
[1.89825296 65.83067322]
[16.36323547 69.80110168]
[30.82821655 73.77153015]
[45.29320145 77.74195862]
[59.75818253 81.71237946]
[67.80483246 69.05333710]
[59.87946701 64.57298279]
[58.02203369 57.44258499]
[48.42693710 45.91287613]
[32.86092377 40.75232315]
[29.81254005 24.63899231]
[42.41769791 14.14890099]
[57.70929337 20.07335281]
[59.95664215 36.31778336]
[69.55174255 47.84748840]
[79.21685028 59.31856537]
[88.64714050 57.32400131]
[97.96714020 57.41077805]
[106.73751068 59.44062805]
[114.57235718 63.18666077]
[121.15621948 68.34964752]
[126.25660706 74.57732391]
[129.73159790 81.48564148]
[131.53230286 88.68067932]
[131.70025635 95.78009033]
[130.36001587 102.43296051]
[144.55661011 107.27616882]
[158.75320435 112.11937714]
[172.94979858 116.96258545]
[187.14640808 121.80578613]
[201.34300232 126.64899445]
[215.53959656 131.49220276]
[229.73619080 136.33540344]
[245.29544067 133.46832275]
[254.84281921 144.90060425]
[269.03942871 149.74380493]
[283.23602295 154.58700562]
[289.84234619 151.03643799]
[277.08621216 143.14460754]
[277.54257202 128.15155029]
[290.75509644 121.05017090]
[303.51135254 128.94177246]
[303.05496216 143.93530273]
[309.66128540 140.38473511]
[313.45529175 125.87248230]
[317.24929810 111.36022949]
[321.04330444 96.84797668]
[324.83731079 82.33571625]
[319.97711182 66.67332458]
[331.30816650 54.81842041]
[347.17407227 58.96631241]
[351.25332642 74.85000610]
[339.34954834 86.12971497]
[335.55554199 100.64197540]
[331.76156616 115.15422821]
[327.96755981 129.66648865]
[324.17355347 144.17874146]
[316.51541138 150.89753723]
[308.53326416 157.19902039]
[300.24368286 163.07104492]
[312.65194702 171.49926758]
[325.06021118 179.92749023]
[337.46847534 188.35572815]
[349.87673950 196.78395081]
[347.93789673 181.90979004]
[356.99475098 169.95262146]
[371.83801270 167.78991699]
[383.93026733 176.66557312]
[386.31637573 191.47457886]
[377.62393188 203.69918823]
[362.85217285 206.30805969]
[374.61212158 215.61955261]
[386.37203979 224.93103027]
[398.13198853 234.24252319]
[409.89193726 243.55401611]
[421.65185547 252.86550903]
[433.41180420 262.17700195]
[445.17175293 271.48849487]
[456.93167114 280.79998779]
[468.69161987 290.11148071]
[481.78466797 287.02783203]
[494.08703613 291.96701050]
[501.20089722 302.92239380]
[500.72247314 315.78152466]
[512.36816406 325.23553467]
[524.01385498 334.68951416]
[535.65954590 344.14352417]
[547.30523682 353.59750366]
[558.95092773 363.05148315]
[570.59661865 372.50549316]
[584.06402588 360.99227905]
[599.65313721 352.49005127]
[616.69946289 347.37954712]
[634.47253418 345.89651489]
[652.20733643 348.12097168]
[669.13720703 353.97296143]
[684.52691650 363.21533203]
[697.70452881 375.46337891]
[708.09088135 390.20074463]
[715.22503662 406.80126953]
[718.78454590 424.55551147]
[718.60021973 442.70104980]
[714.66381836 460.45535278]
[729.02783203 464.77685547]
[742.36499023 454.35122681]
[759.12213135 453.94458008]
[772.67742920 463.51910400]
[777.79260254 479.13180542]
[792.20819092 483.27807617]
[806.62371826 487.42434692]
[821.03930664 491.57058716]
[835.45483398 495.71685791]
[848.32415771 486.83346558]
[863.88787842 488.35208130]
[874.79718018 499.55569458]
[875.90112305 515.15423584]
[866.67840576 527.78265381]
[851.48376465 531.47808838]
[837.49157715 524.49572754]
[831.30859375 510.13241577]
[816.89300537 505.98617554]
[802.47747803 501.83990479]
[788.06188965 497.69363403]
[773.64636230 493.54736328]
[763.94073486 502.69097900]
[750.88140869 505.87765503]
[737.84698486 502.17306519]
[728.26403809 492.44015503]
[724.70635986 479.14086914]
[710.34234619 474.81936646]
[702.06579590 487.32934570]
[711.66094971 498.85903931]
[721.25604248 510.38876343]
[730.85113525 521.91845703]
[740.44622803 533.44818115]
[750.04132080 544.97784424]
[765.51544189 543.82397461]
[778.69476318 552.01446533]
[784.51159668 566.40002441]
[780.72924805 581.44909668]
[768.80206299 591.37493896]
[753.31634521 592.36090088]
[740.22662354 584.02789307]
[734.56622314 569.58007812]
[738.51159668 554.57299805]
[728.91650391 543.04327393]
[719.32141113 531.51354980]
[709.72631836 519.98382568]
[700.13122559 508.45413208]
[690.53613281 496.92443848]
[682.55529785 503.20468140]
[673.91107178 508.51336670]
[664.72088623 512.78149414]
[655.10931396 515.95404053]
[645.20629883 517.99084473]
[635.14538574 518.86718750]
[625.06195068 518.57385254]
[615.09136963 517.11743164]
[605.36724854 514.52001953]
[596.01940918 510.81912231]
[587.17254639 506.06683350]
[578.94427490 500.32925415]
[571.44360352 493.68566895]
[564.76953125 486.22726440]
[559.00982666 478.05596924]
[554.23962402 469.28305054]
[550.52081299 460.02761841]
[547.90081787 450.41494751]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 179]
[7 178]
[8 177]
[9 176]
[10 175]
[11 174]
[12 173]
[15 169]
[16 168]
[17 167]
[18 166]
[19 165]
[20 164]
[21 163]
[22 162]
[23 161]
[24 160]
[25 153]
[26 152]
[27 151]
[28 150]
[29 149]
[30 126]
[31 125]
[32 124]
[34 122]
[35 121]
[36 120]
[37 119]
[38 118]
[39 117]
[40 116]
[41 115]
[43 56]
[44 55]
[45 54]
[46 53]
[47 52]
[57 94]
[58 93]
[59 92]
[60 91]
[61 90]
[62 89]
[63 88]
[64 87]
[65 86]
[66 83]
[67 82]
[70 79]
[71 78]
[72 77]
[95 105]
[97 104]
[98 103]
[133 146]
[134 145]
[135 144]
[136 143]
[137 142]
[192 219]
[193 218]
[197 213]
[198 212]
[199 211]
[200 210]
[201 209]
[220 239]
[221 238]
[222 237]
[223 236]
[224 235]
[225 234]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
