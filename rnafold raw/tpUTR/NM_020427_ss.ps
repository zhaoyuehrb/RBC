%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 21:49:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCAGGGCGGCAGGGCGGAAGGUGCUCCUCAGGCACCUCCUCUCUGACGGGGCCUGGCUCCACCUGUGAUCACCUCCCCCUGCUUCCUGCUGCUGUGGCACAGCUCACUCAUGGGGUCUGAGGGGAGAGAAGCACACCAGGGGCGCCCUCUGCCUUCCAUACCCCACGCUUAUAAAACAUAACUAAGCCAAGAGUGGA\
) } def
/len { sequence length } bind def

/coor [
[108.02188873 127.74617767]
[94.22582245 127.38721466]
[82.60596466 120.77603149]
[75.71072388 109.82944489]
[60.77729416 111.24107361]
[45.84386444 112.65269470]
[30.91043663 114.06432343]
[15.97700691 115.47594452]
[7.71927834 119.40215302]
[0.79821289 116.79057312]
[-14.15554714 117.96746063]
[-29.10930634 119.14434052]
[-44.06306839 120.32122803]
[-59.01682663 121.49811554]
[-73.97058868 122.67500305]
[-88.92434692 123.85189056]
[-97.24272919 127.64790344]
[-104.12191772 124.92793274]
[-119.09231567 125.86979675]
[-134.06271362 126.81165314]
[-142.43969727 130.47653198]
[-149.27531433 127.64884949]
[-164.25866699 128.35545349]
[-179.24201965 129.06204224]
[-194.22535706 129.76864624]
[-207.64573669 138.14743042]
[-220.72335815 131.01824951]
[-235.70671082 131.72485352]
[-244.95368958 140.72523499]
[-257.45373535 141.00053406]
[-266.48864746 132.94868469]
[-281.48126221 133.41984558]
[-296.47384644 133.89100647]
[-311.46646118 134.36216736]
[-324.41174316 149.71685791]
[-344.17047119 150.60180664]
[-358.00323486 136.89498901]
[-372.95700073 138.07186890]
[-389.02774048 150.23156738]
[-406.10815430 141.17912292]
[-421.01757812 142.82513428]
[-435.92697144 144.47114563]
[-450.83639526 146.11715698]
[-460.52105713 158.60646057]
[-476.21069336 160.50672913]
[-488.59692383 150.69055176]
[-490.33117676 134.98170471]
[-480.38461304 122.69996643]
[-464.65829468 121.13187408]
[-452.48242188 131.20774841]
[-437.57299805 129.56173706]
[-422.66357422 127.91571808]
[-407.75418091 126.26969910]
[-402.10116577 117.74444580]
[-392.48507690 113.65667725]
[-381.99145508 115.58071899]
[-374.13388062 123.11811066]
[-359.18011475 121.94122314]
[-354.85498047 112.61493683]
[-346.98437500 105.87641907]
[-336.94775391 102.99514008]
[-326.54144287 104.55660248]
[-317.65704346 110.34487152]
[-311.93762207 119.36956787]
[-296.94500732 118.89840698]
[-281.95242310 118.42724609]
[-266.95983887 117.95608521]
[-252.57058716 107.91700745]
[-236.41329956 116.74150085]
[-221.42994690 116.03490448]
[-209.08128357 107.70665741]
[-194.93196106 114.78529358]
[-179.94860840 114.07869720]
[-164.96525574 113.37210083]
[-149.98191833 112.66550446]
[-135.00457764 111.84124756]
[-120.03417969 110.89939117]
[-105.06377411 109.95753479]
[-90.10123444 108.89813232]
[-75.14747620 107.72124481]
[-60.19371414 106.54435730]
[-45.23995209 105.36746979]
[-30.28619385 104.19058228]
[-15.33243370 103.01369476]
[-0.37867358 101.83680725]
[14.56538200 100.54251862]
[29.49881172 99.13088989]
[44.43223953 97.71926880]
[59.36566925 96.30764008]
[74.29910278 94.89601898]
[79.03545380 81.45577240]
[90.67852020 71.72090149]
[106.57220459 69.12957001]
[106.10104370 54.13696671]
[105.62988281 39.14437103]
[105.15872192 24.15177155]
[104.68756104 9.15917301]
[98.14668274 -6.48222351]
[111.36611176 -17.09744835]
[125.22599792 -7.33322525]
[119.68016052 8.68801212]
[120.15132141 23.68061066]
[120.62248230 38.67321014]
[121.09364319 53.66580582]
[121.56480408 68.65840912]
[132.00349426 79.43029785]
[146.97389221 80.37215424]
[161.94430542 81.31401825]
[176.91470337 82.25587463]
[191.88510132 83.19773102]
[206.85549927 84.13958740]
[225.78450012 70.08992767]
[246.80476379 79.33525085]
[261.07061768 74.69999695]
[275.33645630 70.06474304]
[289.60229492 65.42948914]
[303.86816406 60.79423141]
[318.13400269 56.15897751]
[325.78497314 40.43216324]
[342.11990356 35.20322418]
[356.88803101 43.24102402]
[371.07931519 38.38226318]
[385.27056885 33.52350235]
[399.46185303 28.66474152]
[413.65313721 23.80598068]
[424.20303345 12.01571751]
[438.75036621 15.21327877]
[452.94165039 10.35451698]
[467.13293457 5.49575615]
[481.32421875 0.63699478]
[488.72720337 -15.20805550]
[504.97799683 -20.69292641]
[519.87054443 -12.88808441]
[533.98376465 -17.96915245]
[541.00561523 -23.82562447]
[548.35876465 -23.01729012]
[555.08569336 -37.31845474]
[569.98297119 -42.59553909]
[584.21221924 -35.71773529]
[589.33148193 -20.76553154]
[582.30364990 -6.60979748]
[567.29815674 -1.64888310]
[553.21752930 -8.82600975]
[539.06481934 -3.85594153]
[524.95159912 1.22512734]
[521.14782715 13.54156399]
[510.78842163 21.53543854]
[497.52105713 22.10882568]
[486.18298340 14.82827473]
[471.99169922 19.68703651]
[457.80041504 24.54579735]
[443.60913086 29.40455818]
[434.07427979 40.84729004]
[418.51190186 37.99726105]
[404.32061768 42.85602188]
[390.12933350 47.71478271]
[375.93804932 52.57354355]
[361.74679565 57.43230438]
[357.75000000 69.68747711]
[347.26632690 77.51764679]
[333.99160767 77.88256836]
[322.76925659 70.42481995]
[308.50341797 75.06008148]
[294.23754883 79.69533539]
[279.97171021 84.33058929]
[265.70587158 88.96584320]
[251.44001770 93.60109711]
[250.44995117 99.67255402]
[247.85615540 105.25064087]
[257.04974365 117.10296631]
[266.24337769 128.95529175]
[275.43698120 140.80761719]
[284.63058472 152.65994263]
[299.68722534 149.91107178]
[314.29321289 154.48530579]
[325.09219360 165.33151245]
[329.60266113 179.95732117]
[326.78814697 195.00183105]
[317.29537964 207.00790405]
[303.30572510 213.21665955]
[288.03393555 212.20133972]
[274.98931885 204.19528198]
[267.16946411 191.03822327]
[266.37130737 175.75354004]
[272.77825928 161.85354614]
[263.58465576 150.00122070]
[254.39103699 138.14889526]
[245.19743347 126.29656982]
[236.00382996 114.44424438]
[226.89390564 115.81034088]
[217.87260437 113.41135406]
[210.45143127 107.54813385]
[205.91365051 99.10999298]
[190.94323730 98.16812897]
[175.97283936 97.22627258]
[161.00244141 96.28441620]
[146.03204346 95.34255981]
[131.06164551 94.40070343]
[129.19885254 109.38170624]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 90]
[5 89]
[6 88]
[7 87]
[8 86]
[10 85]
[11 84]
[12 83]
[13 82]
[14 81]
[15 80]
[16 79]
[18 78]
[19 77]
[20 76]
[22 75]
[23 74]
[24 73]
[25 72]
[27 70]
[28 69]
[31 67]
[32 66]
[33 65]
[34 64]
[37 58]
[38 57]
[40 53]
[41 52]
[42 51]
[43 50]
[93 105]
[94 104]
[95 103]
[96 102]
[97 101]
[106 198]
[107 197]
[108 196]
[109 195]
[110 194]
[111 193]
[113 167]
[114 166]
[115 165]
[116 164]
[117 163]
[118 162]
[121 158]
[122 157]
[123 156]
[124 155]
[125 154]
[127 152]
[128 151]
[129 150]
[130 149]
[133 145]
[134 144]
[136 143]
[169 189]
[170 188]
[171 187]
[172 186]
[173 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
