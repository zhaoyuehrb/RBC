%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 17:49:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCGCCAGGAUGCACAGACCGACCGACAGACCUCAGUGCCCACCACGGGCUGUGGCGGAGCUCCCGCCCCCUGCGCCCUAAUGGUGCUAACCCCCUCUCACUACCCAGCAGCAGGCUGGGGACCUCCUCCCCCUCAAAAAAGGUAUUUUUUUAUUCUAACAGUUUGUGUAACAUUUAUUAUGAUUUUACAUAAAUGAGCAUCUACCAUUCCAAAGCA\
) } def
/len { sequence length } bind def

/coor [
[0.40092251 313.79473877]
[-7.16656637 300.74929810]
[-11.25124264 286.23150635]
[-11.59634113 271.15396118]
[-8.18016720 256.46450806]
[-1.21746504 243.08647156]
[8.85408401 231.86083984]
[21.40137291 223.49327087]
[35.63566971 218.50973511]
[34.34619904 203.56526184]
[33.05672836 188.62078857]
[31.76725388 173.67631531]
[30.47778320 158.73184204]
[29.18831062 143.78736877]
[22.74758148 139.94458008]
[16.71443748 153.67779541]
[10.68129349 167.41101074]
[4.64814997 181.14422607]
[0.33485165 195.51069641]
[-13.64693546 200.94297791]
[-26.52816010 193.25701904]
[-28.38744926 178.37269592]
[-17.79372215 167.75454712]
[-8.57377434 155.92269897]
[0.64617354 144.09086609]
[9.86612129 132.25901794]
[3.42539215 128.41622925]
[-10.33836269 134.37936401]
[-24.10211754 140.34251404]
[-37.86587143 146.30564880]
[-44.49132919 152.58499146]
[-51.87009430 152.25404358]
[-65.71797180 158.01913452]
[-79.56584930 163.78422546]
[-83.87163544 168.78874207]
[-89.25040436 170.60011292]
[-93.89461517 169.50976562]
[-107.90217590 174.87524414]
[-121.90973663 180.24070740]
[-129.73237610 194.24734497]
[-145.58340454 196.72209167]
[-157.30326843 185.76652527]
[-155.90148926 169.78483582]
[-142.45339966 161.03678894]
[-127.27520752 166.23315430]
[-113.26764679 160.86767578]
[-99.26009369 155.50221252]
[-85.33094025 149.93635559]
[-71.48306274 144.17126465]
[-57.63518524 138.40617371]
[-43.82901382 132.54190063]
[-30.06525803 126.57875824]
[-16.30150414 120.61561584]
[-2.53775024 114.65247345]
[-4.04146338 99.72803497]
[-18.71813583 96.63040924]
[-33.39480972 93.53279114]
[-48.07147980 90.43516541]
[-62.74815369 87.33753967]
[-76.92119598 94.85448456]
[-91.57690430 88.32840729]
[-95.47267914 72.76554871]
[-85.62001038 60.10440826]
[-69.57702637 60.05752563]
[-59.65052795 72.66086578]
[-44.97385788 75.75849152]
[-30.29718399 78.85611725]
[-15.62051105 81.95374298]
[-0.94383854 85.05136108]
[2.52325177 78.40085602]
[-10.77765369 71.46645355]
[-3.84303141 58.16566086]
[9.45743275 65.09983063]
[12.92452240 58.44932556]
[1.98115945 48.19053268]
[-8.96220398 37.93173981]
[-19.90556717 27.67294884]
[-30.84893036 17.41415787]
[-46.86549759 16.49267960]
[-56.01322174 3.31319928]
[-51.27475357 -12.01411152]
[-36.28503799 -17.73145294]
[-22.54290390 -9.45296955]
[-20.59013939 6.47079515]
[-9.64677620 16.72958565]
[1.29658747 26.98837852]
[12.23995113 37.24716949]
[23.18331337 47.50595856]
[30.20615578 44.87352753]
[24.94128990 30.82784462]
[19.67642403 16.78216362]
[14.41155720 2.73648119]
[9.14669132 -11.30920124]
[3.88182521 -25.35488319]
[-1.38304090 -39.40056610]
[-6.64768982 -53.44632721]
[7.39815474 -58.71076202]
[12.66264153 -44.66543198]
[17.92750740 -30.61974907]
[23.19237328 -16.57406616]
[28.45723915 -2.52838492]
[33.72210693 11.51729679]
[38.98697281 25.56297874]
[44.25183868 39.60866165]
[51.27467728 36.97622681]
[52.77839279 22.05179024]
[54.28210449 7.12735271]
[55.78581619 -7.79708529]
[57.28953171 -22.72152328]
[58.79324341 -37.64596176]
[49.79784012 -50.92987061]
[54.71243286 -66.20162201]
[69.76696777 -71.74603271]
[83.41289520 -63.30990219]
[85.18222809 -47.36471558]
[73.71768188 -36.14225006]
[72.21396637 -21.21780968]
[70.71025848 -6.29337215]
[69.20654297 8.63106537]
[67.70282745 23.55550385]
[66.19911957 38.47994232]
[109.89228058 39.12581635]
[139.02757263 63.91803741]
[148.72421265 52.47360611]
[158.42086792 41.02917480]
[168.11750793 29.58474541]
[160.83802795 16.26658249]
[158.86505127 1.21760201]
[162.46543884 -13.52694607]
[171.15223694 -25.97298241]
[183.75065613 -34.43728256]
[198.55685425 -37.77511978]
[213.56840515 -35.53507996]
[226.75512695 -28.02010727]
[236.33361816 -16.24654198]
[241.00846863 -1.80666161]
[240.14746094 13.34665775]
[233.86701965 27.16405487]
[223.01652527 37.77684021]
[209.06341553 43.74972153]
[193.89474487 44.27491379]
[179.56195068 39.28139496]
[169.86529541 50.72582626]
[160.16865540 62.17025757]
[150.47200012 73.61468506]
[152.07341003 80.94172668]
[166.06976318 75.54711151]
[180.06613159 70.15250397]
[194.06250000 64.75788879]
[208.05885315 59.36327744]
[218.91062927 49.00764847]
[233.72621155 46.66276169]
[247.24549866 53.16114426]
[254.66859436 66.19561768]
[253.36003113 81.13842773]
[243.78439331 92.68429565]
[229.34140015 96.73398590]
[215.15917969 91.84990692]
[200.18843079 92.78637695]
[185.21769714 93.72285461]
[170.24696350 94.65933228]
[155.27621460 95.59580231]
[156.87762451 102.92284393]
[170.46466064 109.27836609]
[184.05168152 115.63388062]
[197.63871765 121.98940277]
[211.22573853 128.34492493]
[224.81277466 134.70043945]
[238.39979553 141.05596924]
[251.98683167 147.41148376]
[265.57385254 153.76701355]
[279.16088867 160.12252808]
[294.93942261 158.96122742]
[303.18948364 171.36224365]
[316.77651978 177.71775818]
[330.36355591 184.07328796]
[345.13388062 178.45071411]
[359.51940918 184.99528503]
[364.98550415 199.82421875]
[358.28921509 214.13978577]
[343.40332031 219.44879150]
[329.15936279 212.60151672]
[324.00802612 197.66030884]
[310.42098999 191.30479431]
[296.83398438 184.94927979]
[282.02728271 186.56517029]
[272.80535889 173.70956421]
[259.21832275 167.35403442]
[245.63130188 160.99851990]
[232.04428101 154.64299011]
[218.45724487 148.28747559]
[204.87022400 141.93196106]
[191.28318787 135.57643127]
[177.69616699 129.22091675]
[164.10913086 122.86539459]
[150.52210999 116.50987244]
[129.73176575 150.76666260]
[87.47797394 163.28625488]
[44.13278198 142.49789429]
[45.42225647 157.44236755]
[46.71172714 172.38684082]
[48.00119781 187.33131409]
[49.29067230 202.27578735]
[50.58014297 217.22026062]
[65.45770264 219.69189453]
[79.25285339 225.78654480]
[91.09841919 235.12106323]
[100.24977875 247.10870361]
[106.13166809 260.99591064]
[108.37434387 275.90969849]
[106.83683777 290.91259766]
[101.61579132 305.06149292]
[93.03941345 317.46701050]
[81.64680481 327.34927368]
[68.15413666 334.08712769]
[53.40954971 337.25698853]
[38.33991241 336.65960693]
[23.89251328 332.33255005]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 204]
[10 203]
[11 202]
[12 201]
[13 200]
[14 199]
[27 54]
[28 53]
[29 52]
[30 51]
[32 50]
[33 49]
[34 48]
[37 47]
[38 46]
[39 45]
[55 69]
[56 68]
[57 67]
[58 66]
[59 65]
[74 88]
[75 87]
[76 86]
[77 85]
[78 84]
[105 121]
[106 120]
[107 119]
[108 118]
[109 117]
[110 116]
[123 145]
[124 144]
[125 143]
[126 142]
[163 196]
[164 195]
[165 194]
[166 193]
[167 192]
[168 191]
[169 190]
[170 189]
[171 188]
[172 187]
[174 185]
[175 184]
[176 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
