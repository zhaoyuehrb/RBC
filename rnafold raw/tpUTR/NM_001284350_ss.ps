%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 14:11:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGAGUUGGUACAGAAGGCCAUGCCACAUGUCCAGAAUAUUCAAGAAUGCUUAUUCUCUUAGAUGAUACCGCACCCAUAGGAAUUGAGAAUUGGGAGUGGGAAGAAAACCUCAAAGUGGUUCAUACUUGCCUGUAAAAAGUAAAUGCAUUUUACUAAUAAAAAAAUAUGGAAGUAAAUUAA\
) } def
/len { sequence length } bind def

/coor [
[43.29557800 263.83865356]
[44.78210831 248.91249084]
[48.94625854 234.50486755]
[38.43159103 245.20262146]
[27.91692734 255.90037537]
[17.40226173 266.59811401]
[7.26310778 277.65240479]
[-2.48845339 289.05010986]
[-12.24001503 300.44778442]
[-15.45296860 309.02682495]
[-22.25959778 311.95614624]
[-32.20643997 323.18380737]
[-42.15327835 334.41146851]
[-38.95766068 349.48110962]
[-45.17559814 363.38040161]
[-58.23124313 370.86468506]
[-73.01354218 369.24551392]
[-82.96038055 380.47317505]
[-92.90721893 391.70083618]
[-98.88475800 407.56604004]
[-115.78471375 406.21405029]
[-119.16391754 389.60028076]
[-104.13488007 381.75396729]
[-94.18804169 370.52630615]
[-84.24120331 359.29864502]
[-87.63037872 344.81930542]
[-81.77437592 330.95672607]
[-68.72589874 323.10876465]
[-53.38093948 324.46463013]
[-43.43410110 313.23696899]
[-33.48725891 302.00930786]
[-23.63769150 290.69619751]
[-13.88613129 279.29852295]
[-4.13456964 267.90084839]
[-4.23286438 265.07470703]
[-3.20288944 262.03915405]
[-0.95910150 259.22924805]
[2.42316699 257.10281372]
[6.70451403 256.08346558]
[17.21917915 245.38571167]
[27.73384476 234.68795776]
[38.24850845 223.99020386]
[39.59963989 216.87654114]
[45.35068512 211.26976013]
[48.94041824 196.70562744]
[52.53015518 182.14151001]
[56.11988831 167.57737732]
[59.70962524 153.01325989]
[63.29935837 138.44912720]
[66.88909149 123.88499451]
[60.49771881 110.31479645]
[46.98318481 103.80654144]
[33.46865463 97.29828644]
[19.95412064 90.79003143]
[6.43958712 84.28177643]
[-8.39316273 89.73751068]
[-22.70403862 83.03121185]
[-28.00264931 68.14161682]
[-21.14542580 53.90243912]
[-6.20063543 48.76154709]
[7.96524239 55.76893234]
[12.94784355 70.76724243]
[26.46237564 77.27549744]
[39.97690964 83.78375244]
[53.49144363 90.29200745]
[67.00597382 96.80026245]
[64.78681183 81.41082001]
[70.19260406 64.32505798]
[83.93613434 49.32688522]
[80.59832001 34.70296478]
[77.26050568 20.07904625]
[73.92269135 5.45512772]
[63.30855179 -6.27733421]
[68.01977539 -20.40721893]
[64.68196106 -35.03113556]
[61.34415054 -49.65505600]
[58.00633621 -64.27897644]
[43.01435089 -66.79071808]
[30.12741852 -74.85269165]
[21.31069946 -87.23549652]
[17.90868187 -102.05084991]
[20.44014740 -117.03952026]
[28.51906395 -129.91583252]
[40.91345978 -138.71626282]
[55.73327637 -142.09878540]
[70.71859741 -139.54760742]
[83.58427429 -131.45175171]
[92.36838531 -119.04579163]
[95.73141479 -104.22154236]
[93.16052246 -89.23958588]
[85.04776001 -76.38456726]
[72.63025665 -67.61679077]
[75.96807098 -52.99287033]
[79.30588531 -38.36894989]
[82.64369202 -23.74503136]
[93.01908875 -13.05857086]
[88.54660797 2.11731362]
[91.88442230 16.74123192]
[95.22223663 31.36515045]
[98.56005096 45.98907089]
[105.75790405 48.09641647]
[109.83977509 33.66248703]
[114.18705750 19.30626488]
[128.58268738 23.52120781]
[124.50077057 37.95484924]
[120.15361023 52.31111145]
[127.35146332 54.41845703]
[138.04920959 43.90379333]
[148.74696350 33.38912964]
[159.44470215 22.87446404]
[158.03601074 7.30046034]
[167.01005554 -5.50581360]
[182.12954712 -9.49762726]
[196.25555420 -2.79016781]
[202.71820068 11.44950771]
[198.46600342 26.49785805]
[185.50674438 35.24951553]
[169.95936584 33.57221222]
[159.26162720 44.08687592]
[148.56387329 54.60154343]
[137.86611938 65.11621094]
[141.12025452 71.87347412]
[147.62850952 85.38800812]
[150.88264465 92.14527130]
[165.77326965 90.33722687]
[180.66390991 88.52917480]
[195.55453491 86.72112274]
[210.44517517 84.91307068]
[217.06793213 70.97956848]
[230.18441772 62.85791016]
[245.60920715 63.13969421]
[258.42031860 71.73500061]
[264.52972412 85.90110016]
[261.98800659 101.11764526]
[251.60617065 112.52908325]
[236.69702148 116.49407196]
[222.01803589 111.74739838]
[212.25321960 99.80370331]
[197.36259460 101.61175537]
[182.47195435 103.41980743]
[167.58131409 105.22785950]
[152.69068909 107.03590393]
[138.60542297 128.78576660]
[117.68034363 139.36544800]
[96.72969055 138.01078796]
[81.45322418 127.47473145]
[77.86348724 142.03886414]
[74.27375031 156.60298157]
[70.68401337 171.16711426]
[67.09428406 185.73124695]
[63.50454712 200.29536438]
[59.91481018 214.85949707]
[69.99682617 203.75305176]
[81.92353821 194.65615845]
[95.30051422 187.86967468]
[109.68534851 183.61801147]
[124.60230255 182.04180908]
[139.55804443 183.19317627]
[154.05796814 187.03404236]
[167.62252808 193.43739319]
[179.80311584 202.19143677]
[190.19688416 213.00668335]
[198.46011353 225.52543640]
[204.31950378 239.33367920]
[207.58128357 253.97473145]
[208.13758850 268.96441650]
[205.97000122 283.80697632]
[201.15020752 298.01153564]
[193.83763123 311.10833740]
[184.27409363 322.66424561]
[172.77587891 332.29705811]
[159.72326660 339.68820190]
[145.54791260 344.59329224]
[130.71865845 346.85003662]
[115.72589874 346.38381958]
[101.06549835 343.21008301]
[87.22229767 337.43380737]
[74.65410614 329.24594116]
[63.77659988 318.91735840]
[54.94950485 306.78961182]
[48.46475220 293.26379395]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 42]
[4 41]
[5 40]
[6 39]
[7 34]
[8 33]
[9 32]
[11 31]
[12 30]
[13 29]
[17 25]
[18 24]
[19 23]
[44 152]
[45 151]
[46 150]
[47 149]
[48 148]
[49 147]
[50 146]
[51 66]
[52 65]
[53 64]
[54 63]
[55 62]
[69 100]
[70 99]
[71 98]
[72 97]
[74 95]
[75 94]
[76 93]
[77 92]
[107 121]
[108 120]
[109 119]
[110 118]
[124 142]
[125 141]
[126 140]
[127 139]
[128 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
