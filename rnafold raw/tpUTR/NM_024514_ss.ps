%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Sep  9 23:16:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACUGCCUGGGAUGUUUUCGGGAACAAGAAUGUAUAUUUGCCUUAUCCCUGAACUUGGUUUAAUCAAAUCAAUGUGUGUAUUAGAAUAAAAGUCACAGCAUCAAAAAGCCAA\
) } def
/len { sequence length } bind def

/coor [
[104.91854095 326.87161255]
[90.90839386 319.05526733]
[88.42653656 303.20535278]
[99.37683105 291.48056030]
[100.21044922 276.50375366]
[93.19242096 263.36614990]
[101.68470764 250.01730347]
[102.51832581 235.04048157]
[89.52106476 222.29673767]
[89.82848358 203.78126526]
[103.70647430 191.04930115]
[103.70647430 176.04930115]
[103.70647430 161.04930115]
[103.70647430 146.04930115]
[103.70647430 131.04930115]
[80.48061371 120.42383575]
[74.83521271 98.14622498]
[60.87937164 92.64762878]
[46.92353058 87.14903259]
[32.96769333 81.65043640]
[19.01185417 76.15184021]
[5.05601501 70.65324402]
[-8.00700569 78.81802368]
[-23.19538307 77.73793793]
[-34.69934464 68.03624725]
[-38.24224091 53.59374237]
[-52.19808197 48.09514618]
[-66.15392303 42.59654999]
[-71.59696960 43.42737961]
[-76.29695129 42.12569427]
[-79.54234314 39.36670303]
[-81.01190948 36.01431656]
[-94.46115875 29.37219429]
[-107.91040802 22.73007202]
[-124.23107147 24.33251762]
[-133.55787659 10.84390259]
[-126.29620361 -3.85984182]
[-109.91623688 -4.65276432]
[-101.26828003 9.28082657]
[-87.81903839 15.92294788]
[-74.36978912 22.56506920]
[-60.65532303 28.64071083]
[-46.69948578 34.13930511]
[-32.74364471 39.63790131]
[-20.30151367 31.49349785]
[-5.27162552 32.24613190]
[6.57158852 41.81648636]
[10.55461121 56.69740295]
[24.51045036 62.19599915]
[38.46628952 67.69459534]
[52.42212677 73.19319153]
[66.37796783 78.69178772]
[80.33380890 84.19038391]
[90.10124207 76.78970337]
[102.20339966 74.86341095]
[107.89545441 60.98535156]
[113.58750916 47.10729218]
[119.27957153 33.22923660]
[124.97162628 19.35117722]
[130.66368103 5.47312021]
[136.35574341 -8.40493774]
[133.62371826 -24.57491302]
[146.43203735 -34.81595993]
[161.60459900 -28.59296989]
[163.53315735 -12.30761814]
[150.23379517 -2.71288109]
[144.54174805 11.16517639]
[138.84968567 25.04323387]
[133.15762329 38.92129135]
[127.46556854 52.79935074]
[121.77351379 66.67740631]
[116.08145905 80.55546570]
[123.59300995 86.37382507]
[128.84696960 95.11599731]
[130.71691895 105.85384369]
[145.68070984 106.89556885]
[160.64448547 107.93729401]
[175.60827637 108.97901917]
[184.52973938 106.42758179]
[190.97169495 110.26338959]
[205.90074158 111.72067261]
[220.82977295 113.17796326]
[231.02581787 101.48094177]
[246.15742493 98.04376221]
[260.40618896 104.18808746]
[268.29315186 117.55130005]
[266.78561401 132.99496460]
[256.46328735 144.58068848]
[241.29528809 147.85353088]
[227.11402893 141.55499268]
[219.37249756 128.10700989]
[204.44345093 126.64971924]
[189.51440430 125.19242859]
[174.56654358 123.94280243]
[159.60276794 122.90107727]
[144.63897705 121.85935211]
[129.67520142 120.81762695]
[118.70647430 131.04930115]
[118.70647430 146.04930115]
[118.70647430 161.04930115]
[118.70647430 176.04930115]
[118.70647430 191.04930115]
[128.71832275 197.76625061]
[134.12937927 208.40472412]
[133.67092896 220.21057129]
[127.57698059 230.19119263]
[117.49514771 235.87411499]
[116.66152191 250.85092163]
[123.61992645 265.05978394]
[115.18727112 277.33737183]
[114.35364532 292.31417847]
[123.93511200 305.18179321]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 111]
[5 110]
[7 108]
[8 107]
[11 102]
[12 101]
[13 100]
[14 99]
[15 98]
[17 53]
[18 52]
[19 51]
[20 50]
[21 49]
[22 48]
[26 44]
[27 43]
[28 42]
[32 41]
[33 40]
[34 39]
[55 72]
[56 71]
[57 70]
[58 69]
[59 68]
[60 67]
[61 66]
[75 97]
[76 96]
[77 95]
[78 94]
[80 93]
[81 92]
[82 91]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
