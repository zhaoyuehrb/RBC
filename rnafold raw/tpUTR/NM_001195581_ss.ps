%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 08:32:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCUCUUGUAUAUGGACUGAUUUGUUUCUUCUUCUUACACAUUUAAGUUGACCUCUUUCUUUUGGGUGAAUUUUAGGGCUUGGGGGAAAUAUCGAAAAAACAUACUGAAGACUCAUGUUCUGUCAAGCCCCAGAACAAUGUAGAAUGGGCAAUAAUUCUGUAACCUUCUUAACUGUGUCAAC\
) } def
/len { sequence length } bind def

/coor [
[219.81445312 348.36975098]
[231.40057373 338.77801514]
[224.04891968 325.70309448]
[216.69726562 312.62820435]
[209.34561157 299.55328369]
[201.99395752 286.47839355]
[194.53096008 273.46670532]
[186.95715332 260.51922607]
[173.85231018 253.44020081]
[173.56289673 237.62164307]
[165.98908997 224.67416382]
[158.41526794 211.72666931]
[150.84146118 198.77919006]
[143.26765442 185.83169556]
[135.58358765 172.94934082]
[121.09674072 169.68331909]
[113.01018524 156.79681396]
[116.53411102 141.62380981]
[108.74035645 128.80752563]
[100.94659424 115.99123383]
[108.57506561 128.90658569]
[113.08048248 143.21397400]
[114.22873688 158.16995239]
[111.96017456 172.99742126]
[106.39266205 186.92590332]
[97.81549072 199.23168945]
[86.67434692 209.27534485]
[73.54813385 216.53498840]
[59.11889267 220.63340759]
[44.13638687 221.35763550]
[29.37911987 218.67005920]
[15.61389160 212.71032715]
[3.55595708 203.78810120]
[-6.16814327 192.36697388]
[-13.05313587 179.04043579]
[-16.74127197 164.50091553]
[-17.04090881 149.50390625]
[-13.93648148 134.82867432]
[-7.58929586 121.23774719]
[1.67084157 109.43732452]
[13.36276531 100.04057312]
[26.87895393 93.53575897]
[41.51708984 90.26086426]
[56.51656723 90.38607025]
[71.09799957 93.90486145]
[84.50278473 100.63378906]
[71.18450928 93.73281097]
[57.86623001 86.83184052]
[44.54795074 79.93086243]
[31.22967148 73.02988434]
[15.41704178 73.55074310]
[7.67634678 60.82553864]
[-5.64193153 53.92456055]
[-18.96021080 47.02358627]
[-28.04336929 45.84840393]
[-32.44546890 39.88940430]
[-46.37693024 46.72270584]
[-61.65842438 44.02909088]
[-72.41390228 32.84431458]
[-74.50766754 17.46914864]
[-67.13462830 3.81565642]
[-53.12985611 -2.86611319]
[-37.87848282 -0.00688429]
[-27.24496651 11.29391193]
[-25.31811523 26.69088745]
[-12.05923462 33.70530701]
[1.25904393 40.60628128]
[14.57732201 47.50725937]
[29.43733978 46.49279785]
[38.13064957 59.71160889]
[51.44892502 66.61258698]
[64.76720428 73.51355743]
[78.08547974 80.41453552]
[91.40376282 87.31551361]
[94.04861450 86.80319977]
[96.60500336 86.79910278]
[98.98107910 87.25642395]
[104.95709991 73.49826050]
[110.93311310 59.74008942]
[116.90912628 45.98191833]
[122.88514709 32.22375107]
[128.86116028 18.46557999]
[134.83717346 4.70741034]
[140.81320190 -9.05075932]
[139.21446228 -24.79098129]
[151.38175964 -33.38203049]
[157.35777283 -47.14020157]
[163.33378601 -60.89836884]
[169.30979919 -74.65653992]
[169.86239624 -83.79872131]
[175.50709534 -88.59721375]
[181.71713257 -102.25135040]
[187.92716980 -115.90548706]
[188.63575745 -125.03689575]
[194.36155701 -129.73832703]
[200.80381775 -143.28443909]
[189.96717834 -153.86018372]
[183.15386963 -167.38265991]
[181.10293579 -182.38507080]
[184.03686523 -197.24006653]
[191.63737488 -210.33628845]
[203.08004761 -220.25314331]
[217.12364197 -225.91493225]
[232.24484253 -226.70751953]
[246.80339050 -222.54490662]
[259.22009277 -213.87864685]
[268.14810181 -201.64877319]
[272.61892700 -187.18191528]
[272.14764404 -172.04728699]
[266.78533936 -157.88662720]
[257.11370850 -146.23594666]
[244.18185425 -138.35902405]
[229.39251709 -135.11030579]
[214.34992981 -136.84219360]
[207.90768433 -123.29606628]
[201.58129883 -109.69544220]
[195.37126160 -96.04131317]
[189.16122437 -82.38717651]
[183.06797791 -68.68052673]
[177.09196472 -54.92235184]
[171.11593628 -41.16418457]
[165.13992310 -27.40601540]
[167.16610718 -12.64986801]
[154.57136536 -3.07474303]
[148.59535217 10.68342686]
[142.61932373 24.44159698]
[136.64331055 38.19976425]
[130.66729736 51.95793533]
[124.69128418 65.71610260]
[118.71526337 79.47427368]
[112.73925018 93.23244476]
[113.76288605 108.19747162]
[121.55664825 121.01376343]
[129.35040283 133.83006287]
[144.44351196 137.68177795]
[152.16491699 150.79034424]
[148.39987183 165.15557861]
[155.55009460 170.87915039]
[156.21513367 178.25788879]
[163.78895569 191.20538330]
[171.36276245 204.15286255]
[178.93656921 217.10035706]
[186.51037598 230.04783630]
[200.15695190 238.05294800]
[199.90463257 252.94541931]
[207.47843933 265.89291382]
[214.52990723 271.73770142]
[215.06886292 279.12673950]
[222.42051697 292.20162964]
[229.77217102 305.27655029]
[237.12382507 318.35144043]
[244.47547913 331.42636108]
[258.69082642 326.51068115]
[273.55548096 324.21243286]
[288.59161377 324.60556030]
[303.31585693 327.67733765]
[317.25494385 333.32910156]
[329.96072388 341.37911987]
[341.02478027 351.56863403]
[350.09146118 363.57006836]
[356.86932373 376.99768066]
[361.14044189 391.41979980]
[362.76757812 406.37280273]
[361.69836426 421.37600708]
[357.96719360 435.94717407]
[351.69403076 449.61782837]
[343.08050537 461.94854736]
[332.40353394 472.54296875]
[320.00631714 481.06051636]
[306.28735352 487.22738647]
[291.68768311 490.84530640]
[276.67660522 491.79800415]
[261.73669434 490.05487061]
[247.34817505 485.67190552]
[233.97358704 478.79003906]
[222.04287720 469.63046265]
[211.93955994 458.48760986]
[203.98841858 445.71972656]
[198.44505310 431.73721313]
[195.48764038 416.98953247]
[195.21127319 401.95080566]
[197.62483215 387.10446167]
[202.65071106 372.92770386]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 152]
[3 151]
[4 150]
[5 149]
[6 148]
[7 146]
[8 145]
[10 143]
[11 142]
[12 141]
[13 140]
[14 139]
[15 137]
[18 134]
[19 133]
[20 132]
[46 74]
[47 73]
[48 72]
[49 71]
[50 70]
[52 68]
[53 67]
[54 66]
[56 65]
[77 131]
[78 130]
[79 129]
[80 128]
[81 127]
[82 126]
[83 125]
[84 124]
[86 122]
[87 121]
[88 120]
[89 119]
[91 118]
[92 117]
[93 116]
[95 115]
[96 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
