%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 02:39:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAGGGCCUGGGGCAGGGCACAAGGGGUUGAUCUCAGCCCACAAGCCCCAGGGGCAGCCCAGGAAAGCAGGCGACGGAUGUGGAUCCUGACCUCCUGAGAGGUGUGAGGUGCAGGGAUACCCACCUCUGCCUUGACGGCCGCGCACCCCUUAGGAAGUGGCUGUCCAGCGCCUGCCUGUGCUGGGCCUGGGAGA\
) } def
/len { sequence length } bind def

/coor [
[19.87299156 440.41506958]
[14.01646042 426.27435303]
[15.41382217 411.03277588]
[23.74397469 398.19271851]
[37.09270859 390.70474243]
[36.61193466 375.71243286]
[36.13116074 360.72015381]
[35.65038681 345.72784424]
[35.16961288 330.73556519]
[34.68883896 315.74325562]
[34.20806503 300.75097656]
[33.72729492 285.75866699]
[25.58603859 273.28594971]
[32.87704849 259.24487305]
[32.39627457 244.25256348]
[31.91549873 229.26028442]
[31.43472481 214.26799011]
[18.36494446 206.90722656]
[5.29516459 214.26799011]
[-7.77461624 221.62875366]
[-7.19884729 235.61161804]
[-12.68021297 248.41624451]
[-23.09564781 257.56408691]
[-36.37316132 261.31127930]
[-49.90389252 258.98080444]
[-61.05469513 251.08407593]
[-74.24077606 258.23440552]
[-87.42684937 265.38476562]
[-100.61293030 272.53509521]
[-113.79901123 279.68542480]
[-126.98508453 286.83575439]
[-135.09521484 301.08911133]
[-151.49351501 300.92163086]
[-159.31080627 286.50558472]
[-150.50534058 272.67098999]
[-134.13542175 273.64968872]
[-120.94934845 266.49935913]
[-107.76326752 259.34902954]
[-94.57718658 252.19868469]
[-81.39111328 245.04833984]
[-68.20503235 237.89801025]
[-68.17050171 221.74478149]
[-59.95030212 207.73062134]
[-45.70457458 199.72523499]
[-29.27195930 199.99426270]
[-15.13537884 208.55895996]
[-2.06559873 201.19819641]
[11.00418186 193.83744812]
[8.96685982 178.97644043]
[-5.60168219 175.40466309]
[-20.84730148 179.63333130]
[-31.36609459 169.08799744]
[-45.93463516 165.51622009]
[-60.50317764 161.94444275]
[-76.08946991 167.04342651]
[-88.11614990 155.89485168]
[-84.21121216 139.96740723]
[-68.39171600 135.64588928]
[-56.93140411 147.37590027]
[-42.36286163 150.94767761]
[-27.79431915 154.51945496]
[-13.59074020 150.03530884]
[-2.02990675 160.83612061]
[12.53863525 164.40789795]
[23.64033699 167.93431091]
[32.34877014 173.84259033]
[38.22031784 181.28839111]
[41.05721283 189.35978699]
[51.49245071 178.58454895]
[61.92768860 167.80931091]
[72.36293030 157.03407288]
[82.79816437 146.25881958]
[93.23340607 135.48358154]
[103.66864014 124.70834351]
[79.51302338 138.65638733]
[43.66905212 127.12172699]
[20.11195755 84.96489716]
[12.96161938 71.77881622]
[5.81128216 58.59273911]
[-1.33905506 45.40665817]
[-15.59239864 37.29652786]
[-15.42490292 20.89823532]
[-1.00887275 13.08094025]
[12.82571602 21.88640404]
[11.84702396 38.25632095]
[18.99736023 51.44240189]
[26.14769936 64.62847900]
[33.29803467 77.81455994]
[40.55274582 75.91214752]
[55.06217194 72.10733032]
[62.31688309 70.20491791]
[62.07646561 55.20684814]
[61.83604431 40.20877457]
[61.59562683 25.21070099]
[61.35520935 10.21262836]
[52.46945190 -3.57052541]
[60.20279312 -18.03176689]
[76.59983063 -18.29460907]
[84.79270172 -4.08866405]
[76.35328674 9.97221088]
[76.59370422 24.97028351]
[76.83412170 39.96835709]
[77.07453918 54.96643066]
[77.31495667 69.96450043]
[84.46984100 72.21342468]
[98.77960205 76.71127319]
[105.93448639 78.96019745]
[114.71231842 66.79673767]
[123.49015045 54.63328171]
[132.26797485 42.46982574]
[141.04580688 30.30636978]
[149.82363892 18.14291382]
[150.87550354 11.59529018]
[154.53312683 7.22526741]
[159.08288574 5.73636103]
[168.24607849 -6.13950253]
[169.89256287 -22.45578575]
[184.95516968 -28.94038200]
[197.93876648 -18.92249298]
[195.48695374 -2.70766473]
[180.12193298 3.02367711]
[170.95875549 14.89954090]
[161.98710632 26.92074585]
[153.20927429 39.08420181]
[144.43144226 51.24765778]
[135.65361023 63.41111374]
[126.87577057 75.57456970]
[118.09793854 87.73802948]
[121.13381958 94.59612274]
[136.04826355 96.19589996]
[127.20556641 108.31230927]
[130.24143982 115.17041016]
[145.14712524 116.84987640]
[159.72682190 110.70635223]
[171.50776672 119.82000732]
[186.41345215 121.49947357]
[201.31913757 123.17893982]
[216.22482300 124.85840607]
[231.13050842 126.53787231]
[246.03617859 128.21734619]
[260.94186401 129.89680481]
[275.84756470 131.57627869]
[290.75323486 133.25573730]
[300.25329590 123.69728851]
[313.33374023 121.39316559]
[325.17575073 126.96450043]
[331.54736328 138.17243958]
[346.42422485 140.09060669]
[359.95315552 131.46807861]
[375.08230591 136.80546570]
[380.20593262 152.00836182]
[371.39361572 165.41441345]
[355.40539551 166.73963928]
[344.50607300 154.96745300]
[329.62921143 153.04930115]
[316.77197266 163.88171387]
[299.72204590 162.03317261]
[289.07376099 148.16142273]
[274.16809082 146.48196411]
[259.26239014 144.80249023]
[244.35671997 143.12301636]
[229.45103455 141.44355774]
[214.54534912 139.76408386]
[199.63966370 138.08462524]
[184.73399353 136.40515137]
[169.82830811 134.72569275]
[156.31475830 140.98933411]
[143.46765137 131.75555420]
[128.56198120 130.07609558]
[114.44388580 135.14358521]
[104.00864410 145.91882324]
[93.57341003 156.69406128]
[83.13816833 167.46929932]
[72.70292664 178.24453735]
[62.26769257 189.01979065]
[51.83245468 199.79502869]
[46.42701721 213.78721619]
[46.90779114 228.77951050]
[47.38856506 243.77180481]
[47.86933899 258.76409912]
[56.04498291 272.30917358]
[48.71958542 285.27789307]
[49.20035934 300.27020264]
[49.68113327 315.26248169]
[50.16190720 330.25479126]
[50.64268112 345.24707031]
[51.12345505 360.23937988]
[51.60422897 375.23165894]
[52.08500290 390.22396851]
[65.88607025 396.84130859]
[75.02176666 409.12127686]
[77.39279175 424.24200439]
[72.45429230 438.72888184]
[61.34109879 449.25292969]
[46.60694504 453.39578247]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 189]
[6 188]
[7 187]
[8 186]
[9 185]
[10 184]
[11 183]
[12 182]
[14 180]
[15 179]
[16 178]
[17 177]
[18 48]
[19 47]
[20 46]
[26 41]
[27 40]
[28 39]
[29 38]
[30 37]
[31 36]
[49 64]
[50 63]
[52 61]
[53 60]
[54 59]
[68 176]
[69 175]
[70 174]
[71 173]
[72 172]
[73 171]
[74 170]
[77 88]
[78 87]
[79 86]
[80 85]
[91 104]
[92 103]
[93 102]
[94 101]
[95 100]
[107 128]
[108 127]
[109 126]
[110 125]
[111 124]
[112 123]
[115 122]
[116 121]
[132 169]
[133 168]
[135 166]
[136 165]
[137 164]
[138 163]
[139 162]
[140 161]
[141 160]
[142 159]
[143 158]
[147 155]
[148 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
