%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 23:08:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCGGUUCCUUCCUGGAGGCCUCCUGUCCUCGGGGACCCCAGCACCUCAUCAUCAGCAUUGCUGGAGCCAAGGGUAGGAGCCCUACACUAGGAGCCCAGGAUGGGACGGCGCAUCAGCCGAGAGGGAGGGAACUUUUCAGUCAAAUUCCUCAAAAAGAGGCUGGAAUAAAGCCUGGGCUUAA\
) } def
/len { sequence length } bind def

/coor [
[54.03378677 196.90161133]
[53.26580048 181.92127991]
[52.49781036 166.94094849]
[51.72982407 151.96063232]
[46.73838043 97.10949707]
[78.64079285 71.32204437]
[64.68661499 65.81923676]
[50.73243713 60.31642151]
[36.77825928 54.81360626]
[22.82408333 49.31079483]
[7.14761925 51.44598770]
[-1.85382617 39.57909012]
[-15.80800247 34.07627487]
[-29.76218033 28.57346153]
[-43.71635437 23.07064819]
[-57.67053223 17.56783485]
[-71.62471008 12.06502247]
[-86.03339386 7.89491463]
[-100.76962280 5.09425831]
[-115.50584412 2.29360199]
[-130.50798035 7.31820583]
[-141.56680298 -2.65934801]
[-156.30302429 -5.46000433]
[-171.03924561 -8.26066017]
[-185.77548218 -11.06131649]
[-200.51170349 -13.86197281]
[-215.24792480 -16.66262817]
[-229.98414612 -19.46328545]
[-244.72038269 -22.26394081]
[-259.45660400 -25.06459808]
[-274.19284058 -27.86525345]
[-282.84136963 -21.21948814]
[-293.50149536 -20.45978737]
[-302.62176514 -25.59640884]
[-307.29702759 -34.71514893]
[-321.92901611 -38.01728439]
[-331.01361084 -36.85321426]
[-336.78164673 -41.50271988]
[-352.02136230 -37.25280380]
[-362.55484009 -47.78347397]
[-377.12835693 -51.33494186]
[-391.70187378 -54.88640976]
[-406.27536011 -58.43787384]
[-420.84887695 -61.98934174]
[-435.42239380 -65.54080963]
[-444.07614136 -53.07176590]
[-456.65203857 -44.57406616]
[-471.44931030 -41.19695282]
[-486.46676636 -43.39715576]
[-499.67337036 -50.87711334]
[-509.28308105 -62.62522125]
[-513.99621582 -77.05264282]
[-513.17541504 -92.20819855]
[-506.93167114 -106.04220581]
[-496.10937500 -116.68374634]
[-482.17218018 -122.69363403]
[-467.00494385 -123.25907135]
[-452.65893555 -118.30359650]
[-441.07434082 -108.49739838]
[-433.81787109 -95.16667938]
[-431.87091064 -80.11431122]
[-417.29739380 -76.56284332]
[-402.72390747 -73.01138306]
[-388.15039062 -69.45991516]
[-373.57687378 -65.90844727]
[-359.00338745 -62.35698318]
[-344.80606079 -66.86092377]
[-333.23019409 -56.07622528]
[-318.62689209 -52.64929962]
[-303.99487305 -49.34716797]
[-286.02359009 -56.44543076]
[-271.39218140 -42.60147858]
[-256.65594482 -39.80082321]
[-241.91972351 -37.00016785]
[-227.18350220 -34.19950867]
[-212.44726562 -31.39885330]
[-197.71104431 -28.59819794]
[-182.97482300 -25.79754066]
[-168.23860168 -22.99688530]
[-153.50236511 -20.19622993]
[-138.76614380 -17.39557266]
[-124.81804657 -22.62049866]
[-112.70518494 -12.44262314]
[-97.96896362 -9.64196682]
[-83.23273468 -6.84131050]
[-93.64241028 -17.64125443]
[-97.94197845 -32.01183701]
[-95.17442322 -46.75431442]
[-85.95574951 -58.58715820]
[-72.33795929 -64.87649536]
[-57.35223007 -64.22238922]
[-44.33423233 -56.77042770]
[-36.18163681 -44.17935181]
[-34.70913315 -29.25180244]
[-40.24448776 -15.31050205]
[-51.55558014 -5.45864248]
[-66.12189484 -1.88915408]
[-52.16772079 3.61365914]
[-38.21354294 9.11647224]
[-24.25936699 14.61928558]
[-10.30518913 20.12209892]
[3.64898705 25.62491226]
[18.32735443 23.09612274]
[28.32689667 35.35661697]
[42.28107452 40.85943222]
[56.23524857 46.36224365]
[70.18943024 51.86505508]
[84.14360046 57.36787033]
[98.80327606 54.19076538]
[109.22724152 43.40462494]
[119.65121460 32.61848068]
[119.13082123 16.82276344]
[129.99295044 5.34279203]
[145.79328918 4.98943329]
[157.15777588 15.97232819]
[157.34407043 31.77551842]
[146.24163818 43.02325439]
[130.43736267 43.04244995]
[120.01338959 53.82859421]
[109.58941650 64.61473846]
[112.57743073 71.49382019]
[118.55344391 85.25199127]
[121.54145050 92.13107300]
[136.53926086 91.87497711]
[151.53707886 91.61888123]
[166.53489685 91.36278534]
[181.53269958 91.10668945]
[196.53051758 90.85059357]
[204.04054260 77.52592468]
[217.12535095 69.80036163]
[232.21997070 69.66246033]
[245.26960754 77.04914093]
[252.81892395 89.88944244]
[267.81674194 89.63334656]
[282.81454468 89.37725067]
[296.58840942 80.47708893]
[311.05773926 88.19530487]
[311.33770752 104.59206390]
[297.14031982 112.79978180]
[283.07064819 104.37506104]
[268.07284546 104.63115692]
[253.07501221 104.88725281]
[245.96849060 117.97781372]
[233.17864990 125.80571747]
[218.08811951 126.18324280]
[204.74717712 118.90891266]
[196.78662109 105.84841156]
[181.78880310 106.10450745]
[166.79098511 106.36060333]
[151.79318237 106.61669922]
[136.79536438 106.87279510]
[121.79754639 107.12889099]
[118.29033661 113.75833130]
[131.57493591 120.72391510]
[144.80796814 127.78697205]
[137.79376221 141.04595947]
[124.50890350 134.08036804]
[111.27591705 127.01721191]
[107.76870728 133.64665222]
[115.99548340 146.18937683]
[124.22226715 158.73211670]
[132.44903564 171.27484131]
[140.67582703 183.81758118]
[156.22555542 185.47282410]
[167.03607178 196.77180481]
[168.00297546 212.37945557]
[158.66972351 224.92634583]
[143.44320679 228.48822021]
[129.51289368 221.38325500]
[123.45627594 206.96620178]
[128.13308716 192.04435730]
[119.90631104 179.50161743]
[111.67953491 166.95889282]
[103.45275116 154.41615295]
[95.22597504 141.87342834]
[88.09702301 144.20323181]
[66.71015167 151.19264221]
[67.47814178 166.17295837]
[68.24612427 181.15328979]
[69.01411438 196.13362122]
[78.37934113 209.59558105]
[71.15962219 224.31997681]
[54.78198242 225.15960693]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 180]
[2 179]
[3 178]
[4 177]
[6 108]
[7 107]
[8 106]
[9 105]
[10 104]
[12 102]
[13 101]
[14 100]
[15 99]
[16 98]
[17 97]
[18 85]
[19 84]
[20 83]
[22 81]
[23 80]
[24 79]
[25 78]
[26 77]
[27 76]
[28 75]
[29 74]
[30 73]
[31 72]
[35 70]
[36 69]
[38 68]
[40 66]
[41 65]
[42 64]
[43 63]
[44 62]
[45 61]
[109 120]
[110 119]
[111 118]
[123 152]
[124 151]
[125 150]
[126 149]
[127 148]
[128 147]
[133 142]
[134 141]
[135 140]
[159 175]
[160 174]
[161 173]
[162 172]
[163 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
