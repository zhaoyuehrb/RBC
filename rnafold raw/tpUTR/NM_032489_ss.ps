%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 16:11:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGGCGUCUAUUCUGCCCACACCCCAGCCCAACCUGCCCACGUUCUCUAUUGUUUUGAGACCCCAUUGCUUUCAGGCUGCCCCUUCUGGGUCUGUUACUCGGCCCCUACUCACAUUUCCUUGGGUUGGAGCAACAGUCCCAGAGAGGGCCACGGUGGGAGCUGCGCCCUCCUUAAAAGAUGACUUUACAUAAAAUGUUGAUCUUC\
) } def
/len { sequence length } bind def

/coor [
[192.44046021 337.22653198]
[187.39060974 320.10531616]
[190.34674072 302.44766235]
[200.75907898 287.81845093]
[193.16070557 274.88534546]
[185.56234741 261.95223999]
[177.96398926 249.01914978]
[170.36563110 236.08605957]
[155.54823303 234.82807922]
[144.17834473 224.96960449]
[140.75360107 210.13301086]
[146.79158020 195.96089172]
[139.19322205 183.02778625]
[131.59486389 170.09469604]
[123.99650574 157.16160583]
[116.39814758 144.22851562]
[108.79978180 131.29541016]
[101.20142365 118.36231995]
[105.30490112 132.79013062]
[100.59254456 147.03068542]
[88.69283295 156.16287231]
[73.71796417 157.03083801]
[60.84284973 149.33465576]
[54.51676941 135.73388672]
[56.92584229 120.92861176]
[67.23756409 110.03510284]
[81.88883209 106.81790161]
[66.89962769 106.24890900]
[51.91042328 105.67991638]
[36.92121887 105.11092377]
[30.79131508 117.84739685]
[20.30141830 127.25659180]
[7.05766487 131.94219971]
[-6.92898178 131.22776794]
[-19.54806709 125.25416565]
[-28.90810013 114.95332336]
[-33.62005234 101.90299225]
[-48.59889603 101.10659027]
[-55.43732834 115.65639496]
[-67.30670929 126.44256592]
[-82.37001801 131.83567810]
[-98.31118774 131.03793335]
[-112.69120789 124.20099640]
[-123.32128143 112.39826202]
[-128.59597778 97.45644379]
[-143.58518982 96.88745117]
[-158.57438660 96.31845856]
[-173.56359863 95.74946594]
[-182.30603027 108.46062469]
[-196.54162598 114.40632629]
[-211.72784424 111.68933105]
[-223.01884460 101.17662048]
[-226.81167603 86.22276306]
[-221.89608765 71.59947205]
[-209.84060669 61.97299957]
[-194.49211121 60.41510773]
[-180.74822998 67.42292023]
[-172.99459839 80.76026154]
[-158.00540161 81.32925415]
[-143.01618958 81.89824677]
[-128.02699280 82.46723938]
[-122.65757751 69.49983215]
[-113.16381073 59.12235260]
[-100.67127228 52.59538651]
[-86.67144775 50.72119141]
[-72.84364319 53.74515915]
[-60.85357666 61.32389069]
[-52.15269089 72.56407928]
[-47.80248642 86.12774658]
[-32.82364655 86.92414856]
[-25.40644264 72.77178192]
[-12.51354694 63.23551178]
[3.30455494 60.26493454]
[18.89105606 64.50450897]
[31.11282539 75.15459442]
[37.49021149 90.12171936]
[52.47941589 90.69071198]
[67.46862030 91.25970459]
[82.45782471 91.82869720]
[94.90610504 83.45968628]
[100.03640747 69.36429596]
[105.16670990 55.26890564]
[110.29701233 41.17351532]
[107.74626160 25.55928230]
[119.36992645 16.24587250]
[124.50022888 2.15048289]
[129.63053894 -11.94490623]
[134.76083374 -26.04029655]
[139.89114380 -40.13568497]
[145.02143860 -54.23107529]
[150.15174866 -68.32646179]
[147.60099792 -83.94069672]
[159.22465515 -93.25410461]
[164.35496521 -107.34949493]
[169.48526001 -121.44488525]
[174.61557007 -135.54026794]
[179.74586487 -149.63566589]
[177.19512939 -165.24989319]
[188.81878662 -174.56330872]
[193.94909668 -188.65869141]
[199.07939148 -202.75408936]
[196.52864075 -218.36831665]
[208.15231323 -227.68173218]
[205.60156250 -243.29595947]
[217.22523499 -252.60937500]
[222.35554504 -266.70477295]
[227.48583984 -280.80014038]
[216.04246521 -290.77078247]
[208.97711182 -304.20379639]
[207.24531555 -319.28240967]
[211.08126831 -333.96743774]
[219.96620178 -346.27282715]
[232.69851685 -354.53436279]
[247.55624390 -357.63473511]
[262.52999878 -355.15466309]
[275.59472656 -347.42956543]
[284.98352051 -335.50418091]
[289.42663574 -320.99130249]
[288.32312012 -305.85369873]
[281.82229614 -292.13861084]
[270.80328369 -281.70089722]
[256.75637817 -275.95214844]
[241.58122253 -275.66986084]
[236.45092773 -261.57446289]
[231.32061768 -247.47906494]
[234.23832703 -232.87303162]
[222.24771118 -222.55142212]
[225.16540527 -207.94538879]
[213.17478943 -197.62377930]
[208.04447937 -183.52839661]
[202.91418457 -169.43299866]
[205.83187866 -154.82696533]
[193.84126282 -144.50535583]
[188.71095276 -130.40997314]
[183.58065796 -116.31458282]
[178.45034790 -102.21919250]
[173.32005310 -88.12380219]
[176.23774719 -73.51776886]
[164.24713135 -63.19616318]
[159.11683655 -49.10077286]
[153.98652649 -35.00538254]
[148.85623169 -20.90999413]
[143.72592163 -6.81460428]
[138.59562683 7.28078508]
[133.46531677 21.37617493]
[136.38302612 35.98221207]
[124.39239502 46.30381775]
[119.26209259 60.39920807]
[114.13179016 74.49459839]
[109.00148773 88.58998871]
[113.35595703 92.45137787]
[116.02182007 97.97042084]
[116.37760162 104.39925385]
[114.13452148 110.76396179]
[121.73287964 123.69705200]
[129.33123779 136.63015747]
[136.92959595 149.56324768]
[144.52795410 162.49633789]
[152.12631226 175.42942810]
[159.72467041 188.36253357]
[175.04350281 189.98724365]
[186.33630371 200.20124817]
[189.41296387 214.93211365]
[183.29873657 228.48770142]
[190.89709473 241.42079163]
[198.49545288 254.35389709]
[206.09381104 267.28698730]
[213.69216919 280.22009277]
[225.92385864 277.98562622]
[238.22682190 279.60943604]
[249.41575623 284.91989136]
[258.41732788 293.39105225]
[264.37316895 304.19442749]
[266.72164917 316.28024292]
[265.25082397 328.47933960]
[260.11758423 339.61627197]
[251.83088684 348.62252808]
[258.83273315 361.88806152]
[265.83456421 375.15359497]
[272.83639526 388.41912842]
[279.83822632 401.68463135]
[286.94055176 414.89666748]
[294.14288330 428.05438232]
[301.34524536 441.21212769]
[316.58493042 440.36685181]
[330.67889404 446.22543335]
[340.82876587 457.62469482]
[345.01925659 472.30130005]
[342.41833496 487.34118652]
[333.54248047 499.75817871]
[320.15393066 507.08685303]
[304.91104126 507.87213135]
[290.84024048 501.95809937]
[280.73538208 490.51895142]
[276.60269165 475.82595825]
[279.26281738 460.79641724]
[288.18750000 448.41448975]
[280.98516846 435.25674438]
[273.78280640 422.09899902]
[267.81173706 417.73974609]
[266.57272339 408.68649292]
[259.57086182 395.42095947]
[252.56903076 382.15542603]
[245.56719971 368.88989258]
[238.56535339 355.62435913]
[220.92240906 356.93399048]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 168]
[5 167]
[6 166]
[7 165]
[8 164]
[12 160]
[13 159]
[14 158]
[15 157]
[16 156]
[17 155]
[18 154]
[27 79]
[28 78]
[29 77]
[30 76]
[37 70]
[38 69]
[45 61]
[46 60]
[47 59]
[48 58]
[80 150]
[81 149]
[82 148]
[83 147]
[85 145]
[86 144]
[87 143]
[88 142]
[89 141]
[90 140]
[91 139]
[93 137]
[94 136]
[95 135]
[96 134]
[97 133]
[99 131]
[100 130]
[101 129]
[103 127]
[105 125]
[106 124]
[107 123]
[177 205]
[178 204]
[179 203]
[180 202]
[181 201]
[182 199]
[183 198]
[184 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
