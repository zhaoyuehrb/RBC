%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 03:55:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCCCGGGCGGGCCCCGGCAGCGCUUGCGCACCGCCCCGCGGGCUGGGGCCACCCACCCGGAGCCCCGGAGGACAGGGGGCGUUGCCUUCCCAGGAAGGAGGCGGGGCCGGCUCGAGGGGGUGGAUACUGUGAGUUUAAUUAUAAAGAAUGACCUGGUACAAAAGCCA\
) } def
/len { sequence length } bind def

/coor [
[86.24157715 109.29480743]
[89.23217773 105.18814087]
[93.03326416 102.18450928]
[81.35562897 92.77000427]
[69.59099579 83.46444702]
[57.74037933 74.26863861]
[45.88976288 65.07283020]
[34.03914642 55.87702179]
[22.18853188 46.68121338]
[6.54244614 44.33374786]
[1.23076093 30.41845894]
[-10.61985493 21.22264862]
[-22.47047043 12.02684021]
[-34.32108688 2.83103132]
[-46.17170334 -6.36477757]
[-58.02231979 -15.56058598]
[-69.87293243 -24.75639534]
[-97.67275238 -36.39679337]
[-111.69799805 -41.71586609]
[-125.72323608 -47.03494263]
[-139.74848938 -52.35401535]
[-153.77372742 -57.67308807]
[-167.79896545 -62.99216080]
[-181.82421875 -68.31123352]
[-195.84945679 -73.63031006]
[-209.87469482 -78.94937897]
[-225.52177429 -76.60848999]
[-234.67828369 -88.35614014]
[-243.08103943 -80.45758057]
[-253.78346252 -76.30212402]
[-265.21176147 -76.45944977]
[-275.70083618 -80.86809540]
[-283.73693848 -88.84995270]
[-288.17599487 -99.21436310]
[-288.40646362 -110.43556213]
[-302.11343384 -116.52811432]
[-315.87643433 -122.49301147]
[-329.69427490 -128.32972717]
[-343.51211548 -134.16644287]
[-352.67623901 -134.62924194]
[-357.53094482 -140.24221802]
[-371.23791504 -146.33477783]
[-384.94485474 -152.42733765]
[-398.65182495 -158.51989746]
[-412.35876465 -164.61245728]
[-426.17660522 -170.44917297]
[-440.10055542 -176.02803040]
[-454.02450562 -181.60688782]
[-467.08773804 -173.23239136]
[-482.57647705 -174.16923523]
[-494.53506470 -184.05720520]
[-498.36514282 -199.09417725]
[-492.59396362 -213.49810791]
[-479.44070435 -221.73039246]
[-463.96301270 -220.62557983]
[-452.11239624 -210.60845947]
[-448.44564819 -195.53083801]
[-434.52169800 -189.95198059]
[-420.59774780 -184.37312317]
[-415.89871216 -185.41281128]
[-410.49923706 -183.48297119]
[-406.26623535 -178.31941223]
[-392.55926514 -172.22685242]
[-378.85229492 -166.13429260]
[-365.14535522 -160.04173279]
[-351.43838501 -153.94918823]
[-337.67538452 -147.98428345]
[-323.85754395 -142.14756775]
[-310.03970337 -136.31085205]
[-302.62442017 -136.60601807]
[-296.02087402 -130.23507690]
[-282.31390381 -124.14251709]
[-266.75454712 -134.42272949]
[-247.99075317 -133.28672791]
[-233.55769348 -121.01098633]
[-229.35922241 -102.38138580]
[-214.71533203 -105.10273743]
[-204.55563354 -92.97462463]
[-190.53038025 -87.65554810]
[-176.50514221 -82.33647919]
[-162.47988892 -77.01740265]
[-148.45465088 -71.69833374]
[-134.42941284 -66.37925720]
[-120.40416718 -61.06018448]
[-106.37892151 -55.74111176]
[-92.35367584 -50.42203903]
[-78.64672089 -56.51459503]
[-73.19751740 -70.48979187]
[-67.74831390 -84.46499634]
[-62.29911423 -98.44019318]
[-56.84991074 -112.41539001]
[-63.43066025 -126.78443146]
[-57.84527588 -141.56884766]
[-43.40746307 -147.99731445]
[-28.68292427 -142.25593567]
[-22.40746498 -127.75096130]
[-28.30420494 -113.08794403]
[-42.87471390 -106.96619415]
[-48.32391357 -92.99098969]
[-53.77311707 -79.01579285]
[-59.22231674 -65.04059601]
[-64.67151642 -51.06539536]
[-60.67712402 -36.60700989]
[-48.82651138 -27.41120148]
[-36.97589493 -18.21539307]
[-25.12527847 -9.01958466]
[-13.27466202 0.17622435]
[-1.42404604 9.37203312]
[10.42656994 18.56784248]
[25.22501945 20.25756073]
[31.38434029 34.83059692]
[43.23495483 44.02640533]
[55.08557129 53.22221375]
[66.93618774 62.41802216]
[78.78680420 71.61383057]
[86.02833557 73.23672485]
[90.77013397 81.09236908]
[102.44776154 90.50687408]
[115.39142609 98.08721924]
[129.31536865 103.66608429]
[143.23931885 109.24494171]
[157.16326904 114.82379913]
[172.85115051 112.77416229]
[181.78771973 124.68998718]
[194.66264343 114.34615326]
[210.90240479 111.90879059]
[226.07237244 117.94797516]
[236.07810974 130.73205566]
[238.27027893 146.72286987]
[252.29553223 152.04194641]
[266.32077026 157.36102295]
[280.34600830 162.68008423]
[294.37124634 167.99916077]
[308.67849731 161.28514099]
[323.51419067 166.73287964]
[330.07656860 181.11032104]
[324.47229004 195.88758850]
[310.02627563 202.29759216]
[295.30911255 196.53738403]
[289.05218506 182.02441406]
[275.02694702 176.70533752]
[261.00170898 171.38626099]
[246.97645569 166.06718445]
[232.95120239 160.74810791]
[222.94625854 170.07589722]
[209.83288574 174.19445801]
[196.16021729 172.24331665]
[184.61204529 164.54769897]
[177.47998047 152.56607056]
[176.20886230 138.61393738]
[161.51692200 141.06260681]
[151.58441162 128.74774170]
[137.66046143 123.16888428]
[123.73651123 117.59002686]
[109.81256866 112.01116943]
[98.67784119 122.06193542]
[102.80644226 136.48257446]
[106.93504333 150.90319824]
[120.87448883 158.35086060]
[125.38485718 173.49787903]
[117.79023743 187.35778809]
[102.59638214 191.70776367]
[88.81753540 183.96704102]
[84.62844086 168.72804260]
[92.51441193 155.03179932]
[88.38581085 140.61117554]
[84.25720978 126.19053650]
[83.58232117 120.04011536]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 118]
[4 117]
[5 115]
[6 114]
[7 113]
[8 112]
[9 111]
[11 109]
[12 108]
[13 107]
[14 106]
[15 105]
[16 104]
[17 103]
[18 86]
[19 85]
[20 84]
[21 83]
[22 82]
[23 81]
[24 80]
[25 79]
[26 78]
[28 76]
[35 72]
[36 71]
[37 69]
[38 68]
[39 67]
[41 66]
[42 65]
[43 64]
[44 63]
[45 62]
[46 59]
[47 58]
[48 57]
[87 102]
[88 101]
[89 100]
[90 99]
[91 98]
[119 155]
[120 154]
[121 153]
[122 152]
[124 150]
[129 144]
[130 143]
[131 142]
[132 141]
[133 140]
[156 167]
[157 166]
[158 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
