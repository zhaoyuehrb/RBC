%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 22:12:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGAAAAAAAAAAUUCCUAAAACUGUGGAAUGGAUCACGUAGACAUGUAACCCAGCAGCAGUUUGCUUCUGUUGUCCACUGAUUAAUCAGCCUAUGUGCCUGACACUGGUCUUGCAGUACAACUGGAAGCCAAAACAAGGUGGAAGAUGUCCUGAAUUAAGAUGUUUUCACCACAUUGUAUUACAGAGACAGCCAAUAAAUCUACUAUUUGAUUUCAAUAUGG\
) } def
/len { sequence length } bind def

/coor [
[83.55467224 273.70690918]
[90.34090424 259.92855835]
[103.11604309 251.40263367]
[102.06503296 236.43949890]
[101.01402283 221.47636414]
[99.96301270 206.51322937]
[88.58545685 196.96928406]
[87.30642700 181.80952454]
[97.39413452 169.94039917]
[96.34312439 154.97726440]
[95.29211426 140.01412964]
[81.55976105 138.37614441]
[68.48834229 131.93302917]
[59.80827713 144.16644287]
[51.12820435 156.39985657]
[42.44813538 168.63327026]
[33.76806641 180.86668396]
[39.62144852 195.14048767]
[36.80615234 210.30879211]
[26.22053528 221.53146362]
[11.24242401 225.22737122]
[-3.34871864 220.21716309]
[-12.89691257 208.09959412]
[-14.35536289 192.74133301]
[-7.25868416 179.04312134]
[6.12859917 171.37603760]
[21.53465462 172.18661499]
[30.21472359 159.95320129]
[38.89479446 147.71978760]
[47.57486343 135.48637390]
[56.25493240 123.25296021]
[51.30074692 109.09471130]
[36.88698578 104.94217682]
[30.40367508 106.15755463]
[25.07584000 104.21421814]
[22.13026237 100.46577454]
[7.83863544 95.91062164]
[-6.45299101 91.35546875]
[-20.74461746 86.80031586]
[-35.03624344 82.24517059]
[-49.32787323 77.69001770]
[-63.61949921 73.13486481]
[-53.44012833 84.15214539]
[-48.82117462 98.42327881]
[-50.61468506 113.31566620]
[-58.48981857 126.08212280]
[-70.99385071 134.36759949]
[-85.82015228 136.64370728]
[-100.23373413 132.49053955]
[-111.57570648 122.67424774]
[-117.75382996 109.00564575]
[-117.62842560 94.00616455]
[-111.22261810 80.44277191]
[-99.71809387 70.81749725]
[-85.24013519 66.90606689]
[-99.76469421 63.15942001]
[-114.28924561 59.41277313]
[-128.81379700 55.66612625]
[-143.33834839 51.91947937]
[-157.86289978 48.17283249]
[-172.38745117 44.42618561]
[-185.00657654 53.66153336]
[-200.60624695 52.57322693]
[-211.82077026 41.67513275]
[-213.35499573 26.11299324]
[-204.48451233 13.23477745]
[-189.39767456 9.12118435]
[-175.21804810 15.71452713]
[-168.64080811 29.90163040]
[-154.11625671 33.64827728]
[-139.59170532 37.39492416]
[-125.06714630 41.14157104]
[-110.54259491 44.88821793]
[-96.01804352 48.63486862]
[-81.49349213 52.38151550]
[-77.72831726 45.89510727]
[-85.19795990 32.88724518]
[-70.19797516 32.92229080]
[-66.43280029 26.43588448]
[-76.88961029 15.68157482]
[-87.34641266 4.92726326]
[-97.80322266 -5.82704735]
[-113.72126770 -9.77013111]
[-118.00487518 -25.59993553]
[-106.24743652 -37.03211594]
[-90.54399872 -32.30622482]
[-87.04891205 -16.28385353]
[-76.59210205 -5.52954292]
[-66.13529968 5.22476816]
[-55.67848969 15.97907925]
[-49.31301880 41.17602539]
[-59.06434631 58.84323883]
[-44.77272034 63.39839172]
[-30.48109436 67.95354462]
[-16.18946648 72.50868988]
[-1.89784002 77.06384277]
[12.39378643 81.61899567]
[26.68541336 86.17414856]
[41.03952026 90.52841949]
[55.45327759 94.68094635]
[58.16941071 85.69216919]
[62.64774704 77.59497833]
[68.63803101 70.72339630]
[75.82933044 65.34683990]
[83.86582184 61.65974808]
[92.36421967 59.77489853]
[100.93193054 59.72064209]
[104.06432343 45.05134964]
[107.19671631 30.38205910]
[105.92873383 21.34581757]
[110.47727203 15.52967262]
[113.81508636 0.90575403]
[117.15290070 -13.71816444]
[112.68041992 -28.89404869]
[123.05580902 -39.58050919]
[126.39362335 -54.20442963]
[129.73144531 -68.82834625]
[133.06925964 -83.45226288]
[130.69905090 -100.23971558]
[146.17430115 -107.16452026]
[157.11245728 -94.21102905]
[147.69317627 -80.11445618]
[144.35536194 -65.49053192]
[141.01754761 -50.86661530]
[137.67973328 -36.24269485]
[142.39096069 -22.11281204]
[131.77682495 -10.38035107]
[128.43901062 4.24356794]
[125.10118866 18.86748695]
[121.86600494 33.51445389]
[118.73361206 48.18374252]
[115.60121918 62.85303497]
[121.28185272 65.78921509]
[126.42639160 69.58715820]
[130.90525818 74.15119934]
[134.60560608 79.36637115]
[137.43426514 85.10129547]
[139.31994629 91.21152496]
[140.21516418 97.54312897]
[155.09582520 99.43148041]
[169.97648621 101.31982422]
[184.85714722 103.20817566]
[199.73780823 105.09651947]
[214.61846924 106.98486328]
[228.16520691 90.43672943]
[248.83401489 85.49926758]
[268.14959717 94.02845764]
[278.29342651 112.39253998]
[293.28015137 113.02348328]
[308.26687622 113.65441895]
[323.25360107 114.28535461]
[338.24438477 114.81118011]
[353.23846436 115.23188019]
[368.23257446 115.65257263]
[383.22924805 115.96810913]
[398.22778320 116.17847443]
[413.22628784 116.38884735]
[421.73348999 105.95381165]
[434.51004028 102.37303162]
[446.83444214 106.73721313]
[454.28524780 117.24311829]
[469.27932739 117.66381073]
[484.27343750 118.08450317]
[499.26754761 118.50519562]
[514.26165771 118.92588806]
[524.50933838 107.11407471]
[539.96002197 104.70384216]
[553.31842041 112.83322906]
[558.27709961 127.66379547]
[552.49468994 142.19299316]
[538.70147705 149.56059265]
[523.41021729 146.28782654]
[513.84094238 133.91999817]
[498.84683228 133.49929810]
[483.85275269 133.07859802]
[468.85864258 132.65791321]
[453.86453247 132.23721313]
[442.14355469 144.30371094]
[424.98425293 144.15202332]
[413.01593018 131.38737488]
[398.01739502 131.17700195]
[383.01889038 130.96662903]
[376.29302979 134.01289368]
[367.81188965 130.64666748]
[352.81777954 130.22598267]
[337.82366943 129.80528259]
[331.05575562 132.75691223]
[322.62265015 129.27207947]
[307.63592529 128.64114380]
[292.64920044 128.01020813]
[277.66247559 127.37926483]
[274.11883545 135.70394897]
[268.41934204 142.76068115]
[260.98840332 148.00361633]
[252.38497925 151.02267456]
[243.26054382 151.57569885]
[234.30972290 149.60775757]
[226.21746826 145.25633240]
[219.60658264 138.84176636]
[214.98982239 130.84378052]
[212.73013306 121.86553192]
[197.84947205 119.97718048]
[182.96879578 118.08883667]
[168.08813477 116.20048523]
[153.20747375 114.31214142]
[138.32681274 112.42379761]
[127.67919922 129.27723694]
[110.25524902 138.96311951]
[111.30625916 153.92625427]
[112.35726929 168.88938904]
[124.00511932 179.23179626]
[124.85783386 194.42152405]
[114.92614746 205.46221924]
[115.97715759 220.42535400]
[117.02816772 235.38848877]
[118.07917786 250.35162354]
[131.92071533 257.00799561]
[140.56640625 269.70239258]
[141.69058228 285.02008057]
[134.99084473 298.84069824]
[122.26941681 307.44656372]
[106.94827271 308.52270508]
[93.14872742 301.77969360]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 216]
[4 215]
[5 214]
[6 213]
[9 210]
[10 209]
[11 208]
[13 31]
[14 30]
[15 29]
[16 28]
[17 27]
[32 100]
[33 99]
[36 98]
[37 97]
[38 96]
[39 95]
[40 94]
[41 93]
[42 92]
[55 75]
[56 74]
[57 73]
[58 72]
[59 71]
[60 70]
[61 69]
[79 90]
[80 89]
[81 88]
[82 87]
[107 132]
[108 131]
[109 130]
[111 129]
[112 128]
[113 127]
[115 125]
[116 124]
[117 123]
[118 122]
[139 206]
[140 205]
[141 204]
[142 203]
[143 202]
[144 201]
[148 191]
[149 190]
[150 189]
[151 188]
[152 186]
[153 185]
[154 184]
[155 182]
[156 181]
[157 180]
[161 177]
[162 176]
[163 175]
[164 174]
[165 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
