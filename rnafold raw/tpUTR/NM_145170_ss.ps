%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 14:48:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACCCCUCCAGCUGAACAAUUUUCUGCAUGGGACUCUGAGUUCCUUUCCUUCCCAGAGAGUUUUACCGUAUGAAGCCUGGAGCUGGAGAACGAAAGAAUCUUCACUAUAAACAGAGACCCAUUCAUUUAUUUCCAUUGGCUGUGUUACUGGAUGUUUUACUGGUUGACGAGAAACUGGGUCACAAUAAAAAAAUGGAGAUAUGAAACUCAAAAUUCA\
) } def
/len { sequence length } bind def

/coor [
[64.93493652 238.76425171]
[68.01489258 224.01261902]
[74.41432953 210.36917114]
[83.78813934 198.56965637]
[95.63080597 189.25042725]
[109.30367279 182.91406250]
[106.29785156 168.21830750]
[103.29203796 153.52256775]
[100.28622437 138.82681274]
[97.28040314 124.13106537]
[82.50413513 121.54999542]
[74.69432831 134.35650635]
[74.11506653 150.16711426]
[60.88269806 157.00479126]
[53.07288361 169.81129456]
[45.26307297 182.61781311]
[47.62933731 198.48539734]
[36.59387207 210.13006592]
[20.62214088 208.61900330]
[11.96628571 195.11138916]
[17.26634026 179.96910095]
[32.45655823 174.80799866]
[40.26636887 162.00148010]
[48.07618332 149.19497681]
[48.09683609 134.30038452]
[61.88780975 126.54669952]
[69.69762421 113.74018097]
[66.48034668 99.08927155]
[54.02333450 90.73326874]
[41.56632233 82.37725830]
[29.10931015 74.02125549]
[16.65229797 65.66524506]
[0.88150901 64.40319824]
[-5.37788057 50.88768005]
[-17.83489227 42.53167343]
[-30.29190445 34.17566681]
[-42.74891663 25.81966019]
[-55.20592880 17.46365356]
[-68.23218536 10.02614117]
[-81.76009369 3.54572153]
[-95.37242126 10.75755787]
[-110.44501495 8.59643650]
[-121.22737122 -1.90140986]
[-123.73066711 -16.55990601]
[-137.25857544 -23.04032516]
[-150.78646851 -29.52074432]
[-164.31437683 -36.00116348]
[-177.84228516 -42.48158264]
[-193.63084412 -41.46568298]
[-201.76632690 -53.94218445]
[-215.29423523 -60.42260361]
[-228.82212830 -66.90302277]
[-242.39637756 -73.28579712]
[-256.01626587 -79.57060242]
[-269.63613892 -85.85540771]
[-283.25604248 -92.14021301]
[-297.05136108 -98.02990723]
[-311.01071167 -103.51959991]
[-320.13696289 -103.74732971]
[-325.13073730 -109.19029999]
[-339.00952148 -114.88058472]
[-352.88830566 -120.57086945]
[-366.76708984 -126.26115417]
[-380.64587402 -131.95144653]
[-394.52465820 -137.64172363]
[-409.81976318 -132.80030823]
[-423.06045532 -141.85920715]
[-424.08959961 -157.86921692]
[-412.11773682 -168.54882812]
[-396.32864380 -165.70555115]
[-388.83435059 -151.52050781]
[-374.95556641 -145.83023071]
[-361.07678223 -140.13993835]
[-347.19799805 -134.44966125]
[-333.31921387 -128.75936890]
[-319.44046021 -123.06908417]
[-305.52102661 -117.47894287]
[-291.56167603 -111.98925018]
[-288.94430542 -112.97904968]
[-285.77810669 -112.99446106]
[-282.43127441 -111.82164001]
[-279.34243774 -109.38349915]
[-276.97122192 -105.76009369]
[-263.35134888 -99.47528839]
[-249.73146057 -93.19049072]
[-236.11157227 -86.90568542]
[-228.72503662 -86.95729065]
[-222.34172058 -80.43092346]
[-208.81381226 -73.95050812]
[-195.28590393 -67.47008514]
[-180.46495056 -68.94950867]
[-171.36186218 -56.00948715]
[-157.83395386 -49.52906799]
[-144.30606079 -43.04864883]
[-130.77815247 -36.56822968]
[-117.25025177 -30.08780861]
[-104.25867462 -37.32362366]
[-89.32080841 -35.50042725]
[-78.19068909 -25.10938072]
[-75.27967072 -9.98218155]
[-61.75176620 -3.50176167]
[-68.89704895 -16.69058037]
[-68.58646393 -31.68736458]
[-60.90124893 -44.56903839]
[-47.85182190 -51.96582794]
[-32.85184097 -51.94276810]
[-19.82521439 -44.50590134]
[-12.17963982 -31.60066223]
[-11.91515446 -16.60299492]
[-19.10094833 -3.43620372]
[-31.85725594 4.45534945]
[-46.84992218 5.00664139]
[-34.39291000 13.36264801]
[-21.93589783 21.71865463]
[-9.47888660 30.07466125]
[2.97812605 38.43066788]
[17.85790634 39.09503555]
[25.00830650 53.20823669]
[37.46531677 61.56424332]
[49.92232895 69.92024994]
[62.37934113 78.27625275]
[74.83635712 86.63226318]
[62.61022186 77.94194031]
[55.24292755 64.87583923]
[54.13444519 49.91685486]
[59.49541473 35.90757370]
[70.30711365 25.51011658]
[84.51504517 20.70026588]
[99.41934204 22.39201927]
[112.18779755 30.26389694]
[120.39408875 42.82004547]
[122.47867584 57.67604065]
[134.68971252 48.96451950]
[146.90074158 40.25299454]
[159.11178589 31.54147339]
[165.85249329 17.22807693]
[180.70695496 16.13517952]
[192.91798401 7.42365789]
[205.12902832 -1.28786433]
[217.34005737 -9.99938679]
[226.72268677 -24.12038803]
[242.88920593 -19.01352119]
[242.45724487 -2.06507659]
[226.05157471 2.21164894]
[213.84054565 10.92317104]
[201.62951660 19.63469315]
[189.41847229 28.34621429]
[183.55117798 42.03650665]
[167.82330322 43.75251007]
[155.61227417 52.46403122]
[143.40122986 61.17555237]
[131.19020081 69.88707733]
[134.72340393 84.46501923]
[149.56791687 86.61919403]
[164.41242981 88.77336121]
[173.26824951 78.21477509]
[186.08267212 73.44731903]
[199.47254944 75.61558533]
[209.95883179 84.04788971]
[214.87049866 96.45919800]
[229.68241882 98.82706451]
[244.49435425 101.19493103]
[259.30627441 103.56279755]
[274.11819458 105.93065643]
[288.93014526 108.29852295]
[300.62744141 97.92032623]
[316.26043701 97.54073334]
[328.44766235 107.33897400]
[331.43469238 122.68862152]
[323.81115723 136.34204102]
[309.17666626 141.85249329]
[294.44113159 136.61813354]
[286.56228638 123.11045074]
[271.75033569 120.74259186]
[256.93841553 118.37472534]
[242.12648010 116.00685883]
[227.31455994 113.63899231]
[212.50262451 111.27112579]
[201.25297546 123.22943878]
[184.92839050 126.15343475]
[169.92973328 118.69530487]
[162.25825500 103.61787415]
[147.41374207 101.46370697]
[132.56922913 99.30953217]
[127.42095947 104.76345825]
[139.41548157 113.77076721]
[154.22477722 116.15504456]
[161.98902893 128.98922729]
[157.22726440 143.21334839]
[143.30091858 148.78623962]
[130.04096985 141.77386475]
[126.80779266 127.12699127]
[117.12442780 115.67131805]
[111.97615814 121.12524414]
[114.98197174 135.82099915]
[117.98778534 150.51675415]
[120.99360657 165.21249390]
[123.99942017 179.90824890]
[139.06216431 180.36714172]
[153.61289978 184.28794861]
[166.86692810 191.45924377]
[178.10948181 201.49427795]
[186.73425293 213.85186768]
[192.27612305 227.86558533]
[194.43623352 242.77969360]
[193.09808350 257.78988647]
[188.33384705 272.08670044]
[180.40045166 284.89910889]
[169.72570801 295.53616333]
[156.88533020 303.42419434]
[142.57177734 308.13787842]
[127.55693054 309.42294312]
[112.65055847 307.21011353]
[98.65651703 301.61871338]
[86.32950592 292.95028687]
[76.33428955 281.67233276]
[69.20990753 268.39303589]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 198]
[7 197]
[8 196]
[9 195]
[10 194]
[11 27]
[12 26]
[14 24]
[15 23]
[16 22]
[28 122]
[29 121]
[30 120]
[31 119]
[32 118]
[34 116]
[35 115]
[36 114]
[37 113]
[38 112]
[39 101]
[40 100]
[44 96]
[45 95]
[46 94]
[47 93]
[48 92]
[50 90]
[51 89]
[52 88]
[53 86]
[54 85]
[55 84]
[56 83]
[57 78]
[58 77]
[60 76]
[61 75]
[62 74]
[63 73]
[64 72]
[65 71]
[132 152]
[133 151]
[134 150]
[135 149]
[137 147]
[138 146]
[139 145]
[140 144]
[153 184]
[154 183]
[155 182]
[160 178]
[161 177]
[162 176]
[163 175]
[164 174]
[165 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
