%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 02:45:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAAUCUGGAGAAUUUUCUGAAGAUGUAACCAGAUCUUUCCAAAUACAAAGAUUAGAUAAAUUGUCUUAUUGUACUUUAUGUAGAGAGAAAAUUUCAGCUUCUCUACCCAAGUAUGAACAAGGGUGAAAUUUGUGUUUUAAAAAUAAAACUCCUUAUCAUGCCCAGC\
) } def
/len { sequence length } bind def

/coor [
[111.60398865 258.71292114]
[96.55789185 262.97308350]
[82.31479645 256.51800537]
[75.59985352 242.39556885]
[79.58364868 227.27394104]
[92.38516998 218.29312134]
[93.50611877 203.33506775]
[94.62706757 188.37699890]
[95.74802399 173.41894531]
[81.45639038 168.86380005]
[73.71479797 181.71166992]
[65.97320557 194.55953979]
[66.20771790 210.95700073]
[51.98763657 219.12532043]
[37.94136429 210.66162109]
[38.51850128 194.27262878]
[53.12533569 186.81793213]
[60.86693192 173.97007751]
[68.60852814 161.12220764]
[58.40593338 150.12641907]
[45.01546097 156.88624573]
[31.62498856 163.64607239]
[18.23451424 170.40589905]
[4.84404182 177.16572571]
[-8.54643154 183.92555237]
[-10.89811707 199.26338196]
[-21.83992195 210.26594543]
[-37.16450119 212.70254517]
[-50.97923660 205.63623047]
[-57.97208405 191.78416443]
[-55.45414734 176.47274780]
[-44.39363098 165.58952332]
[-29.04352379 163.31932068]
[-15.30625629 170.53507996]
[-1.91578281 163.77525330]
[11.47469044 157.01542664]
[24.86516380 150.25559998]
[38.25563812 143.49577332]
[51.64611053 136.73594666]
[47.79804611 125.84450531]
[46.24364090 114.86123657]
[46.87305832 104.24472046]
[49.48890686 94.40785217]
[53.81961823 85.70194244]
[59.53561401 78.40412903]
[47.63531494 69.27270508]
[35.73501587 60.14128494]
[23.83471489 51.00986481]
[11.93441391 41.87844086]
[-0.13455245 32.97113800]
[-12.36796570 24.29107094]
[-24.60137939 15.61100101]
[-36.83479309 6.93093157]
[-50.76121902 13.40782928]
[-66.05888367 12.03779030]
[-78.61279297 3.18934703]
[-85.04600525 -10.75731277]
[-83.62802124 -26.05060959]
[-74.74027252 -38.57672119]
[-60.77351761 -44.96618652]
[-45.48474121 -43.50027466]
[-32.98654938 -34.57330322]
[-26.64089394 -20.58658791]
[-28.15472221 -5.30248165]
[-15.92130947 3.37758780]
[-3.68789601 12.05765724]
[8.54551697 20.73772621]
[13.35851002 20.82535172]
[18.15807343 23.96550560]
[21.06583595 29.97814178]
[32.96613693 39.10956192]
[44.86643600 48.24098587]
[56.76673508 57.37240601]
[68.66703796 66.50382996]
[73.55017090 62.52794647]
[78.93184662 59.25836182]
[84.71062469 56.75669861]
[90.77758789 55.07010651]
[97.01837921 54.23038101]
[103.31536865 54.25334549]
[109.54986572 55.13856888]
[115.02998352 41.17546082]
[120.51010132 27.21235466]
[125.99021149 13.24924850]
[131.47033691 -0.71385795]
[136.95043945 -14.67696381]
[142.43055725 -28.64006996]
[147.91067505 -42.60317612]
[137.84561157 -54.13370514]
[134.30322266 -69.02363586]
[138.09753418 -83.85137939]
[148.35662842 -95.20961761]
[162.72305298 -100.48831177]
[177.89549255 -98.47446442]
[190.38743591 -89.63083649]
[197.32833862 -75.98963165]
[197.12322998 -60.68550110]
[189.81922913 -47.23521423]
[177.09474182 -38.72955704]
[161.87377930 -37.12306213]
[156.39366150 -23.15995407]
[150.91355896 -9.19684887]
[145.43344116 4.76625729]
[139.95332336 18.72936440]
[134.47320557 32.69247055]
[128.99308777 46.65557480]
[123.51297760 60.61868286]
[139.93148804 71.88109589]
[150.83332825 89.98591614]
[153.40731812 112.19604492]
[146.20233154 134.65357971]
[129.55232239 153.04986572]
[143.30076599 159.04824829]
[157.04919434 165.04663086]
[170.79762268 171.04501343]
[184.54606628 177.04339600]
[198.29449463 183.04177856]
[210.59179688 179.06159973]
[221.93391418 184.37261963]
[226.45101929 195.62223816]
[240.08488464 201.87664795]
[253.71875000 208.13105774]
[267.35263062 214.38546753]
[281.04437256 220.51214600]
[294.79281616 226.51051331]
[308.14181519 218.82220459]
[323.28134155 220.44940186]
[334.42791748 230.55972290]
[337.44757080 245.12060547]
[351.19601440 251.11898804]
[364.94445801 257.11737061]
[378.69287109 263.11575317]
[391.47021484 254.47032166]
[406.89376831 254.12809753]
[420.04199219 262.19830322]
[426.71926880 276.10574341]
[424.79498291 291.41262817]
[414.88308716 303.23458862]
[400.14648438 307.79922485]
[385.28756714 303.65005493]
[375.04772949 292.11102295]
[372.69451904 276.86419678]
[358.94607544 270.86581421]
[345.19763184 264.86743164]
[331.44918823 258.86904907]
[318.72140503 266.55938721]
[303.72845459 265.26513672]
[292.23812866 255.27384949]
[288.79443359 240.25895691]
[275.04598999 234.26057434]
[267.62683105 234.46879578]
[261.09820557 228.01934814]
[247.46434021 221.76492310]
[233.83047485 215.51051331]
[220.19660950 209.25610352]
[202.85838318 211.85046387]
[192.29611206 196.79020691]
[178.54768372 190.79182434]
[164.79924011 184.79344177]
[151.05081177 178.79505920]
[137.30238342 172.79669189]
[123.55394745 166.79830933]
[110.70607758 174.53990173]
[109.58512878 189.49795532]
[108.46417236 204.45600891]
[107.34322357 219.41406250]
[118.66323090 230.20254517]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 166]
[7 165]
[8 164]
[9 163]
[10 19]
[11 18]
[12 17]
[20 39]
[21 38]
[22 37]
[23 36]
[24 35]
[25 34]
[45 74]
[46 73]
[47 72]
[48 71]
[49 70]
[50 67]
[51 66]
[52 65]
[53 64]
[81 107]
[82 106]
[83 105]
[84 104]
[85 103]
[86 102]
[87 101]
[88 100]
[112 162]
[113 161]
[114 160]
[115 159]
[116 158]
[117 157]
[120 155]
[121 154]
[122 153]
[123 152]
[124 150]
[125 149]
[129 145]
[130 144]
[131 143]
[132 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
