%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 20:24:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGCCCCUCCUACCCCGGCUGCUUGGCAGUUGCAGUGCUGCUGUCUCGGGGGGGUUUUCAUCUAUGAGGGUGUUUCCUCUAAACCUACGAGGGAGGAACACCUGAUCUUACAGAAAAUACCACCUCGAGAUGGGUGCUGGUCCUGUUGAUCCCAGUCUCUGCCAGACCAAGGCGAGUUUCCCCACUAAUAAAGUGCCGGGUGUCAGCAGAACUGUG\
) } def
/len { sequence length } bind def

/coor [
[200.27510071 149.08467102]
[186.74719238 142.60426331]
[173.21929932 136.12384033]
[159.69139099 129.64341736]
[146.16348267 123.16299438]
[132.63558960 116.68257904]
[119.10768127 110.20215607]
[126.78321075 123.08959961]
[120.72248840 136.81066895]
[106.02674866 139.81652832]
[95.06518555 129.57717896]
[97.06405640 114.71088409]
[87.16709900 125.98253632]
[77.27014160 137.25419617]
[78.11118317 152.80830383]
[67.91368866 164.09838867]
[53.08003616 164.80433655]
[43.18308258 176.07598877]
[33.28612518 187.34764099]
[23.38916588 198.61929321]
[13.49220943 209.89096069]
[3.59525228 221.16261292]
[-6.30170488 232.43426514]
[-12.20883465 248.32585144]
[-29.11461830 247.04879761]
[-32.56745911 230.45018005]
[-17.57336044 222.53730774]
[-7.67640400 211.26565552]
[2.22055292 199.99400330]
[12.11750984 188.72235107]
[22.01446724 177.45068359]
[31.91142464 166.17903137]
[41.80838013 154.90737915]
[40.58988190 140.10700989]
[50.46623611 128.53495789]
[65.99848175 127.35723877]
[75.89543915 116.08557892]
[85.79239655 104.81392670]
[72.27210236 111.31020355]
[58.35683441 105.70973969]
[53.10618591 91.65873718]
[59.93862152 78.30516052]
[74.40585327 74.34293365]
[87.08866882 82.35129547]
[78.55401611 70.01599121]
[70.01936340 57.68068695]
[61.48471832 45.34538269]
[52.95006561 33.01007843]
[44.41541672 20.67477226]
[35.88076401 8.33946800]
[27.34611511 -3.99583673]
[18.81146431 -16.33114052]
[10.18815327 -28.60462952]
[1.47663152 -40.81566620]
[-7.32264996 -52.96361160]
[-16.20923424 -65.04784393]
[-25.09581757 -77.13207245]
[-33.98240280 -89.21630096]
[-42.86898804 -101.30053711]
[-51.75556946 -113.38476562]
[-66.75168610 -108.34358215]
[-82.55223083 -108.18428040]
[-97.60984802 -112.91045380]
[-110.45366669 -122.04783630]
[-119.83296204 -134.69187927]
[-124.83892822 -149.59730530]
[-124.99277496 -165.30072021]
[-120.29143524 -180.26426697]
[-111.20675659 -193.02630615]
[-120.26655579 -204.98123169]
[-129.32635498 -216.93614197]
[-138.38615417 -228.89105225]
[-147.44595337 -240.84597778]
[-156.50576782 -252.80088806]
[-165.56556702 -264.75579834]
[-173.23869324 -269.70184326]
[-174.66830444 -276.94891357]
[-183.55488586 -289.03314209]
[-192.44146729 -301.11737061]
[-201.32804871 -313.20159912]
[-210.21464539 -325.28582764]
[-225.33682251 -322.92404175]
[-239.82069397 -327.87139893]
[-250.33793640 -338.99102783]
[-254.47178650 -353.72772217]
[-251.27232361 -368.69506836]
[-241.47473145 -380.45373535]
[-227.33044434 -386.30160522]
[-212.08972168 -384.89492798]
[-199.25474548 -376.55694580]
[-191.77493286 -363.20361328]
[-191.36906433 -347.90350342]
[-198.13040161 -334.17242432]
[-189.24382019 -322.08819580]
[-180.35723877 -310.00393677]
[-171.47065735 -297.91970825]
[-162.58407593 -285.83547974]
[-153.61064148 -273.81561279]
[-144.55084229 -261.86068726]
[-135.49104309 -249.90577698]
[-126.43124390 -237.95086670]
[-117.37144470 -225.99594116]
[-108.31163788 -214.04103088]
[-99.25183868 -202.08610535]
[-85.90898132 -207.09414673]
[-71.67972565 -208.14025879]
[-57.71680450 -205.13070679]
[-45.15391159 -198.30068970]
[-35.01364899 -188.19595337]
[-28.12429619 -175.62918091]
[-25.05215454 -161.61471558]
[-26.05500412 -147.28662109]
[-31.06050873 -133.80691528]
[-39.67134094 -122.27134705]
[-30.78475761 -110.18711853]
[-21.89817238 -98.10289001]
[-13.01158810 -86.01866150]
[-4.12500381 -73.93442535]
[4.76158047 -61.85019684]
[11.25323105 -58.32569504]
[13.68766689 -49.52718735]
[22.39918900 -37.31615067]
[28.83937645 -33.69846725]
[31.14676857 -24.86579132]
[39.68141937 -12.53048706]
[48.21606827 -0.19518265]
[56.75072098 12.14012241]
[65.28536987 24.47542572]
[73.82002258 36.81072998]
[82.35467529 49.14603424]
[90.88932037 61.48133850]
[99.42397308 73.81664276]
[125.58809662 96.67425537]
[139.11599731 103.15467072]
[152.64390564 109.63509369]
[166.17181396 116.11551666]
[179.69970703 122.59593201]
[193.22761536 129.07635498]
[206.75552368 135.55677795]
[220.46455383 141.64465332]
[234.34333801 147.33494568]
[248.22212219 153.02522278]
[263.92593384 151.10140991]
[272.76669312 163.08848572]
[286.64547729 168.77876282]
[300.52426147 174.46905518]
[314.40304565 180.15934753]
[328.28182983 185.84962463]
[342.16061401 191.53991699]
[356.03939819 197.23019409]
[369.91818237 202.92048645]
[383.83761597 208.51062012]
[397.79696655 214.00032043]
[411.75628662 219.49002075]
[421.48928833 208.35047913]
[437.00387573 203.28656006]
[454.43209839 207.15554810]
[468.61950684 220.37042236]
[483.51992798 222.09591675]
[498.42034912 223.82139587]
[507.29968262 221.70063782]
[513.52252197 225.68061829]
[528.39654541 227.62065125]
[543.27050781 229.56068420]
[554.66387939 218.84970093]
[570.27941895 218.01976013]
[582.74395752 227.46272278]
[586.17211914 242.71990967]
[578.94525146 256.58734131]
[564.47558594 262.51727295]
[549.59533691 257.70971680]
[541.33050537 244.43469238]
[526.45648193 242.49467468]
[511.58245850 240.55464172]
[496.69485474 238.72183228]
[481.79443359 236.99633789]
[466.89401245 235.27084351]
[463.70263672 242.05796814]
[477.27688599 248.44075012]
[490.85101318 254.82373047]
[484.46783447 268.39779663]
[470.89410400 262.01498413]
[457.31985474 255.63221741]
[454.12844849 262.41934204]
[464.96185303 272.79421997]
[475.79522705 283.16906738]
[486.62860107 293.54394531]
[502.63442993 294.63610840]
[511.64114380 307.91235352]
[506.73956299 323.18826294]
[491.68975830 328.74548340]
[478.03665161 320.32098389]
[476.25375366 304.37731934]
[465.42034912 294.00244141]
[454.58697510 283.62759399]
[443.75360107 273.25271606]
[420.45355225 268.43347168]
[406.76913452 252.16966248]
[406.26660156 233.44935608]
[392.30725098 227.95965576]
[378.34790039 222.46997070]
[370.97662354 222.94703674]
[364.22790527 216.79927063]
[350.34912109 211.10897827]
[336.47033691 205.41870117]
[322.59155273 199.72840881]
[308.71276855 194.03811646]
[294.83398438 188.34783936]
[280.95520020 182.65754700]
[267.07641602 176.96726990]
[252.36531067 179.29809570]
[242.53182983 166.90400696]
[228.65304565 161.21372986]
[214.77426147 155.52343750]
[212.14288330 156.47541809]
[208.97680664 156.44520569]
[205.64723206 155.22427368]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 139]
[2 138]
[3 137]
[4 136]
[5 135]
[6 134]
[7 133]
[12 38]
[13 37]
[14 36]
[17 33]
[18 32]
[19 31]
[20 30]
[21 29]
[22 28]
[23 27]
[44 132]
[45 131]
[46 130]
[47 129]
[48 128]
[49 127]
[50 126]
[51 125]
[52 124]
[53 122]
[54 121]
[55 119]
[56 118]
[57 117]
[58 116]
[59 115]
[60 114]
[69 104]
[70 103]
[71 102]
[72 101]
[73 100]
[74 99]
[75 98]
[77 97]
[78 96]
[79 95]
[80 94]
[81 93]
[140 214]
[141 213]
[142 212]
[144 210]
[145 209]
[146 208]
[147 207]
[148 206]
[149 205]
[150 204]
[151 203]
[152 201]
[153 200]
[154 199]
[158 177]
[159 176]
[160 175]
[162 174]
[163 173]
[164 172]
[184 196]
[185 195]
[186 194]
[187 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
