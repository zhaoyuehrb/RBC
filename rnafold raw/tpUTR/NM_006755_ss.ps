%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 01:07:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCAUCCCUGAGGCUGGACUCCAGAUCUGCACCGCCGGCCAGCUGGGAUCUGACUGCACGUGGCUUCUGAUGAAUCUUGCGUUUUUUACAAAUUGGAGCAGGGACAGAUCAUAGAUUUCUGAUUUUAUGUAAAAUUUUGCCUAAUACAUUAAAGCAGUCACUUUUCCUGUGCUGUUUCA\
) } def
/len { sequence length } bind def

/coor [
[46.17584610 372.94580078]
[39.77027512 386.50930786]
[29.54048347 397.47976685]
[16.45709610 404.81634521]
[1.76148963 407.82284546]
[-13.15198803 406.21408081]
[-26.86831856 400.14263916]
[-38.08606720 390.18460083]
[-45.74087143 377.28485107]
[-49.10643005 362.66729736]
[-47.86341476 347.71887207]
[-42.12890625 333.85656738]
[-53.94906998 343.09149170]
[-65.76922607 352.32641602]
[-77.58939362 361.56130981]
[-89.40955353 370.79623413]
[-101.22971344 380.03115845]
[-98.75744629 396.36642456]
[-104.81804657 411.63507080]
[-117.67258453 421.71231079]
[-133.76074219 423.92715454]
[-148.68667603 417.76980591]
[-160.34387207 427.20962524]
[-165.71244812 442.70510864]
[-181.86515808 445.53741455]
[-192.18548584 432.79287720]
[-186.05674744 417.58200073]
[-169.78367615 415.55242920]
[-158.12648010 406.11264038]
[-161.14810181 392.77862549]
[-158.10946655 379.38061523]
[-149.54899597 368.55087280]
[-137.09571838 362.44241333]
[-123.15948486 362.30087280]
[-110.46463776 368.21099854]
[-98.64447784 358.97607422]
[-86.82431030 349.74114990]
[-75.00415039 340.50625610]
[-63.18399048 331.27133179]
[-51.36383057 322.03640747]
[-41.13385391 311.06610107]
[-32.74596024 298.63052368]
[-24.35806656 286.19497681]
[-16.07901192 273.68667603]
[-7.90942669 261.10662842]
[0.26015902 248.52656555]
[8.42974472 235.94650269]
[16.59933090 223.36643982]
[11.70944691 205.74647522]
[21.39323616 189.86083984]
[39.91938019 186.00476074]
[47.64495087 173.14724731]
[55.37052155 160.28973389]
[63.09609222 147.43222046]
[70.82166290 134.57472229]
[78.54723358 121.71720886]
[86.27280426 108.85969543]
[85.09591675 93.90593719]
[75.45410919 82.41526794]
[65.81229401 70.92460632]
[56.17047882 59.43393707]
[46.52866364 47.94327164]
[36.78694153 36.53718185]
[21.89380074 31.19818497]
[19.38337326 16.51666451]
[9.54248810 5.19602156]
[-0.29839781 -6.12462234]
[-15.97181416 -10.94914913]
[-19.36610031 -26.99317741]
[-6.98950720 -37.75198746]
[8.42598820 -32.15783691]
[11.02224636 -15.96550751]
[20.86313057 -4.64486408]
[30.70401764 6.67577982]
[44.89327240 11.20504761]
[48.10758591 26.69629669]
[54.88785172 29.69004250]
[58.01932907 38.30145645]
[67.66114044 49.79212189]
[77.30295563 61.28279114]
[86.94477081 72.77346039]
[96.58658600 84.26412201]
[93.63401794 69.55757904]
[87.67987061 55.78993225]
[90.65425873 41.08778763]
[101.49178314 30.71725082]
[116.31060028 28.39290237]
[129.80282593 34.94729233]
[137.13571167 48.03272629]
[135.68275452 62.96218872]
[125.96277618 74.38914490]
[118.83944702 87.58983612]
[131.41949463 79.42024994]
[143.99955750 71.25066376]
[156.57962036 63.08107758]
[169.15968323 54.91149139]
[174.67205811 47.59191132]
[182.03134155 46.71133423]
[194.75205994 38.76254654]
[207.47279358 30.81375885]
[220.19351196 22.86496925]
[232.91423035 14.91617966]
[245.63494873 6.96739101]
[243.55227661 -7.02643347]
[246.95530701 -20.71435738]
[255.29721069 -32.03388214]
[267.28952026 -39.29240417]
[281.10113525 -41.42026520]
[294.63778687 -38.12828827]
[305.85974121 -29.94656563]
[318.71725464 -37.67213821]
[331.57473755 -45.39770889]
[344.43225098 -53.12327957]
[357.28976440 -60.84885025]
[370.14727783 -68.57442474]
[371.36547852 -84.04360199]
[381.46914673 -95.82050323]
[396.57324219 -99.37666321]
[410.86990356 -93.34465790]
[418.86178589 -80.04393005]
[417.47586060 -64.58887482]
[407.24502563 -52.92227173]
[392.10324097 -49.53017426]
[377.87286377 -55.71691132]
[365.01535034 -47.99134064]
[352.15783691 -40.26576996]
[339.30032349 -32.54019928]
[326.44281006 -24.81462669]
[313.58529663 -17.08905602]
[315.36422729 -1.22165203]
[310.03228760 13.89023685]
[298.60723877 25.20984840]
[283.33657837 30.43912888]
[267.25552368 28.48515320]
[253.58374023 19.68811226]
[240.86302185 27.63690186]
[228.14230347 35.58568954]
[215.42156982 43.53448105]
[202.70085144 51.48326874]
[189.98013306 59.43205643]
[177.32926941 67.49155426]
[164.74920654 75.66114044]
[152.16914368 83.83071899]
[139.58908081 92.00030518]
[127.00902557 100.16989136]
[140.93246460 105.75003052]
[149.80062866 117.84778595]
[150.93196106 132.80505371]
[143.98437500 146.09909058]
[131.05868530 153.71002197]
[116.06333923 153.33650208]
[103.53261566 145.09144592]
[97.25553894 131.46798706]
[99.13031769 116.58526611]
[91.40474701 129.44277954]
[83.67917633 142.30029297]
[75.95360565 155.15779114]
[68.22802734 168.01530457]
[60.50246048 180.87281799]
[52.77688980 193.73033142]
[57.85447311 204.51687622]
[57.08925629 216.29388428]
[50.78800201 226.13049316]
[40.62066650 231.63497925]
[29.17938805 231.53602600]
[21.00980377 244.11608887]
[12.84021759 256.69613647]
[4.67063189 269.27621460]
[-3.49895358 281.85626221]
[-5.55762196 290.78512573]
[-11.92250347 294.58285522]
[-20.31039619 307.01843262]
[-28.69828987 319.45397949]
[-15.27131557 312.76696777]
[-0.44610646 310.48373413]
[14.37069225 312.82092285]
[27.77323341 319.55676270]
[38.48986053 330.05221558]
[45.50375366 343.31137085]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 40]
[13 39]
[14 38]
[15 37]
[16 36]
[17 35]
[22 29]
[23 28]
[41 173]
[42 172]
[43 171]
[44 169]
[45 168]
[46 167]
[47 166]
[48 165]
[51 160]
[52 159]
[53 158]
[54 157]
[55 156]
[56 155]
[57 154]
[58 82]
[59 81]
[60 80]
[61 79]
[62 78]
[63 76]
[65 74]
[66 73]
[67 72]
[92 145]
[93 144]
[94 143]
[95 142]
[96 141]
[98 140]
[99 139]
[100 138]
[101 137]
[102 136]
[103 135]
[110 129]
[111 128]
[112 127]
[113 126]
[114 125]
[115 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
