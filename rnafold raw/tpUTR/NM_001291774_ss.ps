%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 08:22:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGCCGCCCCGGACAGUGGCACCUGGGAAGCCUGGGAGUGUUUGUCCCAUCGGUAGCUUGAAAUAAACGCUCCCCUCAGACACCCGCUGGGUUCUCUGAUGUUAUUAUGGUUGAGAUGCAGCUGGUCUCUCCUGGUUAAUUGACUUCUUAUUACCAACAAGUUACUUGAAAGAGUGUCACCAAUAAUCAUUAAAGUACGGCAGGCUGAACCUUCA\
) } def
/len { sequence length } bind def

/coor [
[42.18379974 290.53369141]
[36.69410324 304.49301147]
[36.46637726 313.61926270]
[31.02340889 318.61303711]
[25.33312225 332.49182129]
[19.64283562 346.37060547]
[13.95254898 360.24938965]
[8.26226139 374.12817383]
[2.57197499 388.00695801]
[10.84149742 401.13687134]
[9.78052235 416.61761475]
[-0.20298475 428.49658203]
[-15.27016068 432.20599365]
[-29.62736893 426.31954956]
[-37.75397110 413.10070801]
[-36.52511978 397.63235474]
[-26.41333771 385.86242676]
[-11.30680847 382.31668091]
[-5.61652184 368.43789673]
[0.07376485 354.55911255]
[5.76405144 340.68032837]
[11.45433807 326.80154419]
[17.14462471 312.92276001]
[22.73476219 299.00332642]
[28.22445869 285.04397583]
[22.93783760 264.05447388]
[40.67701340 250.35874939]
[45.35336685 236.10630798]
[37.12738419 221.43487549]
[42.15914917 205.03123474]
[57.80097961 197.19288635]
[62.27146149 182.87455750]
[66.74194336 168.55621338]
[71.21242523 154.23788452]
[75.68290710 139.91954041]
[67.05960083 127.64604950]
[52.07361603 126.99776459]
[37.08763123 126.34947205]
[22.10164833 125.70117950]
[7.11566353 125.05288696]
[-7.87032080 124.40459442]
[-22.85630417 123.75630188]
[-37.84228897 123.10800934]
[-52.82827377 122.45971680]
[-67.81425476 121.81142426]
[-82.80023956 121.16313171]
[-97.78622437 120.51483917]
[-109.37980652 130.91804504]
[-124.56848907 130.04710388]
[-134.41490173 118.93029022]
[-149.40089417 118.28199768]
[-158.21046448 130.94671631]
[-172.47731018 136.81701660]
[-187.64895630 134.01971436]
[-198.88415527 123.44741058]
[-202.59782410 108.47369385]
[-197.60493469 93.87661743]
[-185.49868774 84.31406403]
[-170.14215088 82.83740234]
[-156.43554688 89.91783142]
[-148.75259399 103.29601288]
[-133.76661682 103.94430542]
[-122.99695587 93.71933746]
[-107.78979492 94.16331482]
[-97.13793182 105.52886200]
[-82.15194702 106.17714691]
[-67.16596222 106.82543945]
[-52.17998123 107.47373199]
[-37.19399643 108.12202454]
[-22.20801353 108.77031708]
[-7.22202873 109.41860962]
[7.76395512 110.06690216]
[22.74993896 110.71519470]
[37.73592377 111.36348724]
[52.72190857 112.01177979]
[67.70789337 112.66007233]
[71.47348022 106.17390442]
[82.77024841 86.71540833]
[74.77669525 74.02276611]
[66.78314972 61.33012772]
[58.78959656 48.63748550]
[50.79604721 35.94484329]
[34.31088638 27.73449707]
[34.32723236 10.18329906]
[26.15160561 -2.39283323]
[17.97597694 -14.96896553]
[9.80035019 -27.54509926]
[-3.90194440 -37.52925873]
[1.89885867 -53.45995331]
[18.81279755 -52.29590225]
[22.37648201 -35.72072601]
[30.55211067 -23.14459419]
[38.72773743 -10.56846046]
[46.90336609 2.00767183]
[58.66479111 4.82124805]
[65.57971191 15.22720909]
[63.48868942 27.95129204]
[71.48223877 40.64393616]
[79.47579193 53.33657455]
[87.46933746 66.02922058]
[95.46289062 78.72185516]
[110.04083252 75.18865967]
[111.33621216 60.24469376]
[112.63158417 45.30073166]
[101.13243866 32.11451721]
[102.69954681 15.02820396]
[115.87630463 4.57396889]
[116.95619202 -10.38710880]
[118.03607941 -25.34818649]
[110.39726257 -39.85958099]
[119.37277222 -53.58446121]
[135.72937012 -52.40384293]
[142.64079285 -37.53224945]
[132.99716187 -24.26829910]
[131.91726685 -9.30722046]
[130.83737183 5.65385675]
[140.54753113 14.11932659]
[143.65692139 26.82104683]
[138.81323242 39.17689133]
[127.57554626 46.59610367]
[126.28017426 61.54006577]
[124.98480225 76.48403168]
[135.20246887 87.46579742]
[150.20091248 87.24964142]
[165.19935608 87.03347778]
[180.19779968 86.81732178]
[191.17277527 75.76346588]
[206.38639832 75.75791168]
[216.85693359 86.28899384]
[231.85537720 86.07283783]
[239.40084839 72.76821136]
[252.50619507 65.07751465]
[267.60110474 64.97981262]
[280.63104248 72.40121460]
[288.14614868 85.26157379]
[303.14459229 85.04541779]
[318.14300537 84.82926178]
[333.14144897 84.61310577]
[348.13989258 84.39694977]
[363.13833618 84.18078613]
[375.81732178 70.09847260]
[394.44387817 69.76686859]
[407.17160034 82.92963409]
[422.15759277 82.28134155]
[437.14355469 81.63304901]
[452.12954712 80.98475647]
[467.11047363 80.22850037]
[482.08557129 79.36431885]
[497.06063843 78.50013733]
[512.03570557 77.63596344]
[527.01080322 76.77178192]
[530.41101074 62.05392456]
[537.82116699 48.89086533]
[548.64062500 38.34968185]
[561.99224854 31.28489113]
[576.79364014 28.26921082]
[591.84503174 29.54710579]
[605.92620850 35.01498413]
[617.89562988 44.22958755]
[626.78308105 56.44393158]
[631.86804199 70.66785431]
[632.73828125 85.74828339]
[629.32330322 100.46271515]
[621.89990234 113.61831665]
[611.06988525 124.14862823]
[597.71118164 131.19999695]
[582.90673828 134.20080566]
[567.85668945 132.90779114]
[553.78100586 127.42577362]
[541.82080078 118.19915009]
[532.94567871 105.97589111]
[527.87500000 91.74686432]
[512.89990234 92.61104584]
[497.92483521 93.47522736]
[482.94973755 94.33940887]
[467.97463989 95.20358276]
[461.48144531 98.72524261]
[452.77783203 95.97074127]
[437.79187012 96.61903381]
[422.80587769 97.26732635]
[407.81988525 97.91561127]
[402.11825562 107.79075623]
[392.25671387 113.75102234]
[380.62347412 114.21794128]
[370.10159302 108.96010590]
[363.35449219 99.17922974]
[348.35604858 99.39538574]
[333.35760498 99.61154938]
[318.35919189 99.82770538]
[303.36074829 100.04386139]
[288.36230469 100.26001740]
[281.22091675 113.33160400]
[268.41027832 121.12541962]
[253.31881714 121.46276855]
[239.99728394 114.15293121]
[232.07153320 101.07128143]
[217.07308960 101.28743744]
[206.91040039 112.11588287]
[191.70292664 112.54875183]
[180.41395569 101.81576538]
[165.41551208 102.03192139]
[150.41706848 102.24807739]
[135.41862488 102.46424103]
[90.00124359 144.39002991]
[85.53076172 158.70835876]
[81.06027985 173.02670288]
[76.58979797 187.34503174]
[72.11931610 201.66337585]
[79.70251465 212.79106140]
[79.49692535 226.06080627]
[71.80153656 236.63354492]
[59.60579300 240.78266907]
[54.92944336 255.03509521]
[60.00570679 261.64739990]
[62.03549194 269.63583374]
[60.76074219 277.68386841]
[56.46180344 284.49514771]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 25]
[2 24]
[4 23]
[5 22]
[6 21]
[7 20]
[8 19]
[9 18]
[27 213]
[28 212]
[31 208]
[32 207]
[33 206]
[34 205]
[35 204]
[36 76]
[37 75]
[38 74]
[39 73]
[40 72]
[41 71]
[42 70]
[43 69]
[44 68]
[45 67]
[46 66]
[47 65]
[50 62]
[51 61]
[78 101]
[79 100]
[80 99]
[81 98]
[82 97]
[84 94]
[85 93]
[86 92]
[87 91]
[102 122]
[103 121]
[104 120]
[107 116]
[108 115]
[109 114]
[123 203]
[124 202]
[125 201]
[126 200]
[129 197]
[130 196]
[135 191]
[136 190]
[137 189]
[138 188]
[139 187]
[140 186]
[143 181]
[144 180]
[145 179]
[146 178]
[147 176]
[148 175]
[149 174]
[150 173]
[151 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
