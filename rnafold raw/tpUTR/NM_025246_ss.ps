%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 10:14:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUACCUGAUUAUUAUUGUCUCAUUAAUGUUCAGUUAUUAUGUAUACUGCCAUUUUAAUGUUUACCUAUGAAUGUCUUUUGUGUUAUAUAACUGACAGAGUGCUAUAAAAUAUAUAAUAUAUACAAAUGCAGAAAAUUUAUUCUAGUCUAAUAUAUUCAAAUACAAAUAUUAAAUAUAUGAAAUACGUUAUGAA\
) } def
/len { sequence length } bind def

/coor [
[-145.05926514 618.30224609]
[-153.11317444 630.95666504]
[-167.72293091 634.35595703]
[-180.53585815 626.55664062]
[-184.22660828 612.01812744]
[-192.88543701 624.26660156]
[-201.54426575 636.51507568]
[-210.20309448 648.76354980]
[-211.85131836 664.49865723]
[-225.51620483 670.42486572]
[-234.17503357 682.67333984]
[-242.83387756 694.92175293]
[-251.49270630 707.17022705]
[-260.15151978 719.41870117]
[-261.79977417 735.15380859]
[-275.46463013 741.08001709]
[-284.12347412 753.32849121]
[-288.32946777 769.75244141]
[-305.27590942 770.25738525]
[-310.45236206 754.11303711]
[-296.37191772 744.66967773]
[-287.71310425 732.42120361]
[-286.68420410 717.56219482]
[-272.39999390 710.75982666]
[-263.74114990 698.51141357]
[-255.08232117 686.26293945]
[-246.42349243 674.01446533]
[-237.76466370 661.76605225]
[-236.73577881 646.90698242]
[-222.45155334 640.10467529]
[-213.79272461 627.85626221]
[-205.13389587 615.60778809]
[-196.47506714 603.35931396]
[-188.42126465 590.70483398]
[-180.99148560 577.67413330]
[-173.56172180 564.64349365]
[-166.13194275 551.61279297]
[-166.54939270 536.72406006]
[-152.99243164 528.56811523]
[-145.56265259 515.53741455]
[-138.13288879 502.50674438]
[-130.70312500 489.47607422]
[-123.27334595 476.44540405]
[-115.84358215 463.41473389]
[-125.94806671 452.39382935]
[-132.15979004 438.77087402]
[-133.85896301 423.87478638]
[-130.86668396 409.16299438]
[-123.46365356 396.07873535]
[-112.36392975 385.90960693]
[-98.64604187 379.66076660]
[-83.64820099 377.95565796]
[-68.83778381 380.97375488]
[-61.40801239 367.94308472]
[-53.97824478 354.91241455]
[-46.54847336 341.88174438]
[-39.11870575 328.85107422]
[-31.68893433 315.82037354]
[-24.25916481 302.78970337]
[-16.82939339 289.75903320]
[-9.39962387 276.72836304]
[-1.96985412 263.69769287]
[-10.52385998 251.47908020]
[-12.93443394 236.69737244]
[-8.67058563 222.27584839]
[1.47333622 211.09008789]
[15.52502155 205.39472961]
[30.71752167 206.36904907]
[38.14729309 193.33836365]
[45.57706070 180.30769348]
[53.00683212 167.27700806]
[60.43660355 154.24633789]
[67.86637115 141.21566772]
[75.29614258 128.18498230]
[63.18992233 113.64833069]
[59.36850357 94.23281860]
[65.58024597 74.53009796]
[81.09741211 59.60544586]
[102.70604706 53.70061111]
[103.91925812 38.74975586]
[105.13246155 23.79889679]
[106.34567261 8.84804058]
[107.55887604 -6.10281658]
[108.77208710 -21.05367470]
[109.98529053 -36.00453186]
[111.19849396 -50.95538712]
[112.41170502 -65.90624237]
[113.62490845 -80.85710144]
[114.83811951 -95.80796051]
[114.95957184 -110.80746460]
[113.98862457 -125.77600861]
[113.01767731 -140.74455261]
[101.96030426 -152.36840820]
[104.29669189 -168.24043274]
[118.23456573 -176.18495178]
[133.08197021 -170.10760498]
[137.44926453 -154.67044067]
[127.98621368 -141.71549988]
[128.95716858 -126.74695587]
[129.92811584 -111.77841187]
[138.57026672 -124.03864288]
[152.42495728 -129.78733826]
[167.20828247 -127.24699402]
[178.34918213 -117.20307922]
[182.40287781 -102.76121521]
[178.11595154 -88.38685608]
[166.81391907 -78.52459717]
[151.99142456 -76.22387695]
[138.23159790 -82.19608307]
[129.78897095 -94.59474945]
[128.57575989 -79.64389801]
[127.36256409 -64.69303894]
[126.14935303 -49.74217987]
[124.93614960 -34.79132462]
[123.72293854 -19.84046745]
[122.50973511 -4.88961029]
[121.29652405 10.06124687]
[120.08332062 25.01210403]
[118.87011719 39.96296310]
[117.65690613 54.91381836]
[123.44966888 59.67763519]
[131.68217468 47.13866425]
[138.43124390 33.74275970]
[153.36949158 35.10237885]
[157.58920288 49.49661636]
[145.74841309 58.70637131]
[135.03518677 69.20526123]
[140.82794189 73.96907806]
[155.26312256 69.89162445]
[169.66481018 65.69743347]
[184.03207397 61.38676453]
[198.39933777 57.07609940]
[212.76660156 52.76543045]
[220.03735352 38.73291016]
[235.12611389 34.03131866]
[249.08097839 41.45002747]
[253.62277222 56.58765030]
[246.05694580 70.46330261]
[230.87214661 74.84480286]
[217.07727051 67.13269043]
[202.71000671 71.44335938]
[188.34274292 75.75402832]
[173.97547913 80.06468964]
[168.46441650 85.00521851]
[159.34057617 84.32680511]
[144.90539551 88.40425873]
[144.65258789 104.66065979]
[138.88577271 119.30004120]
[128.68395996 130.58178711]
[115.62650299 137.30479431]
[101.55715942 138.93109131]
[88.32682037 135.61476135]
[80.89704895 148.64543152]
[73.46727753 161.67610168]
[66.03750610 174.70678711]
[58.60773849 187.73745728]
[51.17796707 200.76814270]
[43.74819946 213.79881287]
[52.32451630 226.37689209]
[54.58002472 241.37020874]
[50.12032700 255.79696655]
[39.88114929 266.81152344]
[25.93260765 272.26565552]
[11.06082153 271.12744141]
[3.63105202 284.15814209]
[-3.79871798 297.18881226]
[-11.22848797 310.21948242]
[-18.65825844 323.25015259]
[-26.08802795 336.28082275]
[-33.51779938 349.31152344]
[-40.94756699 362.34219360]
[-48.37733841 375.37286377]
[-55.80710602 388.40353394]
[-45.66655731 399.61187744]
[-39.49523544 413.38711548]
[-37.88603592 428.37506104]
[-40.98404312 443.10656738]
[-48.47354507 456.14154053]
[-59.61015701 466.20962524]
[-73.29479980 472.33422852]
[-88.18214417 473.92700195]
[-102.81290436 470.84448242]
[-110.24267578 483.87515259]
[-117.67244720 496.90585327]
[-125.10221100 509.93652344]
[-132.53198242 522.96716309]
[-139.96174622 535.99786377]
[-140.07574463 551.81866455]
[-153.10127258 559.04254150]
[-160.53105164 572.07324219]
[-167.96081543 585.10394287]
[-175.39057922 598.13458252]
[-160.65660095 595.32214355]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 33]
[6 32]
[7 31]
[8 30]
[10 28]
[11 27]
[12 26]
[13 25]
[14 24]
[16 22]
[17 21]
[34 192]
[35 191]
[36 190]
[37 189]
[39 187]
[40 186]
[41 185]
[42 184]
[43 183]
[44 182]
[53 173]
[54 172]
[55 171]
[56 170]
[57 169]
[58 168]
[59 167]
[60 166]
[61 165]
[62 164]
[68 158]
[69 157]
[70 156]
[71 155]
[72 154]
[73 153]
[74 152]
[79 120]
[80 119]
[81 118]
[82 117]
[83 116]
[84 115]
[85 114]
[86 113]
[87 112]
[88 111]
[89 110]
[90 100]
[91 99]
[92 98]
[128 146]
[129 145]
[130 143]
[131 142]
[132 141]
[133 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
