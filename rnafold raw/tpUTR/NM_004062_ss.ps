%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 10:29:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGCCCAGGCAGCUCUAGCUGGGAGCUUGGCCUCUGGCUCCAUCUGAGUCCCCUGGGAGAGAGCCCAGCACCCAAGAUCCAGCAGGGGACAGGACAGAGUAGAAGCCCCUCCAUCUGCCCUGGGGUGGAGGCACCAUCACCAUCACCAGGCAUGUCUGCAGAGCCUGGACACCAACUUUAUGGACUGCCCAUGGGAGUGCUCCAAAUGUCAGGGUGUUUGCCCAAUAAUAAAGCCCCAGAGAACUGGGCUGGGC\
CCUAUGGGAUUGGUA\
) } def
/len { sequence length } bind def

/coor [
[204.24807739 344.55026245]
[214.80557251 333.69586182]
[228.31658936 326.85983276]
[226.23664856 312.00473022]
[224.15669250 297.14965820]
[222.07675171 282.29455566]
[219.99681091 267.43945312]
[217.91687012 252.58436584]
[215.83692932 237.72926331]
[208.39242554 236.81860352]
[186.05889893 234.08660889]
[180.45950317 248.00231934]
[174.86012268 261.91802979]
[169.26074219 275.83374023]
[172.10052490 291.98513794]
[159.36077881 302.31134033]
[144.14706421 296.18966675]
[142.10993958 279.91754150]
[155.34503174 270.23434448]
[160.94441223 256.31863403]
[166.54380798 242.40292358]
[172.14318848 228.48722839]
[171.18745422 213.51770020]
[163.86383057 200.42707825]
[156.54019165 187.33645630]
[149.21656799 174.24581909]
[141.89294434 161.15519714]
[92.42361450 164.05523682]
[59.28169632 136.78759766]
[54.75706100 100.74154663]
[39.76335907 100.30688477]
[24.76965714 99.87222290]
[10.75107384 107.20638275]
[-1.74664676 99.10352325]
[-16.74034691 98.66886139]
[-31.73404884 98.23419952]
[-46.72774887 97.79953766]
[-55.36032867 100.67093658]
[-61.89246368 97.27193451]
[-76.88011932 96.66349030]
[-91.86777496 96.05504608]
[-103.43364716 106.48903656]
[-118.62459564 105.65848541]
[-128.50053406 94.56788635]
[-143.48818970 93.95944214]
[-158.47584534 93.35099792]
[-168.44900513 101.49296570]
[-180.89797974 100.69874573]
[-189.20402527 91.93573761]
[-204.18360901 91.15359497]
[-219.16320801 90.37145233]
[-234.14280701 89.58930206]
[-249.12240601 88.80715942]
[-264.10198975 88.02501678]
[-279.08157349 87.24286652]
[-294.06118774 86.46072388]
[-309.04882812 85.85227966]
[-324.04254150 85.41761780]
[-339.03625488 84.98295593]
[-343.89346313 99.29724884]
[-352.75543213 111.54292297]
[-364.83419800 120.63111877]
[-379.05566406 125.75370789]
[-394.15530396 126.45520020]
[-408.79046631 122.67321777]
[-421.65982056 114.74404144]
[-431.61898804 103.37274933]
[-437.78240967 89.57044983]
[-439.60208130 74.56444550]
[-436.91616821 59.68905258]
[-429.96350098 46.26698685]
[-419.36230469 35.49172211]
[-406.05526733 28.32139778]
[-391.22558594 25.39358521]
[-376.19192505 26.96862793]
[-362.29107666 32.90647507]
[-350.75909424 42.67913437]
[-342.62139893 55.41762543]
[-338.60159302 69.98925781]
[-323.60787964 70.42391968]
[-308.61416626 70.85858154]
[-304.61022949 68.31555939]
[-298.97293091 68.23644257]
[-293.27905273 71.48113251]
[-278.29943848 72.26327515]
[-263.31985474 73.04541779]
[-248.34025574 73.82756805]
[-233.36065674 74.60971069]
[-218.38107300 75.39185333]
[-203.40147400 76.17400360]
[-188.42187500 76.95614624]
[-173.21762085 68.16219330]
[-157.86740112 78.36334229]
[-142.87974548 78.97178650]
[-127.89208984 79.58023071]
[-117.14965820 69.32666779]
[-101.94137573 69.73020935]
[-91.25933075 81.06739044]
[-76.27167511 81.67583466]
[-61.28401947 82.28427887]
[-46.29308701 82.80583954]
[-31.29938698 83.24050140]
[-16.30568695 83.67516327]
[-1.31198537 84.10982513]
[11.63414860 76.74457550]
[25.20431900 84.87851715]
[40.19802094 85.31317902]
[55.19172287 85.74784088]
[63.98033905 73.59217834]
[58.86819839 59.49019241]
[53.75605774 45.38820648]
[48.64391327 31.28622246]
[43.53177261 17.18423653]
[38.41962814 3.08225012]
[33.30748749 -11.01973534]
[28.19534492 -25.12172127]
[23.08320427 -39.22370529]
[8.66385460 -45.69347763]
[3.12081480 -60.49382401]
[9.74267197 -74.84396362]
[24.60079575 -80.23021698]
[38.88012314 -73.45700836]
[44.10898590 -58.54277039]
[37.18518829 -44.33584976]
[42.29733276 -30.23386383]
[47.40947342 -16.13187790]
[52.52161407 -2.02989197]
[57.63375854 12.07209396]
[62.74589920 26.17407990]
[67.85803986 40.27606583]
[72.97018433 54.37805176]
[78.08232880 68.48003387]
[85.55399323 69.13130188]
[86.85652161 54.18795776]
[88.15904236 39.24461746]
[89.46157074 24.30127716]
[90.76409149 9.35793591]
[92.06661987 -5.58540440]
[93.36939240 -20.52872276]
[108.31269073 -19.22570419]
[107.00995636 -4.28288031]
[105.70743561 10.66046047]
[104.40490723 25.60380173]
[103.10238647 40.54714203]
[101.79985809 55.49048233]
[100.49733734 70.43382263]
[107.96900940 71.08508301]
[115.44389343 58.08023834]
[122.91878510 45.07538986]
[130.39367676 32.07054138]
[137.86856079 19.06569481]
[145.34344482 6.06084776]
[144.89558411 -12.36446190]
[160.44094849 -20.54030800]
[167.76457214 -33.63093185]
[167.00187683 -50.01233673]
[180.95140076 -58.63456726]
[195.26307678 -50.62781525]
[195.21426392 -34.22874069]
[180.85519409 -26.30730438]
[173.53157043 -13.21667957]
[176.51780701 -1.51782954]
[170.55343628 9.43816566]
[158.34829712 13.53573513]
[150.87339783 26.54058266]
[143.39851379 39.54542923]
[135.92362976 52.55027771]
[128.44874573 65.55512238]
[120.97385406 78.55997467]
[126.41366577 83.72315979]
[140.79635620 79.46428680]
[137.29328918 94.04953003]
[142.73309326 99.21271515]
[155.33049011 91.06988525]
[167.92787170 82.92704773]
[171.00115967 67.42445374]
[184.18257141 58.70516205]
[199.65180969 61.94217682]
[208.23124695 75.21503448]
[204.83087158 90.64917755]
[191.46804810 99.08781433]
[176.07070923 95.52444458]
[163.47331238 103.66727448]
[150.87591553 111.81010437]
[156.95578003 125.52269745]
[171.44841003 121.65441132]
[185.94104004 117.78612518]
[197.27909851 106.75167084]
[211.57121277 110.94507599]
[226.06384277 107.07678986]
[239.80795288 97.15027618]
[253.15129089 107.60933685]
[246.79476929 123.32656097]
[229.93212891 121.56941986]
[215.43949890 125.43770599]
[205.13806152 136.19548035]
[189.80932617 132.27876282]
[175.31669617 136.14704895]
[160.82406616 140.01533508]
[154.98356628 153.83157349]
[162.30718994 166.92219543]
[169.63081360 180.01281738]
[176.95445251 193.10343933]
[184.27807617 206.19407654]
[186.14122009 191.31022644]
[192.31968689 177.64178467]
[202.26155090 166.40971375]
[215.07872009 158.61740112]
[229.62623596 154.96090698]
[244.60455322 155.76689148]
[258.67568970 160.96333313]
[270.58267212 170.08604431]
[279.26263428 182.32168579]
[293.33474731 187.51548767]
[307.40689087 192.70928955]
[321.47900391 197.90307617]
[337.54132080 194.59646606]
[348.23239136 207.03163147]
[342.55413818 222.41633606]
[326.34786987 224.92413330]
[316.28518677 211.97518921]
[302.21307373 206.78140259]
[288.14096069 201.58760071]
[274.06884766 196.39381409]
[269.63937378 202.44607544]
[281.74389648 211.30499268]
[293.84841919 220.16392517]
[305.95294189 229.02285767]
[318.05746460 237.88179016]
[324.11108398 251.60597229]
[309.19851685 249.98629761]
[297.09402466 241.12738037]
[284.98950195 232.26844788]
[272.88497925 223.40951538]
[260.78045654 214.55058289]
[256.35098267 220.60284424]
[265.55694580 232.44557190]
[274.76290894 244.28829956]
[283.96890259 256.13104248]
[293.17486572 267.97375488]
[308.56045532 273.64962769]
[311.07073975 289.85549927]
[298.12338257 299.92016602]
[283.03747559 293.48995972]
[281.33212280 277.17971802]
[272.12615967 265.33700562]
[262.92019653 253.49426270]
[253.71423340 241.65153503]
[244.50825500 229.80880737]
[230.69201660 235.64932251]
[232.77197266 250.50440979]
[234.85191345 265.35949707]
[236.93185425 280.21459961]
[239.01179504 295.06970215]
[241.09173584 309.92480469]
[243.17167664 324.77987671]
[258.04061890 327.64230347]
[271.17324829 335.17971802]
[281.14505005 346.57452393]
[286.87435913 360.59072876]
[287.73968506 375.70794678]
[283.64718628 390.28634644]
[275.04077148 402.74459839]
[262.85397339 411.73135376]
[248.40879822 416.27172852]
[233.27207947 415.87326050]
[219.08578491 410.57916260]
[207.38870239 400.96371460]
[199.44964600 388.06991577]
[196.12982178 373.29635620]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 256]
[4 255]
[5 254]
[6 253]
[7 252]
[8 251]
[9 250]
[11 22]
[12 21]
[13 20]
[14 19]
[23 204]
[24 203]
[25 202]
[26 201]
[27 200]
[30 108]
[31 107]
[32 106]
[34 104]
[35 103]
[36 102]
[37 101]
[39 100]
[40 99]
[41 98]
[44 95]
[45 94]
[46 93]
[49 91]
[50 90]
[51 89]
[52 88]
[53 87]
[54 86]
[55 85]
[56 84]
[57 81]
[58 80]
[59 79]
[109 132]
[110 131]
[111 130]
[112 129]
[113 128]
[114 127]
[115 126]
[116 125]
[117 124]
[147 169]
[148 168]
[149 167]
[150 166]
[151 165]
[152 164]
[154 161]
[155 160]
[173 184]
[174 183]
[175 182]
[185 199]
[186 198]
[187 197]
[189 195]
[190 194]
[213 224]
[214 223]
[215 222]
[216 221]
[236 249]
[237 248]
[238 247]
[239 246]
[240 245]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
