%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 15:15:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGCAGCCGCCCAGGGCCGGCGGGGCCCUUUUCACCUUGGGCUGACGGAGGUGGCGGGGCUAGAGGUGUAGACACCCCGAGCCCCGUGGGCACUCGCACUGGGGGGCUGUGACAGCAGCUGGGCCAGGAGGCCGUGUAAUGACCACACACUCCUCUCAAGCAA\
) } def
/len { sequence length } bind def

/coor [
[384.96420288 321.35821533]
[370.36413574 324.07376099]
[357.84875488 315.42388916]
[355.09945679 300.09161377]
[342.88079834 291.39077759]
[330.66217041 282.68991089]
[318.44354248 273.98904419]
[306.22488403 265.28820801]
[294.00625610 256.58734131]
[279.15084839 255.50743103]
[272.39764404 241.19992065]
[260.17898560 232.49906921]
[247.96035767 223.79821777]
[235.74171448 215.09736633]
[223.52307129 206.39649963]
[216.11814880 209.36343384]
[208.04995728 209.13294983]
[200.65570068 205.66815186]
[195.19070435 199.47439575]
[192.61550903 191.52682495]
[193.42756653 183.11729431]
[181.90635681 173.51199341]
[170.38514709 163.90669250]
[158.86393738 154.30139160]
[147.34274292 144.69609070]
[135.73062134 135.20089722]
[124.02862549 125.81668854]
[112.32662964 116.43247223]
[100.62464142 107.04826355]
[98.64656830 111.29418945]
[94.96655273 114.84391785]
[89.82402039 117.18657684]
[83.59335327 117.88763428]
[76.76124573 116.62187195]
[61.84341812 115.05394745]
[46.92559052 113.48601532]
[32.00776291 111.91809082]
[17.08993340 110.35016632]
[2.17210579 108.78223419]
[-12.36123562 115.03464508]
[-24.21001816 106.00936127]
[-37.53251648 114.94751740]
[-52.78297424 109.96724701]
[-58.26254272 94.88898468]
[-49.76776886 81.27949524]
[-33.81511688 79.57880402]
[-22.64209175 91.09153748]
[-9.17577267 84.72698212]
[3.74003267 93.86441040]
[18.65786171 95.43233490]
[33.57569122 97.00026703]
[48.49351883 98.56819153]
[63.41134644 100.13611603]
[78.32917786 101.70404053]
[87.14595032 89.56878662]
[81.04490662 75.86560822]
[74.94385529 62.16242599]
[68.84280396 48.45924377]
[62.74175644 34.75606155]
[56.64070511 21.05287933]
[50.53965759 7.34969807]
[44.43860626 -6.35348368]
[31.75719452 -15.81352520]
[33.64892197 -30.58750916]
[20.96751213 -40.04755020]
[22.85923958 -54.82153702]
[16.75819016 -68.52471924]
[10.65713978 -82.22789764]
[4.55608988 -95.93108368]
[-9.02191734 -105.12726593]
[-7.57706976 -121.46263885]
[7.40429688 -128.13276672]
[20.51063728 -118.27600098]
[18.25927162 -102.03213501]
[24.36032104 -88.32894897]
[30.46137047 -74.62577057]
[36.56241989 -60.92258453]
[48.80744553 -52.44268799]
[47.35210419 -36.68856049]
[59.59712601 -28.20866203]
[58.14178848 -12.45453358]
[64.24283600 1.24864841]
[70.34388733 14.95182991]
[76.44493866 28.65501213]
[82.54598999 42.35819244]
[88.64703369 56.06137466]
[94.74808502 69.76455688]
[100.84913635 83.46774292]
[110.00885010 95.34627533]
[121.71084595 104.73048401]
[133.41284180 114.11469269]
[145.11482239 123.49890900]
[153.80990601 126.44577026]
[156.94804382 133.17488098]
[168.46925354 142.78018188]
[179.99044800 152.38548279]
[191.51165771 161.99078369]
[203.03286743 171.59608459]
[225.32139587 173.68110657]
[232.22392273 194.17787170]
[244.44256592 202.87872314]
[256.66119385 211.57957458]
[268.87985229 220.28042603]
[281.09848022 228.98127747]
[296.82785034 230.68354797]
[302.70709229 244.36871338]
[314.92575073 253.06956482]
[327.14437866 261.77041626]
[339.36303711 270.47128296]
[351.58166504 279.17211914]
[363.80029297 287.87298584]
[379.18853760 285.45639038]
[391.45602417 294.45434570]
[393.66503906 309.13955688]
[406.39596558 303.78964233]
[419.99865723 305.42764282]
[430.92138672 313.51791382]
[436.36566162 325.85412598]
[435.00292969 339.16030884]
[447.05371094 348.09222412]
[459.10449219 357.02410889]
[471.23974609 365.84091187]
[483.45837402 374.54174805]
[495.67700195 383.24261475]
[502.28384399 384.26104736]
[506.69500732 387.93420410]
[508.18664551 392.51461792]
[520.06518555 401.67434692]
[531.94372559 410.83404541]
[543.82226562 419.99377441]
[555.70080566 429.15350342]
[566.44641113 427.13229370]
[576.31774902 431.29705811]
[582.12420654 440.03802490]
[582.13574219 450.31167603]
[593.65692139 459.91696167]
[605.17816162 469.52227783]
[616.69934082 479.12756348]
[632.05767822 476.18536377]
[645.68872070 483.84875488]
[651.15643311 498.49929810]
[645.87902832 513.21948242]
[632.34838867 521.05883789]
[616.95324707 518.31591797]
[606.96270752 506.28579712]
[607.09405518 490.64877319]
[595.57281494 481.04345703]
[584.05163574 471.43817139]
[572.53039551 461.83285522]
[553.30889893 459.98880005]
[546.54107666 441.03201294]
[534.66253662 431.87231445]
[522.78399658 422.71258545]
[510.90545654 413.55285645]
[499.02691650 404.39315796]
[486.97616577 395.46124268]
[474.75750732 386.76040649]
[462.53887939 378.05953979]
[455.23306274 376.73516846]
[450.17257690 369.07489014]
[438.12179565 360.14297485]
[426.07104492 351.21109009]
[410.59970093 356.63638306]
[394.77993774 351.73754883]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 114]
[4 111]
[5 110]
[6 109]
[7 108]
[8 107]
[9 106]
[11 104]
[12 103]
[13 102]
[14 101]
[15 100]
[21 98]
[22 97]
[23 96]
[24 95]
[25 94]
[26 92]
[27 91]
[28 90]
[29 89]
[34 54]
[35 53]
[36 52]
[37 51]
[38 50]
[39 49]
[41 47]
[55 88]
[56 87]
[57 86]
[58 85]
[59 84]
[60 83]
[61 82]
[62 81]
[64 79]
[66 77]
[67 76]
[68 75]
[69 74]
[119 162]
[120 161]
[121 160]
[122 158]
[123 157]
[124 156]
[127 155]
[128 154]
[129 153]
[130 152]
[131 151]
[135 149]
[136 148]
[137 147]
[138 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
