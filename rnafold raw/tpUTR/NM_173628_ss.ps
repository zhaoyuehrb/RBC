%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 22:16:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCGCUCCUGCCUCACAGCCCACACUCCCUGGGGCUGGACCACAACUCAGCCCUUCACCUGUGCACCUGUGACUUAUUCUUUACAGGAACUGGUGGUGGUUUUUCGUUCUCUUAAAUAAUCAGGUGCUUUGUAACCAAGCACAUCGGAACCAGAGGGUGGAGGUUGGUGUGGAAGAGGUGGGGCAGAUUAAAGCCAGUGGAGCCACUCA\
) } def
/len { sequence length } bind def

/coor [
[162.21240234 528.44244385]
[161.57142639 513.09698486]
[168.70329285 499.49432373]
[181.68957520 491.29357910]
[181.01660156 476.30868530]
[180.34362793 461.32379150]
[179.67065430 446.33889771]
[178.99768066 431.35397339]
[176.87304688 416.50521851]
[173.31684875 401.93286133]
[169.76063538 387.36050415]
[166.20443726 372.78817749]
[162.64823914 358.21582031]
[159.09202576 343.64346313]
[155.53582764 329.07110596]
[151.97961426 314.49874878]
[139.15713501 307.00747681]
[135.34304810 292.27969360]
[143.28755188 278.88107300]
[139.51374817 264.36355591]
[135.52319336 249.90411377]
[131.53263855 235.44467163]
[127.54209137 220.98522949]
[123.55153656 206.52578735]
[119.56098938 192.06634521]
[115.57043457 177.60690308]
[102.42347717 165.98309326]
[107.20331573 148.20048523]
[102.99690247 133.80235291]
[98.79049683 119.40422821]
[85.58155823 112.29619598]
[71.24797058 116.71752167]
[56.91437912 121.13884735]
[42.58078384 125.56018066]
[28.24719238 129.98150635]
[13.91360092 134.40283203]
[-0.41999108 138.82415771]
[-14.75358295 143.24548340]
[-19.64122581 157.97268677]
[-32.27143097 166.98698425]
[-47.78763199 166.82218933]
[-60.22352982 157.54167175]
[-64.79727173 142.71397400]
[-59.75015259 128.04064941]
[-47.02289963 119.16390228]
[-31.50940132 119.49701691]
[-19.17491150 128.91189575]
[-4.84131861 124.49057007]
[9.49227333 120.06924438]
[23.82586479 115.64791107]
[38.15945816 111.22658539]
[52.49304962 106.80525970]
[66.82664490 102.38393402]
[81.16023254 97.96260071]
[84.05907440 83.24537659]
[72.47281647 73.71864319]
[60.88656235 64.19190216]
[49.30030823 54.66516876]
[37.71405411 45.13843155]
[22.14048576 42.35014725]
[17.22380638 28.29043198]
[5.63755274 18.76369667]
[-5.10989046 20.44368172]
[-14.80784607 16.02209091]
[-20.35418320 7.17864943]
[-20.12184715 -3.03792238]
[-31.41791916 -12.90700340]
[-42.71399307 -22.77608490]
[-54.01006317 -32.64516449]
[-65.30613708 -42.51424408]
[-76.60221100 -52.38332748]
[-87.89827728 -62.25240707]
[-102.99577332 -58.66837311]
[-117.30355072 -64.67397308]
[-125.31996918 -77.95992279]
[-123.96257019 -93.41751862]
[-113.75328064 -105.10298157]
[-98.61779785 -108.52302551]
[-84.37601471 -102.36257172]
[-76.50418854 -88.99043274]
[-78.02919769 -73.54847717]
[-66.73312378 -63.67939758]
[-55.43705368 -53.81031799]
[-44.14098358 -43.94123840]
[-32.84490967 -34.07215500]
[-21.54883766 -24.20307541]
[-10.25276661 -14.33399391]
[8.94105053 -11.99580669]
[15.16428947 7.17744160]
[26.75054359 16.70417786]
[41.49538422 18.81104660]
[47.24079132 33.55217743]
[58.82704544 43.07891464]
[70.41329956 52.60564804]
[81.99955750 62.13238525]
[93.58580780 71.65912628]
[83.11952209 60.91403961]
[81.42059326 46.01056290]
[89.19999695 33.18555450]
[103.20218658 27.80607224]
[117.56745911 32.12334442]
[126.28419495 44.33066177]
[125.70457458 59.31945801]
[116.07007599 70.81781769]
[126.91199493 60.45188141]
[137.75392151 50.08594131]
[148.59584045 39.72000122]
[159.43775940 29.35406113]
[170.27969360 18.98812294]
[181.12161255 8.62218189]
[191.96353149 -1.74375749]
[202.80546570 -12.10969734]
[196.05316162 -24.24083900]
[192.41244507 -37.62845230]
[192.09155273 -51.48865509]
[195.10447693 -65.01107788]
[201.27044678 -77.40623474]
[210.22474670 -87.95163727]
[221.44027710 -96.03388214]
[234.25862122 -101.18433380]
[247.92864990 -103.10631561]
[261.65054321 -101.69219208]
[274.62261963 -97.02934265]
[286.08813477 -89.39484406]
[297.23529053 -99.43180847]
[308.38247681 -109.46876526]
[319.52966309 -119.50572205]
[330.67681885 -129.54267883]
[341.82400513 -139.57963562]
[341.09747314 -155.20033264]
[350.62274170 -167.60206604]
[365.90231323 -170.92910767]
[379.72158813 -163.61054993]
[385.55557251 -149.10197449]
[380.64959717 -134.25389099]
[367.32012939 -126.07711792]
[351.86096191 -128.43246460]
[340.71377563 -118.39550781]
[329.56661987 -108.35855103]
[318.41943359 -98.32159424]
[307.27227783 -88.28462982]
[296.12509155 -78.24767303]
[303.32855225 -63.76449966]
[306.17391968 -47.82688522]
[304.42413330 -31.71805763]
[298.21243286 -16.73728561]
[288.03225708 -4.09506416]
[274.69805908 5.18468761]
[259.28009033 10.34755707]
[243.01863098 10.96996117]
[227.22406006 6.99389315]
[213.17140198 -1.26777422]
[202.32948303 9.09816551]
[191.48754883 19.46410561]
[180.64562988 29.83004570]
[169.80371094 40.19598389]
[158.96177673 50.56192398]
[148.11985779 60.92786407]
[137.27793884 71.29380035]
[126.43601227 81.65974426]
[113.18862152 115.19781494]
[117.39503479 129.59594727]
[121.60144806 143.99406433]
[132.51817322 150.86436462]
[135.72500610 162.94378662]
[130.02987671 173.61634827]
[134.02043152 188.07579041]
[138.01098633 202.53523254]
[142.00154114 216.99467468]
[145.99208069 231.45411682]
[149.98263550 245.91355896]
[153.97319031 260.37301636]
[158.40808105 265.27810669]
[159.53089905 270.85009766]
[157.85990906 275.32489014]
[171.08329773 283.55770874]
[174.48220825 298.38681030]
[166.55197144 310.94256592]
[170.10816956 325.51492310]
[173.66438293 340.08724976]
[177.22058105 354.65960693]
[180.77679443 369.23196411]
[184.33299255 383.80432129]
[187.88920593 398.37664795]
[191.44540405 412.94900513]
[196.05296326 398.67419434]
[206.00729370 387.45315552]
[219.63102722 381.17672729]
[234.62852478 380.90246582]
[248.47262573 386.67663574]
[258.83053589 397.52621460]
[263.95690918 411.62301636]
[262.98794556 426.59170532]
[256.08688354 439.90994263]
[244.41661072 449.33355713]
[229.94360352 453.27462769]
[215.10664368 451.06909180]
[202.40580750 443.08856201]
[193.98257446 430.68099976]
[194.65554810 445.66592407]
[195.32852173 460.65081787]
[196.00149536 475.63571167]
[196.67446899 490.62060547]
[210.34358215 497.62423706]
[218.66606140 510.53283691]
[219.40322876 525.87402344]
[212.35678101 539.52111816]
[199.42216492 547.80310059]
[184.07873535 548.49218750]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 203]
[5 202]
[6 201]
[7 200]
[8 199]
[9 185]
[10 184]
[11 183]
[12 182]
[13 181]
[14 180]
[15 179]
[16 178]
[19 175]
[20 172]
[21 171]
[22 170]
[23 169]
[24 168]
[25 167]
[26 166]
[28 163]
[29 162]
[30 161]
[31 54]
[32 53]
[33 52]
[34 51]
[35 50]
[36 49]
[37 48]
[38 47]
[55 96]
[56 95]
[57 94]
[58 93]
[59 92]
[61 90]
[62 89]
[66 87]
[67 86]
[68 85]
[69 84]
[70 83]
[71 82]
[72 81]
[104 160]
[105 159]
[106 158]
[107 157]
[108 156]
[109 155]
[110 154]
[111 153]
[112 152]
[124 142]
[125 141]
[126 140]
[127 139]
[128 138]
[129 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
