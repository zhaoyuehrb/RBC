%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 12:04:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAUUCACUAUGAACACUUUUGUCACCAGGCUAUAAUUUGCCUGAUGUCUGUGAGAUUUGAUAAAUAUAUCAUUCAACCUGUUUAUAUAAACUAAGUUUUAUUACUUUGCUUUCCAAUUUUUGUUUUUUACUUCUGUAAACCAAUUUCAUUAAAAAUUAGCUUUGGUGUAAAUUCAGGA\
) } def
/len { sequence length } bind def

/coor [
[159.65611267 145.83625793]
[166.79072571 159.03085327]
[169.38188171 173.80535889]
[167.16310120 188.64035034]
[160.36256409 202.01019287]
[149.67965698 212.53991699]
[136.21298218 219.14666748]
[121.34749603 221.15095520]
[106.61196136 218.34669495]
[93.52178192 211.02226257]
[83.42317200 199.93092346]
[77.35467529 186.21328735]
[75.94037628 171.28010559]
[79.32572174 156.66712952]
[87.16256714 143.87713623]
[98.64440155 134.22579956]
[84.58396912 139.45112610]
[70.52352905 144.67645264]
[69.39867401 156.13078308]
[64.09293365 166.28633118]
[55.41143799 173.68513489]
[44.64071274 177.28128052]
[33.35815430 176.58865356]
[23.20097923 171.74632263]
[15.62868595 163.49269104]
[1.31534040 167.97912598]
[-9.53890610 179.48980713]
[-23.99775696 175.91337585]
[-38.31110382 180.39981079]
[-52.62444687 184.88626099]
[-66.93779755 189.37269592]
[-81.25113678 193.85913086]
[-86.07178497 208.60841370]
[-98.66088104 217.68002319]
[-114.17767334 217.58575439]
[-126.65563202 208.36186218]
[-131.29672241 193.55511475]
[-126.31636047 178.85900879]
[-113.62959290 169.92449951]
[-98.11473846 170.18707275]
[-85.73757935 179.54579163]
[-71.42423248 175.05935669]
[-57.11088943 170.57290649]
[-42.79754257 166.08647156]
[-28.48419762 161.60003662]
[-18.65373802 150.41024780]
[-3.17109966 153.66577148]
[11.14224625 149.17933655]
[16.03915787 131.17088318]
[30.89929771 119.63537598]
[49.85881805 119.35255432]
[65.29820251 130.61601257]
[79.35863495 125.39069366]
[93.41907501 120.16536713]
[82.97998810 109.09162903]
[83.26881409 95.29512787]
[71.99478912 85.40086365]
[59.07911682 85.45592499]
[49.88997269 76.96033478]
[48.99382401 64.88008881]
[37.89322662 54.79164124]
[26.79263115 44.70319366]
[15.69203377 34.61474609]
[4.59143686 24.52630234]
[-11.53961754 21.57315063]
[-16.79203033 6.03789473]
[-5.76257038 -6.09812737]
[10.20260143 -2.35041595]
[14.67988300 13.42570496]
[25.78047943 23.51415062]
[36.88107681 33.60259628]
[47.98167419 43.69104385]
[59.08227158 53.77948761]
[76.39736938 56.56369781]
[81.88905334 74.12684631]
[93.16307831 84.02111053]
[108.54606628 83.41493988]
[119.47622681 95.74910736]
[116.68932343 113.09262848]
[131.27941895 109.60993958]
[145.86952209 106.12724304]
[160.45960999 102.64455414]
[174.98706055 98.90916443]
[189.44749451 94.92219543]
[203.90792847 90.93522644]
[218.36836243 86.94826508]
[232.82879639 82.96129608]
[247.28921509 78.97432709]
[261.74966431 74.98735809]
[276.17492676 70.87505341]
[290.56399536 66.63771057]
[304.95306396 62.40036774]
[319.30477905 58.03831100]
[333.61813354 53.55187225]
[347.93148804 49.06543350]
[362.24484253 44.57899094]
[373.09909058 33.06830597]
[387.55792236 36.64474106]
[401.87127686 32.15829849]
[416.18463135 27.67185974]
[430.49795532 23.18541908]
[444.81130981 18.69897842]
[443.95825195 9.68834782]
[444.50994873 0.65802085]
[446.45193481 -8.17440605]
[449.73629761 -16.59628868]
[454.28277588 -24.40505219]
[459.98077393 -31.41305733]
[466.69204712 -37.45212173]
[474.25402832 -42.37754440]
[482.48382568 -46.07158279]
[491.18261719 -48.44625473]
[500.14038086 -49.44544601]
[509.14111328 -49.04622650]
[517.96783447 -47.25938797]
[526.40814209 -44.12913132]
[534.25891113 -39.73200989]
[541.33148193 -34.17501831]
[547.45611572 -27.59301949]
[552.48602295 -20.14545631]
[556.30096436 -12.01249599]
[558.80999756 -3.39066792]
[573.76428223 -4.56106520]
[588.71856689 -5.73146296]
[595.31921387 -14.41934681]
[605.40930176 -17.95312500]
[615.56170654 -15.38929844]
[622.46765137 -7.81336021]
[637.45355225 -8.46403790]
[652.43939209 -9.11471653]
[667.42529297 -9.76539516]
[682.41119385 -10.41607285]
[695.94604492 -19.67561531]
[710.61346436 -12.34083271]
[711.32482910 4.04287815]
[697.34838867 12.62136078]
[683.06182861 4.56980753]
[668.07598877 5.22048569]
[653.09008789 5.87116385]
[638.10418701 6.52184248]
[623.11834717 7.17252064]
[607.64093018 18.73686981]
[589.88891602 9.22280598]
[574.93469238 10.39320374]
[559.98040771 11.56360149]
[554.82049561 32.77479553]
[542.15368652 50.58579636]
[523.76727295 62.45006943]
[502.26800537 66.66253662]
[480.71243286 62.60457993]
[462.17254639 50.83483124]
[449.29776001 33.01232529]
[434.98440552 37.49876404]
[420.67105103 41.98520660]
[406.35772705 46.47164536]
[392.04437256 50.95808411]
[382.21389771 62.14786911]
[366.73126221 58.89233780]
[352.41793823 63.37877655]
[338.10458374 67.86521912]
[323.79122925 72.35165405]
[318.33425903 77.36605835]
[309.19039917 76.78942108]
[294.80133057 81.02676392]
[280.41229248 85.26410675]
[274.86911011 90.18304443]
[265.73663330 89.44779205]
[251.27618408 93.43476105]
[236.81575012 97.42173004]
[222.35533142 101.40869141]
[207.89489746 105.39566040]
[193.43446350 109.38262939]
[178.97402954 113.36959839]
[175.86817932 117.02986145]
[170.41978455 118.76169586]
[163.94230652 117.23464966]
[149.35220337 120.71733856]
[134.76211548 124.20003510]
[120.17201996 127.68272400]
[135.08320618 129.31254578]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 54]
[17 53]
[18 52]
[25 48]
[26 47]
[28 45]
[29 44]
[30 43]
[31 42]
[32 41]
[56 76]
[57 75]
[60 73]
[61 72]
[62 71]
[63 70]
[64 69]
[79 179]
[80 178]
[81 177]
[82 176]
[83 173]
[84 172]
[85 171]
[86 170]
[87 169]
[88 168]
[89 167]
[90 165]
[91 164]
[92 163]
[93 161]
[94 160]
[95 159]
[96 158]
[98 156]
[99 155]
[100 154]
[101 153]
[102 152]
[122 145]
[123 144]
[124 143]
[128 141]
[129 140]
[130 139]
[131 138]
[132 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
