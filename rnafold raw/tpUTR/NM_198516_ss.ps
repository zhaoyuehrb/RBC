%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 21:44:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCACCGGGGCCACUUCCGGCUGCCUCUUUGCUACUGUGUAGCACCUGCUGCAACGUUGCCUGCUGUCCACGUGGGGUUGUUUGGAGUCUGGGGAACCAGGUUAGUGGGCCCCCAAGAAGAGCUUUUUAUUUCCUAUUCAAUUUUCAUGGAGUUUAUAGAAAGAUGCUGAUUGGUAGGUGAUGGUAUGAUAUCAAACUAUUUUGCAGUUGUAAAUAGGGGACAGAUGGAAAAUAUUUAUAACUGACAAUAAAAUA\
UUAUUAAGAAAAGGG\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 151.95098877]
[92.50000000 136.95098877]
[92.50000000 121.95098877]
[85.07860565 120.86798096]
[62.81442261 117.61896515]
[58.52780151 131.99342346]
[54.24117661 146.36787415]
[49.95455551 160.74232483]
[45.66793442 175.11677551]
[53.40311813 188.89874268]
[49.04702759 204.09083557]
[35.18405533 211.67988586]
[20.03885460 207.16340637]
[12.59680748 193.22097778]
[17.27314568 178.12437439]
[31.29348373 170.83015442]
[35.58010483 156.45570374]
[39.86672592 142.08125305]
[44.15334702 127.70679474]
[48.43996811 113.33234406]
[44.32027054 98.90916443]
[33.08817291 88.96733093]
[21.85607910 79.02549744]
[10.62398434 69.08366394]
[-0.60811108 59.14183426]
[-14.59499836 68.02457428]
[-30.50383949 72.55369568]
[-47.01565933 72.37035370]
[-62.76622009 67.50569916]
[-76.45874023 58.37701797]
[-87.80532837 68.18797302]
[-99.15191650 77.99893188]
[-110.49850464 87.80989075]
[-121.84510040 97.62084961]
[-133.19168091 107.43180847]
[-141.21833801 122.36530304]
[-157.79022217 118.78633881]
[-158.93867493 101.87133789]
[-143.00263977 96.08522034]
[-131.65605164 86.27426147]
[-120.30946350 76.46330261]
[-108.96287537 66.65234375]
[-97.61628723 56.84138489]
[-86.26969910 47.03042984]
[-95.41080475 31.43070984]
[-99.41610718 13.20120049]
[-114.40981293 13.63586235]
[-127.97998047 21.76980591]
[-140.92611694 14.40455914]
[-156.39355469 24.42707634]
[-171.49484253 15.45746517]
[-186.48249817 16.06590843]
[-201.47015381 16.67435265]
[-216.45780945 17.28279686]
[-231.44546509 17.89124107]
[-244.92044067 26.18194962]
[-257.95108032 18.96727371]
[-272.93872070 19.57571793]
[-287.92639160 20.18416214]
[-302.91403198 20.79260445]
[-316.38900757 29.08331299]
[-329.41964722 21.86863708]
[-344.40731812 22.47708130]
[-356.29534912 33.24993134]
[-372.10617065 30.53014183]
[-379.71109009 16.40410805]
[-373.27624512 1.70810950]
[-357.73791504 -2.28433943]
[-345.01574707 7.48942614]
[-330.02810669 6.88098192]
[-317.62515259 -1.36620617]
[-303.52249146 5.80495071]
[-288.53482056 5.19650650]
[-273.54718018 4.58806229]
[-258.55953979 3.97961807]
[-246.15657043 -4.26757002]
[-232.05390930 2.90358686]
[-217.06625366 2.29514289]
[-202.07859802 1.68669868]
[-187.09094238 1.07825446]
[-172.10328674 0.46981034]
[-163.69621277 -8.19631863]
[-151.23887634 -8.84617615]
[-141.36077881 -0.58914185]
[-128.86305237 -8.69199657]
[-114.84447479 -1.35783887]
[-99.85076904 -1.79250026]
[-94.09044647 -15.64236069]
[-104.35357666 -26.58164978]
[-114.61671448 -37.52093887]
[-124.94308472 -48.40055847]
[-135.33233643 -59.22013855]
[-145.72160339 -70.03971863]
[-156.11085510 -80.85929871]
[-171.68014526 -81.34392548]
[-182.06221008 -92.46452332]
[-181.50424194 -107.30447388]
[-191.89349365 -118.12405396]
[-202.28274536 -128.94363403]
[-218.08688354 -129.01361084]
[-229.15312195 -140.29696655]
[-228.91606140 -156.09947205]
[-217.51634216 -167.04580688]
[-201.71720886 -166.64167786]
[-190.89202881 -155.12686157]
[-191.46316528 -139.33290100]
[-181.07391357 -128.51332092]
[-170.68466187 -117.69373322]
[-155.83428955 -117.64929199]
[-145.14396667 -106.82469177]
[-145.29127502 -91.24855804]
[-134.90202332 -80.42897797]
[-124.51276398 -69.60939789]
[-114.12350464 -58.78981400]
[-107.24888611 -56.15133286]
[-103.67742157 -47.78407669]
[-93.41429138 -36.84478378]
[-83.15115356 -25.90549660]
[-74.88356018 -32.36872864]
[-65.73817444 -37.24340439]
[-56.01173401 -40.42230606]
[-46.01140213 -41.85235214]
[-36.04505539 -41.53492355]
[-33.44984818 -56.30871582]
[-30.85463905 -71.08250427]
[-28.25943184 -85.85630035]
[-25.66422272 -100.63008881]
[-23.06901360 -115.40387726]
[-20.47380638 -130.17767334]
[-17.87859726 -144.95146179]
[-15.54066849 -159.76814270]
[-13.46072578 -174.62324524]
[-11.38078213 -189.47833252]
[-9.30083942 -204.33341980]
[-22.42009163 -212.01155090]
[-31.59842491 -224.12875366]
[-35.43620682 -238.83724976]
[-33.34820557 -253.89410400]
[-25.65282822 -267.00323486]
[-13.52355957 -276.16561890]
[1.18997204 -279.98406982]
[16.24406052 -277.87625122]
[29.34306717 -270.16363525]
[38.48949051 -258.02233887]
[42.28856277 -243.30378723]
[40.16095352 -228.25248718]
[32.43111420 -215.16363525]
[20.27778244 -206.03318787]
[5.55425549 -202.25347900]
[3.47431231 -187.39839172]
[1.39436913 -172.54328918]
[-0.68557388 -157.68820190]
[1.10415375 -154.68955994]
[1.55071759 -150.68417358]
[0.20057730 -146.30352783]
[-3.10480690 -142.35624695]
[-5.70001554 -127.58245850]
[-8.29522419 -112.80867004]
[-10.89043236 -98.03488159]
[-13.48564053 -83.26108551]
[-16.08084869 -68.48729706]
[-18.67605782 -53.71350861]
[-21.27126503 -38.93971634]
[-11.45835972 -34.86268234]
[-2.56083965 -29.03664017]
[5.11264706 -21.65967178]
[11.29517269 -12.98372269]
[15.77081490 -3.30601001]
[18.38219261 7.04117107]
[19.03599930 17.70185089]
[17.70633698 28.30863380]
[14.43571949 38.49535751]
[9.33372211 47.90973663]
[20.56581688 57.85157013]
[31.79791260 67.79340363]
[43.03000641 77.73523712]
[54.26210022 87.67707062]
[72.36486053 59.65243912]
[105.36389160 49.84637070]
[137.77456665 64.30005646]
[152.12393188 59.93018341]
[166.47329712 55.56031799]
[180.82266235 51.19044876]
[195.17202759 46.82058334]
[209.52139282 42.45071411]
[220.46890259 31.02869606]
[234.89819336 34.72261810]
[249.24755859 30.35275269]
[260.04345703 18.00849915]
[276.07720947 21.45091438]
[280.85470581 37.13873672]
[269.46121216 48.93367767]
[253.61741638 44.70211792]
[239.26805115 49.07198334]
[229.34690857 60.18143845]
[213.89125061 56.80007935]
[199.54188538 61.16994476]
[185.19253540 65.53981781]
[170.84317017 69.90968323]
[156.49380493 74.27954865]
[142.14443970 78.64941406]
[140.58227539 93.56784821]
[153.71513367 100.81548309]
[166.84797668 108.06311035]
[180.02262878 115.23449707]
[193.23861694 122.32939148]
[206.45460510 129.42430115]
[219.67059326 136.51919556]
[232.88658142 143.61410522]
[246.10256958 150.70899963]
[259.31857300 157.80390930]
[272.53454590 164.89880371]
[285.75054932 171.99369812]
[298.96652222 179.08860779]
[312.18252563 186.18350220]
[325.39849854 193.27841187]
[337.75369263 184.38398743]
[352.68460083 181.74667358]
[367.22042847 185.83685303]
[378.49261475 195.79168701]
[384.30084229 209.59654236]
[383.54244995 224.49252319]
[399.90811157 223.44509888]
[408.77157593 237.24258423]
[401.01489258 251.69131470]
[384.61746216 251.92767334]
[376.44754028 237.70851135]
[364.45114136 246.57147217]
[349.73574829 249.35838318]
[335.21014404 245.46385193]
[323.76922607 235.60861206]
[317.71722412 221.70681763]
[318.30361938 206.49440002]
[305.08761597 199.39949036]
[291.87164307 192.30459595]
[278.65563965 185.20968628]
[265.43963623 178.11479187]
[252.22366333 171.01989746]
[239.00767517 163.92498779]
[225.79168701 156.83009338]
[212.57569885 149.73518372]
[199.35971069 142.64028931]
[186.14370728 135.54537964]
[172.92771912 128.45048523]
[165.57469177 128.05699158]
[159.60035706 121.19596100]
[146.46749878 113.94833374]
[133.33464050 106.70070648]
[126.87598419 110.51327515]
[134.92645264 123.16989136]
[142.97691345 135.82650757]
[151.02737427 148.48313904]
[159.07785034 161.13975525]
[167.12831116 173.79637146]
[175.17878723 186.45298767]
[183.22924805 199.10960388]
[192.27304077 211.07664490]
[185.39996338 224.40933228]
[170.40597534 223.98477173]
[164.29833984 210.28459167]
[157.10696411 197.12084961]
[149.91557312 183.95710754]
[142.72419739 170.79336548]
[135.53280640 157.62963867]
[128.34143066 144.46589661]
[121.15004730 131.30215454]
[113.95866394 118.13842010]
[107.50000000 121.95098877]
[107.50000000 136.95098877]
[107.50000000 151.95098877]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 270]
[2 269]
[3 268]
[5 20]
[6 19]
[7 18]
[8 17]
[9 16]
[21 177]
[22 176]
[23 175]
[24 174]
[25 173]
[30 44]
[31 43]
[32 42]
[33 41]
[34 40]
[35 39]
[46 87]
[47 86]
[49 84]
[51 81]
[52 80]
[53 79]
[54 78]
[55 77]
[57 75]
[58 74]
[59 73]
[60 72]
[62 70]
[63 69]
[88 118]
[89 117]
[90 116]
[91 114]
[92 113]
[93 112]
[94 111]
[97 108]
[98 107]
[99 106]
[123 163]
[124 162]
[125 161]
[126 160]
[127 159]
[128 158]
[129 157]
[130 156]
[131 152]
[132 151]
[133 150]
[134 149]
[180 201]
[181 200]
[182 199]
[183 198]
[184 197]
[185 196]
[187 194]
[188 193]
[202 248]
[203 247]
[204 246]
[205 244]
[206 243]
[207 242]
[208 241]
[209 240]
[210 239]
[211 238]
[212 237]
[213 236]
[214 235]
[215 234]
[216 233]
[222 227]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
