%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 02:24:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAAAGGAAGUUUCCAGAAAAGAAGUUAACAUGAACUCUUGAAGUCACACCAGGGCAACUCUUGGAAGAAAUAUAUUUGCAUAUUGAAAAGCACAGAGGAUUUCUUUAGUGUCAUUGCCGAUUUUGGCUAUAACAGUGUCUUUCUAGCCAUAAUAAAAUAAAACAAAAUCUUGACUGCUUGCUCAUUUGA\
) } def
/len { sequence length } bind def

/coor [
[96.06160736 369.27972412]
[91.96021271 354.57797241]
[94.65229034 339.55413818]
[103.60331726 327.19122314]
[117.03606415 319.94387817]
[116.29620361 304.96212769]
[107.94055176 292.63198853]
[114.98774719 278.46697998]
[114.24788666 263.48522949]
[113.50801849 248.50349426]
[112.76815796 233.52175903]
[102.47165680 219.31982422]
[110.99434662 203.00553894]
[110.00816345 188.03799438]
[101.45085144 175.84695435]
[108.26412201 161.56794739]
[107.27794647 146.60040283]
[106.29176331 131.63285828]
[84.32080841 127.82944489]
[70.26723480 110.79634857]
[57.75251770 119.06568909]
[45.23780441 127.33502197]
[32.72309113 135.60435486]
[27.27669716 142.95918274]
[19.93383980 143.90481567]
[7.28481054 151.96719360]
[-5.36421967 160.02958679]
[-8.53623486 175.51228333]
[-21.77294159 184.14738464]
[-37.22123337 180.81185913]
[-45.71591949 167.48458862]
[-42.21724701 152.07243347]
[-28.80091667 143.71913147]
[-13.42660427 147.38055420]
[-0.77757359 139.31816101]
[11.87145615 131.25578308]
[24.45375443 123.08964539]
[36.96846771 114.82031250]
[49.48318100 106.55097198]
[61.99789810 98.28163147]
[47.05067062 99.53878784]
[33.74171448 106.45772552]
[18.75613976 107.11536407]
[4.89224577 101.38889313]
[-5.26111317 90.34764099]
[-9.80796719 76.05336761]
[-7.89926815 61.17530441]
[0.10856723 48.49166870]
[12.72020912 40.37092590]
[27.58064270 38.32948303]
[41.91493225 42.74855042]
[53.04638672 52.80293655]
[58.89686966 66.61771393]
[69.61602020 77.11056519]
[65.23961639 62.76319122]
[60.86322021 48.41581726]
[56.48682022 34.06844330]
[52.11042023 19.72106934]
[36.10534668 18.27539635]
[21.91288567 10.81951904]
[11.69012833 -1.47998166]
[6.97798586 -16.72293854]
[8.46898270 -32.56911469]
[15.90564919 -46.59751129]
[28.12439537 -56.67622757]
[23.51261139 -70.94968414]
[18.90082741 -85.22313690]
[14.28904247 -99.49658966]
[9.67725849 -113.77004242]
[5.06547451 -128.04348755]
[0.45369056 -142.31694031]
[-4.15809345 -156.59039307]
[-20.28745651 -158.66813660]
[-33.84975815 -167.53657532]
[-42.16056061 -181.37977600]
[-43.60133362 -197.40330505]
[-37.93443680 -212.39823914]
[-26.34056091 -223.38378906]
[-31.18648338 -237.57946777]
[-36.03240204 -251.77513123]
[-51.11660385 -254.66693115]
[-62.72350311 -264.72552490]
[-67.73090363 -279.24520874]
[-64.79184723 -294.32028198]
[-54.69691086 -305.89559937]
[-40.16159439 -310.85745239]
[-25.09581947 -307.87115479]
[-13.55220413 -297.73999023]
[-8.63592434 -283.18920898]
[-11.66943359 -268.13284302]
[-21.83673286 -256.62106323]
[-16.99081230 -242.42538452]
[-12.14489174 -228.22970581]
[1.70254219 -227.24858093]
[14.16806030 -221.04132080]
[23.35274124 -210.51661682]
[27.84339714 -197.24353027]
[26.92995071 -183.21775818]
[20.71748543 -170.56144714]
[10.11535931 -161.20217896]
[14.72714329 -146.92872620]
[19.33892632 -132.65527344]
[23.95071030 -118.38182068]
[28.56249428 -104.10836792]
[33.17427826 -89.83491516]
[37.78606415 -75.56146240]
[42.39784622 -61.28801346]
[56.42753601 -60.69568253]
[69.43898010 -55.33607101]
[79.85971069 -45.83483505]
[86.42282104 -33.31946945]
[88.32097626 -19.28553581]
[85.30569458 -5.41796255]
[77.71963501 6.61126280]
[66.45779419 15.34467030]
[70.83419037 29.69204521]
[75.21059418 44.03941727]
[79.58699036 58.38679123]
[83.96339417 72.73416901]
[115.04025269 71.82012177]
[132.19711304 98.11080933]
[146.92958069 95.29039764]
[161.66203308 92.46998596]
[173.76123047 82.27587128]
[187.71632385 87.48209381]
[202.44877625 84.66168213]
[217.18124390 81.84126282]
[231.91369629 79.02085114]
[246.64614868 76.20043945]
[261.37860107 73.38002777]
[273.47781372 63.18591690]
[287.43289185 68.39213562]
[302.16534424 65.57172394]
[308.64083862 51.47038269]
[322.18463135 43.89771271]
[337.58886719 45.76556396]
[348.93032837 56.35570526]
[351.84796143 71.59601593]
[345.21987915 85.62628174]
[331.59475708 93.05157471]
[316.21166992 91.01673126]
[304.98577881 80.30417633]
[290.25332642 83.12459564]
[279.20788574 93.11696625]
[264.19903564 88.11248016]
[249.46656799 90.93289948]
[234.73411560 93.75331116]
[220.00164795 96.57372284]
[205.26919556 99.39413452]
[190.53674316 102.21454620]
[179.49130249 112.20692444]
[164.48245239 107.20243835]
[149.74998474 110.02285004]
[135.01753235 112.84326172]
[149.29866028 117.43123627]
[163.57978821 122.01920319]
[178.57968140 121.96282196]
[192.13337708 128.38909912]
[201.58338928 140.03802490]
[205.07679749 154.62556458]
[201.92866516 169.29147339]
[192.75622559 181.16020203]
[179.35798645 187.90458679]
[164.36093140 188.20225525]
[150.70561218 181.99484253]
[141.06944275 170.49943542]
[137.34185791 155.97158813]
[129.30058289 143.30912781]
[121.25931549 130.64666748]
[122.24549103 145.61422729]
[123.23166656 160.58177185]
[131.85951233 173.84339905]
[124.97571564 187.05181885]
[125.96189117 202.01936340]
[135.13632202 211.10121155]
[135.64071655 223.59930420]
[127.74989319 232.78189087]
[128.48976135 247.76362610]
[129.22962952 262.74536133]
[129.96949768 277.72711182]
[138.37806702 291.12884521]
[131.27793884 304.22225952]
[132.01780701 319.20401001]
[146.09927368 325.09259033]
[156.22483826 336.51342773]
[160.38409424 351.19891357]
[157.75120544 366.23321533]
[148.84893799 378.63128662]
[135.44482422 385.93148804]
[120.20028687 386.68432617]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 183]
[6 182]
[8 180]
[9 179]
[10 178]
[11 177]
[13 174]
[14 173]
[16 171]
[17 170]
[18 169]
[20 40]
[21 39]
[22 38]
[23 37]
[25 36]
[26 35]
[27 34]
[54 119]
[55 118]
[56 117]
[57 116]
[58 115]
[65 107]
[66 106]
[67 105]
[68 104]
[69 103]
[70 102]
[71 101]
[72 100]
[78 93]
[79 92]
[80 91]
[121 154]
[122 153]
[123 152]
[125 150]
[126 149]
[127 148]
[128 147]
[129 146]
[130 145]
[132 143]
[133 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
