%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 06:56:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCUAGGGUCCCAGCACCACUUCCCCCUUCUCCACCCUCUACUUCCCGCCCAGUGGGGCUGGAAUGUGGCCCAGCCGGCUGGAACCUCAAGGGCCCCACCCACCGAGAUUGCAGCGGCUCUGGCUAAUUGGGCCUCAGUGCCCGGGCUAUUUUGAACCCAGGAAUCCUUGGGGGUGGUGGGAGGAGCGGACAAUAAAGGUGUAAACACAG\
) } def
/len { sequence length } bind def

/coor [
[59.14608765 524.10278320]
[55.85451126 538.73718262]
[52.56293106 553.37158203]
[49.27135468 568.00598145]
[45.97977829 582.64038086]
[51.37689590 598.12597656]
[40.46113586 610.36437988]
[24.46169472 606.76574707]
[19.83742714 591.03210449]
[31.34538269 579.34881592]
[34.63695908 564.71441650]
[37.92853546 550.08001709]
[41.22011566 535.44561768]
[44.51169205 520.81121826]
[41.13299561 510.50207520]
[47.86041260 500.35235596]
[49.40633392 485.43225098]
[50.95225525 470.51211548]
[52.49818039 455.59197998]
[54.04410172 440.67187500]
[40.35406494 434.65988159]
[29.17742157 424.69732666]
[21.61710358 411.75042725]
[18.42438507 397.08084106]
[19.92423439 382.12243652]
[25.98228836 368.34149170]
[36.01678085 357.09259033]
[49.05439758 349.48583984]
[63.82466125 346.27697754]
[65.37058258 331.35684204]
[58.98617935 317.89993286]
[68.10454559 304.97067261]
[69.65046692 290.05053711]
[71.19638824 275.13040161]
[72.74230957 260.21029663]
[66.35790253 246.75337219]
[75.47627258 233.82409668]
[77.02219391 218.90397644]
[78.56811523 203.98385620]
[72.18370819 190.52693176]
[81.30207062 177.59767151]
[82.84799194 162.67755127]
[84.39392090 147.75741577]
[85.93984222 132.83729553]
[87.48576355 117.91716766]
[78.81536102 101.09002686]
[86.55244446 84.43367004]
[82.61676025 69.95919800]
[78.68107605 55.48472595]
[74.74539185 41.01025009]
[61.31142807 33.12567520]
[57.52627945 18.39043617]
[65.12580872 5.63180017]
[61.19012070 -8.84267330]
[50.10302353 -20.12925148]
[54.22987747 -34.44072723]
[50.29419327 -48.91519928]
[46.35850906 -63.38967514]
[42.42282486 -77.86415100]
[38.48714066 -92.33862305]
[34.55145645 -106.81309509]
[30.61577225 -121.28756714]
[19.52867508 -132.57414246]
[23.65552902 -146.88562012]
[19.71984482 -161.36009216]
[9.98523808 -166.20820618]
[4.63522959 -175.42326355]
[5.22695017 -185.84242249]
[11.32408142 -194.03996277]
[7.81702375 -208.62422180]
[4.30996513 -223.20848083]
[0.80290675 -237.79273987]
[-2.70415163 -252.37699890]
[-15.69103909 -265.43258667]
[-10.05848694 -282.05377197]
[-13.78026295 -296.58471680]
[-17.50203896 -311.11566162]
[-21.22381592 -325.64660645]
[-24.94559097 -340.17755127]
[-30.10565567 -347.71301270]
[-28.61341858 -354.95025635]
[-32.12047577 -369.53451538]
[-35.62753296 -384.11877441]
[-46.37691879 -395.72744751]
[-41.82975388 -409.91098022]
[-45.33681107 -424.49523926]
[-56.08619690 -436.10391235]
[-51.53903198 -450.28744507]
[-55.04608917 -464.87170410]
[-58.55315018 -479.45596313]
[-73.63728333 -488.31674194]
[-77.56789398 -505.01672363]
[-68.38790894 -519.10894775]
[-72.10968018 -533.63989258]
[-75.83145905 -548.17083740]
[-88.84735107 -557.54986572]
[-89.48585510 -573.58020020]
[-77.25717163 -583.96472168]
[-61.54209900 -580.73736572]
[-54.39589310 -566.37384033]
[-61.30051422 -551.89257812]
[-57.57873917 -537.36163330]
[-53.85696030 -522.83068848]
[-41.96113205 -517.88134766]
[-34.98341751 -506.81927490]
[-35.66047287 -493.56301880]
[-43.96889114 -482.96301270]
[-40.46183395 -468.37875366]
[-36.95477676 -453.79449463]
[-26.45623779 -443.22900391]
[-30.75255585 -428.00228882]
[-27.24549866 -413.41802979]
[-16.74695969 -402.85253906]
[-21.04327774 -387.62585449]
[-17.53622055 -373.04159546]
[-14.02916145 -358.45733643]
[-10.41464615 -343.89932251]
[-6.69286966 -329.36837769]
[-2.97109365 -314.83743286]
[0.75068247 -300.30648804]
[4.47245884 -285.77554321]
[14.71689224 -279.34475708]
[17.93711853 -267.27044678]
[11.88010502 -255.88404846]
[15.38716316 -241.29978943]
[18.89422226 -226.71554565]
[22.40127945 -212.13128662]
[25.90833855 -197.54702759]
[40.21315002 -184.53575134]
[34.19432068 -165.29577637]
[38.13000488 -150.82130432]
[48.93559647 -140.57003784]
[45.09024429 -125.22325134]
[49.02592850 -110.74877930]
[52.96161652 -96.27430725]
[56.89730072 -81.79983521]
[60.83298492 -67.32535553]
[64.76866913 -52.85088348]
[68.70435333 -38.37641144]
[79.50994110 -28.12514496]
[75.66459656 -12.77835751]
[79.60028076 1.69611597]
[92.61408997 8.84988022]
[96.81162262 23.47299004]
[89.21986389 37.07456589]
[93.15554810 51.54904175]
[97.09123230 66.02351379]
[101.02691650 80.49798584]
[98.25217438 65.75685883]
[102.91029358 51.49846268]
[113.85267639 41.23862457]
[128.38114929 37.50720978]
[142.91329956 41.22431564]
[153.86576843 51.47337341]
[158.53793335 65.72718048]
[155.77770996 80.47103119]
[146.26571655 92.06939697]
[132.34742737 97.66235352]
[117.45594788 95.87124634]
[132.15957642 98.83827209]
[146.86320496 101.80529785]
[161.56683350 104.77233124]
[176.27046204 107.73935699]
[190.97409058 110.70639038]
[206.33648682 104.96801758]
[218.81336975 115.61036682]
[215.56958008 131.68550110]
[199.94206238 136.65669250]
[188.00706482 125.41001892]
[173.30343628 122.44298553]
[158.59980774 119.47595978]
[143.89617920 116.50893402]
[129.19255066 113.54190063]
[114.48891449 110.57487488]
[102.40589142 119.46309662]
[100.85996246 134.38322449]
[99.31404114 149.30334473]
[97.76811981 164.22346497]
[96.22219849 179.14358521]
[102.49603271 193.66769409]
[93.48824310 205.52976990]
[91.94231415 220.44990540]
[90.39639282 235.37002563]
[96.67022705 249.89413452]
[87.66243744 261.75622559]
[86.11651611 276.67633057]
[84.57058716 291.59646606]
[83.02466583 306.51660156]
[89.29850006 321.04067993]
[80.29071045 332.90277100]
[78.74478912 347.82290649]
[92.54338837 353.99185181]
[103.74445343 364.11007690]
[111.25947571 377.17733765]
[114.36338806 391.90759277]
[112.76453400 406.85571289]
[106.63199615 420.55911255]
[96.57784271 431.68090820]
[83.59604645 439.14031982]
[68.96422577 442.21780396]
[67.41830444 457.13790894]
[65.87238312 472.05804443]
[64.32646179 486.97814941]
[62.78053665 501.89828491]
[74.05516815 492.00473022]
[88.82589722 489.39215088]
[102.81015015 494.81808472]
[111.95338440 506.70932007]
[113.60462189 521.61816406]
[107.28512573 535.22198486]
[94.82714844 543.57653809]
[79.84270477 544.25952148]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 14]
[2 13]
[3 12]
[4 11]
[5 10]
[16 204]
[17 203]
[18 202]
[19 201]
[20 200]
[29 191]
[30 190]
[32 188]
[33 187]
[34 186]
[35 185]
[37 183]
[38 182]
[39 181]
[41 179]
[42 178]
[43 177]
[44 176]
[45 175]
[47 148]
[48 147]
[49 146]
[50 145]
[53 142]
[54 141]
[56 139]
[57 138]
[58 137]
[59 136]
[60 135]
[61 134]
[62 133]
[64 131]
[65 130]
[69 128]
[70 127]
[71 126]
[72 125]
[73 124]
[75 121]
[76 120]
[77 119]
[78 118]
[79 117]
[81 116]
[82 115]
[83 114]
[85 112]
[86 111]
[88 109]
[89 108]
[90 107]
[93 103]
[94 102]
[95 101]
[159 174]
[160 173]
[161 172]
[162 171]
[163 170]
[164 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
