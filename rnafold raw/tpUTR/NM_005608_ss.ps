%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 15:03:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCCGGUCUUGGUGUCCCAUCCCUGUCACAGCCGCUCACUCCCCGUGCCUCUGCUUCCCAAGAUGCCAUGGCUGGACUGGACCCCCAGCCCACAUGACCAUGCCUCAGACUGUCACCCCCUACCAGUUCCCAAGUCCAUGUGUACCCCGCUCACCACGGGAACGGCCCCCCCCAACCACAGGCAUCAGGCAACCAUUUGAAAUAAAACUCCUUCAGCCUGUG\
) } def
/len { sequence length } bind def

/coor [
[139.01690674 205.09660339]
[141.73271179 182.18199158]
[131.42776489 171.28208923]
[121.12280273 160.38218689]
[110.81784821 149.48228455]
[100.51289368 138.58236694]
[85.76152039 135.86262512]
[72.24698639 142.37089539]
[58.73245621 148.87915039]
[49.65602112 161.83787537]
[34.83205414 160.38897705]
[21.31752205 166.89723206]
[7.80298901 173.40548706]
[-5.71154404 179.91374207]
[-19.22607613 186.42199707]
[-32.74060822 192.93025208]
[-46.25514221 199.43850708]
[-44.49993515 213.65412903]
[-47.21538162 227.69610596]
[-54.12316132 240.19491577]
[-64.53672791 249.93571472]
[-77.42953491 255.97642517]
[-91.53621674 257.73876953]
[-105.47677612 255.06373596]
[-117.89159393 248.22566223]
[-127.57400513 237.90431213]
[-134.03160095 244.35110474]
[-141.41386414 244.21411133]
[-155.10562134 250.34077454]
[-164.54193115 263.03985596]
[-179.31942749 261.17575073]
[-193.01116943 267.30242920]
[-202.44747925 280.00149536]
[-217.22497559 278.13742065]
[-230.91673279 284.26406860]
[-244.60847473 290.39074707]
[-246.81906128 305.65890503]
[-256.95056152 317.29318237]
[-271.77005005 321.58111572]
[-286.54867554 317.15441895]
[-296.57064819 305.42568970]
[-298.63800049 290.13745117]
[-292.09100342 276.16818237]
[-279.01882935 267.97540283]
[-263.59274292 268.17340088]
[-250.73513794 276.69897461]
[-237.04339600 270.57232666]
[-223.35163879 264.44564819]
[-214.89465332 252.18479919]
[-199.13783264 253.61067200]
[-185.44609070 247.48400879]
[-176.98910522 235.22315979]
[-161.23228455 236.64903259]
[-147.54052734 230.52236938]
[-133.89208984 224.29983521]
[-135.43698120 208.62698364]
[-131.51347351 193.34700012]
[-122.57838440 180.31306458]
[-109.69753265 171.11241150]
[-94.41855621 166.87309265]
[-78.58497620 168.12570190]
[-64.11380768 174.73703003]
[-52.76339722 185.92398071]
[-39.24886703 179.41571045]
[-25.73433304 172.90745544]
[-12.21980000 166.39920044]
[1.29473305 159.89094543]
[14.80926609 153.38269043]
[28.32379913 146.87443542]
[36.43358612 134.38121033]
[52.22420120 135.36460876]
[65.73873138 128.85635376]
[79.25326538 122.34809875]
[62.81006241 98.64738464]
[72.52613068 65.71438599]
[61.62622833 55.40942764]
[53.24886703 51.79262161]
[50.64700317 44.88269806]
[39.89268875 34.42589188]
[29.13838005 23.96908760]
[18.38406944 13.51228046]
[2.36169744 10.01718998]
[-2.36419392 -5.68624878]
[9.06798649 -17.44368362]
[24.89779091 -13.16007423]
[28.84087563 2.75796962]
[39.59518433 13.21477604]
[50.34949493 23.67158127]
[61.10380936 34.12838745]
[71.93118286 44.50952530]
[82.83108521 54.81447601]
[97.02372742 49.95969772]
[99.32868195 35.13784790]
[101.63362885 20.31599998]
[103.93858337 5.49415064]
[106.24353027 -9.32769775]
[108.54848480 -24.14954758]
[99.49407959 -36.82453918]
[102.04277039 -51.82316971]
[114.18223572 -60.37704849]
[108.65740967 -75.20226288]
[118.25852966 -86.58943176]
[120.56348419 -101.41128540]
[112.33158875 -108.17209625]
[107.67960358 -117.66519928]
[107.38499451 -128.15200806]
[111.43392181 -137.74259949]
[119.03575897 -144.73626709]
[128.77653503 -147.92309570]
[131.70289612 -162.63487244]
[134.62924194 -177.34664917]
[137.55560303 -192.05844116]
[140.48194885 -206.77021790]
[128.53765869 -216.34060669]
[122.41973114 -230.37020874]
[123.53401184 -245.63510132]
[131.62445068 -258.62753296]
[144.83193970 -266.36193848]
[160.12147522 -267.06100464]
[173.97964478 -260.56408691]
[183.22192383 -248.36415100]
[185.72453308 -233.26463318]
[180.91238403 -218.73529053]
[169.89125061 -208.11486816]
[155.19374084 -203.84385681]
[152.26737976 -189.13208008]
[149.34101868 -174.42030334]
[146.41467285 -159.70852661]
[143.48831177 -144.99674988]
[155.46751404 -129.62402344]
[152.21391296 -110.09851074]
[135.38533020 -99.10633087]
[133.08038330 -84.28448486]
[138.77006531 -70.51943207]
[129.00408936 -58.07209778]
[137.97265625 -46.23569870]
[135.84625244 -31.17140198]
[123.37033081 -21.84459686]
[121.06538391 -7.02274704]
[118.76042938 7.79910135]
[116.45548248 22.62095070]
[114.15052795 37.44279861]
[111.84558105 52.26464844]
[117.74195862 56.89958572]
[131.66629028 51.32166290]
[129.53472900 66.16946411]
[135.43110657 70.80440521]
[149.28930664 65.06415558]
[163.14749146 59.32390213]
[177.00569153 53.58365250]
[181.53512573 38.61641312]
[194.65383911 30.10563469]
[210.16757202 32.06984329]
[220.75122070 43.58160400]
[221.40750122 59.20541000]
[211.82653809 71.56417847]
[196.53218079 74.82247925]
[182.74594116 67.44184113]
[168.88774109 73.18209839]
[155.02955627 78.92234802]
[141.17135620 84.66259766]
[138.96337891 106.20781708]
[127.35716248 121.78952026]
[111.41280365 128.27742004]
[121.71775818 139.17732239]
[132.02270508 150.07722473]
[142.32766724 160.97712708]
[152.63261414 171.87704468]
[159.87518311 169.27867126]
[167.52162170 168.70854187]
[175.01666260 170.19363403]
[181.81987000 173.61224365]
[187.44462585 178.70379639]
[191.49288940 185.08859253]
[193.68338013 192.29621887]
[193.87104797 199.80009460]
[192.05665588 207.05599976]
[188.38563538 213.54151917]
[197.57258606 225.39900208]
[206.75953674 237.25648499]
[215.94650269 249.11395264]
[225.13345337 260.97143555]
[234.32040405 272.82891846]
[243.50737000 284.68640137]
[258.90826416 284.34259033]
[271.41241455 293.03164673]
[276.34408569 307.24932861]
[272.01007080 321.47445679]
[281.19702148 333.33193970]
[290.38397217 345.18942261]
[304.44262695 339.66387939]
[319.48861694 338.32434082]
[334.30227661 341.27932739]
[347.68273926 348.28936768]
[358.54525757 358.78613281]
[366.00930786 371.91870117]
[369.46978760 386.62249756]
[368.64617920 401.70556641]
[363.60522461 415.94512939]
[354.75561523 428.18692017]
[342.81472778 437.43847656]
[328.75054932 442.94989014]
[313.70321655 444.27435303]
[298.89251709 441.30444336]
[285.51913452 434.28100586]
[274.66714478 423.77331543]
[267.21630859 410.63323975]
[263.77059937 395.92599487]
[264.60934448 380.84378052]
[269.66458130 366.60925293]
[278.52648926 354.37637329]
[269.33953857 342.51889038]
[260.15258789 330.66140747]
[245.29580688 331.30496216]
[232.76060486 322.97836304]
[227.47016907 308.70022583]
[231.64988708 293.87335205]
[222.46292114 282.01586914]
[213.27597046 270.15838623]
[204.08901978 258.30090332]
[194.90206909 246.44343567]
[185.71510315 234.58595276]
[176.52815247 222.72846985]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 168]
[3 167]
[4 166]
[5 165]
[6 164]
[7 73]
[8 72]
[9 71]
[11 69]
[12 68]
[13 67]
[14 66]
[15 65]
[16 64]
[17 63]
[26 55]
[28 54]
[29 53]
[31 51]
[32 50]
[34 48]
[35 47]
[36 46]
[75 91]
[76 90]
[78 89]
[79 88]
[80 87]
[81 86]
[92 143]
[93 142]
[94 141]
[95 140]
[96 139]
[97 138]
[100 135]
[102 133]
[103 132]
[109 129]
[110 128]
[111 127]
[112 126]
[113 125]
[147 161]
[148 160]
[149 159]
[150 158]
[178 223]
[179 222]
[180 221]
[181 220]
[182 219]
[183 218]
[184 217]
[188 213]
[189 212]
[190 211]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
