%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 19:04:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCUGCUGGGAUGGGCCCUCCAAGCCCAAGCCUCCUGCUCCGGGGGCAGACCAGACUCUGACUCUCCUCUUGGGGCUGCUGCCAUUAAAACGCUACUACUAAGACUCAGGUC\
) } def
/len { sequence length } bind def

/coor [
[201.56855774 95.24328613]
[186.68579102 97.11500549]
[171.80303955 98.98673248]
[156.92027283 100.85845947]
[142.03750610 102.73017883]
[127.15474701 104.60190582]
[112.27198029 106.47362518]
[91.93421936 143.85502625]
[78.48497772 150.49714661]
[73.32702637 165.19522095]
[59.59296036 171.73968506]
[45.61238098 166.73179626]
[32.16313553 173.37391663]
[18.71389008 180.01603699]
[5.26464319 186.65815735]
[-8.18460274 193.30027771]
[-11.71661854 208.53376770]
[-24.24519539 217.89158630]
[-39.85472107 216.95526123]
[-51.17485809 206.16691589]
[-52.86058044 190.62045288]
[-44.11594391 177.65644836]
[-29.06989670 173.39611816]
[-14.82672405 179.85104370]
[-1.37747812 173.20890808]
[12.07176781 166.56678772]
[25.52101517 159.92466736]
[38.97026062 153.28254700]
[43.49168777 139.13714600]
[57.03651428 132.20950317]
[71.84285736 137.04791260]
[85.29209900 130.40577698]
[86.33386230 115.44133759]
[87.37554932 100.47821808]
[74.97637939 92.03662109]
[62.57720566 83.59502411]
[50.17803192 75.15343475]
[33.68250656 71.23757172]
[32.87892151 54.30267715]
[48.92953491 48.84244919]
[58.61962891 62.75426102]
[71.01879883 71.19585419]
[83.41797638 79.63745117]
[95.81714630 88.07904816]
[110.40025330 91.59086609]
[125.28302002 89.71913910]
[140.16578674 87.84741211]
[155.04855347 85.97569275]
[169.93130493 84.10396576]
[184.81407166 82.23224640]
[199.69683838 80.36051941]
[208.28494263 70.61420441]
[220.81658936 69.42990112]
[230.44158936 76.90173340]
[245.37063599 75.44444275]
[260.29968262 73.98715973]
[268.67367554 69.98983002]
[275.66308594 72.70278931]
[290.62689209 71.66106415]
[305.59066772 70.61933899]
[320.55444336 69.57761383]
[333.78396606 60.90059662]
[347.01785278 67.73532867]
[361.98162842 66.69360352]
[376.94540405 65.65187836]
[390.39465332 59.00975800]
[400.31747437 47.76084900]
[403.03118896 31.58779526]
[418.48690796 26.10569763]
[430.78506470 36.95406723]
[427.27438354 52.97303391]
[411.56637573 57.68365479]
[401.64355469 68.93256378]
[410.08517456 81.33173370]
[424.18844604 76.22321320]
[438.29174805 71.11468506]
[448.43261719 58.22689438]
[464.62338257 60.83272934]
[470.20843506 76.25153351]
[459.44229126 88.62175751]
[443.40026855 85.21797943]
[429.29696655 90.32650757]
[415.19369507 95.43503571]
[424.29965210 107.35482788]
[429.62896729 121.37618256]
[430.73922729 136.33503723]
[427.53823853 150.98951721]
[420.29174805 164.12300110]
[409.60134888 174.64514160]
[396.35458374 181.68241882]
[381.65118408 184.65057373]
[366.71182251 183.30319214]
[352.77676392 177.75215149]
[341.00289917 168.45828247]
[332.36767578 156.19316101]
[327.58801270 141.97505188]
[327.06069946 126.98432159]
[330.82952881 112.46550751]
[338.58160400 99.62396240]
[349.67337036 89.52578735]
[363.18395996 83.00933075]
[377.98712158 80.61566162]
[363.02334595 81.65738678]
[348.05957031 82.69911194]
[335.90036011 91.30162048]
[321.59616089 84.54139709]
[306.63238525 85.58312225]
[291.66860962 86.62484741]
[276.70483398 87.66657257]
[261.75695801 88.91619873]
[246.82792664 90.37348938]
[231.89888000 91.83077240]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 51]
[2 50]
[3 49]
[4 48]
[5 47]
[6 46]
[7 45]
[8 32]
[9 31]
[12 28]
[13 27]
[14 26]
[15 25]
[16 24]
[34 44]
[35 43]
[36 42]
[37 41]
[54 112]
[55 111]
[56 110]
[58 109]
[59 108]
[60 107]
[61 106]
[63 104]
[64 103]
[65 102]
[66 73]
[67 72]
[74 83]
[75 82]
[76 81]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
