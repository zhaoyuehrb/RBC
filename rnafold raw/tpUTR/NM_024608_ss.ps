%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 20:56:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGGAGGCUCUCCUUGCUUGCACUCACCCUUUCUUAUUGUCUUGCCCUGCAUCUGGGGGUCUGAAUUUUUGGGAGCAGGCAAUAUCUGAAGGUGCAAACAGGCCCUACGGCUGUUCCCUGCACAACUCUCAUGGUUUUAAUUGUACCCCAUCUUCCACAUCUUUAAAGCUCAUGUGAAAAAUGCUGCAUUUUUAAUAAACUGAUACAUUUGAACUUC\
) } def
/len { sequence length } bind def

/coor [
[-19.72493172 231.72572327]
[-23.71758080 217.26686096]
[-27.14564896 231.86988831]
[-30.57371902 246.47291565]
[-34.00178909 261.07592773]
[-37.42985535 275.67895508]
[-35.16337585 292.48074341]
[-50.68109894 299.30984497]
[-61.53904724 286.28903198]
[-52.03288269 272.25088501]
[-48.60481262 257.64785767]
[-45.17674255 243.04484558]
[-41.74867630 228.44181824]
[-38.32060623 213.83879089]
[-48.69546890 203.00541687]
[-63.43301010 205.79914856]
[-78.17054749 208.59288025]
[-92.90808868 211.38661194]
[-107.64562988 214.18032837]
[-122.38316345 216.97406006]
[-137.12071228 219.76779175]
[-149.23834229 229.93998718]
[-163.18399048 224.70849609]
[-177.92152405 227.50222778]
[-192.65907288 230.29595947]
[-207.39660645 233.08969116]
[-208.20635986 242.81665039]
[-211.01823425 252.15400696]
[-215.70570374 260.69473267]
[-222.06062317 268.06732178]
[-229.80236816 273.95202637]
[-238.59027100 278.09457397]
[-248.03863525 280.31738281]
[-257.73364258 280.52688599]
[-267.25143433 278.71771240]
[-276.17669678 274.97265625]
[-284.12081909 269.45889282]
[-290.73870850 262.42044067]
[-295.74383545 254.16757202]
[-298.92068481 245.06294250]
[-313.88177490 246.14283752]
[-324.20166016 257.81060791]
[-339.38970947 258.69265747]
[-350.44955444 248.78228760]
[-365.41064453 249.86218262]
[-380.37173462 250.94207764]
[-395.33279419 252.02195740]
[-410.29388428 253.10185242]
[-419.30981445 265.87866211]
[-434.44229126 269.82095337]
[-448.54626465 263.06726074]
[-454.96221924 248.80648804]
[-450.66076660 233.77214050]
[-437.67291260 225.06297302]
[-422.13113403 226.79118347]
[-411.37374878 238.14076233]
[-396.41268921 237.06088257]
[-381.45159912 235.98098755]
[-366.49053955 234.90110779]
[-351.52944946 233.82121277]
[-342.00747681 222.42526245]
[-326.85021973 221.11697388]
[-314.96163940 231.18176270]
[-300.00057983 230.10186768]
[-293.68078613 210.48812866]
[-279.42349243 195.54727173]
[-260.04251099 188.28489685]
[-239.38772583 190.18550110]
[-221.58026123 200.90931702]
[-210.19033813 218.35215759]
[-195.45280457 215.55842590]
[-180.71525574 212.76469421]
[-165.97772217 209.97096252]
[-154.91419983 199.99861145]
[-139.91444397 205.03025818]
[-125.17689514 202.23652649]
[-110.43936157 199.44279480]
[-95.70182037 196.64906311]
[-80.96427917 193.85533142]
[-66.22673798 191.06159973]
[-51.48920059 188.26786804]
[-46.82371902 184.90887451]
[-41.59114456 182.73727417]
[-36.08316040 181.83296204]
[-30.59769249 182.20625305]
[-25.42279243 183.79942322]
[-20.82151794 186.49166870]
[-8.99840069 177.26054382]
[2.82471776 168.02940369]
[14.64783573 158.79826355]
[26.47095490 149.56712341]
[38.29407120 140.33599854]
[50.11719131 131.10485840]
[61.94030762 121.87371826]
[73.76342773 112.64258575]
[85.58654785 103.41144562]
[91.57548523 89.65889740]
[90.28011322 74.71493530]
[88.98474121 59.77097321]
[87.68936920 44.82701111]
[86.39399719 29.88304901]
[82.53694916 21.60879135]
[85.18922424 14.71465778]
[84.10933685 -0.24642015]
[74.46570587 -13.51037121]
[81.37712097 -28.38196564]
[97.73371887 -29.56258202]
[106.70922852 -15.83770370]
[99.07041168 -1.32630825]
[100.15029907 13.63476944]
[101.33795929 28.58767700]
[102.63333130 43.53163910]
[103.92870331 58.47560120]
[105.22407532 73.41956329]
[106.51945496 88.36352539]
[112.80751801 92.45133972]
[120.98333740 79.87533569]
[133.55921936 88.05135345]
[125.38365173 100.62696838]
[131.67172241 104.71478271]
[145.85527039 99.83353424]
[160.03883362 94.95227814]
[163.06045532 79.95837402]
[173.11502075 68.56529236]
[187.42718506 63.76651382]
[202.12139893 66.75587463]
[213.27125549 76.63242340]
[227.45481873 71.75116730]
[237.98600769 59.94419861]
[252.53839111 63.11869431]
[266.72195435 58.23744202]
[280.90551758 53.35619354]
[295.08908081 48.47494125]
[309.23709106 43.49161911]
[323.34884644 38.40648270]
[337.46060181 33.32134628]
[351.57232666 28.23620796]
[365.68408203 23.15107155]
[379.79583740 18.06593513]
[393.90756226 12.98079967]
[406.21243286 -2.99073100]
[425.07769775 1.26435590]
[439.03701782 -4.22534037]
[452.99636841 -9.71503639]
[454.07516479 -24.93998146]
[461.66043091 -38.18485260]
[474.24609375 -46.81986618]
[489.33328247 -49.13053894]
[503.92645264 -44.65808487]
[515.12805176 -34.29050827]
[520.71405029 -20.08630180]
[519.57531738 -4.86572218]
[511.93795776 8.34917450]
[499.31835938 16.93456078]
[484.22219849 19.18580246]
[469.64675903 14.65591335]
[458.48608398 4.24430609]
[444.52673340 9.73400211]
[430.56738281 15.22369862]
[427.34967041 24.91539383]
[419.15817261 31.37397957]
[408.54583740 32.27937698]
[398.99270630 27.09254646]
[384.88095093 32.17768097]
[370.76922607 37.26281738]
[356.65747070 42.34795380]
[342.54571533 47.43309021]
[328.43399048 52.51822662]
[314.32223511 57.60336304]
[309.09790039 62.82542038]
[299.97033691 62.65850067]
[285.78677368 67.53974915]
[271.60321045 72.42100525]
[257.41964722 77.30225372]
[247.90295410 88.76008606]
[232.33607483 85.93473053]
[218.15251160 90.81597900]
[215.44221497 105.46247864]
[205.69981384 116.86166382]
[191.46563721 121.88706970]
[176.52912903 119.09461975]
[164.92008972 109.13584137]
[150.73652649 114.01708984]
[136.55296326 118.89834595]
[94.81768036 115.23456573]
[82.99456024 124.46569824]
[71.17144775 133.69683838]
[59.34832764 142.92797852]
[47.52520752 152.15910339]
[35.70209122 161.39024353]
[23.87897301 170.62138367]
[12.05585384 179.85252380]
[0.23273604 189.08364868]
[-11.59038162 198.31478882]
[3.21102262 195.88201904]
[16.01757622 188.07226562]
[30.28459930 183.44062805]
[45.23638535 182.23892212]
[60.05999756 184.53248596]
[73.94947815 190.19662476]
[86.14963531 198.92337036]
[95.99714661 210.23825073]
[102.95660400 223.52606201]
[106.64961243 238.06434631]
[106.87538147 253.06265259]
[103.62164307 267.70550537]
[97.06529236 281.19677734]
[87.56281281 292.80291748]
[75.63085175 301.89294434]
[61.91815186 307.97256470]
[47.17028809 310.71127319]
[32.18910599 309.96017456]
[17.78914070 305.76004028]
[4.75332069 298.33929443]
[-6.20958710 288.10140991]
[-14.50352478 275.60296631]
[-19.67754745 261.52359009]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 14]
[3 13]
[4 12]
[5 11]
[6 10]
[15 81]
[16 80]
[17 79]
[18 78]
[19 77]
[20 76]
[21 75]
[23 73]
[24 72]
[25 71]
[26 70]
[40 64]
[41 63]
[44 60]
[45 59]
[46 58]
[47 57]
[48 56]
[87 194]
[88 193]
[89 192]
[90 191]
[91 190]
[92 189]
[93 188]
[94 187]
[95 186]
[96 185]
[97 115]
[98 114]
[99 113]
[100 112]
[101 111]
[103 110]
[104 109]
[120 184]
[121 183]
[122 182]
[127 177]
[128 176]
[130 174]
[131 173]
[132 172]
[133 171]
[134 169]
[135 168]
[136 167]
[137 166]
[138 165]
[139 164]
[140 163]
[142 159]
[143 158]
[144 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
