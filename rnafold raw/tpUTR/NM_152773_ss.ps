%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 12:54:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAAUCUUUGAAAAGCUGGUAAAAGACAUGACCAUGAAGAAAUCUGAACUUUUUAAUAUUGUUAAAUAUCUUGACAAAAUAAAGAUGUUAGUAGUUUGACAACUGAA\
) } def
/len { sequence length } bind def

/coor [
[103.04479218 396.07278442]
[87.83858490 399.72042847]
[73.86843872 392.69412231]
[67.73062897 378.31143188]
[72.32324219 363.36346436]
[85.47778320 354.90817261]
[87.20326996 340.00775146]
[79.34273529 324.39071655]
[90.25032043 309.64279175]
[91.54569244 294.69882202]
[92.84106445 279.75485229]
[83.09111023 268.55334473]
[84.19191742 253.37957764]
[96.00720978 243.22888184]
[97.30258179 228.28491211]
[98.59795380 213.34095764]
[99.89332581 198.39698792]
[101.18869781 183.45303345]
[102.48406982 168.50906372]
[95.87477875 155.16116333]
[104.77493286 142.08073425]
[106.07030487 127.13676453]
[89.73152924 124.39942932]
[78.62332153 113.22490692]
[76.24777985 98.46843719]
[82.57064056 85.82432556]
[74.76082611 73.01780701]
[66.95101166 60.21129608]
[59.14119720 47.40478134]
[44.28782272 50.33781052]
[29.35520363 48.01641464]
[16.14264297 40.73984528]
[6.23550177 29.40324020]
[0.81497401 15.38755798]
[0.51728123 0.39136299]
[5.35905600 -13.77501678]
[14.73766327 -25.40803146]
[6.92784977 -38.21454620]
[-0.88196385 -51.02106094]
[-8.69177723 -63.82757568]
[-24.11693382 -64.08853149]
[-36.93962479 -72.66654205]
[-43.06817245 -86.82437897]
[-40.54698563 -102.04434204]
[-30.18055916 -113.46977997]
[-15.27678776 -117.45489502]
[-0.59140742 -112.72804260]
[9.18952942 -100.79753876]
[10.94496155 -85.47037506]
[4.11473703 -71.63739014]
[11.92455101 -58.83087540]
[19.73436356 -46.02436066]
[27.54417801 -33.21784592]
[42.18022537 -36.22972107]
[56.99139023 -34.04831696]
[70.18724823 -26.91782570]
[80.16595459 -15.68186665]
[85.70873260 -1.68373406]
[86.12864685 13.39419365]
[81.35572052 27.73264503]
[71.94770813 39.59496689]
[79.75752258 52.40148163]
[87.56733704 65.20799255]
[95.37715149 78.01451111]
[109.78834534 77.81694794]
[122.42420959 86.78784180]
[127.69394684 102.50957489]
[142.34484863 99.29229736]
[156.99575806 96.07501984]
[171.64666748 92.85774231]
[186.29757690 89.64046478]
[200.94848633 86.42318726]
[215.59939575 83.20590973]
[220.86576843 68.70526123]
[233.14958191 59.37192535]
[248.53115845 58.18414688]
[262.10226440 65.52093506]
[269.53244019 79.04116058]
[268.45068359 94.43054962]
[259.20223999 106.77841949]
[244.73823547 112.14459991]
[229.67407227 108.81677246]
[218.81668091 97.85681915]
[204.16577148 101.07409668]
[189.51486206 104.29137421]
[174.86395264 107.50865173]
[160.21304321 110.72592926]
[145.56213379 113.94320679]
[130.91122437 117.16048431]
[121.01426697 128.43214417]
[119.71889496 143.37609863]
[126.23553467 157.79289246]
[117.42803192 169.80444336]
[116.13265991 184.74839783]
[114.83728790 199.69236755]
[113.54191589 214.63632202]
[112.24654388 229.58029175]
[110.95117188 244.52426147]
[120.84358978 256.55661011]
[119.31701660 271.69348145]
[107.78502655 281.05023193]
[106.48965454 295.99420166]
[105.19428253 310.93814087]
[112.92287445 321.38821411]
[111.44221497 333.89547729]
[102.10369873 341.73324585]
[100.37821198 356.63366699]
[111.25225830 367.87149048]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 107]
[7 106]
[9 103]
[10 102]
[11 101]
[14 98]
[15 97]
[16 96]
[17 95]
[18 94]
[19 93]
[21 91]
[22 90]
[26 64]
[27 63]
[28 62]
[29 61]
[37 53]
[38 52]
[39 51]
[40 50]
[67 89]
[68 88]
[69 87]
[70 86]
[71 85]
[72 84]
[73 83]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
