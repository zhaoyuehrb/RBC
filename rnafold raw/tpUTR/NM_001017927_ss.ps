%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 10:31:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACAUCUCGAGGGCUUCCUUUUUGCAUACCUGUAUUAAGCUCUUUAUUCCACUGCUGAAUUUUUGAAAUUGACAAACAAAUCUUAAAAAAUUAAUCCCAGGCUAUACUCUUUGAGCUAAAAUCUGGUUAUUUCUUUCUCUUCAGGUCUUUCCUUCUCUCUUUCUUUUUCUUUGUUGUUGUAAAAUAAUAUAUUAUGAGAAAAACAUUUGAUCUUUUUAAAGGGAAAUAAAUUGUUAUUAAAAAUUAUUGUGGAA\
) } def
/len { sequence length } bind def

/coor [
[-89.73088837 410.95068359]
[-88.98216248 418.02285767]
[-89.97811890 425.04235840]
[-92.64801025 431.58651733]
[-96.82062531 437.26409912]
[-102.23524475 441.73831177]
[-108.55793762 444.74716187]
[-115.40210724 446.11846924]
[-122.35214233 445.77987671]
[-128.98866272 443.76254272]
[-138.36155701 455.47360229]
[-147.73445129 467.18466187]
[-157.10733032 478.89572144]
[-166.48022461 490.60678101]
[-175.85311890 502.31784058]
[-185.22601318 514.02886963]
[-194.59890747 525.73992920]
[-190.80960083 534.60162354]
[-190.49372864 544.17645264]
[-193.65243530 553.15960693]
[-199.81616211 560.34191895]
[-208.11399841 564.77288818]
[-217.39648438 565.88616943]
[-226.39486694 563.57183838]
[-236.33110046 574.80889893]
[-246.26734924 586.04595947]
[-256.20358276 597.28295898]
[-258.93664551 613.45275879]
[-274.39886475 618.91638184]
[-286.68405151 608.05334473]
[-283.15426636 592.03857422]
[-267.44061279 587.34674072]
[-257.50439453 576.10968018]
[-247.56814575 564.87261963]
[-237.63191223 553.63562012]
[-240.55328369 533.38189697]
[-227.34056091 517.37078857]
[-206.30996704 516.36706543]
[-196.93707275 504.65600586]
[-187.56417847 492.94494629]
[-178.19128418 481.23388672]
[-168.81838989 469.52282715]
[-159.44551086 457.81176758]
[-150.07261658 446.10070801]
[-140.69972229 434.38964844]
[-145.74147034 411.88607788]
[-132.23114014 392.86917114]
[-108.79344177 390.16186523]
[-100.61357117 377.58847046]
[-92.43369293 365.01510620]
[-84.25382233 352.44174194]
[-76.07394409 339.86837769]
[-67.89406586 327.29501343]
[-73.85592651 316.75686646]
[-74.78822327 304.61285400]
[-70.45380402 293.15338135]
[-61.61462021 284.56576538]
[-49.89856339 280.51684570]
[-37.49984360 281.82962036]
[-29.01386642 269.46078491]
[-20.52788925 257.09194946]
[-12.04191208 244.72309875]
[-3.55593467 232.35426331]
[4.93004227 219.98542786]
[13.41601944 207.61657715]
[21.90199661 195.24774170]
[30.38797379 182.87890625]
[30.11960602 179.39012146]
[31.51000023 175.59730530]
[34.68423080 172.27351379]
[39.42090988 170.21884155]
[48.35639954 158.17073059]
[57.29188919 146.12261963]
[66.22737885 134.07450867]
[75.16286469 122.02639008]
[84.09835815 109.97827911]
[70.48055267 116.26759338]
[56.86275101 122.55690765]
[45.88385773 132.77766418]
[32.45309067 139.45706177]
[17.67790985 142.04435730]
[2.77663779 140.32620239]
[-11.02201462 134.44427490]
[-22.58025169 124.88356018]
[-30.94501495 112.43242645]
[-35.42657089 98.11755371]
[-35.65538788 83.11929321]
[-31.61259079 68.67436981]
[-23.63154221 55.97386551]
[-12.37033463 46.06502151]
[1.24246764 39.76489258]
[16.08439255 37.59297180]
[30.93162155 39.72834396]
[44.55989456 45.99493790]
[55.84546280 55.87602615]
[63.85923386 68.56015778]
[75.42440033 78.11248016]
[86.98956299 87.66481018]
[81.41980743 73.73722076]
[75.85005188 59.80962753]
[70.28028870 45.88203812]
[64.71053314 31.95444679]
[49.80947876 28.04743004]
[40.17879868 16.25321960]
[39.34946060 1.22736835]
[47.43025208 -11.25617313]
[41.86049652 -25.18376350]
[36.20538330 -39.07691956]
[30.46513176 -52.93511200]
[24.72488022 -66.79330444]
[13.07741737 -79.11292267]
[21.69124031 -93.71560669]
[38.10778809 -89.48084259]
[38.58307266 -72.53355408]
[44.32332611 -58.67536163]
[50.06357574 -44.81716919]
[55.51114655 -39.85449600]
[55.78808594 -30.75352287]
[61.35784531 -16.82593155]
[75.81824493 -13.35679626]
[85.57852936 -1.90250444]
[86.73612213 13.28016186]
[78.63812256 26.38468742]
[84.20788574 40.31227875]
[89.77764130 54.23987198]
[95.34739685 68.16746521]
[100.91716003 82.09505463]
[114.51609039 88.42505646]
[128.75901794 83.71983337]
[143.00193787 79.01460266]
[157.24485779 74.30937958]
[171.48777771 69.60414886]
[185.73071289 64.89892578]
[199.97363281 60.19369888]
[214.21655273 55.48847580]
[228.45947266 50.78324890]
[242.70239258 46.07802200]
[243.88458252 30.94930267]
[250.75036621 17.46212196]
[262.22576904 7.65758562]
[276.54187012 3.00607395]
[291.50753784 4.18678808]
[304.84463501 10.98876190]
[314.53497314 22.34774017]
[328.77792358 17.64251328]
[343.02084351 12.93728733]
[357.26376343 8.23206139]
[371.50668335 3.52683496]
[370.77612305 -8.32692528]
[372.70065308 -20.03689957]
[377.17971802 -31.01631737]
[383.98483276 -40.71593475]
[392.77124023 -48.65151596]
[403.09542847 -54.42800140]
[414.43753052 -57.75917816]
[426.22738647 -58.48186111]
[437.87332153 -56.56387329]
[448.79174805 -52.10546494]
[458.43652344 -45.33407593]
[466.32611084 -36.59273911]
[472.06781006 -26.32270432]
[486.57244873 -30.14568901]
[501.07708740 -33.96867371]
[515.58172607 -37.79166031]
[530.08636475 -41.61464310]
[544.59106445 -45.43762970]
[546.69873047 -60.46538544]
[554.37860107 -73.50617218]
[566.43365479 -82.58857727]
[581.00805664 -86.35345459]
[595.87310791 -84.25726318]
[608.76800537 -76.65024567]
[617.74359131 -64.71842957]
[632.24822998 -68.54141235]
[646.75292969 -72.36439514]
[661.25756836 -76.18737793]
[675.76220703 -80.01036835]
[690.26684570 -83.83335114]
[704.77148438 -87.65633392]
[716.02740479 -99.58263397]
[731.91918945 -95.53511810]
[736.09881592 -79.67752838]
[724.26654053 -68.32279205]
[708.59448242 -73.15168762]
[694.08984375 -69.32870483]
[679.58520508 -65.50572205]
[665.08050537 -61.68273163]
[650.57586670 -57.85974884]
[636.07122803 -54.03676224]
[621.56658936 -50.21377945]
[619.63824463 -35.40801239]
[612.16802979 -22.43336868]
[600.26733398 -13.28252125]
[585.73059082 -9.37460041]
[570.76501465 -11.33518505]
[557.65502930 -18.89638901]
[548.41400146 -30.93298149]
[533.90936279 -27.10999680]
[519.40472412 -23.28701210]
[504.90008545 -19.46402740]
[490.39544678 -15.64104176]
[475.89077759 -11.81805706]
[474.85562134 6.41805840]
[467.63122559 23.21930885]
[455.07601929 36.54926682]
[438.69552612 44.78634644]
[420.46197510 46.92106247]
[402.57675171 42.67972565]
[387.20465088 32.55941010]
[376.21191406 17.76975822]
[361.96899414 22.47498322]
[347.72604370 27.18021011]
[333.48312378 31.88543701]
[319.24020386 36.59066391]
[318.22338867 51.48681259]
[311.56283569 64.89511871]
[300.24566650 74.75850677]
[285.97595215 79.55047607]
[270.91827393 78.51128387]
[257.36932373 71.76821899]
[247.40762329 60.32094574]
[233.16470337 65.02616882]
[218.92178345 69.73139954]
[204.67884827 74.43662262]
[190.43592834 79.14184570]
[176.19300842 83.84707642]
[161.95008850 88.55229950]
[147.70716858 93.25753021]
[133.46423340 97.96275330]
[119.22132111 102.66797638]
[111.18132019 115.79728699]
[96.14646912 118.91377258]
[87.21098328 130.96188354]
[78.27548981 143.00999451]
[69.34000397 155.05810547]
[60.40451050 167.10621643]
[51.46902466 179.15432739]
[42.75681305 191.36488342]
[34.27083588 203.73371887]
[25.78485870 216.10255432]
[17.29888153 228.47140503]
[8.81290436 240.84024048]
[0.32692760 253.20907593]
[-8.15904999 265.57791138]
[-16.64502716 277.94674683]
[-25.13100433 290.31558228]
[-18.56193733 307.24069214]
[-23.44629478 324.56277466]
[-37.63872528 335.37191772]
[-55.32069778 335.47488403]
[-63.50057220 348.04824829]
[-71.68045044 360.62161255]
[-79.86032104 373.19497681]
[-88.04019928 385.76834106]
[-96.22006989 398.34173584]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 45]
[11 44]
[12 43]
[13 42]
[14 41]
[15 40]
[16 39]
[17 38]
[24 35]
[25 34]
[26 33]
[27 32]
[48 255]
[49 254]
[50 253]
[51 252]
[52 251]
[53 250]
[59 246]
[60 245]
[61 244]
[62 243]
[63 242]
[64 241]
[65 240]
[66 239]
[67 238]
[71 237]
[72 236]
[73 235]
[74 234]
[75 233]
[76 232]
[98 127]
[99 126]
[100 125]
[101 124]
[102 123]
[106 119]
[107 118]
[108 116]
[109 115]
[110 114]
[128 230]
[129 229]
[130 228]
[131 227]
[132 226]
[133 225]
[134 224]
[135 223]
[136 222]
[137 221]
[144 214]
[145 213]
[146 212]
[147 211]
[148 210]
[161 202]
[162 201]
[163 200]
[164 199]
[165 198]
[166 197]
[173 190]
[174 189]
[175 188]
[176 187]
[177 186]
[178 185]
[179 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
