%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 11:19:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUUAAGAGAUAAUAUGAUAUAAUGUUAAGAGAUAAUAUGAUAUAAAAGCAUGAUUAAUGACUAUAAUCUUAGAGGAAUUAAAGUCUGGGUAUUUUAAGUCCUUCAAAUCUUA\
) } def
/len { sequence length } bind def

/coor [
[101.13426208 245.59112549]
[89.28630829 255.47189331]
[73.97442627 257.35595703]
[60.08457184 250.64212036]
[52.04895401 237.47274780]
[52.43170547 222.05014038]
[61.11069489 209.29557800]
[75.31648254 203.27902222]
[77.76412964 188.48005676]
[80.21176910 173.68110657]
[82.65941620 158.88215637]
[85.10705566 144.08320618]
[63.90542603 129.36511230]
[53.80878448 105.61244965]
[38.82137299 104.99796295]
[23.83396721 104.38347626]
[8.84655857 103.76898956]
[-5.25899410 110.93445587]
[-17.65861702 102.68226624]
[-32.64602661 102.06777954]
[-47.63343430 101.45329285]
[-62.62084198 100.83880615]
[-76.72639465 108.00428009]
[-89.12601471 99.75209045]
[-104.11342621 99.13760376]
[-113.63477325 111.39009857]
[-128.54885864 115.67372131]
[-143.12094116 110.34132385]
[-151.74772644 97.44333649]
[-151.11206055 81.93928528]
[-141.45835876 69.79080200]
[-126.49866486 65.66921997]
[-111.98529816 71.15937805]
[-103.49893951 84.15019226]
[-88.51152802 84.76467896]
[-75.47797394 77.55525970]
[-62.00635529 85.85139465]
[-47.01894760 86.46588898]
[-32.03153992 87.08037567]
[-17.04413033 87.69486237]
[-4.01057720 80.48543549]
[9.46104622 88.78157806]
[24.44845390 89.39606476]
[39.43586349 90.01055145]
[54.42327118 90.62503815]
[56.52089310 83.42605591]
[59.74761200 76.65747833]
[64.01963043 70.49507141]
[69.22600555 65.09886169]
[75.23153687 60.60899353]
[81.88027191 57.14205170]
[88.99955750 54.78807449]
[96.40450287 53.60818481]
[103.90281677 53.63302612]
[107.55373383 39.08411789]
[111.20464325 24.53520393]
[114.85556030 9.98629284]
[118.50646973 -4.56261921]
[109.18821716 -17.12065125]
[110.17376709 -32.72714615]
[120.99777222 -44.01319504]
[136.54946899 -45.64987183]
[149.48582458 -36.86438751]
[153.69868469 -21.80497551]
[147.19886780 -7.58223486]
[133.05538940 -0.91170597]
[129.40446472 13.63720608]
[125.75355530 28.18611717]
[122.10264587 42.73503113]
[118.45172882 57.28393936]
[130.06257629 64.48423004]
[139.08172607 74.74633789]
[144.73162842 87.18556976]
[146.52522278 100.72953033]
[161.28935242 103.37907410]
[176.05349731 106.02862549]
[190.81764221 108.67817688]
[205.58178711 111.32772827]
[220.53166199 106.14970398]
[231.69212341 116.01344299]
[246.45625305 118.66299438]
[261.22039795 121.31253815]
[275.98452759 123.96208954]
[290.74868774 126.61164093]
[305.51281738 129.26118469]
[320.27697754 131.91073608]
[333.10577393 122.68050385]
[348.69021606 125.30749512]
[357.78430176 138.23316956]
[354.99267578 153.78895569]
[341.97155762 162.74588013]
[326.44616699 159.78994751]
[317.62741089 146.67488098]
[302.86328125 144.02532959]
[288.09912109 141.37577820]
[273.33499146 138.72622681]
[258.57086182 136.07669067]
[243.80670166 133.42713928]
[229.04257202 130.77758789]
[215.14872742 136.14512634]
[202.93223572 126.09186554]
[188.16809082 123.44231415]
[173.40394592 120.79277039]
[158.63981628 118.14321899]
[143.87567139 115.49366760]
[137.10446167 128.07823181]
[126.83347321 138.01437378]
[114.03148651 144.36491394]
[99.90601349 146.53083801]
[97.45836639 161.32980347]
[95.01072693 176.12875366]
[92.56307983 190.92770386]
[90.11544037 205.72665405]
[101.62752533 215.99678040]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 113]
[9 112]
[10 111]
[11 110]
[12 109]
[14 45]
[15 44]
[16 43]
[17 42]
[19 40]
[20 39]
[21 38]
[22 37]
[24 35]
[25 34]
[54 70]
[55 69]
[56 68]
[57 67]
[58 66]
[74 105]
[75 104]
[76 103]
[77 102]
[78 101]
[80 99]
[81 98]
[82 97]
[83 96]
[84 95]
[85 94]
[86 93]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
