%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 10:55:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAAGGUGGGUGGGUAUUCUUCCCAAUAAAGACUUAGAGCCCCUCUCUUCCAGAACUGUGGAUUCCUGGGAGCUCCUCUGGCAAUAAAAGUCAGUGAAUGGUGGAAGUCAGAGACCAACCCUGGGGAUUGGGUGCCAUCUCUCUAGGGGUAACACAAAGGGCAAGAGGUUGCUAUGGUAUUUGGAAACAAUGAAAAUGGACUGUUAGAUGCCAA\
) } def
/len { sequence length } bind def

/coor [
[90.05683136 137.89349365]
[84.51873779 151.83369446]
[78.98064423 165.77391052]
[73.44255066 179.71412659]
[67.90445709 193.65434265]
[62.36636734 207.59455872]
[56.82827759 221.53475952]
[66.84533691 233.10702515]
[70.32581329 248.01155090]
[66.46992493 262.82339478]
[56.16371918 274.13888550]
[41.77548981 279.35784912]
[26.61154747 277.28097534]
[14.15645409 268.38549805]
[7.27229881 254.71557617]
[7.54100990 239.41242981]
[14.90083981 225.99261475]
[27.66055489 217.53990173]
[42.88806152 215.99667358]
[48.42615509 202.05645752]
[53.96424866 188.11624146]
[59.50233841 174.17604065]
[65.04042816 160.23582458]
[70.57852173 146.29560852]
[76.11661530 132.35539246]
[72.17929077 125.97202301]
[60.63586426 135.55061340]
[49.09243774 145.12919617]
[43.23678970 158.93902588]
[29.66853523 165.33453369]
[15.28978539 161.06234741]
[7.41493988 148.29571533]
[10.04989719 133.52896118]
[21.85426712 124.27386475]
[36.82381058 125.23871613]
[50.56422806 119.22199249]
[64.30464172 113.20526886]
[60.36731720 106.82189941]
[45.42439651 105.51455688]
[30.48147774 104.20722198]
[15.53855705 102.89988708]
[0.58652490 101.70125580]
[-14.37382889 100.61138153]
[-29.33418274 99.52151489]
[-36.98925018 112.68058777]
[-49.54741287 121.17644501]
[-64.48782349 123.36833954]
[-78.83935547 118.87451935]
[-89.77147675 108.63742065]
[-95.15246582 94.72661591]
[-110.11282349 93.63674927]
[-125.07317352 92.54687500]
[-140.03352356 91.45700836]
[-151.82589722 101.97914886]
[-167.59968567 100.99755859]
[-177.99655151 89.09458923]
[-176.84825134 73.33207703]
[-164.83602905 63.06162643]
[-149.08653259 64.37651825]
[-138.94366455 76.49665833]
[-123.98330688 77.58652496]
[-109.02294922 78.67639160]
[-94.06259918 79.76626587]
[-86.72230530 66.78221130]
[-74.42192841 58.23761749]
[-59.57062149 55.87123489]
[-45.10563660 60.20532990]
[-33.91138840 70.43155670]
[-28.24431229 84.56115723]
[-13.28395939 85.65103149]
[1.67639446 86.74089813]
[8.57330990 84.09279633]
[16.84589386 87.95697021]
[31.78881454 89.26430511]
[46.73173523 90.57164001]
[61.67465591 91.87897491]
[73.71560669 74.71598816]
[91.72460938 67.26361847]
[109.46335602 70.41562653]
[121.61439514 81.64570618]
[135.20901489 75.30643463]
[148.80363464 68.96715546]
[162.39825439 62.62788391]
[175.99285889 56.28861237]
[186.20420837 40.96301270]
[203.61448669 43.17781448]
[217.11546326 36.64149094]
[230.61643982 30.10516930]
[239.66593933 17.12760162]
[254.49287415 18.54570770]
[267.99386597 12.00938606]
[281.49484253 5.47306347]
[294.99581909 -1.06325853]
[304.04531860 -14.04082680]
[318.87225342 -12.62271976]
[332.37322998 -19.15904236]
[331.55685425 -34.31190109]
[336.59048462 -48.58444595]
[346.67776489 -59.81211472]
[360.25836182 -66.30480957]
[375.24935913 -67.10123444]
[389.36474609 -62.11112213]
[400.46392822 -52.12425232]
[413.96490479 -58.66057587]
[415.38107300 -72.36920929]
[423.32217407 -83.50022125]
[435.62750244 -89.20909119]
[449.03878784 -88.10204315]
[460.06268311 -80.57472229]
[473.65728760 -86.91400146]
[487.25189209 -93.25327301]
[500.84652710 -99.59254456]
[514.44116211 -105.93182373]
[523.67840576 -118.77640533]
[538.48315430 -117.14280701]
[552.07775879 -123.48207855]
[565.67242432 -129.82135010]
[579.26702881 -136.16062927]
[582.36682129 -158.27697754]
[608.23889160 -170.01937866]
[618.69006348 -180.77911377]
[629.14129639 -191.53886414]
[639.59252930 -202.29859924]
[650.04376221 -213.05834961]
[660.49493408 -223.81808472]
[670.94616699 -234.57781982]
[681.39739990 -245.33757019]
[691.84863281 -256.09732056]
[695.94177246 -274.05258179]
[713.00146484 -278.17456055]
[723.29504395 -289.08517456]
[733.58868408 -299.99575806]
[740.06018066 -315.66598511]
[756.90954590 -313.78530884]
[759.76672363 -297.07385254]
[744.49926758 -289.70214844]
[734.20568848 -278.79153442]
[723.91204834 -267.88092041]
[723.95098877 -255.78680420]
[715.46777344 -246.61299133]
[702.60833740 -245.64608765]
[692.15716553 -234.88635254]
[681.70593262 -224.12660217]
[671.25469971 -213.36686707]
[660.80346680 -202.60713196]
[650.35223389 -191.84738159]
[639.90106201 -181.08764648]
[629.44982910 -170.32789612]
[618.99859619 -159.56816101]
[621.35766602 -152.44883728]
[635.59631348 -157.16700745]
[649.83496094 -161.88517761]
[664.07360840 -166.60334778]
[676.15747070 -175.49043274]
[688.34362793 -166.74409485]
[683.79089355 -152.45169067]
[668.79180908 -152.36471558]
[654.55316162 -147.64654541]
[640.31451416 -142.92837524]
[626.07586670 -138.21020508]
[628.43493652 -131.09088135]
[643.24340820 -128.70127869]
[658.05181885 -126.31167603]
[672.86029053 -123.92207336]
[687.66870117 -121.53247070]
[702.79486084 -127.86737061]
[715.67846680 -117.72122192]
[713.06597900 -101.53150177]
[697.64489746 -95.95281219]
[685.27911377 -106.72402954]
[670.47064209 -109.11363220]
[655.66223145 -111.50324249]
[640.85375977 -113.89284515]
[626.04534912 -116.28244781]
[601.42456055 -110.30572510]
[585.60626221 -122.56600952]
[572.01165771 -116.22673798]
[558.41705322 -109.88745880]
[544.82244873 -103.54818726]
[536.55755615 -91.15703583]
[520.78039551 -92.33720398]
[507.18579102 -85.99793243]
[493.59118652 -79.65865326]
[479.99655151 -73.31938171]
[466.40194702 -66.98011017]
[463.78634644 -50.77231598]
[451.90545654 -39.20234299]
[435.30453491 -36.97304916]
[420.50122070 -45.15959549]
[407.00024414 -38.62327194]
[407.95001221 -23.72269249]
[403.10946655 -9.55531788]
[393.18676758 1.70989966]
[379.67065430 8.33573246]
[364.60699463 9.28454590]
[350.28933716 4.38067770]
[338.90957642 -5.65806103]
[325.40856934 0.87826121]
[317.32476807 13.38830757]
[301.53213501 12.43772221]
[288.03115845 18.97404480]
[274.53018188 25.51036644]
[261.02920532 32.04668808]
[252.94538879 44.55673599]
[237.15277100 43.60615158]
[223.65177917 50.14247131]
[210.15080261 56.67879486]
[205.88591003 67.99604034]
[194.69467163 73.55299377]
[182.33213806 69.88322449]
[168.73751831 76.22250366]
[155.14289856 82.56177521]
[141.54829407 88.90104675]
[127.95367432 95.24032593]
[128.10035706 115.23114777]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 25]
[2 24]
[3 23]
[4 22]
[5 21]
[6 20]
[7 19]
[38 76]
[39 75]
[40 74]
[41 73]
[42 71]
[43 70]
[44 69]
[50 63]
[51 62]
[52 61]
[53 60]
[80 214]
[81 213]
[82 212]
[83 211]
[84 210]
[86 207]
[87 206]
[88 205]
[90 203]
[91 202]
[92 201]
[93 200]
[95 198]
[96 197]
[103 190]
[104 189]
[109 185]
[110 184]
[111 183]
[112 182]
[113 181]
[115 179]
[116 178]
[117 177]
[118 176]
[120 149]
[121 148]
[122 147]
[123 146]
[124 145]
[125 144]
[126 143]
[127 142]
[128 141]
[130 138]
[131 137]
[132 136]
[161 174]
[162 173]
[163 172]
[164 171]
[165 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
