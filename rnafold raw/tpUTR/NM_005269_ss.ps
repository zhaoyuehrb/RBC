%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 22:29:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGUAGGGAAUCUCAUCCAUCACAGAUCGCAUUUCCUAAGGGGUUUCUAUCCUUCCAGAAAAAUUGGGGGAGCUGCAGUCCCAUGCACAAGAUGCCCCAGGGAUGGGAGGUAUGGGCUGGGGGCUAUGUAUAGUCUGUAUACGUUUUGAGGAGAAAUUUGAUAAUGACACUGUUUCCUGAUAAUAAAGGAACUGCAUCAGAA\
) } def
/len { sequence length } bind def

/coor [
[98.96104431 253.79479980]
[109.79220581 242.28559875]
[109.09944916 227.30160522]
[108.29134369 212.32339478]
[107.36793518 197.35185242]
[106.44451904 182.38029480]
[105.52110291 167.40875244]
[90.75572205 164.76611328]
[84.69690704 178.48802185]
[78.63809204 192.20993042]
[84.58025360 206.85459900]
[78.34977722 221.37895203]
[63.64310455 227.16593933]
[49.18543625 220.78225708]
[43.55425644 206.01522827]
[50.09043884 191.62585449]
[64.91618347 186.15112305]
[70.97499847 172.42921448]
[77.03381348 158.70730591]
[56.71869278 137.54216003]
[49.82081985 111.80824280]
[55.64493179 88.56671906]
[70.30017090 73.11642456]
[61.26065063 61.14616394]
[52.22113037 49.17590332]
[43.18161011 37.20564651]
[34.14209366 25.23538780]
[25.10257149 13.26512909]
[6.20429897 6.26005650]
[4.65011358 -13.01030922]
[-4.75374365 -24.69651794]
[-14.15760040 -36.38272476]
[-23.56145859 -48.06893539]
[-39.02881241 -49.91248322]
[-48.39918900 -61.89791870]
[-46.54632568 -76.63231659]
[-55.95018387 -88.31852722]
[-65.35404205 -100.00473785]
[-77.20313263 -98.95885468]
[-87.97452545 -103.71636200]
[-95.03678131 -112.98846436]
[-96.72600555 -124.39955902]
[-92.73667145 -135.09536743]
[-101.77619171 -147.06561279]
[-110.81571198 -159.03587341]
[-116.75335693 -161.96420288]
[-119.85170746 -166.73674011]
[-119.94252014 -171.51683044]
[-128.60913086 -183.75978088]
[-137.27574158 -196.00273132]
[-145.94233704 -208.24569702]
[-154.70295715 -220.42155457]
[-163.55708313 -232.52958679]
[-172.41119385 -244.63763428]
[-181.26530457 -256.74566650]
[-190.11941528 -268.85372925]
[-198.97352600 -280.96176147]
[-207.82765198 -293.06979370]
[-219.11968994 -291.03967285]
[-230.30284119 -293.36215210]
[-239.76728821 -299.66381836]
[-246.16531372 -309.00125122]
[-248.60305786 -320.00216675]
[-246.76535034 -331.06704712]
[-240.95581055 -340.60165405]
[-249.24128723 -353.10571289]
[-257.52676392 -365.60974121]
[-265.81222534 -378.11376953]
[-274.09771729 -390.61779785]
[-282.38317871 -403.12185669]
[-296.45574951 -410.35189819]
[-297.03601074 -425.23519897]
[-316.90640259 -428.17462158]
[-328.04455566 -444.52239990]
[-323.64660645 -463.49581909]
[-332.50070190 -475.60385132]
[-341.35482788 -487.71188354]
[-350.20892334 -499.81994629]
[-365.86267090 -501.99621582]
[-375.32589722 -514.65411377]
[-372.98422241 -530.28399658]
[-360.22695923 -539.61285400]
[-344.62274170 -537.10607910]
[-335.42929077 -524.25091553]
[-338.10089111 -508.67404175]
[-329.24676514 -496.56600952]
[-320.39266968 -484.45797729]
[-311.53854370 -472.34991455]
[-301.33618164 -473.56631470]
[-291.47332764 -470.41064453]
[-283.75244141 -463.38912964]
[-279.61358643 -453.72079468]
[-279.86630249 -443.12603760]
[-284.53198242 -433.52066040]
[-271.05203247 -427.18499756]
[-269.87915039 -411.40731812]
[-261.59365845 -398.90328979]
[-253.30819702 -386.39923096]
[-245.02272034 -373.89520264]
[-236.73724365 -361.39117432]
[-228.45176697 -348.88714600]
[-209.77006531 -349.16796875]
[-194.56858826 -338.04907227]
[-189.09028625 -319.87277222]
[-195.71960449 -301.92391968]
[-186.86549377 -289.81588745]
[-178.01138306 -277.70782471]
[-169.15725708 -265.59979248]
[-160.30314636 -253.49174500]
[-151.44903564 -241.38371277]
[-142.59492493 -229.27566528]
[-136.10549927 -225.73005676]
[-133.69938660 -216.91229248]
[-125.03278351 -204.66934204]
[-116.36617279 -192.42639160]
[-107.69956970 -180.18344116]
[-98.84545135 -168.07539368]
[-89.80593872 -156.10513306]
[-80.76641846 -144.13488770]
[-62.52015686 -142.70576477]
[-50.90939713 -128.14735413]
[-53.66783142 -109.40859222]
[-44.26397705 -97.72238159]
[-34.86011887 -86.03617859]
[-20.07045746 -84.69396210]
[-10.36713505 -72.97644806]
[-11.87524891 -57.47279358]
[-2.47139215 -45.78658295]
[6.93246508 -34.10037613]
[16.33632278 -22.41416550]
[26.55978203 -22.23194122]
[35.17446136 -16.32605743]
[39.19646835 -6.44921160]
[37.07283020 4.22560930]
[46.11235046 16.19586754]
[55.15187073 28.16612625]
[64.19139099 40.13638306]
[73.23091125 52.10664368]
[82.27043152 64.07690430]
[104.28491211 54.39592743]
[131.02610779 58.83246994]
[153.35903931 79.13142395]
[162.02851868 111.24526215]
[177.00006104 112.16867828]
[191.97161865 113.09208679]
[206.94316101 114.01550293]
[221.92138672 114.82360840]
[236.90538025 115.51636505]
[251.88937378 116.20911407]
[266.87338257 116.90186310]
[281.85736084 117.59461975]
[293.36654663 106.76345825]
[309.16082764 107.32640076]
[319.86968994 118.94946289]
[319.13980103 134.73687744]
[307.40414429 145.32228088]
[291.62533569 144.42550659]
[281.16461182 132.57861328]
[266.18060303 131.88586426]
[251.19662476 131.19311523]
[236.21263123 130.50035095]
[221.22863770 129.80760193]
[214.39794922 132.64056396]
[206.01976013 128.98706055]
[191.04820251 128.06364441]
[176.07666016 127.14022827]
[161.10510254 126.21681213]
[157.50613403 132.79689026]
[170.66627502 139.99484253]
[185.40658569 142.77397156]
[187.31828308 157.65164185]
[173.75944519 164.06707764]
[163.46833801 153.15498352]
[150.30818176 145.95703125]
[146.70921326 152.53710938]
[155.56332397 164.64515686]
[164.41743469 176.75318909]
[173.27154541 188.86123657]
[182.12565613 200.96928406]
[197.64166260 200.78681946]
[210.28211975 209.78674316]
[215.18652344 224.50837708]
[210.46900940 239.29095459]
[197.94358826 248.45028687]
[182.42652893 248.46441650]
[169.88444519 239.32789612]
[165.14002991 224.55392456]
[170.01762390 209.82339478]
[161.16349792 197.71534729]
[152.30938721 185.60731506]
[143.45527649 173.49926758]
[134.60116577 161.39122009]
[120.49265289 166.48533630]
[121.41606903 181.45687866]
[122.33948517 196.42843628]
[123.26289368 211.39997864]
[126.91640472 219.77816772]
[124.08344269 226.60885620]
[124.77619934 241.59284973]
[136.62309265 252.05357361]
[137.51986694 267.83239746]
[126.93447113 279.56802368]
[111.14704895 280.29794312]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 199]
[3 198]
[4 196]
[5 195]
[6 194]
[7 193]
[8 19]
[9 18]
[10 17]
[23 139]
[24 138]
[25 137]
[26 136]
[27 135]
[28 134]
[30 130]
[31 129]
[32 128]
[33 127]
[36 124]
[37 123]
[38 122]
[43 119]
[44 118]
[45 117]
[48 116]
[49 115]
[50 114]
[51 113]
[52 111]
[53 110]
[54 109]
[55 108]
[56 107]
[57 106]
[58 105]
[65 101]
[66 100]
[67 99]
[68 98]
[69 97]
[70 96]
[72 94]
[75 88]
[76 87]
[77 86]
[78 85]
[143 167]
[144 166]
[145 165]
[146 164]
[147 162]
[148 161]
[149 160]
[150 159]
[151 158]
[175 192]
[176 191]
[177 190]
[178 189]
[179 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
