%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 13:39:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGAGCUCAGGAGCCUGGAUACCCAAAAAGCCACCUGCCACCUUCAACAGGUCACGGACCUUCCCUGGACCUCAGUUUCCUCACCUGUAGAGAGAGAAAUAUUAUAUCACACUGUUGCAAGGACUAAGAUAAGCGAUGAUGAUGAUGAACACACUUUGUGAAUAAUAAAAUUAUCUGAAUGUUU\
) } def
/len { sequence length } bind def

/coor [
[77.02932739 111.60761261]
[67.40921021 123.11644745]
[57.78909683 134.62528992]
[57.19298935 138.97871399]
[55.41065216 142.54766846]
[52.83859634 145.05358887]
[49.92325974 146.37698364]
[47.10422897 146.55978394]
[36.72514725 157.38912964]
[26.34606552 168.21847534]
[15.96698189 179.04782104]
[12.00769901 197.02047729]
[-5.00573874 201.28294373]
[-15.19943523 212.28695679]
[-18.63120079 233.42469788]
[-38.55511475 238.76342773]
[-48.17522812 250.27226257]
[-57.79534531 261.78109741]
[-60.07797623 278.02059937]
[-75.38240051 283.91183472]
[-87.96474457 273.39437866]
[-84.88137054 257.28771973]
[-69.30418396 252.16099548]
[-59.68406677 240.65214539]
[-50.06395340 229.14331055]
[-52.29172516 220.50749207]
[-50.25199509 211.68386841]
[-44.28127670 204.69226074]
[-35.63029099 201.19293213]
[-26.20345879 202.09326172]
[-16.00976372 191.08924866]
[-16.15451050 178.97923279]
[-7.73207521 169.72654724]
[5.13764000 168.66873169]
[15.51672363 157.83938599]
[25.89580536 147.01005554]
[36.27489090 136.18070984]
[46.28025818 125.00517273]
[55.90037537 113.49633789]
[65.52049255 101.98749542]
[67.92988586 87.18226624]
[62.45541382 73.21694183]
[56.98094559 59.25162506]
[51.50647354 45.28630447]
[45.91362762 31.36796761]
[40.20280457 17.49762154]
[34.49198532 3.62727475]
[28.78116226 -10.24307156]
[18.68126488 -21.33325195]
[5.40398121 -28.31277275]
[-7.87330341 -35.29229355]
[-21.15058899 -42.27181625]
[-34.42787170 -49.25133514]
[-43.50292206 -50.47990417]
[-47.86986923 -56.46377182]
[-61.02672195 -63.66774368]
[-74.18357849 -70.87171936]
[-88.68655396 -65.02383423]
[-103.53932953 -69.91556549]
[-111.72888184 -83.23717499]
[-109.38835144 -98.69860840]
[-97.62287140 -108.99945068]
[-81.98773193 -109.27595520]
[-69.86537170 -99.39757538]
[-66.97959900 -84.02857208]
[-53.82275009 -76.82459259]
[-40.66589737 -69.62062073]
[-27.44835091 -62.52862167]
[-14.17106724 -55.54909897]
[-0.89378256 -48.56957626]
[12.38350201 -41.59005737]
[25.66078758 -34.61053467]
[31.72841454 -39.01892471]
[43.86367035 -47.83570480]
[49.93129730 -52.24409485]
[47.39628601 -67.02833557]
[44.86127090 -81.81256866]
[42.32625961 -96.59680939]
[39.79124832 -111.38105011]
[37.13079834 -126.14322662]
[34.34510422 -140.88229370]
[31.55940819 -155.62135315]
[17.21964264 -161.31121826]
[8.25102425 -173.86381531]
[7.51540756 -189.27362061]
[15.24752426 -202.62345886]
[28.98008537 -209.65341187]
[44.33107758 -208.12026978]
[56.40206146 -198.51324463]
[61.34122086 -183.89790344]
[57.57249451 -168.93794250]
[46.29846954 -158.40704346]
[49.08416367 -143.66798401]
[51.86985779 -128.92892456]
[56.21139145 -122.92659760]
[54.57548523 -113.91606140]
[57.11049652 -99.13182068]
[59.64551163 -84.34757996]
[62.18052292 -69.56334686]
[64.71553802 -54.77910614]
[69.57879639 -68.96884918]
[84.17593384 -72.42187500]
[99.03097534 -70.34152222]
[112.11801910 -63.01148987]
[121.65229034 -51.43143845]
[126.33354187 -37.18061829]
[125.52334595 -22.20251274]
[119.33220673 -8.53979874]
[108.60444641 1.94424450]
[94.80308533 7.81983185]
[79.81032562 8.28566742]
[65.67082214 3.27822256]
[54.31302643 -6.51943350]
[42.65150833 -15.95389366]
[48.36233139 -2.08354712]
[54.07315445 11.78679943]
[59.78397369 25.65714645]
[65.25038147 30.65667725]
[65.47179413 39.81183243]
[70.94626617 53.77715302]
[76.42073822 67.74247742]
[81.89520264 81.70779419]
[93.39782715 76.14567566]
[105.65430450 76.91712952]
[115.53513336 83.33969879]
[120.75425720 93.34968567]
[120.39254761 104.13682556]
[133.03010559 112.21719360]
[145.66764832 120.29756165]
[158.30519104 128.37792969]
[170.94274902 136.45829773]
[186.19123840 133.27693176]
[198.89239502 141.65159607]
[201.83139038 156.20831299]
[214.53709412 164.18109131]
[227.31002808 172.04570007]
[240.08296204 179.91030884]
[252.85589600 187.77491760]
[265.62884521 195.63952637]
[278.40176392 203.50413513]
[289.64328003 193.42898560]
[303.25454712 186.93624878]
[318.12881470 184.54443359]
[333.05929565 186.43890381]
[346.83706665 192.45765686]
[358.34893799 202.10510254]
[366.66744995 214.59280396]
[371.12557983 228.90402222]
[371.37017822 243.87638855]
[367.38998413 258.29635620]
[380.16290283 266.16094971]
[392.93585205 274.02557373]
[405.70880127 281.89016724]
[422.36642456 285.04611206]
[423.94509888 301.92639160]
[408.16152954 308.11630249]
[397.84417725 294.66311646]
[385.07125854 286.79849243]
[372.29830933 278.93389893]
[359.52536011 271.06927490]
[348.44131470 281.11523438]
[334.96197510 287.63742065]
[320.17605591 290.09960938]
[305.28042603 288.29379272]
[291.48330688 282.35787964]
[279.90618896 272.76501465]
[271.49282837 260.28610229]
[266.93209839 245.92767334]
[266.60177612 230.85076904]
[270.53717041 216.27706909]
[257.76422119 208.41246033]
[244.99128723 200.54785156]
[232.21835327 192.68324280]
[219.44541931 184.81863403]
[206.67248535 176.95402527]
[199.31141663 176.12239075]
[193.75102234 168.84585571]
[179.30464172 172.28648376]
[166.37326050 164.27186584]
[162.86238098 149.09585571]
[150.22482300 141.01548767]
[137.58728027 132.93511963]
[124.94972992 124.85474396]
[112.31217957 116.77437592]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 40]
[2 39]
[3 38]
[8 37]
[9 36]
[10 35]
[11 34]
[13 31]
[14 30]
[16 25]
[17 24]
[18 23]
[41 122]
[42 121]
[43 120]
[44 119]
[45 117]
[46 116]
[47 115]
[48 114]
[49 72]
[50 71]
[51 70]
[52 69]
[53 68]
[55 67]
[56 66]
[57 65]
[75 100]
[76 99]
[77 98]
[78 97]
[79 96]
[80 94]
[81 93]
[82 92]
[127 184]
[128 183]
[129 182]
[130 181]
[131 180]
[134 177]
[135 175]
[136 174]
[137 173]
[138 172]
[139 171]
[140 170]
[150 160]
[151 159]
[152 158]
[153 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
