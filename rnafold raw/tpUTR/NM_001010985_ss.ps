%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 20:35:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGACACCUAAGAAGGCAUGGUACUCUGACAAAGCCAGUGCCCAGCAAUGAAGUGAAUUCAUGGCACAGGAGCCAGGGACCGUGACAACGGUGCCCUCAGCAGCCUGGUGUCCUCUGGCCAUUUGCUGUCAUGGCUACAAAGUGCUCCCUCUUUUCAGUGCCUCCAGGAAGCCCGCCAGUGGUGAGACUGUGUCCUCAAGGAGCUUCGGCACCAUGUCUGGUUUGGAUUCAUCUAAAUAAAUAUGUGGUUCCCCAG\
UG\
) } def
/len { sequence length } bind def

/coor [
[285.33184814 76.57983398]
[270.61563110 79.48379517]
[255.89941406 82.38774872]
[241.18319702 85.29170990]
[226.46697998 88.19567108]
[211.75076294 91.09962463]
[197.03454590 94.00358582]
[207.96810913 104.27282715]
[206.88107300 119.23338318]
[194.57788086 127.81424713]
[180.16304016 123.66545868]
[174.30374146 109.85717773]
[181.33596802 96.60771179]
[166.47032166 98.61086273]
[151.60467529 100.61402130]
[136.73902893 102.61717224]
[135.31369019 130.29322815]
[112.48116302 154.81842041]
[73.48120880 160.34620667]
[63.47142410 171.51777649]
[53.46163940 182.68936157]
[43.45185852 193.86094666]
[33.44207764 205.03253174]
[23.43229485 216.20411682]
[13.55928421 227.49674988]
[3.82451010 238.90876770]
[3.65449643 254.95092773]
[-9.08189297 264.70611572]
[-24.61439133 260.69100952]
[-31.02779388 245.98565674]
[-23.40228653 231.87072754]
[-7.58750820 229.17399597]
[2.14726615 217.76197815]
[2.67372942 213.04222107]
[6.15164566 208.59475708]
[12.26071167 206.19433594]
[22.27049446 195.02275085]
[32.28027725 183.85116577]
[42.29005814 172.67958069]
[52.29983902 161.50799561]
[62.30962372 150.33642578]
[58.40256882 143.93446350]
[45.59867477 151.74858093]
[30.60312271 152.11387634]
[37.78456879 138.94467163]
[50.58846664 131.13056946]
[46.68141174 124.72862244]
[32.16915894 128.52262878]
[17.65690231 132.31661987]
[3.14464641 136.11062622]
[-11.36760902 139.90463257]
[-20.68178558 152.96701050]
[-36.70875549 153.68522644]
[-47.15399551 141.50834656]
[-44.00481415 125.77741241]
[-29.67699242 118.55986023]
[-15.16160965 125.39237213]
[-0.64935440 121.59837341]
[13.86290073 117.80437469]
[28.37515640 114.01036835]
[42.88741302 110.21636963]
[41.51943588 95.27887726]
[26.55945015 94.18395233]
[11.59946632 93.08901978]
[-0.19646785 103.60717010]
[-15.96991158 102.62023926]
[-26.36276054 90.71376038]
[-25.20912170 74.95163727]
[-13.19342804 64.68524933]
[2.55562186 66.00547028]
[12.69439602 78.12903595]
[27.65438080 79.22396851]
[42.61436462 80.31889343]
[46.84832001 65.92884064]
[33.67915726 58.74739456]
[20.50999451 51.56594849]
[7.34083319 44.38450241]
[-5.87180758 37.28336334]
[-19.12743759 30.26280403]
[-32.38306808 23.24224281]
[-45.63869476 16.22168159]
[-58.89432526 9.20111942]
[-75.25384521 10.34044743]
[-84.19468689 -3.40704226]
[-76.51927185 -17.89911079]
[-60.12341309 -18.22756004]
[-51.87376404 -4.05451012]
[-38.61813354 2.96605110]
[-25.36250496 9.98661232]
[-12.10687542 17.00717354]
[1.14875400 24.02773476]
[8.50868225 24.38001251]
[14.52227974 31.21533966]
[27.69144249 38.39678574]
[40.86060333 45.57823181]
[54.02976608 52.75967789]
[74.10755920 44.69213867]
[94.16809845 44.08195877]
[111.71259308 49.97894287]
[124.86935425 60.67758942]
[132.59321594 74.02198029]
[134.73587036 87.75153351]
[149.60151672 85.74837494]
[164.46716309 83.74522400]
[179.33280945 81.74206543]
[194.13058472 79.28736877]
[208.84680176 76.38340759]
[223.56301880 73.47945404]
[238.27923584 70.57549286]
[252.99545288 67.67153168]
[267.71166992 64.76757812]
[282.42788696 61.86361694]
[287.00164795 37.41592789]
[302.03515625 17.70328712]
[324.25659180 6.89587498]
[322.97958374 -8.04966831]
[321.70257568 -22.99521065]
[320.42556763 -37.94075394]
[319.14855957 -52.88629532]
[317.87155151 -67.83184052]
[316.59454346 -82.77738190]
[303.24096680 -90.68064880]
[297.11404419 -104.93688965]
[300.56970215 -120.06428528]
[312.27914429 -130.24604797]
[327.73989868 -131.56707764]
[341.00695801 -123.51940918]
[346.97885132 -109.19754028]
[343.35931396 -94.10852814]
[331.54010010 -84.05438995]
[332.81710815 -69.10884857]
[334.09411621 -54.16330338]
[335.37112427 -39.21776199]
[336.64813232 -24.27221870]
[337.92514038 -9.32667542]
[339.20214844 5.61886740]
[345.81869507 6.40510893]
[352.28564453 8.00987720]
[358.50216675 10.40814781]
[364.37130737 13.56251812]
[369.80154419 17.42379761]
[374.70816040 21.93176842]
[379.01467896 27.01613235]
[392.18383789 19.83468437]
[405.35302734 12.65323830]
[418.52218628 5.47179079]
[431.69134521 -1.70965600]
[428.99441528 -18.15444565]
[432.09658813 -34.50143814]
[440.60418701 -48.77073288]
[453.46990967 -59.24024582]
[469.12176514 -64.65352631]
[485.65515137 -64.37052155]
[501.06457520 -58.44322205]
[513.48687744 -47.60718155]
[526.47723389 -55.10718155]
[539.46765137 -62.60718155]
[552.45800781 -70.10718536]
[556.65234375 -85.10870361]
[569.93322754 -92.52971649]
[584.20904541 -88.43865204]
[592.29168701 -102.03943634]
[607.18249512 -101.70237732]
[620.17291260 -109.20237732]
[633.16326904 -116.70237732]
[646.06134033 -124.35999298]
[658.86523438 -132.17410278]
[661.02581787 -147.66171265]
[672.67071533 -158.09866333]
[688.30157471 -158.55697632]
[700.53802490 -148.82022095]
[703.60229492 -133.48582458]
[696.04760742 -119.79418945]
[681.44104004 -114.21010590]
[666.67938232 -119.37020111]
[653.87548828 -111.55609894]
[651.90576172 -107.23481750]
[647.21606445 -104.09117889]
[640.66326904 -103.71199036]
[627.67291260 -96.21199036]
[614.68249512 -88.71199036]
[607.52899170 -75.64765930]
[591.70904541 -75.44827271]
[588.11413574 -61.03952408]
[575.04687500 -53.24840546]
[559.95800781 -57.11680222]
[546.96765137 -49.61680222]
[533.97723389 -42.11680222]
[520.98687744 -34.61680222]
[524.00091553 -21.52126694]
[523.21118164 -8.08977318]
[518.67199707 4.59393024]
[510.74050903 15.50377846]
[500.04873657 23.75439072]
[487.45318604 28.67292023]
[473.96618652 29.85391998]
[460.67459106 27.19274521]
[448.65213013 20.89475822]
[438.87277222 11.45950603]
[425.70361328 18.64095306]
[412.53445435 25.82239914]
[399.36529541 33.00384521]
[386.19613647 40.18529510]
[389.37750244 54.21442032]
[388.69540405 68.58356476]
[384.19940186 82.24824524]
[376.21630859 94.21518707]
[385.95108032 105.62720490]
[400.79373169 111.10500336]
[403.16699219 125.80931854]
[412.90176392 137.22134399]
[422.63653564 148.63336182]
[432.37130737 160.04537964]
[442.10607910 171.45739746]
[451.84088135 182.86941528]
[461.57565308 194.28143311]
[478.43380737 192.74009705]
[492.74099731 201.47346497]
[498.95101929 216.86347961]
[494.79571533 232.75860596]
[504.66873169 244.05125427]
[514.54174805 255.34388733]
[524.41473389 266.63653564]
[534.28778076 277.92916870]
[544.16076660 289.22180176]
[554.03381348 300.51443481]
[569.72082520 305.29440308]
[573.16070557 321.32873535]
[560.81475830 332.12268066]
[545.38342285 326.57232666]
[542.74114990 310.38745117]
[532.86816406 299.09481812]
[522.99511719 287.80218506]
[513.12213135 276.50952148]
[503.24911499 265.21688843]
[493.37609863 253.92425537]
[483.50308228 242.63162231]
[470.39208984 245.06195068]
[457.68789673 240.66827393]
[448.73675537 230.49493408]
[445.95187378 217.12306213]
[450.16363525 204.01620483]
[440.42886353 192.60418701]
[430.69406128 181.19216919]
[420.95928955 169.78015137]
[411.22451782 158.36813354]
[401.48974609 146.95611572]
[391.75497437 135.54409790]
[377.60861206 130.88256836]
[374.53906250 115.36198425]
[364.80429077 103.94996643]
[354.04348755 109.25531769]
[342.35534668 112.02722168]
[330.32864380 112.11928558]
[318.57067871 109.52027893]
[307.67666626 104.35503387]
[298.19952393 96.87844086]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 112]
[2 111]
[3 110]
[4 109]
[5 108]
[6 107]
[7 106]
[13 105]
[14 104]
[15 103]
[16 102]
[19 41]
[20 40]
[21 39]
[22 38]
[23 37]
[24 36]
[25 33]
[26 32]
[47 61]
[48 60]
[49 59]
[50 58]
[51 57]
[62 73]
[63 72]
[64 71]
[74 96]
[75 95]
[76 94]
[77 93]
[78 91]
[79 90]
[80 89]
[81 88]
[82 87]
[115 136]
[116 135]
[117 134]
[118 133]
[119 132]
[120 131]
[121 130]
[143 203]
[144 202]
[145 201]
[146 200]
[147 199]
[155 189]
[156 188]
[157 187]
[158 186]
[161 183]
[163 181]
[164 180]
[165 179]
[166 176]
[167 175]
[207 251]
[208 250]
[210 248]
[211 247]
[212 246]
[213 245]
[214 244]
[215 243]
[216 242]
[220 237]
[221 236]
[222 235]
[223 234]
[224 233]
[225 232]
[226 231]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
