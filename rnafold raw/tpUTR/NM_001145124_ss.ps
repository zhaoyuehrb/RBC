%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 15:49:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAAGGCACUGUCUUUUUCAGGGAGGUAUCUAAUUUGGUCAGUCACAAAUUCCUUUUUAGCCUUCCCUAGAGAAAAACAAGUCACCAAGAAAAAAUUCACUCUAUGUAGAGGAAAAGUAUUUUCUCUCAUGUUAGUACACGCAGAACAUUUAAUAUUCCACAAUAUAUACGGUUUUUUAUUCA\
) } def
/len { sequence length } bind def

/coor [
[36.94408417 167.48211670]
[26.58028793 156.03060913]
[18.26973152 143.01217651]
[12.24482822 128.79086304]
[8.67406940 113.76438904]
[-6.29096174 114.78802490]
[-21.25599289 115.81166077]
[-30.31864357 125.01132965]
[-42.81995392 125.54345703]
[-52.02137375 117.66802216]
[-67.00170135 118.43601227]
[-81.98202515 119.20399475]
[-95.36795807 127.63771057]
[-108.47467804 120.56217957]
[-123.45500946 121.33016968]
[-138.43533325 122.09815979]
[-153.41566467 122.86614990]
[-168.39598083 123.63413239]
[-183.37631226 124.40212250]
[-198.34953308 125.29796600]
[-213.31457520 126.32160187]
[-228.27960205 127.34523773]
[-243.24462891 128.36888123]
[-258.20965576 129.39251709]
[-273.17468262 130.41615295]
[-288.13973999 131.43978882]
[-294.82269287 140.05961609]
[-304.94265747 143.49493408]
[-315.06665039 140.83616638]
[-321.89935303 133.19918823]
[-336.89062500 133.71130371]
[-351.88186646 134.22341919]
[-366.87313843 134.73553467]
[-375.60565186 147.42604065]
[-389.96844482 152.48210144]
[-404.38385010 148.16242981]
[-413.38378906 136.32438660]
[-428.37503052 136.83650208]
[-434.05145264 150.96795654]
[-444.98944092 161.56420898]
[-459.29388428 166.78939819]
[-474.48648071 165.73822021]
[-487.93502808 158.59280396]
[-497.30944824 146.59114075]
[-500.98559570 131.81257629]
[-498.32653809 116.81759644]
[-489.79299927 104.20417786]
[-476.86343384 96.15765381]
[-461.77798462 94.07215118]
[-447.15029907 98.30899048]
[-435.51470947 108.13410950]
[-428.88714600 121.84524536]
[-413.89590454 121.33312988]
[-405.72482300 108.90850067]
[-391.63778687 103.61515808]
[-376.96343994 107.67927551]
[-367.38525391 119.74427795]
[-352.39398193 119.23216248]
[-337.40274048 118.72003937]
[-322.41146851 118.20792389]
[-306.82446289 106.78874207]
[-289.16336060 116.47475433]
[-274.19833374 115.45111847]
[-259.23330688 114.42748260]
[-244.26826477 113.40384674]
[-229.30323792 112.38021088]
[-214.33821106 111.35657501]
[-199.37316895 110.33293915]
[-192.89900208 106.73108673]
[-184.14430237 109.42179871]
[-169.16397095 108.65380859]
[-154.18365479 107.88581848]
[-139.20332336 107.11782837]
[-124.22299194 106.34984589]
[-109.24266815 105.58185577]
[-96.92823029 97.20307922]
[-82.75001526 104.22367096]
[-67.76969147 103.45568085]
[-52.78936005 102.68769073]
[-38.61103439 92.36366272]
[-22.27962875 100.84663391]
[-7.31459808 99.82299805]
[7.65043354 98.79935455]
[8.81794071 85.31272888]
[11.94436264 72.14163208]
[16.96253204 59.56903458]
[23.76464272 47.86503601]
[32.20456314 37.28108215]
[42.10096741 28.04455566]
[53.24124908 20.35388756]
[65.38607788 14.37430191]
[78.27452850 10.23426056]
[91.62973022 8.02270603]
[105.16474915 7.78715229]
[118.58881378 9.53265762]
[131.61352539 13.22172451]
[143.95906067 18.77509689]
[155.36019897 26.07346916]
[165.57200623 34.96004868]
[177.04435730 25.29645157]
[188.51672363 15.63285637]
[194.36515808 -1.81624436]
[211.73495483 -4.24544573]
[223.04064941 -14.10350037]
[234.34634399 -23.96155548]
[245.65203857 -33.81961060]
[250.07748413 -41.83835602]
[257.23593140 -43.74745178]
[268.70828247 -53.41104889]
[280.18063354 -63.07464218]
[291.65301514 -72.73823547]
[303.12536621 -82.40183258]
[314.59771729 -92.06542969]
[326.07006836 -101.72902679]
[337.54241943 -111.39262390]
[342.61016846 -126.98908997]
[358.70504761 -130.13339233]
[369.27005005 -117.59094238]
[363.43676758 -102.26432800]
[347.20602417 -99.92026520]
[335.73367310 -90.25666809]
[324.26132202 -80.59307861]
[312.78894043 -70.92948151]
[301.31658936 -61.26588440]
[289.84423828 -51.60228729]
[278.37188721 -41.93869400]
[266.89953613 -32.27509689]
[255.51010132 -22.51391602]
[244.20440674 -12.65586090]
[232.89869690 -2.79780531]
[221.59300232 7.06024981]
[220.44937134 19.11764145]
[211.09019470 27.42255402]
[198.18031311 27.10521126]
[186.70796204 36.76880646]
[175.23561096 46.43240356]
[183.67523193 60.90602493]
[189.36116028 76.66620636]
[192.10627747 93.19429016]
[191.82022095 109.94635010]
[188.51243591 126.37107849]
[182.29174805 141.92794800]
[173.36288452 156.10499573]
[184.49862671 166.15463257]
[195.63436890 176.20428467]
[206.77011108 186.25392151]
[217.90585327 196.30355835]
[232.02963257 190.62197876]
[247.15797424 191.63194275]
[260.29385376 199.07969666]
[268.85824585 211.44142151]
[271.19647217 226.23472595]
[266.89770508 240.51708984]
[278.03344727 250.56674194]
[289.16918945 260.61636353]
[300.30493164 270.66601562]
[311.44064331 280.71566772]
[327.58190918 283.61248779]
[332.88851929 299.12933350]
[321.90148926 311.30377197]
[305.92333984 307.61178589]
[301.39102173 291.85140991]
[290.25527954 281.80175781]
[279.11953735 271.75210571]
[267.98379517 261.70248413]
[256.84805298 251.65283203]
[243.08018494 257.38964844]
[228.12530518 256.57650757]
[214.95256042 249.32116699]
[206.20053101 237.01580811]
[203.64877319 222.07005310]
[207.85621643 207.43930054]
[196.72047424 197.38966370]
[185.58473206 187.34001160]
[174.44898987 177.29037476]
[163.31324768 167.24073792]
[151.22267151 176.85130310]
[137.69960022 184.31265259]
[123.12223053 189.41613770]
[107.89823151 192.01902771]
[92.45335388 192.04853821]
[77.21952057 189.50381470]
[62.62276459 184.45605469]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 83]
[6 82]
[7 81]
[10 79]
[11 78]
[12 77]
[14 75]
[15 74]
[16 73]
[17 72]
[18 71]
[19 70]
[20 68]
[21 67]
[22 66]
[23 65]
[24 64]
[25 63]
[26 62]
[30 60]
[31 59]
[32 58]
[33 57]
[37 53]
[38 52]
[99 136]
[100 135]
[101 134]
[103 131]
[104 130]
[105 129]
[106 128]
[108 127]
[109 126]
[110 125]
[111 124]
[112 123]
[113 122]
[114 121]
[115 120]
[143 176]
[144 175]
[145 174]
[146 173]
[147 172]
[153 166]
[154 165]
[155 164]
[156 163]
[157 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
