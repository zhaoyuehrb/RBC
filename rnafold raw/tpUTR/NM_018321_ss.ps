%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 20:24:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCAAUGGAAACCUGAUUUGUUUUUCAGUUACUUUAUAUUUAUUUUGUAUUCAAUGUGUAAAUACUUUUAUUAUCUAAUACUAUCUUACGUCUAAUUAGUGUAGCAUUUACAAGAAAGAAAAAUUAAGAUCUUAAAAUCAGUGAUUAUCUUUUUCUAAAUAAAAUAUCACCAGAAUUCAUCAGUUAA\
) } def
/len { sequence length } bind def

/coor [
[62.85469055 212.18397522]
[63.43239594 197.09858704]
[68.05976105 182.72883606]
[76.39340973 170.14102173]
[87.81492615 160.26927185]
[101.47676086 153.84611511]
[98.98181915 139.05506897]
[96.48687744 124.26401520]
[89.23706055 122.34305573]
[85.39489746 136.84263611]
[70.89538574 133.00022888]
[74.73741150 118.50113678]
[67.48759460 116.58017731]
[57.99593353 128.19519043]
[48.50427628 139.81019592]
[39.01261902 151.42520142]
[43.09198380 166.39645386]
[37.56091309 180.89427185]
[24.54621124 189.34396362]
[9.05229855 188.49642944]
[-2.96309924 178.67758179]
[-6.87981653 163.66294861]
[-1.19179547 149.22598267]
[11.91380310 140.91798401]
[27.39760971 141.93354797]
[36.88926697 130.31854248]
[46.38092804 118.70352936]
[55.87258530 107.08851624]
[41.97433853 112.73110199]
[31.18506432 123.15183258]
[17.16201782 128.47669983]
[2.17538190 127.84366608]
[-11.34867191 121.35521698]
[-21.22074699 110.06175995]
[-25.84266090 95.79158783]
[-24.46617508 80.85487366]
[-17.31412888 67.66972351]
[-5.54436064 58.37066269]
[8.93773270 54.46310806]
[23.78765678 56.57965088]
[36.60137177 64.37764740]
[45.30487442 76.59558868]
[57.93761063 84.68347931]
[50.72888565 71.52923584]
[43.52015686 58.37498474]
[36.31143188 45.22073364]
[29.10270500 32.06648636]
[21.89398003 18.91223717]
[14.68525314 5.75798845]
[10.18801022 3.03063416]
[7.47107887 -0.77398491]
[6.64618540 -4.79188538]
[7.46377087 -8.24102879]
[0.92327118 -21.73998642]
[-5.61722851 -35.23894501]
[-12.15772820 -48.73790359]
[-18.69822884 -62.23686218]
[-28.57270050 -73.52822113]
[-41.07945251 -81.80959320]
[-53.58620071 -90.09097290]
[-66.09294891 -98.37235260]
[-78.59970093 -106.65372467]
[-94.99229431 -107.11729431]
[-102.54801178 -121.67212677]
[-93.49417877 -135.34545898]
[-77.14459991 -134.07135010]
[-70.31832123 -119.16047668]
[-57.81157303 -110.87909698]
[-45.30482483 -102.59772491]
[-32.79807281 -94.31634521]
[-20.29132462 -86.03496552]
[-13.93613434 -90.01762390]
[-21.90144920 -102.72800446]
[-29.86655426 -115.43851471]
[-17.15591049 -123.40341187]
[-9.19107056 -110.69332123]
[-1.22575474 -97.98294067]
[5.12943506 -101.96559906]
[3.13013077 -116.83176422]
[1.13082635 -131.69792175]
[-0.86847800 -146.56408691]
[-2.86778235 -161.43025208]
[-4.86708689 -176.29641724]
[-19.49267769 -180.54046631]
[-31.12342072 -190.37132263]
[-37.74421692 -204.08572388]
[-38.20797348 -219.30757141]
[-32.43434525 -233.39959717]
[-21.42364311 -243.92025757]
[-7.08354044 -249.04679871]
[8.10145283 -247.89100647]
[21.50044632 -240.65312195]
[30.79198074 -228.58717346]
[34.36624527 -213.78363037]
[31.60397530 -198.80732727]
[22.98374939 -186.25299072]
[9.99907589 -178.29571533]
[11.99837971 -163.42955017]
[13.99768448 -148.56338501]
[15.99698830 -133.69723511]
[17.99629211 -118.83106995]
[19.99559784 -103.96490479]
[12.85117054 -77.67551422]
[-5.19927025 -68.77735901]
[1.34122944 -55.27840424]
[7.88172913 -41.77944565]
[14.42222881 -28.28048706]
[20.96272850 -14.78152847]
[27.83950233 -1.45073783]
[35.04822922 11.70351124]
[42.25695419 24.85775948]
[49.46568298 38.01200867]
[56.67440796 51.16625595]
[63.88313293 64.32050323]
[71.09185791 77.47475433]
[101.43782806 65.81420135]
[126.62347412 82.63845062]
[141.45414734 80.39101410]
[156.28483582 78.14357758]
[171.11550903 75.89614105]
[185.94618225 73.64870453]
[200.77687073 71.40126801]
[215.60754395 69.15383148]
[221.02517700 56.46720505]
[231.92074585 48.18401718]
[245.37948608 46.38567734]
[257.86676025 51.43643951]
[266.15634155 61.91588211]
[281.02249146 59.91657639]
[295.88864136 57.91727448]
[310.75482178 55.91796875]
[315.93786621 41.51676559]
[327.22763062 31.18236160]
[342.02978516 27.28952980]
[356.94296265 30.73281288]
[368.54016113 40.72097015]
[374.15646362 54.95879745]
[372.50128174 70.17454529]
[363.95495605 82.87174225]
[350.48138428 90.13267517]
[335.17666626 90.28882599]
[321.55773926 83.30431366]
[312.75411987 70.78413391]
[297.88796997 72.78343201]
[283.02178955 74.78273773]
[268.15563965 76.78204346]
[260.83758545 91.46620941]
[246.06431580 98.97660828]
[229.56062317 96.18095398]
[217.85498047 83.98451233]
[203.02430725 86.23194885]
[188.19361877 88.47938538]
[173.36294556 90.72682190]
[158.53227234 92.97425842]
[143.70158386 95.22169495]
[128.87091064 97.46913147]
[124.47266388 103.54411316]
[138.56529236 108.68200684]
[152.65791321 113.81990814]
[167.64050293 114.54223633]
[179.46969604 123.76559448]
[183.82328796 138.11990356]
[179.11053467 152.36033630]
[167.05342102 161.28367615]
[152.05740356 161.62947083]
[139.60180664 153.27137756]
[134.23762512 139.26255798]
[124.95690155 127.47831726]
[115.67617798 115.69408417]
[111.27793121 121.76907349]
[113.77287292 136.56011963]
[116.26781464 151.35118103]
[131.28068542 152.93751526]
[145.30841064 158.51651001]
[157.31007385 167.67417908]
[166.39503479 179.73095703]
[171.88916016 193.79214478]
[173.38473511 208.81433105]
[170.77076721 223.68273926]
[164.24125671 237.29406738]
[154.28071594 248.63822937]
[141.62828064 256.87344360]
[127.22286987 261.38858032]
[112.13343811 261.84860229]
[97.47972870 258.21936035]
[84.34913635 250.77018738]
[73.71605682 240.05383301]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 172]
[7 171]
[8 170]
[13 28]
[14 27]
[15 26]
[16 25]
[43 115]
[44 114]
[45 113]
[46 112]
[47 111]
[48 110]
[49 109]
[53 108]
[54 107]
[55 106]
[56 105]
[57 104]
[58 71]
[59 70]
[60 69]
[61 68]
[62 67]
[78 102]
[79 101]
[80 100]
[81 99]
[82 98]
[83 97]
[117 156]
[118 155]
[119 154]
[120 153]
[121 152]
[122 151]
[123 150]
[128 146]
[129 145]
[130 144]
[131 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
