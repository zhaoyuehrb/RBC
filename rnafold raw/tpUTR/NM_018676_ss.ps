%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 00:11:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUGAGAAUCAGCCUGAGCUUUACACAGCUGGGGUCUGCUACUCGCGUUUUGUAGACUUUUGUGUAACUAUUUGUACCGUAGGACAGAAUGUGAGGAGGAAGUAACACACAGAGGAGGAUGUGUGUGUAUGCAUGUGUUUGAAUUCACAAGGAAGAAAUUAUUUAUCUUGAGCUUUUUCCUUUGUUAUUCAAUUUCUAUUGAUUUAUUAGUAAUAACAAUGAUAAUAAAAUGUAAAUGAGCAA\
) } def
/len { sequence length } bind def

/coor [
[163.91070557 288.56542969]
[157.90390015 274.82064819]
[151.89709473 261.07589722]
[145.89028931 247.33116150]
[139.88346863 233.58639526]
[133.78829956 219.88059998]
[127.60503387 206.21432495]
[121.42176056 192.54804993]
[115.23847961 178.88177490]
[109.05520630 165.21549988]
[102.87193298 151.54922485]
[87.93281555 150.19912720]
[79.39962006 162.53544617]
[70.86642456 174.87176514]
[62.33323288 187.20806885]
[60.84591675 202.95921326]
[47.24231339 209.02479553]
[38.70912170 221.36111450]
[30.17592621 233.69741821]
[21.64273262 246.03373718]
[24.72235298 261.53506470]
[15.86953926 274.62716675]
[0.33650833 277.54272461]
[-12.66126823 268.55200195]
[-15.41243935 252.98901367]
[-6.28478479 240.08702087]
[9.30642033 237.50053406]
[17.83961296 225.16423035]
[26.37280655 212.82791138]
[34.90600204 200.49160767]
[35.78297043 185.62283325]
[49.99692154 178.67488098]
[58.53011322 166.33856201]
[67.06330872 154.00225830]
[75.59650421 141.66593933]
[59.86637878 122.45796967]
[56.31600952 99.09887695]
[41.28736877 104.04362488]
[30.28175926 94.00740051]
[15.56063747 91.12841797]
[0.53199720 96.07316589]
[-10.47361374 86.03694153]
[-25.19473648 83.15795898]
[-39.91585922 80.27897644]
[-54.63698196 77.39998627]
[-69.35810089 74.52100372]
[-84.07922363 71.64202118]
[-98.80034637 68.76303864]
[-113.52146912 65.88404846]
[-128.24259949 63.00506592]
[-142.96371460 60.12607956]
[-157.68484497 57.24709702]
[-172.40596008 54.36811066]
[-177.30220032 56.04725266]
[-181.89776611 55.72679901]
[-185.48548889 53.85200882]
[-187.63507080 51.08321381]
[-202.23403931 47.63789749]
[-216.83300781 44.19258118]
[-232.04138184 48.55329132]
[-242.65121460 38.09955215]
[-257.25018311 34.65423584]
[-266.29855347 35.72852707]
[-272.01434326 31.06944084]
[-286.56774902 27.43644714]
[-301.12112427 23.80345535]
[-312.92376709 33.87704468]
[-328.39602661 35.05576706]
[-341.58847046 26.88637352]
[-347.42834473 12.51016617]
[-343.67013550 -2.54491067]
[-331.75891113 -12.48987293]
[-316.27478027 -13.50067997]
[-303.17172241 -5.18865490]
[-297.48815918 9.25005817]
[-282.93475342 12.88305092]
[-268.38134766 16.51604271]
[-253.80487061 20.05527115]
[-239.20590210 23.50058746]
[-225.04173279 18.89344788]
[-213.38768005 29.59361649]
[-198.78872681 33.03893280]
[-184.18975830 36.48424911]
[-169.52697754 39.64698792]
[-154.80584717 42.52597427]
[-140.08473206 45.40495682]
[-125.36360931 48.28394318]
[-110.64248657 51.16292953]
[-95.92136383 54.04191208]
[-81.20024109 56.92089844]
[-66.47911835 59.79988098]
[-51.75799561 62.67886734]
[-37.03687286 65.55785370]
[-22.31575012 68.43683624]
[-7.59462833 71.31581879]
[6.38105822 66.16514587]
[18.43962097 76.40729523]
[33.16074371 79.28627777]
[47.13643265 74.13560486]
[59.19499588 84.37775421]
[70.11450195 68.12586975]
[87.03520203 58.27450562]
[85.10922241 43.39866257]
[83.18325043 28.52282333]
[81.16155243 13.65969086]
[79.04420471 -1.19011939]
[76.92686462 -16.03993034]
[74.80952454 -30.88973999]
[72.69217682 -45.73955154]
[70.57483673 -60.58935928]
[68.45749664 -75.43917084]
[58.84968567 -88.00899506]
[64.71298218 -101.70100403]
[51.92324829 -110.98530579]
[49.52708054 -126.60688782]
[58.94608307 -139.29774475]
[74.59213257 -141.52862549]
[87.18269348 -131.97596741]
[89.24802399 -116.30721283]
[79.56278992 -103.81834412]
[89.01915741 -92.31067657]
[83.30730438 -77.55651093]
[85.42464447 -62.70670319]
[87.54199219 -47.85689163]
[89.65933228 -33.00708389]
[91.77667236 -18.15727234]
[93.89402008 -3.30746198]
[96.01136017 11.54234791]
[100.05805206 17.70689011]
[98.05908966 26.59684944]
[99.98506927 41.47268677]
[101.91104126 56.34852982]
[107.51613617 56.95803452]
[112.99608612 58.28423691]
[118.25962830 60.30504990]
[123.21913147 62.98682785]
[127.79201508 66.28491211]
[131.90213013 70.14439392]
[135.48103333 74.50099945]
[148.98358154 67.96789551]
[162.48611450 61.43479156]
[175.98864746 54.90169144]
[189.49119568 48.36858749]
[202.99372864 41.83548355]
[207.95240784 29.94417381]
[219.31541443 24.77560616]
[230.77705383 28.59971046]
[244.36257935 22.24099541]
[257.94812012 15.88227940]
[271.53366089 9.52356339]
[285.07797241 3.07752037]
[298.58050537 -3.45558262]
[312.08303833 -9.98868561]
[325.58560181 -16.52178764]
[339.08813477 -23.05489159]
[352.59066772 -29.58799362]
[366.09320068 -36.12109756]
[376.09539795 -51.59402084]
[393.54092407 -49.60706711]
[406.95822144 -56.31347656]
[420.37554932 -63.01988220]
[423.83462524 -78.27008820]
[436.31826782 -87.68775940]
[451.93209839 -86.82614899]
[463.30374146 -76.09209442]
[465.06384277 -60.55388260]
[456.38131714 -47.54818344]
[441.35583496 -43.21588898]
[427.08193970 -49.60257721]
[413.66464233 -42.89616776]
[400.24734497 -36.18976212]
[396.13269043 -24.82918358]
[385.02792358 -19.12689590]
[372.62631226 -22.61855698]
[359.12377930 -16.08545494]
[345.62121582 -9.55235195]
[332.11868286 -3.01924920]
[318.61614990 3.51385379]
[305.11361694 10.04695702]
[291.61108398 16.58005905]
[286.96917725 22.30980682]
[277.89236450 23.10909653]
[264.30682373 29.46781349]
[250.72129822 35.82653046]
[237.13577271 42.18524551]
[227.86691284 57.09775543]
[209.52684021 55.33802414]
[196.02429199 61.87112808]
[182.52175903 68.40422821]
[169.01921082 74.93733215]
[155.51667786 81.47043610]
[142.01414490 88.00354004]
[144.08541870 95.98982239]
[144.63206482 104.32963562]
[143.59489441 112.73076630]
[140.97093201 120.89139557]
[136.81484985 128.51095581]
[131.23838806 135.30111694]
[124.40763092 140.99671936]
[116.53820801 145.36595154]
[122.72148132 159.03222656]
[128.90475464 172.69850159]
[135.08802795 186.36477661]
[141.27130127 200.03105164]
[147.45458984 213.69732666]
[153.82916260 220.20823669]
[153.62823486 227.57958984]
[159.63504028 241.32434082]
[165.64184570 255.06910706]
[171.64865112 268.81384277]
[177.65545654 282.55859375]
[192.29124451 279.08963013]
[207.31123352 278.28994751]
[222.23262024 280.18524170]
[236.57572937 284.71459961]
[249.87948608 291.73239136]
[261.71624756 301.01306152]
[271.70550537 312.25827026]
[279.52612305 325.10653687]
[284.92672729 339.14480591]
[287.73367310 353.92184448]
[287.85681152 368.96261597]
[285.29208374 383.78359985]
[280.12200928 397.90841675]
[272.51272583 410.88296509]
[262.70889282 422.29019165]
[251.02565002 431.76336670]
[237.83853149 438.99801636]
[223.57148743 443.76153564]
[208.68313599 445.90081787]
[193.65205383 445.34710693]
[178.96145630 442.11816406]
[165.08357239 436.31781006]
[152.46452332 428.13250732]
[141.50994873 417.82534790]
[132.57199097 405.72772217]
[125.93799591 392.22848511]
[121.82118988 377.76156616]
[120.35392761 362.79202271]
[121.58336639 347.80108643]
[125.46998596 333.27062988]
[131.88885498 319.66775513]
[140.63362122 307.42974854]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 211]
[2 210]
[3 209]
[4 208]
[5 207]
[6 205]
[7 204]
[8 203]
[9 202]
[10 201]
[11 200]
[12 35]
[13 34]
[14 33]
[15 32]
[17 30]
[18 29]
[19 28]
[20 27]
[37 100]
[39 98]
[40 97]
[42 95]
[43 94]
[44 93]
[45 92]
[46 91]
[47 90]
[48 89]
[49 88]
[50 87]
[51 86]
[52 85]
[53 84]
[57 83]
[58 82]
[59 81]
[61 79]
[62 78]
[64 77]
[65 76]
[66 75]
[102 132]
[103 131]
[104 130]
[105 128]
[106 127]
[107 126]
[108 125]
[109 124]
[110 123]
[111 122]
[113 120]
[139 192]
[140 191]
[141 190]
[142 189]
[143 188]
[144 187]
[147 185]
[148 184]
[149 183]
[150 182]
[151 180]
[152 179]
[153 178]
[154 177]
[155 176]
[156 175]
[157 174]
[159 171]
[160 170]
[161 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
