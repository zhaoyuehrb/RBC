%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 02:47:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCCUUCACACGGCAAUGUUUGGGGAAACUAAGCCCAGCUGUCUGUGUGGCUAGUGGCACAGUGUGCUAUGUCCGUGGACUCCACAAUCUUGAGGACUCCCGGUGCCUCUCUAGGGCCCUGGUGACCACCAGCCUCCUUUCAGAAACCAGAGUGGGUGGGGUACGGUGGGGUGGGUGGGCGGGAGGGGUGUUUUCAUGGCGCGAUGCACUGUGACUUGUUAUUCAAGUUGUAUGUCUACUGUUCCAUCUAUCACG\
UUUUAUACCUUUCCA\
) } def
/len { sequence length } bind def

/coor [
[140.31445312 177.85670471]
[127.38961029 185.46910095]
[112.50942230 183.57699585]
[101.90100861 172.97221375]
[100.00381470 158.09266663]
[107.61273956 145.16441345]
[98.54467773 157.11305237]
[89.47661591 169.06170654]
[80.40855408 181.01036072]
[71.34049225 192.95899963]
[62.27242661 204.90765381]
[53.20436096 216.85630798]
[44.13629913 228.80494690]
[35.13764572 240.80596924]
[26.20870399 252.85893250]
[25.08834839 259.31594849]
[21.43999672 263.61422729]
[16.93040085 265.08459473]
[7.72443438 276.92733765]
[-1.48153222 288.77005005]
[-4.26277065 297.43209839]
[-10.86350250 300.69589233]
[-20.20613480 312.43109131]
[-29.54876900 324.16632080]
[-24.49286461 338.74169922]
[-28.14181137 353.73129272]
[-39.33124542 364.35205078]
[-54.49066162 367.21487427]
[-68.78273773 361.40625000]
[-77.64693451 348.77969360]
[-78.25470734 333.36431885]
[-70.41212463 320.07907104]
[-56.62173080 313.16326904]
[-41.28398132 314.82366943]
[-31.94134712 303.08847046]
[-22.59871483 291.35327148]
[-13.32425880 279.56408691]
[-4.11829233 267.72137451]
[5.08767462 255.87863159]
[14.15573788 243.92999268]
[23.08467865 231.87702942]
[24.53583717 224.65786743]
[32.18764877 219.73689270]
[41.25571442 207.78823853]
[50.32377625 195.83958435]
[59.39183807 183.89094543]
[68.45989990 171.94229126]
[77.52796936 159.99363708]
[86.59603119 148.04499817]
[95.66409302 136.09634399]
[91.88902283 129.61569214]
[76.88913727 129.67396545]
[84.33888245 116.65438843]
[80.56381226 110.17373657]
[65.69690704 112.16754150]
[50.83000946 114.16134644]
[35.96310806 116.15515137]
[21.09620667 118.14895630]
[6.22930527 120.14276123]
[-8.63759613 122.13655853]
[-23.53250122 130.23458862]
[-35.43737793 118.16354370]
[-27.13366890 103.38231659]
[-10.63140011 107.26966095]
[4.23550129 105.27585602]
[19.10240173 103.28205109]
[33.96930313 101.28824615]
[48.83620453 99.29444122]
[63.70310593 97.30064392]
[78.57000732 95.30683899]
[79.82477570 87.91254425]
[82.33430481 73.12396240]
[83.58907318 65.72966766]
[70.21215057 58.94305801]
[56.83523178 52.15645218]
[47.80241394 51.07271194]
[43.34326172 45.21285248]
[30.04591370 38.27163315]
[16.74856567 31.33041191]
[0.93443179 31.80344772]
[-6.76774502 19.05488968]
[-20.06509209 12.11366844]
[-33.36244202 5.17244816]
[-49.17657471 5.64548397]
[-56.87874985 -7.10307455]
[-70.17610168 -14.04429531]
[-86.52851868 -12.80722332]
[-95.55135345 -26.50103569]
[-87.96267700 -41.03871536]
[-71.56907654 -41.46514130]
[-63.23487854 -27.34164238]
[-49.93753052 -20.40042305]
[-35.07451248 -21.36993980]
[-26.42122078 -8.12489986]
[-13.12387276 -1.18367910]
[0.17347534 5.75754118]
[15.03649330 4.78802299]
[23.68978500 18.03306389]
[36.98713303 24.97428513]
[50.28448105 31.91550446]
[63.62183762 38.77953339]
[76.99875641 45.56613922]
[90.37567902 52.35274887]
[103.75259399 45.56613922]
[106.17636871 30.76325798]
[108.60013580 15.96037579]
[111.02391052 1.15749288]
[113.44768524 -13.64538956]
[108.04195404 -28.51444054]
[117.73411560 -39.82423401]
[120.15788269 -54.62711334]
[122.58165741 -69.43000031]
[120.76346588 -74.24671173]
[120.93402863 -78.82752991]
[122.67692566 -82.46136475]
[125.35568237 -84.70173645]
[128.29269409 -99.41139221]
[131.22970581 -114.12104797]
[134.16671753 -128.83070374]
[137.10372925 -143.54035950]
[140.04074097 -158.25001526]
[135.15530396 -173.29803467]
[145.23484802 -184.26399231]
[148.17185974 -198.97364807]
[151.02355957 -213.70007324]
[153.78985596 -228.44277954]
[156.55615234 -243.18550110]
[155.06533813 -252.16012573]
[159.44091797 -258.08264160]
[162.37792969 -272.79229736]
[165.31494141 -287.50195312]
[160.42948914 -302.54998779]
[170.50903320 -313.51593018]
[173.44604492 -328.22558594]
[166.95802307 -339.34588623]
[169.68286133 -351.51892090]
[179.63336182 -358.35763550]
[182.74070740 -373.03225708]
[185.84803772 -387.70687866]
[188.95536804 -402.38150024]
[178.46389771 -413.81430054]
[176.72959900 -429.23413086]
[184.41932678 -442.71179199]
[198.57624817 -449.06484985]
[213.75672913 -445.85040283]
[224.12356567 -434.30447388]
[225.69049072 -418.86672974]
[217.85499573 -405.47326660]
[203.62998962 -399.27416992]
[200.52265930 -384.59954834]
[197.41532898 -369.92492676]
[194.30798340 -355.25030518]
[200.62469482 -338.86120605]
[188.15570068 -325.28857422]
[185.21868896 -310.57891846]
[190.31420898 -296.58303833]
[180.02459717 -284.56494141]
[177.08758545 -269.85528564]
[174.15057373 -255.14562988]
[171.29887390 -240.41920471]
[168.53256226 -225.67648315]
[165.76626587 -210.93377686]
[167.61471558 -203.80599976]
[162.88151550 -196.03662109]
[159.94450378 -181.32696533]
[165.04002380 -167.33108521]
[154.75039673 -155.31300354]
[151.81338501 -140.60334778]
[148.87637329 -125.89369202]
[145.93936157 -111.18403625]
[143.00234985 -96.47438049]
[140.06533813 -81.76472473]
[137.38453674 -67.00622559]
[134.96076965 -52.20334244]
[132.53698730 -37.40045929]
[138.11608887 -23.59020996]
[128.25056458 -11.22161865]
[125.82678986 3.58126426]
[123.40302277 18.38414764]
[120.97924805 33.18703079]
[118.55548096 47.98991013]
[137.05070496 127.58311462]
[150.09866333 134.98249817]
[163.14660645 142.38188171]
[176.19456482 149.78126526]
[189.24252319 157.18064880]
[202.29048157 164.58001709]
[215.33843994 171.97940063]
[228.38638306 179.37878418]
[241.43434143 186.77816772]
[254.48229980 194.17755127]
[272.35412598 182.03791809]
[293.84527588 180.71942139]
[312.93649292 190.51637268]
[324.31890869 208.62030029]
[324.87026978 229.92465210]
[338.54739380 236.08389282]
[352.22451782 242.24313354]
[365.90167236 248.40237427]
[381.66183472 247.01402283]
[390.08959961 259.29498291]
[403.76672363 265.45422363]
[417.44384766 271.61346436]
[433.20401001 270.22509766]
[441.63180542 282.50604248]
[455.30892944 288.66528320]
[471.06909180 287.27694702]
[479.49685669 299.55789185]
[493.17398071 305.71713257]
[506.88659668 311.79699707]
[520.63421631 317.79727173]
[534.38177490 323.79754639]
[548.12939453 329.79782104]
[561.87701416 335.79809570]
[575.62463379 341.79837036]
[589.37219238 347.79867554]
[603.11981201 353.79895020]
[616.86743164 359.79922485]
[632.26733398 355.30221558]
[645.30139160 364.65594482]
[645.97106934 380.68502808]
[633.76257324 391.09329224]
[618.04125977 387.89645386]
[610.86712646 373.54681396]
[597.11956787 367.54653931]
[583.37194824 361.54626465]
[569.62432861 355.54598999]
[555.87670898 349.54571533]
[542.12915039 343.54544067]
[528.38153076 337.54516602]
[514.63391113 331.54489136]
[500.88632202 325.54458618]
[493.52557373 325.74844360]
[487.01473999 319.39425659]
[473.33761597 313.23501587]
[458.55572510 315.06393433]
[449.14968872 302.34240723]
[435.47256470 296.18316650]
[420.69067383 298.01208496]
[411.28460693 285.29058838]
[397.60748291 279.13134766]
[383.93035889 272.97210693]
[369.14846802 274.80102539]
[359.74240112 262.07949829]
[346.06527710 255.92025757]
[332.38815308 249.76101685]
[318.71102905 243.60177612]
[312.91467285 250.28007507]
[305.79019165 255.53808594]
[297.67855835 259.11776733]
[288.96942139 260.84161377]
[280.08233643 260.62133789]
[271.44656372 258.46246338]
[263.48034668 254.46429443]
[256.57064819 248.81527710]
[251.05438232 241.78425598]
[247.20193481 233.70758057]
[245.20393372 224.97303772]
[245.16188049 216.00128174]
[247.08291626 207.22550964]
[234.03495789 199.82612610]
[220.98701477 192.42674255]
[207.93905640 185.02735901]
[194.89109802 177.62797546]
[181.84313965 170.22859192]
[168.79518127 162.82920837]
[155.74722290 155.42984009]
[142.69927979 148.03045654]
[129.65132141 140.63107300]
[141.74453735 149.50541687]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 50]
[7 49]
[8 48]
[9 47]
[10 46]
[11 45]
[12 44]
[13 43]
[14 41]
[15 40]
[18 39]
[19 38]
[20 37]
[22 36]
[23 35]
[24 34]
[54 70]
[55 69]
[56 68]
[57 67]
[58 66]
[59 65]
[60 64]
[73 103]
[74 102]
[75 101]
[77 100]
[78 99]
[79 98]
[81 96]
[82 95]
[83 94]
[85 92]
[86 91]
[104 181]
[105 180]
[106 179]
[107 178]
[108 177]
[110 175]
[111 174]
[112 173]
[116 172]
[117 171]
[118 170]
[119 169]
[120 168]
[121 167]
[123 165]
[124 164]
[125 162]
[126 161]
[127 160]
[129 159]
[130 158]
[131 157]
[133 155]
[134 154]
[137 152]
[138 151]
[139 150]
[140 149]
[182 269]
[183 268]
[184 267]
[185 266]
[186 265]
[187 264]
[188 263]
[189 262]
[190 261]
[191 260]
[196 247]
[197 246]
[198 245]
[199 244]
[201 242]
[202 241]
[203 240]
[205 238]
[206 237]
[208 235]
[209 234]
[210 232]
[211 231]
[212 230]
[213 229]
[214 228]
[215 227]
[216 226]
[217 225]
[218 224]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
