%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 21:48:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGACUCGGGGAGCAGGGAGGGGGGAAGAGACGUGUGUGCAGGAAACGGGGACGUGGGGAGGGGACCUGCAGGGGCAGCCCCCUGAAGUGCCAAGAGAGCUGAGAGGAGCAGUUGUGACUCUACCCAGGAACAAACUGUGCCUGAACCUGAGGUGCCCAACCCCAAAUAAACCCAAGAUGCUGUGUAUUUUCAGAGGA\
) } def
/len { sequence length } bind def

/coor [
[30.78646278 714.87170410]
[16.27772713 709.03814697]
[8.95878696 695.21905518]
[12.28542137 679.93939209]
[24.68689537 670.41375732]
[25.16042328 655.42126465]
[25.63395119 640.42871094]
[25.98912239 625.43292236]
[26.22591591 610.43481445]
[26.46270943 595.43670654]
[26.69950485 580.43853760]
[26.93629837 565.44042969]
[27.05469894 550.44085693]
[27.05469894 535.44085693]
[27.05469894 520.44085693]
[19.31739807 507.71362305]
[27.05469894 493.91345215]
[27.05469894 478.91345215]
[11.32818031 468.83355713]
[4.79143381 451.17504883]
[10.25034428 432.99749756]
[25.67612076 421.68450928]
[24.96597672 406.70132446]
[24.25583076 391.71813965]
[18.30868530 387.14852905]
[16.34090233 402.01889038]
[2.47885394 407.74981689]
[-9.41523838 398.61032104]
[-7.44713163 383.73999023]
[6.41439486 378.00927734]
[0.46724924 373.43966675]
[-14.19337749 376.61236572]
[-28.85400391 379.78506470]
[-43.51462936 382.95776367]
[-55.36603165 393.43893433]
[-69.44189453 388.56866455]
[-81.29329681 399.04983521]
[-95.36915588 394.17959595]
[-110.02978516 397.35229492]
[-117.15972137 411.26983643]
[-131.58761597 417.30056763]
[-146.50103760 412.59701538]
[-154.85835266 399.38000488]
[-152.71347046 383.89022827]
[-141.07914734 373.44146729]
[-125.44875336 372.96731567]
[-113.20248413 382.69165039]
[-98.54185486 379.51895142]
[-87.73908234 369.26470947]
[-72.61459351 373.90805054]
[-61.81181717 363.65380859]
[-46.68733215 368.29714966]
[-32.02670288 365.12442017]
[-17.36607742 361.95172119]
[-2.70545149 358.77902222]
[8.51012230 348.81857300]
[13.39240074 334.63534546]
[18.27467918 320.45214844]
[23.15695763 306.26895142]
[18.88009071 289.25338745]
[32.86496353 277.28100586]
[37.52273178 263.02249146]
[42.18050385 248.76397705]
[38.77772522 234.26327515]
[50.41775513 223.54785156]
[55.07552338 209.28933716]
[59.73329544 195.03082275]
[64.39106750 180.77232361]
[63.47882080 173.43072510]
[69.23654175 166.32650757]
[74.11882019 152.14329529]
[79.00109863 137.96009827]
[83.88337708 123.77688599]
[65.91858673 110.00640106]
[61.09007645 83.36759949]
[77.43840790 56.37770081]
[72.55612946 42.19449615]
[67.67385101 28.01128769]
[62.79157257 13.82808113]
[50.98383713 3.29774499]
[54.15727997 -11.25486755]
[42.34954834 -21.78520393]
[45.52299118 -36.33781433]
[40.64071274 -50.52102280]
[25.63025475 -54.08329010]
[14.94503307 -65.21116638]
[11.99466133 -80.35378265]
[17.72059250 -94.67918396]
[30.29570198 -103.61619568]
[45.70731735 -104.31304169]
[59.03765106 -96.54736328]
[66.03304291 -82.79716492]
[64.46128082 -67.45007324]
[54.82391739 -55.40330124]
[59.70619583 -41.22009277]
[71.16471863 -31.70423508]
[68.34048462 -16.13714600]
[79.79901123 -6.62128735]
[76.97477722 8.94580269]
[81.85705566 23.12900925]
[86.73933411 37.31221771]
[91.62161255 51.49542236]
[106.60993195 52.08728027]
[112.59539032 38.33321381]
[118.58084869 24.57914925]
[124.56630707 10.82508564]
[119.01914215 -3.73055530]
[125.28517914 -17.59386826]
[139.19593811 -22.79254341]
[145.18139648 -36.54660797]
[142.79335022 -52.77095032]
[155.81623840 -62.73771667]
[170.85322571 -56.19395828]
[172.43556213 -39.87132645]
[158.93547058 -30.56114960]
[152.95001221 -16.80708504]
[158.62663269 -3.08442020]
[152.75245667 10.94942188]
[138.32037354 16.81054306]
[132.33491516 30.56460762]
[126.34945679 44.31867218]
[120.36399841 58.07273865]
[125.77091217 63.27035904]
[140.18028259 59.10263062]
[136.58474731 73.66560364]
[141.99165344 78.86322021]
[155.49884033 72.33972931]
[169.00602722 65.81623840]
[182.51321411 59.29275131]
[191.57502747 46.32378769]
[206.40061951 47.75597763]
[219.90780640 41.23248672]
[233.41499329 34.70899582]
[245.04824829 22.37596512]
[260.11972046 30.14046669]
[256.83084106 46.77235413]
[239.93847656 48.21618271]
[226.43130493 54.73967361]
[212.92411804 61.26316452]
[204.82841492 73.76552582]
[189.03671265 72.79993439]
[175.52952576 79.32342529]
[162.02233887 85.84691620]
[148.51515198 92.37040710]
[138.24795532 118.10285950]
[117.97759247 130.63456726]
[98.06658173 128.65916443]
[93.18430328 142.84237671]
[88.30202484 157.02557373]
[83.41974640 171.20878601]
[78.64957428 185.43008423]
[73.99180603 199.68859863]
[69.33403778 213.94711304]
[64.67626190 228.20562744]
[67.74588776 243.72619629]
[56.43901443 253.42175293]
[51.78124619 267.68026733]
[47.12347412 281.93878174]
[52.25568771 293.77890015]
[48.07553101 305.56307983]
[37.34016418 311.15121460]
[32.45788574 325.33444214]
[27.57560730 339.51763916]
[22.69332886 353.70083618]
[26.99983788 355.53353882]
[31.07588196 358.35269165]
[34.70059967 362.12768555]
[37.65807724 366.77969360]
[39.74771118 372.18252563]
[40.79426193 378.16598511]
[40.65722656 384.52124023]
[39.23900986 391.00799561]
[39.94915771 405.99118042]
[40.65930176 420.97436523]
[51.20545959 425.51037598]
[59.25760651 433.62109375]
[63.67718887 444.10519409]
[63.85968399 455.42999268]
[59.81702805 465.95520020]
[52.17031097 474.17080688]
[42.05469894 478.91345215]
[42.05469894 493.91345215]
[49.79199982 507.71362305]
[42.05469894 520.44085693]
[42.05469894 535.44085693]
[42.05469894 550.44085693]
[45.18657684 559.03228760]
[41.93442917 565.67718506]
[41.69763565 580.67535400]
[41.46084213 595.67346191]
[41.22404861 610.67163086]
[40.98725510 625.66973877]
[43.98311615 634.30950928]
[40.62647629 640.90228271]
[40.15294647 655.89477539]
[39.67941666 670.88732910]
[51.45505524 681.17657471]
[53.81082535 696.63568115]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 196]
[6 195]
[7 194]
[8 192]
[9 191]
[10 190]
[11 189]
[12 188]
[13 186]
[14 185]
[15 184]
[17 182]
[18 181]
[22 174]
[23 173]
[24 172]
[31 55]
[32 54]
[33 53]
[34 52]
[36 50]
[38 48]
[39 47]
[56 164]
[57 163]
[58 162]
[59 161]
[61 158]
[62 157]
[63 156]
[65 154]
[66 153]
[67 152]
[68 151]
[70 150]
[71 149]
[72 148]
[73 147]
[76 102]
[77 101]
[78 100]
[79 99]
[81 97]
[83 95]
[84 94]
[103 122]
[104 121]
[105 120]
[106 119]
[109 116]
[110 115]
[126 144]
[127 143]
[128 142]
[129 141]
[131 139]
[132 138]
[133 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
