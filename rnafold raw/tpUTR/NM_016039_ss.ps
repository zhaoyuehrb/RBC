%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 16:40:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACUUGAGGACUUCAGCUUCUCACCUACUUAGUACAGUUGGGAACCAUACACUUCUGGCAUGUUUGGAAAUCAAAAUGUCACAUUCUCGGGGGAGGAAGCCCAGAAAAUUGGGUAUGUUCUAGAGAUUUACCACCAUUGCUUAUUGCUUUUUUCUUUAAUAAAGUUUAGGAAAGUAGAAUUUUUA\
) } def
/len { sequence length } bind def

/coor [
[107.66269684 299.10574341]
[92.67159271 299.62228394]
[78.56097412 294.53402710]
[67.34951019 284.56890869]
[60.64114380 271.15258789]
[59.39576340 256.20263672]
[52.15179825 269.33749390]
[44.90783310 282.47238159]
[37.66386795 295.60726929]
[30.41990471 308.74212646]
[23.17593956 321.87701416]
[28.97967148 336.39770508]
[24.04278374 351.23553467]
[10.69632244 359.38452148]
[-4.75791931 356.99697876]
[-15.02292252 345.20019531]
[-15.25186634 329.56430054]
[-5.33665085 317.47204590]
[10.04106236 314.63305664]
[17.28502846 301.49816895]
[24.52899170 288.36328125]
[31.77295685 275.22842407]
[39.01692200 262.09353638]
[46.26088715 248.95866394]
[45.80019760 239.09124756]
[53.65737915 231.20747375]
[57.88336945 216.81507874]
[62.10935593 202.42268372]
[66.33534241 188.03028870]
[70.56133270 173.63789368]
[74.78732300 159.24549866]
[66.79741669 155.16609192]
[59.45207596 150.01574707]
[52.89388275 143.89445496]
[47.25015259 136.92103577]
[42.63045502 129.23088074]
[39.12446213 120.97325897]
[36.80023956 112.30849457]
[21.84308243 113.44141388]
[6.89597225 114.69992828]
[-8.04004097 116.08395386]
[-22.97605324 117.46797943]
[-38.18973160 124.94998169]
[-49.59089661 112.40207672]
[-40.68952942 97.97286987]
[-24.36007881 102.53196716]
[-9.42406559 101.14794159]
[5.51194668 99.76391602]
[11.89550781 96.00827789]
[20.71016502 98.48426056]
[35.66732025 97.35134125]
[36.26299667 90.87294769]
[37.50937271 84.48772430]
[39.39373398 78.26087952]
[41.89683533 72.25596619]
[44.99312592 66.53430176]
[48.65099335 61.15429688]
[37.82400894 50.77275848]
[26.99702454 40.39121628]
[16.17004013 30.00967407]
[5.34305525 19.62813377]
[-5.48392963 9.24659157]
[-13.86269665 5.55539227]
[-16.40374756 -1.40145802]
[-27.05480385 -11.96341896]
[-37.70586014 -22.52537918]
[-48.35691452 -33.08734131]
[-64.34130096 -34.45808792]
[-73.11543274 -47.88917923]
[-67.94854736 -63.07742691]
[-52.80423737 -68.37170410]
[-39.29992294 -59.71070480]
[-37.79495621 -43.73839569]
[-27.14389801 -33.17643356]
[-16.49284363 -22.61447525]
[-5.84178734 -12.05251408]
[4.89761162 -1.58039320]
[15.72459602 8.80114841]
[26.55158043 19.18268967]
[37.37856674 29.56422997]
[48.20555115 39.94577026]
[59.03253555 50.32731247]
[72.73672485 41.66970825]
[88.16888428 36.70913315]
[104.35091400 35.75999451]
[120.25717926 38.88244247]
[126.60279846 25.29078674]
[132.94841003 11.69913006]
[139.29403687 -1.89252698]
[134.98559570 -11.90844822]
[136.87361145 -22.42372513]
[144.09413147 -29.99676323]
[154.07905579 -32.28495789]
[160.87768555 -45.65577316]
[167.67631531 -59.02658463]
[174.47494507 -72.39739990]
[173.83282471 -88.20556641]
[186.49829102 -96.04363251]
[185.85617065 -111.85180664]
[198.52163696 -119.68986511]
[205.32026672 -133.06068420]
[212.11889648 -146.43148804]
[218.91752625 -159.80230713]
[225.71615601 -173.17312622]
[220.58204651 -188.12023926]
[227.59587097 -202.28294373]
[242.59643555 -207.25872803]
[256.68417358 -200.09555054]
[261.50109863 -185.04321289]
[254.18939209 -171.03199768]
[239.08695984 -166.37449646]
[232.28833008 -153.00367737]
[225.48971558 -139.63285828]
[218.69108582 -126.26205444]
[211.89245605 -112.89123535]
[213.02085876 -98.03943634]
[199.86909485 -89.24500275]
[200.99749756 -74.39320374]
[187.84574890 -65.59877014]
[181.04711914 -52.22795868]
[174.24848938 -38.85714340]
[167.44987488 -25.48633003]
[169.90827942 -6.31927156]
[152.88568115 4.45309019]
[146.54006958 18.04474831]
[140.19445801 31.63640404]
[133.84883118 45.22806168]
[139.25616455 48.96410370]
[144.25444031 53.23192596]
[148.79161072 57.98705673]
[152.82038879 63.17995453]
[156.29878235 68.75650787]
[159.19056702 74.65860748]
[161.46559143 80.82476044]
[163.10017395 87.19071198]
[164.07725525 93.69013214]
[164.38667297 100.25530243]
[164.02520752 106.81781006]
[162.99659729 113.30927277]
[161.31159973 119.66206360]
[158.98774719 125.80998230]
[171.93591309 133.38261414]
[184.88409424 140.95523071]
[197.83227539 148.52786255]
[210.49829102 146.02044678]
[221.13230896 152.61100769]
[224.31126404 164.29592896]
[237.13040161 172.08500671]
[249.94953918 179.87408447]
[262.76867676 187.66316223]
[275.58779907 195.45223999]
[289.01892090 188.00238037]
[304.37527466 188.28221130]
[317.52606201 196.21646118]
[324.93377686 209.67086792]
[324.60583496 225.02626038]
[316.63037109 238.15211487]
[303.15283203 245.51763916]
[287.79852295 245.14154053]
[274.69775391 237.12500000]
[267.37451172 223.62440491]
[267.79873657 208.27137756]
[254.97959900 200.48229980]
[242.16046143 192.69322205]
[229.34132385 184.90414429]
[216.52218628 177.11506653]
[198.99110413 177.67752075]
[190.25964355 161.47604370]
[177.31146240 153.90341187]
[164.36329651 146.33078003]
[151.41511536 138.75816345]
[123.76283264 159.84176636]
[89.17971802 163.47149658]
[84.95372772 177.86389160]
[80.72773743 192.25628662]
[76.50175476 206.64868164]
[72.27576447 221.04107666]
[68.04977417 235.43347168]
[79.54065704 225.79191589]
[93.79055023 221.10783386]
[108.76084900 222.05136108]
[122.30988312 228.48748779]
[132.49929810 239.49546814]
[137.87141418 253.50048828]
[137.65765381 268.49896240]
[131.88862610 282.34521484]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 24]
[7 23]
[8 22]
[9 21]
[10 20]
[11 19]
[26 178]
[27 177]
[28 176]
[29 175]
[30 174]
[31 173]
[38 51]
[39 50]
[40 48]
[41 47]
[42 46]
[57 82]
[58 81]
[59 80]
[60 79]
[61 78]
[62 77]
[64 76]
[65 75]
[66 74]
[67 73]
[86 127]
[87 126]
[88 125]
[89 124]
[93 122]
[94 121]
[95 120]
[96 119]
[98 117]
[100 115]
[101 114]
[102 113]
[103 112]
[104 111]
[141 171]
[142 170]
[143 169]
[144 168]
[147 166]
[148 165]
[149 164]
[150 163]
[151 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
