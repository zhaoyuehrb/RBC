%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 14:04:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAUGAAUGGCAGAAAGAGGAGUCAUAUUUCAAUACAUCAUGAAAUUCCUUAUAAAAUAUAAUUUUGAGGAAAUAAGUUAAAAACUUCGGAGUUUUUCCUUGCUUAAAUAUUUGAAUCUAAAUUAUUUGUGCUGAACAUUUCGUUAUUUAUAAAUGAAAACCAAUAAAUGUCUAAUUUUUAGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[183.87634277 302.40493774]
[185.67237854 286.30166626]
[194.33815002 272.54177856]
[186.26690674 259.89840698]
[178.19567871 247.25502014]
[170.12443542 234.61163330]
[162.05320740 221.96824646]
[153.98196411 209.32485962]
[145.91073608 196.68147278]
[137.83950806 184.03810120]
[129.76826477 171.39471436]
[123.50657654 167.44059753]
[121.66984558 158.47193909]
[113.81100464 145.69544983]
[105.95216370 132.91896057]
[98.09333038 120.14247131]
[83.73015594 115.81819916]
[70.12379456 122.13221741]
[56.51742935 128.44624329]
[42.91106796 134.76025391]
[29.30470276 141.07427979]
[15.69833946 147.38830566]
[2.09197593 153.70233154]
[15.00751019 161.33049011]
[17.26597786 176.15950012]
[7.20690298 187.28671265]
[-7.77405643 186.53117371]
[-16.66256142 174.44834900]
[-12.92377377 159.92205811]
[-27.00961304 165.07852173]
[-41.09545135 170.23498535]
[-55.18129349 175.39144897]
[-59.30099869 190.35165405]
[-71.44827271 200.00686646]
[-86.95223999 200.64448547]
[-99.85131073 192.01931763]
[-105.18553162 177.44790649]
[-100.90377808 162.53327942]
[-88.65247345 153.01040649]
[-73.14250183 152.54101562]
[-60.33775711 161.30560303]
[-46.25191879 156.14913940]
[-32.16607666 150.99267578]
[-18.08023834 145.83621216]
[-4.22204542 140.09596252]
[9.38431835 133.78193665]
[22.99068260 127.46791840]
[36.59704590 121.15390015]
[50.20341110 114.83987427]
[63.80977249 108.52585602]
[77.41613770 102.21183014]
[79.57827759 95.03025055]
[64.61046600 94.04808807]
[50.00402832 97.46158600]
[37.68825531 88.89877319]
[35.80137253 74.01792145]
[45.59022522 62.65225983]
[60.58636856 62.31217194]
[70.88039398 73.22238159]
[83.90254974 80.66707611]
[86.06468964 73.48549652]
[78.20584869 60.70900726]
[70.34701538 47.93251801]
[62.48817444 35.15603256]
[54.62933350 22.37954330]
[46.77049255 9.60305595]
[38.91165161 -3.17343187]
[31.05281448 -15.94991970]
[23.19397354 -28.72640800]
[15.33513451 -41.50289536]
[0.33091393 -39.06531143]
[-14.46285248 -42.56001282]
[-26.79022217 -51.45407486]
[-34.77136230 -64.39122772]
[-37.18920517 -79.39864349]
[-33.67504883 -94.18779755]
[-24.76477623 -106.50345612]
[-11.81713772 -114.46756744]
[3.19344378 -116.86566925]
[17.97796440 -113.33206177]
[30.28189278 -104.40559387]
[38.22896957 -91.44749451]
[40.60731888 -76.43376923]
[37.05426407 -61.65390778]
[28.11162186 -49.36173630]
[35.97046280 -36.58524704]
[43.82929993 -23.80875969]
[51.68814087 -11.03227139]
[59.54698181 1.74421608]
[67.40582275 14.52070427]
[75.26466370 27.29719162]
[83.12349701 40.07368088]
[90.98233795 52.85016632]
[98.84117889 65.62665558]
[106.29698181 66.43969727]
[105.52557373 51.45954514]
[104.50620270 36.49422073]
[117.85346985 29.64948845]
[129.41159058 39.21034241]
[125.19057465 53.60397339]
[121.20858002 68.06578064]
[128.66438293 68.87881470]
[139.09226990 58.09646225]
[143.12428284 42.79766083]
[157.53395081 39.02790833]
[167.96183777 28.24555206]
[178.38972473 17.46319771]
[188.81761169 6.68084145]
[199.24549866 -4.10151386]
[209.67338562 -14.88386917]
[213.70539856 -30.18267250]
[228.11505127 -33.95242310]
[238.54293823 -44.73477936]
[236.74008179 -60.26808929]
[245.38673401 -73.29763794]
[260.40023804 -77.67127991]
[274.69168091 -71.32390594]
[281.51303101 -57.25255966]
[277.64352417 -42.10129547]
[264.91018677 -33.02407837]
[249.32530212 -34.30689240]
[238.89741516 -23.52453804]
[235.61126709 -8.99696064]
[220.45573425 -4.45598269]
[210.02784729 6.32637262]
[199.59996033 17.10872841]
[189.17207336 27.89108276]
[178.74418640 38.67343903]
[168.31629944 49.45579529]
[165.03015137 63.98337173]
[149.87461853 68.52434540]
[139.44673157 79.30670166]
[152.74137878 86.25309753]
[159.77702332 99.50072479]
[158.08711243 114.40522766]
[148.26409912 125.74137878]
[133.75172424 129.53492737]
[119.63775635 124.45595551]
[110.86981201 112.28363037]
[118.72865295 125.06011963]
[126.58749390 137.83660889]
[134.44633484 150.61309814]
[142.41165161 163.32347107]
[150.48287964 175.96685791]
[158.55412292 188.61024475]
[166.62535095 201.25363159]
[174.69659424 213.89701843]
[182.76782227 226.54039001]
[190.83906555 239.18377686]
[198.91029358 251.82716370]
[206.98153687 264.47055054]
[220.95027161 262.25289917]
[234.66676331 265.52053833]
[246.06498718 273.74728394]
[253.44111633 285.66262817]
[255.70811462 299.44778442]
[252.55587769 313.01333618]
[244.49316406 324.31591797]
[252.35200500 337.09237671]
[260.21084595 349.86886597]
[268.06967163 362.64535522]
[281.86462402 362.68038940]
[293.74404907 369.47772217]
[300.65383911 381.16644287]
[300.87875366 394.63461304]
[294.46701050 406.35748291]
[302.11126709 419.26348877]
[309.75549316 432.16952515]
[317.39974976 445.07556152]
[332.52224731 450.43182373]
[337.62686157 465.64111328]
[328.79779053 479.03613281]
[312.80792236 480.34140015]
[301.92333984 468.55560303]
[304.49374390 452.71978760]
[296.84948730 439.81378174]
[289.20523071 426.90774536]
[281.56097412 414.00173950]
[265.18511963 412.99691772]
[252.50335693 402.32788086]
[248.63430786 386.04235840]
[255.29319763 370.50421143]
[247.43435669 357.72772217]
[239.57551575 344.95123291]
[231.71667480 332.17474365]
[215.86479187 334.11788940]
[200.69570923 328.93927002]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 151]
[4 150]
[5 149]
[6 148]
[7 147]
[8 146]
[9 145]
[10 144]
[11 143]
[13 142]
[14 141]
[15 140]
[16 139]
[17 51]
[18 50]
[19 49]
[20 48]
[21 47]
[22 46]
[23 45]
[29 44]
[30 43]
[31 42]
[32 41]
[61 94]
[62 93]
[63 92]
[64 91]
[65 90]
[66 89]
[67 88]
[68 87]
[69 86]
[70 85]
[102 132]
[103 131]
[105 129]
[106 128]
[107 127]
[108 126]
[109 125]
[110 124]
[112 122]
[113 121]
[158 185]
[159 184]
[160 183]
[161 182]
[166 178]
[167 177]
[168 176]
[169 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
